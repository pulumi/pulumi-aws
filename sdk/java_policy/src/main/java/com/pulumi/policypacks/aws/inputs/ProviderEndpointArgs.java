// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.String;
import javax.annotation.Nullable;


public final class ProviderEndpointArgs {

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="accessanalyzer", flag="unknown_accessanalyzer")
    private String value_accessanalyzer;
    private boolean unknown_accessanalyzer;
    public String accessanalyzer() {
        if (!unknown_accessanalyzer) return value_accessanalyzer;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.accessanalyzer' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="account", flag="unknown_account")
    private String value_account;
    private boolean unknown_account;
    public String account() {
        if (!unknown_account) return value_account;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.account' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="acm", flag="unknown_acm")
    private String value_acm;
    private boolean unknown_acm;
    public String acm() {
        if (!unknown_acm) return value_acm;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.acm' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="acmpca", flag="unknown_acmpca")
    private String value_acmpca;
    private boolean unknown_acmpca;
    public String acmpca() {
        if (!unknown_acmpca) return value_acmpca;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.acmpca' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="amg", flag="unknown_amg")
    private String value_amg;
    private boolean unknown_amg;
    public String amg() {
        if (!unknown_amg) return value_amg;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.amg' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="amp", flag="unknown_amp")
    private String value_amp;
    private boolean unknown_amp;
    public String amp() {
        if (!unknown_amp) return value_amp;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.amp' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="amplify", flag="unknown_amplify")
    private String value_amplify;
    private boolean unknown_amplify;
    public String amplify() {
        if (!unknown_amplify) return value_amplify;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.amplify' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="apigateway", flag="unknown_apigateway")
    private String value_apigateway;
    private boolean unknown_apigateway;
    public String apigateway() {
        if (!unknown_apigateway) return value_apigateway;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.apigateway' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="apigatewayv2", flag="unknown_apigatewayv2")
    private String value_apigatewayv2;
    private boolean unknown_apigatewayv2;
    public String apigatewayv2() {
        if (!unknown_apigatewayv2) return value_apigatewayv2;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.apigatewayv2' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="appautoscaling", flag="unknown_appautoscaling")
    private String value_appautoscaling;
    private boolean unknown_appautoscaling;
    public String appautoscaling() {
        if (!unknown_appautoscaling) return value_appautoscaling;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.appautoscaling' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="appconfig", flag="unknown_appconfig")
    private String value_appconfig;
    private boolean unknown_appconfig;
    public String appconfig() {
        if (!unknown_appconfig) return value_appconfig;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.appconfig' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="appfabric", flag="unknown_appfabric")
    private String value_appfabric;
    private boolean unknown_appfabric;
    public String appfabric() {
        if (!unknown_appfabric) return value_appfabric;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.appfabric' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="appflow", flag="unknown_appflow")
    private String value_appflow;
    private boolean unknown_appflow;
    public String appflow() {
        if (!unknown_appflow) return value_appflow;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.appflow' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="appintegrations", flag="unknown_appintegrations")
    private String value_appintegrations;
    private boolean unknown_appintegrations;
    public String appintegrations() {
        if (!unknown_appintegrations) return value_appintegrations;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.appintegrations' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="appintegrationsservice", flag="unknown_appintegrationsservice")
    private String value_appintegrationsservice;
    private boolean unknown_appintegrationsservice;
    public String appintegrationsservice() {
        if (!unknown_appintegrationsservice) return value_appintegrationsservice;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.appintegrationsservice' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="applicationautoscaling", flag="unknown_applicationautoscaling")
    private String value_applicationautoscaling;
    private boolean unknown_applicationautoscaling;
    public String applicationautoscaling() {
        if (!unknown_applicationautoscaling) return value_applicationautoscaling;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.applicationautoscaling' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="applicationinsights", flag="unknown_applicationinsights")
    private String value_applicationinsights;
    private boolean unknown_applicationinsights;
    public String applicationinsights() {
        if (!unknown_applicationinsights) return value_applicationinsights;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.applicationinsights' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="applicationsignals", flag="unknown_applicationsignals")
    private String value_applicationsignals;
    private boolean unknown_applicationsignals;
    public String applicationsignals() {
        if (!unknown_applicationsignals) return value_applicationsignals;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.applicationsignals' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="appmesh", flag="unknown_appmesh")
    private String value_appmesh;
    private boolean unknown_appmesh;
    public String appmesh() {
        if (!unknown_appmesh) return value_appmesh;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.appmesh' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="appregistry", flag="unknown_appregistry")
    private String value_appregistry;
    private boolean unknown_appregistry;
    public String appregistry() {
        if (!unknown_appregistry) return value_appregistry;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.appregistry' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="apprunner", flag="unknown_apprunner")
    private String value_apprunner;
    private boolean unknown_apprunner;
    public String apprunner() {
        if (!unknown_apprunner) return value_apprunner;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.apprunner' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="appstream", flag="unknown_appstream")
    private String value_appstream;
    private boolean unknown_appstream;
    public String appstream() {
        if (!unknown_appstream) return value_appstream;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.appstream' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="appsync", flag="unknown_appsync")
    private String value_appsync;
    private boolean unknown_appsync;
    public String appsync() {
        if (!unknown_appsync) return value_appsync;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.appsync' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="athena", flag="unknown_athena")
    private String value_athena;
    private boolean unknown_athena;
    public String athena() {
        if (!unknown_athena) return value_athena;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.athena' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="auditmanager", flag="unknown_auditmanager")
    private String value_auditmanager;
    private boolean unknown_auditmanager;
    public String auditmanager() {
        if (!unknown_auditmanager) return value_auditmanager;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.auditmanager' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="autoscaling", flag="unknown_autoscaling")
    private String value_autoscaling;
    private boolean unknown_autoscaling;
    public String autoscaling() {
        if (!unknown_autoscaling) return value_autoscaling;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.autoscaling' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="autoscalingplans", flag="unknown_autoscalingplans")
    private String value_autoscalingplans;
    private boolean unknown_autoscalingplans;
    public String autoscalingplans() {
        if (!unknown_autoscalingplans) return value_autoscalingplans;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.autoscalingplans' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="backup", flag="unknown_backup")
    private String value_backup;
    private boolean unknown_backup;
    public String backup() {
        if (!unknown_backup) return value_backup;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.backup' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="batch", flag="unknown_batch")
    private String value_batch;
    private boolean unknown_batch;
    public String batch() {
        if (!unknown_batch) return value_batch;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.batch' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="bcmdataexports", flag="unknown_bcmdataexports")
    private String value_bcmdataexports;
    private boolean unknown_bcmdataexports;
    public String bcmdataexports() {
        if (!unknown_bcmdataexports) return value_bcmdataexports;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.bcmdataexports' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="beanstalk", flag="unknown_beanstalk")
    private String value_beanstalk;
    private boolean unknown_beanstalk;
    public String beanstalk() {
        if (!unknown_beanstalk) return value_beanstalk;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.beanstalk' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="bedrock", flag="unknown_bedrock")
    private String value_bedrock;
    private boolean unknown_bedrock;
    public String bedrock() {
        if (!unknown_bedrock) return value_bedrock;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.bedrock' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="bedrockagent", flag="unknown_bedrockagent")
    private String value_bedrockagent;
    private boolean unknown_bedrockagent;
    public String bedrockagent() {
        if (!unknown_bedrockagent) return value_bedrockagent;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.bedrockagent' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="billing", flag="unknown_billing")
    private String value_billing;
    private boolean unknown_billing;
    public String billing() {
        if (!unknown_billing) return value_billing;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.billing' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="budgets", flag="unknown_budgets")
    private String value_budgets;
    private boolean unknown_budgets;
    public String budgets() {
        if (!unknown_budgets) return value_budgets;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.budgets' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="ce", flag="unknown_ce")
    private String value_ce;
    private boolean unknown_ce;
    public String ce() {
        if (!unknown_ce) return value_ce;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.ce' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="chatbot", flag="unknown_chatbot")
    private String value_chatbot;
    private boolean unknown_chatbot;
    public String chatbot() {
        if (!unknown_chatbot) return value_chatbot;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.chatbot' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="chime", flag="unknown_chime")
    private String value_chime;
    private boolean unknown_chime;
    public String chime() {
        if (!unknown_chime) return value_chime;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.chime' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="chimesdkmediapipelines", flag="unknown_chimesdkmediapipelines")
    private String value_chimesdkmediapipelines;
    private boolean unknown_chimesdkmediapipelines;
    public String chimesdkmediapipelines() {
        if (!unknown_chimesdkmediapipelines) return value_chimesdkmediapipelines;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.chimesdkmediapipelines' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="chimesdkvoice", flag="unknown_chimesdkvoice")
    private String value_chimesdkvoice;
    private boolean unknown_chimesdkvoice;
    public String chimesdkvoice() {
        if (!unknown_chimesdkvoice) return value_chimesdkvoice;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.chimesdkvoice' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="cleanrooms", flag="unknown_cleanrooms")
    private String value_cleanrooms;
    private boolean unknown_cleanrooms;
    public String cleanrooms() {
        if (!unknown_cleanrooms) return value_cleanrooms;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.cleanrooms' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="cloud9", flag="unknown_cloud9")
    private String value_cloud9;
    private boolean unknown_cloud9;
    public String cloud9() {
        if (!unknown_cloud9) return value_cloud9;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.cloud9' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="cloudcontrol", flag="unknown_cloudcontrol")
    private String value_cloudcontrol;
    private boolean unknown_cloudcontrol;
    public String cloudcontrol() {
        if (!unknown_cloudcontrol) return value_cloudcontrol;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.cloudcontrol' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="cloudcontrolapi", flag="unknown_cloudcontrolapi")
    private String value_cloudcontrolapi;
    private boolean unknown_cloudcontrolapi;
    public String cloudcontrolapi() {
        if (!unknown_cloudcontrolapi) return value_cloudcontrolapi;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.cloudcontrolapi' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="cloudformation", flag="unknown_cloudformation")
    private String value_cloudformation;
    private boolean unknown_cloudformation;
    public String cloudformation() {
        if (!unknown_cloudformation) return value_cloudformation;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.cloudformation' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="cloudfront", flag="unknown_cloudfront")
    private String value_cloudfront;
    private boolean unknown_cloudfront;
    public String cloudfront() {
        if (!unknown_cloudfront) return value_cloudfront;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.cloudfront' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="cloudfrontkeyvaluestore", flag="unknown_cloudfrontkeyvaluestore")
    private String value_cloudfrontkeyvaluestore;
    private boolean unknown_cloudfrontkeyvaluestore;
    public String cloudfrontkeyvaluestore() {
        if (!unknown_cloudfrontkeyvaluestore) return value_cloudfrontkeyvaluestore;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.cloudfrontkeyvaluestore' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="cloudhsm", flag="unknown_cloudhsm")
    private String value_cloudhsm;
    private boolean unknown_cloudhsm;
    public String cloudhsm() {
        if (!unknown_cloudhsm) return value_cloudhsm;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.cloudhsm' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="cloudhsmv2", flag="unknown_cloudhsmv2")
    private String value_cloudhsmv2;
    private boolean unknown_cloudhsmv2;
    public String cloudhsmv2() {
        if (!unknown_cloudhsmv2) return value_cloudhsmv2;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.cloudhsmv2' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="cloudsearch", flag="unknown_cloudsearch")
    private String value_cloudsearch;
    private boolean unknown_cloudsearch;
    public String cloudsearch() {
        if (!unknown_cloudsearch) return value_cloudsearch;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.cloudsearch' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="cloudtrail", flag="unknown_cloudtrail")
    private String value_cloudtrail;
    private boolean unknown_cloudtrail;
    public String cloudtrail() {
        if (!unknown_cloudtrail) return value_cloudtrail;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.cloudtrail' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="cloudwatch", flag="unknown_cloudwatch")
    private String value_cloudwatch;
    private boolean unknown_cloudwatch;
    public String cloudwatch() {
        if (!unknown_cloudwatch) return value_cloudwatch;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.cloudwatch' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="cloudwatchevents", flag="unknown_cloudwatchevents")
    private String value_cloudwatchevents;
    private boolean unknown_cloudwatchevents;
    public String cloudwatchevents() {
        if (!unknown_cloudwatchevents) return value_cloudwatchevents;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.cloudwatchevents' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="cloudwatchevidently", flag="unknown_cloudwatchevidently")
    private String value_cloudwatchevidently;
    private boolean unknown_cloudwatchevidently;
    public String cloudwatchevidently() {
        if (!unknown_cloudwatchevidently) return value_cloudwatchevidently;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.cloudwatchevidently' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="cloudwatchlog", flag="unknown_cloudwatchlog")
    private String value_cloudwatchlog;
    private boolean unknown_cloudwatchlog;
    public String cloudwatchlog() {
        if (!unknown_cloudwatchlog) return value_cloudwatchlog;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.cloudwatchlog' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="cloudwatchlogs", flag="unknown_cloudwatchlogs")
    private String value_cloudwatchlogs;
    private boolean unknown_cloudwatchlogs;
    public String cloudwatchlogs() {
        if (!unknown_cloudwatchlogs) return value_cloudwatchlogs;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.cloudwatchlogs' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="cloudwatchobservabilityaccessmanager", flag="unknown_cloudwatchobservabilityaccessmanager")
    private String value_cloudwatchobservabilityaccessmanager;
    private boolean unknown_cloudwatchobservabilityaccessmanager;
    public String cloudwatchobservabilityaccessmanager() {
        if (!unknown_cloudwatchobservabilityaccessmanager) return value_cloudwatchobservabilityaccessmanager;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.cloudwatchobservabilityaccessmanager' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="cloudwatchrum", flag="unknown_cloudwatchrum")
    private String value_cloudwatchrum;
    private boolean unknown_cloudwatchrum;
    public String cloudwatchrum() {
        if (!unknown_cloudwatchrum) return value_cloudwatchrum;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.cloudwatchrum' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="codeartifact", flag="unknown_codeartifact")
    private String value_codeartifact;
    private boolean unknown_codeartifact;
    public String codeartifact() {
        if (!unknown_codeartifact) return value_codeartifact;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.codeartifact' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="codebuild", flag="unknown_codebuild")
    private String value_codebuild;
    private boolean unknown_codebuild;
    public String codebuild() {
        if (!unknown_codebuild) return value_codebuild;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.codebuild' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="codecatalyst", flag="unknown_codecatalyst")
    private String value_codecatalyst;
    private boolean unknown_codecatalyst;
    public String codecatalyst() {
        if (!unknown_codecatalyst) return value_codecatalyst;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.codecatalyst' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="codecommit", flag="unknown_codecommit")
    private String value_codecommit;
    private boolean unknown_codecommit;
    public String codecommit() {
        if (!unknown_codecommit) return value_codecommit;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.codecommit' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="codeconnections", flag="unknown_codeconnections")
    private String value_codeconnections;
    private boolean unknown_codeconnections;
    public String codeconnections() {
        if (!unknown_codeconnections) return value_codeconnections;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.codeconnections' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="codedeploy", flag="unknown_codedeploy")
    private String value_codedeploy;
    private boolean unknown_codedeploy;
    public String codedeploy() {
        if (!unknown_codedeploy) return value_codedeploy;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.codedeploy' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="codeguruprofiler", flag="unknown_codeguruprofiler")
    private String value_codeguruprofiler;
    private boolean unknown_codeguruprofiler;
    public String codeguruprofiler() {
        if (!unknown_codeguruprofiler) return value_codeguruprofiler;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.codeguruprofiler' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="codegurureviewer", flag="unknown_codegurureviewer")
    private String value_codegurureviewer;
    private boolean unknown_codegurureviewer;
    public String codegurureviewer() {
        if (!unknown_codegurureviewer) return value_codegurureviewer;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.codegurureviewer' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="codepipeline", flag="unknown_codepipeline")
    private String value_codepipeline;
    private boolean unknown_codepipeline;
    public String codepipeline() {
        if (!unknown_codepipeline) return value_codepipeline;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.codepipeline' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="codestarconnections", flag="unknown_codestarconnections")
    private String value_codestarconnections;
    private boolean unknown_codestarconnections;
    public String codestarconnections() {
        if (!unknown_codestarconnections) return value_codestarconnections;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.codestarconnections' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="codestarnotifications", flag="unknown_codestarnotifications")
    private String value_codestarnotifications;
    private boolean unknown_codestarnotifications;
    public String codestarnotifications() {
        if (!unknown_codestarnotifications) return value_codestarnotifications;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.codestarnotifications' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="cognitoidentity", flag="unknown_cognitoidentity")
    private String value_cognitoidentity;
    private boolean unknown_cognitoidentity;
    public String cognitoidentity() {
        if (!unknown_cognitoidentity) return value_cognitoidentity;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.cognitoidentity' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="cognitoidentityprovider", flag="unknown_cognitoidentityprovider")
    private String value_cognitoidentityprovider;
    private boolean unknown_cognitoidentityprovider;
    public String cognitoidentityprovider() {
        if (!unknown_cognitoidentityprovider) return value_cognitoidentityprovider;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.cognitoidentityprovider' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="cognitoidp", flag="unknown_cognitoidp")
    private String value_cognitoidp;
    private boolean unknown_cognitoidp;
    public String cognitoidp() {
        if (!unknown_cognitoidp) return value_cognitoidp;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.cognitoidp' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="comprehend", flag="unknown_comprehend")
    private String value_comprehend;
    private boolean unknown_comprehend;
    public String comprehend() {
        if (!unknown_comprehend) return value_comprehend;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.comprehend' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="computeoptimizer", flag="unknown_computeoptimizer")
    private String value_computeoptimizer;
    private boolean unknown_computeoptimizer;
    public String computeoptimizer() {
        if (!unknown_computeoptimizer) return value_computeoptimizer;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.computeoptimizer' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="config", flag="unknown_config")
    private String value_config;
    private boolean unknown_config;
    public String config() {
        if (!unknown_config) return value_config;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.config' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="configservice", flag="unknown_configservice")
    private String value_configservice;
    private boolean unknown_configservice;
    public String configservice() {
        if (!unknown_configservice) return value_configservice;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.configservice' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="connect", flag="unknown_connect")
    private String value_connect;
    private boolean unknown_connect;
    public String connect() {
        if (!unknown_connect) return value_connect;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.connect' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="connectcases", flag="unknown_connectcases")
    private String value_connectcases;
    private boolean unknown_connectcases;
    public String connectcases() {
        if (!unknown_connectcases) return value_connectcases;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.connectcases' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="controltower", flag="unknown_controltower")
    private String value_controltower;
    private boolean unknown_controltower;
    public String controltower() {
        if (!unknown_controltower) return value_controltower;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.controltower' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="costandusagereportservice", flag="unknown_costandusagereportservice")
    private String value_costandusagereportservice;
    private boolean unknown_costandusagereportservice;
    public String costandusagereportservice() {
        if (!unknown_costandusagereportservice) return value_costandusagereportservice;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.costandusagereportservice' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="costexplorer", flag="unknown_costexplorer")
    private String value_costexplorer;
    private boolean unknown_costexplorer;
    public String costexplorer() {
        if (!unknown_costexplorer) return value_costexplorer;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.costexplorer' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="costoptimizationhub", flag="unknown_costoptimizationhub")
    private String value_costoptimizationhub;
    private boolean unknown_costoptimizationhub;
    public String costoptimizationhub() {
        if (!unknown_costoptimizationhub) return value_costoptimizationhub;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.costoptimizationhub' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="cur", flag="unknown_cur")
    private String value_cur;
    private boolean unknown_cur;
    public String cur() {
        if (!unknown_cur) return value_cur;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.cur' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="customerprofiles", flag="unknown_customerprofiles")
    private String value_customerprofiles;
    private boolean unknown_customerprofiles;
    public String customerprofiles() {
        if (!unknown_customerprofiles) return value_customerprofiles;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.customerprofiles' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="databasemigration", flag="unknown_databasemigration")
    private String value_databasemigration;
    private boolean unknown_databasemigration;
    public String databasemigration() {
        if (!unknown_databasemigration) return value_databasemigration;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.databasemigration' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="databasemigrationservice", flag="unknown_databasemigrationservice")
    private String value_databasemigrationservice;
    private boolean unknown_databasemigrationservice;
    public String databasemigrationservice() {
        if (!unknown_databasemigrationservice) return value_databasemigrationservice;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.databasemigrationservice' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="databrew", flag="unknown_databrew")
    private String value_databrew;
    private boolean unknown_databrew;
    public String databrew() {
        if (!unknown_databrew) return value_databrew;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.databrew' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="dataexchange", flag="unknown_dataexchange")
    private String value_dataexchange;
    private boolean unknown_dataexchange;
    public String dataexchange() {
        if (!unknown_dataexchange) return value_dataexchange;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.dataexchange' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="datapipeline", flag="unknown_datapipeline")
    private String value_datapipeline;
    private boolean unknown_datapipeline;
    public String datapipeline() {
        if (!unknown_datapipeline) return value_datapipeline;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.datapipeline' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="datasync", flag="unknown_datasync")
    private String value_datasync;
    private boolean unknown_datasync;
    public String datasync() {
        if (!unknown_datasync) return value_datasync;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.datasync' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="datazone", flag="unknown_datazone")
    private String value_datazone;
    private boolean unknown_datazone;
    public String datazone() {
        if (!unknown_datazone) return value_datazone;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.datazone' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="dax", flag="unknown_dax")
    private String value_dax;
    private boolean unknown_dax;
    public String dax() {
        if (!unknown_dax) return value_dax;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.dax' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="deploy", flag="unknown_deploy")
    private String value_deploy;
    private boolean unknown_deploy;
    public String deploy() {
        if (!unknown_deploy) return value_deploy;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.deploy' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="detective", flag="unknown_detective")
    private String value_detective;
    private boolean unknown_detective;
    public String detective() {
        if (!unknown_detective) return value_detective;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.detective' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="devicefarm", flag="unknown_devicefarm")
    private String value_devicefarm;
    private boolean unknown_devicefarm;
    public String devicefarm() {
        if (!unknown_devicefarm) return value_devicefarm;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.devicefarm' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="devopsguru", flag="unknown_devopsguru")
    private String value_devopsguru;
    private boolean unknown_devopsguru;
    public String devopsguru() {
        if (!unknown_devopsguru) return value_devopsguru;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.devopsguru' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="directconnect", flag="unknown_directconnect")
    private String value_directconnect;
    private boolean unknown_directconnect;
    public String directconnect() {
        if (!unknown_directconnect) return value_directconnect;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.directconnect' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="directoryservice", flag="unknown_directoryservice")
    private String value_directoryservice;
    private boolean unknown_directoryservice;
    public String directoryservice() {
        if (!unknown_directoryservice) return value_directoryservice;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.directoryservice' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="dlm", flag="unknown_dlm")
    private String value_dlm;
    private boolean unknown_dlm;
    public String dlm() {
        if (!unknown_dlm) return value_dlm;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.dlm' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="dms", flag="unknown_dms")
    private String value_dms;
    private boolean unknown_dms;
    public String dms() {
        if (!unknown_dms) return value_dms;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.dms' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="docdb", flag="unknown_docdb")
    private String value_docdb;
    private boolean unknown_docdb;
    public String docdb() {
        if (!unknown_docdb) return value_docdb;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.docdb' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="docdbelastic", flag="unknown_docdbelastic")
    private String value_docdbelastic;
    private boolean unknown_docdbelastic;
    public String docdbelastic() {
        if (!unknown_docdbelastic) return value_docdbelastic;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.docdbelastic' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="drs", flag="unknown_drs")
    private String value_drs;
    private boolean unknown_drs;
    public String drs() {
        if (!unknown_drs) return value_drs;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.drs' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="ds", flag="unknown_ds")
    private String value_ds;
    private boolean unknown_ds;
    public String ds() {
        if (!unknown_ds) return value_ds;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.ds' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="dsql", flag="unknown_dsql")
    private String value_dsql;
    private boolean unknown_dsql;
    public String dsql() {
        if (!unknown_dsql) return value_dsql;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.dsql' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="dynamodb", flag="unknown_dynamodb")
    private String value_dynamodb;
    private boolean unknown_dynamodb;
    public String dynamodb() {
        if (!unknown_dynamodb) return value_dynamodb;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.dynamodb' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="ec2", flag="unknown_ec2")
    private String value_ec2;
    private boolean unknown_ec2;
    public String ec2() {
        if (!unknown_ec2) return value_ec2;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.ec2' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="ecr", flag="unknown_ecr")
    private String value_ecr;
    private boolean unknown_ecr;
    public String ecr() {
        if (!unknown_ecr) return value_ecr;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.ecr' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="ecrpublic", flag="unknown_ecrpublic")
    private String value_ecrpublic;
    private boolean unknown_ecrpublic;
    public String ecrpublic() {
        if (!unknown_ecrpublic) return value_ecrpublic;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.ecrpublic' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="ecs", flag="unknown_ecs")
    private String value_ecs;
    private boolean unknown_ecs;
    public String ecs() {
        if (!unknown_ecs) return value_ecs;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.ecs' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="efs", flag="unknown_efs")
    private String value_efs;
    private boolean unknown_efs;
    public String efs() {
        if (!unknown_efs) return value_efs;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.efs' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="eks", flag="unknown_eks")
    private String value_eks;
    private boolean unknown_eks;
    public String eks() {
        if (!unknown_eks) return value_eks;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.eks' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="elasticache", flag="unknown_elasticache")
    private String value_elasticache;
    private boolean unknown_elasticache;
    public String elasticache() {
        if (!unknown_elasticache) return value_elasticache;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.elasticache' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="elasticbeanstalk", flag="unknown_elasticbeanstalk")
    private String value_elasticbeanstalk;
    private boolean unknown_elasticbeanstalk;
    public String elasticbeanstalk() {
        if (!unknown_elasticbeanstalk) return value_elasticbeanstalk;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.elasticbeanstalk' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="elasticloadbalancing", flag="unknown_elasticloadbalancing")
    private String value_elasticloadbalancing;
    private boolean unknown_elasticloadbalancing;
    public String elasticloadbalancing() {
        if (!unknown_elasticloadbalancing) return value_elasticloadbalancing;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.elasticloadbalancing' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="elasticloadbalancingv2", flag="unknown_elasticloadbalancingv2")
    private String value_elasticloadbalancingv2;
    private boolean unknown_elasticloadbalancingv2;
    public String elasticloadbalancingv2() {
        if (!unknown_elasticloadbalancingv2) return value_elasticloadbalancingv2;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.elasticloadbalancingv2' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="elasticsearch", flag="unknown_elasticsearch")
    private String value_elasticsearch;
    private boolean unknown_elasticsearch;
    public String elasticsearch() {
        if (!unknown_elasticsearch) return value_elasticsearch;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.elasticsearch' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="elasticsearchservice", flag="unknown_elasticsearchservice")
    private String value_elasticsearchservice;
    private boolean unknown_elasticsearchservice;
    public String elasticsearchservice() {
        if (!unknown_elasticsearchservice) return value_elasticsearchservice;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.elasticsearchservice' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="elastictranscoder", flag="unknown_elastictranscoder")
    private String value_elastictranscoder;
    private boolean unknown_elastictranscoder;
    public String elastictranscoder() {
        if (!unknown_elastictranscoder) return value_elastictranscoder;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.elastictranscoder' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="elb", flag="unknown_elb")
    private String value_elb;
    private boolean unknown_elb;
    public String elb() {
        if (!unknown_elb) return value_elb;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.elb' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="elbv2", flag="unknown_elbv2")
    private String value_elbv2;
    private boolean unknown_elbv2;
    public String elbv2() {
        if (!unknown_elbv2) return value_elbv2;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.elbv2' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="emr", flag="unknown_emr")
    private String value_emr;
    private boolean unknown_emr;
    public String emr() {
        if (!unknown_emr) return value_emr;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.emr' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="emrcontainers", flag="unknown_emrcontainers")
    private String value_emrcontainers;
    private boolean unknown_emrcontainers;
    public String emrcontainers() {
        if (!unknown_emrcontainers) return value_emrcontainers;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.emrcontainers' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="emrserverless", flag="unknown_emrserverless")
    private String value_emrserverless;
    private boolean unknown_emrserverless;
    public String emrserverless() {
        if (!unknown_emrserverless) return value_emrserverless;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.emrserverless' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="es", flag="unknown_es")
    private String value_es;
    private boolean unknown_es;
    public String es() {
        if (!unknown_es) return value_es;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.es' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="eventbridge", flag="unknown_eventbridge")
    private String value_eventbridge;
    private boolean unknown_eventbridge;
    public String eventbridge() {
        if (!unknown_eventbridge) return value_eventbridge;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.eventbridge' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="events", flag="unknown_events")
    private String value_events;
    private boolean unknown_events;
    public String events() {
        if (!unknown_events) return value_events;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.events' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="evidently", flag="unknown_evidently")
    private String value_evidently;
    private boolean unknown_evidently;
    public String evidently() {
        if (!unknown_evidently) return value_evidently;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.evidently' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="finspace", flag="unknown_finspace")
    private String value_finspace;
    private boolean unknown_finspace;
    public String finspace() {
        if (!unknown_finspace) return value_finspace;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.finspace' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="firehose", flag="unknown_firehose")
    private String value_firehose;
    private boolean unknown_firehose;
    public String firehose() {
        if (!unknown_firehose) return value_firehose;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.firehose' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="fis", flag="unknown_fis")
    private String value_fis;
    private boolean unknown_fis;
    public String fis() {
        if (!unknown_fis) return value_fis;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.fis' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="fms", flag="unknown_fms")
    private String value_fms;
    private boolean unknown_fms;
    public String fms() {
        if (!unknown_fms) return value_fms;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.fms' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="fsx", flag="unknown_fsx")
    private String value_fsx;
    private boolean unknown_fsx;
    public String fsx() {
        if (!unknown_fsx) return value_fsx;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.fsx' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="gamelift", flag="unknown_gamelift")
    private String value_gamelift;
    private boolean unknown_gamelift;
    public String gamelift() {
        if (!unknown_gamelift) return value_gamelift;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.gamelift' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="glacier", flag="unknown_glacier")
    private String value_glacier;
    private boolean unknown_glacier;
    public String glacier() {
        if (!unknown_glacier) return value_glacier;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.glacier' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="globalaccelerator", flag="unknown_globalaccelerator")
    private String value_globalaccelerator;
    private boolean unknown_globalaccelerator;
    public String globalaccelerator() {
        if (!unknown_globalaccelerator) return value_globalaccelerator;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.globalaccelerator' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="glue", flag="unknown_glue")
    private String value_glue;
    private boolean unknown_glue;
    public String glue() {
        if (!unknown_glue) return value_glue;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.glue' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="gluedatabrew", flag="unknown_gluedatabrew")
    private String value_gluedatabrew;
    private boolean unknown_gluedatabrew;
    public String gluedatabrew() {
        if (!unknown_gluedatabrew) return value_gluedatabrew;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.gluedatabrew' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="grafana", flag="unknown_grafana")
    private String value_grafana;
    private boolean unknown_grafana;
    public String grafana() {
        if (!unknown_grafana) return value_grafana;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.grafana' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="greengrass", flag="unknown_greengrass")
    private String value_greengrass;
    private boolean unknown_greengrass;
    public String greengrass() {
        if (!unknown_greengrass) return value_greengrass;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.greengrass' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="groundstation", flag="unknown_groundstation")
    private String value_groundstation;
    private boolean unknown_groundstation;
    public String groundstation() {
        if (!unknown_groundstation) return value_groundstation;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.groundstation' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="guardduty", flag="unknown_guardduty")
    private String value_guardduty;
    private boolean unknown_guardduty;
    public String guardduty() {
        if (!unknown_guardduty) return value_guardduty;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.guardduty' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="healthlake", flag="unknown_healthlake")
    private String value_healthlake;
    private boolean unknown_healthlake;
    public String healthlake() {
        if (!unknown_healthlake) return value_healthlake;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.healthlake' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="iam", flag="unknown_iam")
    private String value_iam;
    private boolean unknown_iam;
    public String iam() {
        if (!unknown_iam) return value_iam;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.iam' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="identitystore", flag="unknown_identitystore")
    private String value_identitystore;
    private boolean unknown_identitystore;
    public String identitystore() {
        if (!unknown_identitystore) return value_identitystore;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.identitystore' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="imagebuilder", flag="unknown_imagebuilder")
    private String value_imagebuilder;
    private boolean unknown_imagebuilder;
    public String imagebuilder() {
        if (!unknown_imagebuilder) return value_imagebuilder;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.imagebuilder' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="inspector", flag="unknown_inspector")
    private String value_inspector;
    private boolean unknown_inspector;
    public String inspector() {
        if (!unknown_inspector) return value_inspector;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.inspector' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="inspector2", flag="unknown_inspector2")
    private String value_inspector2;
    private boolean unknown_inspector2;
    public String inspector2() {
        if (!unknown_inspector2) return value_inspector2;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.inspector2' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="inspectorv2", flag="unknown_inspectorv2")
    private String value_inspectorv2;
    private boolean unknown_inspectorv2;
    public String inspectorv2() {
        if (!unknown_inspectorv2) return value_inspectorv2;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.inspectorv2' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="internetmonitor", flag="unknown_internetmonitor")
    private String value_internetmonitor;
    private boolean unknown_internetmonitor;
    public String internetmonitor() {
        if (!unknown_internetmonitor) return value_internetmonitor;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.internetmonitor' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="invoicing", flag="unknown_invoicing")
    private String value_invoicing;
    private boolean unknown_invoicing;
    public String invoicing() {
        if (!unknown_invoicing) return value_invoicing;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.invoicing' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="iot", flag="unknown_iot")
    private String value_iot;
    private boolean unknown_iot;
    public String iot() {
        if (!unknown_iot) return value_iot;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.iot' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="iotanalytics", flag="unknown_iotanalytics")
    private String value_iotanalytics;
    private boolean unknown_iotanalytics;
    public String iotanalytics() {
        if (!unknown_iotanalytics) return value_iotanalytics;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.iotanalytics' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="iotevents", flag="unknown_iotevents")
    private String value_iotevents;
    private boolean unknown_iotevents;
    public String iotevents() {
        if (!unknown_iotevents) return value_iotevents;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.iotevents' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="ivs", flag="unknown_ivs")
    private String value_ivs;
    private boolean unknown_ivs;
    public String ivs() {
        if (!unknown_ivs) return value_ivs;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.ivs' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="ivschat", flag="unknown_ivschat")
    private String value_ivschat;
    private boolean unknown_ivschat;
    public String ivschat() {
        if (!unknown_ivschat) return value_ivschat;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.ivschat' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="kafka", flag="unknown_kafka")
    private String value_kafka;
    private boolean unknown_kafka;
    public String kafka() {
        if (!unknown_kafka) return value_kafka;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.kafka' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="kafkaconnect", flag="unknown_kafkaconnect")
    private String value_kafkaconnect;
    private boolean unknown_kafkaconnect;
    public String kafkaconnect() {
        if (!unknown_kafkaconnect) return value_kafkaconnect;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.kafkaconnect' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="kendra", flag="unknown_kendra")
    private String value_kendra;
    private boolean unknown_kendra;
    public String kendra() {
        if (!unknown_kendra) return value_kendra;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.kendra' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="keyspaces", flag="unknown_keyspaces")
    private String value_keyspaces;
    private boolean unknown_keyspaces;
    public String keyspaces() {
        if (!unknown_keyspaces) return value_keyspaces;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.keyspaces' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="kinesis", flag="unknown_kinesis")
    private String value_kinesis;
    private boolean unknown_kinesis;
    public String kinesis() {
        if (!unknown_kinesis) return value_kinesis;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.kinesis' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="kinesisanalytics", flag="unknown_kinesisanalytics")
    private String value_kinesisanalytics;
    private boolean unknown_kinesisanalytics;
    public String kinesisanalytics() {
        if (!unknown_kinesisanalytics) return value_kinesisanalytics;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.kinesisanalytics' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="kinesisanalyticsv2", flag="unknown_kinesisanalyticsv2")
    private String value_kinesisanalyticsv2;
    private boolean unknown_kinesisanalyticsv2;
    public String kinesisanalyticsv2() {
        if (!unknown_kinesisanalyticsv2) return value_kinesisanalyticsv2;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.kinesisanalyticsv2' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="kinesisvideo", flag="unknown_kinesisvideo")
    private String value_kinesisvideo;
    private boolean unknown_kinesisvideo;
    public String kinesisvideo() {
        if (!unknown_kinesisvideo) return value_kinesisvideo;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.kinesisvideo' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="kms", flag="unknown_kms")
    private String value_kms;
    private boolean unknown_kms;
    public String kms() {
        if (!unknown_kms) return value_kms;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.kms' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="lakeformation", flag="unknown_lakeformation")
    private String value_lakeformation;
    private boolean unknown_lakeformation;
    public String lakeformation() {
        if (!unknown_lakeformation) return value_lakeformation;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.lakeformation' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="lambda", flag="unknown_lambda")
    private String value_lambda;
    private boolean unknown_lambda;
    public String lambda() {
        if (!unknown_lambda) return value_lambda;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.lambda' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="launchwizard", flag="unknown_launchwizard")
    private String value_launchwizard;
    private boolean unknown_launchwizard;
    public String launchwizard() {
        if (!unknown_launchwizard) return value_launchwizard;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.launchwizard' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="lex", flag="unknown_lex")
    private String value_lex;
    private boolean unknown_lex;
    public String lex() {
        if (!unknown_lex) return value_lex;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.lex' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="lexmodelbuilding", flag="unknown_lexmodelbuilding")
    private String value_lexmodelbuilding;
    private boolean unknown_lexmodelbuilding;
    public String lexmodelbuilding() {
        if (!unknown_lexmodelbuilding) return value_lexmodelbuilding;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.lexmodelbuilding' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="lexmodelbuildingservice", flag="unknown_lexmodelbuildingservice")
    private String value_lexmodelbuildingservice;
    private boolean unknown_lexmodelbuildingservice;
    public String lexmodelbuildingservice() {
        if (!unknown_lexmodelbuildingservice) return value_lexmodelbuildingservice;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.lexmodelbuildingservice' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="lexmodels", flag="unknown_lexmodels")
    private String value_lexmodels;
    private boolean unknown_lexmodels;
    public String lexmodels() {
        if (!unknown_lexmodels) return value_lexmodels;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.lexmodels' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="lexmodelsv2", flag="unknown_lexmodelsv2")
    private String value_lexmodelsv2;
    private boolean unknown_lexmodelsv2;
    public String lexmodelsv2() {
        if (!unknown_lexmodelsv2) return value_lexmodelsv2;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.lexmodelsv2' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="lexv2models", flag="unknown_lexv2models")
    private String value_lexv2models;
    private boolean unknown_lexv2models;
    public String lexv2models() {
        if (!unknown_lexv2models) return value_lexv2models;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.lexv2models' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="licensemanager", flag="unknown_licensemanager")
    private String value_licensemanager;
    private boolean unknown_licensemanager;
    public String licensemanager() {
        if (!unknown_licensemanager) return value_licensemanager;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.licensemanager' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="lightsail", flag="unknown_lightsail")
    private String value_lightsail;
    private boolean unknown_lightsail;
    public String lightsail() {
        if (!unknown_lightsail) return value_lightsail;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.lightsail' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="location", flag="unknown_location")
    private String value_location;
    private boolean unknown_location;
    public String location() {
        if (!unknown_location) return value_location;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.location' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="locationservice", flag="unknown_locationservice")
    private String value_locationservice;
    private boolean unknown_locationservice;
    public String locationservice() {
        if (!unknown_locationservice) return value_locationservice;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.locationservice' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="logs", flag="unknown_logs")
    private String value_logs;
    private boolean unknown_logs;
    public String logs() {
        if (!unknown_logs) return value_logs;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.logs' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="lookoutmetrics", flag="unknown_lookoutmetrics")
    private String value_lookoutmetrics;
    private boolean unknown_lookoutmetrics;
    public String lookoutmetrics() {
        if (!unknown_lookoutmetrics) return value_lookoutmetrics;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.lookoutmetrics' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="m2", flag="unknown_m2")
    private String value_m2;
    private boolean unknown_m2;
    public String m2() {
        if (!unknown_m2) return value_m2;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.m2' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="macie2", flag="unknown_macie2")
    private String value_macie2;
    private boolean unknown_macie2;
    public String macie2() {
        if (!unknown_macie2) return value_macie2;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.macie2' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="managedgrafana", flag="unknown_managedgrafana")
    private String value_managedgrafana;
    private boolean unknown_managedgrafana;
    public String managedgrafana() {
        if (!unknown_managedgrafana) return value_managedgrafana;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.managedgrafana' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="mediaconnect", flag="unknown_mediaconnect")
    private String value_mediaconnect;
    private boolean unknown_mediaconnect;
    public String mediaconnect() {
        if (!unknown_mediaconnect) return value_mediaconnect;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.mediaconnect' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="mediaconvert", flag="unknown_mediaconvert")
    private String value_mediaconvert;
    private boolean unknown_mediaconvert;
    public String mediaconvert() {
        if (!unknown_mediaconvert) return value_mediaconvert;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.mediaconvert' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="medialive", flag="unknown_medialive")
    private String value_medialive;
    private boolean unknown_medialive;
    public String medialive() {
        if (!unknown_medialive) return value_medialive;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.medialive' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="mediapackage", flag="unknown_mediapackage")
    private String value_mediapackage;
    private boolean unknown_mediapackage;
    public String mediapackage() {
        if (!unknown_mediapackage) return value_mediapackage;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.mediapackage' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="mediapackagev2", flag="unknown_mediapackagev2")
    private String value_mediapackagev2;
    private boolean unknown_mediapackagev2;
    public String mediapackagev2() {
        if (!unknown_mediapackagev2) return value_mediapackagev2;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.mediapackagev2' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="mediapackagevod", flag="unknown_mediapackagevod")
    private String value_mediapackagevod;
    private boolean unknown_mediapackagevod;
    public String mediapackagevod() {
        if (!unknown_mediapackagevod) return value_mediapackagevod;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.mediapackagevod' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="mediastore", flag="unknown_mediastore")
    private String value_mediastore;
    private boolean unknown_mediastore;
    public String mediastore() {
        if (!unknown_mediastore) return value_mediastore;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.mediastore' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="memorydb", flag="unknown_memorydb")
    private String value_memorydb;
    private boolean unknown_memorydb;
    public String memorydb() {
        if (!unknown_memorydb) return value_memorydb;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.memorydb' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="mgn", flag="unknown_mgn")
    private String value_mgn;
    private boolean unknown_mgn;
    public String mgn() {
        if (!unknown_mgn) return value_mgn;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.mgn' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="mq", flag="unknown_mq")
    private String value_mq;
    private boolean unknown_mq;
    public String mq() {
        if (!unknown_mq) return value_mq;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.mq' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="msk", flag="unknown_msk")
    private String value_msk;
    private boolean unknown_msk;
    public String msk() {
        if (!unknown_msk) return value_msk;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.msk' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="mwaa", flag="unknown_mwaa")
    private String value_mwaa;
    private boolean unknown_mwaa;
    public String mwaa() {
        if (!unknown_mwaa) return value_mwaa;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.mwaa' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="neptune", flag="unknown_neptune")
    private String value_neptune;
    private boolean unknown_neptune;
    public String neptune() {
        if (!unknown_neptune) return value_neptune;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.neptune' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="neptunegraph", flag="unknown_neptunegraph")
    private String value_neptunegraph;
    private boolean unknown_neptunegraph;
    public String neptunegraph() {
        if (!unknown_neptunegraph) return value_neptunegraph;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.neptunegraph' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="networkfirewall", flag="unknown_networkfirewall")
    private String value_networkfirewall;
    private boolean unknown_networkfirewall;
    public String networkfirewall() {
        if (!unknown_networkfirewall) return value_networkfirewall;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.networkfirewall' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="networkmanager", flag="unknown_networkmanager")
    private String value_networkmanager;
    private boolean unknown_networkmanager;
    public String networkmanager() {
        if (!unknown_networkmanager) return value_networkmanager;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.networkmanager' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="networkmonitor", flag="unknown_networkmonitor")
    private String value_networkmonitor;
    private boolean unknown_networkmonitor;
    public String networkmonitor() {
        if (!unknown_networkmonitor) return value_networkmonitor;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.networkmonitor' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="oam", flag="unknown_oam")
    private String value_oam;
    private boolean unknown_oam;
    public String oam() {
        if (!unknown_oam) return value_oam;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.oam' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="opensearch", flag="unknown_opensearch")
    private String value_opensearch;
    private boolean unknown_opensearch;
    public String opensearch() {
        if (!unknown_opensearch) return value_opensearch;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.opensearch' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="opensearchingestion", flag="unknown_opensearchingestion")
    private String value_opensearchingestion;
    private boolean unknown_opensearchingestion;
    public String opensearchingestion() {
        if (!unknown_opensearchingestion) return value_opensearchingestion;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.opensearchingestion' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="opensearchserverless", flag="unknown_opensearchserverless")
    private String value_opensearchserverless;
    private boolean unknown_opensearchserverless;
    public String opensearchserverless() {
        if (!unknown_opensearchserverless) return value_opensearchserverless;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.opensearchserverless' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="opensearchservice", flag="unknown_opensearchservice")
    private String value_opensearchservice;
    private boolean unknown_opensearchservice;
    public String opensearchservice() {
        if (!unknown_opensearchservice) return value_opensearchservice;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.opensearchservice' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="opsworks", flag="unknown_opsworks")
    private String value_opsworks;
    private boolean unknown_opsworks;
    public String opsworks() {
        if (!unknown_opsworks) return value_opsworks;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.opsworks' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="organizations", flag="unknown_organizations")
    private String value_organizations;
    private boolean unknown_organizations;
    public String organizations() {
        if (!unknown_organizations) return value_organizations;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.organizations' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="osis", flag="unknown_osis")
    private String value_osis;
    private boolean unknown_osis;
    public String osis() {
        if (!unknown_osis) return value_osis;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.osis' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="outposts", flag="unknown_outposts")
    private String value_outposts;
    private boolean unknown_outposts;
    public String outposts() {
        if (!unknown_outposts) return value_outposts;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.outposts' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="paymentcryptography", flag="unknown_paymentcryptography")
    private String value_paymentcryptography;
    private boolean unknown_paymentcryptography;
    public String paymentcryptography() {
        if (!unknown_paymentcryptography) return value_paymentcryptography;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.paymentcryptography' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="pcaconnectorad", flag="unknown_pcaconnectorad")
    private String value_pcaconnectorad;
    private boolean unknown_pcaconnectorad;
    public String pcaconnectorad() {
        if (!unknown_pcaconnectorad) return value_pcaconnectorad;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.pcaconnectorad' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="pcs", flag="unknown_pcs")
    private String value_pcs;
    private boolean unknown_pcs;
    public String pcs() {
        if (!unknown_pcs) return value_pcs;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.pcs' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="pinpoint", flag="unknown_pinpoint")
    private String value_pinpoint;
    private boolean unknown_pinpoint;
    public String pinpoint() {
        if (!unknown_pinpoint) return value_pinpoint;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.pinpoint' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="pinpointsmsvoicev2", flag="unknown_pinpointsmsvoicev2")
    private String value_pinpointsmsvoicev2;
    private boolean unknown_pinpointsmsvoicev2;
    public String pinpointsmsvoicev2() {
        if (!unknown_pinpointsmsvoicev2) return value_pinpointsmsvoicev2;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.pinpointsmsvoicev2' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="pipes", flag="unknown_pipes")
    private String value_pipes;
    private boolean unknown_pipes;
    public String pipes() {
        if (!unknown_pipes) return value_pipes;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.pipes' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="polly", flag="unknown_polly")
    private String value_polly;
    private boolean unknown_polly;
    public String polly() {
        if (!unknown_polly) return value_polly;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.polly' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="pricing", flag="unknown_pricing")
    private String value_pricing;
    private boolean unknown_pricing;
    public String pricing() {
        if (!unknown_pricing) return value_pricing;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.pricing' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="prometheus", flag="unknown_prometheus")
    private String value_prometheus;
    private boolean unknown_prometheus;
    public String prometheus() {
        if (!unknown_prometheus) return value_prometheus;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.prometheus' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="prometheusservice", flag="unknown_prometheusservice")
    private String value_prometheusservice;
    private boolean unknown_prometheusservice;
    public String prometheusservice() {
        if (!unknown_prometheusservice) return value_prometheusservice;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.prometheusservice' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="qbusiness", flag="unknown_qbusiness")
    private String value_qbusiness;
    private boolean unknown_qbusiness;
    public String qbusiness() {
        if (!unknown_qbusiness) return value_qbusiness;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.qbusiness' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="qldb", flag="unknown_qldb")
    private String value_qldb;
    private boolean unknown_qldb;
    public String qldb() {
        if (!unknown_qldb) return value_qldb;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.qldb' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="quicksight", flag="unknown_quicksight")
    private String value_quicksight;
    private boolean unknown_quicksight;
    public String quicksight() {
        if (!unknown_quicksight) return value_quicksight;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.quicksight' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="ram", flag="unknown_ram")
    private String value_ram;
    private boolean unknown_ram;
    public String ram() {
        if (!unknown_ram) return value_ram;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.ram' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="rbin", flag="unknown_rbin")
    private String value_rbin;
    private boolean unknown_rbin;
    public String rbin() {
        if (!unknown_rbin) return value_rbin;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.rbin' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="rds", flag="unknown_rds")
    private String value_rds;
    private boolean unknown_rds;
    public String rds() {
        if (!unknown_rds) return value_rds;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.rds' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="recyclebin", flag="unknown_recyclebin")
    private String value_recyclebin;
    private boolean unknown_recyclebin;
    public String recyclebin() {
        if (!unknown_recyclebin) return value_recyclebin;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.recyclebin' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="redshift", flag="unknown_redshift")
    private String value_redshift;
    private boolean unknown_redshift;
    public String redshift() {
        if (!unknown_redshift) return value_redshift;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.redshift' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="redshiftdata", flag="unknown_redshiftdata")
    private String value_redshiftdata;
    private boolean unknown_redshiftdata;
    public String redshiftdata() {
        if (!unknown_redshiftdata) return value_redshiftdata;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.redshiftdata' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="redshiftdataapiservice", flag="unknown_redshiftdataapiservice")
    private String value_redshiftdataapiservice;
    private boolean unknown_redshiftdataapiservice;
    public String redshiftdataapiservice() {
        if (!unknown_redshiftdataapiservice) return value_redshiftdataapiservice;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.redshiftdataapiservice' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="redshiftserverless", flag="unknown_redshiftserverless")
    private String value_redshiftserverless;
    private boolean unknown_redshiftserverless;
    public String redshiftserverless() {
        if (!unknown_redshiftserverless) return value_redshiftserverless;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.redshiftserverless' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="rekognition", flag="unknown_rekognition")
    private String value_rekognition;
    private boolean unknown_rekognition;
    public String rekognition() {
        if (!unknown_rekognition) return value_rekognition;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.rekognition' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="resiliencehub", flag="unknown_resiliencehub")
    private String value_resiliencehub;
    private boolean unknown_resiliencehub;
    public String resiliencehub() {
        if (!unknown_resiliencehub) return value_resiliencehub;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.resiliencehub' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="resourceexplorer2", flag="unknown_resourceexplorer2")
    private String value_resourceexplorer2;
    private boolean unknown_resourceexplorer2;
    public String resourceexplorer2() {
        if (!unknown_resourceexplorer2) return value_resourceexplorer2;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.resourceexplorer2' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="resourcegroups", flag="unknown_resourcegroups")
    private String value_resourcegroups;
    private boolean unknown_resourcegroups;
    public String resourcegroups() {
        if (!unknown_resourcegroups) return value_resourcegroups;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.resourcegroups' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="resourcegroupstagging", flag="unknown_resourcegroupstagging")
    private String value_resourcegroupstagging;
    private boolean unknown_resourcegroupstagging;
    public String resourcegroupstagging() {
        if (!unknown_resourcegroupstagging) return value_resourcegroupstagging;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.resourcegroupstagging' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="resourcegroupstaggingapi", flag="unknown_resourcegroupstaggingapi")
    private String value_resourcegroupstaggingapi;
    private boolean unknown_resourcegroupstaggingapi;
    public String resourcegroupstaggingapi() {
        if (!unknown_resourcegroupstaggingapi) return value_resourcegroupstaggingapi;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.resourcegroupstaggingapi' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="rolesanywhere", flag="unknown_rolesanywhere")
    private String value_rolesanywhere;
    private boolean unknown_rolesanywhere;
    public String rolesanywhere() {
        if (!unknown_rolesanywhere) return value_rolesanywhere;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.rolesanywhere' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="route53", flag="unknown_route53")
    private String value_route53;
    private boolean unknown_route53;
    public String route53() {
        if (!unknown_route53) return value_route53;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.route53' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="route53domains", flag="unknown_route53domains")
    private String value_route53domains;
    private boolean unknown_route53domains;
    public String route53domains() {
        if (!unknown_route53domains) return value_route53domains;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.route53domains' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="route53profiles", flag="unknown_route53profiles")
    private String value_route53profiles;
    private boolean unknown_route53profiles;
    public String route53profiles() {
        if (!unknown_route53profiles) return value_route53profiles;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.route53profiles' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="route53recoverycontrolconfig", flag="unknown_route53recoverycontrolconfig")
    private String value_route53recoverycontrolconfig;
    private boolean unknown_route53recoverycontrolconfig;
    public String route53recoverycontrolconfig() {
        if (!unknown_route53recoverycontrolconfig) return value_route53recoverycontrolconfig;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.route53recoverycontrolconfig' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="route53recoveryreadiness", flag="unknown_route53recoveryreadiness")
    private String value_route53recoveryreadiness;
    private boolean unknown_route53recoveryreadiness;
    public String route53recoveryreadiness() {
        if (!unknown_route53recoveryreadiness) return value_route53recoveryreadiness;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.route53recoveryreadiness' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="route53resolver", flag="unknown_route53resolver")
    private String value_route53resolver;
    private boolean unknown_route53resolver;
    public String route53resolver() {
        if (!unknown_route53resolver) return value_route53resolver;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.route53resolver' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="rum", flag="unknown_rum")
    private String value_rum;
    private boolean unknown_rum;
    public String rum() {
        if (!unknown_rum) return value_rum;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.rum' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="s3", flag="unknown_s3")
    private String value_s3;
    private boolean unknown_s3;
    public String s3() {
        if (!unknown_s3) return value_s3;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.s3' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="s3api", flag="unknown_s3api")
    private String value_s3api;
    private boolean unknown_s3api;
    public String s3api() {
        if (!unknown_s3api) return value_s3api;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.s3api' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="s3control", flag="unknown_s3control")
    private String value_s3control;
    private boolean unknown_s3control;
    public String s3control() {
        if (!unknown_s3control) return value_s3control;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.s3control' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="s3outposts", flag="unknown_s3outposts")
    private String value_s3outposts;
    private boolean unknown_s3outposts;
    public String s3outposts() {
        if (!unknown_s3outposts) return value_s3outposts;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.s3outposts' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="s3tables", flag="unknown_s3tables")
    private String value_s3tables;
    private boolean unknown_s3tables;
    public String s3tables() {
        if (!unknown_s3tables) return value_s3tables;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.s3tables' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="sagemaker", flag="unknown_sagemaker")
    private String value_sagemaker;
    private boolean unknown_sagemaker;
    public String sagemaker() {
        if (!unknown_sagemaker) return value_sagemaker;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.sagemaker' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="scheduler", flag="unknown_scheduler")
    private String value_scheduler;
    private boolean unknown_scheduler;
    public String scheduler() {
        if (!unknown_scheduler) return value_scheduler;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.scheduler' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="schemas", flag="unknown_schemas")
    private String value_schemas;
    private boolean unknown_schemas;
    public String schemas() {
        if (!unknown_schemas) return value_schemas;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.schemas' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="sdb", flag="unknown_sdb")
    private String value_sdb;
    private boolean unknown_sdb;
    public String sdb() {
        if (!unknown_sdb) return value_sdb;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.sdb' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="secretsmanager", flag="unknown_secretsmanager")
    private String value_secretsmanager;
    private boolean unknown_secretsmanager;
    public String secretsmanager() {
        if (!unknown_secretsmanager) return value_secretsmanager;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.secretsmanager' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="securityhub", flag="unknown_securityhub")
    private String value_securityhub;
    private boolean unknown_securityhub;
    public String securityhub() {
        if (!unknown_securityhub) return value_securityhub;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.securityhub' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="securitylake", flag="unknown_securitylake")
    private String value_securitylake;
    private boolean unknown_securitylake;
    public String securitylake() {
        if (!unknown_securitylake) return value_securitylake;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.securitylake' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="serverlessapplicationrepository", flag="unknown_serverlessapplicationrepository")
    private String value_serverlessapplicationrepository;
    private boolean unknown_serverlessapplicationrepository;
    public String serverlessapplicationrepository() {
        if (!unknown_serverlessapplicationrepository) return value_serverlessapplicationrepository;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.serverlessapplicationrepository' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="serverlessapprepo", flag="unknown_serverlessapprepo")
    private String value_serverlessapprepo;
    private boolean unknown_serverlessapprepo;
    public String serverlessapprepo() {
        if (!unknown_serverlessapprepo) return value_serverlessapprepo;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.serverlessapprepo' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="serverlessrepo", flag="unknown_serverlessrepo")
    private String value_serverlessrepo;
    private boolean unknown_serverlessrepo;
    public String serverlessrepo() {
        if (!unknown_serverlessrepo) return value_serverlessrepo;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.serverlessrepo' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="servicecatalog", flag="unknown_servicecatalog")
    private String value_servicecatalog;
    private boolean unknown_servicecatalog;
    public String servicecatalog() {
        if (!unknown_servicecatalog) return value_servicecatalog;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.servicecatalog' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="servicecatalogappregistry", flag="unknown_servicecatalogappregistry")
    private String value_servicecatalogappregistry;
    private boolean unknown_servicecatalogappregistry;
    public String servicecatalogappregistry() {
        if (!unknown_servicecatalogappregistry) return value_servicecatalogappregistry;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.servicecatalogappregistry' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="servicediscovery", flag="unknown_servicediscovery")
    private String value_servicediscovery;
    private boolean unknown_servicediscovery;
    public String servicediscovery() {
        if (!unknown_servicediscovery) return value_servicediscovery;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.servicediscovery' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="servicequotas", flag="unknown_servicequotas")
    private String value_servicequotas;
    private boolean unknown_servicequotas;
    public String servicequotas() {
        if (!unknown_servicequotas) return value_servicequotas;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.servicequotas' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="ses", flag="unknown_ses")
    private String value_ses;
    private boolean unknown_ses;
    public String ses() {
        if (!unknown_ses) return value_ses;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.ses' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="sesv2", flag="unknown_sesv2")
    private String value_sesv2;
    private boolean unknown_sesv2;
    public String sesv2() {
        if (!unknown_sesv2) return value_sesv2;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.sesv2' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="sfn", flag="unknown_sfn")
    private String value_sfn;
    private boolean unknown_sfn;
    public String sfn() {
        if (!unknown_sfn) return value_sfn;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.sfn' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="shield", flag="unknown_shield")
    private String value_shield;
    private boolean unknown_shield;
    public String shield() {
        if (!unknown_shield) return value_shield;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.shield' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="signer", flag="unknown_signer")
    private String value_signer;
    private boolean unknown_signer;
    public String signer() {
        if (!unknown_signer) return value_signer;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.signer' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="simpledb", flag="unknown_simpledb")
    private String value_simpledb;
    private boolean unknown_simpledb;
    public String simpledb() {
        if (!unknown_simpledb) return value_simpledb;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.simpledb' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="sns", flag="unknown_sns")
    private String value_sns;
    private boolean unknown_sns;
    public String sns() {
        if (!unknown_sns) return value_sns;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.sns' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="sqs", flag="unknown_sqs")
    private String value_sqs;
    private boolean unknown_sqs;
    public String sqs() {
        if (!unknown_sqs) return value_sqs;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.sqs' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="ssm", flag="unknown_ssm")
    private String value_ssm;
    private boolean unknown_ssm;
    public String ssm() {
        if (!unknown_ssm) return value_ssm;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.ssm' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="ssmcontacts", flag="unknown_ssmcontacts")
    private String value_ssmcontacts;
    private boolean unknown_ssmcontacts;
    public String ssmcontacts() {
        if (!unknown_ssmcontacts) return value_ssmcontacts;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.ssmcontacts' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="ssmincidents", flag="unknown_ssmincidents")
    private String value_ssmincidents;
    private boolean unknown_ssmincidents;
    public String ssmincidents() {
        if (!unknown_ssmincidents) return value_ssmincidents;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.ssmincidents' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="ssmquicksetup", flag="unknown_ssmquicksetup")
    private String value_ssmquicksetup;
    private boolean unknown_ssmquicksetup;
    public String ssmquicksetup() {
        if (!unknown_ssmquicksetup) return value_ssmquicksetup;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.ssmquicksetup' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="ssmsap", flag="unknown_ssmsap")
    private String value_ssmsap;
    private boolean unknown_ssmsap;
    public String ssmsap() {
        if (!unknown_ssmsap) return value_ssmsap;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.ssmsap' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="sso", flag="unknown_sso")
    private String value_sso;
    private boolean unknown_sso;
    public String sso() {
        if (!unknown_sso) return value_sso;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.sso' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="ssoadmin", flag="unknown_ssoadmin")
    private String value_ssoadmin;
    private boolean unknown_ssoadmin;
    public String ssoadmin() {
        if (!unknown_ssoadmin) return value_ssoadmin;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.ssoadmin' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="stepfunctions", flag="unknown_stepfunctions")
    private String value_stepfunctions;
    private boolean unknown_stepfunctions;
    public String stepfunctions() {
        if (!unknown_stepfunctions) return value_stepfunctions;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.stepfunctions' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="storagegateway", flag="unknown_storagegateway")
    private String value_storagegateway;
    private boolean unknown_storagegateway;
    public String storagegateway() {
        if (!unknown_storagegateway) return value_storagegateway;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.storagegateway' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="sts", flag="unknown_sts")
    private String value_sts;
    private boolean unknown_sts;
    public String sts() {
        if (!unknown_sts) return value_sts;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.sts' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="swf", flag="unknown_swf")
    private String value_swf;
    private boolean unknown_swf;
    public String swf() {
        if (!unknown_swf) return value_swf;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.swf' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="synthetics", flag="unknown_synthetics")
    private String value_synthetics;
    private boolean unknown_synthetics;
    public String synthetics() {
        if (!unknown_synthetics) return value_synthetics;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.synthetics' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="taxsettings", flag="unknown_taxsettings")
    private String value_taxsettings;
    private boolean unknown_taxsettings;
    public String taxsettings() {
        if (!unknown_taxsettings) return value_taxsettings;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.taxsettings' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="timestreaminfluxdb", flag="unknown_timestreaminfluxdb")
    private String value_timestreaminfluxdb;
    private boolean unknown_timestreaminfluxdb;
    public String timestreaminfluxdb() {
        if (!unknown_timestreaminfluxdb) return value_timestreaminfluxdb;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.timestreaminfluxdb' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="timestreamquery", flag="unknown_timestreamquery")
    private String value_timestreamquery;
    private boolean unknown_timestreamquery;
    public String timestreamquery() {
        if (!unknown_timestreamquery) return value_timestreamquery;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.timestreamquery' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="timestreamwrite", flag="unknown_timestreamwrite")
    private String value_timestreamwrite;
    private boolean unknown_timestreamwrite;
    public String timestreamwrite() {
        if (!unknown_timestreamwrite) return value_timestreamwrite;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.timestreamwrite' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="transcribe", flag="unknown_transcribe")
    private String value_transcribe;
    private boolean unknown_transcribe;
    public String transcribe() {
        if (!unknown_transcribe) return value_transcribe;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.transcribe' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="transcribeservice", flag="unknown_transcribeservice")
    private String value_transcribeservice;
    private boolean unknown_transcribeservice;
    public String transcribeservice() {
        if (!unknown_transcribeservice) return value_transcribeservice;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.transcribeservice' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="transfer", flag="unknown_transfer")
    private String value_transfer;
    private boolean unknown_transfer;
    public String transfer() {
        if (!unknown_transfer) return value_transfer;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.transfer' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="verifiedpermissions", flag="unknown_verifiedpermissions")
    private String value_verifiedpermissions;
    private boolean unknown_verifiedpermissions;
    public String verifiedpermissions() {
        if (!unknown_verifiedpermissions) return value_verifiedpermissions;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.verifiedpermissions' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="vpclattice", flag="unknown_vpclattice")
    private String value_vpclattice;
    private boolean unknown_vpclattice;
    public String vpclattice() {
        if (!unknown_vpclattice) return value_vpclattice;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.vpclattice' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="waf", flag="unknown_waf")
    private String value_waf;
    private boolean unknown_waf;
    public String waf() {
        if (!unknown_waf) return value_waf;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.waf' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="wafregional", flag="unknown_wafregional")
    private String value_wafregional;
    private boolean unknown_wafregional;
    public String wafregional() {
        if (!unknown_wafregional) return value_wafregional;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.wafregional' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="wafv2", flag="unknown_wafv2")
    private String value_wafv2;
    private boolean unknown_wafv2;
    public String wafv2() {
        if (!unknown_wafv2) return value_wafv2;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.wafv2' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="wellarchitected", flag="unknown_wellarchitected")
    private String value_wellarchitected;
    private boolean unknown_wellarchitected;
    public String wellarchitected() {
        if (!unknown_wellarchitected) return value_wellarchitected;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.wellarchitected' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="worklink", flag="unknown_worklink")
    private String value_worklink;
    private boolean unknown_worklink;
    public String worklink() {
        if (!unknown_worklink) return value_worklink;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.worklink' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="workspaces", flag="unknown_workspaces")
    private String value_workspaces;
    private boolean unknown_workspaces;
    public String workspaces() {
        if (!unknown_workspaces) return value_workspaces;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.workspaces' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="workspacesweb", flag="unknown_workspacesweb")
    private String value_workspacesweb;
    private boolean unknown_workspacesweb;
    public String workspacesweb() {
        if (!unknown_workspacesweb) return value_workspacesweb;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.workspacesweb' is not present");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    @PolicyResourceProperty(name="xray", flag="unknown_xray")
    private String value_xray;
    private boolean unknown_xray;
    public String xray() {
        if (!unknown_xray) return value_xray;
        throw new UndeferrableValueException("Value 'ProviderEndpointArgs.xray' is not present");
    }

}
