// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.inputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.String;
import javax.annotation.Nullable;


public final class ProviderEndpointArgs {

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> accessanalyzer;

    public String accessanalyzer() {
        if (accessanalyzer == null) return null;
        return accessanalyzer.getValue("ProviderEndpointArgs.accessanalyzer");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> account;

    public String account() {
        if (account == null) return null;
        return account.getValue("ProviderEndpointArgs.account");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> acm;

    public String acm() {
        if (acm == null) return null;
        return acm.getValue("ProviderEndpointArgs.acm");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> acmpca;

    public String acmpca() {
        if (acmpca == null) return null;
        return acmpca.getValue("ProviderEndpointArgs.acmpca");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> amg;

    public String amg() {
        if (amg == null) return null;
        return amg.getValue("ProviderEndpointArgs.amg");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> amp;

    public String amp() {
        if (amp == null) return null;
        return amp.getValue("ProviderEndpointArgs.amp");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> amplify;

    public String amplify() {
        if (amplify == null) return null;
        return amplify.getValue("ProviderEndpointArgs.amplify");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> apigateway;

    public String apigateway() {
        if (apigateway == null) return null;
        return apigateway.getValue("ProviderEndpointArgs.apigateway");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> apigatewayv2;

    public String apigatewayv2() {
        if (apigatewayv2 == null) return null;
        return apigatewayv2.getValue("ProviderEndpointArgs.apigatewayv2");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> appautoscaling;

    public String appautoscaling() {
        if (appautoscaling == null) return null;
        return appautoscaling.getValue("ProviderEndpointArgs.appautoscaling");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> appconfig;

    public String appconfig() {
        if (appconfig == null) return null;
        return appconfig.getValue("ProviderEndpointArgs.appconfig");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> appfabric;

    public String appfabric() {
        if (appfabric == null) return null;
        return appfabric.getValue("ProviderEndpointArgs.appfabric");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> appflow;

    public String appflow() {
        if (appflow == null) return null;
        return appflow.getValue("ProviderEndpointArgs.appflow");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> appintegrations;

    public String appintegrations() {
        if (appintegrations == null) return null;
        return appintegrations.getValue("ProviderEndpointArgs.appintegrations");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> appintegrationsservice;

    public String appintegrationsservice() {
        if (appintegrationsservice == null) return null;
        return appintegrationsservice.getValue("ProviderEndpointArgs.appintegrationsservice");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> applicationautoscaling;

    public String applicationautoscaling() {
        if (applicationautoscaling == null) return null;
        return applicationautoscaling.getValue("ProviderEndpointArgs.applicationautoscaling");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> applicationinsights;

    public String applicationinsights() {
        if (applicationinsights == null) return null;
        return applicationinsights.getValue("ProviderEndpointArgs.applicationinsights");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> applicationsignals;

    public String applicationsignals() {
        if (applicationsignals == null) return null;
        return applicationsignals.getValue("ProviderEndpointArgs.applicationsignals");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> appmesh;

    public String appmesh() {
        if (appmesh == null) return null;
        return appmesh.getValue("ProviderEndpointArgs.appmesh");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> appregistry;

    public String appregistry() {
        if (appregistry == null) return null;
        return appregistry.getValue("ProviderEndpointArgs.appregistry");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> apprunner;

    public String apprunner() {
        if (apprunner == null) return null;
        return apprunner.getValue("ProviderEndpointArgs.apprunner");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> appstream;

    public String appstream() {
        if (appstream == null) return null;
        return appstream.getValue("ProviderEndpointArgs.appstream");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> appsync;

    public String appsync() {
        if (appsync == null) return null;
        return appsync.getValue("ProviderEndpointArgs.appsync");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> athena;

    public String athena() {
        if (athena == null) return null;
        return athena.getValue("ProviderEndpointArgs.athena");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> auditmanager;

    public String auditmanager() {
        if (auditmanager == null) return null;
        return auditmanager.getValue("ProviderEndpointArgs.auditmanager");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> autoscaling;

    public String autoscaling() {
        if (autoscaling == null) return null;
        return autoscaling.getValue("ProviderEndpointArgs.autoscaling");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> autoscalingplans;

    public String autoscalingplans() {
        if (autoscalingplans == null) return null;
        return autoscalingplans.getValue("ProviderEndpointArgs.autoscalingplans");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> backup;

    public String backup() {
        if (backup == null) return null;
        return backup.getValue("ProviderEndpointArgs.backup");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> batch;

    public String batch() {
        if (batch == null) return null;
        return batch.getValue("ProviderEndpointArgs.batch");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> bcmdataexports;

    public String bcmdataexports() {
        if (bcmdataexports == null) return null;
        return bcmdataexports.getValue("ProviderEndpointArgs.bcmdataexports");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> beanstalk;

    public String beanstalk() {
        if (beanstalk == null) return null;
        return beanstalk.getValue("ProviderEndpointArgs.beanstalk");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> bedrock;

    public String bedrock() {
        if (bedrock == null) return null;
        return bedrock.getValue("ProviderEndpointArgs.bedrock");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> bedrockagent;

    public String bedrockagent() {
        if (bedrockagent == null) return null;
        return bedrockagent.getValue("ProviderEndpointArgs.bedrockagent");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> billing;

    public String billing() {
        if (billing == null) return null;
        return billing.getValue("ProviderEndpointArgs.billing");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> budgets;

    public String budgets() {
        if (budgets == null) return null;
        return budgets.getValue("ProviderEndpointArgs.budgets");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> ce;

    public String ce() {
        if (ce == null) return null;
        return ce.getValue("ProviderEndpointArgs.ce");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> chatbot;

    public String chatbot() {
        if (chatbot == null) return null;
        return chatbot.getValue("ProviderEndpointArgs.chatbot");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> chime;

    public String chime() {
        if (chime == null) return null;
        return chime.getValue("ProviderEndpointArgs.chime");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> chimesdkmediapipelines;

    public String chimesdkmediapipelines() {
        if (chimesdkmediapipelines == null) return null;
        return chimesdkmediapipelines.getValue("ProviderEndpointArgs.chimesdkmediapipelines");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> chimesdkvoice;

    public String chimesdkvoice() {
        if (chimesdkvoice == null) return null;
        return chimesdkvoice.getValue("ProviderEndpointArgs.chimesdkvoice");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> cleanrooms;

    public String cleanrooms() {
        if (cleanrooms == null) return null;
        return cleanrooms.getValue("ProviderEndpointArgs.cleanrooms");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> cloud9;

    public String cloud9() {
        if (cloud9 == null) return null;
        return cloud9.getValue("ProviderEndpointArgs.cloud9");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> cloudcontrol;

    public String cloudcontrol() {
        if (cloudcontrol == null) return null;
        return cloudcontrol.getValue("ProviderEndpointArgs.cloudcontrol");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> cloudcontrolapi;

    public String cloudcontrolapi() {
        if (cloudcontrolapi == null) return null;
        return cloudcontrolapi.getValue("ProviderEndpointArgs.cloudcontrolapi");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> cloudformation;

    public String cloudformation() {
        if (cloudformation == null) return null;
        return cloudformation.getValue("ProviderEndpointArgs.cloudformation");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> cloudfront;

    public String cloudfront() {
        if (cloudfront == null) return null;
        return cloudfront.getValue("ProviderEndpointArgs.cloudfront");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> cloudfrontkeyvaluestore;

    public String cloudfrontkeyvaluestore() {
        if (cloudfrontkeyvaluestore == null) return null;
        return cloudfrontkeyvaluestore.getValue("ProviderEndpointArgs.cloudfrontkeyvaluestore");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> cloudhsm;

    public String cloudhsm() {
        if (cloudhsm == null) return null;
        return cloudhsm.getValue("ProviderEndpointArgs.cloudhsm");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> cloudhsmv2;

    public String cloudhsmv2() {
        if (cloudhsmv2 == null) return null;
        return cloudhsmv2.getValue("ProviderEndpointArgs.cloudhsmv2");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> cloudsearch;

    public String cloudsearch() {
        if (cloudsearch == null) return null;
        return cloudsearch.getValue("ProviderEndpointArgs.cloudsearch");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> cloudtrail;

    public String cloudtrail() {
        if (cloudtrail == null) return null;
        return cloudtrail.getValue("ProviderEndpointArgs.cloudtrail");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> cloudwatch;

    public String cloudwatch() {
        if (cloudwatch == null) return null;
        return cloudwatch.getValue("ProviderEndpointArgs.cloudwatch");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> cloudwatchevents;

    public String cloudwatchevents() {
        if (cloudwatchevents == null) return null;
        return cloudwatchevents.getValue("ProviderEndpointArgs.cloudwatchevents");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> cloudwatchevidently;

    public String cloudwatchevidently() {
        if (cloudwatchevidently == null) return null;
        return cloudwatchevidently.getValue("ProviderEndpointArgs.cloudwatchevidently");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> cloudwatchlog;

    public String cloudwatchlog() {
        if (cloudwatchlog == null) return null;
        return cloudwatchlog.getValue("ProviderEndpointArgs.cloudwatchlog");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> cloudwatchlogs;

    public String cloudwatchlogs() {
        if (cloudwatchlogs == null) return null;
        return cloudwatchlogs.getValue("ProviderEndpointArgs.cloudwatchlogs");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> cloudwatchobservabilityaccessmanager;

    public String cloudwatchobservabilityaccessmanager() {
        if (cloudwatchobservabilityaccessmanager == null) return null;
        return cloudwatchobservabilityaccessmanager.getValue("ProviderEndpointArgs.cloudwatchobservabilityaccessmanager");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> cloudwatchrum;

    public String cloudwatchrum() {
        if (cloudwatchrum == null) return null;
        return cloudwatchrum.getValue("ProviderEndpointArgs.cloudwatchrum");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> codeartifact;

    public String codeartifact() {
        if (codeartifact == null) return null;
        return codeartifact.getValue("ProviderEndpointArgs.codeartifact");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> codebuild;

    public String codebuild() {
        if (codebuild == null) return null;
        return codebuild.getValue("ProviderEndpointArgs.codebuild");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> codecatalyst;

    public String codecatalyst() {
        if (codecatalyst == null) return null;
        return codecatalyst.getValue("ProviderEndpointArgs.codecatalyst");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> codecommit;

    public String codecommit() {
        if (codecommit == null) return null;
        return codecommit.getValue("ProviderEndpointArgs.codecommit");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> codeconnections;

    public String codeconnections() {
        if (codeconnections == null) return null;
        return codeconnections.getValue("ProviderEndpointArgs.codeconnections");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> codedeploy;

    public String codedeploy() {
        if (codedeploy == null) return null;
        return codedeploy.getValue("ProviderEndpointArgs.codedeploy");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> codeguruprofiler;

    public String codeguruprofiler() {
        if (codeguruprofiler == null) return null;
        return codeguruprofiler.getValue("ProviderEndpointArgs.codeguruprofiler");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> codegurureviewer;

    public String codegurureviewer() {
        if (codegurureviewer == null) return null;
        return codegurureviewer.getValue("ProviderEndpointArgs.codegurureviewer");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> codepipeline;

    public String codepipeline() {
        if (codepipeline == null) return null;
        return codepipeline.getValue("ProviderEndpointArgs.codepipeline");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> codestarconnections;

    public String codestarconnections() {
        if (codestarconnections == null) return null;
        return codestarconnections.getValue("ProviderEndpointArgs.codestarconnections");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> codestarnotifications;

    public String codestarnotifications() {
        if (codestarnotifications == null) return null;
        return codestarnotifications.getValue("ProviderEndpointArgs.codestarnotifications");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> cognitoidentity;

    public String cognitoidentity() {
        if (cognitoidentity == null) return null;
        return cognitoidentity.getValue("ProviderEndpointArgs.cognitoidentity");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> cognitoidentityprovider;

    public String cognitoidentityprovider() {
        if (cognitoidentityprovider == null) return null;
        return cognitoidentityprovider.getValue("ProviderEndpointArgs.cognitoidentityprovider");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> cognitoidp;

    public String cognitoidp() {
        if (cognitoidp == null) return null;
        return cognitoidp.getValue("ProviderEndpointArgs.cognitoidp");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> comprehend;

    public String comprehend() {
        if (comprehend == null) return null;
        return comprehend.getValue("ProviderEndpointArgs.comprehend");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> computeoptimizer;

    public String computeoptimizer() {
        if (computeoptimizer == null) return null;
        return computeoptimizer.getValue("ProviderEndpointArgs.computeoptimizer");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> config;

    public String config() {
        if (config == null) return null;
        return config.getValue("ProviderEndpointArgs.config");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> configservice;

    public String configservice() {
        if (configservice == null) return null;
        return configservice.getValue("ProviderEndpointArgs.configservice");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> connect;

    public String connect() {
        if (connect == null) return null;
        return connect.getValue("ProviderEndpointArgs.connect");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> connectcases;

    public String connectcases() {
        if (connectcases == null) return null;
        return connectcases.getValue("ProviderEndpointArgs.connectcases");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> controltower;

    public String controltower() {
        if (controltower == null) return null;
        return controltower.getValue("ProviderEndpointArgs.controltower");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> costandusagereportservice;

    public String costandusagereportservice() {
        if (costandusagereportservice == null) return null;
        return costandusagereportservice.getValue("ProviderEndpointArgs.costandusagereportservice");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> costexplorer;

    public String costexplorer() {
        if (costexplorer == null) return null;
        return costexplorer.getValue("ProviderEndpointArgs.costexplorer");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> costoptimizationhub;

    public String costoptimizationhub() {
        if (costoptimizationhub == null) return null;
        return costoptimizationhub.getValue("ProviderEndpointArgs.costoptimizationhub");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> cur;

    public String cur() {
        if (cur == null) return null;
        return cur.getValue("ProviderEndpointArgs.cur");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> customerprofiles;

    public String customerprofiles() {
        if (customerprofiles == null) return null;
        return customerprofiles.getValue("ProviderEndpointArgs.customerprofiles");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> databasemigration;

    public String databasemigration() {
        if (databasemigration == null) return null;
        return databasemigration.getValue("ProviderEndpointArgs.databasemigration");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> databasemigrationservice;

    public String databasemigrationservice() {
        if (databasemigrationservice == null) return null;
        return databasemigrationservice.getValue("ProviderEndpointArgs.databasemigrationservice");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> databrew;

    public String databrew() {
        if (databrew == null) return null;
        return databrew.getValue("ProviderEndpointArgs.databrew");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> dataexchange;

    public String dataexchange() {
        if (dataexchange == null) return null;
        return dataexchange.getValue("ProviderEndpointArgs.dataexchange");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> datapipeline;

    public String datapipeline() {
        if (datapipeline == null) return null;
        return datapipeline.getValue("ProviderEndpointArgs.datapipeline");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> datasync;

    public String datasync() {
        if (datasync == null) return null;
        return datasync.getValue("ProviderEndpointArgs.datasync");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> datazone;

    public String datazone() {
        if (datazone == null) return null;
        return datazone.getValue("ProviderEndpointArgs.datazone");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> dax;

    public String dax() {
        if (dax == null) return null;
        return dax.getValue("ProviderEndpointArgs.dax");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> deploy;

    public String deploy() {
        if (deploy == null) return null;
        return deploy.getValue("ProviderEndpointArgs.deploy");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> detective;

    public String detective() {
        if (detective == null) return null;
        return detective.getValue("ProviderEndpointArgs.detective");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> devicefarm;

    public String devicefarm() {
        if (devicefarm == null) return null;
        return devicefarm.getValue("ProviderEndpointArgs.devicefarm");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> devopsguru;

    public String devopsguru() {
        if (devopsguru == null) return null;
        return devopsguru.getValue("ProviderEndpointArgs.devopsguru");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> directconnect;

    public String directconnect() {
        if (directconnect == null) return null;
        return directconnect.getValue("ProviderEndpointArgs.directconnect");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> directoryservice;

    public String directoryservice() {
        if (directoryservice == null) return null;
        return directoryservice.getValue("ProviderEndpointArgs.directoryservice");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> dlm;

    public String dlm() {
        if (dlm == null) return null;
        return dlm.getValue("ProviderEndpointArgs.dlm");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> dms;

    public String dms() {
        if (dms == null) return null;
        return dms.getValue("ProviderEndpointArgs.dms");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> docdb;

    public String docdb() {
        if (docdb == null) return null;
        return docdb.getValue("ProviderEndpointArgs.docdb");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> docdbelastic;

    public String docdbelastic() {
        if (docdbelastic == null) return null;
        return docdbelastic.getValue("ProviderEndpointArgs.docdbelastic");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> drs;

    public String drs() {
        if (drs == null) return null;
        return drs.getValue("ProviderEndpointArgs.drs");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> ds;

    public String ds() {
        if (ds == null) return null;
        return ds.getValue("ProviderEndpointArgs.ds");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> dsql;

    public String dsql() {
        if (dsql == null) return null;
        return dsql.getValue("ProviderEndpointArgs.dsql");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> dynamodb;

    public String dynamodb() {
        if (dynamodb == null) return null;
        return dynamodb.getValue("ProviderEndpointArgs.dynamodb");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> ec2;

    public String ec2() {
        if (ec2 == null) return null;
        return ec2.getValue("ProviderEndpointArgs.ec2");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> ecr;

    public String ecr() {
        if (ecr == null) return null;
        return ecr.getValue("ProviderEndpointArgs.ecr");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> ecrpublic;

    public String ecrpublic() {
        if (ecrpublic == null) return null;
        return ecrpublic.getValue("ProviderEndpointArgs.ecrpublic");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> ecs;

    public String ecs() {
        if (ecs == null) return null;
        return ecs.getValue("ProviderEndpointArgs.ecs");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> efs;

    public String efs() {
        if (efs == null) return null;
        return efs.getValue("ProviderEndpointArgs.efs");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> eks;

    public String eks() {
        if (eks == null) return null;
        return eks.getValue("ProviderEndpointArgs.eks");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> elasticache;

    public String elasticache() {
        if (elasticache == null) return null;
        return elasticache.getValue("ProviderEndpointArgs.elasticache");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> elasticbeanstalk;

    public String elasticbeanstalk() {
        if (elasticbeanstalk == null) return null;
        return elasticbeanstalk.getValue("ProviderEndpointArgs.elasticbeanstalk");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> elasticloadbalancing;

    public String elasticloadbalancing() {
        if (elasticloadbalancing == null) return null;
        return elasticloadbalancing.getValue("ProviderEndpointArgs.elasticloadbalancing");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> elasticloadbalancingv2;

    public String elasticloadbalancingv2() {
        if (elasticloadbalancingv2 == null) return null;
        return elasticloadbalancingv2.getValue("ProviderEndpointArgs.elasticloadbalancingv2");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> elasticsearch;

    public String elasticsearch() {
        if (elasticsearch == null) return null;
        return elasticsearch.getValue("ProviderEndpointArgs.elasticsearch");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> elasticsearchservice;

    public String elasticsearchservice() {
        if (elasticsearchservice == null) return null;
        return elasticsearchservice.getValue("ProviderEndpointArgs.elasticsearchservice");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> elastictranscoder;

    public String elastictranscoder() {
        if (elastictranscoder == null) return null;
        return elastictranscoder.getValue("ProviderEndpointArgs.elastictranscoder");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> elb;

    public String elb() {
        if (elb == null) return null;
        return elb.getValue("ProviderEndpointArgs.elb");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> elbv2;

    public String elbv2() {
        if (elbv2 == null) return null;
        return elbv2.getValue("ProviderEndpointArgs.elbv2");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> emr;

    public String emr() {
        if (emr == null) return null;
        return emr.getValue("ProviderEndpointArgs.emr");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> emrcontainers;

    public String emrcontainers() {
        if (emrcontainers == null) return null;
        return emrcontainers.getValue("ProviderEndpointArgs.emrcontainers");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> emrserverless;

    public String emrserverless() {
        if (emrserverless == null) return null;
        return emrserverless.getValue("ProviderEndpointArgs.emrserverless");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> es;

    public String es() {
        if (es == null) return null;
        return es.getValue("ProviderEndpointArgs.es");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> eventbridge;

    public String eventbridge() {
        if (eventbridge == null) return null;
        return eventbridge.getValue("ProviderEndpointArgs.eventbridge");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> events;

    public String events() {
        if (events == null) return null;
        return events.getValue("ProviderEndpointArgs.events");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> evidently;

    public String evidently() {
        if (evidently == null) return null;
        return evidently.getValue("ProviderEndpointArgs.evidently");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> finspace;

    public String finspace() {
        if (finspace == null) return null;
        return finspace.getValue("ProviderEndpointArgs.finspace");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> firehose;

    public String firehose() {
        if (firehose == null) return null;
        return firehose.getValue("ProviderEndpointArgs.firehose");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> fis;

    public String fis() {
        if (fis == null) return null;
        return fis.getValue("ProviderEndpointArgs.fis");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> fms;

    public String fms() {
        if (fms == null) return null;
        return fms.getValue("ProviderEndpointArgs.fms");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> fsx;

    public String fsx() {
        if (fsx == null) return null;
        return fsx.getValue("ProviderEndpointArgs.fsx");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> gamelift;

    public String gamelift() {
        if (gamelift == null) return null;
        return gamelift.getValue("ProviderEndpointArgs.gamelift");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> glacier;

    public String glacier() {
        if (glacier == null) return null;
        return glacier.getValue("ProviderEndpointArgs.glacier");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> globalaccelerator;

    public String globalaccelerator() {
        if (globalaccelerator == null) return null;
        return globalaccelerator.getValue("ProviderEndpointArgs.globalaccelerator");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> glue;

    public String glue() {
        if (glue == null) return null;
        return glue.getValue("ProviderEndpointArgs.glue");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> gluedatabrew;

    public String gluedatabrew() {
        if (gluedatabrew == null) return null;
        return gluedatabrew.getValue("ProviderEndpointArgs.gluedatabrew");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> grafana;

    public String grafana() {
        if (grafana == null) return null;
        return grafana.getValue("ProviderEndpointArgs.grafana");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> greengrass;

    public String greengrass() {
        if (greengrass == null) return null;
        return greengrass.getValue("ProviderEndpointArgs.greengrass");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> groundstation;

    public String groundstation() {
        if (groundstation == null) return null;
        return groundstation.getValue("ProviderEndpointArgs.groundstation");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> guardduty;

    public String guardduty() {
        if (guardduty == null) return null;
        return guardduty.getValue("ProviderEndpointArgs.guardduty");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> healthlake;

    public String healthlake() {
        if (healthlake == null) return null;
        return healthlake.getValue("ProviderEndpointArgs.healthlake");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> iam;

    public String iam() {
        if (iam == null) return null;
        return iam.getValue("ProviderEndpointArgs.iam");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> identitystore;

    public String identitystore() {
        if (identitystore == null) return null;
        return identitystore.getValue("ProviderEndpointArgs.identitystore");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> imagebuilder;

    public String imagebuilder() {
        if (imagebuilder == null) return null;
        return imagebuilder.getValue("ProviderEndpointArgs.imagebuilder");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> inspector;

    public String inspector() {
        if (inspector == null) return null;
        return inspector.getValue("ProviderEndpointArgs.inspector");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> inspector2;

    public String inspector2() {
        if (inspector2 == null) return null;
        return inspector2.getValue("ProviderEndpointArgs.inspector2");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> inspectorv2;

    public String inspectorv2() {
        if (inspectorv2 == null) return null;
        return inspectorv2.getValue("ProviderEndpointArgs.inspectorv2");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> internetmonitor;

    public String internetmonitor() {
        if (internetmonitor == null) return null;
        return internetmonitor.getValue("ProviderEndpointArgs.internetmonitor");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> invoicing;

    public String invoicing() {
        if (invoicing == null) return null;
        return invoicing.getValue("ProviderEndpointArgs.invoicing");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> iot;

    public String iot() {
        if (iot == null) return null;
        return iot.getValue("ProviderEndpointArgs.iot");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> iotanalytics;

    public String iotanalytics() {
        if (iotanalytics == null) return null;
        return iotanalytics.getValue("ProviderEndpointArgs.iotanalytics");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> iotevents;

    public String iotevents() {
        if (iotevents == null) return null;
        return iotevents.getValue("ProviderEndpointArgs.iotevents");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> ivs;

    public String ivs() {
        if (ivs == null) return null;
        return ivs.getValue("ProviderEndpointArgs.ivs");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> ivschat;

    public String ivschat() {
        if (ivschat == null) return null;
        return ivschat.getValue("ProviderEndpointArgs.ivschat");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> kafka;

    public String kafka() {
        if (kafka == null) return null;
        return kafka.getValue("ProviderEndpointArgs.kafka");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> kafkaconnect;

    public String kafkaconnect() {
        if (kafkaconnect == null) return null;
        return kafkaconnect.getValue("ProviderEndpointArgs.kafkaconnect");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> kendra;

    public String kendra() {
        if (kendra == null) return null;
        return kendra.getValue("ProviderEndpointArgs.kendra");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> keyspaces;

    public String keyspaces() {
        if (keyspaces == null) return null;
        return keyspaces.getValue("ProviderEndpointArgs.keyspaces");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> kinesis;

    public String kinesis() {
        if (kinesis == null) return null;
        return kinesis.getValue("ProviderEndpointArgs.kinesis");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> kinesisanalytics;

    public String kinesisanalytics() {
        if (kinesisanalytics == null) return null;
        return kinesisanalytics.getValue("ProviderEndpointArgs.kinesisanalytics");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> kinesisanalyticsv2;

    public String kinesisanalyticsv2() {
        if (kinesisanalyticsv2 == null) return null;
        return kinesisanalyticsv2.getValue("ProviderEndpointArgs.kinesisanalyticsv2");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> kinesisvideo;

    public String kinesisvideo() {
        if (kinesisvideo == null) return null;
        return kinesisvideo.getValue("ProviderEndpointArgs.kinesisvideo");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> kms;

    public String kms() {
        if (kms == null) return null;
        return kms.getValue("ProviderEndpointArgs.kms");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> lakeformation;

    public String lakeformation() {
        if (lakeformation == null) return null;
        return lakeformation.getValue("ProviderEndpointArgs.lakeformation");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> lambda;

    public String lambda() {
        if (lambda == null) return null;
        return lambda.getValue("ProviderEndpointArgs.lambda");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> launchwizard;

    public String launchwizard() {
        if (launchwizard == null) return null;
        return launchwizard.getValue("ProviderEndpointArgs.launchwizard");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> lex;

    public String lex() {
        if (lex == null) return null;
        return lex.getValue("ProviderEndpointArgs.lex");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> lexmodelbuilding;

    public String lexmodelbuilding() {
        if (lexmodelbuilding == null) return null;
        return lexmodelbuilding.getValue("ProviderEndpointArgs.lexmodelbuilding");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> lexmodelbuildingservice;

    public String lexmodelbuildingservice() {
        if (lexmodelbuildingservice == null) return null;
        return lexmodelbuildingservice.getValue("ProviderEndpointArgs.lexmodelbuildingservice");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> lexmodels;

    public String lexmodels() {
        if (lexmodels == null) return null;
        return lexmodels.getValue("ProviderEndpointArgs.lexmodels");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> lexmodelsv2;

    public String lexmodelsv2() {
        if (lexmodelsv2 == null) return null;
        return lexmodelsv2.getValue("ProviderEndpointArgs.lexmodelsv2");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> lexv2models;

    public String lexv2models() {
        if (lexv2models == null) return null;
        return lexv2models.getValue("ProviderEndpointArgs.lexv2models");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> licensemanager;

    public String licensemanager() {
        if (licensemanager == null) return null;
        return licensemanager.getValue("ProviderEndpointArgs.licensemanager");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> lightsail;

    public String lightsail() {
        if (lightsail == null) return null;
        return lightsail.getValue("ProviderEndpointArgs.lightsail");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> location;

    public String location() {
        if (location == null) return null;
        return location.getValue("ProviderEndpointArgs.location");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> locationservice;

    public String locationservice() {
        if (locationservice == null) return null;
        return locationservice.getValue("ProviderEndpointArgs.locationservice");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> logs;

    public String logs() {
        if (logs == null) return null;
        return logs.getValue("ProviderEndpointArgs.logs");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> lookoutmetrics;

    public String lookoutmetrics() {
        if (lookoutmetrics == null) return null;
        return lookoutmetrics.getValue("ProviderEndpointArgs.lookoutmetrics");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> m2;

    public String m2() {
        if (m2 == null) return null;
        return m2.getValue("ProviderEndpointArgs.m2");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> macie2;

    public String macie2() {
        if (macie2 == null) return null;
        return macie2.getValue("ProviderEndpointArgs.macie2");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> managedgrafana;

    public String managedgrafana() {
        if (managedgrafana == null) return null;
        return managedgrafana.getValue("ProviderEndpointArgs.managedgrafana");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> mediaconnect;

    public String mediaconnect() {
        if (mediaconnect == null) return null;
        return mediaconnect.getValue("ProviderEndpointArgs.mediaconnect");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> mediaconvert;

    public String mediaconvert() {
        if (mediaconvert == null) return null;
        return mediaconvert.getValue("ProviderEndpointArgs.mediaconvert");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> medialive;

    public String medialive() {
        if (medialive == null) return null;
        return medialive.getValue("ProviderEndpointArgs.medialive");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> mediapackage;

    public String mediapackage() {
        if (mediapackage == null) return null;
        return mediapackage.getValue("ProviderEndpointArgs.mediapackage");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> mediapackagev2;

    public String mediapackagev2() {
        if (mediapackagev2 == null) return null;
        return mediapackagev2.getValue("ProviderEndpointArgs.mediapackagev2");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> mediapackagevod;

    public String mediapackagevod() {
        if (mediapackagevod == null) return null;
        return mediapackagevod.getValue("ProviderEndpointArgs.mediapackagevod");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> mediastore;

    public String mediastore() {
        if (mediastore == null) return null;
        return mediastore.getValue("ProviderEndpointArgs.mediastore");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> memorydb;

    public String memorydb() {
        if (memorydb == null) return null;
        return memorydb.getValue("ProviderEndpointArgs.memorydb");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> mgn;

    public String mgn() {
        if (mgn == null) return null;
        return mgn.getValue("ProviderEndpointArgs.mgn");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> mq;

    public String mq() {
        if (mq == null) return null;
        return mq.getValue("ProviderEndpointArgs.mq");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> msk;

    public String msk() {
        if (msk == null) return null;
        return msk.getValue("ProviderEndpointArgs.msk");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> mwaa;

    public String mwaa() {
        if (mwaa == null) return null;
        return mwaa.getValue("ProviderEndpointArgs.mwaa");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> neptune;

    public String neptune() {
        if (neptune == null) return null;
        return neptune.getValue("ProviderEndpointArgs.neptune");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> neptunegraph;

    public String neptunegraph() {
        if (neptunegraph == null) return null;
        return neptunegraph.getValue("ProviderEndpointArgs.neptunegraph");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> networkfirewall;

    public String networkfirewall() {
        if (networkfirewall == null) return null;
        return networkfirewall.getValue("ProviderEndpointArgs.networkfirewall");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> networkmanager;

    public String networkmanager() {
        if (networkmanager == null) return null;
        return networkmanager.getValue("ProviderEndpointArgs.networkmanager");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> networkmonitor;

    public String networkmonitor() {
        if (networkmonitor == null) return null;
        return networkmonitor.getValue("ProviderEndpointArgs.networkmonitor");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> oam;

    public String oam() {
        if (oam == null) return null;
        return oam.getValue("ProviderEndpointArgs.oam");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> opensearch;

    public String opensearch() {
        if (opensearch == null) return null;
        return opensearch.getValue("ProviderEndpointArgs.opensearch");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> opensearchingestion;

    public String opensearchingestion() {
        if (opensearchingestion == null) return null;
        return opensearchingestion.getValue("ProviderEndpointArgs.opensearchingestion");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> opensearchserverless;

    public String opensearchserverless() {
        if (opensearchserverless == null) return null;
        return opensearchserverless.getValue("ProviderEndpointArgs.opensearchserverless");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> opensearchservice;

    public String opensearchservice() {
        if (opensearchservice == null) return null;
        return opensearchservice.getValue("ProviderEndpointArgs.opensearchservice");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> opsworks;

    public String opsworks() {
        if (opsworks == null) return null;
        return opsworks.getValue("ProviderEndpointArgs.opsworks");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> organizations;

    public String organizations() {
        if (organizations == null) return null;
        return organizations.getValue("ProviderEndpointArgs.organizations");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> osis;

    public String osis() {
        if (osis == null) return null;
        return osis.getValue("ProviderEndpointArgs.osis");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> outposts;

    public String outposts() {
        if (outposts == null) return null;
        return outposts.getValue("ProviderEndpointArgs.outposts");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> paymentcryptography;

    public String paymentcryptography() {
        if (paymentcryptography == null) return null;
        return paymentcryptography.getValue("ProviderEndpointArgs.paymentcryptography");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> pcaconnectorad;

    public String pcaconnectorad() {
        if (pcaconnectorad == null) return null;
        return pcaconnectorad.getValue("ProviderEndpointArgs.pcaconnectorad");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> pcs;

    public String pcs() {
        if (pcs == null) return null;
        return pcs.getValue("ProviderEndpointArgs.pcs");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> pinpoint;

    public String pinpoint() {
        if (pinpoint == null) return null;
        return pinpoint.getValue("ProviderEndpointArgs.pinpoint");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> pinpointsmsvoicev2;

    public String pinpointsmsvoicev2() {
        if (pinpointsmsvoicev2 == null) return null;
        return pinpointsmsvoicev2.getValue("ProviderEndpointArgs.pinpointsmsvoicev2");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> pipes;

    public String pipes() {
        if (pipes == null) return null;
        return pipes.getValue("ProviderEndpointArgs.pipes");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> polly;

    public String polly() {
        if (polly == null) return null;
        return polly.getValue("ProviderEndpointArgs.polly");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> pricing;

    public String pricing() {
        if (pricing == null) return null;
        return pricing.getValue("ProviderEndpointArgs.pricing");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> prometheus;

    public String prometheus() {
        if (prometheus == null) return null;
        return prometheus.getValue("ProviderEndpointArgs.prometheus");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> prometheusservice;

    public String prometheusservice() {
        if (prometheusservice == null) return null;
        return prometheusservice.getValue("ProviderEndpointArgs.prometheusservice");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> qbusiness;

    public String qbusiness() {
        if (qbusiness == null) return null;
        return qbusiness.getValue("ProviderEndpointArgs.qbusiness");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> qldb;

    public String qldb() {
        if (qldb == null) return null;
        return qldb.getValue("ProviderEndpointArgs.qldb");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> quicksight;

    public String quicksight() {
        if (quicksight == null) return null;
        return quicksight.getValue("ProviderEndpointArgs.quicksight");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> ram;

    public String ram() {
        if (ram == null) return null;
        return ram.getValue("ProviderEndpointArgs.ram");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> rbin;

    public String rbin() {
        if (rbin == null) return null;
        return rbin.getValue("ProviderEndpointArgs.rbin");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> rds;

    public String rds() {
        if (rds == null) return null;
        return rds.getValue("ProviderEndpointArgs.rds");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> recyclebin;

    public String recyclebin() {
        if (recyclebin == null) return null;
        return recyclebin.getValue("ProviderEndpointArgs.recyclebin");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> redshift;

    public String redshift() {
        if (redshift == null) return null;
        return redshift.getValue("ProviderEndpointArgs.redshift");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> redshiftdata;

    public String redshiftdata() {
        if (redshiftdata == null) return null;
        return redshiftdata.getValue("ProviderEndpointArgs.redshiftdata");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> redshiftdataapiservice;

    public String redshiftdataapiservice() {
        if (redshiftdataapiservice == null) return null;
        return redshiftdataapiservice.getValue("ProviderEndpointArgs.redshiftdataapiservice");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> redshiftserverless;

    public String redshiftserverless() {
        if (redshiftserverless == null) return null;
        return redshiftserverless.getValue("ProviderEndpointArgs.redshiftserverless");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> rekognition;

    public String rekognition() {
        if (rekognition == null) return null;
        return rekognition.getValue("ProviderEndpointArgs.rekognition");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> resiliencehub;

    public String resiliencehub() {
        if (resiliencehub == null) return null;
        return resiliencehub.getValue("ProviderEndpointArgs.resiliencehub");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> resourceexplorer2;

    public String resourceexplorer2() {
        if (resourceexplorer2 == null) return null;
        return resourceexplorer2.getValue("ProviderEndpointArgs.resourceexplorer2");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> resourcegroups;

    public String resourcegroups() {
        if (resourcegroups == null) return null;
        return resourcegroups.getValue("ProviderEndpointArgs.resourcegroups");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> resourcegroupstagging;

    public String resourcegroupstagging() {
        if (resourcegroupstagging == null) return null;
        return resourcegroupstagging.getValue("ProviderEndpointArgs.resourcegroupstagging");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> resourcegroupstaggingapi;

    public String resourcegroupstaggingapi() {
        if (resourcegroupstaggingapi == null) return null;
        return resourcegroupstaggingapi.getValue("ProviderEndpointArgs.resourcegroupstaggingapi");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> rolesanywhere;

    public String rolesanywhere() {
        if (rolesanywhere == null) return null;
        return rolesanywhere.getValue("ProviderEndpointArgs.rolesanywhere");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> route53;

    public String route53() {
        if (route53 == null) return null;
        return route53.getValue("ProviderEndpointArgs.route53");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> route53domains;

    public String route53domains() {
        if (route53domains == null) return null;
        return route53domains.getValue("ProviderEndpointArgs.route53domains");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> route53profiles;

    public String route53profiles() {
        if (route53profiles == null) return null;
        return route53profiles.getValue("ProviderEndpointArgs.route53profiles");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> route53recoverycontrolconfig;

    public String route53recoverycontrolconfig() {
        if (route53recoverycontrolconfig == null) return null;
        return route53recoverycontrolconfig.getValue("ProviderEndpointArgs.route53recoverycontrolconfig");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> route53recoveryreadiness;

    public String route53recoveryreadiness() {
        if (route53recoveryreadiness == null) return null;
        return route53recoveryreadiness.getValue("ProviderEndpointArgs.route53recoveryreadiness");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> route53resolver;

    public String route53resolver() {
        if (route53resolver == null) return null;
        return route53resolver.getValue("ProviderEndpointArgs.route53resolver");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> rum;

    public String rum() {
        if (rum == null) return null;
        return rum.getValue("ProviderEndpointArgs.rum");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> s3;

    public String s3() {
        if (s3 == null) return null;
        return s3.getValue("ProviderEndpointArgs.s3");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> s3api;

    public String s3api() {
        if (s3api == null) return null;
        return s3api.getValue("ProviderEndpointArgs.s3api");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> s3control;

    public String s3control() {
        if (s3control == null) return null;
        return s3control.getValue("ProviderEndpointArgs.s3control");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> s3outposts;

    public String s3outposts() {
        if (s3outposts == null) return null;
        return s3outposts.getValue("ProviderEndpointArgs.s3outposts");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> s3tables;

    public String s3tables() {
        if (s3tables == null) return null;
        return s3tables.getValue("ProviderEndpointArgs.s3tables");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> sagemaker;

    public String sagemaker() {
        if (sagemaker == null) return null;
        return sagemaker.getValue("ProviderEndpointArgs.sagemaker");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> scheduler;

    public String scheduler() {
        if (scheduler == null) return null;
        return scheduler.getValue("ProviderEndpointArgs.scheduler");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> schemas;

    public String schemas() {
        if (schemas == null) return null;
        return schemas.getValue("ProviderEndpointArgs.schemas");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> sdb;

    public String sdb() {
        if (sdb == null) return null;
        return sdb.getValue("ProviderEndpointArgs.sdb");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> secretsmanager;

    public String secretsmanager() {
        if (secretsmanager == null) return null;
        return secretsmanager.getValue("ProviderEndpointArgs.secretsmanager");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> securityhub;

    public String securityhub() {
        if (securityhub == null) return null;
        return securityhub.getValue("ProviderEndpointArgs.securityhub");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> securitylake;

    public String securitylake() {
        if (securitylake == null) return null;
        return securitylake.getValue("ProviderEndpointArgs.securitylake");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> serverlessapplicationrepository;

    public String serverlessapplicationrepository() {
        if (serverlessapplicationrepository == null) return null;
        return serverlessapplicationrepository.getValue("ProviderEndpointArgs.serverlessapplicationrepository");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> serverlessapprepo;

    public String serverlessapprepo() {
        if (serverlessapprepo == null) return null;
        return serverlessapprepo.getValue("ProviderEndpointArgs.serverlessapprepo");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> serverlessrepo;

    public String serverlessrepo() {
        if (serverlessrepo == null) return null;
        return serverlessrepo.getValue("ProviderEndpointArgs.serverlessrepo");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> servicecatalog;

    public String servicecatalog() {
        if (servicecatalog == null) return null;
        return servicecatalog.getValue("ProviderEndpointArgs.servicecatalog");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> servicecatalogappregistry;

    public String servicecatalogappregistry() {
        if (servicecatalogappregistry == null) return null;
        return servicecatalogappregistry.getValue("ProviderEndpointArgs.servicecatalogappregistry");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> servicediscovery;

    public String servicediscovery() {
        if (servicediscovery == null) return null;
        return servicediscovery.getValue("ProviderEndpointArgs.servicediscovery");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> servicequotas;

    public String servicequotas() {
        if (servicequotas == null) return null;
        return servicequotas.getValue("ProviderEndpointArgs.servicequotas");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> ses;

    public String ses() {
        if (ses == null) return null;
        return ses.getValue("ProviderEndpointArgs.ses");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> sesv2;

    public String sesv2() {
        if (sesv2 == null) return null;
        return sesv2.getValue("ProviderEndpointArgs.sesv2");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> sfn;

    public String sfn() {
        if (sfn == null) return null;
        return sfn.getValue("ProviderEndpointArgs.sfn");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> shield;

    public String shield() {
        if (shield == null) return null;
        return shield.getValue("ProviderEndpointArgs.shield");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> signer;

    public String signer() {
        if (signer == null) return null;
        return signer.getValue("ProviderEndpointArgs.signer");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> simpledb;

    public String simpledb() {
        if (simpledb == null) return null;
        return simpledb.getValue("ProviderEndpointArgs.simpledb");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> sns;

    public String sns() {
        if (sns == null) return null;
        return sns.getValue("ProviderEndpointArgs.sns");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> sqs;

    public String sqs() {
        if (sqs == null) return null;
        return sqs.getValue("ProviderEndpointArgs.sqs");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> ssm;

    public String ssm() {
        if (ssm == null) return null;
        return ssm.getValue("ProviderEndpointArgs.ssm");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> ssmcontacts;

    public String ssmcontacts() {
        if (ssmcontacts == null) return null;
        return ssmcontacts.getValue("ProviderEndpointArgs.ssmcontacts");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> ssmincidents;

    public String ssmincidents() {
        if (ssmincidents == null) return null;
        return ssmincidents.getValue("ProviderEndpointArgs.ssmincidents");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> ssmquicksetup;

    public String ssmquicksetup() {
        if (ssmquicksetup == null) return null;
        return ssmquicksetup.getValue("ProviderEndpointArgs.ssmquicksetup");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> ssmsap;

    public String ssmsap() {
        if (ssmsap == null) return null;
        return ssmsap.getValue("ProviderEndpointArgs.ssmsap");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> sso;

    public String sso() {
        if (sso == null) return null;
        return sso.getValue("ProviderEndpointArgs.sso");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> ssoadmin;

    public String ssoadmin() {
        if (ssoadmin == null) return null;
        return ssoadmin.getValue("ProviderEndpointArgs.ssoadmin");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> stepfunctions;

    public String stepfunctions() {
        if (stepfunctions == null) return null;
        return stepfunctions.getValue("ProviderEndpointArgs.stepfunctions");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> storagegateway;

    public String storagegateway() {
        if (storagegateway == null) return null;
        return storagegateway.getValue("ProviderEndpointArgs.storagegateway");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> sts;

    public String sts() {
        if (sts == null) return null;
        return sts.getValue("ProviderEndpointArgs.sts");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> swf;

    public String swf() {
        if (swf == null) return null;
        return swf.getValue("ProviderEndpointArgs.swf");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> synthetics;

    public String synthetics() {
        if (synthetics == null) return null;
        return synthetics.getValue("ProviderEndpointArgs.synthetics");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> taxsettings;

    public String taxsettings() {
        if (taxsettings == null) return null;
        return taxsettings.getValue("ProviderEndpointArgs.taxsettings");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> timestreaminfluxdb;

    public String timestreaminfluxdb() {
        if (timestreaminfluxdb == null) return null;
        return timestreaminfluxdb.getValue("ProviderEndpointArgs.timestreaminfluxdb");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> timestreamquery;

    public String timestreamquery() {
        if (timestreamquery == null) return null;
        return timestreamquery.getValue("ProviderEndpointArgs.timestreamquery");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> timestreamwrite;

    public String timestreamwrite() {
        if (timestreamwrite == null) return null;
        return timestreamwrite.getValue("ProviderEndpointArgs.timestreamwrite");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> transcribe;

    public String transcribe() {
        if (transcribe == null) return null;
        return transcribe.getValue("ProviderEndpointArgs.transcribe");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> transcribeservice;

    public String transcribeservice() {
        if (transcribeservice == null) return null;
        return transcribeservice.getValue("ProviderEndpointArgs.transcribeservice");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> transfer;

    public String transfer() {
        if (transfer == null) return null;
        return transfer.getValue("ProviderEndpointArgs.transfer");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> verifiedpermissions;

    public String verifiedpermissions() {
        if (verifiedpermissions == null) return null;
        return verifiedpermissions.getValue("ProviderEndpointArgs.verifiedpermissions");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> vpclattice;

    public String vpclattice() {
        if (vpclattice == null) return null;
        return vpclattice.getValue("ProviderEndpointArgs.vpclattice");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> waf;

    public String waf() {
        if (waf == null) return null;
        return waf.getValue("ProviderEndpointArgs.waf");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> wafregional;

    public String wafregional() {
        if (wafregional == null) return null;
        return wafregional.getValue("ProviderEndpointArgs.wafregional");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> wafv2;

    public String wafv2() {
        if (wafv2 == null) return null;
        return wafv2.getValue("ProviderEndpointArgs.wafv2");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> wellarchitected;

    public String wellarchitected() {
        if (wellarchitected == null) return null;
        return wellarchitected.getValue("ProviderEndpointArgs.wellarchitected");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> worklink;

    public String worklink() {
        if (worklink == null) return null;
        return worklink.getValue("ProviderEndpointArgs.worklink");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> workspaces;

    public String workspaces() {
        if (workspaces == null) return null;
        return workspaces.getValue("ProviderEndpointArgs.workspaces");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> workspacesweb;

    public String workspacesweb() {
        if (workspacesweb == null) return null;
        return workspacesweb.getValue("ProviderEndpointArgs.workspacesweb");
    }

    /**
     * Use this to override the default service endpoint URL
     * 
     */
    private UndeferrableValue<String> xray;

    public String xray() {
        if (xray == null) return null;
        return xray.getValue("ProviderEndpointArgs.xray");
    }

}
