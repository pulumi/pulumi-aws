// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.apigatewayv2.inputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class StageDefaultRouteSettingsArgs {

    /**
     * Whether data trace logging is enabled for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.
     * Defaults to `false`. Supported only for WebSocket APIs.
     * 
     */
    private UndeferrableValue<Boolean> dataTraceEnabled;

    public Boolean dataTraceEnabled() {
        if (dataTraceEnabled == null) return null;
        return dataTraceEnabled.getValue("StageDefaultRouteSettingsArgs.dataTraceEnabled");
    }

    /**
     * Whether detailed metrics are enabled for the default route. Defaults to `false`.
     * 
     */
    private UndeferrableValue<Boolean> detailedMetricsEnabled;

    public Boolean detailedMetricsEnabled() {
        if (detailedMetricsEnabled == null) return null;
        return detailedMetricsEnabled.getValue("StageDefaultRouteSettingsArgs.detailedMetricsEnabled");
    }

    /**
     * Logging level for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.
     * Valid values: `ERROR`, `INFO`, `OFF`. Defaults to `OFF`. Supported only for WebSocket APIs. This provider will only perform drift detection of its value when present in a configuration.
     * 
     */
    private UndeferrableValue<String> loggingLevel;

    public String loggingLevel() {
        if (loggingLevel == null) return null;
        return loggingLevel.getValue("StageDefaultRouteSettingsArgs.loggingLevel");
    }

    /**
     * Throttling burst limit for the default route.
     * 
     */
    private UndeferrableValue<Integer> throttlingBurstLimit;

    public Integer throttlingBurstLimit() {
        if (throttlingBurstLimit == null) return null;
        return throttlingBurstLimit.getValue("StageDefaultRouteSettingsArgs.throttlingBurstLimit");
    }

    /**
     * Throttling rate limit for the default route.
     * 
     */
    private UndeferrableValue<Double> throttlingRateLimit;

    public Double throttlingRateLimit() {
        if (throttlingRateLimit == null) return null;
        return throttlingRateLimit.getValue("StageDefaultRouteSettingsArgs.throttlingRateLimit");
    }

}
