// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.s3control.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.s3control.outputs.BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload;
import com.pulumi.policypacks.aws.s3control.outputs.BucketLifecycleConfigurationRuleExpiration;
import com.pulumi.policypacks.aws.s3control.outputs.BucketLifecycleConfigurationRuleFilter;
import java.lang.String;
import javax.annotation.Nullable;


public final class BucketLifecycleConfigurationRule {

    /**
     * Configuration block containing settings for abort incomplete multipart upload.
     * 
     */
    private @Nullable UndeferrableValue<BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload> abortIncompleteMultipartUpload;

    public @Nullable BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload abortIncompleteMultipartUpload() {
        if (abortIncompleteMultipartUpload == null) return null;
        return abortIncompleteMultipartUpload.getValue("BucketLifecycleConfigurationRule.abortIncompleteMultipartUpload");
    }

    /**
     * Configuration block containing settings for expiration of objects.
     * 
     */
    private @Nullable UndeferrableValue<BucketLifecycleConfigurationRuleExpiration> expiration;

    public @Nullable BucketLifecycleConfigurationRuleExpiration expiration() {
        if (expiration == null) return null;
        return expiration.getValue("BucketLifecycleConfigurationRule.expiration");
    }

    /**
     * Configuration block containing settings for filtering.
     * 
     */
    private @Nullable UndeferrableValue<BucketLifecycleConfigurationRuleFilter> filter;

    public @Nullable BucketLifecycleConfigurationRuleFilter filter() {
        if (filter == null) return null;
        return filter.getValue("BucketLifecycleConfigurationRule.filter");
    }

    /**
     * Unique identifier for the rule.
     * 
     */
    private UndeferrableValue<String> id;

    public String id() {
        if (id == null) return null;
        return id.getValue("BucketLifecycleConfigurationRule.id");
    }

    /**
     * Status of the rule. Valid values: `Enabled` and `Disabled`. Defaults to `Enabled`.
     * 
     */
    private @Nullable UndeferrableValue<String> status;

    public @Nullable String status() {
        if (status == null) return null;
        return status.getValue("BucketLifecycleConfigurationRule.status");
    }

}
