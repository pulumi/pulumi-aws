// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ec2.VpcEndpointDnsEntry;
import com.pulumi.policypacks.aws.ec2.VpcEndpointDnsOptions;
import com.pulumi.policypacks.aws.ec2.VpcEndpointSubnetConfiguration;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:ec2/vpcEndpoint:VpcEndpoint")
public final class VpcEndpoint extends com.pulumi.resources.PolicyResource {

    /**
     * The Amazon Resource Name (ARN) of the VPC endpoint.
     * 
     */
    public String arn;



    /**
     * Accept the VPC endpoint (the VPC endpoint and service need to be in the same AWS account).
     * 
     */
    public Boolean autoAccept;



    /**
     * The list of CIDR blocks for the exposed AWS service. Applicable for endpoints of type `Gateway`.
     * 
     */
    public List<String> cidrBlocks;



    /**
     * The DNS entries for the VPC Endpoint. Applicable for endpoints of type `Interface`. DNS blocks are documented below.
     * 
     */
    public List<VpcEndpointDnsEntry> dnsEntries;



    /**
     * The DNS options for the endpoint. See dns_options below.
     * 
     */
    public VpcEndpointDnsOptions dnsOptions;



    /**
     * The IP address type for the endpoint. Valid values are `ipv4`, `dualstack`, and `ipv6`.
     * 
     */
    public String ipAddressType;



    /**
     * One or more network interfaces for the VPC Endpoint. Applicable for endpoints of type `Interface`.
     * 
     */
    public List<String> networkInterfaceIds;



    /**
     * The ID of the AWS account that owns the VPC endpoint.
     * 
     */
    public String ownerId;



    /**
     * A policy to attach to the endpoint that controls access to the service. This is a JSON formatted string. Defaults to full access. All `Gateway` and some `Interface` endpoints support policies - see the [relevant AWS documentation](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-endpoints-access.html) for more details.
     * 
     */
    public String policy;



    /**
     * The prefix list ID of the exposed AWS service. Applicable for endpoints of type `Gateway`.
     * 
     */
    public String prefixListId;



    /**
     * Whether or not to associate a private hosted zone with the specified VPC. Applicable for endpoints of type `Interface`. Most users will want this enabled to allow services within the VPC to automatically use the endpoint.
     * Defaults to `false`.
     * 
     */
    public Boolean privateDnsEnabled;



    /**
     * Whether or not the VPC Endpoint is being managed by its service - `true` or `false`.
     * 
     */
    public Boolean requesterManaged;



    /**
     * The ARN of a Resource Configuration to connect this VPC Endpoint to. Exactly one of `resource_configuration_arn`, `service_name` or `service_network_arn` is required.
     * 
     */
    public String resourceConfigurationArn;



    /**
     * One or more route table IDs. Applicable for endpoints of type `Gateway`.
     * 
     */
    public List<String> routeTableIds;



    /**
     * The ID of one or more security groups to associate with the network interface. Applicable for endpoints of type `Interface`.
     * If no security groups are specified, the VPC&#39;s [default security group](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html#DefaultSecurityGroup) is associated with the endpoint.
     * 
     */
    public List<String> securityGroupIds;



    /**
     * The service name. For AWS services the service name is usually in the form `com.amazonaws.&lt;region&gt;.&lt;service&gt;` (the SageMaker AI Notebook service is an exception to this rule, the service name is in the form `aws.sagemaker.&lt;region&gt;.notebook`). Exactly one of `resource_configuration_arn`, `service_name` or `service_network_arn` is required.
     * 
     */
    public String serviceName;



    /**
     * The ARN of a Service Network to connect this VPC Endpoint to. Exactly one of `resource_configuration_arn`, `service_name` or `service_network_arn` is required.
     * 
     */
    public String serviceNetworkArn;



    /**
     * The AWS region of the VPC Endpoint Service. If specified, the VPC endpoint will connect to the service in the provided region. Applicable for endpoints of type `Interface`.
     * 
     */
    public String serviceRegion;



    /**
     * The state of the VPC endpoint.
     * 
     */
    public String state;



    /**
     * Subnet configuration for the endpoint, used to select specific IPv4 and/or IPv6 addresses to the endpoint. See subnet_configuration below.
     * 
     */
    public List<VpcEndpointSubnetConfiguration> subnetConfigurations;



    /**
     * The ID of one or more subnets in which to create a network interface for the endpoint. Applicable for endpoints of type `GatewayLoadBalancer` and `Interface`. Interface type endpoints cannot function without being assigned to a subnet.
     * 
     */
    public List<String> subnetIds;



    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



    /**
     * The VPC endpoint type, `Gateway`, `GatewayLoadBalancer`,`Interface`, `Resource` or `ServiceNetwork`. Defaults to `Gateway`.
     * 
     */
    public String vpcEndpointType;



    /**
     * The ID of the VPC in which the endpoint will be used.
     * 
     */
    public String vpcId;



}
