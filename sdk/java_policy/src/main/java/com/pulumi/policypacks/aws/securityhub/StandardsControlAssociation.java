// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.securityhub;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:securityhub/standardsControlAssociation:StandardsControlAssociation")
public final class StandardsControlAssociation extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The desired enablement status of the control in the standard. Valid values: `ENABLED`, `DISABLED`.
     * 
     */
    @PolicyResourceProperty(name="associationStatus", flag="unknown_associationStatus")
    private String value_associationStatus;
    private boolean unknown_associationStatus;
    public String associationStatus() {
        if (!unknown_associationStatus) return value_associationStatus;
        throw new UndeferrableValueException("Value 'StandardsControlAssociation.associationStatus' is not present");
    }

    /**
     * The unique identifier for the security control whose enablement status you want to update.
     * 
     */
    @PolicyResourceProperty(name="securityControlId", flag="unknown_securityControlId")
    private String value_securityControlId;
    private boolean unknown_securityControlId;
    public String securityControlId() {
        if (!unknown_securityControlId) return value_securityControlId;
        throw new UndeferrableValueException("Value 'StandardsControlAssociation.securityControlId' is not present");
    }

    /**
     * The Amazon Resource Name (ARN) of the standard in which you want to update the control&#39;s enablement status.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="standardsArn", flag="unknown_standardsArn")
    private String value_standardsArn;
    private boolean unknown_standardsArn;
    public String standardsArn() {
        if (!unknown_standardsArn) return value_standardsArn;
        throw new UndeferrableValueException("Value 'StandardsControlAssociation.standardsArn' is not present");
    }

    /**
     * The reason for updating the control&#39;s enablement status in the standard. Required when `association_status` is `DISABLED`.
     * 
     */
    @PolicyResourceProperty(name="updatedReason", flag="unknown_updatedReason")
    private @Nullable String value_updatedReason;
    private boolean unknown_updatedReason;
    public @Nullable String updatedReason() {
        if (!unknown_updatedReason) return value_updatedReason;
        throw new UndeferrableValueException("Value 'StandardsControlAssociation.updatedReason' is not present");
    }

}
