// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cognito;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:cognito/userGroup:UserGroup")
public final class UserGroupArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The description of the user group.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'UserGroupArgs.description' is not present");
    }

    /**
     * The name of the user group.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'UserGroupArgs.name' is not present");
    }

    /**
     * The precedence of the user group.
     * 
     */
    @PolicyResourceProperty(name="precedence", flag="unknown_precedence")
    private Integer value_precedence;
    private boolean unknown_precedence;
    public Integer precedence() {
        if (!unknown_precedence) return value_precedence;
        throw new UndeferrableValueException("Value 'UserGroupArgs.precedence' is not present");
    }

    /**
     * The ARN of the IAM role to be associated with the user group.
     * 
     */
    @PolicyResourceProperty(name="roleArn", flag="unknown_roleArn")
    private String value_roleArn;
    private boolean unknown_roleArn;
    public String roleArn() {
        if (!unknown_roleArn) return value_roleArn;
        throw new UndeferrableValueException("Value 'UserGroupArgs.roleArn' is not present");
    }

    /**
     * The user pool ID.
     * 
     */
    @PolicyResourceProperty(name="userPoolId", flag="unknown_userPoolId")
    private String value_userPoolId;
    private boolean unknown_userPoolId;
    public String userPoolId() {
        if (!unknown_userPoolId) return value_userPoolId;
        throw new UndeferrableValueException("Value 'UserGroupArgs.userPoolId' is not present");
    }

}
