// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lightsail;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.lightsail.DistributionCacheBehavior;
import com.pulumi.policypacks.aws.lightsail.DistributionCacheBehaviorSettings;
import com.pulumi.policypacks.aws.lightsail.DistributionDefaultCacheBehavior;
import com.pulumi.policypacks.aws.lightsail.DistributionLocation;
import com.pulumi.policypacks.aws.lightsail.DistributionOrigin;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:lightsail/distribution:Distribution")
public final class Distribution extends com.pulumi.resources.PolicyResource {

    /**
     * The alternate domain names of the distribution.
     * 
     */
    public List<String> alternativeDomainNames;



    /**
     * The Amazon Resource Name (ARN) of the distribution.
     * 
     */
    public String arn;



    /**
     * Bundle ID to use for the distribution.
     * 
     */
    public String bundleId;



    /**
     * An object that describes the cache behavior settings of the distribution. Detailed below
     * 
     * The following arguments are optional:
     * 
     */
    public DistributionCacheBehaviorSettings cacheBehaviorSettings;



    /**
     * A set of configuration blocks that describe the per-path cache behavior of the distribution. Detailed below
     * 
     */
    public List<DistributionCacheBehavior> cacheBehaviors;



    /**
     * The name of the SSL/TLS certificate attached to the distribution, if any.
     * 
     */
    public String certificateName;



    /**
     * The timestamp when the distribution was created.
     * 
     */
    public String createdAt;



    /**
     * Object that describes the default cache behavior of the distribution. Detailed below
     * 
     */
    public DistributionDefaultCacheBehavior defaultCacheBehavior;



    /**
     * The domain name of the distribution.
     * 
     */
    public String domainName;



    /**
     * The IP address type of the distribution. Default: `dualstack`.
     * 
     */
    public String ipAddressType;



    /**
     * Indicates whether the distribution is enabled. Default: `true`.
     * 
     */
    public Boolean isEnabled;



    /**
     * An object that describes the location of the distribution, such as the AWS Region and Availability Zone. Detailed below
     * 
     */
    public List<DistributionLocation> locations;



    /**
     * Name of the distribution.
     * 
     */
    public String name;



    /**
     * Object that describes the origin resource of the distribution, such as a Lightsail instance, bucket, or load balancer. Detailed below
     * 
     */
    public DistributionOrigin origin;



    /**
     * The public DNS of the origin.
     * 
     */
    public String originPublicDns;



    /**
     * The Lightsail resource type (e.g., Distribution).
     * 
     */
    public String resourceType;



    /**
     * The status of the distribution.
     * 
     */
    public String status;



    /**
     * The support code. Include this code in your email to support when you have questions about your Lightsail distribution. This code enables our support team to look up your Lightsail information more easily.
     * 
     */
    public String supportCode;



    /**
     * Map of tags for the Lightsail Distribution. To create a key-only tag, use an empty string as the value. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



}
