// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.budgets;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.budgets.inputs.BudgetActionActionThresholdArgs;
import com.pulumi.policypacks.aws.budgets.inputs.BudgetActionDefinitionArgs;
import com.pulumi.policypacks.aws.budgets.inputs.BudgetActionSubscriberArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:budgets/budgetAction:BudgetAction")
public final class BudgetActionArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The ID of the target account for budget. Will use current user&#39;s account_id by default if omitted.
     * 
     */
    private UndeferrableValue<String> accountId;

    public String accountId() {
        if (accountId == null) return null;
        return accountId.getValue("BudgetActionArgs.accountId");
    }

    /**
     * The trigger threshold of the action. See Action Threshold.
     * 
     */
    private UndeferrableValue<BudgetActionActionThresholdArgs> actionThreshold;

    public BudgetActionActionThresholdArgs actionThreshold() {
        if (actionThreshold == null) return null;
        return actionThreshold.getValue("BudgetActionArgs.actionThreshold");
    }

    /**
     * The type of action. This defines the type of tasks that can be carried out by this action. This field also determines the format for definition. Valid values are `APPLY_IAM_POLICY`, `APPLY_SCP_POLICY`, and `RUN_SSM_DOCUMENTS`.
     * 
     */
    private UndeferrableValue<String> actionType;

    public String actionType() {
        if (actionType == null) return null;
        return actionType.getValue("BudgetActionArgs.actionType");
    }

    /**
     * This specifies if the action needs manual or automatic approval. Valid values are `AUTOMATIC` and `MANUAL`.
     * 
     */
    private UndeferrableValue<String> approvalModel;

    public String approvalModel() {
        if (approvalModel == null) return null;
        return approvalModel.getValue("BudgetActionArgs.approvalModel");
    }

    /**
     * The name of a budget.
     * 
     */
    private UndeferrableValue<String> budgetName;

    public String budgetName() {
        if (budgetName == null) return null;
        return budgetName.getValue("BudgetActionArgs.budgetName");
    }

    /**
     * Specifies all of the type-specific parameters. See Definition.
     * 
     */
    private UndeferrableValue<BudgetActionDefinitionArgs> definition;

    public BudgetActionDefinitionArgs definition() {
        if (definition == null) return null;
        return definition.getValue("BudgetActionArgs.definition");
    }

    /**
     * The role passed for action execution and reversion. Roles and actions must be in the same account.
     * 
     */
    private UndeferrableValue<String> executionRoleArn;

    public String executionRoleArn() {
        if (executionRoleArn == null) return null;
        return executionRoleArn.getValue("BudgetActionArgs.executionRoleArn");
    }

    /**
     * The type of a notification. Valid values are `ACTUAL` or `FORECASTED`.
     * 
     */
    private UndeferrableValue<String> notificationType;

    public String notificationType() {
        if (notificationType == null) return null;
        return notificationType.getValue("BudgetActionArgs.notificationType");
    }

    /**
     * A list of subscribers. See Subscriber.
     * 
     */
    private UndeferrableValue<List<BudgetActionSubscriberArgs>> subscribers;

    public List<BudgetActionSubscriberArgs> subscribers() {
        if (subscribers == null) return null;
        return subscribers.getValue("BudgetActionArgs.subscribers");
    }

    /**
     * Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("BudgetActionArgs.tags");
    }

}
