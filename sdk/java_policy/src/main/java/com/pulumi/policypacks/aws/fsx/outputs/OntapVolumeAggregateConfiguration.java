// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.fsx.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class OntapVolumeAggregateConfiguration {

    /**
     * Used to specify the names of the aggregates on which the volume will be created. Each aggregate needs to be in the format aggrX where X is the number of the aggregate.
     * 
     */
    @PolicyResourceProperty(name="aggregates", flag="unknown_aggregates")
    private @Nullable List<String> value_aggregates;
    private boolean unknown_aggregates;
    public @Nullable List<String> aggregates() {
        if (!unknown_aggregates) return value_aggregates;
        throw new UndeferrableValueException("Value 'OntapVolumeAggregateConfiguration.aggregates' is not present");
    }

    /**
     * Used to explicitly set the number of constituents within the FlexGroup per storage aggregate. the default value is `8`.
     * 
     */
    @PolicyResourceProperty(name="constituentsPerAggregate", flag="unknown_constituentsPerAggregate")
    private @Nullable Integer value_constituentsPerAggregate;
    private boolean unknown_constituentsPerAggregate;
    public @Nullable Integer constituentsPerAggregate() {
        if (!unknown_constituentsPerAggregate) return value_constituentsPerAggregate;
        throw new UndeferrableValueException("Value 'OntapVolumeAggregateConfiguration.constituentsPerAggregate' is not present");
    }

    /**
     * The total amount of constituents for a `FLEXGROUP` volume. This would equal constituents_per_aggregate x aggregates.
     * 
     */
    @PolicyResourceProperty(name="totalConstituents", flag="unknown_totalConstituents")
    private @Nullable Integer value_totalConstituents;
    private boolean unknown_totalConstituents;
    public @Nullable Integer totalConstituents() {
        if (!unknown_totalConstituents) return value_totalConstituents;
        throw new UndeferrableValueException("Value 'OntapVolumeAggregateConfiguration.totalConstituents' is not present");
    }

}
