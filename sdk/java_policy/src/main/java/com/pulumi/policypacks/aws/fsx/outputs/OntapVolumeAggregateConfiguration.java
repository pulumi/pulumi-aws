// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.fsx.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class OntapVolumeAggregateConfiguration {

    /**
     * Used to specify the names of the aggregates on which the volume will be created. Each aggregate needs to be in the format aggrX where X is the number of the aggregate.
     * 
     */
    private @Nullable UndeferrableValue<List<String>> aggregates;

    public @Nullable List<String> aggregates() {
        if (aggregates == null) return null;
        return aggregates.getValue("OntapVolumeAggregateConfiguration.aggregates");
    }

    /**
     * Used to explicitly set the number of constituents within the FlexGroup per storage aggregate. the default value is `8`.
     * 
     */
    private @Nullable UndeferrableValue<Integer> constituentsPerAggregate;

    public @Nullable Integer constituentsPerAggregate() {
        if (constituentsPerAggregate == null) return null;
        return constituentsPerAggregate.getValue("OntapVolumeAggregateConfiguration.constituentsPerAggregate");
    }

    /**
     * The total amount of constituents for a `FLEXGROUP` volume. This would equal constituents_per_aggregate x aggregates.
     * 
     */
    private @Nullable UndeferrableValue<Integer> totalConstituents;

    public @Nullable Integer totalConstituents() {
        if (totalConstituents == null) return null;
        return totalConstituents.getValue("OntapVolumeAggregateConfiguration.totalConstituents");
    }

}
