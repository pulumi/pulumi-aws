// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cognito;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.cognito.IdentityPoolCognitoIdentityProvider;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:cognito/identityPool:IdentityPool")
public final class IdentityPool extends com.pulumi.resources.PolicyResource {

    /**
     * Enables or disables the classic / basic authentication flow. Default is `false`.
     * 
     */
    public Boolean allowClassicFlow;



    /**
     * Whether the identity pool supports unauthenticated logins or not.
     * 
     */
    public Boolean allowUnauthenticatedIdentities;



    /**
     * The ARN of the identity pool.
     * 
     */
    public String arn;



    /**
     * An array of Amazon Cognito Identity user pools and their client IDs.
     * 
     */
    public List<IdentityPoolCognitoIdentityProvider> cognitoIdentityProviders;



    /**
     * The &#34;domain&#34; by which Cognito will refer to your users. This name acts as a placeholder that allows your
     * backend and the Cognito service to communicate about the developer provider.
     * 
     */
    public String developerProviderName;



    /**
     * The Cognito Identity Pool name.
     * 
     */
    public String identityPoolName;



    /**
     * Set of OpendID Connect provider ARNs.
     * 
     */
    public List<String> openidConnectProviderArns;



    /**
     * An array of Amazon Resource Names (ARNs) of the SAML provider for your identity.
     * 
     */
    public List<String> samlProviderArns;



    /**
     * Key-Value pairs mapping provider names to provider app IDs.
     * 
     */
    public Map<String,String> supportedLoginProviders;



    /**
     * A map of tags to assign to the Identity Pool. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



}
