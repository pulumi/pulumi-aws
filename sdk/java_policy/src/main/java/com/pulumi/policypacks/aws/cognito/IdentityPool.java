// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cognito;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.cognito.outputs.IdentityPoolCognitoIdentityProvider;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:cognito/identityPool:IdentityPool")
public final class IdentityPool extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Enables or disables the classic / basic authentication flow. Default is `false`.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> allowClassicFlow;

    public @Nullable Boolean allowClassicFlow() {
        if (allowClassicFlow == null) return null;
        return allowClassicFlow.getValue("IdentityPool.allowClassicFlow");
    }

    /**
     * Whether the identity pool supports unauthenticated logins or not.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> allowUnauthenticatedIdentities;

    public @Nullable Boolean allowUnauthenticatedIdentities() {
        if (allowUnauthenticatedIdentities == null) return null;
        return allowUnauthenticatedIdentities.getValue("IdentityPool.allowUnauthenticatedIdentities");
    }

    /**
     * The ARN of the identity pool.
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("IdentityPool.arn");
    }

    /**
     * An array of Amazon Cognito Identity user pools and their client IDs.
     * 
     */
    private @Nullable UndeferrableValue<List<IdentityPoolCognitoIdentityProvider>> cognitoIdentityProviders;

    public @Nullable List<IdentityPoolCognitoIdentityProvider> cognitoIdentityProviders() {
        if (cognitoIdentityProviders == null) return null;
        return cognitoIdentityProviders.getValue("IdentityPool.cognitoIdentityProviders");
    }

    /**
     * The &#34;domain&#34; by which Cognito will refer to your users. This name acts as a placeholder that allows your
     * backend and the Cognito service to communicate about the developer provider.
     * 
     */
    private @Nullable UndeferrableValue<String> developerProviderName;

    public @Nullable String developerProviderName() {
        if (developerProviderName == null) return null;
        return developerProviderName.getValue("IdentityPool.developerProviderName");
    }

    /**
     * The Cognito Identity Pool name.
     * 
     */
    private UndeferrableValue<String> identityPoolName;

    public String identityPoolName() {
        if (identityPoolName == null) return null;
        return identityPoolName.getValue("IdentityPool.identityPoolName");
    }

    /**
     * Set of OpendID Connect provider ARNs.
     * 
     */
    private @Nullable UndeferrableValue<List<String>> openidConnectProviderArns;

    public @Nullable List<String> openidConnectProviderArns() {
        if (openidConnectProviderArns == null) return null;
        return openidConnectProviderArns.getValue("IdentityPool.openidConnectProviderArns");
    }

    /**
     * An array of Amazon Resource Names (ARNs) of the SAML provider for your identity.
     * 
     */
    private @Nullable UndeferrableValue<List<String>> samlProviderArns;

    public @Nullable List<String> samlProviderArns() {
        if (samlProviderArns == null) return null;
        return samlProviderArns.getValue("IdentityPool.samlProviderArns");
    }

    /**
     * Key-Value pairs mapping provider names to provider app IDs.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> supportedLoginProviders;

    public @Nullable Map<String,String> supportedLoginProviders() {
        if (supportedLoginProviders == null) return null;
        return supportedLoginProviders.getValue("IdentityPool.supportedLoginProviders");
    }

    /**
     * A map of tags to assign to the Identity Pool. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("IdentityPool.tags");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("IdentityPool.tagsAll");
    }

}
