// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lambda;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:lambda/provisionedConcurrencyConfig:ProvisionedConcurrencyConfig")
public final class ProvisionedConcurrencyConfigArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Name or Amazon Resource Name (ARN) of the Lambda Function.
     * 
     */
    @PolicyResourceProperty(name="functionName", flag="unknown_functionName")
    private String value_functionName;
    private boolean unknown_functionName;
    public String functionName() {
        if (!unknown_functionName) return value_functionName;
        throw new UndeferrableValueException("Value 'ProvisionedConcurrencyConfigArgs.functionName' is not present");
    }

    /**
     * Amount of capacity to allocate. Must be greater than or equal to `1`.
     * 
     */
    @PolicyResourceProperty(name="provisionedConcurrentExecutions", flag="unknown_provisionedConcurrentExecutions")
    private Integer value_provisionedConcurrentExecutions;
    private boolean unknown_provisionedConcurrentExecutions;
    public Integer provisionedConcurrentExecutions() {
        if (!unknown_provisionedConcurrentExecutions) return value_provisionedConcurrentExecutions;
        throw new UndeferrableValueException("Value 'ProvisionedConcurrencyConfigArgs.provisionedConcurrentExecutions' is not present");
    }

    /**
     * Lambda Function version or Lambda Alias name.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="qualifier", flag="unknown_qualifier")
    private String value_qualifier;
    private boolean unknown_qualifier;
    public String qualifier() {
        if (!unknown_qualifier) return value_qualifier;
        throw new UndeferrableValueException("Value 'ProvisionedConcurrencyConfigArgs.qualifier' is not present");
    }

    /**
     * Whether to retain the provisoned concurrency configuration upon destruction. Defaults to `false`. If set to `true`, the resource in simply removed from state instead.
     * 
     */
    @PolicyResourceProperty(name="skipDestroy", flag="unknown_skipDestroy")
    private Boolean value_skipDestroy;
    private boolean unknown_skipDestroy;
    public Boolean skipDestroy() {
        if (!unknown_skipDestroy) return value_skipDestroy;
        throw new UndeferrableValueException("Value 'ProvisionedConcurrencyConfigArgs.skipDestroy' is not present");
    }

}
