// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.rds;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.rds.ReservedInstanceRecurringCharge;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:rds/reservedInstance:ReservedInstance")
public final class ReservedInstance extends com.pulumi.resources.PolicyResource {

    /**
     * ARN for the reserved DB instance.
     * 
     */
    public String arn;



    /**
     * Currency code for the reserved DB instance.
     * 
     */
    public String currencyCode;



    /**
     * DB instance class for the reserved DB instance.
     * 
     */
    public String dbInstanceClass;



    /**
     * Duration of the reservation in seconds.
     * 
     */
    public Integer duration;



    /**
     * Fixed price charged for this reserved DB instance.
     * 
     */
    public Double fixedPrice;



    /**
     * Number of instances to reserve. Default value is `1`.
     * 
     */
    public Integer instanceCount;



    /**
     * Unique identifier for the lease associated with the reserved DB instance. Amazon Web Services Support might request the lease ID for an issue related to a reserved DB instance.
     * 
     */
    public String leaseId;



    /**
     * Whether the reservation applies to Multi-AZ deployments.
     * 
     */
    public Boolean multiAz;



    /**
     * ID of the Reserved DB instance offering to purchase. To determine an `offering_id`, see the `aws.rds.getReservedInstanceOffering` data source.
     * 
     * The following arguments are optional:
     * 
     */
    public String offeringId;



    /**
     * Offering type of this reserved DB instance.
     * 
     */
    public String offeringType;



    /**
     * Description of the reserved DB instance.
     * 
     */
    public String productDescription;



    /**
     * Recurring price charged to run this reserved DB instance.
     * 
     */
    public List<ReservedInstanceRecurringCharge> recurringCharges;



    /**
     * Customer-specified identifier to track this reservation.
     * 
     */
    public String reservationId;



    /**
     * Time the reservation started.
     * 
     */
    public String startTime;



    /**
     * State of the reserved DB instance.
     * 
     */
    public String state;



    /**
     * Map of tags to assign to the DB reservation. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



    /**
     * Hourly price charged for this reserved DB instance.
     * 
     */
    public Double usagePrice;



}
