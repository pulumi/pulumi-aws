// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ssm;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ssm.PatchBaselineApprovalRule;
import com.pulumi.policypacks.aws.ssm.PatchBaselineGlobalFilter;
import com.pulumi.policypacks.aws.ssm.PatchBaselineSource;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:ssm/patchBaseline:PatchBaseline")
public final class PatchBaseline extends com.pulumi.resources.PolicyResource {

    /**
     * Set of rules used to include patches in the baseline. Up to 10 approval rules can be specified. See `approval_rule` below.
     * 
     */
    public List<PatchBaselineApprovalRule> approvalRules;



    /**
     * List of explicitly approved patches for the baseline. Cannot be specified with `approval_rule`.
     * 
     */
    public List<String> approvedPatches;



    /**
     * Compliance level for approved patches. This means that if an approved patch is reported as missing, this is the severity of the compliance violation. Valid values are `CRITICAL`, `HIGH`, `MEDIUM`, `LOW`, `INFORMATIONAL`, `UNSPECIFIED`. The default value is `UNSPECIFIED`.
     * 
     */
    public String approvedPatchesComplianceLevel;



    /**
     * Whether the list of approved patches includes non-security updates that should be applied to the instances. Applies to Linux instances only.
     * 
     */
    public Boolean approvedPatchesEnableNonSecurity;



    /**
     * ARN of the baseline.
     * 
     */
    public String arn;



    /**
     * Description of the patch baseline.
     * 
     */
    public String description;



    /**
     * Set of global filters used to exclude patches from the baseline. Up to 4 global filters can be specified using Key/Value pairs. Valid Keys are `PRODUCT`, `CLASSIFICATION`, `MSRC_SEVERITY`, and `PATCH_ID`.
     * 
     */
    public List<PatchBaselineGlobalFilter> globalFilters;



    /**
     * JSON definition of the baseline.
     * 
     */
    public String json;



    /**
     * Name of the patch baseline.
     * 
     * The following arguments are optional:
     * 
     */
    public String name;



    /**
     * Operating system the patch baseline applies to. Valid values are `ALMA_LINUX`, `AMAZON_LINUX`, `AMAZON_LINUX_2`, `AMAZON_LINUX_2022`, `AMAZON_LINUX_2023`, `CENTOS`, `DEBIAN`, `MACOS`, `ORACLE_LINUX`, `RASPBIAN`, `REDHAT_ENTERPRISE_LINUX`, `ROCKY_LINUX`, `SUSE`, `UBUNTU`, and `WINDOWS`. The default value is `WINDOWS`.
     * 
     */
    public String operatingSystem;



    /**
     * List of rejected patches.
     * 
     */
    public List<String> rejectedPatches;



    /**
     * Action for Patch Manager to take on patches included in the `rejected_patches` list. Valid values are `ALLOW_AS_DEPENDENCY` and `BLOCK`.
     * 
     */
    public String rejectedPatchesAction;



    /**
     * Configuration block with alternate sources for patches. Applies to Linux instances only. See `source` below.
     * 
     */
    public List<PatchBaselineSource> sources;



    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



}
