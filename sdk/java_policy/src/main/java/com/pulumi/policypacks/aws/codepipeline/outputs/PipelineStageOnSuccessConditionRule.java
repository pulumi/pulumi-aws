// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.codepipeline.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.codepipeline.outputs.PipelineStageOnSuccessConditionRuleRuleTypeId;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


public final class PipelineStageOnSuccessConditionRule {

    /**
     * The shell commands to run with your commands rule in CodePipeline. All commands are supported except multi-line formats.
     * 
     */
    private @Nullable UndeferrableValue<List<String>> commands;

    public @Nullable List<String> commands() {
        if (commands == null) return null;
        return commands.getValue("PipelineStageOnSuccessConditionRule.commands");
    }

    /**
     * The action configuration fields for the rule. Configurations options for rule types and providers can be found in the [Rule structure reference](https://docs.aws.amazon.com/codepipeline/latest/userguide/rule-reference.html).
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> configuration;

    public @Nullable Map<String,String> configuration() {
        if (configuration == null) return null;
        return configuration.getValue("PipelineStageOnSuccessConditionRule.configuration");
    }

    /**
     * The list of the input artifacts fields for the rule, such as specifying an input file for the rule.
     * 
     */
    private @Nullable UndeferrableValue<List<String>> inputArtifacts;

    public @Nullable List<String> inputArtifacts() {
        if (inputArtifacts == null) return null;
        return inputArtifacts.getValue("PipelineStageOnSuccessConditionRule.inputArtifacts");
    }

    /**
     * The name of the rule that is created for the condition, such as `VariableCheck`.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("PipelineStageOnSuccessConditionRule.name");
    }

    /**
     * The Region for the condition associated with the rule.
     * 
     */
    private @Nullable UndeferrableValue<String> region;

    public @Nullable String region() {
        if (region == null) return null;
        return region.getValue("PipelineStageOnSuccessConditionRule.region");
    }

    /**
     * The pipeline role ARN associated with the rule.
     * 
     */
    private @Nullable UndeferrableValue<String> roleArn;

    public @Nullable String roleArn() {
        if (roleArn == null) return null;
        return roleArn.getValue("PipelineStageOnSuccessConditionRule.roleArn");
    }

    /**
     * The ID for the rule type, which is made up of the combined values for `category`, `owner`, `provider`, and `version`. Defined as an `rule_type_id` block below.
     * 
     */
    private UndeferrableValue<PipelineStageOnSuccessConditionRuleRuleTypeId> ruleTypeId;

    public PipelineStageOnSuccessConditionRuleRuleTypeId ruleTypeId() {
        if (ruleTypeId == null) return null;
        return ruleTypeId.getValue("PipelineStageOnSuccessConditionRule.ruleTypeId");
    }

    /**
     * The action timeout for the rule.
     * 
     */
    private @Nullable UndeferrableValue<Integer> timeoutInMinutes;

    public @Nullable Integer timeoutInMinutes() {
        if (timeoutInMinutes == null) return null;
        return timeoutInMinutes.getValue("PipelineStageOnSuccessConditionRule.timeoutInMinutes");
    }

}
