// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.quicksight.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.String;
import javax.annotation.Nullable;


public final class ThemeConfigurationUiColorPalette {

    /**
     * Color (hexadecimal) that applies to selected states and buttons.
     * 
     */
    @PolicyResourceProperty(name="accent", flag="unknown_accent")
    private @Nullable String value_accent;
    private boolean unknown_accent;
    public @Nullable String accent() {
        if (!unknown_accent) return value_accent;
        throw new UndeferrableValueException("Value 'ThemeConfigurationUiColorPalette.accent' is not present");
    }

    /**
     * Color (hexadecimal) that applies to any text or other elements that appear over the accent color.
     * 
     */
    @PolicyResourceProperty(name="accentForeground", flag="unknown_accentForeground")
    private @Nullable String value_accentForeground;
    private boolean unknown_accentForeground;
    public @Nullable String accentForeground() {
        if (!unknown_accentForeground) return value_accentForeground;
        throw new UndeferrableValueException("Value 'ThemeConfigurationUiColorPalette.accentForeground' is not present");
    }

    /**
     * Color (hexadecimal) that applies to error messages.
     * 
     */
    @PolicyResourceProperty(name="danger", flag="unknown_danger")
    private @Nullable String value_danger;
    private boolean unknown_danger;
    public @Nullable String danger() {
        if (!unknown_danger) return value_danger;
        throw new UndeferrableValueException("Value 'ThemeConfigurationUiColorPalette.danger' is not present");
    }

    /**
     * Color (hexadecimal) that applies to any text or other elements that appear over the error color.
     * 
     */
    @PolicyResourceProperty(name="dangerForeground", flag="unknown_dangerForeground")
    private @Nullable String value_dangerForeground;
    private boolean unknown_dangerForeground;
    public @Nullable String dangerForeground() {
        if (!unknown_dangerForeground) return value_dangerForeground;
        throw new UndeferrableValueException("Value 'ThemeConfigurationUiColorPalette.dangerForeground' is not present");
    }

    /**
     * Color (hexadecimal) that applies to the names of fields that are identified as dimensions.
     * 
     */
    @PolicyResourceProperty(name="dimension", flag="unknown_dimension")
    private @Nullable String value_dimension;
    private boolean unknown_dimension;
    public @Nullable String dimension() {
        if (!unknown_dimension) return value_dimension;
        throw new UndeferrableValueException("Value 'ThemeConfigurationUiColorPalette.dimension' is not present");
    }

    /**
     * Color (hexadecimal) that applies to any text or other elements that appear over the dimension color.
     * 
     */
    @PolicyResourceProperty(name="dimensionForeground", flag="unknown_dimensionForeground")
    private @Nullable String value_dimensionForeground;
    private boolean unknown_dimensionForeground;
    public @Nullable String dimensionForeground() {
        if (!unknown_dimensionForeground) return value_dimensionForeground;
        throw new UndeferrableValueException("Value 'ThemeConfigurationUiColorPalette.dimensionForeground' is not present");
    }

    /**
     * Color (hexadecimal) that applies to the names of fields that are identified as measures.
     * 
     */
    @PolicyResourceProperty(name="measure", flag="unknown_measure")
    private @Nullable String value_measure;
    private boolean unknown_measure;
    public @Nullable String measure() {
        if (!unknown_measure) return value_measure;
        throw new UndeferrableValueException("Value 'ThemeConfigurationUiColorPalette.measure' is not present");
    }

    /**
     * Color (hexadecimal) that applies to any text or other elements that appear over the measure color.
     * 
     */
    @PolicyResourceProperty(name="measureForeground", flag="unknown_measureForeground")
    private @Nullable String value_measureForeground;
    private boolean unknown_measureForeground;
    public @Nullable String measureForeground() {
        if (!unknown_measureForeground) return value_measureForeground;
        throw new UndeferrableValueException("Value 'ThemeConfigurationUiColorPalette.measureForeground' is not present");
    }

    /**
     * Color (hexadecimal) that applies to visuals and other high emphasis UI.
     * 
     */
    @PolicyResourceProperty(name="primaryBackground", flag="unknown_primaryBackground")
    private @Nullable String value_primaryBackground;
    private boolean unknown_primaryBackground;
    public @Nullable String primaryBackground() {
        if (!unknown_primaryBackground) return value_primaryBackground;
        throw new UndeferrableValueException("Value 'ThemeConfigurationUiColorPalette.primaryBackground' is not present");
    }

    /**
     * Color (hexadecimal) of text and other foreground elements that appear over the primary background regions, such as grid lines, borders, table banding, icons, and so on.
     * 
     */
    @PolicyResourceProperty(name="primaryForeground", flag="unknown_primaryForeground")
    private @Nullable String value_primaryForeground;
    private boolean unknown_primaryForeground;
    public @Nullable String primaryForeground() {
        if (!unknown_primaryForeground) return value_primaryForeground;
        throw new UndeferrableValueException("Value 'ThemeConfigurationUiColorPalette.primaryForeground' is not present");
    }

    /**
     * Color (hexadecimal) that applies to the sheet background and sheet controls.
     * 
     */
    @PolicyResourceProperty(name="secondaryBackground", flag="unknown_secondaryBackground")
    private @Nullable String value_secondaryBackground;
    private boolean unknown_secondaryBackground;
    public @Nullable String secondaryBackground() {
        if (!unknown_secondaryBackground) return value_secondaryBackground;
        throw new UndeferrableValueException("Value 'ThemeConfigurationUiColorPalette.secondaryBackground' is not present");
    }

    /**
     * Color (hexadecimal) that applies to any sheet title, sheet control text, or UI that appears over the secondary background.
     * 
     */
    @PolicyResourceProperty(name="secondaryForeground", flag="unknown_secondaryForeground")
    private @Nullable String value_secondaryForeground;
    private boolean unknown_secondaryForeground;
    public @Nullable String secondaryForeground() {
        if (!unknown_secondaryForeground) return value_secondaryForeground;
        throw new UndeferrableValueException("Value 'ThemeConfigurationUiColorPalette.secondaryForeground' is not present");
    }

    /**
     * Color (hexadecimal) that applies to success messages, for example the check mark for a successful download.
     * 
     */
    @PolicyResourceProperty(name="success", flag="unknown_success")
    private @Nullable String value_success;
    private boolean unknown_success;
    public @Nullable String success() {
        if (!unknown_success) return value_success;
        throw new UndeferrableValueException("Value 'ThemeConfigurationUiColorPalette.success' is not present");
    }

    /**
     * Color (hexadecimal) that applies to any text or other elements that appear over the success color.
     * 
     */
    @PolicyResourceProperty(name="successForeground", flag="unknown_successForeground")
    private @Nullable String value_successForeground;
    private boolean unknown_successForeground;
    public @Nullable String successForeground() {
        if (!unknown_successForeground) return value_successForeground;
        throw new UndeferrableValueException("Value 'ThemeConfigurationUiColorPalette.successForeground' is not present");
    }

    /**
     * Color (hexadecimal) that applies to warning and informational messages.
     * 
     */
    @PolicyResourceProperty(name="warning", flag="unknown_warning")
    private @Nullable String value_warning;
    private boolean unknown_warning;
    public @Nullable String warning() {
        if (!unknown_warning) return value_warning;
        throw new UndeferrableValueException("Value 'ThemeConfigurationUiColorPalette.warning' is not present");
    }

    /**
     * Color (hexadecimal) that applies to any text or other elements that appear over the warning color.
     * 
     */
    @PolicyResourceProperty(name="warningForeground", flag="unknown_warningForeground")
    private @Nullable String value_warningForeground;
    private boolean unknown_warningForeground;
    public @Nullable String warningForeground() {
        if (!unknown_warningForeground) return value_warningForeground;
        throw new UndeferrableValueException("Value 'ThemeConfigurationUiColorPalette.warningForeground' is not present");
    }

}
