// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lex.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.lex.inputs.V2modelsIntentConfirmationSettingCodeHookArgs;
import com.pulumi.policypacks.aws.lex.inputs.V2modelsIntentConfirmationSettingConfirmationConditionalArgs;
import com.pulumi.policypacks.aws.lex.inputs.V2modelsIntentConfirmationSettingConfirmationNextStepArgs;
import com.pulumi.policypacks.aws.lex.inputs.V2modelsIntentConfirmationSettingConfirmationResponseArgs;
import com.pulumi.policypacks.aws.lex.inputs.V2modelsIntentConfirmationSettingDeclinationConditionalArgs;
import com.pulumi.policypacks.aws.lex.inputs.V2modelsIntentConfirmationSettingDeclinationNextStepArgs;
import com.pulumi.policypacks.aws.lex.inputs.V2modelsIntentConfirmationSettingDeclinationResponseArgs;
import com.pulumi.policypacks.aws.lex.inputs.V2modelsIntentConfirmationSettingElicitationCodeHookArgs;
import com.pulumi.policypacks.aws.lex.inputs.V2modelsIntentConfirmationSettingFailureConditionalArgs;
import com.pulumi.policypacks.aws.lex.inputs.V2modelsIntentConfirmationSettingFailureNextStepArgs;
import com.pulumi.policypacks.aws.lex.inputs.V2modelsIntentConfirmationSettingFailureResponseArgs;
import com.pulumi.policypacks.aws.lex.inputs.V2modelsIntentConfirmationSettingPromptSpecificationArgs;
import java.lang.Boolean;
import javax.annotation.Nullable;


public final class V2modelsIntentConfirmationSettingArgs {

    /**
     * Whether the intent&#39;s confirmation is sent to the user. When this field is false, confirmation and declination responses aren&#39;t sent. If the active field isn&#39;t specified, the default is true.
     * 
     */
    private UndeferrableValue<Boolean> active;

    public Boolean active() {
        if (active == null) return null;
        return active.getValue("V2modelsIntentConfirmationSettingArgs.active");
    }

    /**
     * Configuration block for the intent&#39;s confirmation step. The dialog code hook is triggered based on these invocation settings when the confirmation next step or declination next step or failure next step is `invoke_dialog_code_hook`.  See `code_hook`.
     * 
     */
    private UndeferrableValue<V2modelsIntentConfirmationSettingCodeHookArgs> codeHook;

    public V2modelsIntentConfirmationSettingCodeHookArgs codeHook() {
        if (codeHook == null) return null;
        return codeHook.getValue("V2modelsIntentConfirmationSettingArgs.codeHook");
    }

    /**
     * Configuration block for conditional branches to evaluate after the intent is closed. See `confirmation_conditional`.
     * 
     */
    private UndeferrableValue<V2modelsIntentConfirmationSettingConfirmationConditionalArgs> confirmationConditional;

    public V2modelsIntentConfirmationSettingConfirmationConditionalArgs confirmationConditional() {
        if (confirmationConditional == null) return null;
        return confirmationConditional.getValue("V2modelsIntentConfirmationSettingArgs.confirmationConditional");
    }

    /**
     * Configuration block for the next step that the bot executes when the customer confirms the intent. See `confirmation_next_step`.
     * 
     */
    private UndeferrableValue<V2modelsIntentConfirmationSettingConfirmationNextStepArgs> confirmationNextStep;

    public V2modelsIntentConfirmationSettingConfirmationNextStepArgs confirmationNextStep() {
        if (confirmationNextStep == null) return null;
        return confirmationNextStep.getValue("V2modelsIntentConfirmationSettingArgs.confirmationNextStep");
    }

    /**
     * Configuration block for message groups that Amazon Lex uses to respond the user input. See `confirmation_response`.
     * 
     */
    private UndeferrableValue<V2modelsIntentConfirmationSettingConfirmationResponseArgs> confirmationResponse;

    public V2modelsIntentConfirmationSettingConfirmationResponseArgs confirmationResponse() {
        if (confirmationResponse == null) return null;
        return confirmationResponse.getValue("V2modelsIntentConfirmationSettingArgs.confirmationResponse");
    }

    /**
     * Configuration block for conditional branches to evaluate after the intent is declined. See `declination_conditional`.
     * 
     */
    private UndeferrableValue<V2modelsIntentConfirmationSettingDeclinationConditionalArgs> declinationConditional;

    public V2modelsIntentConfirmationSettingDeclinationConditionalArgs declinationConditional() {
        if (declinationConditional == null) return null;
        return declinationConditional.getValue("V2modelsIntentConfirmationSettingArgs.declinationConditional");
    }

    /**
     * Configuration block for the next step that the bot executes when the customer declines the intent. See `declination_next_step`.
     * 
     */
    private UndeferrableValue<V2modelsIntentConfirmationSettingDeclinationNextStepArgs> declinationNextStep;

    public V2modelsIntentConfirmationSettingDeclinationNextStepArgs declinationNextStep() {
        if (declinationNextStep == null) return null;
        return declinationNextStep.getValue("V2modelsIntentConfirmationSettingArgs.declinationNextStep");
    }

    /**
     * Configuration block for when the user answers &#34;no&#34; to the question defined in `prompt_specification`, Amazon Lex responds with this response to acknowledge that the intent was canceled. See `declination_response`.
     * 
     */
    private UndeferrableValue<V2modelsIntentConfirmationSettingDeclinationResponseArgs> declinationResponse;

    public V2modelsIntentConfirmationSettingDeclinationResponseArgs declinationResponse() {
        if (declinationResponse == null) return null;
        return declinationResponse.getValue("V2modelsIntentConfirmationSettingArgs.declinationResponse");
    }

    /**
     * Configuration block for when the code hook is invoked during confirmation prompt retries. See `elicitation_code_hook`.
     * 
     */
    private UndeferrableValue<V2modelsIntentConfirmationSettingElicitationCodeHookArgs> elicitationCodeHook;

    public V2modelsIntentConfirmationSettingElicitationCodeHookArgs elicitationCodeHook() {
        if (elicitationCodeHook == null) return null;
        return elicitationCodeHook.getValue("V2modelsIntentConfirmationSettingArgs.elicitationCodeHook");
    }

    /**
     * Configuration block for conditional branches. Branches are evaluated in the order that they are entered in the list. The first branch with a condition that evaluates to true is executed. The last branch in the list is the default branch. The default branch should not have any condition expression. The default branch is executed if no other branch has a matching condition. See `failure_conditional`.
     * 
     */
    private UndeferrableValue<V2modelsIntentConfirmationSettingFailureConditionalArgs> failureConditional;

    public V2modelsIntentConfirmationSettingFailureConditionalArgs failureConditional() {
        if (failureConditional == null) return null;
        return failureConditional.getValue("V2modelsIntentConfirmationSettingArgs.failureConditional");
    }

    /**
     * Configuration block for the next step to take in the conversation if the confirmation step fails. See `failure_next_step`.
     * 
     */
    private UndeferrableValue<V2modelsIntentConfirmationSettingFailureNextStepArgs> failureNextStep;

    public V2modelsIntentConfirmationSettingFailureNextStepArgs failureNextStep() {
        if (failureNextStep == null) return null;
        return failureNextStep.getValue("V2modelsIntentConfirmationSettingArgs.failureNextStep");
    }

    /**
     * Configuration block for message groups that Amazon Lex uses to respond the user input. See `failure_response`.
     * 
     */
    private UndeferrableValue<V2modelsIntentConfirmationSettingFailureResponseArgs> failureResponse;

    public V2modelsIntentConfirmationSettingFailureResponseArgs failureResponse() {
        if (failureResponse == null) return null;
        return failureResponse.getValue("V2modelsIntentConfirmationSettingArgs.failureResponse");
    }

    /**
     * Configuration block for prompting the user to confirm the intent. This question should have a yes or no answer. Amazon Lex uses this prompt to ensure that the user acknowledges that the intent is ready for fulfillment. See `prompt_specification`.
     * 
     */
    private UndeferrableValue<V2modelsIntentConfirmationSettingPromptSpecificationArgs> promptSpecification;

    public V2modelsIntentConfirmationSettingPromptSpecificationArgs promptSpecification() {
        if (promptSpecification == null) return null;
        return promptSpecification.getValue("V2modelsIntentConfirmationSettingArgs.promptSpecification");
    }

}
