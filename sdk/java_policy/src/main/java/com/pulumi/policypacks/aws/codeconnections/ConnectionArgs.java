// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.codeconnections;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.codeconnections.inputs.ConnectionTimeoutsArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:codeconnections/connection:Connection")
public final class ConnectionArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The Amazon Resource Name (ARN) of the host associated with the connection. Conflicts with `provider_type`
     * 
     */
    @PolicyResourceProperty(name="hostArn", flag="unknown_hostArn")
    private String value_hostArn;
    private boolean unknown_hostArn;
    public String hostArn() {
        if (!unknown_hostArn) return value_hostArn;
        throw new UndeferrableValueException("Value 'ConnectionArgs.hostArn' is not present");
    }

    /**
     * The name of the connection to be created. The name must be unique in the calling AWS account. Changing `name` will create a new resource.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'ConnectionArgs.name' is not present");
    }

    /**
     * The name of the external provider where your third-party code repository is configured. Changing `provider_type` will create a new resource. Conflicts with `host_arn`.
     * 
     */
    @PolicyResourceProperty(name="providerType", flag="unknown_providerType")
    private String value_providerType;
    private boolean unknown_providerType;
    public String providerType() {
        if (!unknown_providerType) return value_providerType;
        throw new UndeferrableValueException("Value 'ConnectionArgs.providerType' is not present");
    }

    /**
     * Map of key-value resource tags to associate with the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'ConnectionArgs.tags' is not present");
    }

    @PolicyResourceProperty(name="timeouts", flag="unknown_timeouts")
    private ConnectionTimeoutsArgs value_timeouts;
    private boolean unknown_timeouts;
    public ConnectionTimeoutsArgs timeouts() {
        if (!unknown_timeouts) return value_timeouts;
        throw new UndeferrableValueException("Value 'ConnectionArgs.timeouts' is not present");
    }

}
