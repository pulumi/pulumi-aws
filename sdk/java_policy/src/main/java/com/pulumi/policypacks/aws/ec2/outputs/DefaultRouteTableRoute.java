// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.String;
import javax.annotation.Nullable;


public final class DefaultRouteTableRoute {

    /**
     * The CIDR block of the route.
     * 
     */
    private @Nullable UndeferrableValue<String> cidrBlock;

    public @Nullable String cidrBlock() {
        if (cidrBlock == null) return null;
        return cidrBlock.getValue("DefaultRouteTableRoute.cidrBlock");
    }

    /**
     * The Amazon Resource Name (ARN) of a core network.
     * 
     */
    private @Nullable UndeferrableValue<String> coreNetworkArn;

    public @Nullable String coreNetworkArn() {
        if (coreNetworkArn == null) return null;
        return coreNetworkArn.getValue("DefaultRouteTableRoute.coreNetworkArn");
    }

    /**
     * The ID of a managed prefix list destination of the route.
     * 
     * One of the following target arguments must be supplied:
     * 
     */
    private @Nullable UndeferrableValue<String> destinationPrefixListId;

    public @Nullable String destinationPrefixListId() {
        if (destinationPrefixListId == null) return null;
        return destinationPrefixListId.getValue("DefaultRouteTableRoute.destinationPrefixListId");
    }

    /**
     * Identifier of a VPC Egress Only Internet Gateway.
     * 
     */
    private @Nullable UndeferrableValue<String> egressOnlyGatewayId;

    public @Nullable String egressOnlyGatewayId() {
        if (egressOnlyGatewayId == null) return null;
        return egressOnlyGatewayId.getValue("DefaultRouteTableRoute.egressOnlyGatewayId");
    }

    /**
     * Identifier of a VPC internet gateway or a virtual private gateway.
     * 
     */
    private @Nullable UndeferrableValue<String> gatewayId;

    public @Nullable String gatewayId() {
        if (gatewayId == null) return null;
        return gatewayId.getValue("DefaultRouteTableRoute.gatewayId");
    }

    /**
     * Identifier of an EC2 instance.
     * 
     */
    private @Nullable UndeferrableValue<String> instanceId;

    public @Nullable String instanceId() {
        if (instanceId == null) return null;
        return instanceId.getValue("DefaultRouteTableRoute.instanceId");
    }

    /**
     * The Ipv6 CIDR block of the route
     * 
     */
    private @Nullable UndeferrableValue<String> ipv6CidrBlock;

    public @Nullable String ipv6CidrBlock() {
        if (ipv6CidrBlock == null) return null;
        return ipv6CidrBlock.getValue("DefaultRouteTableRoute.ipv6CidrBlock");
    }

    /**
     * Identifier of a VPC NAT gateway.
     * 
     */
    private @Nullable UndeferrableValue<String> natGatewayId;

    public @Nullable String natGatewayId() {
        if (natGatewayId == null) return null;
        return natGatewayId.getValue("DefaultRouteTableRoute.natGatewayId");
    }

    /**
     * Identifier of an EC2 network interface.
     * 
     */
    private @Nullable UndeferrableValue<String> networkInterfaceId;

    public @Nullable String networkInterfaceId() {
        if (networkInterfaceId == null) return null;
        return networkInterfaceId.getValue("DefaultRouteTableRoute.networkInterfaceId");
    }

    /**
     * Identifier of an EC2 Transit Gateway.
     * 
     */
    private @Nullable UndeferrableValue<String> transitGatewayId;

    public @Nullable String transitGatewayId() {
        if (transitGatewayId == null) return null;
        return transitGatewayId.getValue("DefaultRouteTableRoute.transitGatewayId");
    }

    /**
     * Identifier of a VPC Endpoint. This route must be removed prior to VPC Endpoint deletion.
     * 
     */
    private @Nullable UndeferrableValue<String> vpcEndpointId;

    public @Nullable String vpcEndpointId() {
        if (vpcEndpointId == null) return null;
        return vpcEndpointId.getValue("DefaultRouteTableRoute.vpcEndpointId");
    }

    /**
     * Identifier of a VPC peering connection.
     * 
     * Note that the default route, mapping the VPC&#39;s CIDR block to &#34;local&#34;, is created implicitly and cannot be specified.
     * 
     */
    private @Nullable UndeferrableValue<String> vpcPeeringConnectionId;

    public @Nullable String vpcPeeringConnectionId() {
        if (vpcPeeringConnectionId == null) return null;
        return vpcPeeringConnectionId.getValue("DefaultRouteTableRoute.vpcPeeringConnectionId");
    }

}
