// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ecs.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.ecs.outputs.ServiceServiceConnectConfigurationLogConfiguration;
import com.pulumi.policypacks.aws.ecs.outputs.ServiceServiceConnectConfigurationService;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class ServiceServiceConnectConfiguration {

    /**
     * Whether to use Service Connect with this service.
     * 
     */
    private UndeferrableValue<Boolean> enabled;

    public Boolean enabled() {
        if (enabled == null) return null;
        return enabled.getValue("ServiceServiceConnectConfiguration.enabled");
    }

    /**
     * Log configuration for the container. See below.
     * 
     */
    private @Nullable UndeferrableValue<ServiceServiceConnectConfigurationLogConfiguration> logConfiguration;

    public @Nullable ServiceServiceConnectConfigurationLogConfiguration logConfiguration() {
        if (logConfiguration == null) return null;
        return logConfiguration.getValue("ServiceServiceConnectConfiguration.logConfiguration");
    }

    /**
     * Namespace name or ARN of the `aws.servicediscovery.HttpNamespace` for use with Service Connect.
     * 
     */
    private @Nullable UndeferrableValue<String> namespace;

    public @Nullable String namespace() {
        if (namespace == null) return null;
        return namespace.getValue("ServiceServiceConnectConfiguration.namespace");
    }

    /**
     * List of Service Connect service objects. See below.
     * 
     */
    private @Nullable UndeferrableValue<List<ServiceServiceConnectConfigurationService>> services;

    public @Nullable List<ServiceServiceConnectConfigurationService> services() {
        if (services == null) return null;
        return services.getValue("ServiceServiceConnectConfiguration.services");
    }

}
