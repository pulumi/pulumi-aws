// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.fms;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.fms.inputs.PolicyExcludeMapArgs;
import com.pulumi.policypacks.aws.fms.inputs.PolicyIncludeMapArgs;
import com.pulumi.policypacks.aws.fms.inputs.PolicySecurityServicePolicyDataArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:fms/policy:Policy")
public final class PolicyArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * If true, the request will also perform a clean-up process. Defaults to `true`. More information can be found here [AWS Firewall Manager delete policy](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_DeletePolicy.html)
     * 
     */
    @PolicyResourceProperty(name="deleteAllPolicyResources", flag="unknown_deleteAllPolicyResources")
    private Boolean value_deleteAllPolicyResources;
    private boolean unknown_deleteAllPolicyResources;
    public Boolean deleteAllPolicyResources() {
        if (!unknown_deleteAllPolicyResources) return value_deleteAllPolicyResources;
        throw new UndeferrableValueException("Value 'PolicyArgs.deleteAllPolicyResources' is not present");
    }

    /**
     * If true, Firewall Manager will automatically remove protections from resources that leave the policy scope. Defaults to `false`. More information can be found here [AWS Firewall Manager policy contents](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_Policy.html)
     * 
     */
    @PolicyResourceProperty(name="deleteUnusedFmManagedResources", flag="unknown_deleteUnusedFmManagedResources")
    private Boolean value_deleteUnusedFmManagedResources;
    private boolean unknown_deleteUnusedFmManagedResources;
    public Boolean deleteUnusedFmManagedResources() {
        if (!unknown_deleteUnusedFmManagedResources) return value_deleteUnusedFmManagedResources;
        throw new UndeferrableValueException("Value 'PolicyArgs.deleteUnusedFmManagedResources' is not present");
    }

    /**
     * The description of the AWS Network Firewall firewall policy.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'PolicyArgs.description' is not present");
    }

    /**
     * A map of lists of accounts and OU&#39;s to exclude from the policy. See the `exclude_map` block.
     * 
     */
    @PolicyResourceProperty(name="excludeMap", flag="unknown_excludeMap")
    private PolicyExcludeMapArgs value_excludeMap;
    private boolean unknown_excludeMap;
    public PolicyExcludeMapArgs excludeMap() {
        if (!unknown_excludeMap) return value_excludeMap;
        throw new UndeferrableValueException("Value 'PolicyArgs.excludeMap' is not present");
    }

    /**
     * A boolean value, if true the tags that are specified in the `resource_tags` are not protected by this policy. If set to false and resource_tags are populated, resources that contain tags will be protected by this policy.
     * 
     */
    @PolicyResourceProperty(name="excludeResourceTags", flag="unknown_excludeResourceTags")
    private Boolean value_excludeResourceTags;
    private boolean unknown_excludeResourceTags;
    public Boolean excludeResourceTags() {
        if (!unknown_excludeResourceTags) return value_excludeResourceTags;
        throw new UndeferrableValueException("Value 'PolicyArgs.excludeResourceTags' is not present");
    }

    /**
     * A map of lists of accounts and OU&#39;s to include in the policy. See the `include_map` block.
     * 
     */
    @PolicyResourceProperty(name="includeMap", flag="unknown_includeMap")
    private PolicyIncludeMapArgs value_includeMap;
    private boolean unknown_includeMap;
    public PolicyIncludeMapArgs includeMap() {
        if (!unknown_includeMap) return value_includeMap;
        throw new UndeferrableValueException("Value 'PolicyArgs.includeMap' is not present");
    }

    /**
     * The friendly name of the AWS Firewall Manager Policy.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'PolicyArgs.name' is not present");
    }

    /**
     * A boolean value, indicates if the policy should automatically applied to resources that already exist in the account.
     * 
     */
    @PolicyResourceProperty(name="remediationEnabled", flag="unknown_remediationEnabled")
    private Boolean value_remediationEnabled;
    private boolean unknown_remediationEnabled;
    public Boolean remediationEnabled() {
        if (!unknown_remediationEnabled) return value_remediationEnabled;
        throw new UndeferrableValueException("Value 'PolicyArgs.remediationEnabled' is not present");
    }

    @PolicyResourceProperty(name="resourceSetIds", flag="unknown_resourceSetIds")
    private List<String> value_resourceSetIds;
    private boolean unknown_resourceSetIds;
    public List<String> resourceSetIds() {
        if (!unknown_resourceSetIds) return value_resourceSetIds;
        throw new UndeferrableValueException("Value 'PolicyArgs.resourceSetIds' is not present");
    }

    /**
     * A map of resource tags, that if present will filter protections on resources based on the exclude_resource_tags.
     * 
     */
    @PolicyResourceProperty(name="resourceTags", flag="unknown_resourceTags")
    private Map<String,String> value_resourceTags;
    private boolean unknown_resourceTags;
    public Map<String,String> resourceTags() {
        if (!unknown_resourceTags) return value_resourceTags;
        throw new UndeferrableValueException("Value 'PolicyArgs.resourceTags' is not present");
    }

    /**
     * A resource type to protect. Conflicts with `resource_type_list`. See the [FMS API Reference](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_Policy.html#fms-Type-Policy-ResourceType) for more information about supported values.
     * 
     */
    @PolicyResourceProperty(name="resourceType", flag="unknown_resourceType")
    private String value_resourceType;
    private boolean unknown_resourceType;
    public String resourceType() {
        if (!unknown_resourceType) return value_resourceType;
        throw new UndeferrableValueException("Value 'PolicyArgs.resourceType' is not present");
    }

    /**
     * A list of resource types to protect. Conflicts with `resource_type`. See the [FMS API Reference](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_Policy.html#fms-Type-Policy-ResourceType) for more information about supported values. Lists with only one element are not supported, instead use `resource_type`.
     * 
     */
    @PolicyResourceProperty(name="resourceTypeLists", flag="unknown_resourceTypeLists")
    private List<String> value_resourceTypeLists;
    private boolean unknown_resourceTypeLists;
    public List<String> resourceTypeLists() {
        if (!unknown_resourceTypeLists) return value_resourceTypeLists;
        throw new UndeferrableValueException("Value 'PolicyArgs.resourceTypeLists' is not present");
    }

    /**
     * The objects to include in Security Service Policy Data. See the `security_service_policy_data` block.
     * 
     */
    @PolicyResourceProperty(name="securityServicePolicyData", flag="unknown_securityServicePolicyData")
    private PolicySecurityServicePolicyDataArgs value_securityServicePolicyData;
    private boolean unknown_securityServicePolicyData;
    public PolicySecurityServicePolicyDataArgs securityServicePolicyData() {
        if (!unknown_securityServicePolicyData) return value_securityServicePolicyData;
        throw new UndeferrableValueException("Value 'PolicyArgs.securityServicePolicyData' is not present");
    }

    /**
     * Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'PolicyArgs.tags' is not present");
    }

}
