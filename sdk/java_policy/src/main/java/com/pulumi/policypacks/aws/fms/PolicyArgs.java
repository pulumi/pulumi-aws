// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.fms;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.fms.inputs.PolicyExcludeMapArgs;
import com.pulumi.policypacks.aws.fms.inputs.PolicyIncludeMapArgs;
import com.pulumi.policypacks.aws.fms.inputs.PolicySecurityServicePolicyDataArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:fms/policy:Policy")
public final class PolicyArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * If true, the request will also perform a clean-up process. Defaults to `true`. More information can be found here [AWS Firewall Manager delete policy](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_DeletePolicy.html)
     * 
     */
    private UndeferrableValue<Boolean> deleteAllPolicyResources;

    public Boolean deleteAllPolicyResources() {
        if (deleteAllPolicyResources == null) return null;
        return deleteAllPolicyResources.getValue("PolicyArgs.deleteAllPolicyResources");
    }

    /**
     * If true, Firewall Manager will automatically remove protections from resources that leave the policy scope. Defaults to `false`. More information can be found here [AWS Firewall Manager policy contents](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_Policy.html)
     * 
     */
    private UndeferrableValue<Boolean> deleteUnusedFmManagedResources;

    public Boolean deleteUnusedFmManagedResources() {
        if (deleteUnusedFmManagedResources == null) return null;
        return deleteUnusedFmManagedResources.getValue("PolicyArgs.deleteUnusedFmManagedResources");
    }

    /**
     * The description of the AWS Network Firewall firewall policy.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("PolicyArgs.description");
    }

    /**
     * A map of lists of accounts and OU&#39;s to exclude from the policy. See the `exclude_map` block.
     * 
     */
    private UndeferrableValue<PolicyExcludeMapArgs> excludeMap;

    public PolicyExcludeMapArgs excludeMap() {
        if (excludeMap == null) return null;
        return excludeMap.getValue("PolicyArgs.excludeMap");
    }

    /**
     * A boolean value, if true the tags that are specified in the `resource_tags` are not protected by this policy. If set to false and resource_tags are populated, resources that contain tags will be protected by this policy.
     * 
     */
    private UndeferrableValue<Boolean> excludeResourceTags;

    public Boolean excludeResourceTags() {
        if (excludeResourceTags == null) return null;
        return excludeResourceTags.getValue("PolicyArgs.excludeResourceTags");
    }

    /**
     * A map of lists of accounts and OU&#39;s to include in the policy. See the `include_map` block.
     * 
     */
    private UndeferrableValue<PolicyIncludeMapArgs> includeMap;

    public PolicyIncludeMapArgs includeMap() {
        if (includeMap == null) return null;
        return includeMap.getValue("PolicyArgs.includeMap");
    }

    /**
     * The friendly name of the AWS Firewall Manager Policy.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("PolicyArgs.name");
    }

    /**
     * A boolean value, indicates if the policy should automatically applied to resources that already exist in the account.
     * 
     */
    private UndeferrableValue<Boolean> remediationEnabled;

    public Boolean remediationEnabled() {
        if (remediationEnabled == null) return null;
        return remediationEnabled.getValue("PolicyArgs.remediationEnabled");
    }

    private UndeferrableValue<List<String>> resourceSetIds;

    public List<String> resourceSetIds() {
        if (resourceSetIds == null) return null;
        return resourceSetIds.getValue("PolicyArgs.resourceSetIds");
    }

    /**
     * A map of resource tags, that if present will filter protections on resources based on the exclude_resource_tags.
     * 
     */
    private UndeferrableValue<Map<String,String>> resourceTags;

    public Map<String,String> resourceTags() {
        if (resourceTags == null) return null;
        return resourceTags.getValue("PolicyArgs.resourceTags");
    }

    /**
     * A resource type to protect. Conflicts with `resource_type_list`. See the [FMS API Reference](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_Policy.html#fms-Type-Policy-ResourceType) for more information about supported values.
     * 
     */
    private UndeferrableValue<String> resourceType;

    public String resourceType() {
        if (resourceType == null) return null;
        return resourceType.getValue("PolicyArgs.resourceType");
    }

    /**
     * A list of resource types to protect. Conflicts with `resource_type`. See the [FMS API Reference](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_Policy.html#fms-Type-Policy-ResourceType) for more information about supported values. Lists with only one element are not supported, instead use `resource_type`.
     * 
     */
    private UndeferrableValue<List<String>> resourceTypeLists;

    public List<String> resourceTypeLists() {
        if (resourceTypeLists == null) return null;
        return resourceTypeLists.getValue("PolicyArgs.resourceTypeLists");
    }

    /**
     * The objects to include in Security Service Policy Data. See the `security_service_policy_data` block.
     * 
     */
    private UndeferrableValue<PolicySecurityServicePolicyDataArgs> securityServicePolicyData;

    public PolicySecurityServicePolicyDataArgs securityServicePolicyData() {
        if (securityServicePolicyData == null) return null;
        return securityServicePolicyData.getValue("PolicyArgs.securityServicePolicyData");
    }

    /**
     * Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("PolicyArgs.tags");
    }

}
