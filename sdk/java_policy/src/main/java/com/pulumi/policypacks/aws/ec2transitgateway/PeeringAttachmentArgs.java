// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2transitgateway;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ec2transitgateway.inputs.PeeringAttachmentOptionsArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ec2transitgateway/peeringAttachment:PeeringAttachment")
public final class PeeringAttachmentArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Describes whether dynamic routing is enabled or disabled for the transit gateway peering request. See options below for more details!
     * 
     */
    private UndeferrableValue<PeeringAttachmentOptionsArgs> options;

    public PeeringAttachmentOptionsArgs options() {
        if (options == null) return null;
        return options.getValue("PeeringAttachmentArgs.options");
    }

    /**
     * Account ID of EC2 Transit Gateway to peer with. Defaults to the account ID the AWS provider is currently connected to.
     * 
     */
    private UndeferrableValue<String> peerAccountId;

    public String peerAccountId() {
        if (peerAccountId == null) return null;
        return peerAccountId.getValue("PeeringAttachmentArgs.peerAccountId");
    }

    /**
     * Region of EC2 Transit Gateway to peer with.
     * 
     */
    private UndeferrableValue<String> peerRegion;

    public String peerRegion() {
        if (peerRegion == null) return null;
        return peerRegion.getValue("PeeringAttachmentArgs.peerRegion");
    }

    /**
     * Identifier of EC2 Transit Gateway to peer with.
     * 
     */
    private UndeferrableValue<String> peerTransitGatewayId;

    public String peerTransitGatewayId() {
        if (peerTransitGatewayId == null) return null;
        return peerTransitGatewayId.getValue("PeeringAttachmentArgs.peerTransitGatewayId");
    }

    /**
     * Key-value tags for the EC2 Transit Gateway Peering Attachment. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("PeeringAttachmentArgs.tags");
    }

    /**
     * Identifier of EC2 Transit Gateway.
     * 
     */
    private UndeferrableValue<String> transitGatewayId;

    public String transitGatewayId() {
        if (transitGatewayId == null) return null;
        return transitGatewayId.getValue("PeeringAttachmentArgs.transitGatewayId");
    }

}
