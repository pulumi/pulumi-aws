// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.wafv2.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.wafv2.outputs.WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfig;
import com.pulumi.policypacks.aws.wafv2.outputs.WebAclRuleStatementManagedRuleGroupStatementRuleActionOverride;
import com.pulumi.policypacks.aws.wafv2.outputs.WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class WebAclRuleStatementManagedRuleGroupStatement {

    /**
     * Additional information that&#39;s used by a managed rule group. Only one rule attribute is allowed in each config. See `managed_rule_group_configs` for more details
     * 
     */
    private @Nullable UndeferrableValue<List<WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfig>> managedRuleGroupConfigs;

    public @Nullable List<WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfig> managedRuleGroupConfigs() {
        if (managedRuleGroupConfigs == null) return null;
        return managedRuleGroupConfigs.getValue("WebAclRuleStatementManagedRuleGroupStatement.managedRuleGroupConfigs");
    }

    /**
     * Name of the managed rule group.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("WebAclRuleStatementManagedRuleGroupStatement.name");
    }

    /**
     * Action settings to use in the place of the rule actions that are configured inside the rule group. You specify one override for each rule whose action you want to change. See `rule_action_override` below for details.
     * 
     */
    private @Nullable UndeferrableValue<List<WebAclRuleStatementManagedRuleGroupStatementRuleActionOverride>> ruleActionOverrides;

    public @Nullable List<WebAclRuleStatementManagedRuleGroupStatementRuleActionOverride> ruleActionOverrides() {
        if (ruleActionOverrides == null) return null;
        return ruleActionOverrides.getValue("WebAclRuleStatementManagedRuleGroupStatement.ruleActionOverrides");
    }

    /**
     * Narrows the scope of the statement to matching web requests. This can be any nestable statement, and you can nest statements at any level below this scope-down statement. See `statement` above for details.
     * 
     */
    private @Nullable UndeferrableValue<WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement> scopeDownStatement;

    public @Nullable WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement scopeDownStatement() {
        if (scopeDownStatement == null) return null;
        return scopeDownStatement.getValue("WebAclRuleStatementManagedRuleGroupStatement.scopeDownStatement");
    }

    /**
     * Name of the managed rule group vendor.
     * 
     */
    private UndeferrableValue<String> vendorName;

    public String vendorName() {
        if (vendorName == null) return null;
        return vendorName.getValue("WebAclRuleStatementManagedRuleGroupStatement.vendorName");
    }

    /**
     * Version of the managed rule group. You can set `Version_1.0` or `Version_1.1` etc. If you want to use the default version, do not set anything.
     * 
     */
    private @Nullable UndeferrableValue<String> version;

    public @Nullable String version() {
        if (version == null) return null;
        return version.getValue("WebAclRuleStatementManagedRuleGroupStatement.version");
    }

}
