// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.wafv2.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.wafv2.outputs.WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfig;
import com.pulumi.policypacks.aws.wafv2.outputs.WebAclRuleStatementManagedRuleGroupStatementRuleActionOverride;
import com.pulumi.policypacks.aws.wafv2.outputs.WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class WebAclRuleStatementManagedRuleGroupStatement {

    /**
     * Additional information that&#39;s used by a managed rule group. Only one rule attribute is allowed in each config. See `managed_rule_group_configs` for more details
     * 
     */
    @PolicyResourceProperty(name="managedRuleGroupConfigs", flag="unknown_managedRuleGroupConfigs")
    private @Nullable List<WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfig> value_managedRuleGroupConfigs;
    private boolean unknown_managedRuleGroupConfigs;
    public @Nullable List<WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfig> managedRuleGroupConfigs() {
        if (!unknown_managedRuleGroupConfigs) return value_managedRuleGroupConfigs;
        throw new UndeferrableValueException("Value 'WebAclRuleStatementManagedRuleGroupStatement.managedRuleGroupConfigs' is not present");
    }

    /**
     * Name of the managed rule group.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'WebAclRuleStatementManagedRuleGroupStatement.name' is not present");
    }

    /**
     * Action settings to use in the place of the rule actions that are configured inside the rule group. You specify one override for each rule whose action you want to change. See `rule_action_override` below for details.
     * 
     */
    @PolicyResourceProperty(name="ruleActionOverrides", flag="unknown_ruleActionOverrides")
    private @Nullable List<WebAclRuleStatementManagedRuleGroupStatementRuleActionOverride> value_ruleActionOverrides;
    private boolean unknown_ruleActionOverrides;
    public @Nullable List<WebAclRuleStatementManagedRuleGroupStatementRuleActionOverride> ruleActionOverrides() {
        if (!unknown_ruleActionOverrides) return value_ruleActionOverrides;
        throw new UndeferrableValueException("Value 'WebAclRuleStatementManagedRuleGroupStatement.ruleActionOverrides' is not present");
    }

    /**
     * Narrows the scope of the statement to matching web requests. This can be any nestable statement, and you can nest statements at any level below this scope-down statement. See `statement` above for details.
     * 
     */
    @PolicyResourceProperty(name="scopeDownStatement", flag="unknown_scopeDownStatement")
    private @Nullable WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement value_scopeDownStatement;
    private boolean unknown_scopeDownStatement;
    public @Nullable WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement scopeDownStatement() {
        if (!unknown_scopeDownStatement) return value_scopeDownStatement;
        throw new UndeferrableValueException("Value 'WebAclRuleStatementManagedRuleGroupStatement.scopeDownStatement' is not present");
    }

    /**
     * Name of the managed rule group vendor.
     * 
     */
    @PolicyResourceProperty(name="vendorName", flag="unknown_vendorName")
    private String value_vendorName;
    private boolean unknown_vendorName;
    public String vendorName() {
        if (!unknown_vendorName) return value_vendorName;
        throw new UndeferrableValueException("Value 'WebAclRuleStatementManagedRuleGroupStatement.vendorName' is not present");
    }

    /**
     * Version of the managed rule group. You can set `Version_1.0` or `Version_1.1` etc. If you want to use the default version, do not set anything.
     * 
     */
    @PolicyResourceProperty(name="version", flag="unknown_version")
    private @Nullable String value_version;
    private boolean unknown_version;
    public @Nullable String version() {
        if (!unknown_version) return value_version;
        throw new UndeferrableValueException("Value 'WebAclRuleStatementManagedRuleGroupStatement.version' is not present");
    }

}
