// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.accessanalyzer;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.accessanalyzer.outputs.AnalyzerConfiguration;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:accessanalyzer/analyzer:Analyzer")
public final class Analyzer extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Name of the Analyzer.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="analyzerName", flag="unknown_analyzerName")
    private String value_analyzerName;
    private boolean unknown_analyzerName;
    public String analyzerName() {
        if (!unknown_analyzerName) return value_analyzerName;
        throw new UndeferrableValueException("Value 'Analyzer.analyzerName' is not present");
    }

    /**
     * ARN of the Analyzer.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'Analyzer.arn' is not present");
    }

    /**
     * A block that specifies the configuration of the analyzer. Documented below
     * 
     */
    @PolicyResourceProperty(name="configuration", flag="unknown_configuration")
    private @Nullable AnalyzerConfiguration value_configuration;
    private boolean unknown_configuration;
    public @Nullable AnalyzerConfiguration configuration() {
        if (!unknown_configuration) return value_configuration;
        throw new UndeferrableValueException("Value 'Analyzer.configuration' is not present");
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'Analyzer.tags' is not present");
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'Analyzer.tagsAll' is not present");
    }

    /**
     * Type of Analyzer. Valid values are `ACCOUNT`, `ORGANIZATION`, ` ACCOUNT_UNUSED_ACCESS  `, `ORGANIZATION_UNUSED_ACCESS`. Defaults to `ACCOUNT`.
     * 
     */
    @PolicyResourceProperty(name="type", flag="unknown_type")
    private @Nullable String value_type;
    private boolean unknown_type;
    public @Nullable String type() {
        if (!unknown_type) return value_type;
        throw new UndeferrableValueException("Value 'Analyzer.type' is not present");
    }

}
