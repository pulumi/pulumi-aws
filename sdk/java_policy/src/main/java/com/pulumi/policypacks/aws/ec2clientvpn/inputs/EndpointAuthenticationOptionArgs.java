// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2clientvpn.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.String;
import javax.annotation.Nullable;


public final class EndpointAuthenticationOptionArgs {

    /**
     * The ID of the Active Directory to be used for authentication if type is `directory-service-authentication`.
     * 
     */
    @PolicyResourceProperty(name="activeDirectoryId", flag="unknown_activeDirectoryId")
    private String value_activeDirectoryId;
    private boolean unknown_activeDirectoryId;
    public String activeDirectoryId() {
        if (!unknown_activeDirectoryId) return value_activeDirectoryId;
        throw new UndeferrableValueException("Value 'EndpointAuthenticationOptionArgs.activeDirectoryId' is not present");
    }

    /**
     * The ARN of the client certificate. The certificate must be signed by a certificate authority (CA) and it must be provisioned in AWS Certificate Manager (ACM). Only necessary when type is set to `certificate-authentication`.
     * 
     */
    @PolicyResourceProperty(name="rootCertificateChainArn", flag="unknown_rootCertificateChainArn")
    private String value_rootCertificateChainArn;
    private boolean unknown_rootCertificateChainArn;
    public String rootCertificateChainArn() {
        if (!unknown_rootCertificateChainArn) return value_rootCertificateChainArn;
        throw new UndeferrableValueException("Value 'EndpointAuthenticationOptionArgs.rootCertificateChainArn' is not present");
    }

    /**
     * The ARN of the IAM SAML identity provider if type is `federated-authentication`.
     * 
     */
    @PolicyResourceProperty(name="samlProviderArn", flag="unknown_samlProviderArn")
    private String value_samlProviderArn;
    private boolean unknown_samlProviderArn;
    public String samlProviderArn() {
        if (!unknown_samlProviderArn) return value_samlProviderArn;
        throw new UndeferrableValueException("Value 'EndpointAuthenticationOptionArgs.samlProviderArn' is not present");
    }

    /**
     * The ARN of the IAM SAML identity provider for the self service portal if type is `federated-authentication`.
     * 
     */
    @PolicyResourceProperty(name="selfServiceSamlProviderArn", flag="unknown_selfServiceSamlProviderArn")
    private String value_selfServiceSamlProviderArn;
    private boolean unknown_selfServiceSamlProviderArn;
    public String selfServiceSamlProviderArn() {
        if (!unknown_selfServiceSamlProviderArn) return value_selfServiceSamlProviderArn;
        throw new UndeferrableValueException("Value 'EndpointAuthenticationOptionArgs.selfServiceSamlProviderArn' is not present");
    }

    /**
     * The type of client authentication to be used. Specify `certificate-authentication` to use certificate-based authentication, `directory-service-authentication` to use Active Directory authentication, or `federated-authentication` to use Federated Authentication via SAML 2.0.
     * 
     */
    @PolicyResourceProperty(name="type", flag="unknown_type")
    private String value_type;
    private boolean unknown_type;
    public String type() {
        if (!unknown_type) return value_type;
        throw new UndeferrableValueException("Value 'EndpointAuthenticationOptionArgs.type' is not present");
    }

}
