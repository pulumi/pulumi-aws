// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.resiliencehub;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.resiliencehub.inputs.ResiliencyPolicyPolicyArgs;
import com.pulumi.policypacks.aws.resiliencehub.inputs.ResiliencyPolicyTimeoutsArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:resiliencehub/resiliencyPolicy:ResiliencyPolicy")
public final class ResiliencyPolicyArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Data Location Constraint of the Policy.
     * Valid values are `AnyLocation`, `SameContinent`, and `SameCountry`.
     * 
     */
    @PolicyResourceProperty(name="dataLocationConstraint", flag="unknown_dataLocationConstraint")
    private String value_dataLocationConstraint;
    private boolean unknown_dataLocationConstraint;
    public String dataLocationConstraint() {
        if (!unknown_dataLocationConstraint) return value_dataLocationConstraint;
        throw new UndeferrableValueException("Value 'ResiliencyPolicyArgs.dataLocationConstraint' is not present");
    }

    /**
     * Description of Resiliency Policy.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'ResiliencyPolicyArgs.description' is not present");
    }

    /**
     * Name of Resiliency Policy.
     * Must be between 2 and 60 characters long.
     * Must start with an alphanumeric character and contain alphanumeric characters, underscores, or hyphens.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'ResiliencyPolicyArgs.name' is not present");
    }

    /**
     * The type of resiliency policy to be created, including the recovery time objective (RTO) and recovery point objective (RPO) in seconds. See `policy`.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="policy", flag="unknown_policy")
    private ResiliencyPolicyPolicyArgs value_policy;
    private boolean unknown_policy;
    public ResiliencyPolicyPolicyArgs policy() {
        if (!unknown_policy) return value_policy;
        throw new UndeferrableValueException("Value 'ResiliencyPolicyArgs.policy' is not present");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'ResiliencyPolicyArgs.tags' is not present");
    }

    /**
     * Resiliency Policy Tier.
     * Valid values are `MissionCritical`, `Critical`, `Important`, `CoreServices`, `NonCritical`, and `NotApplicable`.
     * 
     */
    @PolicyResourceProperty(name="tier", flag="unknown_tier")
    private String value_tier;
    private boolean unknown_tier;
    public String tier() {
        if (!unknown_tier) return value_tier;
        throw new UndeferrableValueException("Value 'ResiliencyPolicyArgs.tier' is not present");
    }

    @PolicyResourceProperty(name="timeouts", flag="unknown_timeouts")
    private ResiliencyPolicyTimeoutsArgs value_timeouts;
    private boolean unknown_timeouts;
    public ResiliencyPolicyTimeoutsArgs timeouts() {
        if (!unknown_timeouts) return value_timeouts;
        throw new UndeferrableValueException("Value 'ResiliencyPolicyArgs.timeouts' is not present");
    }

}
