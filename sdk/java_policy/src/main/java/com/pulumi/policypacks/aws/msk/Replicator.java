// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.msk;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.msk.outputs.ReplicatorKafkaCluster;
import com.pulumi.policypacks.aws.msk.outputs.ReplicatorReplicationInfoList;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:msk/replicator:Replicator")
public final class Replicator extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the Replicator.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'Replicator.arn' is not present");
    }

    @PolicyResourceProperty(name="currentVersion", flag="unknown_currentVersion")
    private String value_currentVersion;
    private boolean unknown_currentVersion;
    public String currentVersion() {
        if (!unknown_currentVersion) return value_currentVersion;
        throw new UndeferrableValueException("Value 'Replicator.currentVersion' is not present");
    }

    /**
     * A summary description of the replicator.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private @Nullable String value_description;
    private boolean unknown_description;
    public @Nullable String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'Replicator.description' is not present");
    }

    /**
     * A list of Kafka clusters which are targets of the replicator.
     * 
     */
    @PolicyResourceProperty(name="kafkaClusters", flag="unknown_kafkaClusters")
    private List<ReplicatorKafkaCluster> value_kafkaClusters;
    private boolean unknown_kafkaClusters;
    public List<ReplicatorKafkaCluster> kafkaClusters() {
        if (!unknown_kafkaClusters) return value_kafkaClusters;
        throw new UndeferrableValueException("Value 'Replicator.kafkaClusters' is not present");
    }

    /**
     * A list of replication configurations, where each configuration targets a given source cluster to target cluster replication flow.
     * 
     */
    @PolicyResourceProperty(name="replicationInfoList", flag="unknown_replicationInfoList")
    private ReplicatorReplicationInfoList value_replicationInfoList;
    private boolean unknown_replicationInfoList;
    public ReplicatorReplicationInfoList replicationInfoList() {
        if (!unknown_replicationInfoList) return value_replicationInfoList;
        throw new UndeferrableValueException("Value 'Replicator.replicationInfoList' is not present");
    }

    /**
     * The name of the replicator.
     * 
     */
    @PolicyResourceProperty(name="replicatorName", flag="unknown_replicatorName")
    private String value_replicatorName;
    private boolean unknown_replicatorName;
    public String replicatorName() {
        if (!unknown_replicatorName) return value_replicatorName;
        throw new UndeferrableValueException("Value 'Replicator.replicatorName' is not present");
    }

    /**
     * The ARN of the IAM role used by the replicator to access resources in the customer&#39;s account (e.g source and target clusters).
     * 
     */
    @PolicyResourceProperty(name="serviceExecutionRoleArn", flag="unknown_serviceExecutionRoleArn")
    private String value_serviceExecutionRoleArn;
    private boolean unknown_serviceExecutionRoleArn;
    public String serviceExecutionRoleArn() {
        if (!unknown_serviceExecutionRoleArn) return value_serviceExecutionRoleArn;
        throw new UndeferrableValueException("Value 'Replicator.serviceExecutionRoleArn' is not present");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'Replicator.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'Replicator.tagsAll' is not present");
    }

}
