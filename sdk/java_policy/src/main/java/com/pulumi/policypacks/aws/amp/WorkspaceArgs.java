// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.amp;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.amp.inputs.WorkspaceLoggingConfigurationArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:amp/workspace:Workspace")
public final class WorkspaceArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The alias of the prometheus workspace. See more [in AWS Docs](https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-onboard-create-workspace.html).
     * 
     */
    @PolicyResourceProperty(name="alias", flag="unknown_alias")
    private String value_alias;
    private boolean unknown_alias;
    public String alias() {
        if (!unknown_alias) return value_alias;
        throw new UndeferrableValueException("Value 'WorkspaceArgs.alias' is not present");
    }

    /**
     * The ARN for the KMS encryption key. If this argument is not provided, then the AWS owned encryption key will be used to encrypt the data in the workspace. See more [in AWS Docs](https://docs.aws.amazon.com/prometheus/latest/userguide/encryption-at-rest-Amazon-Service-Prometheus.html)
     * 
     */
    @PolicyResourceProperty(name="kmsKeyArn", flag="unknown_kmsKeyArn")
    private String value_kmsKeyArn;
    private boolean unknown_kmsKeyArn;
    public String kmsKeyArn() {
        if (!unknown_kmsKeyArn) return value_kmsKeyArn;
        throw new UndeferrableValueException("Value 'WorkspaceArgs.kmsKeyArn' is not present");
    }

    /**
     * Logging configuration for the workspace. See Logging Configuration below for details.
     * 
     */
    @PolicyResourceProperty(name="loggingConfiguration", flag="unknown_loggingConfiguration")
    private WorkspaceLoggingConfigurationArgs value_loggingConfiguration;
    private boolean unknown_loggingConfiguration;
    public WorkspaceLoggingConfigurationArgs loggingConfiguration() {
        if (!unknown_loggingConfiguration) return value_loggingConfiguration;
        throw new UndeferrableValueException("Value 'WorkspaceArgs.loggingConfiguration' is not present");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'WorkspaceArgs.tags' is not present");
    }

}
