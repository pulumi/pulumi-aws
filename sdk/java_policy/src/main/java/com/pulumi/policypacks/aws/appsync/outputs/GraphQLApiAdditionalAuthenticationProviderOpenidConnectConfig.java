// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appsync.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig {

    /**
     * Number of milliseconds a token is valid after being authenticated.
     * 
     */
    private @Nullable UndeferrableValue<Integer> authTtl;

    public @Nullable Integer authTtl() {
        if (authTtl == null) return null;
        return authTtl.getValue("GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig.authTtl");
    }

    /**
     * Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
     * 
     */
    private @Nullable UndeferrableValue<String> clientId;

    public @Nullable String clientId() {
        if (clientId == null) return null;
        return clientId.getValue("GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig.clientId");
    }

    /**
     * Number of milliseconds a token is valid after being issued to a user.
     * 
     */
    private @Nullable UndeferrableValue<Integer> iatTtl;

    public @Nullable Integer iatTtl() {
        if (iatTtl == null) return null;
        return iatTtl.getValue("GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig.iatTtl");
    }

    /**
     * Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
     * 
     */
    private UndeferrableValue<String> issuer;

    public String issuer() {
        if (issuer == null) return null;
        return issuer.getValue("GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig.issuer");
    }

}
