// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.wafv2.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.wafv2.outputs.RuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatement;
import com.pulumi.policypacks.aws.wafv2.outputs.RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatement;
import com.pulumi.policypacks.aws.wafv2.outputs.RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatement;
import com.pulumi.policypacks.aws.wafv2.outputs.RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatement;
import com.pulumi.policypacks.aws.wafv2.outputs.RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatement;
import com.pulumi.policypacks.aws.wafv2.outputs.RuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatement;
import com.pulumi.policypacks.aws.wafv2.outputs.RuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatement;
import com.pulumi.policypacks.aws.wafv2.outputs.RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatement;
import com.pulumi.policypacks.aws.wafv2.outputs.RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatement;
import com.pulumi.policypacks.aws.wafv2.outputs.RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatement;
import com.pulumi.policypacks.aws.wafv2.outputs.RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatement;
import com.pulumi.policypacks.aws.wafv2.outputs.RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatement;
import javax.annotation.Nullable;


public final class RuleGroupRuleStatementRateBasedStatementScopeDownStatement {

    /**
     * A logical rule statement used to combine other rule statements with AND logic. See AND Statement below for details.
     * 
     */
    private @Nullable UndeferrableValue<RuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatement> andStatement;

    public @Nullable RuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatement andStatement() {
        if (andStatement == null) return null;
        return andStatement.getValue("RuleGroupRuleStatementRateBasedStatementScopeDownStatement.andStatement");
    }

    /**
     * A rule statement that defines a string match search for AWS WAF to apply to web requests. See Byte Match Statement below for details.
     * 
     */
    private @Nullable UndeferrableValue<RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatement> byteMatchStatement;

    public @Nullable RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatement byteMatchStatement() {
        if (byteMatchStatement == null) return null;
        return byteMatchStatement.getValue("RuleGroupRuleStatementRateBasedStatementScopeDownStatement.byteMatchStatement");
    }

    /**
     * A rule statement used to identify web requests based on country of origin. See GEO Match Statement below for details.
     * 
     */
    private @Nullable UndeferrableValue<RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatement> geoMatchStatement;

    public @Nullable RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatement geoMatchStatement() {
        if (geoMatchStatement == null) return null;
        return geoMatchStatement.getValue("RuleGroupRuleStatementRateBasedStatementScopeDownStatement.geoMatchStatement");
    }

    /**
     * A rule statement used to detect web requests coming from particular IP addresses or address ranges. See IP Set Reference Statement below for details.
     * 
     */
    private @Nullable UndeferrableValue<RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatement> ipSetReferenceStatement;

    public @Nullable RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatement ipSetReferenceStatement() {
        if (ipSetReferenceStatement == null) return null;
        return ipSetReferenceStatement.getValue("RuleGroupRuleStatementRateBasedStatementScopeDownStatement.ipSetReferenceStatement");
    }

    /**
     * A rule statement that defines a string match search against labels that have been added to the web request by rules that have already run in the web ACL. See Label Match Statement below for details.
     * 
     */
    private @Nullable UndeferrableValue<RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatement> labelMatchStatement;

    public @Nullable RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatement labelMatchStatement() {
        if (labelMatchStatement == null) return null;
        return labelMatchStatement.getValue("RuleGroupRuleStatementRateBasedStatementScopeDownStatement.labelMatchStatement");
    }

    /**
     * A logical rule statement used to negate the results of another rule statement. See NOT Statement below for details.
     * 
     */
    private @Nullable UndeferrableValue<RuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatement> notStatement;

    public @Nullable RuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatement notStatement() {
        if (notStatement == null) return null;
        return notStatement.getValue("RuleGroupRuleStatementRateBasedStatementScopeDownStatement.notStatement");
    }

    /**
     * A logical rule statement used to combine other rule statements with OR logic. See OR Statement below for details.
     * 
     */
    private @Nullable UndeferrableValue<RuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatement> orStatement;

    public @Nullable RuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatement orStatement() {
        if (orStatement == null) return null;
        return orStatement.getValue("RuleGroupRuleStatementRateBasedStatementScopeDownStatement.orStatement");
    }

    /**
     * A rule statement used to search web request components for a match against a single regular expression. See Regex Match Statement below for details.
     * 
     */
    private @Nullable UndeferrableValue<RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatement> regexMatchStatement;

    public @Nullable RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatement regexMatchStatement() {
        if (regexMatchStatement == null) return null;
        return regexMatchStatement.getValue("RuleGroupRuleStatementRateBasedStatementScopeDownStatement.regexMatchStatement");
    }

    /**
     * A rule statement used to search web request components for matches with regular expressions. See Regex Pattern Set Reference Statement below for details.
     * 
     */
    private @Nullable UndeferrableValue<RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatement> regexPatternSetReferenceStatement;

    public @Nullable RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatement regexPatternSetReferenceStatement() {
        if (regexPatternSetReferenceStatement == null) return null;
        return regexPatternSetReferenceStatement.getValue("RuleGroupRuleStatementRateBasedStatementScopeDownStatement.regexPatternSetReferenceStatement");
    }

    /**
     * A rule statement that compares a number of bytes against the size of a request component, using a comparison operator, such as greater than (&gt;) or less than (&lt;). See Size Constraint Statement below for more details.
     * 
     */
    private @Nullable UndeferrableValue<RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatement> sizeConstraintStatement;

    public @Nullable RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatement sizeConstraintStatement() {
        if (sizeConstraintStatement == null) return null;
        return sizeConstraintStatement.getValue("RuleGroupRuleStatementRateBasedStatementScopeDownStatement.sizeConstraintStatement");
    }

    /**
     * An SQL injection match condition identifies the part of web requests, such as the URI or the query string, that you want AWS WAF to inspect. See SQL Injection Match Statement below for details.
     * 
     */
    private @Nullable UndeferrableValue<RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatement> sqliMatchStatement;

    public @Nullable RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatement sqliMatchStatement() {
        if (sqliMatchStatement == null) return null;
        return sqliMatchStatement.getValue("RuleGroupRuleStatementRateBasedStatementScopeDownStatement.sqliMatchStatement");
    }

    /**
     * A rule statement that defines a cross-site scripting (XSS) match search for AWS WAF to apply to web requests. See XSS Match Statement below for details.
     * 
     */
    private @Nullable UndeferrableValue<RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatement> xssMatchStatement;

    public @Nullable RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatement xssMatchStatement() {
        if (xssMatchStatement == null) return null;
        return xssMatchStatement.getValue("RuleGroupRuleStatementRateBasedStatementScopeDownStatement.xssMatchStatement");
    }

}
