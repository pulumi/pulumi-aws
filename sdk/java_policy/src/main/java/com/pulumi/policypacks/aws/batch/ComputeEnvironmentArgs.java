// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.batch;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.batch.inputs.ComputeEnvironmentComputeResourcesArgs;
import com.pulumi.policypacks.aws.batch.inputs.ComputeEnvironmentEksConfigurationArgs;
import com.pulumi.policypacks.aws.batch.inputs.ComputeEnvironmentUpdatePolicyArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:batch/computeEnvironment:ComputeEnvironment")
public final class ComputeEnvironmentArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The name for your compute environment. Up to 128 letters (uppercase and lowercase), numbers, and underscores are allowed. If omitted, the provider will assign a random, unique name.
     * 
     */
    private UndeferrableValue<String> computeEnvironmentName;

    public String computeEnvironmentName() {
        if (computeEnvironmentName == null) return null;
        return computeEnvironmentName.getValue("ComputeEnvironmentArgs.computeEnvironmentName");
    }

    /**
     * Creates a unique compute environment name beginning with the specified prefix. Conflicts with `compute_environment_name`.
     * 
     */
    private UndeferrableValue<String> computeEnvironmentNamePrefix;

    public String computeEnvironmentNamePrefix() {
        if (computeEnvironmentNamePrefix == null) return null;
        return computeEnvironmentNamePrefix.getValue("ComputeEnvironmentArgs.computeEnvironmentNamePrefix");
    }

    /**
     * Details of the compute resources managed by the compute environment. This parameter is required for managed compute environments. See details below.
     * 
     */
    private UndeferrableValue<ComputeEnvironmentComputeResourcesArgs> computeResources;

    public ComputeEnvironmentComputeResourcesArgs computeResources() {
        if (computeResources == null) return null;
        return computeResources.getValue("ComputeEnvironmentArgs.computeResources");
    }

    /**
     * Details for the Amazon EKS cluster that supports the compute environment. See details below.
     * 
     */
    private UndeferrableValue<ComputeEnvironmentEksConfigurationArgs> eksConfiguration;

    public ComputeEnvironmentEksConfigurationArgs eksConfiguration() {
        if (eksConfiguration == null) return null;
        return eksConfiguration.getValue("ComputeEnvironmentArgs.eksConfiguration");
    }

    /**
     * The full Amazon Resource Name (ARN) of the IAM role that allows AWS Batch to make calls to other AWS services on your behalf.
     * 
     */
    private UndeferrableValue<String> serviceRole;

    public String serviceRole() {
        if (serviceRole == null) return null;
        return serviceRole.getValue("ComputeEnvironmentArgs.serviceRole");
    }

    /**
     * The state of the compute environment. If the state is `ENABLED`, then the compute environment accepts jobs from a queue and can scale out automatically based on queues. Valid items are `ENABLED` or `DISABLED`. Defaults to `ENABLED`.
     * 
     */
    private UndeferrableValue<String> state;

    public String state() {
        if (state == null) return null;
        return state.getValue("ComputeEnvironmentArgs.state");
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("ComputeEnvironmentArgs.tags");
    }

    /**
     * The type of the compute environment. Valid items are `MANAGED` or `UNMANAGED`.
     * 
     */
    private UndeferrableValue<String> type;

    public String type() {
        if (type == null) return null;
        return type.getValue("ComputeEnvironmentArgs.type");
    }

    /**
     * Specifies the infrastructure update policy for the compute environment. See details below.
     * 
     */
    private UndeferrableValue<ComputeEnvironmentUpdatePolicyArgs> updatePolicy;

    public ComputeEnvironmentUpdatePolicyArgs updatePolicy() {
        if (updatePolicy == null) return null;
        return updatePolicy.getValue("ComputeEnvironmentArgs.updatePolicy");
    }

}
