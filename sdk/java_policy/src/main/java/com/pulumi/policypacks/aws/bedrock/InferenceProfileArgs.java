// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.bedrock;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.bedrock.inputs.InferenceProfileModelSourceArgs;
import com.pulumi.policypacks.aws.bedrock.inputs.InferenceProfileTimeoutsArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:bedrock/inferenceProfile:InferenceProfile")
public final class InferenceProfileArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The description of the inference profile.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("InferenceProfileArgs.description");
    }

    /**
     * The source of the model this inference profile will track metrics and cost for. See `model_source`.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<InferenceProfileModelSourceArgs> modelSource;

    public InferenceProfileModelSourceArgs modelSource() {
        if (modelSource == null) return null;
        return modelSource.getValue("InferenceProfileArgs.modelSource");
    }

    /**
     * The name of the inference profile.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("InferenceProfileArgs.name");
    }

    /**
     * Key-value mapping of resource tags for the inference profile.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("InferenceProfileArgs.tags");
    }

    private UndeferrableValue<InferenceProfileTimeoutsArgs> timeouts;

    public InferenceProfileTimeoutsArgs timeouts() {
        if (timeouts == null) return null;
        return timeouts.getValue("InferenceProfileArgs.timeouts");
    }

}
