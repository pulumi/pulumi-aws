// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.directconnect;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:directconnect/macsecKeyAssociation:MacsecKeyAssociation")
public final class MacsecKeyAssociationArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The MAC Security (MACsec) CAK to associate with the dedicated connection. The valid values are 64 hexadecimal characters (0-9, A-E). Required if using `ckn`.
     * 
     */
    private UndeferrableValue<String> cak;

    public String cak() {
        if (cak == null) return null;
        return cak.getValue("MacsecKeyAssociationArgs.cak");
    }

    /**
     * The MAC Security (MACsec) CKN to associate with the dedicated connection. The valid values are 64 hexadecimal characters (0-9, A-E). Required if using `cak`.
     * 
     */
    private UndeferrableValue<String> ckn;

    public String ckn() {
        if (ckn == null) return null;
        return ckn.getValue("MacsecKeyAssociationArgs.ckn");
    }

    /**
     * The ID of the dedicated Direct Connect connection. The connection must be a dedicated connection in the `AVAILABLE` state.
     * 
     */
    private UndeferrableValue<String> connectionId;

    public String connectionId() {
        if (connectionId == null) return null;
        return connectionId.getValue("MacsecKeyAssociationArgs.connectionId");
    }

    /**
     * The Amazon Resource Name (ARN) of the MAC Security (MACsec) secret key to associate with the dedicated connection.
     * 
     * &gt; **Note:** `ckn` and `cak` are mutually exclusive with `secret_arn` - these arguments cannot be used together. If you use `ckn` and `cak`, you should not use `secret_arn`. If you use the `secret_arn` argument to reference an existing MAC Security (MACSec) secret key, you should not use `ckn` or `cak`.
     * 
     */
    private UndeferrableValue<String> secretArn;

    public String secretArn() {
        if (secretArn == null) return null;
        return secretArn.getValue("MacsecKeyAssociationArgs.secretArn");
    }

}
