// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.codegurureviewer;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.codegurureviewer.inputs.RepositoryAssociationKmsKeyDetailsArgs;
import com.pulumi.policypacks.aws.codegurureviewer.inputs.RepositoryAssociationRepositoryArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:codegurureviewer/repositoryAssociation:RepositoryAssociation")
public final class RepositoryAssociationArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * An object describing the KMS key to asssociate. Block is documented below.
     * 
     */
    @PolicyResourceProperty(name="kmsKeyDetails", flag="unknown_kmsKeyDetails")
    private RepositoryAssociationKmsKeyDetailsArgs value_kmsKeyDetails;
    private boolean unknown_kmsKeyDetails;
    public RepositoryAssociationKmsKeyDetailsArgs kmsKeyDetails() {
        if (!unknown_kmsKeyDetails) return value_kmsKeyDetails;
        throw new UndeferrableValueException("Value 'RepositoryAssociationArgs.kmsKeyDetails' is not present");
    }

    /**
     * An object describing the repository to associate. Valid values: `bitbucket`, `codecommit`, `github_enterprise_server`, or `s3_bucket`. Block is documented below. Note: for repositories that leverage CodeStar connections (ex. `bitbucket`, `github_enterprise_server`) the connection must be in `Available` status prior to creating this resource.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="repository", flag="unknown_repository")
    private RepositoryAssociationRepositoryArgs value_repository;
    private boolean unknown_repository;
    public RepositoryAssociationRepositoryArgs repository() {
        if (!unknown_repository) return value_repository;
        throw new UndeferrableValueException("Value 'RepositoryAssociationArgs.repository' is not present");
    }

    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'RepositoryAssociationArgs.tags' is not present");
    }

}
