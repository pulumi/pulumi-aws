// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.kinesisanalyticsv2.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.kinesisanalyticsv2.outputs.ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelism;
import com.pulumi.policypacks.aws.kinesisanalyticsv2.outputs.ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfiguration;
import com.pulumi.policypacks.aws.kinesisanalyticsv2.outputs.ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchema;
import com.pulumi.policypacks.aws.kinesisanalyticsv2.outputs.ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfiguration;
import com.pulumi.policypacks.aws.kinesisanalyticsv2.outputs.ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInput;
import com.pulumi.policypacks.aws.kinesisanalyticsv2.outputs.ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInput;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class ApplicationApplicationConfigurationSqlApplicationConfigurationInput {

    private @Nullable UndeferrableValue<List<String>> inAppStreamNames;

    public @Nullable List<String> inAppStreamNames() {
        if (inAppStreamNames == null) return null;
        return inAppStreamNames.getValue("ApplicationApplicationConfigurationSqlApplicationConfigurationInput.inAppStreamNames");
    }

    private @Nullable UndeferrableValue<String> inputId;

    public @Nullable String inputId() {
        if (inputId == null) return null;
        return inputId.getValue("ApplicationApplicationConfigurationSqlApplicationConfigurationInput.inputId");
    }

    /**
     * Describes the number of in-application streams to create.
     * 
     */
    private @Nullable UndeferrableValue<ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelism> inputParallelism;

    public @Nullable ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelism inputParallelism() {
        if (inputParallelism == null) return null;
        return inputParallelism.getValue("ApplicationApplicationConfigurationSqlApplicationConfigurationInput.inputParallelism");
    }

    /**
     * The input processing configuration for the input.
     * An input processor transforms records as they are received from the stream, before the application&#39;s SQL code executes.
     * 
     */
    private @Nullable UndeferrableValue<ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfiguration> inputProcessingConfiguration;

    public @Nullable ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfiguration inputProcessingConfiguration() {
        if (inputProcessingConfiguration == null) return null;
        return inputProcessingConfiguration.getValue("ApplicationApplicationConfigurationSqlApplicationConfigurationInput.inputProcessingConfiguration");
    }

    /**
     * Describes the format of the data in the streaming source, and how each data element maps to corresponding columns in the in-application stream that is being created.
     * 
     */
    private UndeferrableValue<ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchema> inputSchema;

    public ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchema inputSchema() {
        if (inputSchema == null) return null;
        return inputSchema.getValue("ApplicationApplicationConfigurationSqlApplicationConfigurationInput.inputSchema");
    }

    /**
     * The point at which the application starts processing records from the streaming source.
     * 
     */
    private @Nullable UndeferrableValue<List<ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfiguration>> inputStartingPositionConfigurations;

    public @Nullable List<ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfiguration> inputStartingPositionConfigurations() {
        if (inputStartingPositionConfigurations == null) return null;
        return inputStartingPositionConfigurations.getValue("ApplicationApplicationConfigurationSqlApplicationConfigurationInput.inputStartingPositionConfigurations");
    }

    /**
     * If the streaming source is a Kinesis Data Firehose delivery stream, identifies the delivery stream&#39;s ARN.
     * 
     */
    private @Nullable UndeferrableValue<ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInput> kinesisFirehoseInput;

    public @Nullable ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInput kinesisFirehoseInput() {
        if (kinesisFirehoseInput == null) return null;
        return kinesisFirehoseInput.getValue("ApplicationApplicationConfigurationSqlApplicationConfigurationInput.kinesisFirehoseInput");
    }

    /**
     * If the streaming source is a Kinesis data stream, identifies the stream&#39;s Amazon Resource Name (ARN).
     * 
     */
    private @Nullable UndeferrableValue<ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInput> kinesisStreamsInput;

    public @Nullable ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInput kinesisStreamsInput() {
        if (kinesisStreamsInput == null) return null;
        return kinesisStreamsInput.getValue("ApplicationApplicationConfigurationSqlApplicationConfigurationInput.kinesisStreamsInput");
    }

    /**
     * The name prefix to use when creating an in-application stream.
     * 
     */
    private UndeferrableValue<String> namePrefix;

    public String namePrefix() {
        if (namePrefix == null) return null;
        return namePrefix.getValue("ApplicationApplicationConfigurationSqlApplicationConfigurationInput.namePrefix");
    }

}
