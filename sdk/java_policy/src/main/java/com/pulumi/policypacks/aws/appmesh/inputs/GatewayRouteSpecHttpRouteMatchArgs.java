// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appmesh.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.appmesh.inputs.GatewayRouteSpecHttpRouteMatchHeaderArgs;
import com.pulumi.policypacks.aws.appmesh.inputs.GatewayRouteSpecHttpRouteMatchHostnameArgs;
import com.pulumi.policypacks.aws.appmesh.inputs.GatewayRouteSpecHttpRouteMatchPathArgs;
import com.pulumi.policypacks.aws.appmesh.inputs.GatewayRouteSpecHttpRouteMatchQueryParameterArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class GatewayRouteSpecHttpRouteMatchArgs {

    /**
     * Client request headers to match on.
     * 
     */
    @PolicyResourceProperty(name="headers", flag="unknown_headers")
    private List<GatewayRouteSpecHttpRouteMatchHeaderArgs> value_headers;
    private boolean unknown_headers;
    public List<GatewayRouteSpecHttpRouteMatchHeaderArgs> headers() {
        if (!unknown_headers) return value_headers;
        throw new UndeferrableValueException("Value 'GatewayRouteSpecHttpRouteMatchArgs.headers' is not present");
    }

    /**
     * Host name to match on.
     * 
     */
    @PolicyResourceProperty(name="hostname", flag="unknown_hostname")
    private GatewayRouteSpecHttpRouteMatchHostnameArgs value_hostname;
    private boolean unknown_hostname;
    public GatewayRouteSpecHttpRouteMatchHostnameArgs hostname() {
        if (!unknown_hostname) return value_hostname;
        throw new UndeferrableValueException("Value 'GatewayRouteSpecHttpRouteMatchArgs.hostname' is not present");
    }

    /**
     * Client request path to match on.
     * 
     */
    @PolicyResourceProperty(name="path", flag="unknown_path")
    private GatewayRouteSpecHttpRouteMatchPathArgs value_path;
    private boolean unknown_path;
    public GatewayRouteSpecHttpRouteMatchPathArgs path() {
        if (!unknown_path) return value_path;
        throw new UndeferrableValueException("Value 'GatewayRouteSpecHttpRouteMatchArgs.path' is not present");
    }

    /**
     * The port number to match from the request.
     * 
     */
    @PolicyResourceProperty(name="port", flag="unknown_port")
    private Integer value_port;
    private boolean unknown_port;
    public Integer port() {
        if (!unknown_port) return value_port;
        throw new UndeferrableValueException("Value 'GatewayRouteSpecHttpRouteMatchArgs.port' is not present");
    }

    /**
     * Path to match requests with. This parameter must always start with `/`, which by itself matches all requests to the virtual service name.
     * 
     */
    @PolicyResourceProperty(name="prefix", flag="unknown_prefix")
    private String value_prefix;
    private boolean unknown_prefix;
    public String prefix() {
        if (!unknown_prefix) return value_prefix;
        throw new UndeferrableValueException("Value 'GatewayRouteSpecHttpRouteMatchArgs.prefix' is not present");
    }

    /**
     * Client request query parameters to match on.
     * 
     */
    @PolicyResourceProperty(name="queryParameters", flag="unknown_queryParameters")
    private List<GatewayRouteSpecHttpRouteMatchQueryParameterArgs> value_queryParameters;
    private boolean unknown_queryParameters;
    public List<GatewayRouteSpecHttpRouteMatchQueryParameterArgs> queryParameters() {
        if (!unknown_queryParameters) return value_queryParameters;
        throw new UndeferrableValueException("Value 'GatewayRouteSpecHttpRouteMatchArgs.queryParameters' is not present");
    }

}
