// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lightsail;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.lightsail.CertificateDomainValidationOption;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:lightsail/certificate:Certificate")
public final class Certificate extends com.pulumi.resources.PolicyResource {

    /**
     * The ARN of the lightsail certificate.
     * 
     */
    public String arn;



    /**
     * The timestamp when the instance was created.
     * 
     */
    public String createdAt;



    /**
     * A domain name for which the certificate should be issued.
     * 
     */
    public String domainName;



    /**
     * Set of domain validation objects which can be used to complete certificate validation. Can have more than one element, e.g., if SANs are defined.
     * 
     */
    public List<CertificateDomainValidationOption> domainValidationOptions;



    /**
     * The name of the Lightsail load balancer.
     * 
     */
    public String name;



    /**
     * Set of domains that should be SANs in the issued certificate. `domain_name` attribute is automatically added as a Subject Alternative Name.
     * 
     */
    public List<String> subjectAlternativeNames;



    /**
     * A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



}
