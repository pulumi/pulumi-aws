// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ec2.outputs.NetworkInterfaceAttachment;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ec2/networkInterface:NetworkInterface")
public final class NetworkInterface extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the network interface.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'NetworkInterface.arn' is not present");
    }

    /**
     * Configuration block to define the attachment of the ENI. See Attachment below for more details!
     * 
     */
    @PolicyResourceProperty(name="attachments", flag="unknown_attachments")
    private List<NetworkInterfaceAttachment> value_attachments;
    private boolean unknown_attachments;
    public List<NetworkInterfaceAttachment> attachments() {
        if (!unknown_attachments) return value_attachments;
        throw new UndeferrableValueException("Value 'NetworkInterface.attachments' is not present");
    }

    /**
     * Description for the network interface.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private @Nullable String value_description;
    private boolean unknown_description;
    public @Nullable String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'NetworkInterface.description' is not present");
    }

    /**
     * Enables assigning a primary IPv6 Global Unicast Address (GUA) to the network interface (ENI) in dual-stack or IPv6-only subnets. This ensures the instance attached to the ENI retains a consistent IPv6 address. Once enabled, the first IPv6 GUA becomes the primary IPv6 address and cannot be disabled. The primary IPv6 address remains assigned until the instance is terminated or the ENI is detached. Enabling and subsequent disabling forces recreation of the ENI.
     * 
     */
    @PolicyResourceProperty(name="enablePrimaryIpv6", flag="unknown_enablePrimaryIpv6")
    private Boolean value_enablePrimaryIpv6;
    private boolean unknown_enablePrimaryIpv6;
    public Boolean enablePrimaryIpv6() {
        if (!unknown_enablePrimaryIpv6) return value_enablePrimaryIpv6;
        throw new UndeferrableValueException("Value 'NetworkInterface.enablePrimaryIpv6' is not present");
    }

    /**
     * Type of network interface to create. Set to `efa` for Elastic Fabric Adapter. Changing `interface_type` will cause the resource to be destroyed and re-created.
     * 
     */
    @PolicyResourceProperty(name="interfaceType", flag="unknown_interfaceType")
    private String value_interfaceType;
    private boolean unknown_interfaceType;
    public String interfaceType() {
        if (!unknown_interfaceType) return value_interfaceType;
        throw new UndeferrableValueException("Value 'NetworkInterface.interfaceType' is not present");
    }

    /**
     * Number of IPv4 prefixes that AWS automatically assigns to the network interface.
     * 
     */
    @PolicyResourceProperty(name="ipv4PrefixCount", flag="unknown_ipv4PrefixCount")
    private Integer value_ipv4PrefixCount;
    private boolean unknown_ipv4PrefixCount;
    public Integer ipv4PrefixCount() {
        if (!unknown_ipv4PrefixCount) return value_ipv4PrefixCount;
        throw new UndeferrableValueException("Value 'NetworkInterface.ipv4PrefixCount' is not present");
    }

    /**
     * One or more IPv4 prefixes assigned to the network interface.
     * 
     */
    @PolicyResourceProperty(name="ipv4Prefixes", flag="unknown_ipv4Prefixes")
    private List<String> value_ipv4Prefixes;
    private boolean unknown_ipv4Prefixes;
    public List<String> ipv4Prefixes() {
        if (!unknown_ipv4Prefixes) return value_ipv4Prefixes;
        throw new UndeferrableValueException("Value 'NetworkInterface.ipv4Prefixes' is not present");
    }

    /**
     * Number of IPv6 addresses to assign to a network interface. You can&#39;t use this option if specifying specific `ipv6_addresses`. If your subnet has the AssignIpv6AddressOnCreation attribute set to `true`, you can specify `0` to override this setting.
     * 
     */
    @PolicyResourceProperty(name="ipv6AddressCount", flag="unknown_ipv6AddressCount")
    private Integer value_ipv6AddressCount;
    private boolean unknown_ipv6AddressCount;
    public Integer ipv6AddressCount() {
        if (!unknown_ipv6AddressCount) return value_ipv6AddressCount;
        throw new UndeferrableValueException("Value 'NetworkInterface.ipv6AddressCount' is not present");
    }

    /**
     * Whether `ipv6_address_list` is allowed and controls the IPs to assign to the ENI and `ipv6_addresses` and `ipv6_address_count` become read-only. Default is `false`.
     * 
     */
    @PolicyResourceProperty(name="ipv6AddressListEnabled", flag="unknown_ipv6AddressListEnabled")
    private @Nullable Boolean value_ipv6AddressListEnabled;
    private boolean unknown_ipv6AddressListEnabled;
    public @Nullable Boolean ipv6AddressListEnabled() {
        if (!unknown_ipv6AddressListEnabled) return value_ipv6AddressListEnabled;
        throw new UndeferrableValueException("Value 'NetworkInterface.ipv6AddressListEnabled' is not present");
    }

    /**
     * List of private IPs to assign to the ENI in sequential order.
     * 
     */
    @PolicyResourceProperty(name="ipv6AddressLists", flag="unknown_ipv6AddressLists")
    private List<String> value_ipv6AddressLists;
    private boolean unknown_ipv6AddressLists;
    public List<String> ipv6AddressLists() {
        if (!unknown_ipv6AddressLists) return value_ipv6AddressLists;
        throw new UndeferrableValueException("Value 'NetworkInterface.ipv6AddressLists' is not present");
    }

    /**
     * One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Addresses are assigned without regard to order. You can&#39;t use this option if you&#39;re specifying `ipv6_address_count`.
     * 
     */
    @PolicyResourceProperty(name="ipv6Addresses", flag="unknown_ipv6Addresses")
    private List<String> value_ipv6Addresses;
    private boolean unknown_ipv6Addresses;
    public List<String> ipv6Addresses() {
        if (!unknown_ipv6Addresses) return value_ipv6Addresses;
        throw new UndeferrableValueException("Value 'NetworkInterface.ipv6Addresses' is not present");
    }

    /**
     * Number of IPv6 prefixes that AWS automatically assigns to the network interface.
     * 
     */
    @PolicyResourceProperty(name="ipv6PrefixCount", flag="unknown_ipv6PrefixCount")
    private Integer value_ipv6PrefixCount;
    private boolean unknown_ipv6PrefixCount;
    public Integer ipv6PrefixCount() {
        if (!unknown_ipv6PrefixCount) return value_ipv6PrefixCount;
        throw new UndeferrableValueException("Value 'NetworkInterface.ipv6PrefixCount' is not present");
    }

    /**
     * One or more IPv6 prefixes assigned to the network interface.
     * 
     */
    @PolicyResourceProperty(name="ipv6Prefixes", flag="unknown_ipv6Prefixes")
    private List<String> value_ipv6Prefixes;
    private boolean unknown_ipv6Prefixes;
    public List<String> ipv6Prefixes() {
        if (!unknown_ipv6Prefixes) return value_ipv6Prefixes;
        throw new UndeferrableValueException("Value 'NetworkInterface.ipv6Prefixes' is not present");
    }

    /**
     * MAC address of the network interface.
     * 
     */
    @PolicyResourceProperty(name="macAddress", flag="unknown_macAddress")
    private String value_macAddress;
    private boolean unknown_macAddress;
    public String macAddress() {
        if (!unknown_macAddress) return value_macAddress;
        throw new UndeferrableValueException("Value 'NetworkInterface.macAddress' is not present");
    }

    @PolicyResourceProperty(name="outpostArn", flag="unknown_outpostArn")
    private String value_outpostArn;
    private boolean unknown_outpostArn;
    public String outpostArn() {
        if (!unknown_outpostArn) return value_outpostArn;
        throw new UndeferrableValueException("Value 'NetworkInterface.outpostArn' is not present");
    }

    /**
     * AWS account ID of the owner of the network interface.
     * 
     */
    @PolicyResourceProperty(name="ownerId", flag="unknown_ownerId")
    private String value_ownerId;
    private boolean unknown_ownerId;
    public String ownerId() {
        if (!unknown_ownerId) return value_ownerId;
        throw new UndeferrableValueException("Value 'NetworkInterface.ownerId' is not present");
    }

    /**
     * Private DNS name of the network interface (IPv4).
     * 
     */
    @PolicyResourceProperty(name="privateDnsName", flag="unknown_privateDnsName")
    private String value_privateDnsName;
    private boolean unknown_privateDnsName;
    public String privateDnsName() {
        if (!unknown_privateDnsName) return value_privateDnsName;
        throw new UndeferrableValueException("Value 'NetworkInterface.privateDnsName' is not present");
    }

    @PolicyResourceProperty(name="privateIp", flag="unknown_privateIp")
    private String value_privateIp;
    private boolean unknown_privateIp;
    public String privateIp() {
        if (!unknown_privateIp) return value_privateIp;
        throw new UndeferrableValueException("Value 'NetworkInterface.privateIp' is not present");
    }

    /**
     * Whether `private_ip_list` is allowed and controls the IPs to assign to the ENI and `private_ips` and `private_ips_count` become read-only. Default is `false`.
     * 
     */
    @PolicyResourceProperty(name="privateIpListEnabled", flag="unknown_privateIpListEnabled")
    private @Nullable Boolean value_privateIpListEnabled;
    private boolean unknown_privateIpListEnabled;
    public @Nullable Boolean privateIpListEnabled() {
        if (!unknown_privateIpListEnabled) return value_privateIpListEnabled;
        throw new UndeferrableValueException("Value 'NetworkInterface.privateIpListEnabled' is not present");
    }

    /**
     * List of private IPs to assign to the ENI in sequential order. Requires setting `private_ip_list_enabled` to `true`.
     * 
     */
    @PolicyResourceProperty(name="privateIpLists", flag="unknown_privateIpLists")
    private List<String> value_privateIpLists;
    private boolean unknown_privateIpLists;
    public List<String> privateIpLists() {
        if (!unknown_privateIpLists) return value_privateIpLists;
        throw new UndeferrableValueException("Value 'NetworkInterface.privateIpLists' is not present");
    }

    /**
     * List of private IPs to assign to the ENI without regard to order.
     * 
     */
    @PolicyResourceProperty(name="privateIps", flag="unknown_privateIps")
    private List<String> value_privateIps;
    private boolean unknown_privateIps;
    public List<String> privateIps() {
        if (!unknown_privateIps) return value_privateIps;
        throw new UndeferrableValueException("Value 'NetworkInterface.privateIps' is not present");
    }

    /**
     * Number of secondary private IPs to assign to the ENI. The total number of private IPs will be 1 + `private_ips_count`, as a primary private IP will be assiged to an ENI by default.
     * 
     */
    @PolicyResourceProperty(name="privateIpsCount", flag="unknown_privateIpsCount")
    private Integer value_privateIpsCount;
    private boolean unknown_privateIpsCount;
    public Integer privateIpsCount() {
        if (!unknown_privateIpsCount) return value_privateIpsCount;
        throw new UndeferrableValueException("Value 'NetworkInterface.privateIpsCount' is not present");
    }

    /**
     * List of security group IDs to assign to the ENI.
     * 
     */
    @PolicyResourceProperty(name="securityGroups", flag="unknown_securityGroups")
    private List<String> value_securityGroups;
    private boolean unknown_securityGroups;
    public List<String> securityGroups() {
        if (!unknown_securityGroups) return value_securityGroups;
        throw new UndeferrableValueException("Value 'NetworkInterface.securityGroups' is not present");
    }

    /**
     * Whether to enable source destination checking for the ENI. Default true.
     * 
     */
    @PolicyResourceProperty(name="sourceDestCheck", flag="unknown_sourceDestCheck")
    private @Nullable Boolean value_sourceDestCheck;
    private boolean unknown_sourceDestCheck;
    public @Nullable Boolean sourceDestCheck() {
        if (!unknown_sourceDestCheck) return value_sourceDestCheck;
        throw new UndeferrableValueException("Value 'NetworkInterface.sourceDestCheck' is not present");
    }

    /**
     * Subnet ID to create the ENI in.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="subnetId", flag="unknown_subnetId")
    private String value_subnetId;
    private boolean unknown_subnetId;
    public String subnetId() {
        if (!unknown_subnetId) return value_subnetId;
        throw new UndeferrableValueException("Value 'NetworkInterface.subnetId' is not present");
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'NetworkInterface.tags' is not present");
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'NetworkInterface.tagsAll' is not present");
    }

}
