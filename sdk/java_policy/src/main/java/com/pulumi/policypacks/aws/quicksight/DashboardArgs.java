// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.quicksight;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.quicksight.inputs.DashboardDashboardPublishOptionsArgs;
import com.pulumi.policypacks.aws.quicksight.inputs.DashboardParametersArgs;
import com.pulumi.policypacks.aws.quicksight.inputs.DashboardPermissionArgs;
import com.pulumi.policypacks.aws.quicksight.inputs.DashboardSourceEntityArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:quicksight/dashboard:Dashboard")
public final class DashboardArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * AWS account ID.
     * 
     */
    private UndeferrableValue<String> awsAccountId;

    public String awsAccountId() {
        if (awsAccountId == null) return null;
        return awsAccountId.getValue("DashboardArgs.awsAccountId");
    }

    /**
     * Identifier for the dashboard.
     * 
     */
    private UndeferrableValue<String> dashboardId;

    public String dashboardId() {
        if (dashboardId == null) return null;
        return dashboardId.getValue("DashboardArgs.dashboardId");
    }

    /**
     * Options for publishing the dashboard. See dashboard_publish_options.
     * 
     */
    private UndeferrableValue<DashboardDashboardPublishOptionsArgs> dashboardPublishOptions;

    public DashboardDashboardPublishOptionsArgs dashboardPublishOptions() {
        if (dashboardPublishOptions == null) return null;
        return dashboardPublishOptions.getValue("DashboardArgs.dashboardPublishOptions");
    }

    /**
     * Display name for the dashboard.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("DashboardArgs.name");
    }

    /**
     * The parameters for the creation of the dashboard, which you want to use to override the default settings. A dashboard can have any type of parameters, and some parameters might accept multiple values. See parameters.
     * 
     */
    private UndeferrableValue<DashboardParametersArgs> parameters;

    public DashboardParametersArgs parameters() {
        if (parameters == null) return null;
        return parameters.getValue("DashboardArgs.parameters");
    }

    /**
     * A set of resource permissions on the dashboard. Maximum of 64 items. See permissions.
     * 
     */
    private UndeferrableValue<List<DashboardPermissionArgs>> permissions;

    public List<DashboardPermissionArgs> permissions() {
        if (permissions == null) return null;
        return permissions.getValue("DashboardArgs.permissions");
    }

    /**
     * The entity that you are using as a source when you create the dashboard (template). Only one of `definition` or `source_entity` should be configured. See source_entity.
     * 
     */
    private UndeferrableValue<DashboardSourceEntityArgs> sourceEntity;

    public DashboardSourceEntityArgs sourceEntity() {
        if (sourceEntity == null) return null;
        return sourceEntity.getValue("DashboardArgs.sourceEntity");
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("DashboardArgs.tags");
    }

    /**
     * The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. The theme ARN must exist in the same AWS account where you create the dashboard.
     * 
     */
    private UndeferrableValue<String> themeArn;

    public String themeArn() {
        if (themeArn == null) return null;
        return themeArn.getValue("DashboardArgs.themeArn");
    }

    /**
     * A description of the current dashboard version being created/updated.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> versionDescription;

    public String versionDescription() {
        if (versionDescription == null) return null;
        return versionDescription.getValue("DashboardArgs.versionDescription");
    }

}
