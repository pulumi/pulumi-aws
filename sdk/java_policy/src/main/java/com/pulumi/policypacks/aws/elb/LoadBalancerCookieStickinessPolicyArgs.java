// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.elb;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:elb/loadBalancerCookieStickinessPolicy:LoadBalancerCookieStickinessPolicy")
public final class LoadBalancerCookieStickinessPolicyArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The time period after which
     * the session cookie should be considered stale, expressed in seconds.
     * 
     */
    @PolicyResourceProperty(name="cookieExpirationPeriod", flag="unknown_cookieExpirationPeriod")
    private Integer value_cookieExpirationPeriod;
    private boolean unknown_cookieExpirationPeriod;
    public Integer cookieExpirationPeriod() {
        if (!unknown_cookieExpirationPeriod) return value_cookieExpirationPeriod;
        throw new UndeferrableValueException("Value 'LoadBalancerCookieStickinessPolicyArgs.cookieExpirationPeriod' is not present");
    }

    /**
     * The load balancer port to which the policy
     * should be applied. This must be an active listener on the load
     * balancer.
     * 
     */
    @PolicyResourceProperty(name="lbPort", flag="unknown_lbPort")
    private Integer value_lbPort;
    private boolean unknown_lbPort;
    public Integer lbPort() {
        if (!unknown_lbPort) return value_lbPort;
        throw new UndeferrableValueException("Value 'LoadBalancerCookieStickinessPolicyArgs.lbPort' is not present");
    }

    /**
     * The load balancer to which the policy
     * should be attached.
     * 
     */
    @PolicyResourceProperty(name="loadBalancer", flag="unknown_loadBalancer")
    private String value_loadBalancer;
    private boolean unknown_loadBalancer;
    public String loadBalancer() {
        if (!unknown_loadBalancer) return value_loadBalancer;
        throw new UndeferrableValueException("Value 'LoadBalancerCookieStickinessPolicyArgs.loadBalancer' is not present");
    }

    /**
     * The name of the stickiness policy.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'LoadBalancerCookieStickinessPolicyArgs.name' is not present");
    }

}
