// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.elb;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:elb/loadBalancerCookieStickinessPolicy:LoadBalancerCookieStickinessPolicy")
public final class LoadBalancerCookieStickinessPolicyArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The time period after which
     * the session cookie should be considered stale, expressed in seconds.
     * 
     */
    private UndeferrableValue<Integer> cookieExpirationPeriod;

    public Integer cookieExpirationPeriod() {
        if (cookieExpirationPeriod == null) return null;
        return cookieExpirationPeriod.getValue("LoadBalancerCookieStickinessPolicyArgs.cookieExpirationPeriod");
    }

    /**
     * The load balancer port to which the policy
     * should be applied. This must be an active listener on the load
     * balancer.
     * 
     */
    private UndeferrableValue<Integer> lbPort;

    public Integer lbPort() {
        if (lbPort == null) return null;
        return lbPort.getValue("LoadBalancerCookieStickinessPolicyArgs.lbPort");
    }

    /**
     * The load balancer to which the policy
     * should be attached.
     * 
     */
    private UndeferrableValue<String> loadBalancer;

    public String loadBalancer() {
        if (loadBalancer == null) return null;
        return loadBalancer.getValue("LoadBalancerCookieStickinessPolicyArgs.loadBalancer");
    }

    /**
     * The name of the stickiness policy.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("LoadBalancerCookieStickinessPolicyArgs.name");
    }

}
