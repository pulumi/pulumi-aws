// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.codecatalyst;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.codecatalyst.inputs.DevEnvironmentIdesArgs;
import com.pulumi.policypacks.aws.codecatalyst.inputs.DevEnvironmentPersistentStorageArgs;
import com.pulumi.policypacks.aws.codecatalyst.inputs.DevEnvironmentRepositoryArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:codecatalyst/devEnvironment:DevEnvironment")
public final class DevEnvironmentArgs extends com.pulumi.resources.PolicyResourceInput {

    private UndeferrableValue<String> alias;

    public String alias() {
        if (alias == null) return null;
        return alias.getValue("DevEnvironmentArgs.alias");
    }

    /**
     * Information about the integrated development environment (IDE) configured for a Dev Environment.
     * 
     */
    private UndeferrableValue<DevEnvironmentIdesArgs> ides;

    public DevEnvironmentIdesArgs ides() {
        if (ides == null) return null;
        return ides.getValue("DevEnvironmentArgs.ides");
    }

    /**
     * The amount of time the Dev Environment will run without any activity detected before stopping, in minutes. Only whole integers are allowed. Dev Environments consume compute minutes when running.
     * 
     */
    private UndeferrableValue<Integer> inactivityTimeoutMinutes;

    public Integer inactivityTimeoutMinutes() {
        if (inactivityTimeoutMinutes == null) return null;
        return inactivityTimeoutMinutes.getValue("DevEnvironmentArgs.inactivityTimeoutMinutes");
    }

    /**
     * The Amazon EC2 instace type to use for the Dev Environment. Valid values include dev.standard1.small,dev.standard1.medium,dev.standard1.large,dev.standard1.xlarge
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> instanceType;

    public String instanceType() {
        if (instanceType == null) return null;
        return instanceType.getValue("DevEnvironmentArgs.instanceType");
    }

    /**
     * Information about the amount of storage allocated to the Dev Environment.
     * 
     */
    private UndeferrableValue<DevEnvironmentPersistentStorageArgs> persistentStorage;

    public DevEnvironmentPersistentStorageArgs persistentStorage() {
        if (persistentStorage == null) return null;
        return persistentStorage.getValue("DevEnvironmentArgs.persistentStorage");
    }

    /**
     * The name of the project in the space.
     * 
     */
    private UndeferrableValue<String> projectName;

    public String projectName() {
        if (projectName == null) return null;
        return projectName.getValue("DevEnvironmentArgs.projectName");
    }

    /**
     * The source repository that contains the branch to clone into the Dev Environment.
     * 
     */
    private UndeferrableValue<List<DevEnvironmentRepositoryArgs>> repositories;

    public List<DevEnvironmentRepositoryArgs> repositories() {
        if (repositories == null) return null;
        return repositories.getValue("DevEnvironmentArgs.repositories");
    }

    /**
     * The name of the space.
     * 
     */
    private UndeferrableValue<String> spaceName;

    public String spaceName() {
        if (spaceName == null) return null;
        return spaceName.getValue("DevEnvironmentArgs.spaceName");
    }

}
