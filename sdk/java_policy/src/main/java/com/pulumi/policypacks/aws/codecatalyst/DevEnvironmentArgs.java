// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.codecatalyst;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.codecatalyst.inputs.DevEnvironmentIdesArgs;
import com.pulumi.policypacks.aws.codecatalyst.inputs.DevEnvironmentPersistentStorageArgs;
import com.pulumi.policypacks.aws.codecatalyst.inputs.DevEnvironmentRepositoryArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:codecatalyst/devEnvironment:DevEnvironment")
public final class DevEnvironmentArgs extends com.pulumi.resources.PolicyResourceInput {

    @PolicyResourceProperty(name="alias", flag="unknown_alias")
    private String value_alias;
    private boolean unknown_alias;
    public String alias() {
        if (!unknown_alias) return value_alias;
        throw new UndeferrableValueException("Value 'DevEnvironmentArgs.alias' is not present");
    }

    /**
     * Information about the integrated development environment (IDE) configured for a Dev Environment.
     * 
     */
    @PolicyResourceProperty(name="ides", flag="unknown_ides")
    private DevEnvironmentIdesArgs value_ides;
    private boolean unknown_ides;
    public DevEnvironmentIdesArgs ides() {
        if (!unknown_ides) return value_ides;
        throw new UndeferrableValueException("Value 'DevEnvironmentArgs.ides' is not present");
    }

    /**
     * The amount of time the Dev Environment will run without any activity detected before stopping, in minutes. Only whole integers are allowed. Dev Environments consume compute minutes when running.
     * 
     */
    @PolicyResourceProperty(name="inactivityTimeoutMinutes", flag="unknown_inactivityTimeoutMinutes")
    private Integer value_inactivityTimeoutMinutes;
    private boolean unknown_inactivityTimeoutMinutes;
    public Integer inactivityTimeoutMinutes() {
        if (!unknown_inactivityTimeoutMinutes) return value_inactivityTimeoutMinutes;
        throw new UndeferrableValueException("Value 'DevEnvironmentArgs.inactivityTimeoutMinutes' is not present");
    }

    /**
     * The Amazon EC2 instace type to use for the Dev Environment. Valid values include dev.standard1.small,dev.standard1.medium,dev.standard1.large,dev.standard1.xlarge
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="instanceType", flag="unknown_instanceType")
    private String value_instanceType;
    private boolean unknown_instanceType;
    public String instanceType() {
        if (!unknown_instanceType) return value_instanceType;
        throw new UndeferrableValueException("Value 'DevEnvironmentArgs.instanceType' is not present");
    }

    /**
     * Information about the amount of storage allocated to the Dev Environment.
     * 
     */
    @PolicyResourceProperty(name="persistentStorage", flag="unknown_persistentStorage")
    private DevEnvironmentPersistentStorageArgs value_persistentStorage;
    private boolean unknown_persistentStorage;
    public DevEnvironmentPersistentStorageArgs persistentStorage() {
        if (!unknown_persistentStorage) return value_persistentStorage;
        throw new UndeferrableValueException("Value 'DevEnvironmentArgs.persistentStorage' is not present");
    }

    /**
     * The name of the project in the space.
     * 
     */
    @PolicyResourceProperty(name="projectName", flag="unknown_projectName")
    private String value_projectName;
    private boolean unknown_projectName;
    public String projectName() {
        if (!unknown_projectName) return value_projectName;
        throw new UndeferrableValueException("Value 'DevEnvironmentArgs.projectName' is not present");
    }

    /**
     * The source repository that contains the branch to clone into the Dev Environment.
     * 
     */
    @PolicyResourceProperty(name="repositories", flag="unknown_repositories")
    private List<DevEnvironmentRepositoryArgs> value_repositories;
    private boolean unknown_repositories;
    public List<DevEnvironmentRepositoryArgs> repositories() {
        if (!unknown_repositories) return value_repositories;
        throw new UndeferrableValueException("Value 'DevEnvironmentArgs.repositories' is not present");
    }

    /**
     * The name of the space.
     * 
     */
    @PolicyResourceProperty(name="spaceName", flag="unknown_spaceName")
    private String value_spaceName;
    private boolean unknown_spaceName;
    public String spaceName() {
        if (!unknown_spaceName) return value_spaceName;
        throw new UndeferrableValueException("Value 'DevEnvironmentArgs.spaceName' is not present");
    }

}
