// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.msk.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.msk.inputs.ReplicatorReplicationInfoListTopicReplicationStartingPositionArgs;
import com.pulumi.policypacks.aws.msk.inputs.ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class ReplicatorReplicationInfoListTopicReplicationArgs {

    /**
     * Whether to periodically configure remote topic ACLs to match their corresponding upstream topics.
     * 
     */
    private UndeferrableValue<Boolean> copyAccessControlListsForTopics;

    public Boolean copyAccessControlListsForTopics() {
        if (copyAccessControlListsForTopics == null) return null;
        return copyAccessControlListsForTopics.getValue("ReplicatorReplicationInfoListTopicReplicationArgs.copyAccessControlListsForTopics");
    }

    /**
     * Whether to periodically configure remote topics to match their corresponding upstream topics.
     * 
     */
    private UndeferrableValue<Boolean> copyTopicConfigurations;

    public Boolean copyTopicConfigurations() {
        if (copyTopicConfigurations == null) return null;
        return copyTopicConfigurations.getValue("ReplicatorReplicationInfoListTopicReplicationArgs.copyTopicConfigurations");
    }

    /**
     * Whether to periodically check for new topics and partitions.
     * 
     */
    private UndeferrableValue<Boolean> detectAndCopyNewTopics;

    public Boolean detectAndCopyNewTopics() {
        if (detectAndCopyNewTopics == null) return null;
        return detectAndCopyNewTopics.getValue("ReplicatorReplicationInfoListTopicReplicationArgs.detectAndCopyNewTopics");
    }

    /**
     * Configuration for specifying the position in the topics to start replicating from.
     * 
     */
    private UndeferrableValue<ReplicatorReplicationInfoListTopicReplicationStartingPositionArgs> startingPosition;

    public ReplicatorReplicationInfoListTopicReplicationStartingPositionArgs startingPosition() {
        if (startingPosition == null) return null;
        return startingPosition.getValue("ReplicatorReplicationInfoListTopicReplicationArgs.startingPosition");
    }

    /**
     * Configuration for specifying replicated topic names should be the same as their corresponding upstream topics or prefixed with source cluster alias.
     * 
     */
    private UndeferrableValue<ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationArgs> topicNameConfiguration;

    public ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationArgs topicNameConfiguration() {
        if (topicNameConfiguration == null) return null;
        return topicNameConfiguration.getValue("ReplicatorReplicationInfoListTopicReplicationArgs.topicNameConfiguration");
    }

    /**
     * List of regular expression patterns indicating the topics that should not be replica.
     * 
     */
    private UndeferrableValue<List<String>> topicsToExcludes;

    public List<String> topicsToExcludes() {
        if (topicsToExcludes == null) return null;
        return topicsToExcludes.getValue("ReplicatorReplicationInfoListTopicReplicationArgs.topicsToExcludes");
    }

    /**
     * List of regular expression patterns indicating the topics to copy.
     * 
     */
    private UndeferrableValue<List<String>> topicsToReplicates;

    public List<String> topicsToReplicates() {
        if (topicsToReplicates == null) return null;
        return topicsToReplicates.getValue("ReplicatorReplicationInfoListTopicReplicationArgs.topicsToReplicates");
    }

}
