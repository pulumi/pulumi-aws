// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.s3.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.s3.inputs.BucketReplicationConfigRuleDestinationAccessControlTranslationArgs;
import com.pulumi.policypacks.aws.s3.inputs.BucketReplicationConfigRuleDestinationEncryptionConfigurationArgs;
import com.pulumi.policypacks.aws.s3.inputs.BucketReplicationConfigRuleDestinationMetricsArgs;
import com.pulumi.policypacks.aws.s3.inputs.BucketReplicationConfigRuleDestinationReplicationTimeArgs;
import java.lang.String;
import javax.annotation.Nullable;


public final class BucketReplicationConfigRuleDestinationArgs {

    /**
     * Configuration block that specifies the overrides to use for object owners on replication. See below. Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS account that owns the source object. Must be used in conjunction with `account` owner override configuration.
     * 
     */
    @PolicyResourceProperty(name="accessControlTranslation", flag="unknown_accessControlTranslation")
    private BucketReplicationConfigRuleDestinationAccessControlTranslationArgs value_accessControlTranslation;
    private boolean unknown_accessControlTranslation;
    public BucketReplicationConfigRuleDestinationAccessControlTranslationArgs accessControlTranslation() {
        if (!unknown_accessControlTranslation) return value_accessControlTranslation;
        throw new UndeferrableValueException("Value 'BucketReplicationConfigRuleDestinationArgs.accessControlTranslation' is not present");
    }

    /**
     * Account ID to specify the replica ownership. Must be used in conjunction with `access_control_translation` override configuration.
     * 
     */
    @PolicyResourceProperty(name="account", flag="unknown_account")
    private String value_account;
    private boolean unknown_account;
    public String account() {
        if (!unknown_account) return value_account;
        throw new UndeferrableValueException("Value 'BucketReplicationConfigRuleDestinationArgs.account' is not present");
    }

    /**
     * ARN of the bucket where you want Amazon S3 to store the results.
     * 
     */
    @PolicyResourceProperty(name="bucket", flag="unknown_bucket")
    private String value_bucket;
    private boolean unknown_bucket;
    public String bucket() {
        if (!unknown_bucket) return value_bucket;
        throw new UndeferrableValueException("Value 'BucketReplicationConfigRuleDestinationArgs.bucket' is not present");
    }

    /**
     * Configuration block that provides information about encryption. See below. If `source_selection_criteria` is specified, you must specify this element.
     * 
     */
    @PolicyResourceProperty(name="encryptionConfiguration", flag="unknown_encryptionConfiguration")
    private BucketReplicationConfigRuleDestinationEncryptionConfigurationArgs value_encryptionConfiguration;
    private boolean unknown_encryptionConfiguration;
    public BucketReplicationConfigRuleDestinationEncryptionConfigurationArgs encryptionConfiguration() {
        if (!unknown_encryptionConfiguration) return value_encryptionConfiguration;
        throw new UndeferrableValueException("Value 'BucketReplicationConfigRuleDestinationArgs.encryptionConfiguration' is not present");
    }

    /**
     * Configuration block that specifies replication metrics-related settings enabling replication metrics and events. See below.
     * 
     */
    @PolicyResourceProperty(name="metrics", flag="unknown_metrics")
    private BucketReplicationConfigRuleDestinationMetricsArgs value_metrics;
    private boolean unknown_metrics;
    public BucketReplicationConfigRuleDestinationMetricsArgs metrics() {
        if (!unknown_metrics) return value_metrics;
        throw new UndeferrableValueException("Value 'BucketReplicationConfigRuleDestinationArgs.metrics' is not present");
    }

    /**
     * Configuration block that specifies S3 Replication Time Control (S3 RTC), including whether S3 RTC is enabled and the time when all objects and operations on objects must be replicated. See below. Replication Time Control must be used in conjunction with `metrics`.
     * 
     */
    @PolicyResourceProperty(name="replicationTime", flag="unknown_replicationTime")
    private BucketReplicationConfigRuleDestinationReplicationTimeArgs value_replicationTime;
    private boolean unknown_replicationTime;
    public BucketReplicationConfigRuleDestinationReplicationTimeArgs replicationTime() {
        if (!unknown_replicationTime) return value_replicationTime;
        throw new UndeferrableValueException("Value 'BucketReplicationConfigRuleDestinationArgs.replicationTime' is not present");
    }

    /**
     * The [storage class](https://docs.aws.amazon.com/AmazonS3/latest/API/API_Destination.html#AmazonS3-Type-Destination-StorageClass) used to store the object. By default, Amazon S3 uses the storage class of the source object to create the object replica.
     * 
     */
    @PolicyResourceProperty(name="storageClass", flag="unknown_storageClass")
    private String value_storageClass;
    private boolean unknown_storageClass;
    public String storageClass() {
        if (!unknown_storageClass) return value_storageClass;
        throw new UndeferrableValueException("Value 'BucketReplicationConfigRuleDestinationArgs.storageClass' is not present");
    }

}
