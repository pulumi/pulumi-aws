// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.s3.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.s3.inputs.BucketReplicationConfigRuleDestinationAccessControlTranslationArgs;
import com.pulumi.policypacks.aws.s3.inputs.BucketReplicationConfigRuleDestinationEncryptionConfigurationArgs;
import com.pulumi.policypacks.aws.s3.inputs.BucketReplicationConfigRuleDestinationMetricsArgs;
import com.pulumi.policypacks.aws.s3.inputs.BucketReplicationConfigRuleDestinationReplicationTimeArgs;
import java.lang.String;
import javax.annotation.Nullable;


public final class BucketReplicationConfigRuleDestinationArgs {

    /**
     * Configuration block that specifies the overrides to use for object owners on replication. See below. Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS account that owns the source object. Must be used in conjunction with `account` owner override configuration.
     * 
     */
    private UndeferrableValue<BucketReplicationConfigRuleDestinationAccessControlTranslationArgs> accessControlTranslation;

    public BucketReplicationConfigRuleDestinationAccessControlTranslationArgs accessControlTranslation() {
        if (accessControlTranslation == null) return null;
        return accessControlTranslation.getValue("BucketReplicationConfigRuleDestinationArgs.accessControlTranslation");
    }

    /**
     * Account ID to specify the replica ownership. Must be used in conjunction with `access_control_translation` override configuration.
     * 
     */
    private UndeferrableValue<String> account;

    public String account() {
        if (account == null) return null;
        return account.getValue("BucketReplicationConfigRuleDestinationArgs.account");
    }

    /**
     * ARN of the bucket where you want Amazon S3 to store the results.
     * 
     */
    private UndeferrableValue<String> bucket;

    public String bucket() {
        if (bucket == null) return null;
        return bucket.getValue("BucketReplicationConfigRuleDestinationArgs.bucket");
    }

    /**
     * Configuration block that provides information about encryption. See below. If `source_selection_criteria` is specified, you must specify this element.
     * 
     */
    private UndeferrableValue<BucketReplicationConfigRuleDestinationEncryptionConfigurationArgs> encryptionConfiguration;

    public BucketReplicationConfigRuleDestinationEncryptionConfigurationArgs encryptionConfiguration() {
        if (encryptionConfiguration == null) return null;
        return encryptionConfiguration.getValue("BucketReplicationConfigRuleDestinationArgs.encryptionConfiguration");
    }

    /**
     * Configuration block that specifies replication metrics-related settings enabling replication metrics and events. See below.
     * 
     */
    private UndeferrableValue<BucketReplicationConfigRuleDestinationMetricsArgs> metrics;

    public BucketReplicationConfigRuleDestinationMetricsArgs metrics() {
        if (metrics == null) return null;
        return metrics.getValue("BucketReplicationConfigRuleDestinationArgs.metrics");
    }

    /**
     * Configuration block that specifies S3 Replication Time Control (S3 RTC), including whether S3 RTC is enabled and the time when all objects and operations on objects must be replicated. See below. Replication Time Control must be used in conjunction with `metrics`.
     * 
     */
    private UndeferrableValue<BucketReplicationConfigRuleDestinationReplicationTimeArgs> replicationTime;

    public BucketReplicationConfigRuleDestinationReplicationTimeArgs replicationTime() {
        if (replicationTime == null) return null;
        return replicationTime.getValue("BucketReplicationConfigRuleDestinationArgs.replicationTime");
    }

    /**
     * The [storage class](https://docs.aws.amazon.com/AmazonS3/latest/API/API_Destination.html#AmazonS3-Type-Destination-StorageClass) used to store the object. By default, Amazon S3 uses the storage class of the source object to create the object replica.
     * 
     */
    private UndeferrableValue<String> storageClass;

    public String storageClass() {
        if (storageClass == null) return null;
        return storageClass.getValue("BucketReplicationConfigRuleDestinationArgs.storageClass");
    }

}
