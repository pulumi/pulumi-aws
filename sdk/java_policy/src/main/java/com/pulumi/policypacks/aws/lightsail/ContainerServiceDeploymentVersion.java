// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lightsail;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.lightsail.outputs.ContainerServiceDeploymentVersionContainer;
import com.pulumi.policypacks.aws.lightsail.outputs.ContainerServiceDeploymentVersionPublicEndpoint;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:lightsail/containerServiceDeploymentVersion:ContainerServiceDeploymentVersion")
public final class ContainerServiceDeploymentVersion extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * A set of configuration blocks that describe the settings of the containers that will be launched on the container service. Maximum of 53. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="containers", flag="unknown_containers")
    private List<ContainerServiceDeploymentVersionContainer> value_containers;
    private boolean unknown_containers;
    public List<ContainerServiceDeploymentVersionContainer> containers() {
        if (!unknown_containers) return value_containers;
        throw new UndeferrableValueException("Value 'ContainerServiceDeploymentVersion.containers' is not present");
    }

    /**
     * The timestamp when the deployment was created.
     * 
     */
    @PolicyResourceProperty(name="createdAt", flag="unknown_createdAt")
    private String value_createdAt;
    private boolean unknown_createdAt;
    public String createdAt() {
        if (!unknown_createdAt) return value_createdAt;
        throw new UndeferrableValueException("Value 'ContainerServiceDeploymentVersion.createdAt' is not present");
    }

    /**
     * A configuration block that describes the settings of the public endpoint for the container service. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="publicEndpoint", flag="unknown_publicEndpoint")
    private @Nullable ContainerServiceDeploymentVersionPublicEndpoint value_publicEndpoint;
    private boolean unknown_publicEndpoint;
    public @Nullable ContainerServiceDeploymentVersionPublicEndpoint publicEndpoint() {
        if (!unknown_publicEndpoint) return value_publicEndpoint;
        throw new UndeferrableValueException("Value 'ContainerServiceDeploymentVersion.publicEndpoint' is not present");
    }

    /**
     * The name for the container service.
     * 
     */
    @PolicyResourceProperty(name="serviceName", flag="unknown_serviceName")
    private String value_serviceName;
    private boolean unknown_serviceName;
    public String serviceName() {
        if (!unknown_serviceName) return value_serviceName;
        throw new UndeferrableValueException("Value 'ContainerServiceDeploymentVersion.serviceName' is not present");
    }

    /**
     * The current state of the container service.
     * 
     */
    @PolicyResourceProperty(name="state", flag="unknown_state")
    private String value_state;
    private boolean unknown_state;
    public String state() {
        if (!unknown_state) return value_state;
        throw new UndeferrableValueException("Value 'ContainerServiceDeploymentVersion.state' is not present");
    }

    /**
     * The version number of the deployment.
     * 
     */
    @PolicyResourceProperty(name="version", flag="unknown_version")
    private Integer value_version;
    private boolean unknown_version;
    public Integer version() {
        if (!unknown_version) return value_version;
        throw new UndeferrableValueException("Value 'ContainerServiceDeploymentVersion.version' is not present");
    }

}
