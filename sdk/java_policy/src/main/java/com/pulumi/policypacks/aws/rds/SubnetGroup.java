// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.rds;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:rds/subnetGroup:SubnetGroup")
public final class SubnetGroup extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The ARN of the db subnet group.
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("SubnetGroup.arn");
    }

    /**
     * The description of the DB subnet group. Defaults to &#34;Managed by Pulumi&#34;.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("SubnetGroup.description");
    }

    /**
     * The name of the DB subnet group. If omitted, the provider will assign a random, unique name.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("SubnetGroup.name");
    }

    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     * 
     */
    private UndeferrableValue<String> namePrefix;

    public String namePrefix() {
        if (namePrefix == null) return null;
        return namePrefix.getValue("SubnetGroup.namePrefix");
    }

    /**
     * A list of VPC subnet IDs.
     * 
     */
    private UndeferrableValue<List<String>> subnetIds;

    public List<String> subnetIds() {
        if (subnetIds == null) return null;
        return subnetIds.getValue("SubnetGroup.subnetIds");
    }

    /**
     * The network type of the db subnet group.
     * 
     */
    private UndeferrableValue<List<String>> supportedNetworkTypes;

    public List<String> supportedNetworkTypes() {
        if (supportedNetworkTypes == null) return null;
        return supportedNetworkTypes.getValue("SubnetGroup.supportedNetworkTypes");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("SubnetGroup.tags");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("SubnetGroup.tagsAll");
    }

    /**
     * Provides the VPC ID of the DB subnet group.
     * 
     */
    private UndeferrableValue<String> vpcId;

    public String vpcId() {
        if (vpcId == null) return null;
        return vpcId.getValue("SubnetGroup.vpcId");
    }

}
