// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.quicksight.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.String;
import javax.annotation.Nullable;


public final class DataSetRowLevelPermissionTagConfigurationTagRule {

    /**
     * Column name that a tag key is assigned to.
     * 
     */
    @PolicyResourceProperty(name="columnName", flag="unknown_columnName")
    private String value_columnName;
    private boolean unknown_columnName;
    public String columnName() {
        if (!unknown_columnName) return value_columnName;
        throw new UndeferrableValueException("Value 'DataSetRowLevelPermissionTagConfigurationTagRule.columnName' is not present");
    }

    /**
     * A string that you want to use to filter by all the values in a column in the dataset and donâ€™t want to list the values one by one.
     * 
     */
    @PolicyResourceProperty(name="matchAllValue", flag="unknown_matchAllValue")
    private @Nullable String value_matchAllValue;
    private boolean unknown_matchAllValue;
    public @Nullable String matchAllValue() {
        if (!unknown_matchAllValue) return value_matchAllValue;
        throw new UndeferrableValueException("Value 'DataSetRowLevelPermissionTagConfigurationTagRule.matchAllValue' is not present");
    }

    /**
     * Unique key for a tag.
     * 
     */
    @PolicyResourceProperty(name="tagKey", flag="unknown_tagKey")
    private String value_tagKey;
    private boolean unknown_tagKey;
    public String tagKey() {
        if (!unknown_tagKey) return value_tagKey;
        throw new UndeferrableValueException("Value 'DataSetRowLevelPermissionTagConfigurationTagRule.tagKey' is not present");
    }

    /**
     * A string that you want to use to delimit the values when you pass the values at run time.
     * 
     */
    @PolicyResourceProperty(name="tagMultiValueDelimiter", flag="unknown_tagMultiValueDelimiter")
    private @Nullable String value_tagMultiValueDelimiter;
    private boolean unknown_tagMultiValueDelimiter;
    public @Nullable String tagMultiValueDelimiter() {
        if (!unknown_tagMultiValueDelimiter) return value_tagMultiValueDelimiter;
        throw new UndeferrableValueException("Value 'DataSetRowLevelPermissionTagConfigurationTagRule.tagMultiValueDelimiter' is not present");
    }

}
