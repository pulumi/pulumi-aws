// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.securitylake.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.String;
import javax.annotation.Nullable;


public final class SubscriberNotificationConfigurationHttpsNotificationConfiguration {

    /**
     * The API key name for the notification subscription.
     * 
     */
    private @Nullable UndeferrableValue<String> authorizationApiKeyName;

    public @Nullable String authorizationApiKeyName() {
        if (authorizationApiKeyName == null) return null;
        return authorizationApiKeyName.getValue("SubscriberNotificationConfigurationHttpsNotificationConfiguration.authorizationApiKeyName");
    }

    /**
     * The API key value for the notification subscription.
     * 
     */
    private @Nullable UndeferrableValue<String> authorizationApiKeyValue;

    public @Nullable String authorizationApiKeyValue() {
        if (authorizationApiKeyValue == null) return null;
        return authorizationApiKeyValue.getValue("SubscriberNotificationConfigurationHttpsNotificationConfiguration.authorizationApiKeyValue");
    }

    /**
     * The subscription endpoint in Security Lake.
     * If you prefer notification with an HTTPS endpoint, populate this field.
     * 
     */
    private UndeferrableValue<String> endpoint;

    public String endpoint() {
        if (endpoint == null) return null;
        return endpoint.getValue("SubscriberNotificationConfigurationHttpsNotificationConfiguration.endpoint");
    }

    /**
     * The HTTP method used for the notification subscription.
     * Valid values are `POST` and `PUT`.
     * 
     */
    private @Nullable UndeferrableValue<String> httpMethod;

    public @Nullable String httpMethod() {
        if (httpMethod == null) return null;
        return httpMethod.getValue("SubscriberNotificationConfigurationHttpsNotificationConfiguration.httpMethod");
    }

    /**
     * The Amazon Resource Name (ARN) of the EventBridge API destinations IAM role that you created.
     * For more information about ARNs and how to use them in policies, see Managing data access and AWS Managed Policies in the Amazon Security Lake User Guide.
     * 
     */
    private UndeferrableValue<String> targetRoleArn;

    public String targetRoleArn() {
        if (targetRoleArn == null) return null;
        return targetRoleArn.getValue("SubscriberNotificationConfigurationHttpsNotificationConfiguration.targetRoleArn");
    }

}
