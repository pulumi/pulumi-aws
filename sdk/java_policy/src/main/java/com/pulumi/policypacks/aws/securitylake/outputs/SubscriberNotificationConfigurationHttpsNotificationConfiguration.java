// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.securitylake.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.String;
import javax.annotation.Nullable;


public final class SubscriberNotificationConfigurationHttpsNotificationConfiguration {

    /**
     * The API key name for the notification subscription.
     * 
     */
    @PolicyResourceProperty(name="authorizationApiKeyName", flag="unknown_authorizationApiKeyName")
    private @Nullable String value_authorizationApiKeyName;
    private boolean unknown_authorizationApiKeyName;
    public @Nullable String authorizationApiKeyName() {
        if (!unknown_authorizationApiKeyName) return value_authorizationApiKeyName;
        throw new UndeferrableValueException("Value 'SubscriberNotificationConfigurationHttpsNotificationConfiguration.authorizationApiKeyName' is not present");
    }

    /**
     * The API key value for the notification subscription.
     * 
     */
    @PolicyResourceProperty(name="authorizationApiKeyValue", flag="unknown_authorizationApiKeyValue")
    private @Nullable String value_authorizationApiKeyValue;
    private boolean unknown_authorizationApiKeyValue;
    public @Nullable String authorizationApiKeyValue() {
        if (!unknown_authorizationApiKeyValue) return value_authorizationApiKeyValue;
        throw new UndeferrableValueException("Value 'SubscriberNotificationConfigurationHttpsNotificationConfiguration.authorizationApiKeyValue' is not present");
    }

    /**
     * The subscription endpoint in Security Lake.
     * If you prefer notification with an HTTPS endpoint, populate this field.
     * 
     */
    @PolicyResourceProperty(name="endpoint", flag="unknown_endpoint")
    private String value_endpoint;
    private boolean unknown_endpoint;
    public String endpoint() {
        if (!unknown_endpoint) return value_endpoint;
        throw new UndeferrableValueException("Value 'SubscriberNotificationConfigurationHttpsNotificationConfiguration.endpoint' is not present");
    }

    /**
     * The HTTP method used for the notification subscription.
     * Valid values are `POST` and `PUT`.
     * 
     */
    @PolicyResourceProperty(name="httpMethod", flag="unknown_httpMethod")
    private @Nullable String value_httpMethod;
    private boolean unknown_httpMethod;
    public @Nullable String httpMethod() {
        if (!unknown_httpMethod) return value_httpMethod;
        throw new UndeferrableValueException("Value 'SubscriberNotificationConfigurationHttpsNotificationConfiguration.httpMethod' is not present");
    }

    /**
     * The Amazon Resource Name (ARN) of the EventBridge API destinations IAM role that you created.
     * For more information about ARNs and how to use them in policies, see Managing data access and AWS Managed Policies in the Amazon Security Lake User Guide.
     * 
     */
    @PolicyResourceProperty(name="targetRoleArn", flag="unknown_targetRoleArn")
    private String value_targetRoleArn;
    private boolean unknown_targetRoleArn;
    public String targetRoleArn() {
        if (!unknown_targetRoleArn) return value_targetRoleArn;
        throw new UndeferrableValueException("Value 'SubscriberNotificationConfigurationHttpsNotificationConfiguration.targetRoleArn' is not present");
    }

}
