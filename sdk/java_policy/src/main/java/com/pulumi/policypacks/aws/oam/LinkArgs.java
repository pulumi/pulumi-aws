// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.oam;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.oam.inputs.LinkLinkConfigurationArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:oam/link:Link")
public final class LinkArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Human-readable name to use to identify this source account when you are viewing data from it in the monitoring account.
     * 
     */
    private UndeferrableValue<String> labelTemplate;

    public String labelTemplate() {
        if (labelTemplate == null) return null;
        return labelTemplate.getValue("LinkArgs.labelTemplate");
    }

    /**
     * Configuration for creating filters that specify that only some metric namespaces or log groups are to be shared from the source account to the monitoring account. See `link_configuration` Block for details.
     * 
     */
    private UndeferrableValue<LinkLinkConfigurationArgs> linkConfiguration;

    public LinkLinkConfigurationArgs linkConfiguration() {
        if (linkConfiguration == null) return null;
        return linkConfiguration.getValue("LinkArgs.linkConfiguration");
    }

    /**
     * Types of data that the source account shares with the monitoring account.
     * 
     */
    private UndeferrableValue<List<String>> resourceTypes;

    public List<String> resourceTypes() {
        if (resourceTypes == null) return null;
        return resourceTypes.getValue("LinkArgs.resourceTypes");
    }

    /**
     * Identifier of the sink to use to create this link.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> sinkIdentifier;

    public String sinkIdentifier() {
        if (sinkIdentifier == null) return null;
        return sinkIdentifier.getValue("LinkArgs.sinkIdentifier");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("LinkArgs.tags");
    }

}
