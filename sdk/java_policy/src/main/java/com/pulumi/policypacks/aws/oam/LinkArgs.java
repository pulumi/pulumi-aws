// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.oam;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.oam.inputs.LinkLinkConfigurationArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:oam/link:Link")
public final class LinkArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Human-readable name to use to identify this source account when you are viewing data from it in the monitoring account.
     * 
     */
    @PolicyResourceProperty(name="labelTemplate", flag="unknown_labelTemplate")
    private String value_labelTemplate;
    private boolean unknown_labelTemplate;
    public String labelTemplate() {
        if (!unknown_labelTemplate) return value_labelTemplate;
        throw new UndeferrableValueException("Value 'LinkArgs.labelTemplate' is not present");
    }

    /**
     * Configuration for creating filters that specify that only some metric namespaces or log groups are to be shared from the source account to the monitoring account. See `link_configuration` Block for details.
     * 
     */
    @PolicyResourceProperty(name="linkConfiguration", flag="unknown_linkConfiguration")
    private LinkLinkConfigurationArgs value_linkConfiguration;
    private boolean unknown_linkConfiguration;
    public LinkLinkConfigurationArgs linkConfiguration() {
        if (!unknown_linkConfiguration) return value_linkConfiguration;
        throw new UndeferrableValueException("Value 'LinkArgs.linkConfiguration' is not present");
    }

    /**
     * Types of data that the source account shares with the monitoring account.
     * 
     */
    @PolicyResourceProperty(name="resourceTypes", flag="unknown_resourceTypes")
    private List<String> value_resourceTypes;
    private boolean unknown_resourceTypes;
    public List<String> resourceTypes() {
        if (!unknown_resourceTypes) return value_resourceTypes;
        throw new UndeferrableValueException("Value 'LinkArgs.resourceTypes' is not present");
    }

    /**
     * Identifier of the sink to use to create this link.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="sinkIdentifier", flag="unknown_sinkIdentifier")
    private String value_sinkIdentifier;
    private boolean unknown_sinkIdentifier;
    public String sinkIdentifier() {
        if (!unknown_sinkIdentifier) return value_sinkIdentifier;
        throw new UndeferrableValueException("Value 'LinkArgs.sinkIdentifier' is not present");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'LinkArgs.tags' is not present");
    }

}
