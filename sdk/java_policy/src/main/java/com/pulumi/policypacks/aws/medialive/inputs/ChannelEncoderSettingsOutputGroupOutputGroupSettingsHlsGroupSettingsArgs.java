// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.medialive.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.medialive.inputs.ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingArgs;
import com.pulumi.policypacks.aws.medialive.inputs.ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsDestinationArgs;
import com.pulumi.policypacks.aws.medialive.inputs.ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsHlsCdnSettingArgs;
import com.pulumi.policypacks.aws.medialive.inputs.ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs {

    /**
     * The ad marker type for this output group.
     * 
     */
    @PolicyResourceProperty(name="adMarkers", flag="unknown_adMarkers")
    private List<String> value_adMarkers;
    private boolean unknown_adMarkers;
    public List<String> adMarkers() {
        if (!unknown_adMarkers) return value_adMarkers;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.adMarkers' is not present");
    }

    @PolicyResourceProperty(name="baseUrlContent", flag="unknown_baseUrlContent")
    private String value_baseUrlContent;
    private boolean unknown_baseUrlContent;
    public String baseUrlContent() {
        if (!unknown_baseUrlContent) return value_baseUrlContent;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.baseUrlContent' is not present");
    }

    @PolicyResourceProperty(name="baseUrlContent1", flag="unknown_baseUrlContent1")
    private String value_baseUrlContent1;
    private boolean unknown_baseUrlContent1;
    public String baseUrlContent1() {
        if (!unknown_baseUrlContent1) return value_baseUrlContent1;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.baseUrlContent1' is not present");
    }

    @PolicyResourceProperty(name="baseUrlManifest", flag="unknown_baseUrlManifest")
    private String value_baseUrlManifest;
    private boolean unknown_baseUrlManifest;
    public String baseUrlManifest() {
        if (!unknown_baseUrlManifest) return value_baseUrlManifest;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.baseUrlManifest' is not present");
    }

    @PolicyResourceProperty(name="baseUrlManifest1", flag="unknown_baseUrlManifest1")
    private String value_baseUrlManifest1;
    private boolean unknown_baseUrlManifest1;
    public String baseUrlManifest1() {
        if (!unknown_baseUrlManifest1) return value_baseUrlManifest1;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.baseUrlManifest1' is not present");
    }

    @PolicyResourceProperty(name="captionLanguageMappings", flag="unknown_captionLanguageMappings")
    private List<ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingArgs> value_captionLanguageMappings;
    private boolean unknown_captionLanguageMappings;
    public List<ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingArgs> captionLanguageMappings() {
        if (!unknown_captionLanguageMappings) return value_captionLanguageMappings;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.captionLanguageMappings' is not present");
    }

    @PolicyResourceProperty(name="captionLanguageSetting", flag="unknown_captionLanguageSetting")
    private String value_captionLanguageSetting;
    private boolean unknown_captionLanguageSetting;
    public String captionLanguageSetting() {
        if (!unknown_captionLanguageSetting) return value_captionLanguageSetting;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.captionLanguageSetting' is not present");
    }

    @PolicyResourceProperty(name="clientCache", flag="unknown_clientCache")
    private String value_clientCache;
    private boolean unknown_clientCache;
    public String clientCache() {
        if (!unknown_clientCache) return value_clientCache;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.clientCache' is not present");
    }

    @PolicyResourceProperty(name="codecSpecification", flag="unknown_codecSpecification")
    private String value_codecSpecification;
    private boolean unknown_codecSpecification;
    public String codecSpecification() {
        if (!unknown_codecSpecification) return value_codecSpecification;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.codecSpecification' is not present");
    }

    @PolicyResourceProperty(name="constantIv", flag="unknown_constantIv")
    private String value_constantIv;
    private boolean unknown_constantIv;
    public String constantIv() {
        if (!unknown_constantIv) return value_constantIv;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.constantIv' is not present");
    }

    @PolicyResourceProperty(name="destination", flag="unknown_destination")
    private ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsDestinationArgs value_destination;
    private boolean unknown_destination;
    public ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsDestinationArgs destination() {
        if (!unknown_destination) return value_destination;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.destination' is not present");
    }

    @PolicyResourceProperty(name="directoryStructure", flag="unknown_directoryStructure")
    private String value_directoryStructure;
    private boolean unknown_directoryStructure;
    public String directoryStructure() {
        if (!unknown_directoryStructure) return value_directoryStructure;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.directoryStructure' is not present");
    }

    @PolicyResourceProperty(name="discontinuityTags", flag="unknown_discontinuityTags")
    private String value_discontinuityTags;
    private boolean unknown_discontinuityTags;
    public String discontinuityTags() {
        if (!unknown_discontinuityTags) return value_discontinuityTags;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.discontinuityTags' is not present");
    }

    @PolicyResourceProperty(name="encryptionType", flag="unknown_encryptionType")
    private String value_encryptionType;
    private boolean unknown_encryptionType;
    public String encryptionType() {
        if (!unknown_encryptionType) return value_encryptionType;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.encryptionType' is not present");
    }

    @PolicyResourceProperty(name="hlsCdnSettings", flag="unknown_hlsCdnSettings")
    private List<ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsHlsCdnSettingArgs> value_hlsCdnSettings;
    private boolean unknown_hlsCdnSettings;
    public List<ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsHlsCdnSettingArgs> hlsCdnSettings() {
        if (!unknown_hlsCdnSettings) return value_hlsCdnSettings;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.hlsCdnSettings' is not present");
    }

    @PolicyResourceProperty(name="hlsId3SegmentTagging", flag="unknown_hlsId3SegmentTagging")
    private String value_hlsId3SegmentTagging;
    private boolean unknown_hlsId3SegmentTagging;
    public String hlsId3SegmentTagging() {
        if (!unknown_hlsId3SegmentTagging) return value_hlsId3SegmentTagging;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.hlsId3SegmentTagging' is not present");
    }

    @PolicyResourceProperty(name="iframeOnlyPlaylists", flag="unknown_iframeOnlyPlaylists")
    private String value_iframeOnlyPlaylists;
    private boolean unknown_iframeOnlyPlaylists;
    public String iframeOnlyPlaylists() {
        if (!unknown_iframeOnlyPlaylists) return value_iframeOnlyPlaylists;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.iframeOnlyPlaylists' is not present");
    }

    @PolicyResourceProperty(name="incompleteSegmentBehavior", flag="unknown_incompleteSegmentBehavior")
    private String value_incompleteSegmentBehavior;
    private boolean unknown_incompleteSegmentBehavior;
    public String incompleteSegmentBehavior() {
        if (!unknown_incompleteSegmentBehavior) return value_incompleteSegmentBehavior;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.incompleteSegmentBehavior' is not present");
    }

    @PolicyResourceProperty(name="indexNSegments", flag="unknown_indexNSegments")
    private Integer value_indexNSegments;
    private boolean unknown_indexNSegments;
    public Integer indexNSegments() {
        if (!unknown_indexNSegments) return value_indexNSegments;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.indexNSegments' is not present");
    }

    @PolicyResourceProperty(name="inputLossAction", flag="unknown_inputLossAction")
    private String value_inputLossAction;
    private boolean unknown_inputLossAction;
    public String inputLossAction() {
        if (!unknown_inputLossAction) return value_inputLossAction;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.inputLossAction' is not present");
    }

    @PolicyResourceProperty(name="ivInManifest", flag="unknown_ivInManifest")
    private String value_ivInManifest;
    private boolean unknown_ivInManifest;
    public String ivInManifest() {
        if (!unknown_ivInManifest) return value_ivInManifest;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.ivInManifest' is not present");
    }

    @PolicyResourceProperty(name="ivSource", flag="unknown_ivSource")
    private String value_ivSource;
    private boolean unknown_ivSource;
    public String ivSource() {
        if (!unknown_ivSource) return value_ivSource;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.ivSource' is not present");
    }

    @PolicyResourceProperty(name="keepSegments", flag="unknown_keepSegments")
    private Integer value_keepSegments;
    private boolean unknown_keepSegments;
    public Integer keepSegments() {
        if (!unknown_keepSegments) return value_keepSegments;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.keepSegments' is not present");
    }

    @PolicyResourceProperty(name="keyFormat", flag="unknown_keyFormat")
    private String value_keyFormat;
    private boolean unknown_keyFormat;
    public String keyFormat() {
        if (!unknown_keyFormat) return value_keyFormat;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.keyFormat' is not present");
    }

    @PolicyResourceProperty(name="keyFormatVersions", flag="unknown_keyFormatVersions")
    private String value_keyFormatVersions;
    private boolean unknown_keyFormatVersions;
    public String keyFormatVersions() {
        if (!unknown_keyFormatVersions) return value_keyFormatVersions;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.keyFormatVersions' is not present");
    }

    @PolicyResourceProperty(name="keyProviderSettings", flag="unknown_keyProviderSettings")
    private ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsArgs value_keyProviderSettings;
    private boolean unknown_keyProviderSettings;
    public ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsArgs keyProviderSettings() {
        if (!unknown_keyProviderSettings) return value_keyProviderSettings;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.keyProviderSettings' is not present");
    }

    @PolicyResourceProperty(name="manifestCompression", flag="unknown_manifestCompression")
    private String value_manifestCompression;
    private boolean unknown_manifestCompression;
    public String manifestCompression() {
        if (!unknown_manifestCompression) return value_manifestCompression;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.manifestCompression' is not present");
    }

    @PolicyResourceProperty(name="manifestDurationFormat", flag="unknown_manifestDurationFormat")
    private String value_manifestDurationFormat;
    private boolean unknown_manifestDurationFormat;
    public String manifestDurationFormat() {
        if (!unknown_manifestDurationFormat) return value_manifestDurationFormat;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.manifestDurationFormat' is not present");
    }

    @PolicyResourceProperty(name="minSegmentLength", flag="unknown_minSegmentLength")
    private Integer value_minSegmentLength;
    private boolean unknown_minSegmentLength;
    public Integer minSegmentLength() {
        if (!unknown_minSegmentLength) return value_minSegmentLength;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.minSegmentLength' is not present");
    }

    @PolicyResourceProperty(name="mode", flag="unknown_mode")
    private String value_mode;
    private boolean unknown_mode;
    public String mode() {
        if (!unknown_mode) return value_mode;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.mode' is not present");
    }

    @PolicyResourceProperty(name="outputSelection", flag="unknown_outputSelection")
    private String value_outputSelection;
    private boolean unknown_outputSelection;
    public String outputSelection() {
        if (!unknown_outputSelection) return value_outputSelection;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.outputSelection' is not present");
    }

    @PolicyResourceProperty(name="programDateTime", flag="unknown_programDateTime")
    private String value_programDateTime;
    private boolean unknown_programDateTime;
    public String programDateTime() {
        if (!unknown_programDateTime) return value_programDateTime;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.programDateTime' is not present");
    }

    @PolicyResourceProperty(name="programDateTimeClock", flag="unknown_programDateTimeClock")
    private String value_programDateTimeClock;
    private boolean unknown_programDateTimeClock;
    public String programDateTimeClock() {
        if (!unknown_programDateTimeClock) return value_programDateTimeClock;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.programDateTimeClock' is not present");
    }

    @PolicyResourceProperty(name="programDateTimePeriod", flag="unknown_programDateTimePeriod")
    private Integer value_programDateTimePeriod;
    private boolean unknown_programDateTimePeriod;
    public Integer programDateTimePeriod() {
        if (!unknown_programDateTimePeriod) return value_programDateTimePeriod;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.programDateTimePeriod' is not present");
    }

    @PolicyResourceProperty(name="redundantManifest", flag="unknown_redundantManifest")
    private String value_redundantManifest;
    private boolean unknown_redundantManifest;
    public String redundantManifest() {
        if (!unknown_redundantManifest) return value_redundantManifest;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.redundantManifest' is not present");
    }

    @PolicyResourceProperty(name="segmentLength", flag="unknown_segmentLength")
    private Integer value_segmentLength;
    private boolean unknown_segmentLength;
    public Integer segmentLength() {
        if (!unknown_segmentLength) return value_segmentLength;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.segmentLength' is not present");
    }

    @PolicyResourceProperty(name="segmentsPerSubdirectory", flag="unknown_segmentsPerSubdirectory")
    private Integer value_segmentsPerSubdirectory;
    private boolean unknown_segmentsPerSubdirectory;
    public Integer segmentsPerSubdirectory() {
        if (!unknown_segmentsPerSubdirectory) return value_segmentsPerSubdirectory;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.segmentsPerSubdirectory' is not present");
    }

    @PolicyResourceProperty(name="streamInfResolution", flag="unknown_streamInfResolution")
    private String value_streamInfResolution;
    private boolean unknown_streamInfResolution;
    public String streamInfResolution() {
        if (!unknown_streamInfResolution) return value_streamInfResolution;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.streamInfResolution' is not present");
    }

    /**
     * Indicates ID3 frame that has the timecode.
     * 
     */
    @PolicyResourceProperty(name="timedMetadataId3Frame", flag="unknown_timedMetadataId3Frame")
    private String value_timedMetadataId3Frame;
    private boolean unknown_timedMetadataId3Frame;
    public String timedMetadataId3Frame() {
        if (!unknown_timedMetadataId3Frame) return value_timedMetadataId3Frame;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.timedMetadataId3Frame' is not present");
    }

    @PolicyResourceProperty(name="timedMetadataId3Period", flag="unknown_timedMetadataId3Period")
    private Integer value_timedMetadataId3Period;
    private boolean unknown_timedMetadataId3Period;
    public Integer timedMetadataId3Period() {
        if (!unknown_timedMetadataId3Period) return value_timedMetadataId3Period;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.timedMetadataId3Period' is not present");
    }

    @PolicyResourceProperty(name="timestampDeltaMilliseconds", flag="unknown_timestampDeltaMilliseconds")
    private Integer value_timestampDeltaMilliseconds;
    private boolean unknown_timestampDeltaMilliseconds;
    public Integer timestampDeltaMilliseconds() {
        if (!unknown_timestampDeltaMilliseconds) return value_timestampDeltaMilliseconds;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.timestampDeltaMilliseconds' is not present");
    }

    @PolicyResourceProperty(name="tsFileMode", flag="unknown_tsFileMode")
    private String value_tsFileMode;
    private boolean unknown_tsFileMode;
    public String tsFileMode() {
        if (!unknown_tsFileMode) return value_tsFileMode;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.tsFileMode' is not present");
    }

}
