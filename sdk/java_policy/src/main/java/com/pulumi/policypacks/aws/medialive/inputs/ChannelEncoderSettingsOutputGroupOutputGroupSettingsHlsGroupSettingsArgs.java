// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.medialive.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.medialive.inputs.ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingArgs;
import com.pulumi.policypacks.aws.medialive.inputs.ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsDestinationArgs;
import com.pulumi.policypacks.aws.medialive.inputs.ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsHlsCdnSettingArgs;
import com.pulumi.policypacks.aws.medialive.inputs.ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs {

    /**
     * The ad marker type for this output group.
     * 
     */
    private UndeferrableValue<List<String>> adMarkers;

    public List<String> adMarkers() {
        if (adMarkers == null) return null;
        return adMarkers.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.adMarkers");
    }

    private UndeferrableValue<String> baseUrlContent;

    public String baseUrlContent() {
        if (baseUrlContent == null) return null;
        return baseUrlContent.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.baseUrlContent");
    }

    private UndeferrableValue<String> baseUrlContent1;

    public String baseUrlContent1() {
        if (baseUrlContent1 == null) return null;
        return baseUrlContent1.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.baseUrlContent1");
    }

    private UndeferrableValue<String> baseUrlManifest;

    public String baseUrlManifest() {
        if (baseUrlManifest == null) return null;
        return baseUrlManifest.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.baseUrlManifest");
    }

    private UndeferrableValue<String> baseUrlManifest1;

    public String baseUrlManifest1() {
        if (baseUrlManifest1 == null) return null;
        return baseUrlManifest1.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.baseUrlManifest1");
    }

    private UndeferrableValue<List<ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingArgs>> captionLanguageMappings;

    public List<ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingArgs> captionLanguageMappings() {
        if (captionLanguageMappings == null) return null;
        return captionLanguageMappings.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.captionLanguageMappings");
    }

    private UndeferrableValue<String> captionLanguageSetting;

    public String captionLanguageSetting() {
        if (captionLanguageSetting == null) return null;
        return captionLanguageSetting.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.captionLanguageSetting");
    }

    private UndeferrableValue<String> clientCache;

    public String clientCache() {
        if (clientCache == null) return null;
        return clientCache.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.clientCache");
    }

    private UndeferrableValue<String> codecSpecification;

    public String codecSpecification() {
        if (codecSpecification == null) return null;
        return codecSpecification.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.codecSpecification");
    }

    private UndeferrableValue<String> constantIv;

    public String constantIv() {
        if (constantIv == null) return null;
        return constantIv.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.constantIv");
    }

    private UndeferrableValue<ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsDestinationArgs> destination;

    public ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsDestinationArgs destination() {
        if (destination == null) return null;
        return destination.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.destination");
    }

    private UndeferrableValue<String> directoryStructure;

    public String directoryStructure() {
        if (directoryStructure == null) return null;
        return directoryStructure.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.directoryStructure");
    }

    private UndeferrableValue<String> discontinuityTags;

    public String discontinuityTags() {
        if (discontinuityTags == null) return null;
        return discontinuityTags.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.discontinuityTags");
    }

    private UndeferrableValue<String> encryptionType;

    public String encryptionType() {
        if (encryptionType == null) return null;
        return encryptionType.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.encryptionType");
    }

    private UndeferrableValue<List<ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsHlsCdnSettingArgs>> hlsCdnSettings;

    public List<ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsHlsCdnSettingArgs> hlsCdnSettings() {
        if (hlsCdnSettings == null) return null;
        return hlsCdnSettings.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.hlsCdnSettings");
    }

    private UndeferrableValue<String> hlsId3SegmentTagging;

    public String hlsId3SegmentTagging() {
        if (hlsId3SegmentTagging == null) return null;
        return hlsId3SegmentTagging.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.hlsId3SegmentTagging");
    }

    private UndeferrableValue<String> iframeOnlyPlaylists;

    public String iframeOnlyPlaylists() {
        if (iframeOnlyPlaylists == null) return null;
        return iframeOnlyPlaylists.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.iframeOnlyPlaylists");
    }

    private UndeferrableValue<String> incompleteSegmentBehavior;

    public String incompleteSegmentBehavior() {
        if (incompleteSegmentBehavior == null) return null;
        return incompleteSegmentBehavior.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.incompleteSegmentBehavior");
    }

    private UndeferrableValue<Integer> indexNSegments;

    public Integer indexNSegments() {
        if (indexNSegments == null) return null;
        return indexNSegments.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.indexNSegments");
    }

    private UndeferrableValue<String> inputLossAction;

    public String inputLossAction() {
        if (inputLossAction == null) return null;
        return inputLossAction.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.inputLossAction");
    }

    private UndeferrableValue<String> ivInManifest;

    public String ivInManifest() {
        if (ivInManifest == null) return null;
        return ivInManifest.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.ivInManifest");
    }

    private UndeferrableValue<String> ivSource;

    public String ivSource() {
        if (ivSource == null) return null;
        return ivSource.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.ivSource");
    }

    private UndeferrableValue<Integer> keepSegments;

    public Integer keepSegments() {
        if (keepSegments == null) return null;
        return keepSegments.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.keepSegments");
    }

    private UndeferrableValue<String> keyFormat;

    public String keyFormat() {
        if (keyFormat == null) return null;
        return keyFormat.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.keyFormat");
    }

    private UndeferrableValue<String> keyFormatVersions;

    public String keyFormatVersions() {
        if (keyFormatVersions == null) return null;
        return keyFormatVersions.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.keyFormatVersions");
    }

    private UndeferrableValue<ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsArgs> keyProviderSettings;

    public ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsArgs keyProviderSettings() {
        if (keyProviderSettings == null) return null;
        return keyProviderSettings.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.keyProviderSettings");
    }

    private UndeferrableValue<String> manifestCompression;

    public String manifestCompression() {
        if (manifestCompression == null) return null;
        return manifestCompression.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.manifestCompression");
    }

    private UndeferrableValue<String> manifestDurationFormat;

    public String manifestDurationFormat() {
        if (manifestDurationFormat == null) return null;
        return manifestDurationFormat.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.manifestDurationFormat");
    }

    private UndeferrableValue<Integer> minSegmentLength;

    public Integer minSegmentLength() {
        if (minSegmentLength == null) return null;
        return minSegmentLength.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.minSegmentLength");
    }

    private UndeferrableValue<String> mode;

    public String mode() {
        if (mode == null) return null;
        return mode.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.mode");
    }

    private UndeferrableValue<String> outputSelection;

    public String outputSelection() {
        if (outputSelection == null) return null;
        return outputSelection.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.outputSelection");
    }

    private UndeferrableValue<String> programDateTime;

    public String programDateTime() {
        if (programDateTime == null) return null;
        return programDateTime.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.programDateTime");
    }

    private UndeferrableValue<String> programDateTimeClock;

    public String programDateTimeClock() {
        if (programDateTimeClock == null) return null;
        return programDateTimeClock.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.programDateTimeClock");
    }

    private UndeferrableValue<Integer> programDateTimePeriod;

    public Integer programDateTimePeriod() {
        if (programDateTimePeriod == null) return null;
        return programDateTimePeriod.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.programDateTimePeriod");
    }

    private UndeferrableValue<String> redundantManifest;

    public String redundantManifest() {
        if (redundantManifest == null) return null;
        return redundantManifest.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.redundantManifest");
    }

    private UndeferrableValue<Integer> segmentLength;

    public Integer segmentLength() {
        if (segmentLength == null) return null;
        return segmentLength.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.segmentLength");
    }

    private UndeferrableValue<Integer> segmentsPerSubdirectory;

    public Integer segmentsPerSubdirectory() {
        if (segmentsPerSubdirectory == null) return null;
        return segmentsPerSubdirectory.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.segmentsPerSubdirectory");
    }

    private UndeferrableValue<String> streamInfResolution;

    public String streamInfResolution() {
        if (streamInfResolution == null) return null;
        return streamInfResolution.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.streamInfResolution");
    }

    /**
     * Indicates ID3 frame that has the timecode.
     * 
     */
    private UndeferrableValue<String> timedMetadataId3Frame;

    public String timedMetadataId3Frame() {
        if (timedMetadataId3Frame == null) return null;
        return timedMetadataId3Frame.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.timedMetadataId3Frame");
    }

    private UndeferrableValue<Integer> timedMetadataId3Period;

    public Integer timedMetadataId3Period() {
        if (timedMetadataId3Period == null) return null;
        return timedMetadataId3Period.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.timedMetadataId3Period");
    }

    private UndeferrableValue<Integer> timestampDeltaMilliseconds;

    public Integer timestampDeltaMilliseconds() {
        if (timestampDeltaMilliseconds == null) return null;
        return timestampDeltaMilliseconds.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.timestampDeltaMilliseconds");
    }

    private UndeferrableValue<String> tsFileMode;

    public String tsFileMode() {
        if (tsFileMode == null) return null;
        return tsFileMode.getValue("ChannelEncoderSettingsOutputGroupOutputGroupSettingsHlsGroupSettingsArgs.tsFileMode");
    }

}
