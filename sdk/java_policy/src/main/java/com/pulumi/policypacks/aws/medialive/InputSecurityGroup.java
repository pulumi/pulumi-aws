// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.medialive;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.medialive.outputs.InputSecurityGroupWhitelistRule;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:medialive/inputSecurityGroup:InputSecurityGroup")
public final class InputSecurityGroup extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the InputSecurityGroup.
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("InputSecurityGroup.arn");
    }

    /**
     * The list of inputs currently using this InputSecurityGroup.
     * 
     */
    private UndeferrableValue<List<String>> inputs;

    public List<String> inputs() {
        if (inputs == null) return null;
        return inputs.getValue("InputSecurityGroup.inputs");
    }

    /**
     * A map of tags to assign to the InputSecurityGroup. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("InputSecurityGroup.tags");
    }

    /**
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("InputSecurityGroup.tagsAll");
    }

    /**
     * Whitelist rules. See Whitelist Rules for more details.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<List<InputSecurityGroupWhitelistRule>> whitelistRules;

    public List<InputSecurityGroupWhitelistRule> whitelistRules() {
        if (whitelistRules == null) return null;
        return whitelistRules.getValue("InputSecurityGroup.whitelistRules");
    }

}
