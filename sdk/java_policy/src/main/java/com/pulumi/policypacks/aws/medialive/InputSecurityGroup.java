// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.medialive;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.medialive.outputs.InputSecurityGroupWhitelistRule;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:medialive/inputSecurityGroup:InputSecurityGroup")
public final class InputSecurityGroup extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the InputSecurityGroup.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'InputSecurityGroup.arn' is not present");
    }

    /**
     * The list of inputs currently using this InputSecurityGroup.
     * 
     */
    @PolicyResourceProperty(name="inputs", flag="unknown_inputs")
    private List<String> value_inputs;
    private boolean unknown_inputs;
    public List<String> inputs() {
        if (!unknown_inputs) return value_inputs;
        throw new UndeferrableValueException("Value 'InputSecurityGroup.inputs' is not present");
    }

    /**
     * A map of tags to assign to the InputSecurityGroup. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'InputSecurityGroup.tags' is not present");
    }

    /**
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'InputSecurityGroup.tagsAll' is not present");
    }

    /**
     * Whitelist rules. See Whitelist Rules for more details.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="whitelistRules", flag="unknown_whitelistRules")
    private List<InputSecurityGroupWhitelistRule> value_whitelistRules;
    private boolean unknown_whitelistRules;
    public List<InputSecurityGroupWhitelistRule> whitelistRules() {
        if (!unknown_whitelistRules) return value_whitelistRules;
        throw new UndeferrableValueException("Value 'InputSecurityGroup.whitelistRules' is not present");
    }

}
