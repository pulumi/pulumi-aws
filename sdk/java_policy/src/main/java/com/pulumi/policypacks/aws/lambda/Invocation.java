// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lambda;

import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;


@PolicyResourceType(type="aws:lambda/invocation:Invocation")
public final class Invocation extends com.pulumi.resources.PolicyResource {

    /**
     * Name of the lambda function.
     * 
     */
    public String functionName;



    /**
     * JSON payload to the lambda function.
     * 
     * The following arguments are optional:
     * 
     */
    public String input;



    /**
     * Lifecycle scope of the resource to manage. Valid values are `CREATE_ONLY` and `CRUD`. Defaults to `CREATE_ONLY`. `CREATE_ONLY` will invoke the function only on creation or replacement. `CRUD` will invoke the function on each lifecycle event, and augment the input JSON payload with additional lifecycle information.
     * 
     */
    public String lifecycleScope;



    /**
     * Qualifier (i.e., version) of the lambda function. Defaults to `$LATEST`.
     * 
     */
    public String qualifier;



    /**
     * String result of the lambda function invocation.
     * 
     */
    public String result;



    public String terraformKey;



    /**
     * Map of arbitrary keys and values that, when changed, will trigger a re-invocation.
     * 
     */
    public Map<String,String> triggers;



}
