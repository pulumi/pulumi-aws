// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cloudcontrol;

import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;


@PolicyResourceType(type="aws:cloudcontrol/resource:Resource")
public final class Resource extends com.pulumi.resources.PolicyResource {

    /**
     * JSON string matching the CloudFormation resource type schema with desired configuration.
     * 
     */
    public String desiredState;



    /**
     * JSON string matching the CloudFormation resource type schema with current configuration. Underlying attributes can be referenced via the `jsondecode()` function, for example, `jsondecode(data.aws_cloudcontrolapi_resource.example.properties)[&#34;example&#34;]`.
     * 
     */
    public String properties;



    /**
     * Amazon Resource Name (ARN) of the IAM Role to assume for operations.
     * 
     */
    public String roleArn;



    /**
     * JSON string of the CloudFormation resource type schema which is used for plan time validation where possible. Automatically fetched if not provided. In large scale environments with multiple resources using the same `type_name`, it is recommended to fetch the schema once via the `aws.cloudformation.CloudFormationType` data source and use this argument to reduce `DescribeType` API operation throttling. This value is marked sensitive only to prevent large plan differences from showing.
     * 
     */
    public String schema;



    /**
     * CloudFormation resource type name. For example, `AWS::EC2::VPC`.
     * 
     * The following arguments are optional:
     * 
     */
    public String typeName;



    /**
     * Identifier of the CloudFormation resource type version.
     * 
     */
    public String typeVersionId;



}
