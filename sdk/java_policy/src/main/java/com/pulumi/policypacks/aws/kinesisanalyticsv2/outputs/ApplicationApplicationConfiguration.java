// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.kinesisanalyticsv2.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.kinesisanalyticsv2.outputs.ApplicationApplicationConfigurationApplicationCodeConfiguration;
import com.pulumi.policypacks.aws.kinesisanalyticsv2.outputs.ApplicationApplicationConfigurationApplicationSnapshotConfiguration;
import com.pulumi.policypacks.aws.kinesisanalyticsv2.outputs.ApplicationApplicationConfigurationEnvironmentProperties;
import com.pulumi.policypacks.aws.kinesisanalyticsv2.outputs.ApplicationApplicationConfigurationFlinkApplicationConfiguration;
import com.pulumi.policypacks.aws.kinesisanalyticsv2.outputs.ApplicationApplicationConfigurationRunConfiguration;
import com.pulumi.policypacks.aws.kinesisanalyticsv2.outputs.ApplicationApplicationConfigurationSqlApplicationConfiguration;
import com.pulumi.policypacks.aws.kinesisanalyticsv2.outputs.ApplicationApplicationConfigurationVpcConfiguration;
import javax.annotation.Nullable;


public final class ApplicationApplicationConfiguration {

    /**
     * The code location and type parameters for the application.
     * 
     */
    private UndeferrableValue<ApplicationApplicationConfigurationApplicationCodeConfiguration> applicationCodeConfiguration;

    public ApplicationApplicationConfigurationApplicationCodeConfiguration applicationCodeConfiguration() {
        if (applicationCodeConfiguration == null) return null;
        return applicationCodeConfiguration.getValue("ApplicationApplicationConfiguration.applicationCodeConfiguration");
    }

    /**
     * Describes whether snapshots are enabled for a Flink-based application.
     * 
     */
    private @Nullable UndeferrableValue<ApplicationApplicationConfigurationApplicationSnapshotConfiguration> applicationSnapshotConfiguration;

    public @Nullable ApplicationApplicationConfigurationApplicationSnapshotConfiguration applicationSnapshotConfiguration() {
        if (applicationSnapshotConfiguration == null) return null;
        return applicationSnapshotConfiguration.getValue("ApplicationApplicationConfiguration.applicationSnapshotConfiguration");
    }

    /**
     * Describes execution properties for a Flink-based application.
     * 
     */
    private @Nullable UndeferrableValue<ApplicationApplicationConfigurationEnvironmentProperties> environmentProperties;

    public @Nullable ApplicationApplicationConfigurationEnvironmentProperties environmentProperties() {
        if (environmentProperties == null) return null;
        return environmentProperties.getValue("ApplicationApplicationConfiguration.environmentProperties");
    }

    /**
     * The configuration of a Flink-based application.
     * 
     */
    private @Nullable UndeferrableValue<ApplicationApplicationConfigurationFlinkApplicationConfiguration> flinkApplicationConfiguration;

    public @Nullable ApplicationApplicationConfigurationFlinkApplicationConfiguration flinkApplicationConfiguration() {
        if (flinkApplicationConfiguration == null) return null;
        return flinkApplicationConfiguration.getValue("ApplicationApplicationConfiguration.flinkApplicationConfiguration");
    }

    /**
     * Describes the starting properties for a Flink-based application.
     * 
     */
    private @Nullable UndeferrableValue<ApplicationApplicationConfigurationRunConfiguration> runConfiguration;

    public @Nullable ApplicationApplicationConfigurationRunConfiguration runConfiguration() {
        if (runConfiguration == null) return null;
        return runConfiguration.getValue("ApplicationApplicationConfiguration.runConfiguration");
    }

    /**
     * The configuration of a SQL-based application.
     * 
     */
    private @Nullable UndeferrableValue<ApplicationApplicationConfigurationSqlApplicationConfiguration> sqlApplicationConfiguration;

    public @Nullable ApplicationApplicationConfigurationSqlApplicationConfiguration sqlApplicationConfiguration() {
        if (sqlApplicationConfiguration == null) return null;
        return sqlApplicationConfiguration.getValue("ApplicationApplicationConfiguration.sqlApplicationConfiguration");
    }

    /**
     * The VPC configuration of a Flink-based application.
     * 
     */
    private @Nullable UndeferrableValue<ApplicationApplicationConfigurationVpcConfiguration> vpcConfiguration;

    public @Nullable ApplicationApplicationConfigurationVpcConfiguration vpcConfiguration() {
        if (vpcConfiguration == null) return null;
        return vpcConfiguration.getValue("ApplicationApplicationConfiguration.vpcConfiguration");
    }

}
