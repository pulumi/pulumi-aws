// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appsync.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.appsync.outputs.GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig;
import com.pulumi.policypacks.aws.appsync.outputs.GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig;
import com.pulumi.policypacks.aws.appsync.outputs.GraphQLApiAdditionalAuthenticationProviderUserPoolConfig;
import java.lang.String;
import javax.annotation.Nullable;


public final class GraphQLApiAdditionalAuthenticationProvider {

    /**
     * Authentication type. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`, `AWS_LAMBDA`
     * 
     */
    @PolicyResourceProperty(name="authenticationType", flag="unknown_authenticationType")
    private String value_authenticationType;
    private boolean unknown_authenticationType;
    public String authenticationType() {
        if (!unknown_authenticationType) return value_authenticationType;
        throw new UndeferrableValueException("Value 'GraphQLApiAdditionalAuthenticationProvider.authenticationType' is not present");
    }

    /**
     * Nested argument containing Lambda authorizer configuration. See `lambda_authorizer_config` Block for details.
     * 
     */
    @PolicyResourceProperty(name="lambdaAuthorizerConfig", flag="unknown_lambdaAuthorizerConfig")
    private @Nullable GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig value_lambdaAuthorizerConfig;
    private boolean unknown_lambdaAuthorizerConfig;
    public @Nullable GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig lambdaAuthorizerConfig() {
        if (!unknown_lambdaAuthorizerConfig) return value_lambdaAuthorizerConfig;
        throw new UndeferrableValueException("Value 'GraphQLApiAdditionalAuthenticationProvider.lambdaAuthorizerConfig' is not present");
    }

    /**
     * Nested argument containing OpenID Connect configuration. See `openid_connect_config` Block for details.
     * 
     */
    @PolicyResourceProperty(name="openidConnectConfig", flag="unknown_openidConnectConfig")
    private @Nullable GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig value_openidConnectConfig;
    private boolean unknown_openidConnectConfig;
    public @Nullable GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig openidConnectConfig() {
        if (!unknown_openidConnectConfig) return value_openidConnectConfig;
        throw new UndeferrableValueException("Value 'GraphQLApiAdditionalAuthenticationProvider.openidConnectConfig' is not present");
    }

    /**
     * Amazon Cognito User Pool configuration. See `user_pool_config` Block for details.
     * 
     */
    @PolicyResourceProperty(name="userPoolConfig", flag="unknown_userPoolConfig")
    private @Nullable GraphQLApiAdditionalAuthenticationProviderUserPoolConfig value_userPoolConfig;
    private boolean unknown_userPoolConfig;
    public @Nullable GraphQLApiAdditionalAuthenticationProviderUserPoolConfig userPoolConfig() {
        if (!unknown_userPoolConfig) return value_userPoolConfig;
        throw new UndeferrableValueException("Value 'GraphQLApiAdditionalAuthenticationProvider.userPoolConfig' is not present");
    }

}
