// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ssm;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ssm.outputs.ContactsRotationRecurrence;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ssm/contactsRotation:ContactsRotation")
public final class ContactsRotation extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The Amazon Resource Name (ARN) of the rotation.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'ContactsRotation.arn' is not present");
    }

    /**
     * Amazon Resource Names (ARNs) of the contacts to add to the rotation. The order in which you list the contacts is their shift order in the rotation schedule.
     * 
     */
    @PolicyResourceProperty(name="contactIds", flag="unknown_contactIds")
    private List<String> value_contactIds;
    private boolean unknown_contactIds;
    public List<String> contactIds() {
        if (!unknown_contactIds) return value_contactIds;
        throw new UndeferrableValueException("Value 'ContactsRotation.contactIds' is not present");
    }

    /**
     * The name for the rotation.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'ContactsRotation.name' is not present");
    }

    /**
     * Information about when an on-call rotation is in effect and how long the rotation period lasts. Exactly one of either `daily_settings`, `monthly_settings`, or `weekly_settings` must be populated. See Recurrence for more details.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="recurrence", flag="unknown_recurrence")
    private @Nullable ContactsRotationRecurrence value_recurrence;
    private boolean unknown_recurrence;
    public @Nullable ContactsRotationRecurrence recurrence() {
        if (!unknown_recurrence) return value_recurrence;
        throw new UndeferrableValueException("Value 'ContactsRotation.recurrence' is not present");
    }

    /**
     * The date and time, in RFC 3339 format, that the rotation goes into effect.
     * 
     */
    @PolicyResourceProperty(name="startTime", flag="unknown_startTime")
    private @Nullable String value_startTime;
    private boolean unknown_startTime;
    public @Nullable String startTime() {
        if (!unknown_startTime) return value_startTime;
        throw new UndeferrableValueException("Value 'ContactsRotation.startTime' is not present");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'ContactsRotation.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'ContactsRotation.tagsAll' is not present");
    }

    /**
     * The time zone to base the rotationâ€™s activity on in Internet Assigned Numbers Authority (IANA) format.
     * 
     */
    @PolicyResourceProperty(name="timeZoneId", flag="unknown_timeZoneId")
    private String value_timeZoneId;
    private boolean unknown_timeZoneId;
    public String timeZoneId() {
        if (!unknown_timeZoneId) return value_timeZoneId;
        throw new UndeferrableValueException("Value 'ContactsRotation.timeZoneId' is not present");
    }

}
