// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.costexplorer.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.costexplorer.inputs.CostCategorySplitChargeRuleParameterArgs;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class CostCategorySplitChargeRuleArgs {

    /**
     * Method that&#39;s used to define how to split your source costs across your targets. Valid values are `FIXED`, `PROPORTIONAL`, `EVEN`
     * 
     */
    private UndeferrableValue<String> method;

    public String method() {
        if (method == null) return null;
        return method.getValue("CostCategorySplitChargeRuleArgs.method");
    }

    /**
     * Configuration block for the parameters for a split charge method. This is only required for the `FIXED` method. See below.
     * 
     */
    private UndeferrableValue<List<CostCategorySplitChargeRuleParameterArgs>> parameters;

    public List<CostCategorySplitChargeRuleParameterArgs> parameters() {
        if (parameters == null) return null;
        return parameters.getValue("CostCategorySplitChargeRuleArgs.parameters");
    }

    /**
     * Cost Category value that you want to split.
     * 
     */
    private UndeferrableValue<String> source;

    public String source() {
        if (source == null) return null;
        return source.getValue("CostCategorySplitChargeRuleArgs.source");
    }

    /**
     * Cost Category values that you want to split costs across. These values can&#39;t be used as a source in other split charge rules.
     * 
     */
    private UndeferrableValue<List<String>> targets;

    public List<String> targets() {
        if (targets == null) return null;
        return targets.getValue("CostCategorySplitChargeRuleArgs.targets");
    }

}
