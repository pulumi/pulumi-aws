// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.kinesis.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.kinesis.inputs.FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationArgs {

    /**
     * The ARN of the S3 bucket
     * 
     */
    private UndeferrableValue<String> bucketArn;

    public String bucketArn() {
        if (bucketArn == null) return null;
        return bucketArn.getValue("FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationArgs.bucketArn");
    }

    /**
     * Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
     * 
     */
    private UndeferrableValue<Integer> bufferingInterval;

    public Integer bufferingInterval() {
        if (bufferingInterval == null) return null;
        return bufferingInterval.getValue("FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationArgs.bufferingInterval");
    }

    /**
     * Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
     * We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
     * 
     */
    private UndeferrableValue<Integer> bufferingSize;

    public Integer bufferingSize() {
        if (bufferingSize == null) return null;
        return bufferingSize.getValue("FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationArgs.bufferingSize");
    }

    /**
     * The CloudWatch Logging Options for the delivery stream. See `cloudwatch_logging_options` block below for details.
     * 
     */
    private UndeferrableValue<FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs> cloudwatchLoggingOptions;

    public FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs cloudwatchLoggingOptions() {
        if (cloudwatchLoggingOptions == null) return null;
        return cloudwatchLoggingOptions.getValue("FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationArgs.cloudwatchLoggingOptions");
    }

    /**
     * The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, &amp; `HADOOP_SNAPPY`.
     * 
     */
    private UndeferrableValue<String> compressionFormat;

    public String compressionFormat() {
        if (compressionFormat == null) return null;
        return compressionFormat.getValue("FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationArgs.compressionFormat");
    }

    /**
     * Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
     * 
     */
    private UndeferrableValue<String> errorOutputPrefix;

    public String errorOutputPrefix() {
        if (errorOutputPrefix == null) return null;
        return errorOutputPrefix.getValue("FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationArgs.errorOutputPrefix");
    }

    /**
     * Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
     * be used.
     * 
     */
    private UndeferrableValue<String> kmsKeyArn;

    public String kmsKeyArn() {
        if (kmsKeyArn == null) return null;
        return kmsKeyArn.getValue("FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationArgs.kmsKeyArn");
    }

    /**
     * The &#34;YYYY/MM/DD/HH&#34; time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
     * 
     */
    private UndeferrableValue<String> prefix;

    public String prefix() {
        if (prefix == null) return null;
        return prefix.getValue("FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationArgs.prefix");
    }

    /**
     * The ARN of the AWS credentials.
     * 
     */
    private UndeferrableValue<String> roleArn;

    public String roleArn() {
        if (roleArn == null) return null;
        return roleArn.getValue("FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationArgs.roleArn");
    }

}
