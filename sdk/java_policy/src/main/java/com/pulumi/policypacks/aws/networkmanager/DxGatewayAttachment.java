// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.networkmanager;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.networkmanager.outputs.DxGatewayAttachmentTimeouts;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:networkmanager/dxGatewayAttachment:DxGatewayAttachment")
public final class DxGatewayAttachment extends com.pulumi.resources.PolicyResourceOutput {

    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'DxGatewayAttachment.arn' is not present");
    }

    /**
     * Policy rule number associated with the attachment.
     * 
     */
    @PolicyResourceProperty(name="attachmentPolicyRuleNumber", flag="unknown_attachmentPolicyRuleNumber")
    private Integer value_attachmentPolicyRuleNumber;
    private boolean unknown_attachmentPolicyRuleNumber;
    public Integer attachmentPolicyRuleNumber() {
        if (!unknown_attachmentPolicyRuleNumber) return value_attachmentPolicyRuleNumber;
        throw new UndeferrableValueException("Value 'DxGatewayAttachment.attachmentPolicyRuleNumber' is not present");
    }

    /**
     * Type of attachment.
     * 
     */
    @PolicyResourceProperty(name="attachmentType", flag="unknown_attachmentType")
    private String value_attachmentType;
    private boolean unknown_attachmentType;
    public String attachmentType() {
        if (!unknown_attachmentType) return value_attachmentType;
        throw new UndeferrableValueException("Value 'DxGatewayAttachment.attachmentType' is not present");
    }

    /**
     * ARN of the core network for the attachment.
     * 
     */
    @PolicyResourceProperty(name="coreNetworkArn", flag="unknown_coreNetworkArn")
    private String value_coreNetworkArn;
    private boolean unknown_coreNetworkArn;
    public String coreNetworkArn() {
        if (!unknown_coreNetworkArn) return value_coreNetworkArn;
        throw new UndeferrableValueException("Value 'DxGatewayAttachment.coreNetworkArn' is not present");
    }

    /**
     * ID of the Cloud WAN core network to which the Direct Connect gateway attachment should be attached.
     * 
     */
    @PolicyResourceProperty(name="coreNetworkId", flag="unknown_coreNetworkId")
    private String value_coreNetworkId;
    private boolean unknown_coreNetworkId;
    public String coreNetworkId() {
        if (!unknown_coreNetworkId) return value_coreNetworkId;
        throw new UndeferrableValueException("Value 'DxGatewayAttachment.coreNetworkId' is not present");
    }

    /**
     * ARN of the Direct Connect gateway attachment.
     * 
     */
    @PolicyResourceProperty(name="directConnectGatewayArn", flag="unknown_directConnectGatewayArn")
    private String value_directConnectGatewayArn;
    private boolean unknown_directConnectGatewayArn;
    public String directConnectGatewayArn() {
        if (!unknown_directConnectGatewayArn) return value_directConnectGatewayArn;
        throw new UndeferrableValueException("Value 'DxGatewayAttachment.directConnectGatewayArn' is not present");
    }

    /**
     * One or more core network edge locations to associate with the Direct Connect gateway attachment.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="edgeLocations", flag="unknown_edgeLocations")
    private List<String> value_edgeLocations;
    private boolean unknown_edgeLocations;
    public List<String> edgeLocations() {
        if (!unknown_edgeLocations) return value_edgeLocations;
        throw new UndeferrableValueException("Value 'DxGatewayAttachment.edgeLocations' is not present");
    }

    /**
     * ID of the attachment account owner.
     * 
     */
    @PolicyResourceProperty(name="ownerAccountId", flag="unknown_ownerAccountId")
    private String value_ownerAccountId;
    private boolean unknown_ownerAccountId;
    public String ownerAccountId() {
        if (!unknown_ownerAccountId) return value_ownerAccountId;
        throw new UndeferrableValueException("Value 'DxGatewayAttachment.ownerAccountId' is not present");
    }

    /**
     * Name of the segment attachment.
     * 
     */
    @PolicyResourceProperty(name="segmentName", flag="unknown_segmentName")
    private String value_segmentName;
    private boolean unknown_segmentName;
    public String segmentName() {
        if (!unknown_segmentName) return value_segmentName;
        throw new UndeferrableValueException("Value 'DxGatewayAttachment.segmentName' is not present");
    }

    /**
     * State of the attachment.
     * 
     */
    @PolicyResourceProperty(name="state", flag="unknown_state")
    private String value_state;
    private boolean unknown_state;
    public String state() {
        if (!unknown_state) return value_state;
        throw new UndeferrableValueException("Value 'DxGatewayAttachment.state' is not present");
    }

    /**
     * Key-value tags for the attachment. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'DxGatewayAttachment.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'DxGatewayAttachment.tagsAll' is not present");
    }

    @PolicyResourceProperty(name="timeouts", flag="unknown_timeouts")
    private @Nullable DxGatewayAttachmentTimeouts value_timeouts;
    private boolean unknown_timeouts;
    public @Nullable DxGatewayAttachmentTimeouts timeouts() {
        if (!unknown_timeouts) return value_timeouts;
        throw new UndeferrableValueException("Value 'DxGatewayAttachment.timeouts' is not present");
    }

}
