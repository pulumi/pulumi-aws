// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.codepipeline.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.codepipeline.outputs.PipelineStageBeforeEntryConditionRuleRuleTypeId;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


public final class PipelineStageBeforeEntryConditionRule {

    /**
     * The shell commands to run with your commands rule in CodePipeline. All commands are supported except multi-line formats.
     * 
     */
    @PolicyResourceProperty(name="commands", flag="unknown_commands")
    private @Nullable List<String> value_commands;
    private boolean unknown_commands;
    public @Nullable List<String> commands() {
        if (!unknown_commands) return value_commands;
        throw new UndeferrableValueException("Value 'PipelineStageBeforeEntryConditionRule.commands' is not present");
    }

    /**
     * The action configuration fields for the rule. Configurations options for rule types and providers can be found in the [Rule structure reference](https://docs.aws.amazon.com/codepipeline/latest/userguide/rule-reference.html).
     * 
     */
    @PolicyResourceProperty(name="configuration", flag="unknown_configuration")
    private @Nullable Map<String,String> value_configuration;
    private boolean unknown_configuration;
    public @Nullable Map<String,String> configuration() {
        if (!unknown_configuration) return value_configuration;
        throw new UndeferrableValueException("Value 'PipelineStageBeforeEntryConditionRule.configuration' is not present");
    }

    /**
     * The list of the input artifacts fields for the rule, such as specifying an input file for the rule.
     * 
     */
    @PolicyResourceProperty(name="inputArtifacts", flag="unknown_inputArtifacts")
    private @Nullable List<String> value_inputArtifacts;
    private boolean unknown_inputArtifacts;
    public @Nullable List<String> inputArtifacts() {
        if (!unknown_inputArtifacts) return value_inputArtifacts;
        throw new UndeferrableValueException("Value 'PipelineStageBeforeEntryConditionRule.inputArtifacts' is not present");
    }

    /**
     * The name of the rule that is created for the condition, such as `VariableCheck`.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'PipelineStageBeforeEntryConditionRule.name' is not present");
    }

    /**
     * The Region for the condition associated with the rule.
     * 
     */
    @PolicyResourceProperty(name="region", flag="unknown_region")
    private @Nullable String value_region;
    private boolean unknown_region;
    public @Nullable String region() {
        if (!unknown_region) return value_region;
        throw new UndeferrableValueException("Value 'PipelineStageBeforeEntryConditionRule.region' is not present");
    }

    /**
     * The pipeline role ARN associated with the rule.
     * 
     */
    @PolicyResourceProperty(name="roleArn", flag="unknown_roleArn")
    private @Nullable String value_roleArn;
    private boolean unknown_roleArn;
    public @Nullable String roleArn() {
        if (!unknown_roleArn) return value_roleArn;
        throw new UndeferrableValueException("Value 'PipelineStageBeforeEntryConditionRule.roleArn' is not present");
    }

    /**
     * The ID for the rule type, which is made up of the combined values for `category`, `owner`, `provider`, and `version`. Defined as an `rule_type_id` block below.
     * 
     */
    @PolicyResourceProperty(name="ruleTypeId", flag="unknown_ruleTypeId")
    private PipelineStageBeforeEntryConditionRuleRuleTypeId value_ruleTypeId;
    private boolean unknown_ruleTypeId;
    public PipelineStageBeforeEntryConditionRuleRuleTypeId ruleTypeId() {
        if (!unknown_ruleTypeId) return value_ruleTypeId;
        throw new UndeferrableValueException("Value 'PipelineStageBeforeEntryConditionRule.ruleTypeId' is not present");
    }

    /**
     * The action timeout for the rule.
     * 
     */
    @PolicyResourceProperty(name="timeoutInMinutes", flag="unknown_timeoutInMinutes")
    private @Nullable Integer value_timeoutInMinutes;
    private boolean unknown_timeoutInMinutes;
    public @Nullable Integer timeoutInMinutes() {
        if (!unknown_timeoutInMinutes) return value_timeoutInMinutes;
        throw new UndeferrableValueException("Value 'PipelineStageBeforeEntryConditionRule.timeoutInMinutes' is not present");
    }

}
