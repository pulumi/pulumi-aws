// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class DefaultNetworkAclEgress {

    /**
     * The action to take.
     * 
     */
    @PolicyResourceProperty(name="action", flag="unknown_action")
    private String value_action;
    private boolean unknown_action;
    public String action() {
        if (!unknown_action) return value_action;
        throw new UndeferrableValueException("Value 'DefaultNetworkAclEgress.action' is not present");
    }

    /**
     * The CIDR block to match. This must be a valid network mask.
     * 
     */
    @PolicyResourceProperty(name="cidrBlock", flag="unknown_cidrBlock")
    private @Nullable String value_cidrBlock;
    private boolean unknown_cidrBlock;
    public @Nullable String cidrBlock() {
        if (!unknown_cidrBlock) return value_cidrBlock;
        throw new UndeferrableValueException("Value 'DefaultNetworkAclEgress.cidrBlock' is not present");
    }

    /**
     * The from port to match.
     * 
     */
    @PolicyResourceProperty(name="fromPort", flag="unknown_fromPort")
    private Integer value_fromPort;
    private boolean unknown_fromPort;
    public Integer fromPort() {
        if (!unknown_fromPort) return value_fromPort;
        throw new UndeferrableValueException("Value 'DefaultNetworkAclEgress.fromPort' is not present");
    }

    /**
     * The ICMP type code to be used. Default 0.
     * 
     */
    @PolicyResourceProperty(name="icmpCode", flag="unknown_icmpCode")
    private @Nullable Integer value_icmpCode;
    private boolean unknown_icmpCode;
    public @Nullable Integer icmpCode() {
        if (!unknown_icmpCode) return value_icmpCode;
        throw new UndeferrableValueException("Value 'DefaultNetworkAclEgress.icmpCode' is not present");
    }

    /**
     * The ICMP type to be used. Default 0.
     * 
     */
    @PolicyResourceProperty(name="icmpType", flag="unknown_icmpType")
    private @Nullable Integer value_icmpType;
    private boolean unknown_icmpType;
    public @Nullable Integer icmpType() {
        if (!unknown_icmpType) return value_icmpType;
        throw new UndeferrableValueException("Value 'DefaultNetworkAclEgress.icmpType' is not present");
    }

    /**
     * The IPv6 CIDR block.
     * 
     * &gt; For more information on ICMP types and codes, see [Internet Control Message Protocol (ICMP) Parameters](https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml).
     * 
     */
    @PolicyResourceProperty(name="ipv6CidrBlock", flag="unknown_ipv6CidrBlock")
    private @Nullable String value_ipv6CidrBlock;
    private boolean unknown_ipv6CidrBlock;
    public @Nullable String ipv6CidrBlock() {
        if (!unknown_ipv6CidrBlock) return value_ipv6CidrBlock;
        throw new UndeferrableValueException("Value 'DefaultNetworkAclEgress.ipv6CidrBlock' is not present");
    }

    /**
     * The protocol to match. If using the -1 &#39;all&#39; protocol, you must specify a from and to port of 0.
     * 
     */
    @PolicyResourceProperty(name="protocol", flag="unknown_protocol")
    private String value_protocol;
    private boolean unknown_protocol;
    public String protocol() {
        if (!unknown_protocol) return value_protocol;
        throw new UndeferrableValueException("Value 'DefaultNetworkAclEgress.protocol' is not present");
    }

    /**
     * The rule number. Used for ordering.
     * 
     */
    @PolicyResourceProperty(name="ruleNo", flag="unknown_ruleNo")
    private Integer value_ruleNo;
    private boolean unknown_ruleNo;
    public Integer ruleNo() {
        if (!unknown_ruleNo) return value_ruleNo;
        throw new UndeferrableValueException("Value 'DefaultNetworkAclEgress.ruleNo' is not present");
    }

    /**
     * The to port to match.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="toPort", flag="unknown_toPort")
    private Integer value_toPort;
    private boolean unknown_toPort;
    public Integer toPort() {
        if (!unknown_toPort) return value_toPort;
        throw new UndeferrableValueException("Value 'DefaultNetworkAclEgress.toPort' is not present");
    }

}
