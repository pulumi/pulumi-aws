// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class DefaultNetworkAclEgress {

    /**
     * The action to take.
     * 
     */
    private UndeferrableValue<String> action;

    public String action() {
        if (action == null) return null;
        return action.getValue("DefaultNetworkAclEgress.action");
    }

    /**
     * The CIDR block to match. This must be a valid network mask.
     * 
     */
    private @Nullable UndeferrableValue<String> cidrBlock;

    public @Nullable String cidrBlock() {
        if (cidrBlock == null) return null;
        return cidrBlock.getValue("DefaultNetworkAclEgress.cidrBlock");
    }

    /**
     * The from port to match.
     * 
     */
    private UndeferrableValue<Integer> fromPort;

    public Integer fromPort() {
        if (fromPort == null) return null;
        return fromPort.getValue("DefaultNetworkAclEgress.fromPort");
    }

    /**
     * The ICMP type code to be used. Default 0.
     * 
     */
    private @Nullable UndeferrableValue<Integer> icmpCode;

    public @Nullable Integer icmpCode() {
        if (icmpCode == null) return null;
        return icmpCode.getValue("DefaultNetworkAclEgress.icmpCode");
    }

    /**
     * The ICMP type to be used. Default 0.
     * 
     */
    private @Nullable UndeferrableValue<Integer> icmpType;

    public @Nullable Integer icmpType() {
        if (icmpType == null) return null;
        return icmpType.getValue("DefaultNetworkAclEgress.icmpType");
    }

    /**
     * The IPv6 CIDR block.
     * 
     * &gt; For more information on ICMP types and codes, see [Internet Control Message Protocol (ICMP) Parameters](https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml).
     * 
     */
    private @Nullable UndeferrableValue<String> ipv6CidrBlock;

    public @Nullable String ipv6CidrBlock() {
        if (ipv6CidrBlock == null) return null;
        return ipv6CidrBlock.getValue("DefaultNetworkAclEgress.ipv6CidrBlock");
    }

    /**
     * The protocol to match. If using the -1 &#39;all&#39; protocol, you must specify a from and to port of 0.
     * 
     */
    private UndeferrableValue<String> protocol;

    public String protocol() {
        if (protocol == null) return null;
        return protocol.getValue("DefaultNetworkAclEgress.protocol");
    }

    /**
     * The rule number. Used for ordering.
     * 
     */
    private UndeferrableValue<Integer> ruleNo;

    public Integer ruleNo() {
        if (ruleNo == null) return null;
        return ruleNo.getValue("DefaultNetworkAclEgress.ruleNo");
    }

    /**
     * The to port to match.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<Integer> toPort;

    public Integer toPort() {
        if (toPort == null) return null;
        return toPort.getValue("DefaultNetworkAclEgress.toPort");
    }

}
