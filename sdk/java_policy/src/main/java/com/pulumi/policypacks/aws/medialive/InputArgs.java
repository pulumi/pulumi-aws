// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.medialive;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.medialive.inputs.InputDestinationArgs;
import com.pulumi.policypacks.aws.medialive.inputs.InputInputDeviceArgs;
import com.pulumi.policypacks.aws.medialive.inputs.InputMediaConnectFlowArgs;
import com.pulumi.policypacks.aws.medialive.inputs.InputSourceArgs;
import com.pulumi.policypacks.aws.medialive.inputs.InputVpcArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:medialive/input:Input")
public final class InputArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Destination settings for PUSH type inputs. See Destinations for more details.
     * 
     */
    private UndeferrableValue<List<InputDestinationArgs>> destinations;

    public List<InputDestinationArgs> destinations() {
        if (destinations == null) return null;
        return destinations.getValue("InputArgs.destinations");
    }

    /**
     * Settings for the devices. See Input Devices for more details.
     * 
     */
    private UndeferrableValue<List<InputInputDeviceArgs>> inputDevices;

    public List<InputInputDeviceArgs> inputDevices() {
        if (inputDevices == null) return null;
        return inputDevices.getValue("InputArgs.inputDevices");
    }

    /**
     * List of input security groups.
     * 
     */
    private UndeferrableValue<List<String>> inputSecurityGroups;

    public List<String> inputSecurityGroups() {
        if (inputSecurityGroups == null) return null;
        return inputSecurityGroups.getValue("InputArgs.inputSecurityGroups");
    }

    /**
     * A list of the MediaConnect Flows. See Media Connect Flows for more details.
     * 
     */
    private UndeferrableValue<List<InputMediaConnectFlowArgs>> mediaConnectFlows;

    public List<InputMediaConnectFlowArgs> mediaConnectFlows() {
        if (mediaConnectFlows == null) return null;
        return mediaConnectFlows.getValue("InputArgs.mediaConnectFlows");
    }

    /**
     * Name of the input.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("InputArgs.name");
    }

    /**
     * The ARN of the role this input assumes during and after creation.
     * 
     */
    private UndeferrableValue<String> roleArn;

    public String roleArn() {
        if (roleArn == null) return null;
        return roleArn.getValue("InputArgs.roleArn");
    }

    /**
     * The source URLs for a PULL-type input. See Sources for more details.
     * 
     */
    private UndeferrableValue<List<InputSourceArgs>> sources;

    public List<InputSourceArgs> sources() {
        if (sources == null) return null;
        return sources.getValue("InputArgs.sources");
    }

    /**
     * A map of tags to assign to the Input. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("InputArgs.tags");
    }

    /**
     * The different types of inputs that AWS Elemental MediaLive supports.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> type;

    public String type() {
        if (type == null) return null;
        return type.getValue("InputArgs.type");
    }

    /**
     * Settings for a private VPC Input. See VPC for more details.
     * 
     */
    private UndeferrableValue<InputVpcArgs> vpc;

    public InputVpcArgs vpc() {
        if (vpc == null) return null;
        return vpc.getValue("InputArgs.vpc");
    }

}
