// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.opsworks.inputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class MemcachedLayerCloudwatchConfigurationLogStreamArgs {

    private UndeferrableValue<Integer> batchCount;

    public Integer batchCount() {
        if (batchCount == null) return null;
        return batchCount.getValue("MemcachedLayerCloudwatchConfigurationLogStreamArgs.batchCount");
    }

    private UndeferrableValue<Integer> batchSize;

    public Integer batchSize() {
        if (batchSize == null) return null;
        return batchSize.getValue("MemcachedLayerCloudwatchConfigurationLogStreamArgs.batchSize");
    }

    private UndeferrableValue<Integer> bufferDuration;

    public Integer bufferDuration() {
        if (bufferDuration == null) return null;
        return bufferDuration.getValue("MemcachedLayerCloudwatchConfigurationLogStreamArgs.bufferDuration");
    }

    private UndeferrableValue<String> datetimeFormat;

    public String datetimeFormat() {
        if (datetimeFormat == null) return null;
        return datetimeFormat.getValue("MemcachedLayerCloudwatchConfigurationLogStreamArgs.datetimeFormat");
    }

    private UndeferrableValue<String> encoding;

    public String encoding() {
        if (encoding == null) return null;
        return encoding.getValue("MemcachedLayerCloudwatchConfigurationLogStreamArgs.encoding");
    }

    private UndeferrableValue<String> file;

    public String file() {
        if (file == null) return null;
        return file.getValue("MemcachedLayerCloudwatchConfigurationLogStreamArgs.file");
    }

    private UndeferrableValue<String> fileFingerprintLines;

    public String fileFingerprintLines() {
        if (fileFingerprintLines == null) return null;
        return fileFingerprintLines.getValue("MemcachedLayerCloudwatchConfigurationLogStreamArgs.fileFingerprintLines");
    }

    private UndeferrableValue<String> initialPosition;

    public String initialPosition() {
        if (initialPosition == null) return null;
        return initialPosition.getValue("MemcachedLayerCloudwatchConfigurationLogStreamArgs.initialPosition");
    }

    private UndeferrableValue<String> logGroupName;

    public String logGroupName() {
        if (logGroupName == null) return null;
        return logGroupName.getValue("MemcachedLayerCloudwatchConfigurationLogStreamArgs.logGroupName");
    }

    private UndeferrableValue<String> multilineStartPattern;

    public String multilineStartPattern() {
        if (multilineStartPattern == null) return null;
        return multilineStartPattern.getValue("MemcachedLayerCloudwatchConfigurationLogStreamArgs.multilineStartPattern");
    }

    private UndeferrableValue<String> timeZone;

    public String timeZone() {
        if (timeZone == null) return null;
        return timeZone.getValue("MemcachedLayerCloudwatchConfigurationLogStreamArgs.timeZone");
    }

}
