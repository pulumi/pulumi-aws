// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cloudwatch;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.cloudwatch.inputs.EventConnectionAuthParametersArgs;
import com.pulumi.policypacks.aws.cloudwatch.inputs.EventConnectionInvocationConnectivityParametersArgs;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:cloudwatch/eventConnection:EventConnection")
public final class EventConnectionArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Parameters used for authorization. A maximum of 1 are allowed. Documented below.
     * 
     */
    private UndeferrableValue<EventConnectionAuthParametersArgs> authParameters;

    public EventConnectionAuthParametersArgs authParameters() {
        if (authParameters == null) return null;
        return authParameters.getValue("EventConnectionArgs.authParameters");
    }

    /**
     * Choose the type of authorization to use for the connection. One of `API_KEY`,`BASIC`,`OAUTH_CLIENT_CREDENTIALS`.
     * 
     */
    private UndeferrableValue<String> authorizationType;

    public String authorizationType() {
        if (authorizationType == null) return null;
        return authorizationType.getValue("EventConnectionArgs.authorizationType");
    }

    /**
     * Enter a description for the connection. Maximum of 512 characters.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("EventConnectionArgs.description");
    }

    /**
     * The parameters to use for invoking a private API. Documented below.
     * 
     */
    private UndeferrableValue<EventConnectionInvocationConnectivityParametersArgs> invocationConnectivityParameters;

    public EventConnectionInvocationConnectivityParametersArgs invocationConnectivityParameters() {
        if (invocationConnectivityParameters == null) return null;
        return invocationConnectivityParameters.getValue("EventConnectionArgs.invocationConnectivityParameters");
    }

    /**
     * The name of the new connection. Maximum of 64 characters consisting of numbers, lower/upper case letters, .,-,_.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("EventConnectionArgs.name");
    }

}
