// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.securityhub.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersAwsAccountIdArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersCompanyNameArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersComplianceStatusArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersConfidenceArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersCreatedAtArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersCriticalityArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersDescriptionArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersFindingProviderFieldsConfidenceArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersFindingProviderFieldsCriticalityArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersFindingProviderFieldsRelatedFindingsIdArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersFindingProviderFieldsRelatedFindingsProductArnArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersFindingProviderFieldsSeverityLabelArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersFindingProviderFieldsSeverityOriginalArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersFindingProviderFieldsTypeArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersFirstObservedAtArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersGeneratorIdArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersIdArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersKeywordArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersLastObservedAtArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersMalwareNameArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersMalwarePathArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersMalwareStateArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersMalwareTypeArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersNetworkDestinationDomainArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersNetworkDestinationIpv4Args;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersNetworkDestinationIpv6Args;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersNetworkDestinationPortArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersNetworkDirectionArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersNetworkProtocolArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersNetworkSourceDomainArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersNetworkSourceIpv4Args;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersNetworkSourceIpv6Args;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersNetworkSourceMacArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersNetworkSourcePortArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersNoteTextArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersNoteUpdatedAtArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersNoteUpdatedByArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersProcessLaunchedAtArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersProcessNameArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersProcessParentPidArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersProcessPathArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersProcessPidArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersProcessTerminatedAtArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersProductArnArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersProductFieldArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersProductNameArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersRecommendationTextArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersRecordStateArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersRelatedFindingsIdArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersRelatedFindingsProductArnArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceAwsEc2InstanceIamInstanceProfileArnArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceAwsEc2InstanceImageIdArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceAwsEc2InstanceIpv4AddressArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceAwsEc2InstanceIpv6AddressArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceAwsEc2InstanceKeyNameArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceAwsEc2InstanceLaunchedAtArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceAwsEc2InstanceSubnetIdArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceAwsEc2InstanceTypeArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceAwsEc2InstanceVpcIdArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceAwsIamAccessKeyCreatedAtArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceAwsIamAccessKeyStatusArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceAwsIamAccessKeyUserNameArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceAwsS3BucketOwnerIdArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceAwsS3BucketOwnerNameArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceContainerImageIdArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceContainerImageNameArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceContainerLaunchedAtArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceContainerNameArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceDetailsOtherArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceIdArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourcePartitionArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceRegionArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceTagArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceTypeArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersSeverityLabelArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersSourceUrlArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersThreatIntelIndicatorCategoryArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersThreatIntelIndicatorLastObservedAtArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersThreatIntelIndicatorSourceArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersThreatIntelIndicatorSourceUrlArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersThreatIntelIndicatorTypeArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersThreatIntelIndicatorValueArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersTitleArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersTypeArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersUpdatedAtArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersUserDefinedValueArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersVerificationStateArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersWorkflowStatusArgs;
import java.util.List;
import javax.annotation.Nullable;


public final class InsightFiltersArgs {

    /**
     * AWS account ID that a finding is generated in. See String_Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="awsAccountIds", flag="unknown_awsAccountIds")
    private List<InsightFiltersAwsAccountIdArgs> value_awsAccountIds;
    private boolean unknown_awsAccountIds;
    public List<InsightFiltersAwsAccountIdArgs> awsAccountIds() {
        if (!unknown_awsAccountIds) return value_awsAccountIds;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.awsAccountIds' is not present");
    }

    /**
     * The name of the findings provider (company) that owns the solution (product) that generates findings. See String_Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="companyNames", flag="unknown_companyNames")
    private List<InsightFiltersCompanyNameArgs> value_companyNames;
    private boolean unknown_companyNames;
    public List<InsightFiltersCompanyNameArgs> companyNames() {
        if (!unknown_companyNames) return value_companyNames;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.companyNames' is not present");
    }

    /**
     * Exclusive to findings that are generated as the result of a check run against a specific rule in a supported standard, such as CIS AWS Foundations. Contains security standard-related finding details. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="complianceStatuses", flag="unknown_complianceStatuses")
    private List<InsightFiltersComplianceStatusArgs> value_complianceStatuses;
    private boolean unknown_complianceStatuses;
    public List<InsightFiltersComplianceStatusArgs> complianceStatuses() {
        if (!unknown_complianceStatuses) return value_complianceStatuses;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.complianceStatuses' is not present");
    }

    /**
     * A finding&#39;s confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify. Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence. See Number Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="confidences", flag="unknown_confidences")
    private List<InsightFiltersConfidenceArgs> value_confidences;
    private boolean unknown_confidences;
    public List<InsightFiltersConfidenceArgs> confidences() {
        if (!unknown_confidences) return value_confidences;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.confidences' is not present");
    }

    /**
     * An ISO8601-formatted timestamp that indicates when the security-findings provider captured the potential security issue that a finding captured. See Date Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="createdAts", flag="unknown_createdAts")
    private List<InsightFiltersCreatedAtArgs> value_createdAts;
    private boolean unknown_createdAts;
    public List<InsightFiltersCreatedAtArgs> createdAts() {
        if (!unknown_createdAts) return value_createdAts;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.createdAts' is not present");
    }

    /**
     * The level of importance assigned to the resources associated with the finding. A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources. See Number Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="criticalities", flag="unknown_criticalities")
    private List<InsightFiltersCriticalityArgs> value_criticalities;
    private boolean unknown_criticalities;
    public List<InsightFiltersCriticalityArgs> criticalities() {
        if (!unknown_criticalities) return value_criticalities;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.criticalities' is not present");
    }

    /**
     * A finding&#39;s description. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="descriptions", flag="unknown_descriptions")
    private List<InsightFiltersDescriptionArgs> value_descriptions;
    private boolean unknown_descriptions;
    public List<InsightFiltersDescriptionArgs> descriptions() {
        if (!unknown_descriptions) return value_descriptions;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.descriptions' is not present");
    }

    /**
     * The finding provider value for the finding confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify. Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence. See Number Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="findingProviderFieldsConfidences", flag="unknown_findingProviderFieldsConfidences")
    private List<InsightFiltersFindingProviderFieldsConfidenceArgs> value_findingProviderFieldsConfidences;
    private boolean unknown_findingProviderFieldsConfidences;
    public List<InsightFiltersFindingProviderFieldsConfidenceArgs> findingProviderFieldsConfidences() {
        if (!unknown_findingProviderFieldsConfidences) return value_findingProviderFieldsConfidences;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.findingProviderFieldsConfidences' is not present");
    }

    /**
     * The finding provider value for the level of importance assigned to the resources associated with the findings. A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources. See Number Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="findingProviderFieldsCriticalities", flag="unknown_findingProviderFieldsCriticalities")
    private List<InsightFiltersFindingProviderFieldsCriticalityArgs> value_findingProviderFieldsCriticalities;
    private boolean unknown_findingProviderFieldsCriticalities;
    public List<InsightFiltersFindingProviderFieldsCriticalityArgs> findingProviderFieldsCriticalities() {
        if (!unknown_findingProviderFieldsCriticalities) return value_findingProviderFieldsCriticalities;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.findingProviderFieldsCriticalities' is not present");
    }

    /**
     * The finding identifier of a related finding that is identified by the finding provider. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="findingProviderFieldsRelatedFindingsIds", flag="unknown_findingProviderFieldsRelatedFindingsIds")
    private List<InsightFiltersFindingProviderFieldsRelatedFindingsIdArgs> value_findingProviderFieldsRelatedFindingsIds;
    private boolean unknown_findingProviderFieldsRelatedFindingsIds;
    public List<InsightFiltersFindingProviderFieldsRelatedFindingsIdArgs> findingProviderFieldsRelatedFindingsIds() {
        if (!unknown_findingProviderFieldsRelatedFindingsIds) return value_findingProviderFieldsRelatedFindingsIds;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.findingProviderFieldsRelatedFindingsIds' is not present");
    }

    /**
     * The ARN of the solution that generated a related finding that is identified by the finding provider. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="findingProviderFieldsRelatedFindingsProductArns", flag="unknown_findingProviderFieldsRelatedFindingsProductArns")
    private List<InsightFiltersFindingProviderFieldsRelatedFindingsProductArnArgs> value_findingProviderFieldsRelatedFindingsProductArns;
    private boolean unknown_findingProviderFieldsRelatedFindingsProductArns;
    public List<InsightFiltersFindingProviderFieldsRelatedFindingsProductArnArgs> findingProviderFieldsRelatedFindingsProductArns() {
        if (!unknown_findingProviderFieldsRelatedFindingsProductArns) return value_findingProviderFieldsRelatedFindingsProductArns;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.findingProviderFieldsRelatedFindingsProductArns' is not present");
    }

    /**
     * The finding provider value for the severity label. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="findingProviderFieldsSeverityLabels", flag="unknown_findingProviderFieldsSeverityLabels")
    private List<InsightFiltersFindingProviderFieldsSeverityLabelArgs> value_findingProviderFieldsSeverityLabels;
    private boolean unknown_findingProviderFieldsSeverityLabels;
    public List<InsightFiltersFindingProviderFieldsSeverityLabelArgs> findingProviderFieldsSeverityLabels() {
        if (!unknown_findingProviderFieldsSeverityLabels) return value_findingProviderFieldsSeverityLabels;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.findingProviderFieldsSeverityLabels' is not present");
    }

    /**
     * The finding provider&#39;s original value for the severity. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="findingProviderFieldsSeverityOriginals", flag="unknown_findingProviderFieldsSeverityOriginals")
    private List<InsightFiltersFindingProviderFieldsSeverityOriginalArgs> value_findingProviderFieldsSeverityOriginals;
    private boolean unknown_findingProviderFieldsSeverityOriginals;
    public List<InsightFiltersFindingProviderFieldsSeverityOriginalArgs> findingProviderFieldsSeverityOriginals() {
        if (!unknown_findingProviderFieldsSeverityOriginals) return value_findingProviderFieldsSeverityOriginals;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.findingProviderFieldsSeverityOriginals' is not present");
    }

    /**
     * One or more finding types that the finding provider assigned to the finding. Uses the format of `namespace/category/classifier` that classify a finding. Valid namespace values include: `Software and Configuration Checks`, `TTPs`, `Effects`, `Unusual Behaviors`, and `Sensitive Data Identifications`. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="findingProviderFieldsTypes", flag="unknown_findingProviderFieldsTypes")
    private List<InsightFiltersFindingProviderFieldsTypeArgs> value_findingProviderFieldsTypes;
    private boolean unknown_findingProviderFieldsTypes;
    public List<InsightFiltersFindingProviderFieldsTypeArgs> findingProviderFieldsTypes() {
        if (!unknown_findingProviderFieldsTypes) return value_findingProviderFieldsTypes;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.findingProviderFieldsTypes' is not present");
    }

    /**
     * An ISO8601-formatted timestamp that indicates when the security-findings provider first observed the potential security issue that a finding captured. See Date Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="firstObservedAts", flag="unknown_firstObservedAts")
    private List<InsightFiltersFirstObservedAtArgs> value_firstObservedAts;
    private boolean unknown_firstObservedAts;
    public List<InsightFiltersFirstObservedAtArgs> firstObservedAts() {
        if (!unknown_firstObservedAts) return value_firstObservedAts;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.firstObservedAts' is not present");
    }

    /**
     * The identifier for the solution-specific component (a discrete unit of logic) that generated a finding. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="generatorIds", flag="unknown_generatorIds")
    private List<InsightFiltersGeneratorIdArgs> value_generatorIds;
    private boolean unknown_generatorIds;
    public List<InsightFiltersGeneratorIdArgs> generatorIds() {
        if (!unknown_generatorIds) return value_generatorIds;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.generatorIds' is not present");
    }

    /**
     * The security findings provider-specific identifier for a finding. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="ids", flag="unknown_ids")
    private List<InsightFiltersIdArgs> value_ids;
    private boolean unknown_ids;
    public List<InsightFiltersIdArgs> ids() {
        if (!unknown_ids) return value_ids;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.ids' is not present");
    }

    /**
     * A keyword for a finding. See Keyword Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="keywords", flag="unknown_keywords")
    private List<InsightFiltersKeywordArgs> value_keywords;
    private boolean unknown_keywords;
    public List<InsightFiltersKeywordArgs> keywords() {
        if (!unknown_keywords) return value_keywords;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.keywords' is not present");
    }

    /**
     * An ISO8601-formatted timestamp that indicates when the security-findings provider most recently observed the potential security issue that a finding captured. See Date Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="lastObservedAts", flag="unknown_lastObservedAts")
    private List<InsightFiltersLastObservedAtArgs> value_lastObservedAts;
    private boolean unknown_lastObservedAts;
    public List<InsightFiltersLastObservedAtArgs> lastObservedAts() {
        if (!unknown_lastObservedAts) return value_lastObservedAts;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.lastObservedAts' is not present");
    }

    /**
     * The name of the malware that was observed. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="malwareNames", flag="unknown_malwareNames")
    private List<InsightFiltersMalwareNameArgs> value_malwareNames;
    private boolean unknown_malwareNames;
    public List<InsightFiltersMalwareNameArgs> malwareNames() {
        if (!unknown_malwareNames) return value_malwareNames;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.malwareNames' is not present");
    }

    /**
     * The filesystem path of the malware that was observed. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="malwarePaths", flag="unknown_malwarePaths")
    private List<InsightFiltersMalwarePathArgs> value_malwarePaths;
    private boolean unknown_malwarePaths;
    public List<InsightFiltersMalwarePathArgs> malwarePaths() {
        if (!unknown_malwarePaths) return value_malwarePaths;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.malwarePaths' is not present");
    }

    /**
     * The state of the malware that was observed. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="malwareStates", flag="unknown_malwareStates")
    private List<InsightFiltersMalwareStateArgs> value_malwareStates;
    private boolean unknown_malwareStates;
    public List<InsightFiltersMalwareStateArgs> malwareStates() {
        if (!unknown_malwareStates) return value_malwareStates;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.malwareStates' is not present");
    }

    /**
     * The type of the malware that was observed. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="malwareTypes", flag="unknown_malwareTypes")
    private List<InsightFiltersMalwareTypeArgs> value_malwareTypes;
    private boolean unknown_malwareTypes;
    public List<InsightFiltersMalwareTypeArgs> malwareTypes() {
        if (!unknown_malwareTypes) return value_malwareTypes;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.malwareTypes' is not present");
    }

    /**
     * The destination domain of network-related information about a finding. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="networkDestinationDomains", flag="unknown_networkDestinationDomains")
    private List<InsightFiltersNetworkDestinationDomainArgs> value_networkDestinationDomains;
    private boolean unknown_networkDestinationDomains;
    public List<InsightFiltersNetworkDestinationDomainArgs> networkDestinationDomains() {
        if (!unknown_networkDestinationDomains) return value_networkDestinationDomains;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.networkDestinationDomains' is not present");
    }

    /**
     * The destination IPv4 address of network-related information about a finding. See Ip Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="networkDestinationIpv4s", flag="unknown_networkDestinationIpv4s")
    private List<InsightFiltersNetworkDestinationIpv4Args> value_networkDestinationIpv4s;
    private boolean unknown_networkDestinationIpv4s;
    public List<InsightFiltersNetworkDestinationIpv4Args> networkDestinationIpv4s() {
        if (!unknown_networkDestinationIpv4s) return value_networkDestinationIpv4s;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.networkDestinationIpv4s' is not present");
    }

    /**
     * The destination IPv6 address of network-related information about a finding. See Ip Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="networkDestinationIpv6s", flag="unknown_networkDestinationIpv6s")
    private List<InsightFiltersNetworkDestinationIpv6Args> value_networkDestinationIpv6s;
    private boolean unknown_networkDestinationIpv6s;
    public List<InsightFiltersNetworkDestinationIpv6Args> networkDestinationIpv6s() {
        if (!unknown_networkDestinationIpv6s) return value_networkDestinationIpv6s;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.networkDestinationIpv6s' is not present");
    }

    /**
     * The destination port of network-related information about a finding. See Number Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="networkDestinationPorts", flag="unknown_networkDestinationPorts")
    private List<InsightFiltersNetworkDestinationPortArgs> value_networkDestinationPorts;
    private boolean unknown_networkDestinationPorts;
    public List<InsightFiltersNetworkDestinationPortArgs> networkDestinationPorts() {
        if (!unknown_networkDestinationPorts) return value_networkDestinationPorts;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.networkDestinationPorts' is not present");
    }

    /**
     * Indicates the direction of network traffic associated with a finding. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="networkDirections", flag="unknown_networkDirections")
    private List<InsightFiltersNetworkDirectionArgs> value_networkDirections;
    private boolean unknown_networkDirections;
    public List<InsightFiltersNetworkDirectionArgs> networkDirections() {
        if (!unknown_networkDirections) return value_networkDirections;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.networkDirections' is not present");
    }

    /**
     * The protocol of network-related information about a finding. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="networkProtocols", flag="unknown_networkProtocols")
    private List<InsightFiltersNetworkProtocolArgs> value_networkProtocols;
    private boolean unknown_networkProtocols;
    public List<InsightFiltersNetworkProtocolArgs> networkProtocols() {
        if (!unknown_networkProtocols) return value_networkProtocols;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.networkProtocols' is not present");
    }

    /**
     * The source domain of network-related information about a finding. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="networkSourceDomains", flag="unknown_networkSourceDomains")
    private List<InsightFiltersNetworkSourceDomainArgs> value_networkSourceDomains;
    private boolean unknown_networkSourceDomains;
    public List<InsightFiltersNetworkSourceDomainArgs> networkSourceDomains() {
        if (!unknown_networkSourceDomains) return value_networkSourceDomains;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.networkSourceDomains' is not present");
    }

    /**
     * The source IPv4 address of network-related information about a finding. See Ip Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="networkSourceIpv4s", flag="unknown_networkSourceIpv4s")
    private List<InsightFiltersNetworkSourceIpv4Args> value_networkSourceIpv4s;
    private boolean unknown_networkSourceIpv4s;
    public List<InsightFiltersNetworkSourceIpv4Args> networkSourceIpv4s() {
        if (!unknown_networkSourceIpv4s) return value_networkSourceIpv4s;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.networkSourceIpv4s' is not present");
    }

    /**
     * The source IPv6 address of network-related information about a finding. See Ip Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="networkSourceIpv6s", flag="unknown_networkSourceIpv6s")
    private List<InsightFiltersNetworkSourceIpv6Args> value_networkSourceIpv6s;
    private boolean unknown_networkSourceIpv6s;
    public List<InsightFiltersNetworkSourceIpv6Args> networkSourceIpv6s() {
        if (!unknown_networkSourceIpv6s) return value_networkSourceIpv6s;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.networkSourceIpv6s' is not present");
    }

    /**
     * The source media access control (MAC) address of network-related information about a finding. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="networkSourceMacs", flag="unknown_networkSourceMacs")
    private List<InsightFiltersNetworkSourceMacArgs> value_networkSourceMacs;
    private boolean unknown_networkSourceMacs;
    public List<InsightFiltersNetworkSourceMacArgs> networkSourceMacs() {
        if (!unknown_networkSourceMacs) return value_networkSourceMacs;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.networkSourceMacs' is not present");
    }

    /**
     * The source port of network-related information about a finding. See Number Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="networkSourcePorts", flag="unknown_networkSourcePorts")
    private List<InsightFiltersNetworkSourcePortArgs> value_networkSourcePorts;
    private boolean unknown_networkSourcePorts;
    public List<InsightFiltersNetworkSourcePortArgs> networkSourcePorts() {
        if (!unknown_networkSourcePorts) return value_networkSourcePorts;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.networkSourcePorts' is not present");
    }

    /**
     * The text of a note. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="noteTexts", flag="unknown_noteTexts")
    private List<InsightFiltersNoteTextArgs> value_noteTexts;
    private boolean unknown_noteTexts;
    public List<InsightFiltersNoteTextArgs> noteTexts() {
        if (!unknown_noteTexts) return value_noteTexts;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.noteTexts' is not present");
    }

    /**
     * The timestamp of when the note was updated. See Date Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="noteUpdatedAts", flag="unknown_noteUpdatedAts")
    private List<InsightFiltersNoteUpdatedAtArgs> value_noteUpdatedAts;
    private boolean unknown_noteUpdatedAts;
    public List<InsightFiltersNoteUpdatedAtArgs> noteUpdatedAts() {
        if (!unknown_noteUpdatedAts) return value_noteUpdatedAts;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.noteUpdatedAts' is not present");
    }

    /**
     * The principal that created a note. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="noteUpdatedBies", flag="unknown_noteUpdatedBies")
    private List<InsightFiltersNoteUpdatedByArgs> value_noteUpdatedBies;
    private boolean unknown_noteUpdatedBies;
    public List<InsightFiltersNoteUpdatedByArgs> noteUpdatedBies() {
        if (!unknown_noteUpdatedBies) return value_noteUpdatedBies;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.noteUpdatedBies' is not present");
    }

    /**
     * The date/time that the process was launched. See Date Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="processLaunchedAts", flag="unknown_processLaunchedAts")
    private List<InsightFiltersProcessLaunchedAtArgs> value_processLaunchedAts;
    private boolean unknown_processLaunchedAts;
    public List<InsightFiltersProcessLaunchedAtArgs> processLaunchedAts() {
        if (!unknown_processLaunchedAts) return value_processLaunchedAts;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.processLaunchedAts' is not present");
    }

    /**
     * The name of the process. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="processNames", flag="unknown_processNames")
    private List<InsightFiltersProcessNameArgs> value_processNames;
    private boolean unknown_processNames;
    public List<InsightFiltersProcessNameArgs> processNames() {
        if (!unknown_processNames) return value_processNames;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.processNames' is not present");
    }

    /**
     * The parent process ID. See Number Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="processParentPids", flag="unknown_processParentPids")
    private List<InsightFiltersProcessParentPidArgs> value_processParentPids;
    private boolean unknown_processParentPids;
    public List<InsightFiltersProcessParentPidArgs> processParentPids() {
        if (!unknown_processParentPids) return value_processParentPids;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.processParentPids' is not present");
    }

    /**
     * The path to the process executable. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="processPaths", flag="unknown_processPaths")
    private List<InsightFiltersProcessPathArgs> value_processPaths;
    private boolean unknown_processPaths;
    public List<InsightFiltersProcessPathArgs> processPaths() {
        if (!unknown_processPaths) return value_processPaths;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.processPaths' is not present");
    }

    /**
     * The process ID. See Number Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="processPids", flag="unknown_processPids")
    private List<InsightFiltersProcessPidArgs> value_processPids;
    private boolean unknown_processPids;
    public List<InsightFiltersProcessPidArgs> processPids() {
        if (!unknown_processPids) return value_processPids;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.processPids' is not present");
    }

    /**
     * The date/time that the process was terminated. See Date Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="processTerminatedAts", flag="unknown_processTerminatedAts")
    private List<InsightFiltersProcessTerminatedAtArgs> value_processTerminatedAts;
    private boolean unknown_processTerminatedAts;
    public List<InsightFiltersProcessTerminatedAtArgs> processTerminatedAts() {
        if (!unknown_processTerminatedAts) return value_processTerminatedAts;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.processTerminatedAts' is not present");
    }

    /**
     * The ARN generated by Security Hub that uniquely identifies a third-party company (security findings provider) after this provider&#39;s product (solution that generates findings) is registered with Security Hub. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="productArns", flag="unknown_productArns")
    private List<InsightFiltersProductArnArgs> value_productArns;
    private boolean unknown_productArns;
    public List<InsightFiltersProductArnArgs> productArns() {
        if (!unknown_productArns) return value_productArns;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.productArns' is not present");
    }

    /**
     * A data type where security-findings providers can include additional solution-specific details that aren&#39;t part of the defined `AwsSecurityFinding` format. See Map Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="productFields", flag="unknown_productFields")
    private List<InsightFiltersProductFieldArgs> value_productFields;
    private boolean unknown_productFields;
    public List<InsightFiltersProductFieldArgs> productFields() {
        if (!unknown_productFields) return value_productFields;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.productFields' is not present");
    }

    /**
     * The name of the solution (product) that generates findings. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="productNames", flag="unknown_productNames")
    private List<InsightFiltersProductNameArgs> value_productNames;
    private boolean unknown_productNames;
    public List<InsightFiltersProductNameArgs> productNames() {
        if (!unknown_productNames) return value_productNames;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.productNames' is not present");
    }

    /**
     * The recommendation of what to do about the issue described in a finding. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="recommendationTexts", flag="unknown_recommendationTexts")
    private List<InsightFiltersRecommendationTextArgs> value_recommendationTexts;
    private boolean unknown_recommendationTexts;
    public List<InsightFiltersRecommendationTextArgs> recommendationTexts() {
        if (!unknown_recommendationTexts) return value_recommendationTexts;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.recommendationTexts' is not present");
    }

    /**
     * The updated record state for the finding. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="recordStates", flag="unknown_recordStates")
    private List<InsightFiltersRecordStateArgs> value_recordStates;
    private boolean unknown_recordStates;
    public List<InsightFiltersRecordStateArgs> recordStates() {
        if (!unknown_recordStates) return value_recordStates;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.recordStates' is not present");
    }

    /**
     * The solution-generated identifier for a related finding. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="relatedFindingsIds", flag="unknown_relatedFindingsIds")
    private List<InsightFiltersRelatedFindingsIdArgs> value_relatedFindingsIds;
    private boolean unknown_relatedFindingsIds;
    public List<InsightFiltersRelatedFindingsIdArgs> relatedFindingsIds() {
        if (!unknown_relatedFindingsIds) return value_relatedFindingsIds;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.relatedFindingsIds' is not present");
    }

    /**
     * The ARN of the solution that generated a related finding. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="relatedFindingsProductArns", flag="unknown_relatedFindingsProductArns")
    private List<InsightFiltersRelatedFindingsProductArnArgs> value_relatedFindingsProductArns;
    private boolean unknown_relatedFindingsProductArns;
    public List<InsightFiltersRelatedFindingsProductArnArgs> relatedFindingsProductArns() {
        if (!unknown_relatedFindingsProductArns) return value_relatedFindingsProductArns;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.relatedFindingsProductArns' is not present");
    }

    /**
     * The IAM profile ARN of the instance. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="resourceAwsEc2InstanceIamInstanceProfileArns", flag="unknown_resourceAwsEc2InstanceIamInstanceProfileArns")
    private List<InsightFiltersResourceAwsEc2InstanceIamInstanceProfileArnArgs> value_resourceAwsEc2InstanceIamInstanceProfileArns;
    private boolean unknown_resourceAwsEc2InstanceIamInstanceProfileArns;
    public List<InsightFiltersResourceAwsEc2InstanceIamInstanceProfileArnArgs> resourceAwsEc2InstanceIamInstanceProfileArns() {
        if (!unknown_resourceAwsEc2InstanceIamInstanceProfileArns) return value_resourceAwsEc2InstanceIamInstanceProfileArns;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.resourceAwsEc2InstanceIamInstanceProfileArns' is not present");
    }

    /**
     * The Amazon Machine Image (AMI) ID of the instance. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="resourceAwsEc2InstanceImageIds", flag="unknown_resourceAwsEc2InstanceImageIds")
    private List<InsightFiltersResourceAwsEc2InstanceImageIdArgs> value_resourceAwsEc2InstanceImageIds;
    private boolean unknown_resourceAwsEc2InstanceImageIds;
    public List<InsightFiltersResourceAwsEc2InstanceImageIdArgs> resourceAwsEc2InstanceImageIds() {
        if (!unknown_resourceAwsEc2InstanceImageIds) return value_resourceAwsEc2InstanceImageIds;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.resourceAwsEc2InstanceImageIds' is not present");
    }

    /**
     * The IPv4 addresses associated with the instance. See Ip Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="resourceAwsEc2InstanceIpv4Addresses", flag="unknown_resourceAwsEc2InstanceIpv4Addresses")
    private List<InsightFiltersResourceAwsEc2InstanceIpv4AddressArgs> value_resourceAwsEc2InstanceIpv4Addresses;
    private boolean unknown_resourceAwsEc2InstanceIpv4Addresses;
    public List<InsightFiltersResourceAwsEc2InstanceIpv4AddressArgs> resourceAwsEc2InstanceIpv4Addresses() {
        if (!unknown_resourceAwsEc2InstanceIpv4Addresses) return value_resourceAwsEc2InstanceIpv4Addresses;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.resourceAwsEc2InstanceIpv4Addresses' is not present");
    }

    /**
     * The IPv6 addresses associated with the instance. See Ip Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="resourceAwsEc2InstanceIpv6Addresses", flag="unknown_resourceAwsEc2InstanceIpv6Addresses")
    private List<InsightFiltersResourceAwsEc2InstanceIpv6AddressArgs> value_resourceAwsEc2InstanceIpv6Addresses;
    private boolean unknown_resourceAwsEc2InstanceIpv6Addresses;
    public List<InsightFiltersResourceAwsEc2InstanceIpv6AddressArgs> resourceAwsEc2InstanceIpv6Addresses() {
        if (!unknown_resourceAwsEc2InstanceIpv6Addresses) return value_resourceAwsEc2InstanceIpv6Addresses;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.resourceAwsEc2InstanceIpv6Addresses' is not present");
    }

    /**
     * The key name associated with the instance. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="resourceAwsEc2InstanceKeyNames", flag="unknown_resourceAwsEc2InstanceKeyNames")
    private List<InsightFiltersResourceAwsEc2InstanceKeyNameArgs> value_resourceAwsEc2InstanceKeyNames;
    private boolean unknown_resourceAwsEc2InstanceKeyNames;
    public List<InsightFiltersResourceAwsEc2InstanceKeyNameArgs> resourceAwsEc2InstanceKeyNames() {
        if (!unknown_resourceAwsEc2InstanceKeyNames) return value_resourceAwsEc2InstanceKeyNames;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.resourceAwsEc2InstanceKeyNames' is not present");
    }

    /**
     * The date and time the instance was launched. See Date Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="resourceAwsEc2InstanceLaunchedAts", flag="unknown_resourceAwsEc2InstanceLaunchedAts")
    private List<InsightFiltersResourceAwsEc2InstanceLaunchedAtArgs> value_resourceAwsEc2InstanceLaunchedAts;
    private boolean unknown_resourceAwsEc2InstanceLaunchedAts;
    public List<InsightFiltersResourceAwsEc2InstanceLaunchedAtArgs> resourceAwsEc2InstanceLaunchedAts() {
        if (!unknown_resourceAwsEc2InstanceLaunchedAts) return value_resourceAwsEc2InstanceLaunchedAts;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.resourceAwsEc2InstanceLaunchedAts' is not present");
    }

    /**
     * The identifier of the subnet that the instance was launched in. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="resourceAwsEc2InstanceSubnetIds", flag="unknown_resourceAwsEc2InstanceSubnetIds")
    private List<InsightFiltersResourceAwsEc2InstanceSubnetIdArgs> value_resourceAwsEc2InstanceSubnetIds;
    private boolean unknown_resourceAwsEc2InstanceSubnetIds;
    public List<InsightFiltersResourceAwsEc2InstanceSubnetIdArgs> resourceAwsEc2InstanceSubnetIds() {
        if (!unknown_resourceAwsEc2InstanceSubnetIds) return value_resourceAwsEc2InstanceSubnetIds;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.resourceAwsEc2InstanceSubnetIds' is not present");
    }

    /**
     * The instance type of the instance. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="resourceAwsEc2InstanceTypes", flag="unknown_resourceAwsEc2InstanceTypes")
    private List<InsightFiltersResourceAwsEc2InstanceTypeArgs> value_resourceAwsEc2InstanceTypes;
    private boolean unknown_resourceAwsEc2InstanceTypes;
    public List<InsightFiltersResourceAwsEc2InstanceTypeArgs> resourceAwsEc2InstanceTypes() {
        if (!unknown_resourceAwsEc2InstanceTypes) return value_resourceAwsEc2InstanceTypes;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.resourceAwsEc2InstanceTypes' is not present");
    }

    /**
     * The identifier of the VPC that the instance was launched in. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="resourceAwsEc2InstanceVpcIds", flag="unknown_resourceAwsEc2InstanceVpcIds")
    private List<InsightFiltersResourceAwsEc2InstanceVpcIdArgs> value_resourceAwsEc2InstanceVpcIds;
    private boolean unknown_resourceAwsEc2InstanceVpcIds;
    public List<InsightFiltersResourceAwsEc2InstanceVpcIdArgs> resourceAwsEc2InstanceVpcIds() {
        if (!unknown_resourceAwsEc2InstanceVpcIds) return value_resourceAwsEc2InstanceVpcIds;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.resourceAwsEc2InstanceVpcIds' is not present");
    }

    /**
     * The creation date/time of the IAM access key related to a finding. See Date Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="resourceAwsIamAccessKeyCreatedAts", flag="unknown_resourceAwsIamAccessKeyCreatedAts")
    private List<InsightFiltersResourceAwsIamAccessKeyCreatedAtArgs> value_resourceAwsIamAccessKeyCreatedAts;
    private boolean unknown_resourceAwsIamAccessKeyCreatedAts;
    public List<InsightFiltersResourceAwsIamAccessKeyCreatedAtArgs> resourceAwsIamAccessKeyCreatedAts() {
        if (!unknown_resourceAwsIamAccessKeyCreatedAts) return value_resourceAwsIamAccessKeyCreatedAts;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.resourceAwsIamAccessKeyCreatedAts' is not present");
    }

    /**
     * The status of the IAM access key related to a finding. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="resourceAwsIamAccessKeyStatuses", flag="unknown_resourceAwsIamAccessKeyStatuses")
    private List<InsightFiltersResourceAwsIamAccessKeyStatusArgs> value_resourceAwsIamAccessKeyStatuses;
    private boolean unknown_resourceAwsIamAccessKeyStatuses;
    public List<InsightFiltersResourceAwsIamAccessKeyStatusArgs> resourceAwsIamAccessKeyStatuses() {
        if (!unknown_resourceAwsIamAccessKeyStatuses) return value_resourceAwsIamAccessKeyStatuses;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.resourceAwsIamAccessKeyStatuses' is not present");
    }

    /**
     * The user associated with the IAM access key related to a finding. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="resourceAwsIamAccessKeyUserNames", flag="unknown_resourceAwsIamAccessKeyUserNames")
    private List<InsightFiltersResourceAwsIamAccessKeyUserNameArgs> value_resourceAwsIamAccessKeyUserNames;
    private boolean unknown_resourceAwsIamAccessKeyUserNames;
    public List<InsightFiltersResourceAwsIamAccessKeyUserNameArgs> resourceAwsIamAccessKeyUserNames() {
        if (!unknown_resourceAwsIamAccessKeyUserNames) return value_resourceAwsIamAccessKeyUserNames;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.resourceAwsIamAccessKeyUserNames' is not present");
    }

    /**
     * The canonical user ID of the owner of the S3 bucket. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="resourceAwsS3BucketOwnerIds", flag="unknown_resourceAwsS3BucketOwnerIds")
    private List<InsightFiltersResourceAwsS3BucketOwnerIdArgs> value_resourceAwsS3BucketOwnerIds;
    private boolean unknown_resourceAwsS3BucketOwnerIds;
    public List<InsightFiltersResourceAwsS3BucketOwnerIdArgs> resourceAwsS3BucketOwnerIds() {
        if (!unknown_resourceAwsS3BucketOwnerIds) return value_resourceAwsS3BucketOwnerIds;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.resourceAwsS3BucketOwnerIds' is not present");
    }

    /**
     * The display name of the owner of the S3 bucket. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="resourceAwsS3BucketOwnerNames", flag="unknown_resourceAwsS3BucketOwnerNames")
    private List<InsightFiltersResourceAwsS3BucketOwnerNameArgs> value_resourceAwsS3BucketOwnerNames;
    private boolean unknown_resourceAwsS3BucketOwnerNames;
    public List<InsightFiltersResourceAwsS3BucketOwnerNameArgs> resourceAwsS3BucketOwnerNames() {
        if (!unknown_resourceAwsS3BucketOwnerNames) return value_resourceAwsS3BucketOwnerNames;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.resourceAwsS3BucketOwnerNames' is not present");
    }

    /**
     * The identifier of the image related to a finding. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="resourceContainerImageIds", flag="unknown_resourceContainerImageIds")
    private List<InsightFiltersResourceContainerImageIdArgs> value_resourceContainerImageIds;
    private boolean unknown_resourceContainerImageIds;
    public List<InsightFiltersResourceContainerImageIdArgs> resourceContainerImageIds() {
        if (!unknown_resourceContainerImageIds) return value_resourceContainerImageIds;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.resourceContainerImageIds' is not present");
    }

    /**
     * The name of the image related to a finding. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="resourceContainerImageNames", flag="unknown_resourceContainerImageNames")
    private List<InsightFiltersResourceContainerImageNameArgs> value_resourceContainerImageNames;
    private boolean unknown_resourceContainerImageNames;
    public List<InsightFiltersResourceContainerImageNameArgs> resourceContainerImageNames() {
        if (!unknown_resourceContainerImageNames) return value_resourceContainerImageNames;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.resourceContainerImageNames' is not present");
    }

    /**
     * The date/time that the container was started. See Date Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="resourceContainerLaunchedAts", flag="unknown_resourceContainerLaunchedAts")
    private List<InsightFiltersResourceContainerLaunchedAtArgs> value_resourceContainerLaunchedAts;
    private boolean unknown_resourceContainerLaunchedAts;
    public List<InsightFiltersResourceContainerLaunchedAtArgs> resourceContainerLaunchedAts() {
        if (!unknown_resourceContainerLaunchedAts) return value_resourceContainerLaunchedAts;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.resourceContainerLaunchedAts' is not present");
    }

    /**
     * The name of the container related to a finding. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="resourceContainerNames", flag="unknown_resourceContainerNames")
    private List<InsightFiltersResourceContainerNameArgs> value_resourceContainerNames;
    private boolean unknown_resourceContainerNames;
    public List<InsightFiltersResourceContainerNameArgs> resourceContainerNames() {
        if (!unknown_resourceContainerNames) return value_resourceContainerNames;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.resourceContainerNames' is not present");
    }

    /**
     * The details of a resource that doesn&#39;t have a specific subfield for the resource type defined. See Map Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="resourceDetailsOthers", flag="unknown_resourceDetailsOthers")
    private List<InsightFiltersResourceDetailsOtherArgs> value_resourceDetailsOthers;
    private boolean unknown_resourceDetailsOthers;
    public List<InsightFiltersResourceDetailsOtherArgs> resourceDetailsOthers() {
        if (!unknown_resourceDetailsOthers) return value_resourceDetailsOthers;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.resourceDetailsOthers' is not present");
    }

    /**
     * The canonical identifier for the given resource type. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="resourceIds", flag="unknown_resourceIds")
    private List<InsightFiltersResourceIdArgs> value_resourceIds;
    private boolean unknown_resourceIds;
    public List<InsightFiltersResourceIdArgs> resourceIds() {
        if (!unknown_resourceIds) return value_resourceIds;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.resourceIds' is not present");
    }

    /**
     * The canonical AWS partition name that the Region is assigned to. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="resourcePartitions", flag="unknown_resourcePartitions")
    private List<InsightFiltersResourcePartitionArgs> value_resourcePartitions;
    private boolean unknown_resourcePartitions;
    public List<InsightFiltersResourcePartitionArgs> resourcePartitions() {
        if (!unknown_resourcePartitions) return value_resourcePartitions;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.resourcePartitions' is not present");
    }

    /**
     * The canonical AWS external Region name where this resource is located. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="resourceRegions", flag="unknown_resourceRegions")
    private List<InsightFiltersResourceRegionArgs> value_resourceRegions;
    private boolean unknown_resourceRegions;
    public List<InsightFiltersResourceRegionArgs> resourceRegions() {
        if (!unknown_resourceRegions) return value_resourceRegions;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.resourceRegions' is not present");
    }

    /**
     * A list of AWS tags associated with a resource at the time the finding was processed. See Map Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="resourceTags", flag="unknown_resourceTags")
    private List<InsightFiltersResourceTagArgs> value_resourceTags;
    private boolean unknown_resourceTags;
    public List<InsightFiltersResourceTagArgs> resourceTags() {
        if (!unknown_resourceTags) return value_resourceTags;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.resourceTags' is not present");
    }

    /**
     * Specifies the type of the resource that details are provided for. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="resourceTypes", flag="unknown_resourceTypes")
    private List<InsightFiltersResourceTypeArgs> value_resourceTypes;
    private boolean unknown_resourceTypes;
    public List<InsightFiltersResourceTypeArgs> resourceTypes() {
        if (!unknown_resourceTypes) return value_resourceTypes;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.resourceTypes' is not present");
    }

    /**
     * The label of a finding&#39;s severity. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="severityLabels", flag="unknown_severityLabels")
    private List<InsightFiltersSeverityLabelArgs> value_severityLabels;
    private boolean unknown_severityLabels;
    public List<InsightFiltersSeverityLabelArgs> severityLabels() {
        if (!unknown_severityLabels) return value_severityLabels;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.severityLabels' is not present");
    }

    /**
     * A URL that links to a page about the current finding in the security-findings provider&#39;s solution. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="sourceUrls", flag="unknown_sourceUrls")
    private List<InsightFiltersSourceUrlArgs> value_sourceUrls;
    private boolean unknown_sourceUrls;
    public List<InsightFiltersSourceUrlArgs> sourceUrls() {
        if (!unknown_sourceUrls) return value_sourceUrls;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.sourceUrls' is not present");
    }

    /**
     * The category of a threat intelligence indicator. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="threatIntelIndicatorCategories", flag="unknown_threatIntelIndicatorCategories")
    private List<InsightFiltersThreatIntelIndicatorCategoryArgs> value_threatIntelIndicatorCategories;
    private boolean unknown_threatIntelIndicatorCategories;
    public List<InsightFiltersThreatIntelIndicatorCategoryArgs> threatIntelIndicatorCategories() {
        if (!unknown_threatIntelIndicatorCategories) return value_threatIntelIndicatorCategories;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.threatIntelIndicatorCategories' is not present");
    }

    /**
     * The date/time of the last observation of a threat intelligence indicator. See Date Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="threatIntelIndicatorLastObservedAts", flag="unknown_threatIntelIndicatorLastObservedAts")
    private List<InsightFiltersThreatIntelIndicatorLastObservedAtArgs> value_threatIntelIndicatorLastObservedAts;
    private boolean unknown_threatIntelIndicatorLastObservedAts;
    public List<InsightFiltersThreatIntelIndicatorLastObservedAtArgs> threatIntelIndicatorLastObservedAts() {
        if (!unknown_threatIntelIndicatorLastObservedAts) return value_threatIntelIndicatorLastObservedAts;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.threatIntelIndicatorLastObservedAts' is not present");
    }

    /**
     * The URL for more details from the source of the threat intelligence. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="threatIntelIndicatorSourceUrls", flag="unknown_threatIntelIndicatorSourceUrls")
    private List<InsightFiltersThreatIntelIndicatorSourceUrlArgs> value_threatIntelIndicatorSourceUrls;
    private boolean unknown_threatIntelIndicatorSourceUrls;
    public List<InsightFiltersThreatIntelIndicatorSourceUrlArgs> threatIntelIndicatorSourceUrls() {
        if (!unknown_threatIntelIndicatorSourceUrls) return value_threatIntelIndicatorSourceUrls;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.threatIntelIndicatorSourceUrls' is not present");
    }

    /**
     * The source of the threat intelligence. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="threatIntelIndicatorSources", flag="unknown_threatIntelIndicatorSources")
    private List<InsightFiltersThreatIntelIndicatorSourceArgs> value_threatIntelIndicatorSources;
    private boolean unknown_threatIntelIndicatorSources;
    public List<InsightFiltersThreatIntelIndicatorSourceArgs> threatIntelIndicatorSources() {
        if (!unknown_threatIntelIndicatorSources) return value_threatIntelIndicatorSources;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.threatIntelIndicatorSources' is not present");
    }

    /**
     * The type of a threat intelligence indicator. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="threatIntelIndicatorTypes", flag="unknown_threatIntelIndicatorTypes")
    private List<InsightFiltersThreatIntelIndicatorTypeArgs> value_threatIntelIndicatorTypes;
    private boolean unknown_threatIntelIndicatorTypes;
    public List<InsightFiltersThreatIntelIndicatorTypeArgs> threatIntelIndicatorTypes() {
        if (!unknown_threatIntelIndicatorTypes) return value_threatIntelIndicatorTypes;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.threatIntelIndicatorTypes' is not present");
    }

    /**
     * The value of a threat intelligence indicator. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="threatIntelIndicatorValues", flag="unknown_threatIntelIndicatorValues")
    private List<InsightFiltersThreatIntelIndicatorValueArgs> value_threatIntelIndicatorValues;
    private boolean unknown_threatIntelIndicatorValues;
    public List<InsightFiltersThreatIntelIndicatorValueArgs> threatIntelIndicatorValues() {
        if (!unknown_threatIntelIndicatorValues) return value_threatIntelIndicatorValues;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.threatIntelIndicatorValues' is not present");
    }

    /**
     * A finding&#39;s title. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="titles", flag="unknown_titles")
    private List<InsightFiltersTitleArgs> value_titles;
    private boolean unknown_titles;
    public List<InsightFiltersTitleArgs> titles() {
        if (!unknown_titles) return value_titles;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.titles' is not present");
    }

    /**
     * A finding type in the format of `namespace/category/classifier` that classifies a finding. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="types", flag="unknown_types")
    private List<InsightFiltersTypeArgs> value_types;
    private boolean unknown_types;
    public List<InsightFiltersTypeArgs> types() {
        if (!unknown_types) return value_types;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.types' is not present");
    }

    /**
     * An ISO8601-formatted timestamp that indicates when the security-findings provider last updated the finding record. See Date Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="updatedAts", flag="unknown_updatedAts")
    private List<InsightFiltersUpdatedAtArgs> value_updatedAts;
    private boolean unknown_updatedAts;
    public List<InsightFiltersUpdatedAtArgs> updatedAts() {
        if (!unknown_updatedAts) return value_updatedAts;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.updatedAts' is not present");
    }

    /**
     * A list of name/value string pairs associated with the finding. These are custom, user-defined fields added to a finding. See Map Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="userDefinedValues", flag="unknown_userDefinedValues")
    private List<InsightFiltersUserDefinedValueArgs> value_userDefinedValues;
    private boolean unknown_userDefinedValues;
    public List<InsightFiltersUserDefinedValueArgs> userDefinedValues() {
        if (!unknown_userDefinedValues) return value_userDefinedValues;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.userDefinedValues' is not present");
    }

    /**
     * The veracity of a finding. See String Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="verificationStates", flag="unknown_verificationStates")
    private List<InsightFiltersVerificationStateArgs> value_verificationStates;
    private boolean unknown_verificationStates;
    public List<InsightFiltersVerificationStateArgs> verificationStates() {
        if (!unknown_verificationStates) return value_verificationStates;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.verificationStates' is not present");
    }

    /**
     * The status of the investigation into a finding. See Workflow Status Filter below for more details.
     * 
     */
    @PolicyResourceProperty(name="workflowStatuses", flag="unknown_workflowStatuses")
    private List<InsightFiltersWorkflowStatusArgs> value_workflowStatuses;
    private boolean unknown_workflowStatuses;
    public List<InsightFiltersWorkflowStatusArgs> workflowStatuses() {
        if (!unknown_workflowStatuses) return value_workflowStatuses;
        throw new UndeferrableValueException("Value 'InsightFiltersArgs.workflowStatuses' is not present");
    }

}
