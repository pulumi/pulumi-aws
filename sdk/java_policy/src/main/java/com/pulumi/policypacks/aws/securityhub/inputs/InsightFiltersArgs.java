// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.securityhub.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersAwsAccountIdArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersCompanyNameArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersComplianceStatusArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersConfidenceArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersCreatedAtArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersCriticalityArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersDescriptionArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersFindingProviderFieldsConfidenceArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersFindingProviderFieldsCriticalityArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersFindingProviderFieldsRelatedFindingsIdArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersFindingProviderFieldsRelatedFindingsProductArnArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersFindingProviderFieldsSeverityLabelArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersFindingProviderFieldsSeverityOriginalArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersFindingProviderFieldsTypeArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersFirstObservedAtArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersGeneratorIdArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersIdArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersKeywordArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersLastObservedAtArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersMalwareNameArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersMalwarePathArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersMalwareStateArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersMalwareTypeArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersNetworkDestinationDomainArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersNetworkDestinationIpv4Args;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersNetworkDestinationIpv6Args;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersNetworkDestinationPortArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersNetworkDirectionArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersNetworkProtocolArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersNetworkSourceDomainArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersNetworkSourceIpv4Args;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersNetworkSourceIpv6Args;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersNetworkSourceMacArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersNetworkSourcePortArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersNoteTextArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersNoteUpdatedAtArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersNoteUpdatedByArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersProcessLaunchedAtArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersProcessNameArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersProcessParentPidArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersProcessPathArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersProcessPidArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersProcessTerminatedAtArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersProductArnArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersProductFieldArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersProductNameArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersRecommendationTextArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersRecordStateArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersRelatedFindingsIdArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersRelatedFindingsProductArnArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceAwsEc2InstanceIamInstanceProfileArnArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceAwsEc2InstanceImageIdArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceAwsEc2InstanceIpv4AddressArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceAwsEc2InstanceIpv6AddressArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceAwsEc2InstanceKeyNameArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceAwsEc2InstanceLaunchedAtArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceAwsEc2InstanceSubnetIdArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceAwsEc2InstanceTypeArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceAwsEc2InstanceVpcIdArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceAwsIamAccessKeyCreatedAtArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceAwsIamAccessKeyStatusArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceAwsIamAccessKeyUserNameArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceAwsS3BucketOwnerIdArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceAwsS3BucketOwnerNameArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceContainerImageIdArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceContainerImageNameArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceContainerLaunchedAtArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceContainerNameArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceDetailsOtherArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceIdArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourcePartitionArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceRegionArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceTagArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersResourceTypeArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersSeverityLabelArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersSourceUrlArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersThreatIntelIndicatorCategoryArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersThreatIntelIndicatorLastObservedAtArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersThreatIntelIndicatorSourceArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersThreatIntelIndicatorSourceUrlArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersThreatIntelIndicatorTypeArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersThreatIntelIndicatorValueArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersTitleArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersTypeArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersUpdatedAtArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersUserDefinedValueArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersVerificationStateArgs;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersWorkflowStatusArgs;
import java.util.List;
import javax.annotation.Nullable;


public final class InsightFiltersArgs {

    /**
     * AWS account ID that a finding is generated in. See String_Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersAwsAccountIdArgs>> awsAccountIds;

    public List<InsightFiltersAwsAccountIdArgs> awsAccountIds() {
        if (awsAccountIds == null) return null;
        return awsAccountIds.getValue("InsightFiltersArgs.awsAccountIds");
    }

    /**
     * The name of the findings provider (company) that owns the solution (product) that generates findings. See String_Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersCompanyNameArgs>> companyNames;

    public List<InsightFiltersCompanyNameArgs> companyNames() {
        if (companyNames == null) return null;
        return companyNames.getValue("InsightFiltersArgs.companyNames");
    }

    /**
     * Exclusive to findings that are generated as the result of a check run against a specific rule in a supported standard, such as CIS AWS Foundations. Contains security standard-related finding details. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersComplianceStatusArgs>> complianceStatuses;

    public List<InsightFiltersComplianceStatusArgs> complianceStatuses() {
        if (complianceStatuses == null) return null;
        return complianceStatuses.getValue("InsightFiltersArgs.complianceStatuses");
    }

    /**
     * A finding&#39;s confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify. Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence. See Number Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersConfidenceArgs>> confidences;

    public List<InsightFiltersConfidenceArgs> confidences() {
        if (confidences == null) return null;
        return confidences.getValue("InsightFiltersArgs.confidences");
    }

    /**
     * An ISO8601-formatted timestamp that indicates when the security-findings provider captured the potential security issue that a finding captured. See Date Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersCreatedAtArgs>> createdAts;

    public List<InsightFiltersCreatedAtArgs> createdAts() {
        if (createdAts == null) return null;
        return createdAts.getValue("InsightFiltersArgs.createdAts");
    }

    /**
     * The level of importance assigned to the resources associated with the finding. A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources. See Number Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersCriticalityArgs>> criticalities;

    public List<InsightFiltersCriticalityArgs> criticalities() {
        if (criticalities == null) return null;
        return criticalities.getValue("InsightFiltersArgs.criticalities");
    }

    /**
     * A finding&#39;s description. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersDescriptionArgs>> descriptions;

    public List<InsightFiltersDescriptionArgs> descriptions() {
        if (descriptions == null) return null;
        return descriptions.getValue("InsightFiltersArgs.descriptions");
    }

    /**
     * The finding provider value for the finding confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify. Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence. See Number Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersFindingProviderFieldsConfidenceArgs>> findingProviderFieldsConfidences;

    public List<InsightFiltersFindingProviderFieldsConfidenceArgs> findingProviderFieldsConfidences() {
        if (findingProviderFieldsConfidences == null) return null;
        return findingProviderFieldsConfidences.getValue("InsightFiltersArgs.findingProviderFieldsConfidences");
    }

    /**
     * The finding provider value for the level of importance assigned to the resources associated with the findings. A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources. See Number Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersFindingProviderFieldsCriticalityArgs>> findingProviderFieldsCriticalities;

    public List<InsightFiltersFindingProviderFieldsCriticalityArgs> findingProviderFieldsCriticalities() {
        if (findingProviderFieldsCriticalities == null) return null;
        return findingProviderFieldsCriticalities.getValue("InsightFiltersArgs.findingProviderFieldsCriticalities");
    }

    /**
     * The finding identifier of a related finding that is identified by the finding provider. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersFindingProviderFieldsRelatedFindingsIdArgs>> findingProviderFieldsRelatedFindingsIds;

    public List<InsightFiltersFindingProviderFieldsRelatedFindingsIdArgs> findingProviderFieldsRelatedFindingsIds() {
        if (findingProviderFieldsRelatedFindingsIds == null) return null;
        return findingProviderFieldsRelatedFindingsIds.getValue("InsightFiltersArgs.findingProviderFieldsRelatedFindingsIds");
    }

    /**
     * The ARN of the solution that generated a related finding that is identified by the finding provider. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersFindingProviderFieldsRelatedFindingsProductArnArgs>> findingProviderFieldsRelatedFindingsProductArns;

    public List<InsightFiltersFindingProviderFieldsRelatedFindingsProductArnArgs> findingProviderFieldsRelatedFindingsProductArns() {
        if (findingProviderFieldsRelatedFindingsProductArns == null) return null;
        return findingProviderFieldsRelatedFindingsProductArns.getValue("InsightFiltersArgs.findingProviderFieldsRelatedFindingsProductArns");
    }

    /**
     * The finding provider value for the severity label. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersFindingProviderFieldsSeverityLabelArgs>> findingProviderFieldsSeverityLabels;

    public List<InsightFiltersFindingProviderFieldsSeverityLabelArgs> findingProviderFieldsSeverityLabels() {
        if (findingProviderFieldsSeverityLabels == null) return null;
        return findingProviderFieldsSeverityLabels.getValue("InsightFiltersArgs.findingProviderFieldsSeverityLabels");
    }

    /**
     * The finding provider&#39;s original value for the severity. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersFindingProviderFieldsSeverityOriginalArgs>> findingProviderFieldsSeverityOriginals;

    public List<InsightFiltersFindingProviderFieldsSeverityOriginalArgs> findingProviderFieldsSeverityOriginals() {
        if (findingProviderFieldsSeverityOriginals == null) return null;
        return findingProviderFieldsSeverityOriginals.getValue("InsightFiltersArgs.findingProviderFieldsSeverityOriginals");
    }

    /**
     * One or more finding types that the finding provider assigned to the finding. Uses the format of `namespace/category/classifier` that classify a finding. Valid namespace values include: `Software and Configuration Checks`, `TTPs`, `Effects`, `Unusual Behaviors`, and `Sensitive Data Identifications`. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersFindingProviderFieldsTypeArgs>> findingProviderFieldsTypes;

    public List<InsightFiltersFindingProviderFieldsTypeArgs> findingProviderFieldsTypes() {
        if (findingProviderFieldsTypes == null) return null;
        return findingProviderFieldsTypes.getValue("InsightFiltersArgs.findingProviderFieldsTypes");
    }

    /**
     * An ISO8601-formatted timestamp that indicates when the security-findings provider first observed the potential security issue that a finding captured. See Date Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersFirstObservedAtArgs>> firstObservedAts;

    public List<InsightFiltersFirstObservedAtArgs> firstObservedAts() {
        if (firstObservedAts == null) return null;
        return firstObservedAts.getValue("InsightFiltersArgs.firstObservedAts");
    }

    /**
     * The identifier for the solution-specific component (a discrete unit of logic) that generated a finding. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersGeneratorIdArgs>> generatorIds;

    public List<InsightFiltersGeneratorIdArgs> generatorIds() {
        if (generatorIds == null) return null;
        return generatorIds.getValue("InsightFiltersArgs.generatorIds");
    }

    /**
     * The security findings provider-specific identifier for a finding. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersIdArgs>> ids;

    public List<InsightFiltersIdArgs> ids() {
        if (ids == null) return null;
        return ids.getValue("InsightFiltersArgs.ids");
    }

    /**
     * A keyword for a finding. See Keyword Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersKeywordArgs>> keywords;

    public List<InsightFiltersKeywordArgs> keywords() {
        if (keywords == null) return null;
        return keywords.getValue("InsightFiltersArgs.keywords");
    }

    /**
     * An ISO8601-formatted timestamp that indicates when the security-findings provider most recently observed the potential security issue that a finding captured. See Date Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersLastObservedAtArgs>> lastObservedAts;

    public List<InsightFiltersLastObservedAtArgs> lastObservedAts() {
        if (lastObservedAts == null) return null;
        return lastObservedAts.getValue("InsightFiltersArgs.lastObservedAts");
    }

    /**
     * The name of the malware that was observed. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersMalwareNameArgs>> malwareNames;

    public List<InsightFiltersMalwareNameArgs> malwareNames() {
        if (malwareNames == null) return null;
        return malwareNames.getValue("InsightFiltersArgs.malwareNames");
    }

    /**
     * The filesystem path of the malware that was observed. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersMalwarePathArgs>> malwarePaths;

    public List<InsightFiltersMalwarePathArgs> malwarePaths() {
        if (malwarePaths == null) return null;
        return malwarePaths.getValue("InsightFiltersArgs.malwarePaths");
    }

    /**
     * The state of the malware that was observed. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersMalwareStateArgs>> malwareStates;

    public List<InsightFiltersMalwareStateArgs> malwareStates() {
        if (malwareStates == null) return null;
        return malwareStates.getValue("InsightFiltersArgs.malwareStates");
    }

    /**
     * The type of the malware that was observed. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersMalwareTypeArgs>> malwareTypes;

    public List<InsightFiltersMalwareTypeArgs> malwareTypes() {
        if (malwareTypes == null) return null;
        return malwareTypes.getValue("InsightFiltersArgs.malwareTypes");
    }

    /**
     * The destination domain of network-related information about a finding. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersNetworkDestinationDomainArgs>> networkDestinationDomains;

    public List<InsightFiltersNetworkDestinationDomainArgs> networkDestinationDomains() {
        if (networkDestinationDomains == null) return null;
        return networkDestinationDomains.getValue("InsightFiltersArgs.networkDestinationDomains");
    }

    /**
     * The destination IPv4 address of network-related information about a finding. See Ip Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersNetworkDestinationIpv4Args>> networkDestinationIpv4s;

    public List<InsightFiltersNetworkDestinationIpv4Args> networkDestinationIpv4s() {
        if (networkDestinationIpv4s == null) return null;
        return networkDestinationIpv4s.getValue("InsightFiltersArgs.networkDestinationIpv4s");
    }

    /**
     * The destination IPv6 address of network-related information about a finding. See Ip Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersNetworkDestinationIpv6Args>> networkDestinationIpv6s;

    public List<InsightFiltersNetworkDestinationIpv6Args> networkDestinationIpv6s() {
        if (networkDestinationIpv6s == null) return null;
        return networkDestinationIpv6s.getValue("InsightFiltersArgs.networkDestinationIpv6s");
    }

    /**
     * The destination port of network-related information about a finding. See Number Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersNetworkDestinationPortArgs>> networkDestinationPorts;

    public List<InsightFiltersNetworkDestinationPortArgs> networkDestinationPorts() {
        if (networkDestinationPorts == null) return null;
        return networkDestinationPorts.getValue("InsightFiltersArgs.networkDestinationPorts");
    }

    /**
     * Indicates the direction of network traffic associated with a finding. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersNetworkDirectionArgs>> networkDirections;

    public List<InsightFiltersNetworkDirectionArgs> networkDirections() {
        if (networkDirections == null) return null;
        return networkDirections.getValue("InsightFiltersArgs.networkDirections");
    }

    /**
     * The protocol of network-related information about a finding. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersNetworkProtocolArgs>> networkProtocols;

    public List<InsightFiltersNetworkProtocolArgs> networkProtocols() {
        if (networkProtocols == null) return null;
        return networkProtocols.getValue("InsightFiltersArgs.networkProtocols");
    }

    /**
     * The source domain of network-related information about a finding. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersNetworkSourceDomainArgs>> networkSourceDomains;

    public List<InsightFiltersNetworkSourceDomainArgs> networkSourceDomains() {
        if (networkSourceDomains == null) return null;
        return networkSourceDomains.getValue("InsightFiltersArgs.networkSourceDomains");
    }

    /**
     * The source IPv4 address of network-related information about a finding. See Ip Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersNetworkSourceIpv4Args>> networkSourceIpv4s;

    public List<InsightFiltersNetworkSourceIpv4Args> networkSourceIpv4s() {
        if (networkSourceIpv4s == null) return null;
        return networkSourceIpv4s.getValue("InsightFiltersArgs.networkSourceIpv4s");
    }

    /**
     * The source IPv6 address of network-related information about a finding. See Ip Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersNetworkSourceIpv6Args>> networkSourceIpv6s;

    public List<InsightFiltersNetworkSourceIpv6Args> networkSourceIpv6s() {
        if (networkSourceIpv6s == null) return null;
        return networkSourceIpv6s.getValue("InsightFiltersArgs.networkSourceIpv6s");
    }

    /**
     * The source media access control (MAC) address of network-related information about a finding. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersNetworkSourceMacArgs>> networkSourceMacs;

    public List<InsightFiltersNetworkSourceMacArgs> networkSourceMacs() {
        if (networkSourceMacs == null) return null;
        return networkSourceMacs.getValue("InsightFiltersArgs.networkSourceMacs");
    }

    /**
     * The source port of network-related information about a finding. See Number Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersNetworkSourcePortArgs>> networkSourcePorts;

    public List<InsightFiltersNetworkSourcePortArgs> networkSourcePorts() {
        if (networkSourcePorts == null) return null;
        return networkSourcePorts.getValue("InsightFiltersArgs.networkSourcePorts");
    }

    /**
     * The text of a note. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersNoteTextArgs>> noteTexts;

    public List<InsightFiltersNoteTextArgs> noteTexts() {
        if (noteTexts == null) return null;
        return noteTexts.getValue("InsightFiltersArgs.noteTexts");
    }

    /**
     * The timestamp of when the note was updated. See Date Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersNoteUpdatedAtArgs>> noteUpdatedAts;

    public List<InsightFiltersNoteUpdatedAtArgs> noteUpdatedAts() {
        if (noteUpdatedAts == null) return null;
        return noteUpdatedAts.getValue("InsightFiltersArgs.noteUpdatedAts");
    }

    /**
     * The principal that created a note. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersNoteUpdatedByArgs>> noteUpdatedBies;

    public List<InsightFiltersNoteUpdatedByArgs> noteUpdatedBies() {
        if (noteUpdatedBies == null) return null;
        return noteUpdatedBies.getValue("InsightFiltersArgs.noteUpdatedBies");
    }

    /**
     * The date/time that the process was launched. See Date Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersProcessLaunchedAtArgs>> processLaunchedAts;

    public List<InsightFiltersProcessLaunchedAtArgs> processLaunchedAts() {
        if (processLaunchedAts == null) return null;
        return processLaunchedAts.getValue("InsightFiltersArgs.processLaunchedAts");
    }

    /**
     * The name of the process. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersProcessNameArgs>> processNames;

    public List<InsightFiltersProcessNameArgs> processNames() {
        if (processNames == null) return null;
        return processNames.getValue("InsightFiltersArgs.processNames");
    }

    /**
     * The parent process ID. See Number Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersProcessParentPidArgs>> processParentPids;

    public List<InsightFiltersProcessParentPidArgs> processParentPids() {
        if (processParentPids == null) return null;
        return processParentPids.getValue("InsightFiltersArgs.processParentPids");
    }

    /**
     * The path to the process executable. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersProcessPathArgs>> processPaths;

    public List<InsightFiltersProcessPathArgs> processPaths() {
        if (processPaths == null) return null;
        return processPaths.getValue("InsightFiltersArgs.processPaths");
    }

    /**
     * The process ID. See Number Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersProcessPidArgs>> processPids;

    public List<InsightFiltersProcessPidArgs> processPids() {
        if (processPids == null) return null;
        return processPids.getValue("InsightFiltersArgs.processPids");
    }

    /**
     * The date/time that the process was terminated. See Date Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersProcessTerminatedAtArgs>> processTerminatedAts;

    public List<InsightFiltersProcessTerminatedAtArgs> processTerminatedAts() {
        if (processTerminatedAts == null) return null;
        return processTerminatedAts.getValue("InsightFiltersArgs.processTerminatedAts");
    }

    /**
     * The ARN generated by Security Hub that uniquely identifies a third-party company (security findings provider) after this provider&#39;s product (solution that generates findings) is registered with Security Hub. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersProductArnArgs>> productArns;

    public List<InsightFiltersProductArnArgs> productArns() {
        if (productArns == null) return null;
        return productArns.getValue("InsightFiltersArgs.productArns");
    }

    /**
     * A data type where security-findings providers can include additional solution-specific details that aren&#39;t part of the defined `AwsSecurityFinding` format. See Map Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersProductFieldArgs>> productFields;

    public List<InsightFiltersProductFieldArgs> productFields() {
        if (productFields == null) return null;
        return productFields.getValue("InsightFiltersArgs.productFields");
    }

    /**
     * The name of the solution (product) that generates findings. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersProductNameArgs>> productNames;

    public List<InsightFiltersProductNameArgs> productNames() {
        if (productNames == null) return null;
        return productNames.getValue("InsightFiltersArgs.productNames");
    }

    /**
     * The recommendation of what to do about the issue described in a finding. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersRecommendationTextArgs>> recommendationTexts;

    public List<InsightFiltersRecommendationTextArgs> recommendationTexts() {
        if (recommendationTexts == null) return null;
        return recommendationTexts.getValue("InsightFiltersArgs.recommendationTexts");
    }

    /**
     * The updated record state for the finding. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersRecordStateArgs>> recordStates;

    public List<InsightFiltersRecordStateArgs> recordStates() {
        if (recordStates == null) return null;
        return recordStates.getValue("InsightFiltersArgs.recordStates");
    }

    /**
     * The solution-generated identifier for a related finding. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersRelatedFindingsIdArgs>> relatedFindingsIds;

    public List<InsightFiltersRelatedFindingsIdArgs> relatedFindingsIds() {
        if (relatedFindingsIds == null) return null;
        return relatedFindingsIds.getValue("InsightFiltersArgs.relatedFindingsIds");
    }

    /**
     * The ARN of the solution that generated a related finding. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersRelatedFindingsProductArnArgs>> relatedFindingsProductArns;

    public List<InsightFiltersRelatedFindingsProductArnArgs> relatedFindingsProductArns() {
        if (relatedFindingsProductArns == null) return null;
        return relatedFindingsProductArns.getValue("InsightFiltersArgs.relatedFindingsProductArns");
    }

    /**
     * The IAM profile ARN of the instance. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersResourceAwsEc2InstanceIamInstanceProfileArnArgs>> resourceAwsEc2InstanceIamInstanceProfileArns;

    public List<InsightFiltersResourceAwsEc2InstanceIamInstanceProfileArnArgs> resourceAwsEc2InstanceIamInstanceProfileArns() {
        if (resourceAwsEc2InstanceIamInstanceProfileArns == null) return null;
        return resourceAwsEc2InstanceIamInstanceProfileArns.getValue("InsightFiltersArgs.resourceAwsEc2InstanceIamInstanceProfileArns");
    }

    /**
     * The Amazon Machine Image (AMI) ID of the instance. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersResourceAwsEc2InstanceImageIdArgs>> resourceAwsEc2InstanceImageIds;

    public List<InsightFiltersResourceAwsEc2InstanceImageIdArgs> resourceAwsEc2InstanceImageIds() {
        if (resourceAwsEc2InstanceImageIds == null) return null;
        return resourceAwsEc2InstanceImageIds.getValue("InsightFiltersArgs.resourceAwsEc2InstanceImageIds");
    }

    /**
     * The IPv4 addresses associated with the instance. See Ip Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersResourceAwsEc2InstanceIpv4AddressArgs>> resourceAwsEc2InstanceIpv4Addresses;

    public List<InsightFiltersResourceAwsEc2InstanceIpv4AddressArgs> resourceAwsEc2InstanceIpv4Addresses() {
        if (resourceAwsEc2InstanceIpv4Addresses == null) return null;
        return resourceAwsEc2InstanceIpv4Addresses.getValue("InsightFiltersArgs.resourceAwsEc2InstanceIpv4Addresses");
    }

    /**
     * The IPv6 addresses associated with the instance. See Ip Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersResourceAwsEc2InstanceIpv6AddressArgs>> resourceAwsEc2InstanceIpv6Addresses;

    public List<InsightFiltersResourceAwsEc2InstanceIpv6AddressArgs> resourceAwsEc2InstanceIpv6Addresses() {
        if (resourceAwsEc2InstanceIpv6Addresses == null) return null;
        return resourceAwsEc2InstanceIpv6Addresses.getValue("InsightFiltersArgs.resourceAwsEc2InstanceIpv6Addresses");
    }

    /**
     * The key name associated with the instance. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersResourceAwsEc2InstanceKeyNameArgs>> resourceAwsEc2InstanceKeyNames;

    public List<InsightFiltersResourceAwsEc2InstanceKeyNameArgs> resourceAwsEc2InstanceKeyNames() {
        if (resourceAwsEc2InstanceKeyNames == null) return null;
        return resourceAwsEc2InstanceKeyNames.getValue("InsightFiltersArgs.resourceAwsEc2InstanceKeyNames");
    }

    /**
     * The date and time the instance was launched. See Date Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersResourceAwsEc2InstanceLaunchedAtArgs>> resourceAwsEc2InstanceLaunchedAts;

    public List<InsightFiltersResourceAwsEc2InstanceLaunchedAtArgs> resourceAwsEc2InstanceLaunchedAts() {
        if (resourceAwsEc2InstanceLaunchedAts == null) return null;
        return resourceAwsEc2InstanceLaunchedAts.getValue("InsightFiltersArgs.resourceAwsEc2InstanceLaunchedAts");
    }

    /**
     * The identifier of the subnet that the instance was launched in. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersResourceAwsEc2InstanceSubnetIdArgs>> resourceAwsEc2InstanceSubnetIds;

    public List<InsightFiltersResourceAwsEc2InstanceSubnetIdArgs> resourceAwsEc2InstanceSubnetIds() {
        if (resourceAwsEc2InstanceSubnetIds == null) return null;
        return resourceAwsEc2InstanceSubnetIds.getValue("InsightFiltersArgs.resourceAwsEc2InstanceSubnetIds");
    }

    /**
     * The instance type of the instance. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersResourceAwsEc2InstanceTypeArgs>> resourceAwsEc2InstanceTypes;

    public List<InsightFiltersResourceAwsEc2InstanceTypeArgs> resourceAwsEc2InstanceTypes() {
        if (resourceAwsEc2InstanceTypes == null) return null;
        return resourceAwsEc2InstanceTypes.getValue("InsightFiltersArgs.resourceAwsEc2InstanceTypes");
    }

    /**
     * The identifier of the VPC that the instance was launched in. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersResourceAwsEc2InstanceVpcIdArgs>> resourceAwsEc2InstanceVpcIds;

    public List<InsightFiltersResourceAwsEc2InstanceVpcIdArgs> resourceAwsEc2InstanceVpcIds() {
        if (resourceAwsEc2InstanceVpcIds == null) return null;
        return resourceAwsEc2InstanceVpcIds.getValue("InsightFiltersArgs.resourceAwsEc2InstanceVpcIds");
    }

    /**
     * The creation date/time of the IAM access key related to a finding. See Date Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersResourceAwsIamAccessKeyCreatedAtArgs>> resourceAwsIamAccessKeyCreatedAts;

    public List<InsightFiltersResourceAwsIamAccessKeyCreatedAtArgs> resourceAwsIamAccessKeyCreatedAts() {
        if (resourceAwsIamAccessKeyCreatedAts == null) return null;
        return resourceAwsIamAccessKeyCreatedAts.getValue("InsightFiltersArgs.resourceAwsIamAccessKeyCreatedAts");
    }

    /**
     * The status of the IAM access key related to a finding. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersResourceAwsIamAccessKeyStatusArgs>> resourceAwsIamAccessKeyStatuses;

    public List<InsightFiltersResourceAwsIamAccessKeyStatusArgs> resourceAwsIamAccessKeyStatuses() {
        if (resourceAwsIamAccessKeyStatuses == null) return null;
        return resourceAwsIamAccessKeyStatuses.getValue("InsightFiltersArgs.resourceAwsIamAccessKeyStatuses");
    }

    /**
     * The user associated with the IAM access key related to a finding. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersResourceAwsIamAccessKeyUserNameArgs>> resourceAwsIamAccessKeyUserNames;

    public List<InsightFiltersResourceAwsIamAccessKeyUserNameArgs> resourceAwsIamAccessKeyUserNames() {
        if (resourceAwsIamAccessKeyUserNames == null) return null;
        return resourceAwsIamAccessKeyUserNames.getValue("InsightFiltersArgs.resourceAwsIamAccessKeyUserNames");
    }

    /**
     * The canonical user ID of the owner of the S3 bucket. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersResourceAwsS3BucketOwnerIdArgs>> resourceAwsS3BucketOwnerIds;

    public List<InsightFiltersResourceAwsS3BucketOwnerIdArgs> resourceAwsS3BucketOwnerIds() {
        if (resourceAwsS3BucketOwnerIds == null) return null;
        return resourceAwsS3BucketOwnerIds.getValue("InsightFiltersArgs.resourceAwsS3BucketOwnerIds");
    }

    /**
     * The display name of the owner of the S3 bucket. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersResourceAwsS3BucketOwnerNameArgs>> resourceAwsS3BucketOwnerNames;

    public List<InsightFiltersResourceAwsS3BucketOwnerNameArgs> resourceAwsS3BucketOwnerNames() {
        if (resourceAwsS3BucketOwnerNames == null) return null;
        return resourceAwsS3BucketOwnerNames.getValue("InsightFiltersArgs.resourceAwsS3BucketOwnerNames");
    }

    /**
     * The identifier of the image related to a finding. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersResourceContainerImageIdArgs>> resourceContainerImageIds;

    public List<InsightFiltersResourceContainerImageIdArgs> resourceContainerImageIds() {
        if (resourceContainerImageIds == null) return null;
        return resourceContainerImageIds.getValue("InsightFiltersArgs.resourceContainerImageIds");
    }

    /**
     * The name of the image related to a finding. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersResourceContainerImageNameArgs>> resourceContainerImageNames;

    public List<InsightFiltersResourceContainerImageNameArgs> resourceContainerImageNames() {
        if (resourceContainerImageNames == null) return null;
        return resourceContainerImageNames.getValue("InsightFiltersArgs.resourceContainerImageNames");
    }

    /**
     * The date/time that the container was started. See Date Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersResourceContainerLaunchedAtArgs>> resourceContainerLaunchedAts;

    public List<InsightFiltersResourceContainerLaunchedAtArgs> resourceContainerLaunchedAts() {
        if (resourceContainerLaunchedAts == null) return null;
        return resourceContainerLaunchedAts.getValue("InsightFiltersArgs.resourceContainerLaunchedAts");
    }

    /**
     * The name of the container related to a finding. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersResourceContainerNameArgs>> resourceContainerNames;

    public List<InsightFiltersResourceContainerNameArgs> resourceContainerNames() {
        if (resourceContainerNames == null) return null;
        return resourceContainerNames.getValue("InsightFiltersArgs.resourceContainerNames");
    }

    /**
     * The details of a resource that doesn&#39;t have a specific subfield for the resource type defined. See Map Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersResourceDetailsOtherArgs>> resourceDetailsOthers;

    public List<InsightFiltersResourceDetailsOtherArgs> resourceDetailsOthers() {
        if (resourceDetailsOthers == null) return null;
        return resourceDetailsOthers.getValue("InsightFiltersArgs.resourceDetailsOthers");
    }

    /**
     * The canonical identifier for the given resource type. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersResourceIdArgs>> resourceIds;

    public List<InsightFiltersResourceIdArgs> resourceIds() {
        if (resourceIds == null) return null;
        return resourceIds.getValue("InsightFiltersArgs.resourceIds");
    }

    /**
     * The canonical AWS partition name that the Region is assigned to. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersResourcePartitionArgs>> resourcePartitions;

    public List<InsightFiltersResourcePartitionArgs> resourcePartitions() {
        if (resourcePartitions == null) return null;
        return resourcePartitions.getValue("InsightFiltersArgs.resourcePartitions");
    }

    /**
     * The canonical AWS external Region name where this resource is located. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersResourceRegionArgs>> resourceRegions;

    public List<InsightFiltersResourceRegionArgs> resourceRegions() {
        if (resourceRegions == null) return null;
        return resourceRegions.getValue("InsightFiltersArgs.resourceRegions");
    }

    /**
     * A list of AWS tags associated with a resource at the time the finding was processed. See Map Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersResourceTagArgs>> resourceTags;

    public List<InsightFiltersResourceTagArgs> resourceTags() {
        if (resourceTags == null) return null;
        return resourceTags.getValue("InsightFiltersArgs.resourceTags");
    }

    /**
     * Specifies the type of the resource that details are provided for. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersResourceTypeArgs>> resourceTypes;

    public List<InsightFiltersResourceTypeArgs> resourceTypes() {
        if (resourceTypes == null) return null;
        return resourceTypes.getValue("InsightFiltersArgs.resourceTypes");
    }

    /**
     * The label of a finding&#39;s severity. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersSeverityLabelArgs>> severityLabels;

    public List<InsightFiltersSeverityLabelArgs> severityLabels() {
        if (severityLabels == null) return null;
        return severityLabels.getValue("InsightFiltersArgs.severityLabels");
    }

    /**
     * A URL that links to a page about the current finding in the security-findings provider&#39;s solution. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersSourceUrlArgs>> sourceUrls;

    public List<InsightFiltersSourceUrlArgs> sourceUrls() {
        if (sourceUrls == null) return null;
        return sourceUrls.getValue("InsightFiltersArgs.sourceUrls");
    }

    /**
     * The category of a threat intelligence indicator. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersThreatIntelIndicatorCategoryArgs>> threatIntelIndicatorCategories;

    public List<InsightFiltersThreatIntelIndicatorCategoryArgs> threatIntelIndicatorCategories() {
        if (threatIntelIndicatorCategories == null) return null;
        return threatIntelIndicatorCategories.getValue("InsightFiltersArgs.threatIntelIndicatorCategories");
    }

    /**
     * The date/time of the last observation of a threat intelligence indicator. See Date Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersThreatIntelIndicatorLastObservedAtArgs>> threatIntelIndicatorLastObservedAts;

    public List<InsightFiltersThreatIntelIndicatorLastObservedAtArgs> threatIntelIndicatorLastObservedAts() {
        if (threatIntelIndicatorLastObservedAts == null) return null;
        return threatIntelIndicatorLastObservedAts.getValue("InsightFiltersArgs.threatIntelIndicatorLastObservedAts");
    }

    /**
     * The URL for more details from the source of the threat intelligence. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersThreatIntelIndicatorSourceUrlArgs>> threatIntelIndicatorSourceUrls;

    public List<InsightFiltersThreatIntelIndicatorSourceUrlArgs> threatIntelIndicatorSourceUrls() {
        if (threatIntelIndicatorSourceUrls == null) return null;
        return threatIntelIndicatorSourceUrls.getValue("InsightFiltersArgs.threatIntelIndicatorSourceUrls");
    }

    /**
     * The source of the threat intelligence. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersThreatIntelIndicatorSourceArgs>> threatIntelIndicatorSources;

    public List<InsightFiltersThreatIntelIndicatorSourceArgs> threatIntelIndicatorSources() {
        if (threatIntelIndicatorSources == null) return null;
        return threatIntelIndicatorSources.getValue("InsightFiltersArgs.threatIntelIndicatorSources");
    }

    /**
     * The type of a threat intelligence indicator. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersThreatIntelIndicatorTypeArgs>> threatIntelIndicatorTypes;

    public List<InsightFiltersThreatIntelIndicatorTypeArgs> threatIntelIndicatorTypes() {
        if (threatIntelIndicatorTypes == null) return null;
        return threatIntelIndicatorTypes.getValue("InsightFiltersArgs.threatIntelIndicatorTypes");
    }

    /**
     * The value of a threat intelligence indicator. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersThreatIntelIndicatorValueArgs>> threatIntelIndicatorValues;

    public List<InsightFiltersThreatIntelIndicatorValueArgs> threatIntelIndicatorValues() {
        if (threatIntelIndicatorValues == null) return null;
        return threatIntelIndicatorValues.getValue("InsightFiltersArgs.threatIntelIndicatorValues");
    }

    /**
     * A finding&#39;s title. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersTitleArgs>> titles;

    public List<InsightFiltersTitleArgs> titles() {
        if (titles == null) return null;
        return titles.getValue("InsightFiltersArgs.titles");
    }

    /**
     * A finding type in the format of `namespace/category/classifier` that classifies a finding. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersTypeArgs>> types;

    public List<InsightFiltersTypeArgs> types() {
        if (types == null) return null;
        return types.getValue("InsightFiltersArgs.types");
    }

    /**
     * An ISO8601-formatted timestamp that indicates when the security-findings provider last updated the finding record. See Date Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersUpdatedAtArgs>> updatedAts;

    public List<InsightFiltersUpdatedAtArgs> updatedAts() {
        if (updatedAts == null) return null;
        return updatedAts.getValue("InsightFiltersArgs.updatedAts");
    }

    /**
     * A list of name/value string pairs associated with the finding. These are custom, user-defined fields added to a finding. See Map Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersUserDefinedValueArgs>> userDefinedValues;

    public List<InsightFiltersUserDefinedValueArgs> userDefinedValues() {
        if (userDefinedValues == null) return null;
        return userDefinedValues.getValue("InsightFiltersArgs.userDefinedValues");
    }

    /**
     * The veracity of a finding. See String Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersVerificationStateArgs>> verificationStates;

    public List<InsightFiltersVerificationStateArgs> verificationStates() {
        if (verificationStates == null) return null;
        return verificationStates.getValue("InsightFiltersArgs.verificationStates");
    }

    /**
     * The status of the investigation into a finding. See Workflow Status Filter below for more details.
     * 
     */
    private UndeferrableValue<List<InsightFiltersWorkflowStatusArgs>> workflowStatuses;

    public List<InsightFiltersWorkflowStatusArgs> workflowStatuses() {
        if (workflowStatuses == null) return null;
        return workflowStatuses.getValue("InsightFiltersArgs.workflowStatuses");
    }

}
