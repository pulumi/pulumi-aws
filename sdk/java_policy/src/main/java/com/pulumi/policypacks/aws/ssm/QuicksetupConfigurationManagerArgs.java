// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ssm;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ssm.inputs.QuicksetupConfigurationManagerConfigurationDefinitionArgs;
import com.pulumi.policypacks.aws.ssm.inputs.QuicksetupConfigurationManagerTimeoutsArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ssm/quicksetupConfigurationManager:QuicksetupConfigurationManager")
public final class QuicksetupConfigurationManagerArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Definition of the Quick Setup configuration that the configuration manager deploys. See `configuration_definition` below.
     * 
     */
    private UndeferrableValue<QuicksetupConfigurationManagerConfigurationDefinitionArgs> configurationDefinition;

    public QuicksetupConfigurationManagerConfigurationDefinitionArgs configurationDefinition() {
        if (configurationDefinition == null) return null;
        return configurationDefinition.getValue("QuicksetupConfigurationManagerArgs.configurationDefinition");
    }

    /**
     * Description of the configuration manager.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("QuicksetupConfigurationManagerArgs.description");
    }

    /**
     * Configuration manager name.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("QuicksetupConfigurationManagerArgs.name");
    }

    /**
     * Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("QuicksetupConfigurationManagerArgs.tags");
    }

    private UndeferrableValue<QuicksetupConfigurationManagerTimeoutsArgs> timeouts;

    public QuicksetupConfigurationManagerTimeoutsArgs timeouts() {
        if (timeouts == null) return null;
        return timeouts.getValue("QuicksetupConfigurationManagerArgs.timeouts");
    }

}
