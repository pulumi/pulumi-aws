// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.s3.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.s3.outputs.BucketV2LifecycleRuleExpiration;
import com.pulumi.policypacks.aws.s3.outputs.BucketV2LifecycleRuleNoncurrentVersionExpiration;
import com.pulumi.policypacks.aws.s3.outputs.BucketV2LifecycleRuleNoncurrentVersionTransition;
import com.pulumi.policypacks.aws.s3.outputs.BucketV2LifecycleRuleTransition;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


public final class BucketV2LifecycleRule {

    /**
     * Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.
     * 
     */
    private @Nullable UndeferrableValue<Integer> abortIncompleteMultipartUploadDays;

    public @Nullable Integer abortIncompleteMultipartUploadDays() {
        if (abortIncompleteMultipartUploadDays == null) return null;
        return abortIncompleteMultipartUploadDays.getValue("BucketV2LifecycleRule.abortIncompleteMultipartUploadDays");
    }

    /**
     * Specifies lifecycle rule status.
     * 
     */
    private UndeferrableValue<Boolean> enabled;

    public Boolean enabled() {
        if (enabled == null) return null;
        return enabled.getValue("BucketV2LifecycleRule.enabled");
    }

    /**
     * Specifies a period in the object&#39;s expire. See Expiration below for details.
     * 
     */
    private @Nullable UndeferrableValue<List<BucketV2LifecycleRuleExpiration>> expirations;

    public @Nullable List<BucketV2LifecycleRuleExpiration> expirations() {
        if (expirations == null) return null;
        return expirations.getValue("BucketV2LifecycleRule.expirations");
    }

    /**
     * Unique identifier for the rule. Must be less than or equal to 255 characters in length.
     * 
     */
    private @Nullable UndeferrableValue<String> id;

    public @Nullable String id() {
        if (id == null) return null;
        return id.getValue("BucketV2LifecycleRule.id");
    }

    /**
     * Specifies when noncurrent object versions expire. See Noncurrent Version Expiration below for details.
     * 
     */
    private @Nullable UndeferrableValue<List<BucketV2LifecycleRuleNoncurrentVersionExpiration>> noncurrentVersionExpirations;

    public @Nullable List<BucketV2LifecycleRuleNoncurrentVersionExpiration> noncurrentVersionExpirations() {
        if (noncurrentVersionExpirations == null) return null;
        return noncurrentVersionExpirations.getValue("BucketV2LifecycleRule.noncurrentVersionExpirations");
    }

    /**
     * Specifies when noncurrent object versions transitions. See Noncurrent Version Transition below for details.
     * 
     */
    private @Nullable UndeferrableValue<List<BucketV2LifecycleRuleNoncurrentVersionTransition>> noncurrentVersionTransitions;

    public @Nullable List<BucketV2LifecycleRuleNoncurrentVersionTransition> noncurrentVersionTransitions() {
        if (noncurrentVersionTransitions == null) return null;
        return noncurrentVersionTransitions.getValue("BucketV2LifecycleRule.noncurrentVersionTransitions");
    }

    /**
     * Object key prefix identifying one or more objects to which the rule applies.
     * 
     */
    private @Nullable UndeferrableValue<String> prefix;

    public @Nullable String prefix() {
        if (prefix == null) return null;
        return prefix.getValue("BucketV2LifecycleRule.prefix");
    }

    /**
     * Specifies object tags key and value.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("BucketV2LifecycleRule.tags");
    }

    /**
     * Specifies a period in the object&#39;s transitions. See Transition below for details.
     * 
     */
    private @Nullable UndeferrableValue<List<BucketV2LifecycleRuleTransition>> transitions;

    public @Nullable List<BucketV2LifecycleRuleTransition> transitions() {
        if (transitions == null) return null;
        return transitions.getValue("BucketV2LifecycleRule.transitions");
    }

}
