// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.fis;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.fis.inputs.ExperimentTemplateActionArgs;
import com.pulumi.policypacks.aws.fis.inputs.ExperimentTemplateExperimentOptionsArgs;
import com.pulumi.policypacks.aws.fis.inputs.ExperimentTemplateLogConfigurationArgs;
import com.pulumi.policypacks.aws.fis.inputs.ExperimentTemplateStopConditionArgs;
import com.pulumi.policypacks.aws.fis.inputs.ExperimentTemplateTargetArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:fis/experimentTemplate:ExperimentTemplate")
public final class ExperimentTemplateArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Action to be performed during an experiment. See below.
     * 
     */
    @PolicyResourceProperty(name="actions", flag="unknown_actions")
    private List<ExperimentTemplateActionArgs> value_actions;
    private boolean unknown_actions;
    public List<ExperimentTemplateActionArgs> actions() {
        if (!unknown_actions) return value_actions;
        throw new UndeferrableValueException("Value 'ExperimentTemplateArgs.actions' is not present");
    }

    /**
     * Description for the experiment template.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'ExperimentTemplateArgs.description' is not present");
    }

    /**
     * The experiment options for the experiment template. See experiment_options below for more details!
     * 
     */
    @PolicyResourceProperty(name="experimentOptions", flag="unknown_experimentOptions")
    private ExperimentTemplateExperimentOptionsArgs value_experimentOptions;
    private boolean unknown_experimentOptions;
    public ExperimentTemplateExperimentOptionsArgs experimentOptions() {
        if (!unknown_experimentOptions) return value_experimentOptions;
        throw new UndeferrableValueException("Value 'ExperimentTemplateArgs.experimentOptions' is not present");
    }

    /**
     * The configuration for experiment logging. See below.
     * 
     */
    @PolicyResourceProperty(name="logConfiguration", flag="unknown_logConfiguration")
    private ExperimentTemplateLogConfigurationArgs value_logConfiguration;
    private boolean unknown_logConfiguration;
    public ExperimentTemplateLogConfigurationArgs logConfiguration() {
        if (!unknown_logConfiguration) return value_logConfiguration;
        throw new UndeferrableValueException("Value 'ExperimentTemplateArgs.logConfiguration' is not present");
    }

    /**
     * ARN of an IAM role that grants the AWS FIS service permission to perform service actions on your behalf.
     * 
     */
    @PolicyResourceProperty(name="roleArn", flag="unknown_roleArn")
    private String value_roleArn;
    private boolean unknown_roleArn;
    public String roleArn() {
        if (!unknown_roleArn) return value_roleArn;
        throw new UndeferrableValueException("Value 'ExperimentTemplateArgs.roleArn' is not present");
    }

    /**
     * When an ongoing experiment should be stopped. See below.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="stopConditions", flag="unknown_stopConditions")
    private List<ExperimentTemplateStopConditionArgs> value_stopConditions;
    private boolean unknown_stopConditions;
    public List<ExperimentTemplateStopConditionArgs> stopConditions() {
        if (!unknown_stopConditions) return value_stopConditions;
        throw new UndeferrableValueException("Value 'ExperimentTemplateArgs.stopConditions' is not present");
    }

    /**
     * Key-value mapping of tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'ExperimentTemplateArgs.tags' is not present");
    }

    /**
     * Target of an action. See below.
     * 
     */
    @PolicyResourceProperty(name="targets", flag="unknown_targets")
    private List<ExperimentTemplateTargetArgs> value_targets;
    private boolean unknown_targets;
    public List<ExperimentTemplateTargetArgs> targets() {
        if (!unknown_targets) return value_targets;
        throw new UndeferrableValueException("Value 'ExperimentTemplateArgs.targets' is not present");
    }

}
