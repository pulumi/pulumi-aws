// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.fis;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.fis.inputs.ExperimentTemplateActionArgs;
import com.pulumi.policypacks.aws.fis.inputs.ExperimentTemplateExperimentOptionsArgs;
import com.pulumi.policypacks.aws.fis.inputs.ExperimentTemplateLogConfigurationArgs;
import com.pulumi.policypacks.aws.fis.inputs.ExperimentTemplateStopConditionArgs;
import com.pulumi.policypacks.aws.fis.inputs.ExperimentTemplateTargetArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:fis/experimentTemplate:ExperimentTemplate")
public final class ExperimentTemplateArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Action to be performed during an experiment. See below.
     * 
     */
    private UndeferrableValue<List<ExperimentTemplateActionArgs>> actions;

    public List<ExperimentTemplateActionArgs> actions() {
        if (actions == null) return null;
        return actions.getValue("ExperimentTemplateArgs.actions");
    }

    /**
     * Description for the experiment template.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("ExperimentTemplateArgs.description");
    }

    /**
     * The experiment options for the experiment template. See experiment_options below for more details!
     * 
     */
    private UndeferrableValue<ExperimentTemplateExperimentOptionsArgs> experimentOptions;

    public ExperimentTemplateExperimentOptionsArgs experimentOptions() {
        if (experimentOptions == null) return null;
        return experimentOptions.getValue("ExperimentTemplateArgs.experimentOptions");
    }

    /**
     * The configuration for experiment logging. See below.
     * 
     */
    private UndeferrableValue<ExperimentTemplateLogConfigurationArgs> logConfiguration;

    public ExperimentTemplateLogConfigurationArgs logConfiguration() {
        if (logConfiguration == null) return null;
        return logConfiguration.getValue("ExperimentTemplateArgs.logConfiguration");
    }

    /**
     * ARN of an IAM role that grants the AWS FIS service permission to perform service actions on your behalf.
     * 
     */
    private UndeferrableValue<String> roleArn;

    public String roleArn() {
        if (roleArn == null) return null;
        return roleArn.getValue("ExperimentTemplateArgs.roleArn");
    }

    /**
     * When an ongoing experiment should be stopped. See below.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<List<ExperimentTemplateStopConditionArgs>> stopConditions;

    public List<ExperimentTemplateStopConditionArgs> stopConditions() {
        if (stopConditions == null) return null;
        return stopConditions.getValue("ExperimentTemplateArgs.stopConditions");
    }

    /**
     * Key-value mapping of tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("ExperimentTemplateArgs.tags");
    }

    /**
     * Target of an action. See below.
     * 
     */
    private UndeferrableValue<List<ExperimentTemplateTargetArgs>> targets;

    public List<ExperimentTemplateTargetArgs> targets() {
        if (targets == null) return null;
        return targets.getValue("ExperimentTemplateArgs.targets");
    }

}
