// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.fis.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.fis.inputs.ExperimentTemplateTargetFilterArgs;
import com.pulumi.policypacks.aws.fis.inputs.ExperimentTemplateTargetResourceTagArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


public final class ExperimentTemplateTargetArgs {

    /**
     * Filter(s) for the target. Filters can be used to select resources based on specific attributes returned by the respective describe action of the resource type. For more information, see [Targets for AWS FIS](https://docs.aws.amazon.com/fis/latest/userguide/targets.html#target-filters). See below.
     * 
     */
    @PolicyResourceProperty(name="filters", flag="unknown_filters")
    private List<ExperimentTemplateTargetFilterArgs> value_filters;
    private boolean unknown_filters;
    public List<ExperimentTemplateTargetFilterArgs> filters() {
        if (!unknown_filters) return value_filters;
        throw new UndeferrableValueException("Value 'ExperimentTemplateTargetArgs.filters' is not present");
    }

    /**
     * Friendly name given to the target.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'ExperimentTemplateTargetArgs.name' is not present");
    }

    /**
     * The resource type parameters.
     * 
     * &gt; **NOTE:** The `target` configuration block requires either `resource_arns` or `resource_tag`.
     * 
     */
    @PolicyResourceProperty(name="parameters", flag="unknown_parameters")
    private Map<String,String> value_parameters;
    private boolean unknown_parameters;
    public Map<String,String> parameters() {
        if (!unknown_parameters) return value_parameters;
        throw new UndeferrableValueException("Value 'ExperimentTemplateTargetArgs.parameters' is not present");
    }

    /**
     * Set of ARNs of the resources to target with an action. Conflicts with `resource_tag`.
     * 
     */
    @PolicyResourceProperty(name="resourceArns", flag="unknown_resourceArns")
    private List<String> value_resourceArns;
    private boolean unknown_resourceArns;
    public List<String> resourceArns() {
        if (!unknown_resourceArns) return value_resourceArns;
        throw new UndeferrableValueException("Value 'ExperimentTemplateTargetArgs.resourceArns' is not present");
    }

    /**
     * Tag(s) the resources need to have to be considered a valid target for an action. Conflicts with `resource_arns`. See below.
     * 
     */
    @PolicyResourceProperty(name="resourceTags", flag="unknown_resourceTags")
    private List<ExperimentTemplateTargetResourceTagArgs> value_resourceTags;
    private boolean unknown_resourceTags;
    public List<ExperimentTemplateTargetResourceTagArgs> resourceTags() {
        if (!unknown_resourceTags) return value_resourceTags;
        throw new UndeferrableValueException("Value 'ExperimentTemplateTargetArgs.resourceTags' is not present");
    }

    /**
     * AWS resource type. The resource type must be supported for the specified action. To find out what resource types are supported, see [Targets for AWS FIS](https://docs.aws.amazon.com/fis/latest/userguide/targets.html#resource-types).
     * 
     */
    @PolicyResourceProperty(name="resourceType", flag="unknown_resourceType")
    private String value_resourceType;
    private boolean unknown_resourceType;
    public String resourceType() {
        if (!unknown_resourceType) return value_resourceType;
        throw new UndeferrableValueException("Value 'ExperimentTemplateTargetArgs.resourceType' is not present");
    }

    /**
     * Scopes the identified resources. Valid values are `ALL` (all identified resources), `COUNT(n)` (randomly select `n` of the identified resources), `PERCENT(n)` (randomly select `n` percent of the identified resources).
     * 
     */
    @PolicyResourceProperty(name="selectionMode", flag="unknown_selectionMode")
    private String value_selectionMode;
    private boolean unknown_selectionMode;
    public String selectionMode() {
        if (!unknown_selectionMode) return value_selectionMode;
        throw new UndeferrableValueException("Value 'ExperimentTemplateTargetArgs.selectionMode' is not present");
    }

}
