// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.elb;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.elb.LoadBalancerAccessLogs;
import com.pulumi.policypacks.aws.elb.LoadBalancerHealthCheck;
import com.pulumi.policypacks.aws.elb.LoadBalancerListener;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:elb/loadBalancer:LoadBalancer")
public final class LoadBalancer extends com.pulumi.resources.PolicyResource {

    /**
     * An Access Logs block. Access Logs documented below.
     * 
     */
    public LoadBalancerAccessLogs accessLogs;



    /**
     * The ARN of the ELB
     * 
     */
    public String arn;



    /**
     * The AZ&#39;s to serve traffic in.
     * 
     */
    public List<String> availabilityZones;



    /**
     * Boolean to enable connection draining. Default: `false`
     * 
     */
    public Boolean connectionDraining;



    /**
     * The time in seconds to allow for connections to drain. Default: `300`
     * 
     */
    public Integer connectionDrainingTimeout;



    /**
     * Enable cross-zone load balancing. Default: `true`
     * 
     */
    public Boolean crossZoneLoadBalancing;



    /**
     * Determines how the load balancer handles requests that might pose a security risk to an application due to HTTP desync. Valid values are `monitor`, `defensive` (default), `strictest`.
     * 
     */
    public String desyncMitigationMode;



    /**
     * The DNS name of the ELB
     * 
     */
    public String dnsName;



    /**
     * A health_check block. Health Check documented below.
     * 
     */
    public LoadBalancerHealthCheck healthCheck;



    /**
     * The time in seconds that the connection is allowed to be idle. Default: `60`
     * 
     */
    public Integer idleTimeout;



    /**
     * A list of instance ids to place in the ELB pool.
     * 
     */
    public List<String> instances;



    /**
     * If true, ELB will be an internal ELB.
     * 
     */
    public Boolean internal;



    /**
     * A list of listener blocks. Listeners documented below.
     * 
     */
    public List<LoadBalancerListener> listeners;



    /**
     * The name of the ELB. By default generated by this provider.
     * 
     */
    public String name;



    /**
     * Creates a unique name beginning with the specified
     * prefix. Conflicts with `name`.
     * 
     */
    public String namePrefix;



    /**
     * A list of security group IDs to assign to the ELB.
     * Only valid if creating an ELB within a VPC
     * 
     */
    public List<String> securityGroups;



    /**
     * The name of the security group that you can use as
     * part of your inbound rules for your load balancer&#39;s back-end application
     * instances. Use this for Classic or Default VPC only.
     * 
     */
    public String sourceSecurityGroup;



    /**
     * The ID of the security group that you can use as
     * part of your inbound rules for your load balancer&#39;s back-end application
     * instances. Only available on ELBs launched in a VPC.
     * 
     */
    public String sourceSecurityGroupId;



    /**
     * A list of subnet IDs to attach to the ELB. When an update to subnets will remove all current subnets, this will force a new resource.
     * 
     */
    public List<String> subnets;



    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     * Exactly one of `availability_zones` or `subnets` must be specified: this
     * determines if the ELB exists in a VPC or in EC2-classic.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



    /**
     * The canonical hosted zone ID of the ELB (to be used in a Route 53 Alias record)
     * 
     */
    public String zoneId;



}
