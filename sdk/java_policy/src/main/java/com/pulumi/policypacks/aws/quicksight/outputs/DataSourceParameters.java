// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.quicksight.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.quicksight.outputs.DataSourceParametersAmazonElasticsearch;
import com.pulumi.policypacks.aws.quicksight.outputs.DataSourceParametersAthena;
import com.pulumi.policypacks.aws.quicksight.outputs.DataSourceParametersAurora;
import com.pulumi.policypacks.aws.quicksight.outputs.DataSourceParametersAuroraPostgresql;
import com.pulumi.policypacks.aws.quicksight.outputs.DataSourceParametersAwsIotAnalytics;
import com.pulumi.policypacks.aws.quicksight.outputs.DataSourceParametersDatabricks;
import com.pulumi.policypacks.aws.quicksight.outputs.DataSourceParametersJira;
import com.pulumi.policypacks.aws.quicksight.outputs.DataSourceParametersMariaDb;
import com.pulumi.policypacks.aws.quicksight.outputs.DataSourceParametersMysql;
import com.pulumi.policypacks.aws.quicksight.outputs.DataSourceParametersOracle;
import com.pulumi.policypacks.aws.quicksight.outputs.DataSourceParametersPostgresql;
import com.pulumi.policypacks.aws.quicksight.outputs.DataSourceParametersPresto;
import com.pulumi.policypacks.aws.quicksight.outputs.DataSourceParametersRds;
import com.pulumi.policypacks.aws.quicksight.outputs.DataSourceParametersRedshift;
import com.pulumi.policypacks.aws.quicksight.outputs.DataSourceParametersS3;
import com.pulumi.policypacks.aws.quicksight.outputs.DataSourceParametersServiceNow;
import com.pulumi.policypacks.aws.quicksight.outputs.DataSourceParametersSnowflake;
import com.pulumi.policypacks.aws.quicksight.outputs.DataSourceParametersSpark;
import com.pulumi.policypacks.aws.quicksight.outputs.DataSourceParametersSqlServer;
import com.pulumi.policypacks.aws.quicksight.outputs.DataSourceParametersTeradata;
import com.pulumi.policypacks.aws.quicksight.outputs.DataSourceParametersTwitter;
import javax.annotation.Nullable;


public final class DataSourceParameters {

    /**
     * Parameters for connecting to Amazon Elasticsearch.
     * 
     */
    private @Nullable UndeferrableValue<DataSourceParametersAmazonElasticsearch> amazonElasticsearch;

    public @Nullable DataSourceParametersAmazonElasticsearch amazonElasticsearch() {
        if (amazonElasticsearch == null) return null;
        return amazonElasticsearch.getValue("DataSourceParameters.amazonElasticsearch");
    }

    /**
     * Parameters for connecting to Athena.
     * 
     */
    private @Nullable UndeferrableValue<DataSourceParametersAthena> athena;

    public @Nullable DataSourceParametersAthena athena() {
        if (athena == null) return null;
        return athena.getValue("DataSourceParameters.athena");
    }

    /**
     * Parameters for connecting to Aurora MySQL.
     * 
     */
    private @Nullable UndeferrableValue<DataSourceParametersAurora> aurora;

    public @Nullable DataSourceParametersAurora aurora() {
        if (aurora == null) return null;
        return aurora.getValue("DataSourceParameters.aurora");
    }

    /**
     * Parameters for connecting to Aurora Postgresql.
     * 
     */
    private @Nullable UndeferrableValue<DataSourceParametersAuroraPostgresql> auroraPostgresql;

    public @Nullable DataSourceParametersAuroraPostgresql auroraPostgresql() {
        if (auroraPostgresql == null) return null;
        return auroraPostgresql.getValue("DataSourceParameters.auroraPostgresql");
    }

    /**
     * Parameters for connecting to AWS IOT Analytics.
     * 
     */
    private @Nullable UndeferrableValue<DataSourceParametersAwsIotAnalytics> awsIotAnalytics;

    public @Nullable DataSourceParametersAwsIotAnalytics awsIotAnalytics() {
        if (awsIotAnalytics == null) return null;
        return awsIotAnalytics.getValue("DataSourceParameters.awsIotAnalytics");
    }

    /**
     * Parameters for connecting to Databricks.
     * 
     */
    private @Nullable UndeferrableValue<DataSourceParametersDatabricks> databricks;

    public @Nullable DataSourceParametersDatabricks databricks() {
        if (databricks == null) return null;
        return databricks.getValue("DataSourceParameters.databricks");
    }

    /**
     * Parameters for connecting to Jira.
     * 
     */
    private @Nullable UndeferrableValue<DataSourceParametersJira> jira;

    public @Nullable DataSourceParametersJira jira() {
        if (jira == null) return null;
        return jira.getValue("DataSourceParameters.jira");
    }

    /**
     * Parameters for connecting to MariaDB.
     * 
     */
    private @Nullable UndeferrableValue<DataSourceParametersMariaDb> mariaDb;

    public @Nullable DataSourceParametersMariaDb mariaDb() {
        if (mariaDb == null) return null;
        return mariaDb.getValue("DataSourceParameters.mariaDb");
    }

    /**
     * Parameters for connecting to MySQL.
     * 
     */
    private @Nullable UndeferrableValue<DataSourceParametersMysql> mysql;

    public @Nullable DataSourceParametersMysql mysql() {
        if (mysql == null) return null;
        return mysql.getValue("DataSourceParameters.mysql");
    }

    /**
     * Parameters for connecting to Oracle.
     * 
     */
    private @Nullable UndeferrableValue<DataSourceParametersOracle> oracle;

    public @Nullable DataSourceParametersOracle oracle() {
        if (oracle == null) return null;
        return oracle.getValue("DataSourceParameters.oracle");
    }

    /**
     * Parameters for connecting to Postgresql.
     * 
     */
    private @Nullable UndeferrableValue<DataSourceParametersPostgresql> postgresql;

    public @Nullable DataSourceParametersPostgresql postgresql() {
        if (postgresql == null) return null;
        return postgresql.getValue("DataSourceParameters.postgresql");
    }

    /**
     * Parameters for connecting to Presto.
     * 
     */
    private @Nullable UndeferrableValue<DataSourceParametersPresto> presto;

    public @Nullable DataSourceParametersPresto presto() {
        if (presto == null) return null;
        return presto.getValue("DataSourceParameters.presto");
    }

    /**
     * Parameters for connecting to RDS.
     * 
     */
    private @Nullable UndeferrableValue<DataSourceParametersRds> rds;

    public @Nullable DataSourceParametersRds rds() {
        if (rds == null) return null;
        return rds.getValue("DataSourceParameters.rds");
    }

    /**
     * Parameters for connecting to Redshift.
     * 
     */
    private @Nullable UndeferrableValue<DataSourceParametersRedshift> redshift;

    public @Nullable DataSourceParametersRedshift redshift() {
        if (redshift == null) return null;
        return redshift.getValue("DataSourceParameters.redshift");
    }

    /**
     * Parameters for connecting to S3.
     * 
     */
    private @Nullable UndeferrableValue<DataSourceParametersS3> s3;

    public @Nullable DataSourceParametersS3 s3() {
        if (s3 == null) return null;
        return s3.getValue("DataSourceParameters.s3");
    }

    /**
     * Parameters for connecting to ServiceNow.
     * 
     */
    private @Nullable UndeferrableValue<DataSourceParametersServiceNow> serviceNow;

    public @Nullable DataSourceParametersServiceNow serviceNow() {
        if (serviceNow == null) return null;
        return serviceNow.getValue("DataSourceParameters.serviceNow");
    }

    /**
     * Parameters for connecting to Snowflake.
     * 
     */
    private @Nullable UndeferrableValue<DataSourceParametersSnowflake> snowflake;

    public @Nullable DataSourceParametersSnowflake snowflake() {
        if (snowflake == null) return null;
        return snowflake.getValue("DataSourceParameters.snowflake");
    }

    /**
     * Parameters for connecting to Spark.
     * 
     */
    private @Nullable UndeferrableValue<DataSourceParametersSpark> spark;

    public @Nullable DataSourceParametersSpark spark() {
        if (spark == null) return null;
        return spark.getValue("DataSourceParameters.spark");
    }

    /**
     * Parameters for connecting to SQL Server.
     * 
     */
    private @Nullable UndeferrableValue<DataSourceParametersSqlServer> sqlServer;

    public @Nullable DataSourceParametersSqlServer sqlServer() {
        if (sqlServer == null) return null;
        return sqlServer.getValue("DataSourceParameters.sqlServer");
    }

    /**
     * Parameters for connecting to Teradata.
     * 
     */
    private @Nullable UndeferrableValue<DataSourceParametersTeradata> teradata;

    public @Nullable DataSourceParametersTeradata teradata() {
        if (teradata == null) return null;
        return teradata.getValue("DataSourceParameters.teradata");
    }

    /**
     * Parameters for connecting to Twitter.
     * 
     */
    private @Nullable UndeferrableValue<DataSourceParametersTwitter> twitter;

    public @Nullable DataSourceParametersTwitter twitter() {
        if (twitter == null) return null;
        return twitter.getValue("DataSourceParameters.twitter");
    }

}
