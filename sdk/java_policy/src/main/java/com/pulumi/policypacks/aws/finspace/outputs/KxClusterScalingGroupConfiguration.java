// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.finspace.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class KxClusterScalingGroupConfiguration {

    /**
     * The number of vCPUs that you want to reserve for each node of this kdb cluster on the scaling group host.
     * 
     */
    private @Nullable UndeferrableValue<Double> cpu;

    public @Nullable Double cpu() {
        if (cpu == null) return null;
        return cpu.getValue("KxClusterScalingGroupConfiguration.cpu");
    }

    /**
     * An optional hard limit on the amount of memory a kdb cluster can use.
     * 
     */
    private @Nullable UndeferrableValue<Integer> memoryLimit;

    public @Nullable Integer memoryLimit() {
        if (memoryLimit == null) return null;
        return memoryLimit.getValue("KxClusterScalingGroupConfiguration.memoryLimit");
    }

    /**
     * A reservation of the minimum amount of memory that should be available on the scaling group for a kdb cluster to be successfully placed in a scaling group.
     * 
     */
    private UndeferrableValue<Integer> memoryReservation;

    public Integer memoryReservation() {
        if (memoryReservation == null) return null;
        return memoryReservation.getValue("KxClusterScalingGroupConfiguration.memoryReservation");
    }

    /**
     * The number of kdb cluster nodes.
     * 
     */
    private UndeferrableValue<Integer> nodeCount;

    public Integer nodeCount() {
        if (nodeCount == null) return null;
        return nodeCount.getValue("KxClusterScalingGroupConfiguration.nodeCount");
    }

    /**
     * A unique identifier for the kdb scaling group.
     * 
     */
    private UndeferrableValue<String> scalingGroupName;

    public String scalingGroupName() {
        if (scalingGroupName == null) return null;
        return scalingGroupName.getValue("KxClusterScalingGroupConfiguration.scalingGroupName");
    }

}
