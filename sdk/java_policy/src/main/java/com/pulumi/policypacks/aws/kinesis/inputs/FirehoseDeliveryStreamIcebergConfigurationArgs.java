// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.kinesis.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.kinesis.inputs.FirehoseDeliveryStreamIcebergConfigurationCloudwatchLoggingOptionsArgs;
import com.pulumi.policypacks.aws.kinesis.inputs.FirehoseDeliveryStreamIcebergConfigurationDestinationTableConfigurationArgs;
import com.pulumi.policypacks.aws.kinesis.inputs.FirehoseDeliveryStreamIcebergConfigurationProcessingConfigurationArgs;
import com.pulumi.policypacks.aws.kinesis.inputs.FirehoseDeliveryStreamIcebergConfigurationS3ConfigurationArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class FirehoseDeliveryStreamIcebergConfigurationArgs {

    /**
     * Buffer incoming data for the specified period of time, in seconds between 0 and 900, before delivering it to the destination. The default value is 300.
     * 
     */
    private UndeferrableValue<Integer> bufferingInterval;

    public Integer bufferingInterval() {
        if (bufferingInterval == null) return null;
        return bufferingInterval.getValue("FirehoseDeliveryStreamIcebergConfigurationArgs.bufferingInterval");
    }

    /**
     * Buffer incoming data to the specified size, in MBs between 1 and 128, before delivering it to the destination. The default value is 5.
     * 
     */
    private UndeferrableValue<Integer> bufferingSize;

    public Integer bufferingSize() {
        if (bufferingSize == null) return null;
        return bufferingSize.getValue("FirehoseDeliveryStreamIcebergConfigurationArgs.bufferingSize");
    }

    /**
     * Glue catalog ARN identifier of the destination Apache Iceberg Tables. You must specify the ARN in the format `arn:aws:glue:region:account-id:catalog`
     * 
     */
    private UndeferrableValue<String> catalogArn;

    public String catalogArn() {
        if (catalogArn == null) return null;
        return catalogArn.getValue("FirehoseDeliveryStreamIcebergConfigurationArgs.catalogArn");
    }

    /**
     * The CloudWatch Logging Options for the delivery stream. See `cloudwatch_logging_options` block below for details.
     * 
     */
    private UndeferrableValue<FirehoseDeliveryStreamIcebergConfigurationCloudwatchLoggingOptionsArgs> cloudwatchLoggingOptions;

    public FirehoseDeliveryStreamIcebergConfigurationCloudwatchLoggingOptionsArgs cloudwatchLoggingOptions() {
        if (cloudwatchLoggingOptions == null) return null;
        return cloudwatchLoggingOptions.getValue("FirehoseDeliveryStreamIcebergConfigurationArgs.cloudwatchLoggingOptions");
    }

    /**
     * Destination table configurations which Firehose uses to deliver data to Apache Iceberg Tables. Firehose will write data with insert if table specific configuration is not provided. See `destination_table_configuration` block below for details.
     * 
     */
    private UndeferrableValue<List<FirehoseDeliveryStreamIcebergConfigurationDestinationTableConfigurationArgs>> destinationTableConfigurations;

    public List<FirehoseDeliveryStreamIcebergConfigurationDestinationTableConfigurationArgs> destinationTableConfigurations() {
        if (destinationTableConfigurations == null) return null;
        return destinationTableConfigurations.getValue("FirehoseDeliveryStreamIcebergConfigurationArgs.destinationTableConfigurations");
    }

    /**
     * The data processing configuration.  See `processing_configuration` block below for details.
     * 
     */
    private UndeferrableValue<FirehoseDeliveryStreamIcebergConfigurationProcessingConfigurationArgs> processingConfiguration;

    public FirehoseDeliveryStreamIcebergConfigurationProcessingConfigurationArgs processingConfiguration() {
        if (processingConfiguration == null) return null;
        return processingConfiguration.getValue("FirehoseDeliveryStreamIcebergConfigurationArgs.processingConfiguration");
    }

    /**
     * The period of time, in seconds between 0 to 7200, during which Firehose retries to deliver data to the specified destination.
     * 
     */
    private UndeferrableValue<Integer> retryDuration;

    public Integer retryDuration() {
        if (retryDuration == null) return null;
        return retryDuration.getValue("FirehoseDeliveryStreamIcebergConfigurationArgs.retryDuration");
    }

    /**
     * The ARN of the IAM role to be assumed by Firehose for calling Apache Iceberg Tables.
     * 
     */
    private UndeferrableValue<String> roleArn;

    public String roleArn() {
        if (roleArn == null) return null;
        return roleArn.getValue("FirehoseDeliveryStreamIcebergConfigurationArgs.roleArn");
    }

    private UndeferrableValue<String> s3BackupMode;

    public String s3BackupMode() {
        if (s3BackupMode == null) return null;
        return s3BackupMode.getValue("FirehoseDeliveryStreamIcebergConfigurationArgs.s3BackupMode");
    }

    /**
     * The S3 Configuration. See `s3_configuration` block below for details.
     * 
     */
    private UndeferrableValue<FirehoseDeliveryStreamIcebergConfigurationS3ConfigurationArgs> s3Configuration;

    public FirehoseDeliveryStreamIcebergConfigurationS3ConfigurationArgs s3Configuration() {
        if (s3Configuration == null) return null;
        return s3Configuration.getValue("FirehoseDeliveryStreamIcebergConfigurationArgs.s3Configuration");
    }

}
