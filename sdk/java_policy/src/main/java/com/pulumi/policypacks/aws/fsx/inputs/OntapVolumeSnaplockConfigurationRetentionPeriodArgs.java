// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.fsx.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.fsx.inputs.OntapVolumeSnaplockConfigurationRetentionPeriodDefaultRetentionArgs;
import com.pulumi.policypacks.aws.fsx.inputs.OntapVolumeSnaplockConfigurationRetentionPeriodMaximumRetentionArgs;
import com.pulumi.policypacks.aws.fsx.inputs.OntapVolumeSnaplockConfigurationRetentionPeriodMinimumRetentionArgs;
import javax.annotation.Nullable;


public final class OntapVolumeSnaplockConfigurationRetentionPeriodArgs {

    /**
     * The retention period assigned to a write once, read many (WORM) file by default if an explicit retention period is not set for an FSx for ONTAP SnapLock volume. The default retention period must be greater than or equal to the minimum retention period and less than or equal to the maximum retention period. See `default_retention` Block for details.
     * 
     */
    @PolicyResourceProperty(name="defaultRetention", flag="unknown_defaultRetention")
    private OntapVolumeSnaplockConfigurationRetentionPeriodDefaultRetentionArgs value_defaultRetention;
    private boolean unknown_defaultRetention;
    public OntapVolumeSnaplockConfigurationRetentionPeriodDefaultRetentionArgs defaultRetention() {
        if (!unknown_defaultRetention) return value_defaultRetention;
        throw new UndeferrableValueException("Value 'OntapVolumeSnaplockConfigurationRetentionPeriodArgs.defaultRetention' is not present");
    }

    /**
     * The longest retention period that can be assigned to a WORM file on an FSx for ONTAP SnapLock volume. See `maximum_retention` Block for details.
     * 
     */
    @PolicyResourceProperty(name="maximumRetention", flag="unknown_maximumRetention")
    private OntapVolumeSnaplockConfigurationRetentionPeriodMaximumRetentionArgs value_maximumRetention;
    private boolean unknown_maximumRetention;
    public OntapVolumeSnaplockConfigurationRetentionPeriodMaximumRetentionArgs maximumRetention() {
        if (!unknown_maximumRetention) return value_maximumRetention;
        throw new UndeferrableValueException("Value 'OntapVolumeSnaplockConfigurationRetentionPeriodArgs.maximumRetention' is not present");
    }

    /**
     * The shortest retention period that can be assigned to a WORM file on an FSx for ONTAP SnapLock volume. See `minimum_retention` Block for details.
     * 
     */
    @PolicyResourceProperty(name="minimumRetention", flag="unknown_minimumRetention")
    private OntapVolumeSnaplockConfigurationRetentionPeriodMinimumRetentionArgs value_minimumRetention;
    private boolean unknown_minimumRetention;
    public OntapVolumeSnaplockConfigurationRetentionPeriodMinimumRetentionArgs minimumRetention() {
        if (!unknown_minimumRetention) return value_minimumRetention;
        throw new UndeferrableValueException("Value 'OntapVolumeSnaplockConfigurationRetentionPeriodArgs.minimumRetention' is not present");
    }

}
