// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.qldb;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.qldb.outputs.StreamKinesisConfiguration;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:qldb/stream:Stream")
public final class Stream extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The ARN of the QLDB Stream.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'Stream.arn' is not present");
    }

    /**
     * The exclusive date and time that specifies when the stream ends. If you don&#39;t define this parameter, the stream runs indefinitely until you cancel it. It must be in ISO 8601 date and time format and in Universal Coordinated Time (UTC). For example: `&#34;2019-06-13T21:36:34Z&#34;`.
     * 
     */
    @PolicyResourceProperty(name="exclusiveEndTime", flag="unknown_exclusiveEndTime")
    private @Nullable String value_exclusiveEndTime;
    private boolean unknown_exclusiveEndTime;
    public @Nullable String exclusiveEndTime() {
        if (!unknown_exclusiveEndTime) return value_exclusiveEndTime;
        throw new UndeferrableValueException("Value 'Stream.exclusiveEndTime' is not present");
    }

    /**
     * The inclusive start date and time from which to start streaming journal data. This parameter must be in ISO 8601 date and time format and in Universal Coordinated Time (UTC). For example: `&#34;2019-06-13T21:36:34Z&#34;`.  This cannot be in the future and must be before `exclusive_end_time`.  If you provide a value that is before the ledger&#39;s `CreationDateTime`, QLDB effectively defaults it to the ledger&#39;s `CreationDateTime`.
     * 
     */
    @PolicyResourceProperty(name="inclusiveStartTime", flag="unknown_inclusiveStartTime")
    private String value_inclusiveStartTime;
    private boolean unknown_inclusiveStartTime;
    public String inclusiveStartTime() {
        if (!unknown_inclusiveStartTime) return value_inclusiveStartTime;
        throw new UndeferrableValueException("Value 'Stream.inclusiveStartTime' is not present");
    }

    /**
     * The configuration settings of the Kinesis Data Streams destination for your stream request. Documented below.
     * 
     */
    @PolicyResourceProperty(name="kinesisConfiguration", flag="unknown_kinesisConfiguration")
    private StreamKinesisConfiguration value_kinesisConfiguration;
    private boolean unknown_kinesisConfiguration;
    public StreamKinesisConfiguration kinesisConfiguration() {
        if (!unknown_kinesisConfiguration) return value_kinesisConfiguration;
        throw new UndeferrableValueException("Value 'Stream.kinesisConfiguration' is not present");
    }

    /**
     * The name of the QLDB ledger.
     * 
     */
    @PolicyResourceProperty(name="ledgerName", flag="unknown_ledgerName")
    private String value_ledgerName;
    private boolean unknown_ledgerName;
    public String ledgerName() {
        if (!unknown_ledgerName) return value_ledgerName;
        throw new UndeferrableValueException("Value 'Stream.ledgerName' is not present");
    }

    /**
     * The Amazon Resource Name (ARN) of the IAM role that grants QLDB permissions for a journal stream to write data records to a Kinesis Data Streams resource.
     * 
     */
    @PolicyResourceProperty(name="roleArn", flag="unknown_roleArn")
    private String value_roleArn;
    private boolean unknown_roleArn;
    public String roleArn() {
        if (!unknown_roleArn) return value_roleArn;
        throw new UndeferrableValueException("Value 'Stream.roleArn' is not present");
    }

    /**
     * The name that you want to assign to the QLDB journal stream. User-defined names can help identify and indicate the purpose of a stream.  Your stream name must be unique among other active streams for a given ledger. Stream names have the same naming constraints as ledger names, as defined in the [Amazon QLDB Developer Guide](https://docs.aws.amazon.com/qldb/latest/developerguide/limits.html#limits.naming).
     * 
     */
    @PolicyResourceProperty(name="streamName", flag="unknown_streamName")
    private String value_streamName;
    private boolean unknown_streamName;
    public String streamName() {
        if (!unknown_streamName) return value_streamName;
        throw new UndeferrableValueException("Value 'Stream.streamName' is not present");
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'Stream.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'Stream.tagsAll' is not present");
    }

}
