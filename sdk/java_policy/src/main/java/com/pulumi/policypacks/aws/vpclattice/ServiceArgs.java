// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.vpclattice;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:vpclattice/service:Service")
public final class ServiceArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Type of IAM policy. Either `NONE` or `AWS_IAM`.
     * 
     */
    private UndeferrableValue<String> authType;

    public String authType() {
        if (authType == null) return null;
        return authType.getValue("ServiceArgs.authType");
    }

    /**
     * Amazon Resource Name (ARN) of the certificate.
     * 
     */
    private UndeferrableValue<String> certificateArn;

    public String certificateArn() {
        if (certificateArn == null) return null;
        return certificateArn.getValue("ServiceArgs.certificateArn");
    }

    /**
     * Custom domain name of the service.
     * 
     */
    private UndeferrableValue<String> customDomainName;

    public String customDomainName() {
        if (customDomainName == null) return null;
        return customDomainName.getValue("ServiceArgs.customDomainName");
    }

    /**
     * Name of the service. The name must be unique within the account. The valid characters are a-z, 0-9, and hyphens (-). You can&#39;t use a hyphen as the first or last character, or immediately after another hyphen.Must be between 3 and 40 characters in length.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("ServiceArgs.name");
    }

    /**
     * Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("ServiceArgs.tags");
    }

}
