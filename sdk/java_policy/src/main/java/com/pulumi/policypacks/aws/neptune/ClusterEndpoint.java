// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.neptune;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:neptune/clusterEndpoint:ClusterEndpoint")
public final class ClusterEndpoint extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The Neptune Cluster Endpoint Amazon Resource Name (ARN).
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("ClusterEndpoint.arn");
    }

    /**
     * The identifier of the endpoint.
     * 
     */
    private UndeferrableValue<String> clusterEndpointIdentifier;

    public String clusterEndpointIdentifier() {
        if (clusterEndpointIdentifier == null) return null;
        return clusterEndpointIdentifier.getValue("ClusterEndpoint.clusterEndpointIdentifier");
    }

    /**
     * The DB cluster identifier of the DB cluster associated with the endpoint.
     * 
     */
    private UndeferrableValue<String> clusterIdentifier;

    public String clusterIdentifier() {
        if (clusterIdentifier == null) return null;
        return clusterIdentifier.getValue("ClusterEndpoint.clusterIdentifier");
    }

    /**
     * The DNS address of the endpoint.
     * 
     */
    private UndeferrableValue<String> endpoint;

    public String endpoint() {
        if (endpoint == null) return null;
        return endpoint.getValue("ClusterEndpoint.endpoint");
    }

    /**
     * The type of the endpoint. One of: `READER`, `WRITER`, `ANY`.
     * 
     */
    private UndeferrableValue<String> endpointType;

    public String endpointType() {
        if (endpointType == null) return null;
        return endpointType.getValue("ClusterEndpoint.endpointType");
    }

    /**
     * List of DB instance identifiers that aren&#39;t part of the custom endpoint group. All other eligible instances are reachable through the custom endpoint. Only relevant if the list of static members is empty.
     * 
     */
    private @Nullable UndeferrableValue<List<String>> excludedMembers;

    public @Nullable List<String> excludedMembers() {
        if (excludedMembers == null) return null;
        return excludedMembers.getValue("ClusterEndpoint.excludedMembers");
    }

    /**
     * List of DB instance identifiers that are part of the custom endpoint group.
     * 
     */
    private @Nullable UndeferrableValue<List<String>> staticMembers;

    public @Nullable List<String> staticMembers() {
        if (staticMembers == null) return null;
        return staticMembers.getValue("ClusterEndpoint.staticMembers");
    }

    /**
     * A map of tags to assign to the Neptune cluster. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("ClusterEndpoint.tags");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("ClusterEndpoint.tagsAll");
    }

}
