// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.neptune;

import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:neptune/clusterEndpoint:ClusterEndpoint")
public final class ClusterEndpoint extends com.pulumi.resources.PolicyResource {

    /**
     * The Neptune Cluster Endpoint Amazon Resource Name (ARN).
     * 
     */
    public String arn;



    /**
     * The identifier of the endpoint.
     * 
     */
    public String clusterEndpointIdentifier;



    /**
     * The DB cluster identifier of the DB cluster associated with the endpoint.
     * 
     */
    public String clusterIdentifier;



    /**
     * The DNS address of the endpoint.
     * 
     */
    public String endpoint;



    /**
     * The type of the endpoint. One of: `READER`, `WRITER`, `ANY`.
     * 
     */
    public String endpointType;



    /**
     * List of DB instance identifiers that aren&#39;t part of the custom endpoint group. All other eligible instances are reachable through the custom endpoint. Only relevant if the list of static members is empty.
     * 
     */
    public List<String> excludedMembers;



    /**
     * List of DB instance identifiers that are part of the custom endpoint group.
     * 
     */
    public List<String> staticMembers;



    /**
     * A map of tags to assign to the Neptune cluster. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



}
