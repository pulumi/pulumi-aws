// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.dms.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class EndpointPostgresSettings {

    /**
     * For use with change data capture (CDC) only, this attribute has AWS DMS bypass foreign keys and user triggers to reduce the time it takes to bulk load data.
     * 
     */
    @PolicyResourceProperty(name="afterConnectScript", flag="unknown_afterConnectScript")
    private @Nullable String value_afterConnectScript;
    private boolean unknown_afterConnectScript;
    public @Nullable String afterConnectScript() {
        if (!unknown_afterConnectScript) return value_afterConnectScript;
        throw new UndeferrableValueException("Value 'EndpointPostgresSettings.afterConnectScript' is not present");
    }

    /**
     * The Babelfish for Aurora PostgreSQL database name for the endpoint.
     * 
     */
    @PolicyResourceProperty(name="babelfishDatabaseName", flag="unknown_babelfishDatabaseName")
    private @Nullable String value_babelfishDatabaseName;
    private boolean unknown_babelfishDatabaseName;
    public @Nullable String babelfishDatabaseName() {
        if (!unknown_babelfishDatabaseName) return value_babelfishDatabaseName;
        throw new UndeferrableValueException("Value 'EndpointPostgresSettings.babelfishDatabaseName' is not present");
    }

    /**
     * To capture DDL events, AWS DMS creates various artifacts in the PostgreSQL database when the task starts.
     * 
     */
    @PolicyResourceProperty(name="captureDdls", flag="unknown_captureDdls")
    private @Nullable Boolean value_captureDdls;
    private boolean unknown_captureDdls;
    public @Nullable Boolean captureDdls() {
        if (!unknown_captureDdls) return value_captureDdls;
        throw new UndeferrableValueException("Value 'EndpointPostgresSettings.captureDdls' is not present");
    }

    /**
     * Specifies the default behavior of the replication&#39;s handling of PostgreSQL- compatible endpoints that require some additional configuration, such as Babelfish endpoints.
     * 
     */
    @PolicyResourceProperty(name="databaseMode", flag="unknown_databaseMode")
    private @Nullable String value_databaseMode;
    private boolean unknown_databaseMode;
    public @Nullable String databaseMode() {
        if (!unknown_databaseMode) return value_databaseMode;
        throw new UndeferrableValueException("Value 'EndpointPostgresSettings.databaseMode' is not present");
    }

    /**
     * Sets the schema in which the operational DDL database artifacts are created. Default is `public`.
     * 
     */
    @PolicyResourceProperty(name="ddlArtifactsSchema", flag="unknown_ddlArtifactsSchema")
    private @Nullable String value_ddlArtifactsSchema;
    private boolean unknown_ddlArtifactsSchema;
    public @Nullable String ddlArtifactsSchema() {
        if (!unknown_ddlArtifactsSchema) return value_ddlArtifactsSchema;
        throw new UndeferrableValueException("Value 'EndpointPostgresSettings.ddlArtifactsSchema' is not present");
    }

    /**
     * Sets the client statement timeout for the PostgreSQL instance, in seconds. Default value is `60`.
     * 
     */
    @PolicyResourceProperty(name="executeTimeout", flag="unknown_executeTimeout")
    private @Nullable Integer value_executeTimeout;
    private boolean unknown_executeTimeout;
    public @Nullable Integer executeTimeout() {
        if (!unknown_executeTimeout) return value_executeTimeout;
        throw new UndeferrableValueException("Value 'EndpointPostgresSettings.executeTimeout' is not present");
    }

    /**
     * When set to `true`, this value causes a task to fail if the actual size of a LOB column is greater than the specified `LobMaxSize`. Default is `false`.
     * 
     */
    @PolicyResourceProperty(name="failTasksOnLobTruncation", flag="unknown_failTasksOnLobTruncation")
    private @Nullable Boolean value_failTasksOnLobTruncation;
    private boolean unknown_failTasksOnLobTruncation;
    public @Nullable Boolean failTasksOnLobTruncation() {
        if (!unknown_failTasksOnLobTruncation) return value_failTasksOnLobTruncation;
        throw new UndeferrableValueException("Value 'EndpointPostgresSettings.failTasksOnLobTruncation' is not present");
    }

    /**
     * The write-ahead log (WAL) heartbeat feature mimics a dummy transaction. By doing this, it prevents idle logical replication slots from holding onto old WAL logs, which can result in storage full situations on the source.
     * 
     */
    @PolicyResourceProperty(name="heartbeatEnable", flag="unknown_heartbeatEnable")
    private @Nullable Boolean value_heartbeatEnable;
    private boolean unknown_heartbeatEnable;
    public @Nullable Boolean heartbeatEnable() {
        if (!unknown_heartbeatEnable) return value_heartbeatEnable;
        throw new UndeferrableValueException("Value 'EndpointPostgresSettings.heartbeatEnable' is not present");
    }

    /**
     * Sets the WAL heartbeat frequency (in minutes). Default value is `5`.
     * 
     */
    @PolicyResourceProperty(name="heartbeatFrequency", flag="unknown_heartbeatFrequency")
    private @Nullable Integer value_heartbeatFrequency;
    private boolean unknown_heartbeatFrequency;
    public @Nullable Integer heartbeatFrequency() {
        if (!unknown_heartbeatFrequency) return value_heartbeatFrequency;
        throw new UndeferrableValueException("Value 'EndpointPostgresSettings.heartbeatFrequency' is not present");
    }

    /**
     * Sets the schema in which the heartbeat artifacts are created. Default value is `public`.
     * 
     */
    @PolicyResourceProperty(name="heartbeatSchema", flag="unknown_heartbeatSchema")
    private @Nullable String value_heartbeatSchema;
    private boolean unknown_heartbeatSchema;
    public @Nullable String heartbeatSchema() {
        if (!unknown_heartbeatSchema) return value_heartbeatSchema;
        throw new UndeferrableValueException("Value 'EndpointPostgresSettings.heartbeatSchema' is not present");
    }

    /**
     * You can use PostgreSQL endpoint settings to map a boolean as a boolean from your PostgreSQL source to a Amazon Redshift target. Default value is `false`.
     * 
     */
    @PolicyResourceProperty(name="mapBooleanAsBoolean", flag="unknown_mapBooleanAsBoolean")
    private @Nullable Boolean value_mapBooleanAsBoolean;
    private boolean unknown_mapBooleanAsBoolean;
    public @Nullable Boolean mapBooleanAsBoolean() {
        if (!unknown_mapBooleanAsBoolean) return value_mapBooleanAsBoolean;
        throw new UndeferrableValueException("Value 'EndpointPostgresSettings.mapBooleanAsBoolean' is not present");
    }

    /**
     * Optional When true, DMS migrates JSONB values as CLOB.
     * 
     */
    @PolicyResourceProperty(name="mapJsonbAsClob", flag="unknown_mapJsonbAsClob")
    private @Nullable Boolean value_mapJsonbAsClob;
    private boolean unknown_mapJsonbAsClob;
    public @Nullable Boolean mapJsonbAsClob() {
        if (!unknown_mapJsonbAsClob) return value_mapJsonbAsClob;
        throw new UndeferrableValueException("Value 'EndpointPostgresSettings.mapJsonbAsClob' is not present");
    }

    /**
     * Optional When true, DMS migrates LONG values as VARCHAR.
     * 
     */
    @PolicyResourceProperty(name="mapLongVarcharAs", flag="unknown_mapLongVarcharAs")
    private @Nullable String value_mapLongVarcharAs;
    private boolean unknown_mapLongVarcharAs;
    public @Nullable String mapLongVarcharAs() {
        if (!unknown_mapLongVarcharAs) return value_mapLongVarcharAs;
        throw new UndeferrableValueException("Value 'EndpointPostgresSettings.mapLongVarcharAs' is not present");
    }

    /**
     * Specifies the maximum size (in KB) of any .csv file used to transfer data to PostgreSQL. Default is `32,768 KB`.
     * 
     */
    @PolicyResourceProperty(name="maxFileSize", flag="unknown_maxFileSize")
    private @Nullable Integer value_maxFileSize;
    private boolean unknown_maxFileSize;
    public @Nullable Integer maxFileSize() {
        if (!unknown_maxFileSize) return value_maxFileSize;
        throw new UndeferrableValueException("Value 'EndpointPostgresSettings.maxFileSize' is not present");
    }

    /**
     * Specifies the plugin to use to create a replication slot. Valid values: `pglogical`, `test_decoding`.
     * 
     */
    @PolicyResourceProperty(name="pluginName", flag="unknown_pluginName")
    private @Nullable String value_pluginName;
    private boolean unknown_pluginName;
    public @Nullable String pluginName() {
        if (!unknown_pluginName) return value_pluginName;
        throw new UndeferrableValueException("Value 'EndpointPostgresSettings.pluginName' is not present");
    }

    /**
     * Sets the name of a previously created logical replication slot for a CDC load of the PostgreSQL source instance.
     * 
     */
    @PolicyResourceProperty(name="slotName", flag="unknown_slotName")
    private @Nullable String value_slotName;
    private boolean unknown_slotName;
    public @Nullable String slotName() {
        if (!unknown_slotName) return value_slotName;
        throw new UndeferrableValueException("Value 'EndpointPostgresSettings.slotName' is not present");
    }

}
