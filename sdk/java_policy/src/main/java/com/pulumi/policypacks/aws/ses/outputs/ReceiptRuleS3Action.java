// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ses.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class ReceiptRuleS3Action {

    /**
     * The name of the S3 bucket
     * 
     */
    private UndeferrableValue<String> bucketName;

    public String bucketName() {
        if (bucketName == null) return null;
        return bucketName.getValue("ReceiptRuleS3Action.bucketName");
    }

    /**
     * The ARN of the IAM role to be used by Amazon Simple Email Service while writing to the Amazon S3 bucket, optionally encrypting your mail via the provided customer managed key, and publishing to the Amazon SNS topic
     * 
     */
    private @Nullable UndeferrableValue<String> iamRoleArn;

    public @Nullable String iamRoleArn() {
        if (iamRoleArn == null) return null;
        return iamRoleArn.getValue("ReceiptRuleS3Action.iamRoleArn");
    }

    /**
     * The ARN of the KMS key
     * 
     */
    private @Nullable UndeferrableValue<String> kmsKeyArn;

    public @Nullable String kmsKeyArn() {
        if (kmsKeyArn == null) return null;
        return kmsKeyArn.getValue("ReceiptRuleS3Action.kmsKeyArn");
    }

    /**
     * The key prefix of the S3 bucket
     * 
     */
    private @Nullable UndeferrableValue<String> objectKeyPrefix;

    public @Nullable String objectKeyPrefix() {
        if (objectKeyPrefix == null) return null;
        return objectKeyPrefix.getValue("ReceiptRuleS3Action.objectKeyPrefix");
    }

    /**
     * The position of the action in the receipt rule
     * 
     */
    private UndeferrableValue<Integer> position;

    public Integer position() {
        if (position == null) return null;
        return position.getValue("ReceiptRuleS3Action.position");
    }

    /**
     * The ARN of an SNS topic to notify
     * 
     */
    private @Nullable UndeferrableValue<String> topicArn;

    public @Nullable String topicArn() {
        if (topicArn == null) return null;
        return topicArn.getValue("ReceiptRuleS3Action.topicArn");
    }

}
