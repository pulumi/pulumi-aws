// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ebs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ebs/snapshotCopy:SnapshotCopy")
public final class SnapshotCopyArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Specifies a completion duration to initiate a time-based snapshot copy. Time-based snapshot copy operations complete within the specified duration.  Value must be between 15 and 2880 minutes, in 15 minute increments only.
     * 
     */
    private UndeferrableValue<Integer> completionDurationMinutes;

    public Integer completionDurationMinutes() {
        if (completionDurationMinutes == null) return null;
        return completionDurationMinutes.getValue("SnapshotCopyArgs.completionDurationMinutes");
    }

    /**
     * A description of what the snapshot is.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("SnapshotCopyArgs.description");
    }

    /**
     * Whether the snapshot is encrypted.
     * 
     */
    private UndeferrableValue<Boolean> encrypted;

    public Boolean encrypted() {
        if (encrypted == null) return null;
        return encrypted.getValue("SnapshotCopyArgs.encrypted");
    }

    /**
     * The ARN for the KMS encryption key.
     * 
     */
    private UndeferrableValue<String> kmsKeyId;

    public String kmsKeyId() {
        if (kmsKeyId == null) return null;
        return kmsKeyId.getValue("SnapshotCopyArgs.kmsKeyId");
    }

    /**
     * Indicates whether to permanently restore an archived snapshot.
     * 
     */
    private UndeferrableValue<Boolean> permanentRestore;

    public Boolean permanentRestore() {
        if (permanentRestore == null) return null;
        return permanentRestore.getValue("SnapshotCopyArgs.permanentRestore");
    }

    /**
     * The region of the source snapshot.
     * 
     */
    private UndeferrableValue<String> sourceRegion;

    public String sourceRegion() {
        if (sourceRegion == null) return null;
        return sourceRegion.getValue("SnapshotCopyArgs.sourceRegion");
    }

    /**
     * The ARN for the snapshot to be copied.
     * 
     */
    private UndeferrableValue<String> sourceSnapshotId;

    public String sourceSnapshotId() {
        if (sourceSnapshotId == null) return null;
        return sourceSnapshotId.getValue("SnapshotCopyArgs.sourceSnapshotId");
    }

    /**
     * The name of the storage tier. Valid values are `archive` and `standard`. Default value is `standard`.
     * 
     */
    private UndeferrableValue<String> storageTier;

    public String storageTier() {
        if (storageTier == null) return null;
        return storageTier.getValue("SnapshotCopyArgs.storageTier");
    }

    /**
     * A map of tags for the snapshot.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("SnapshotCopyArgs.tags");
    }

    /**
     * Specifies the number of days for which to temporarily restore an archived snapshot. Required for temporary restores only. The snapshot will be automatically re-archived after this period.
     * 
     */
    private UndeferrableValue<Integer> temporaryRestoreDays;

    public Integer temporaryRestoreDays() {
        if (temporaryRestoreDays == null) return null;
        return temporaryRestoreDays.getValue("SnapshotCopyArgs.temporaryRestoreDays");
    }

}
