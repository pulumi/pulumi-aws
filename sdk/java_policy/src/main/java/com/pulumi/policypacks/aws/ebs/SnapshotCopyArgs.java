// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ebs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ebs/snapshotCopy:SnapshotCopy")
public final class SnapshotCopyArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Specifies a completion duration to initiate a time-based snapshot copy. Time-based snapshot copy operations complete within the specified duration.  Value must be between 15 and 2880 minutes, in 15 minute increments only.
     * 
     */
    @PolicyResourceProperty(name="completionDurationMinutes", flag="unknown_completionDurationMinutes")
    private Integer value_completionDurationMinutes;
    private boolean unknown_completionDurationMinutes;
    public Integer completionDurationMinutes() {
        if (!unknown_completionDurationMinutes) return value_completionDurationMinutes;
        throw new UndeferrableValueException("Value 'SnapshotCopyArgs.completionDurationMinutes' is not present");
    }

    /**
     * A description of what the snapshot is.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'SnapshotCopyArgs.description' is not present");
    }

    /**
     * Whether the snapshot is encrypted.
     * 
     */
    @PolicyResourceProperty(name="encrypted", flag="unknown_encrypted")
    private Boolean value_encrypted;
    private boolean unknown_encrypted;
    public Boolean encrypted() {
        if (!unknown_encrypted) return value_encrypted;
        throw new UndeferrableValueException("Value 'SnapshotCopyArgs.encrypted' is not present");
    }

    /**
     * The ARN for the KMS encryption key.
     * 
     */
    @PolicyResourceProperty(name="kmsKeyId", flag="unknown_kmsKeyId")
    private String value_kmsKeyId;
    private boolean unknown_kmsKeyId;
    public String kmsKeyId() {
        if (!unknown_kmsKeyId) return value_kmsKeyId;
        throw new UndeferrableValueException("Value 'SnapshotCopyArgs.kmsKeyId' is not present");
    }

    /**
     * Indicates whether to permanently restore an archived snapshot.
     * 
     */
    @PolicyResourceProperty(name="permanentRestore", flag="unknown_permanentRestore")
    private Boolean value_permanentRestore;
    private boolean unknown_permanentRestore;
    public Boolean permanentRestore() {
        if (!unknown_permanentRestore) return value_permanentRestore;
        throw new UndeferrableValueException("Value 'SnapshotCopyArgs.permanentRestore' is not present");
    }

    /**
     * The region of the source snapshot.
     * 
     */
    @PolicyResourceProperty(name="sourceRegion", flag="unknown_sourceRegion")
    private String value_sourceRegion;
    private boolean unknown_sourceRegion;
    public String sourceRegion() {
        if (!unknown_sourceRegion) return value_sourceRegion;
        throw new UndeferrableValueException("Value 'SnapshotCopyArgs.sourceRegion' is not present");
    }

    /**
     * The ARN for the snapshot to be copied.
     * 
     */
    @PolicyResourceProperty(name="sourceSnapshotId", flag="unknown_sourceSnapshotId")
    private String value_sourceSnapshotId;
    private boolean unknown_sourceSnapshotId;
    public String sourceSnapshotId() {
        if (!unknown_sourceSnapshotId) return value_sourceSnapshotId;
        throw new UndeferrableValueException("Value 'SnapshotCopyArgs.sourceSnapshotId' is not present");
    }

    /**
     * The name of the storage tier. Valid values are `archive` and `standard`. Default value is `standard`.
     * 
     */
    @PolicyResourceProperty(name="storageTier", flag="unknown_storageTier")
    private String value_storageTier;
    private boolean unknown_storageTier;
    public String storageTier() {
        if (!unknown_storageTier) return value_storageTier;
        throw new UndeferrableValueException("Value 'SnapshotCopyArgs.storageTier' is not present");
    }

    /**
     * A map of tags for the snapshot.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'SnapshotCopyArgs.tags' is not present");
    }

    /**
     * Specifies the number of days for which to temporarily restore an archived snapshot. Required for temporary restores only. The snapshot will be automatically re-archived after this period.
     * 
     */
    @PolicyResourceProperty(name="temporaryRestoreDays", flag="unknown_temporaryRestoreDays")
    private Integer value_temporaryRestoreDays;
    private boolean unknown_temporaryRestoreDays;
    public Integer temporaryRestoreDays() {
        if (!unknown_temporaryRestoreDays) return value_temporaryRestoreDays;
        throw new UndeferrableValueException("Value 'SnapshotCopyArgs.temporaryRestoreDays' is not present");
    }

}
