// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appautoscaling;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.appautoscaling.outputs.TargetSuspendedState;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:appautoscaling/target:Target")
public final class Target extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The ARN of the scalable target.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'Target.arn' is not present");
    }

    /**
     * Max capacity of the scalable target.
     * 
     */
    @PolicyResourceProperty(name="maxCapacity", flag="unknown_maxCapacity")
    private Integer value_maxCapacity;
    private boolean unknown_maxCapacity;
    public Integer maxCapacity() {
        if (!unknown_maxCapacity) return value_maxCapacity;
        throw new UndeferrableValueException("Value 'Target.maxCapacity' is not present");
    }

    /**
     * Min capacity of the scalable target.
     * 
     */
    @PolicyResourceProperty(name="minCapacity", flag="unknown_minCapacity")
    private Integer value_minCapacity;
    private boolean unknown_minCapacity;
    public Integer minCapacity() {
        if (!unknown_minCapacity) return value_minCapacity;
        throw new UndeferrableValueException("Value 'Target.minCapacity' is not present");
    }

    /**
     * Resource type and unique identifier string for the resource associated with the scaling policy. Documentation can be found in the `ResourceId` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_RegisterScalableTarget.html#API_RegisterScalableTarget_RequestParameters)
     * 
     */
    @PolicyResourceProperty(name="resourceId", flag="unknown_resourceId")
    private String value_resourceId;
    private boolean unknown_resourceId;
    public String resourceId() {
        if (!unknown_resourceId) return value_resourceId;
        throw new UndeferrableValueException("Value 'Target.resourceId' is not present");
    }

    /**
     * ARN of the IAM role that allows Application AutoScaling to modify your scalable target on your behalf. This defaults to an IAM Service-Linked Role for most services and custom IAM Roles are ignored by the API for those namespaces. See the [AWS Application Auto Scaling documentation](https://docs.aws.amazon.com/autoscaling/application/userguide/security_iam_service-with-iam.html#security_iam_service-with-iam-roles) for more information about how this service interacts with IAM.
     * 
     */
    @PolicyResourceProperty(name="roleArn", flag="unknown_roleArn")
    private String value_roleArn;
    private boolean unknown_roleArn;
    public String roleArn() {
        if (!unknown_roleArn) return value_roleArn;
        throw new UndeferrableValueException("Value 'Target.roleArn' is not present");
    }

    /**
     * Scalable dimension of the scalable target. Documentation can be found in the `ScalableDimension` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_RegisterScalableTarget.html#API_RegisterScalableTarget_RequestParameters)
     * 
     */
    @PolicyResourceProperty(name="scalableDimension", flag="unknown_scalableDimension")
    private String value_scalableDimension;
    private boolean unknown_scalableDimension;
    public String scalableDimension() {
        if (!unknown_scalableDimension) return value_scalableDimension;
        throw new UndeferrableValueException("Value 'Target.scalableDimension' is not present");
    }

    /**
     * AWS service namespace of the scalable target. Documentation can be found in the `ServiceNamespace` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_RegisterScalableTarget.html#API_RegisterScalableTarget_RequestParameters)
     * 
     */
    @PolicyResourceProperty(name="serviceNamespace", flag="unknown_serviceNamespace")
    private String value_serviceNamespace;
    private boolean unknown_serviceNamespace;
    public String serviceNamespace() {
        if (!unknown_serviceNamespace) return value_serviceNamespace;
        throw new UndeferrableValueException("Value 'Target.serviceNamespace' is not present");
    }

    /**
     * Specifies whether the scaling activities for a scalable target are in a suspended state.
     * 
     */
    @PolicyResourceProperty(name="suspendedState", flag="unknown_suspendedState")
    private TargetSuspendedState value_suspendedState;
    private boolean unknown_suspendedState;
    public TargetSuspendedState suspendedState() {
        if (!unknown_suspendedState) return value_suspendedState;
        throw new UndeferrableValueException("Value 'Target.suspendedState' is not present");
    }

    /**
     * Map of tags to assign to the scalable target. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'Target.tags' is not present");
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'Target.tagsAll' is not present");
    }

}
