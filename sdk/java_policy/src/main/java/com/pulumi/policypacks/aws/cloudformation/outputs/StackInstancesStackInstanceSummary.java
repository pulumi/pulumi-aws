// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cloudformation.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.String;
import javax.annotation.Nullable;


public final class StackInstancesStackInstanceSummary {

    /**
     * Account ID in which the instance is deployed.
     * 
     */
    private @Nullable UndeferrableValue<String> accountId;

    public @Nullable String accountId() {
        if (accountId == null) return null;
        return accountId.getValue("StackInstancesStackInstanceSummary.accountId");
    }

    /**
     * Detailed status of the stack instance. Values include `PENDING`, `RUNNING`, `SUCCEEDED`, `FAILED`, `CANCELLED`, `INOPERABLE`, `SKIPPED_SUSPENDED_ACCOUNT`, `FAILED_IMPORT`.
     * 
     */
    private @Nullable UndeferrableValue<String> detailedStatus;

    public @Nullable String detailedStatus() {
        if (detailedStatus == null) return null;
        return detailedStatus.getValue("StackInstancesStackInstanceSummary.detailedStatus");
    }

    /**
     * Status of the stack instance&#39;s actual configuration compared to the expected template and parameter configuration of the stack set to which it belongs. Values include `DRIFTED`, `IN_SYNC`, `UNKNOWN`, `NOT_CHECKED`.
     * 
     */
    private @Nullable UndeferrableValue<String> driftStatus;

    public @Nullable String driftStatus() {
        if (driftStatus == null) return null;
        return driftStatus.getValue("StackInstancesStackInstanceSummary.driftStatus");
    }

    /**
     * Organization root ID or organizational unit (OU) IDs that you specified for `deployment_targets`.
     * 
     */
    private @Nullable UndeferrableValue<String> organizationalUnitId;

    public @Nullable String organizationalUnitId() {
        if (organizationalUnitId == null) return null;
        return organizationalUnitId.getValue("StackInstancesStackInstanceSummary.organizationalUnitId");
    }

    /**
     * Region that the stack instance is associated with.
     * 
     */
    private @Nullable UndeferrableValue<String> region;

    public @Nullable String region() {
        if (region == null) return null;
        return region.getValue("StackInstancesStackInstanceSummary.region");
    }

    /**
     * ID of the stack instance.
     * 
     */
    private @Nullable UndeferrableValue<String> stackId;

    public @Nullable String stackId() {
        if (stackId == null) return null;
        return stackId.getValue("StackInstancesStackInstanceSummary.stackId");
    }

    /**
     * Name or unique ID of the stack set that the stack instance is associated with.
     * 
     */
    private @Nullable UndeferrableValue<String> stackSetId;

    public @Nullable String stackSetId() {
        if (stackSetId == null) return null;
        return stackSetId.getValue("StackInstancesStackInstanceSummary.stackSetId");
    }

    /**
     * Status of the stack instance, in terms of its synchronization with its associated stack set. Values include `CURRENT`, `OUTDATED`, `INOPERABLE`.
     * 
     */
    private @Nullable UndeferrableValue<String> status;

    public @Nullable String status() {
        if (status == null) return null;
        return status.getValue("StackInstancesStackInstanceSummary.status");
    }

    /**
     * Explanation for the specific status code assigned to this stack instance.
     * 
     */
    private @Nullable UndeferrableValue<String> statusReason;

    public @Nullable String statusReason() {
        if (statusReason == null) return null;
        return statusReason.getValue("StackInstancesStackInstanceSummary.statusReason");
    }

}
