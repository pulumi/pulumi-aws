// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.gamelift;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.gamelift.inputs.BuildStorageLocationArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:gamelift/build:Build")
public final class BuildArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Name of the build
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("BuildArgs.name");
    }

    /**
     * Operating system that the game server binaries are built to run on. Valid values: `WINDOWS_2012`, `AMAZON_LINUX`, `AMAZON_LINUX_2`, `WINDOWS_2016`, `AMAZON_LINUX_2023`.
     * 
     */
    private UndeferrableValue<String> operatingSystem;

    public String operatingSystem() {
        if (operatingSystem == null) return null;
        return operatingSystem.getValue("BuildArgs.operatingSystem");
    }

    /**
     * Information indicating where your game build files are stored. See below.
     * 
     */
    private UndeferrableValue<BuildStorageLocationArgs> storageLocation;

    public BuildStorageLocationArgs storageLocation() {
        if (storageLocation == null) return null;
        return storageLocation.getValue("BuildArgs.storageLocation");
    }

    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("BuildArgs.tags");
    }

    /**
     * Version that is associated with this build.
     * 
     */
    private UndeferrableValue<String> version;

    public String version() {
        if (version == null) return null;
        return version.getValue("BuildArgs.version");
    }

}
