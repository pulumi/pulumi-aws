// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.s3;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.s3.outputs.BucketCorsRule;
import com.pulumi.policypacks.aws.s3.outputs.BucketGrant;
import com.pulumi.policypacks.aws.s3.outputs.BucketLifecycleRule;
import com.pulumi.policypacks.aws.s3.outputs.BucketLogging;
import com.pulumi.policypacks.aws.s3.outputs.BucketObjectLockConfiguration;
import com.pulumi.policypacks.aws.s3.outputs.BucketReplicationConfiguration;
import com.pulumi.policypacks.aws.s3.outputs.BucketServerSideEncryptionConfiguration;
import com.pulumi.policypacks.aws.s3.outputs.BucketVersioning;
import com.pulumi.policypacks.aws.s3.outputs.BucketWebsite;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:s3/bucket:Bucket")
public final class Bucket extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Sets the accelerate configuration of an existing bucket. Can be `Enabled` or `Suspended`.
     * 
     */
    @PolicyResourceProperty(name="accelerationStatus", flag="unknown_accelerationStatus")
    private String value_accelerationStatus;
    private boolean unknown_accelerationStatus;
    public String accelerationStatus() {
        if (!unknown_accelerationStatus) return value_accelerationStatus;
        throw new UndeferrableValueException("Value 'Bucket.accelerationStatus' is not present");
    }

    /**
     * The [canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) to apply. Valid values are `private`, `public-read`, `public-read-write`, `aws-exec-read`, `authenticated-read`, and `log-delivery-write`. Defaults to `private`.  Conflicts with `grant`.
     * 
     */
    @PolicyResourceProperty(name="acl", flag="unknown_acl")
    private @Nullable String value_acl;
    private boolean unknown_acl;
    public @Nullable String acl() {
        if (!unknown_acl) return value_acl;
        throw new UndeferrableValueException("Value 'Bucket.acl' is not present");
    }

    /**
     * The ARN of the bucket. Will be of format `arn:aws:s3:::bucketname`.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'Bucket.arn' is not present");
    }

    /**
     * The name of the bucket. If omitted, this provider will assign a random, unique name. Must be lowercase and less than or equal to 63 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html).
     * 
     */
    @PolicyResourceProperty(name="bucket", flag="unknown_bucket")
    private String value_bucket;
    private boolean unknown_bucket;
    public String bucket() {
        if (!unknown_bucket) return value_bucket;
        throw new UndeferrableValueException("Value 'Bucket.bucket' is not present");
    }

    /**
     * The bucket domain name. Will be of format `bucketname.s3.amazonaws.com`.
     * 
     */
    @PolicyResourceProperty(name="bucketDomainName", flag="unknown_bucketDomainName")
    private String value_bucketDomainName;
    private boolean unknown_bucketDomainName;
    public String bucketDomainName() {
        if (!unknown_bucketDomainName) return value_bucketDomainName;
        throw new UndeferrableValueException("Value 'Bucket.bucketDomainName' is not present");
    }

    /**
     * Creates a unique bucket name beginning with the specified prefix. Conflicts with `bucket`. Must be lowercase and less than or equal to 37 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html).
     * 
     */
    @PolicyResourceProperty(name="bucketPrefix", flag="unknown_bucketPrefix")
    private @Nullable String value_bucketPrefix;
    private boolean unknown_bucketPrefix;
    public @Nullable String bucketPrefix() {
        if (!unknown_bucketPrefix) return value_bucketPrefix;
        throw new UndeferrableValueException("Value 'Bucket.bucketPrefix' is not present");
    }

    /**
     * The bucket region-specific domain name. The bucket domain name including the region name, please refer [here](https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region) for format. Note: The AWS CloudFront allows specifying S3 region-specific endpoint when creating S3 origin, it will prevent [redirect issues](https://forums.aws.amazon.com/thread.jspa?threadID=216814) from CloudFront to S3 Origin URL.
     * 
     */
    @PolicyResourceProperty(name="bucketRegionalDomainName", flag="unknown_bucketRegionalDomainName")
    private String value_bucketRegionalDomainName;
    private boolean unknown_bucketRegionalDomainName;
    public String bucketRegionalDomainName() {
        if (!unknown_bucketRegionalDomainName) return value_bucketRegionalDomainName;
        throw new UndeferrableValueException("Value 'Bucket.bucketRegionalDomainName' is not present");
    }

    /**
     * A rule of [Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) (documented below).
     * 
     */
    @PolicyResourceProperty(name="corsRules", flag="unknown_corsRules")
    private @Nullable List<BucketCorsRule> value_corsRules;
    private boolean unknown_corsRules;
    public @Nullable List<BucketCorsRule> corsRules() {
        if (!unknown_corsRules) return value_corsRules;
        throw new UndeferrableValueException("Value 'Bucket.corsRules' is not present");
    }

    /**
     * A boolean that indicates all objects (including any [locked objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html)) should be deleted from the bucket so that the bucket can be destroyed without error. These objects are *not* recoverable.
     * 
     */
    @PolicyResourceProperty(name="forceDestroy", flag="unknown_forceDestroy")
    private @Nullable Boolean value_forceDestroy;
    private boolean unknown_forceDestroy;
    public @Nullable Boolean forceDestroy() {
        if (!unknown_forceDestroy) return value_forceDestroy;
        throw new UndeferrableValueException("Value 'Bucket.forceDestroy' is not present");
    }

    /**
     * An [ACL policy grant](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#sample-acl) (documented below). Conflicts with `acl`.
     * 
     */
    @PolicyResourceProperty(name="grants", flag="unknown_grants")
    private @Nullable List<BucketGrant> value_grants;
    private boolean unknown_grants;
    public @Nullable List<BucketGrant> grants() {
        if (!unknown_grants) return value_grants;
        throw new UndeferrableValueException("Value 'Bucket.grants' is not present");
    }

    /**
     * The [Route 53 Hosted Zone ID](https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_website_region_endpoints) for this bucket&#39;s region.
     * 
     */
    @PolicyResourceProperty(name="hostedZoneId", flag="unknown_hostedZoneId")
    private String value_hostedZoneId;
    private boolean unknown_hostedZoneId;
    public String hostedZoneId() {
        if (!unknown_hostedZoneId) return value_hostedZoneId;
        throw new UndeferrableValueException("Value 'Bucket.hostedZoneId' is not present");
    }

    /**
     * A configuration of [object lifecycle management](http://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) (documented below).
     * 
     */
    @PolicyResourceProperty(name="lifecycleRules", flag="unknown_lifecycleRules")
    private @Nullable List<BucketLifecycleRule> value_lifecycleRules;
    private boolean unknown_lifecycleRules;
    public @Nullable List<BucketLifecycleRule> lifecycleRules() {
        if (!unknown_lifecycleRules) return value_lifecycleRules;
        throw new UndeferrableValueException("Value 'Bucket.lifecycleRules' is not present");
    }

    /**
     * A settings of [bucket logging](https://docs.aws.amazon.com/AmazonS3/latest/UG/ManagingBucketLogging.html) (documented below).
     * 
     */
    @PolicyResourceProperty(name="loggings", flag="unknown_loggings")
    private @Nullable List<BucketLogging> value_loggings;
    private boolean unknown_loggings;
    public @Nullable List<BucketLogging> loggings() {
        if (!unknown_loggings) return value_loggings;
        throw new UndeferrableValueException("Value 'Bucket.loggings' is not present");
    }

    /**
     * A configuration of [S3 object locking](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html) (documented below)
     * 
     * &gt; **NOTE:** You cannot use `acceleration_status` in `cn-north-1` or `us-gov-west-1`
     * 
     */
    @PolicyResourceProperty(name="objectLockConfiguration", flag="unknown_objectLockConfiguration")
    private @Nullable BucketObjectLockConfiguration value_objectLockConfiguration;
    private boolean unknown_objectLockConfiguration;
    public @Nullable BucketObjectLockConfiguration objectLockConfiguration() {
        if (!unknown_objectLockConfiguration) return value_objectLockConfiguration;
        throw new UndeferrableValueException("Value 'Bucket.objectLockConfiguration' is not present");
    }

    /**
     * A valid [bucket policy](https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html) JSON document. Note that if the policy document is not specific enough (but still valid), this provider may view the policy as constantly changing in a `pulumi preview`. In this case, please make sure you use the verbose/specific version of the policy.
     * 
     */
    @PolicyResourceProperty(name="policy", flag="unknown_policy")
    private @Nullable String value_policy;
    private boolean unknown_policy;
    public @Nullable String policy() {
        if (!unknown_policy) return value_policy;
        throw new UndeferrableValueException("Value 'Bucket.policy' is not present");
    }

    /**
     * The AWS region this bucket resides in.
     * 
     */
    @PolicyResourceProperty(name="region", flag="unknown_region")
    private String value_region;
    private boolean unknown_region;
    public String region() {
        if (!unknown_region) return value_region;
        throw new UndeferrableValueException("Value 'Bucket.region' is not present");
    }

    /**
     * A configuration of [replication configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html) (documented below).
     * 
     */
    @PolicyResourceProperty(name="replicationConfiguration", flag="unknown_replicationConfiguration")
    private @Nullable BucketReplicationConfiguration value_replicationConfiguration;
    private boolean unknown_replicationConfiguration;
    public @Nullable BucketReplicationConfiguration replicationConfiguration() {
        if (!unknown_replicationConfiguration) return value_replicationConfiguration;
        throw new UndeferrableValueException("Value 'Bucket.replicationConfiguration' is not present");
    }

    /**
     * Specifies who should bear the cost of Amazon S3 data transfer.
     * Can be either `BucketOwner` or `Requester`. By default, the owner of the S3 bucket would incur
     * the costs of any data transfer. See [Requester Pays Buckets](http://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html)
     * developer guide for more information.
     * 
     */
    @PolicyResourceProperty(name="requestPayer", flag="unknown_requestPayer")
    private String value_requestPayer;
    private boolean unknown_requestPayer;
    public String requestPayer() {
        if (!unknown_requestPayer) return value_requestPayer;
        throw new UndeferrableValueException("Value 'Bucket.requestPayer' is not present");
    }

    /**
     * A configuration of [server-side encryption configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) (documented below)
     * 
     */
    @PolicyResourceProperty(name="serverSideEncryptionConfiguration", flag="unknown_serverSideEncryptionConfiguration")
    private BucketServerSideEncryptionConfiguration value_serverSideEncryptionConfiguration;
    private boolean unknown_serverSideEncryptionConfiguration;
    public BucketServerSideEncryptionConfiguration serverSideEncryptionConfiguration() {
        if (!unknown_serverSideEncryptionConfiguration) return value_serverSideEncryptionConfiguration;
        throw new UndeferrableValueException("Value 'Bucket.serverSideEncryptionConfiguration' is not present");
    }

    /**
     * A map of tags to assign to the bucket. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'Bucket.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'Bucket.tagsAll' is not present");
    }

    /**
     * A state of [versioning](https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html) (documented below)
     * 
     */
    @PolicyResourceProperty(name="versioning", flag="unknown_versioning")
    private BucketVersioning value_versioning;
    private boolean unknown_versioning;
    public BucketVersioning versioning() {
        if (!unknown_versioning) return value_versioning;
        throw new UndeferrableValueException("Value 'Bucket.versioning' is not present");
    }

    /**
     * A website object (documented below).
     * 
     */
    @PolicyResourceProperty(name="website", flag="unknown_website")
    private @Nullable BucketWebsite value_website;
    private boolean unknown_website;
    public @Nullable BucketWebsite website() {
        if (!unknown_website) return value_website;
        throw new UndeferrableValueException("Value 'Bucket.website' is not present");
    }

    /**
     * The domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string. This is used to create Route 53 alias records.
     * 
     */
    @PolicyResourceProperty(name="websiteDomain", flag="unknown_websiteDomain")
    private String value_websiteDomain;
    private boolean unknown_websiteDomain;
    public String websiteDomain() {
        if (!unknown_websiteDomain) return value_websiteDomain;
        throw new UndeferrableValueException("Value 'Bucket.websiteDomain' is not present");
    }

    /**
     * The website endpoint, if the bucket is configured with a website. If not, this will be an empty string.
     * 
     */
    @PolicyResourceProperty(name="websiteEndpoint", flag="unknown_websiteEndpoint")
    private String value_websiteEndpoint;
    private boolean unknown_websiteEndpoint;
    public String websiteEndpoint() {
        if (!unknown_websiteEndpoint) return value_websiteEndpoint;
        throw new UndeferrableValueException("Value 'Bucket.websiteEndpoint' is not present");
    }

}
