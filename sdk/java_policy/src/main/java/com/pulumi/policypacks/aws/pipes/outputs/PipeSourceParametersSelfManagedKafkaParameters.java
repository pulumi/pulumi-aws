// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.pipes.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.pipes.outputs.PipeSourceParametersSelfManagedKafkaParametersCredentials;
import com.pulumi.policypacks.aws.pipes.outputs.PipeSourceParametersSelfManagedKafkaParametersVpc;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class PipeSourceParametersSelfManagedKafkaParameters {

    /**
     * An array of server URLs. Maximum number of 2 items, each of maximum length 300.
     * 
     */
    private @Nullable UndeferrableValue<List<String>> additionalBootstrapServers;

    public @Nullable List<String> additionalBootstrapServers() {
        if (additionalBootstrapServers == null) return null;
        return additionalBootstrapServers.getValue("PipeSourceParametersSelfManagedKafkaParameters.additionalBootstrapServers");
    }

    /**
     * The maximum number of records to include in each batch. Maximum value of 10000.
     * 
     */
    private @Nullable UndeferrableValue<Integer> batchSize;

    public @Nullable Integer batchSize() {
        if (batchSize == null) return null;
        return batchSize.getValue("PipeSourceParametersSelfManagedKafkaParameters.batchSize");
    }

    /**
     * The name of the destination queue to consume. Maximum value of 200.
     * 
     */
    private @Nullable UndeferrableValue<String> consumerGroupId;

    public @Nullable String consumerGroupId() {
        if (consumerGroupId == null) return null;
        return consumerGroupId.getValue("PipeSourceParametersSelfManagedKafkaParameters.consumerGroupId");
    }

    /**
     * The credentials needed to access the resource. Detailed below.
     * 
     */
    private @Nullable UndeferrableValue<PipeSourceParametersSelfManagedKafkaParametersCredentials> credentials;

    public @Nullable PipeSourceParametersSelfManagedKafkaParametersCredentials credentials() {
        if (credentials == null) return null;
        return credentials.getValue("PipeSourceParametersSelfManagedKafkaParameters.credentials");
    }

    /**
     * The maximum length of a time to wait for events. Maximum value of 300.
     * 
     */
    private @Nullable UndeferrableValue<Integer> maximumBatchingWindowInSeconds;

    public @Nullable Integer maximumBatchingWindowInSeconds() {
        if (maximumBatchingWindowInSeconds == null) return null;
        return maximumBatchingWindowInSeconds.getValue("PipeSourceParametersSelfManagedKafkaParameters.maximumBatchingWindowInSeconds");
    }

    /**
     * The ARN of the Secrets Manager secret used for certification.
     * 
     */
    private @Nullable UndeferrableValue<String> serverRootCaCertificate;

    public @Nullable String serverRootCaCertificate() {
        if (serverRootCaCertificate == null) return null;
        return serverRootCaCertificate.getValue("PipeSourceParametersSelfManagedKafkaParameters.serverRootCaCertificate");
    }

    /**
     * The position in a stream from which to start reading. Valid values: TRIM_HORIZON, LATEST.
     * 
     */
    private @Nullable UndeferrableValue<String> startingPosition;

    public @Nullable String startingPosition() {
        if (startingPosition == null) return null;
        return startingPosition.getValue("PipeSourceParametersSelfManagedKafkaParameters.startingPosition");
    }

    /**
     * The name of the topic that the pipe will read from. Maximum length of 249.
     * 
     */
    private UndeferrableValue<String> topicName;

    public String topicName() {
        if (topicName == null) return null;
        return topicName.getValue("PipeSourceParametersSelfManagedKafkaParameters.topicName");
    }

    /**
     * This structure specifies the VPC subnets and security groups for the stream, and whether a public IP address is to be used. Detailed below.
     * 
     */
    private @Nullable UndeferrableValue<PipeSourceParametersSelfManagedKafkaParametersVpc> vpc;

    public @Nullable PipeSourceParametersSelfManagedKafkaParametersVpc vpc() {
        if (vpc == null) return null;
        return vpc.getValue("PipeSourceParametersSelfManagedKafkaParameters.vpc");
    }

}
