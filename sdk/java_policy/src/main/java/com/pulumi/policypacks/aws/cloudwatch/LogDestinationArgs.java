// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cloudwatch;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:cloudwatch/logDestination:LogDestination")
public final class LogDestinationArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * A name for the log destination.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("LogDestinationArgs.name");
    }

    /**
     * The ARN of an IAM role that grants Amazon CloudWatch Logs permissions to put data into the target.
     * 
     */
    private UndeferrableValue<String> roleArn;

    public String roleArn() {
        if (roleArn == null) return null;
        return roleArn.getValue("LogDestinationArgs.roleArn");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("LogDestinationArgs.tags");
    }

    /**
     * The ARN of the target Amazon Kinesis stream resource for the destination.
     * 
     */
    private UndeferrableValue<String> targetArn;

    public String targetArn() {
        if (targetArn == null) return null;
        return targetArn.getValue("LogDestinationArgs.targetArn");
    }

}
