// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appconfig;

import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;


@PolicyResourceType(type="aws:appconfig/deployment:Deployment")
public final class Deployment extends com.pulumi.resources.PolicyResource {

    /**
     * Application ID. Must be between 4 and 7 characters in length.
     * 
     */
    public String applicationId;



    /**
     * ARN of the AppConfig Deployment.
     * 
     */
    public String arn;



    /**
     * Configuration profile ID. Must be between 4 and 7 characters in length.
     * 
     */
    public String configurationProfileId;



    /**
     * Configuration version to deploy. Can be at most 1024 characters.
     * 
     */
    public String configurationVersion;



    /**
     * Deployment number.
     * 
     */
    public Integer deploymentNumber;



    /**
     * Deployment strategy ID or name of a predefined deployment strategy. See [Predefined Deployment Strategies](https://docs.aws.amazon.com/appconfig/latest/userguide/appconfig-creating-deployment-strategy.html#appconfig-creating-deployment-strategy-predefined) for more details.
     * 
     */
    public String deploymentStrategyId;



    /**
     * Description of the deployment. Can be at most 1024 characters.
     * 
     */
    public String description;



    /**
     * Environment ID. Must be between 4 and 7 characters in length.
     * 
     */
    public String environmentId;



    /**
     * ARN of the KMS key used to encrypt configuration data.
     * 
     */
    public String kmsKeyArn;



    /**
     * The KMS key identifier (key ID, key alias, or key ARN). AppConfig uses this to encrypt the configuration data using a customer managed key.
     * 
     */
    public String kmsKeyIdentifier;



    /**
     * State of the deployment.
     * 
     */
    public String state;



    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



}
