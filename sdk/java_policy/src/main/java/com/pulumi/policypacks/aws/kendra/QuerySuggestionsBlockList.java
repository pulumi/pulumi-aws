// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.kendra;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.kendra.outputs.QuerySuggestionsBlockListSourceS3Path;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:kendra/querySuggestionsBlockList:QuerySuggestionsBlockList")
public final class QuerySuggestionsBlockList extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the block list.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'QuerySuggestionsBlockList.arn' is not present");
    }

    @PolicyResourceProperty(name="description", flag="unknown_description")
    private @Nullable String value_description;
    private boolean unknown_description;
    public @Nullable String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'QuerySuggestionsBlockList.description' is not present");
    }

    /**
     * Identifier of the index for a block list.
     * 
     */
    @PolicyResourceProperty(name="indexId", flag="unknown_indexId")
    private String value_indexId;
    private boolean unknown_indexId;
    public String indexId() {
        if (!unknown_indexId) return value_indexId;
        throw new UndeferrableValueException("Value 'QuerySuggestionsBlockList.indexId' is not present");
    }

    /**
     * Name for the block list.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'QuerySuggestionsBlockList.name' is not present");
    }

    /**
     * Unique identifier of the block list.
     * 
     */
    @PolicyResourceProperty(name="querySuggestionsBlockListId", flag="unknown_querySuggestionsBlockListId")
    private String value_querySuggestionsBlockListId;
    private boolean unknown_querySuggestionsBlockListId;
    public String querySuggestionsBlockListId() {
        if (!unknown_querySuggestionsBlockListId) return value_querySuggestionsBlockListId;
        throw new UndeferrableValueException("Value 'QuerySuggestionsBlockList.querySuggestionsBlockListId' is not present");
    }

    /**
     * IAM (Identity and Access Management) role used to access the block list text file in S3.
     * 
     */
    @PolicyResourceProperty(name="roleArn", flag="unknown_roleArn")
    private String value_roleArn;
    private boolean unknown_roleArn;
    public String roleArn() {
        if (!unknown_roleArn) return value_roleArn;
        throw new UndeferrableValueException("Value 'QuerySuggestionsBlockList.roleArn' is not present");
    }

    /**
     * S3 path where your block list text file is located. See details below.
     * 
     */
    @PolicyResourceProperty(name="sourceS3Path", flag="unknown_sourceS3Path")
    private QuerySuggestionsBlockListSourceS3Path value_sourceS3Path;
    private boolean unknown_sourceS3Path;
    public QuerySuggestionsBlockListSourceS3Path sourceS3Path() {
        if (!unknown_sourceS3Path) return value_sourceS3Path;
        throw new UndeferrableValueException("Value 'QuerySuggestionsBlockList.sourceS3Path' is not present");
    }

    @PolicyResourceProperty(name="status", flag="unknown_status")
    private String value_status;
    private boolean unknown_status;
    public String status() {
        if (!unknown_status) return value_status;
        throw new UndeferrableValueException("Value 'QuerySuggestionsBlockList.status' is not present");
    }

    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'QuerySuggestionsBlockList.tags' is not present");
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider&#39;s default_tags configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'QuerySuggestionsBlockList.tagsAll' is not present");
    }

}
