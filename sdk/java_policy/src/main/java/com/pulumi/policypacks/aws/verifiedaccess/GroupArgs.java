// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.verifiedaccess;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.verifiedaccess.inputs.GroupSseConfigurationArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:verifiedaccess/group:Group")
public final class GroupArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Description of the verified access group.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("GroupArgs.description");
    }

    /**
     * The policy document that is associated with this resource.
     * 
     */
    private UndeferrableValue<String> policyDocument;

    public String policyDocument() {
        if (policyDocument == null) return null;
        return policyDocument.getValue("GroupArgs.policyDocument");
    }

    /**
     * Configuration block to use KMS keys for server-side encryption.
     * 
     */
    private UndeferrableValue<GroupSseConfigurationArgs> sseConfiguration;

    public GroupSseConfigurationArgs sseConfiguration() {
        if (sseConfiguration == null) return null;
        return sseConfiguration.getValue("GroupArgs.sseConfiguration");
    }

    /**
     * Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("GroupArgs.tags");
    }

    /**
     * The id of the verified access instance this group is associated with.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> verifiedaccessInstanceId;

    public String verifiedaccessInstanceId() {
        if (verifiedaccessInstanceId == null) return null;
        return verifiedaccessInstanceId.getValue("GroupArgs.verifiedaccessInstanceId");
    }

}
