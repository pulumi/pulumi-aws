// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.verifiedaccess;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.verifiedaccess.inputs.GroupSseConfigurationArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:verifiedaccess/group:Group")
public final class GroupArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Description of the verified access group.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'GroupArgs.description' is not present");
    }

    /**
     * The policy document that is associated with this resource.
     * 
     */
    @PolicyResourceProperty(name="policyDocument", flag="unknown_policyDocument")
    private String value_policyDocument;
    private boolean unknown_policyDocument;
    public String policyDocument() {
        if (!unknown_policyDocument) return value_policyDocument;
        throw new UndeferrableValueException("Value 'GroupArgs.policyDocument' is not present");
    }

    /**
     * Configuration block to use KMS keys for server-side encryption.
     * 
     */
    @PolicyResourceProperty(name="sseConfiguration", flag="unknown_sseConfiguration")
    private GroupSseConfigurationArgs value_sseConfiguration;
    private boolean unknown_sseConfiguration;
    public GroupSseConfigurationArgs sseConfiguration() {
        if (!unknown_sseConfiguration) return value_sseConfiguration;
        throw new UndeferrableValueException("Value 'GroupArgs.sseConfiguration' is not present");
    }

    /**
     * Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'GroupArgs.tags' is not present");
    }

    /**
     * The id of the verified access instance this group is associated with.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="verifiedaccessInstanceId", flag="unknown_verifiedaccessInstanceId")
    private String value_verifiedaccessInstanceId;
    private boolean unknown_verifiedaccessInstanceId;
    public String verifiedaccessInstanceId() {
        if (!unknown_verifiedaccessInstanceId) return value_verifiedaccessInstanceId;
        throw new UndeferrableValueException("Value 'GroupArgs.verifiedaccessInstanceId' is not present");
    }

}
