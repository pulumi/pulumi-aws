// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.securityhub;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.securityhub.inputs.InsightFiltersArgs;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:securityhub/insight:Insight")
public final class InsightArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * A configuration block including one or more (up to 10 distinct) attributes used to filter the findings included in the insight. The insight only includes findings that match criteria defined in the filters. See filters below for more details.
     * 
     */
    @PolicyResourceProperty(name="filters", flag="unknown_filters")
    private InsightFiltersArgs value_filters;
    private boolean unknown_filters;
    public InsightFiltersArgs filters() {
        if (!unknown_filters) return value_filters;
        throw new UndeferrableValueException("Value 'InsightArgs.filters' is not present");
    }

    /**
     * The attribute used to group the findings for the insight e.g., if an insight is grouped by `ResourceId`, then the insight produces a list of resource identifiers.
     * 
     */
    @PolicyResourceProperty(name="groupByAttribute", flag="unknown_groupByAttribute")
    private String value_groupByAttribute;
    private boolean unknown_groupByAttribute;
    public String groupByAttribute() {
        if (!unknown_groupByAttribute) return value_groupByAttribute;
        throw new UndeferrableValueException("Value 'InsightArgs.groupByAttribute' is not present");
    }

    /**
     * The name of the custom insight.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'InsightArgs.name' is not present");
    }

}
