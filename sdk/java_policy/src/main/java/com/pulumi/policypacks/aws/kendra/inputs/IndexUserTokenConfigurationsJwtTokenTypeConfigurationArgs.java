// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.kendra.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.String;
import javax.annotation.Nullable;


public final class IndexUserTokenConfigurationsJwtTokenTypeConfigurationArgs {

    /**
     * The regular expression that identifies the claim. Minimum length of 1. Maximum length of 100.
     * 
     */
    @PolicyResourceProperty(name="claimRegex", flag="unknown_claimRegex")
    private String value_claimRegex;
    private boolean unknown_claimRegex;
    public String claimRegex() {
        if (!unknown_claimRegex) return value_claimRegex;
        throw new UndeferrableValueException("Value 'IndexUserTokenConfigurationsJwtTokenTypeConfigurationArgs.claimRegex' is not present");
    }

    /**
     * The group attribute field. Minimum length of 1. Maximum length of 100.
     * 
     */
    @PolicyResourceProperty(name="groupAttributeField", flag="unknown_groupAttributeField")
    private String value_groupAttributeField;
    private boolean unknown_groupAttributeField;
    public String groupAttributeField() {
        if (!unknown_groupAttributeField) return value_groupAttributeField;
        throw new UndeferrableValueException("Value 'IndexUserTokenConfigurationsJwtTokenTypeConfigurationArgs.groupAttributeField' is not present");
    }

    /**
     * The issuer of the token. Minimum length of 1. Maximum length of 65.
     * 
     */
    @PolicyResourceProperty(name="issuer", flag="unknown_issuer")
    private String value_issuer;
    private boolean unknown_issuer;
    public String issuer() {
        if (!unknown_issuer) return value_issuer;
        throw new UndeferrableValueException("Value 'IndexUserTokenConfigurationsJwtTokenTypeConfigurationArgs.issuer' is not present");
    }

    /**
     * The location of the key. Valid values are `URL` or `SECRET_MANAGER`
     * 
     */
    @PolicyResourceProperty(name="keyLocation", flag="unknown_keyLocation")
    private String value_keyLocation;
    private boolean unknown_keyLocation;
    public String keyLocation() {
        if (!unknown_keyLocation) return value_keyLocation;
        throw new UndeferrableValueException("Value 'IndexUserTokenConfigurationsJwtTokenTypeConfigurationArgs.keyLocation' is not present");
    }

    /**
     * The Amazon Resource Name (ARN) of the secret.
     * 
     */
    @PolicyResourceProperty(name="secretsManagerArn", flag="unknown_secretsManagerArn")
    private String value_secretsManagerArn;
    private boolean unknown_secretsManagerArn;
    public String secretsManagerArn() {
        if (!unknown_secretsManagerArn) return value_secretsManagerArn;
        throw new UndeferrableValueException("Value 'IndexUserTokenConfigurationsJwtTokenTypeConfigurationArgs.secretsManagerArn' is not present");
    }

    /**
     * The signing key URL. Valid pattern is `^(https?|ftp|file):\/\/([^\s]*)`
     * 
     */
    @PolicyResourceProperty(name="url", flag="unknown_url")
    private String value_url;
    private boolean unknown_url;
    public String url() {
        if (!unknown_url) return value_url;
        throw new UndeferrableValueException("Value 'IndexUserTokenConfigurationsJwtTokenTypeConfigurationArgs.url' is not present");
    }

    /**
     * The user name attribute field. Minimum length of 1. Maximum length of 100.
     * 
     */
    @PolicyResourceProperty(name="userNameAttributeField", flag="unknown_userNameAttributeField")
    private String value_userNameAttributeField;
    private boolean unknown_userNameAttributeField;
    public String userNameAttributeField() {
        if (!unknown_userNameAttributeField) return value_userNameAttributeField;
        throw new UndeferrableValueException("Value 'IndexUserTokenConfigurationsJwtTokenTypeConfigurationArgs.userNameAttributeField' is not present");
    }

}
