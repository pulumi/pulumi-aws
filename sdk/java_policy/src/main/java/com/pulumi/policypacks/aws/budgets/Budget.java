// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.budgets;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.budgets.outputs.BudgetAutoAdjustData;
import com.pulumi.policypacks.aws.budgets.outputs.BudgetCostFilter;
import com.pulumi.policypacks.aws.budgets.outputs.BudgetCostTypes;
import com.pulumi.policypacks.aws.budgets.outputs.BudgetNotification;
import com.pulumi.policypacks.aws.budgets.outputs.BudgetPlannedLimit;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:budgets/budget:Budget")
public final class Budget extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The ID of the target account for budget. Will use current user&#39;s account_id by default if omitted.
     * 
     */
    @PolicyResourceProperty(name="accountId", flag="unknown_accountId")
    private String value_accountId;
    private boolean unknown_accountId;
    public String accountId() {
        if (!unknown_accountId) return value_accountId;
        throw new UndeferrableValueException("Value 'Budget.accountId' is not present");
    }

    /**
     * The ARN of the budget.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'Budget.arn' is not present");
    }

    /**
     * Object containing AutoAdjustData which determines the budget amount for an auto-adjusting budget.
     * 
     */
    @PolicyResourceProperty(name="autoAdjustData", flag="unknown_autoAdjustData")
    private @Nullable BudgetAutoAdjustData value_autoAdjustData;
    private boolean unknown_autoAdjustData;
    public @Nullable BudgetAutoAdjustData autoAdjustData() {
        if (!unknown_autoAdjustData) return value_autoAdjustData;
        throw new UndeferrableValueException("Value 'Budget.autoAdjustData' is not present");
    }

    /**
     * Whether this budget tracks monetary cost or usage.
     * 
     */
    @PolicyResourceProperty(name="budgetType", flag="unknown_budgetType")
    private String value_budgetType;
    private boolean unknown_budgetType;
    public String budgetType() {
        if (!unknown_budgetType) return value_budgetType;
        throw new UndeferrableValueException("Value 'Budget.budgetType' is not present");
    }

    /**
     * A list of CostFilter name/values pair to apply to budget.
     * 
     */
    @PolicyResourceProperty(name="costFilters", flag="unknown_costFilters")
    private List<BudgetCostFilter> value_costFilters;
    private boolean unknown_costFilters;
    public List<BudgetCostFilter> costFilters() {
        if (!unknown_costFilters) return value_costFilters;
        throw new UndeferrableValueException("Value 'Budget.costFilters' is not present");
    }

    /**
     * Object containing CostTypes The types of cost included in a budget, such as tax and subscriptions.
     * 
     */
    @PolicyResourceProperty(name="costTypes", flag="unknown_costTypes")
    private BudgetCostTypes value_costTypes;
    private boolean unknown_costTypes;
    public BudgetCostTypes costTypes() {
        if (!unknown_costTypes) return value_costTypes;
        throw new UndeferrableValueException("Value 'Budget.costTypes' is not present");
    }

    /**
     * The amount of cost or usage being measured for a budget.
     * 
     */
    @PolicyResourceProperty(name="limitAmount", flag="unknown_limitAmount")
    private String value_limitAmount;
    private boolean unknown_limitAmount;
    public String limitAmount() {
        if (!unknown_limitAmount) return value_limitAmount;
        throw new UndeferrableValueException("Value 'Budget.limitAmount' is not present");
    }

    /**
     * The unit of measurement used for the budget forecast, actual spend, or budget threshold, such as dollars or GB. See [Spend](http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/data-type-spend.html) documentation.
     * 
     */
    @PolicyResourceProperty(name="limitUnit", flag="unknown_limitUnit")
    private String value_limitUnit;
    private boolean unknown_limitUnit;
    public String limitUnit() {
        if (!unknown_limitUnit) return value_limitUnit;
        throw new UndeferrableValueException("Value 'Budget.limitUnit' is not present");
    }

    /**
     * The name of a budget. Unique within accounts.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'Budget.name' is not present");
    }

    /**
     * The prefix of the name of a budget. Unique within accounts.
     * 
     */
    @PolicyResourceProperty(name="namePrefix", flag="unknown_namePrefix")
    private String value_namePrefix;
    private boolean unknown_namePrefix;
    public String namePrefix() {
        if (!unknown_namePrefix) return value_namePrefix;
        throw new UndeferrableValueException("Value 'Budget.namePrefix' is not present");
    }

    /**
     * Object containing Budget Notifications. Can be used multiple times to define more than one budget notification.
     * 
     */
    @PolicyResourceProperty(name="notifications", flag="unknown_notifications")
    private @Nullable List<BudgetNotification> value_notifications;
    private boolean unknown_notifications;
    public @Nullable List<BudgetNotification> notifications() {
        if (!unknown_notifications) return value_notifications;
        throw new UndeferrableValueException("Value 'Budget.notifications' is not present");
    }

    /**
     * Object containing Planned Budget Limits. Can be used multiple times to plan more than one budget limit. See [PlannedBudgetLimits](https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_budgets_Budget.html#awscostmanagement-Type-budgets_Budget-PlannedBudgetLimits) documentation.
     * 
     */
    @PolicyResourceProperty(name="plannedLimits", flag="unknown_plannedLimits")
    private @Nullable List<BudgetPlannedLimit> value_plannedLimits;
    private boolean unknown_plannedLimits;
    public @Nullable List<BudgetPlannedLimit> plannedLimits() {
        if (!unknown_plannedLimits) return value_plannedLimits;
        throw new UndeferrableValueException("Value 'Budget.plannedLimits' is not present");
    }

    /**
     * Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'Budget.tags' is not present");
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'Budget.tagsAll' is not present");
    }

    /**
     * The end of the time period covered by the budget. There are no restrictions on the end date. Format: `2017-01-01_12:00`.
     * 
     */
    @PolicyResourceProperty(name="timePeriodEnd", flag="unknown_timePeriodEnd")
    private @Nullable String value_timePeriodEnd;
    private boolean unknown_timePeriodEnd;
    public @Nullable String timePeriodEnd() {
        if (!unknown_timePeriodEnd) return value_timePeriodEnd;
        throw new UndeferrableValueException("Value 'Budget.timePeriodEnd' is not present");
    }

    /**
     * The start of the time period covered by the budget. If you don&#39;t specify a start date, AWS defaults to the start of your chosen time period. The start date must come before the end date. Format: `2017-01-01_12:00`.
     * 
     */
    @PolicyResourceProperty(name="timePeriodStart", flag="unknown_timePeriodStart")
    private String value_timePeriodStart;
    private boolean unknown_timePeriodStart;
    public String timePeriodStart() {
        if (!unknown_timePeriodStart) return value_timePeriodStart;
        throw new UndeferrableValueException("Value 'Budget.timePeriodStart' is not present");
    }

    /**
     * The length of time until a budget resets the actual and forecasted spend. Valid values: `MONTHLY`, `QUARTERLY`, `ANNUALLY`, and `DAILY`.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="timeUnit", flag="unknown_timeUnit")
    private String value_timeUnit;
    private boolean unknown_timeUnit;
    public String timeUnit() {
        if (!unknown_timeUnit) return value_timeUnit;
        throw new UndeferrableValueException("Value 'Budget.timeUnit' is not present");
    }

}
