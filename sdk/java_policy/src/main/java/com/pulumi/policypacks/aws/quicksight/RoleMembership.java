// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.quicksight;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;


@PolicyResourceType(type="aws:quicksight/roleMembership:RoleMembership")
public final class RoleMembership extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * AWS account ID. Defaults to the account of the caller identity if not configured.
     * 
     */
    @PolicyResourceProperty(name="awsAccountId", flag="unknown_awsAccountId")
    private String value_awsAccountId;
    private boolean unknown_awsAccountId;
    public String awsAccountId() {
        if (!unknown_awsAccountId) return value_awsAccountId;
        throw new UndeferrableValueException("Value 'RoleMembership.awsAccountId' is not present");
    }

    /**
     * Name of the group to be added to the role.
     * 
     */
    @PolicyResourceProperty(name="memberName", flag="unknown_memberName")
    private String value_memberName;
    private boolean unknown_memberName;
    public String memberName() {
        if (!unknown_memberName) return value_memberName;
        throw new UndeferrableValueException("Value 'RoleMembership.memberName' is not present");
    }

    /**
     * Name of the namespace. Defaults to `default`.
     * 
     */
    @PolicyResourceProperty(name="namespace", flag="unknown_namespace")
    private String value_namespace;
    private boolean unknown_namespace;
    public String namespace() {
        if (!unknown_namespace) return value_namespace;
        throw new UndeferrableValueException("Value 'RoleMembership.namespace' is not present");
    }

    /**
     * Role to add the group to. Valid values are `ADMIN`, `AUTHOR`, `READER`, `ADMIN_PRO`, `AUTHOR_PRO`, and `READER_PRO`.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="role", flag="unknown_role")
    private String value_role;
    private boolean unknown_role;
    public String role() {
        if (!unknown_role) return value_role;
        throw new UndeferrableValueException("Value 'RoleMembership.role' is not present");
    }

}
