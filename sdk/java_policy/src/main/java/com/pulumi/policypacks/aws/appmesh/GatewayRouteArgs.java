// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appmesh;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.appmesh.inputs.GatewayRouteSpecArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:appmesh/gatewayRoute:GatewayRoute")
public final class GatewayRouteArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Name of the service mesh in which to create the gateway route. Must be between 1 and 255 characters in length.
     * 
     */
    @PolicyResourceProperty(name="meshName", flag="unknown_meshName")
    private String value_meshName;
    private boolean unknown_meshName;
    public String meshName() {
        if (!unknown_meshName) return value_meshName;
        throw new UndeferrableValueException("Value 'GatewayRouteArgs.meshName' is not present");
    }

    /**
     * AWS account ID of the service mesh&#39;s owner. Defaults to the account ID the AWS provider is currently connected to.
     * 
     */
    @PolicyResourceProperty(name="meshOwner", flag="unknown_meshOwner")
    private String value_meshOwner;
    private boolean unknown_meshOwner;
    public String meshOwner() {
        if (!unknown_meshOwner) return value_meshOwner;
        throw new UndeferrableValueException("Value 'GatewayRouteArgs.meshOwner' is not present");
    }

    /**
     * Name to use for the gateway route. Must be between 1 and 255 characters in length.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'GatewayRouteArgs.name' is not present");
    }

    /**
     * Gateway route specification to apply.
     * 
     */
    @PolicyResourceProperty(name="spec", flag="unknown_spec")
    private GatewayRouteSpecArgs value_spec;
    private boolean unknown_spec;
    public GatewayRouteSpecArgs spec() {
        if (!unknown_spec) return value_spec;
        throw new UndeferrableValueException("Value 'GatewayRouteArgs.spec' is not present");
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'GatewayRouteArgs.tags' is not present");
    }

    /**
     * Name of the virtual gateway to associate the gateway route with. Must be between 1 and 255 characters in length.
     * 
     */
    @PolicyResourceProperty(name="virtualGatewayName", flag="unknown_virtualGatewayName")
    private String value_virtualGatewayName;
    private boolean unknown_virtualGatewayName;
    public String virtualGatewayName() {
        if (!unknown_virtualGatewayName) return value_virtualGatewayName;
        throw new UndeferrableValueException("Value 'GatewayRouteArgs.virtualGatewayName' is not present");
    }

}
