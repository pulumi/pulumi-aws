// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.connect;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.connect.RoutingProfileMediaConcurrency;
import com.pulumi.policypacks.aws.connect.RoutingProfileQueueConfig;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:connect/routingProfile:RoutingProfile")
public final class RoutingProfile extends com.pulumi.resources.PolicyResource {

    /**
     * The Amazon Resource Name (ARN) of the Routing Profile.
     * 
     */
    public String arn;



    /**
     * Specifies the default outbound queue for the Routing Profile.
     * 
     */
    public String defaultOutboundQueueId;



    /**
     * Specifies the description of the Routing Profile.
     * 
     */
    public String description;



    /**
     * Specifies the identifier of the hosting Amazon Connect Instance.
     * 
     */
    public String instanceId;



    /**
     * One or more `media_concurrencies` blocks that specify the channels that agents can handle in the Contact Control Panel (CCP) for this Routing Profile. The `media_concurrencies` block is documented below.
     * 
     */
    public List<RoutingProfileMediaConcurrency> mediaConcurrencies;



    /**
     * Specifies the name of the Routing Profile.
     * 
     */
    public String name;



    /**
     * One or more `queue_configs` blocks that specify the inbound queues associated with the routing profile. If no queue is added, the agent only can make outbound calls. The `queue_configs` block is documented below.
     * 
     */
    public List<RoutingProfileQueueConfig> queueConfigs;



    /**
     * The identifier for the Routing Profile.
     * 
     */
    public String routingProfileId;



    /**
     * Tags to apply to the Routing Profile. If configured with a provider
     * `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



}
