// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.elastictranscoder.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.String;
import javax.annotation.Nullable;


public final class PresetVideoArgs {

    /**
     * The display aspect ratio of the video in the output file. Valid values are: `auto`, `1:1`, `4:3`, `3:2`, `16:9`. (Note; to better control resolution and aspect ratio of output videos, we recommend that you use the values `max_width`, `max_height`, `sizing_policy`, `padding_policy`, and `display_aspect_ratio` instead of `resolution` and `aspect_ratio`.)
     * 
     */
    @PolicyResourceProperty(name="aspectRatio", flag="unknown_aspectRatio")
    private String value_aspectRatio;
    private boolean unknown_aspectRatio;
    public String aspectRatio() {
        if (!unknown_aspectRatio) return value_aspectRatio;
        throw new UndeferrableValueException("Value 'PresetVideoArgs.aspectRatio' is not present");
    }

    /**
     * The bit rate of the video stream in the output file, in kilobits/second. You can configure variable bit rate or constant bit rate encoding.
     * 
     */
    @PolicyResourceProperty(name="bitRate", flag="unknown_bitRate")
    private String value_bitRate;
    private boolean unknown_bitRate;
    public String bitRate() {
        if (!unknown_bitRate) return value_bitRate;
        throw new UndeferrableValueException("Value 'PresetVideoArgs.bitRate' is not present");
    }

    /**
     * The video codec for the output file. Valid values are `gif`, `H.264`, `mpeg2`, `vp8`, and `vp9`.
     * 
     */
    @PolicyResourceProperty(name="codec", flag="unknown_codec")
    private String value_codec;
    private boolean unknown_codec;
    public String codec() {
        if (!unknown_codec) return value_codec;
        throw new UndeferrableValueException("Value 'PresetVideoArgs.codec' is not present");
    }

    /**
     * The value that Elastic Transcoder adds to the metadata in the output file. If you set DisplayAspectRatio to auto, Elastic Transcoder chooses an aspect ratio that ensures square pixels. If you specify another option, Elastic Transcoder sets that value in the output file.
     * 
     */
    @PolicyResourceProperty(name="displayAspectRatio", flag="unknown_displayAspectRatio")
    private String value_displayAspectRatio;
    private boolean unknown_displayAspectRatio;
    public String displayAspectRatio() {
        if (!unknown_displayAspectRatio) return value_displayAspectRatio;
        throw new UndeferrableValueException("Value 'PresetVideoArgs.displayAspectRatio' is not present");
    }

    /**
     * Whether to use a fixed value for Video:FixedGOP. Not applicable for containers of type gif. Valid values are true and false. Also known as, Fixed Number of Frames Between Keyframes.
     * 
     */
    @PolicyResourceProperty(name="fixedGop", flag="unknown_fixedGop")
    private String value_fixedGop;
    private boolean unknown_fixedGop;
    public String fixedGop() {
        if (!unknown_fixedGop) return value_fixedGop;
        throw new UndeferrableValueException("Value 'PresetVideoArgs.fixedGop' is not present");
    }

    /**
     * The frames per second for the video stream in the output file. The following values are valid: `auto`, `10`, `15`, `23.97`, `24`, `25`, `29.97`, `30`, `50`, `60`.
     * 
     */
    @PolicyResourceProperty(name="frameRate", flag="unknown_frameRate")
    private String value_frameRate;
    private boolean unknown_frameRate;
    public String frameRate() {
        if (!unknown_frameRate) return value_frameRate;
        throw new UndeferrableValueException("Value 'PresetVideoArgs.frameRate' is not present");
    }

    /**
     * The maximum number of frames between key frames. Not applicable for containers of type gif.
     * 
     */
    @PolicyResourceProperty(name="keyframesMaxDist", flag="unknown_keyframesMaxDist")
    private String value_keyframesMaxDist;
    private boolean unknown_keyframesMaxDist;
    public String keyframesMaxDist() {
        if (!unknown_keyframesMaxDist) return value_keyframesMaxDist;
        throw new UndeferrableValueException("Value 'PresetVideoArgs.keyframesMaxDist' is not present");
    }

    /**
     * If you specify auto for FrameRate, Elastic Transcoder uses the frame rate of the input video for the frame rate of the output video, up to the maximum frame rate. If you do not specify a MaxFrameRate, Elastic Transcoder will use a default of 30.
     * 
     */
    @PolicyResourceProperty(name="maxFrameRate", flag="unknown_maxFrameRate")
    private String value_maxFrameRate;
    private boolean unknown_maxFrameRate;
    public String maxFrameRate() {
        if (!unknown_maxFrameRate) return value_maxFrameRate;
        throw new UndeferrableValueException("Value 'PresetVideoArgs.maxFrameRate' is not present");
    }

    /**
     * The maximum height of the output video in pixels. If you specify auto, Elastic Transcoder uses 1080 (Full HD) as the default value. If you specify a numeric value, enter an even integer between 96 and 3072, inclusive.
     * 
     */
    @PolicyResourceProperty(name="maxHeight", flag="unknown_maxHeight")
    private String value_maxHeight;
    private boolean unknown_maxHeight;
    public String maxHeight() {
        if (!unknown_maxHeight) return value_maxHeight;
        throw new UndeferrableValueException("Value 'PresetVideoArgs.maxHeight' is not present");
    }

    /**
     * The maximum width of the output video in pixels. If you specify auto, Elastic Transcoder uses 1920 (Full HD) as the default value. If you specify a numeric value, enter an even integer between 128 and 4096, inclusive.
     * 
     */
    @PolicyResourceProperty(name="maxWidth", flag="unknown_maxWidth")
    private String value_maxWidth;
    private boolean unknown_maxWidth;
    public String maxWidth() {
        if (!unknown_maxWidth) return value_maxWidth;
        throw new UndeferrableValueException("Value 'PresetVideoArgs.maxWidth' is not present");
    }

    /**
     * When you set PaddingPolicy to Pad, Elastic Transcoder might add black bars to the top and bottom and/or left and right sides of the output video to make the total size of the output video match the values that you specified for `max_width` and `max_height`.
     * 
     */
    @PolicyResourceProperty(name="paddingPolicy", flag="unknown_paddingPolicy")
    private String value_paddingPolicy;
    private boolean unknown_paddingPolicy;
    public String paddingPolicy() {
        if (!unknown_paddingPolicy) return value_paddingPolicy;
        throw new UndeferrableValueException("Value 'PresetVideoArgs.paddingPolicy' is not present");
    }

    /**
     * The width and height of the video in the output file, in pixels. Valid values are `auto` and `widthxheight`. (see note for `aspect_ratio`)
     * 
     */
    @PolicyResourceProperty(name="resolution", flag="unknown_resolution")
    private String value_resolution;
    private boolean unknown_resolution;
    public String resolution() {
        if (!unknown_resolution) return value_resolution;
        throw new UndeferrableValueException("Value 'PresetVideoArgs.resolution' is not present");
    }

    /**
     * A value that controls scaling of the output video. Valid values are: `Fit`, `Fill`, `Stretch`, `Keep`, `ShrinkToFit`, `ShrinkToFill`.
     * 
     */
    @PolicyResourceProperty(name="sizingPolicy", flag="unknown_sizingPolicy")
    private String value_sizingPolicy;
    private boolean unknown_sizingPolicy;
    public String sizingPolicy() {
        if (!unknown_sizingPolicy) return value_sizingPolicy;
        throw new UndeferrableValueException("Value 'PresetVideoArgs.sizingPolicy' is not present");
    }

}
