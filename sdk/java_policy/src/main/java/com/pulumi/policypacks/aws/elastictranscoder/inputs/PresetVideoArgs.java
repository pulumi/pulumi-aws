// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.elastictranscoder.inputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.String;
import javax.annotation.Nullable;


public final class PresetVideoArgs {

    /**
     * The display aspect ratio of the video in the output file. Valid values are: `auto`, `1:1`, `4:3`, `3:2`, `16:9`. (Note; to better control resolution and aspect ratio of output videos, we recommend that you use the values `max_width`, `max_height`, `sizing_policy`, `padding_policy`, and `display_aspect_ratio` instead of `resolution` and `aspect_ratio`.)
     * 
     */
    private UndeferrableValue<String> aspectRatio;

    public String aspectRatio() {
        if (aspectRatio == null) return null;
        return aspectRatio.getValue("PresetVideoArgs.aspectRatio");
    }

    /**
     * The bit rate of the video stream in the output file, in kilobits/second. You can configure variable bit rate or constant bit rate encoding.
     * 
     */
    private UndeferrableValue<String> bitRate;

    public String bitRate() {
        if (bitRate == null) return null;
        return bitRate.getValue("PresetVideoArgs.bitRate");
    }

    /**
     * The video codec for the output file. Valid values are `gif`, `H.264`, `mpeg2`, `vp8`, and `vp9`.
     * 
     */
    private UndeferrableValue<String> codec;

    public String codec() {
        if (codec == null) return null;
        return codec.getValue("PresetVideoArgs.codec");
    }

    /**
     * The value that Elastic Transcoder adds to the metadata in the output file. If you set DisplayAspectRatio to auto, Elastic Transcoder chooses an aspect ratio that ensures square pixels. If you specify another option, Elastic Transcoder sets that value in the output file.
     * 
     */
    private UndeferrableValue<String> displayAspectRatio;

    public String displayAspectRatio() {
        if (displayAspectRatio == null) return null;
        return displayAspectRatio.getValue("PresetVideoArgs.displayAspectRatio");
    }

    /**
     * Whether to use a fixed value for Video:FixedGOP. Not applicable for containers of type gif. Valid values are true and false. Also known as, Fixed Number of Frames Between Keyframes.
     * 
     */
    private UndeferrableValue<String> fixedGop;

    public String fixedGop() {
        if (fixedGop == null) return null;
        return fixedGop.getValue("PresetVideoArgs.fixedGop");
    }

    /**
     * The frames per second for the video stream in the output file. The following values are valid: `auto`, `10`, `15`, `23.97`, `24`, `25`, `29.97`, `30`, `50`, `60`.
     * 
     */
    private UndeferrableValue<String> frameRate;

    public String frameRate() {
        if (frameRate == null) return null;
        return frameRate.getValue("PresetVideoArgs.frameRate");
    }

    /**
     * The maximum number of frames between key frames. Not applicable for containers of type gif.
     * 
     */
    private UndeferrableValue<String> keyframesMaxDist;

    public String keyframesMaxDist() {
        if (keyframesMaxDist == null) return null;
        return keyframesMaxDist.getValue("PresetVideoArgs.keyframesMaxDist");
    }

    /**
     * If you specify auto for FrameRate, Elastic Transcoder uses the frame rate of the input video for the frame rate of the output video, up to the maximum frame rate. If you do not specify a MaxFrameRate, Elastic Transcoder will use a default of 30.
     * 
     */
    private UndeferrableValue<String> maxFrameRate;

    public String maxFrameRate() {
        if (maxFrameRate == null) return null;
        return maxFrameRate.getValue("PresetVideoArgs.maxFrameRate");
    }

    /**
     * The maximum height of the output video in pixels. If you specify auto, Elastic Transcoder uses 1080 (Full HD) as the default value. If you specify a numeric value, enter an even integer between 96 and 3072, inclusive.
     * 
     */
    private UndeferrableValue<String> maxHeight;

    public String maxHeight() {
        if (maxHeight == null) return null;
        return maxHeight.getValue("PresetVideoArgs.maxHeight");
    }

    /**
     * The maximum width of the output video in pixels. If you specify auto, Elastic Transcoder uses 1920 (Full HD) as the default value. If you specify a numeric value, enter an even integer between 128 and 4096, inclusive.
     * 
     */
    private UndeferrableValue<String> maxWidth;

    public String maxWidth() {
        if (maxWidth == null) return null;
        return maxWidth.getValue("PresetVideoArgs.maxWidth");
    }

    /**
     * When you set PaddingPolicy to Pad, Elastic Transcoder might add black bars to the top and bottom and/or left and right sides of the output video to make the total size of the output video match the values that you specified for `max_width` and `max_height`.
     * 
     */
    private UndeferrableValue<String> paddingPolicy;

    public String paddingPolicy() {
        if (paddingPolicy == null) return null;
        return paddingPolicy.getValue("PresetVideoArgs.paddingPolicy");
    }

    /**
     * The width and height of the video in the output file, in pixels. Valid values are `auto` and `widthxheight`. (see note for `aspect_ratio`)
     * 
     */
    private UndeferrableValue<String> resolution;

    public String resolution() {
        if (resolution == null) return null;
        return resolution.getValue("PresetVideoArgs.resolution");
    }

    /**
     * A value that controls scaling of the output video. Valid values are: `Fit`, `Fill`, `Stretch`, `Keep`, `ShrinkToFit`, `ShrinkToFill`.
     * 
     */
    private UndeferrableValue<String> sizingPolicy;

    public String sizingPolicy() {
        if (sizingPolicy == null) return null;
        return sizingPolicy.getValue("PresetVideoArgs.sizingPolicy");
    }

}
