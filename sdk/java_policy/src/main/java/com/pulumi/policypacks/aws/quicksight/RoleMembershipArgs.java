// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.quicksight;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:quicksight/roleMembership:RoleMembership")
public final class RoleMembershipArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * AWS account ID. Defaults to the account of the caller identity if not configured.
     * 
     */
    private UndeferrableValue<String> awsAccountId;

    public String awsAccountId() {
        if (awsAccountId == null) return null;
        return awsAccountId.getValue("RoleMembershipArgs.awsAccountId");
    }

    /**
     * Name of the group to be added to the role.
     * 
     */
    private UndeferrableValue<String> memberName;

    public String memberName() {
        if (memberName == null) return null;
        return memberName.getValue("RoleMembershipArgs.memberName");
    }

    /**
     * Name of the namespace. Defaults to `default`.
     * 
     */
    private UndeferrableValue<String> namespace;

    public String namespace() {
        if (namespace == null) return null;
        return namespace.getValue("RoleMembershipArgs.namespace");
    }

    /**
     * Role to add the group to. Valid values are `ADMIN`, `AUTHOR`, `READER`, `ADMIN_PRO`, `AUTHOR_PRO`, and `READER_PRO`.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> role;

    public String role() {
        if (role == null) return null;
        return role.getValue("RoleMembershipArgs.role");
    }

}
