// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.guardduty;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.guardduty.FilterFindingCriteria;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;


@PolicyResourceType(type="aws:guardduty/filter:Filter")
public final class Filter extends com.pulumi.resources.PolicyResource {

    /**
     * Specifies the action that is to be applied to the findings that match the filter. Can be one of `ARCHIVE` or `NOOP`.
     * 
     */
    public String action;



    /**
     * The ARN of the GuardDuty filter.
     * 
     */
    public String arn;



    /**
     * Description of the filter.
     * 
     */
    public String description;



    /**
     * ID of a GuardDuty detector, attached to your account.
     * 
     */
    public String detectorId;



    /**
     * Represents the criteria to be used in the filter for querying findings. Contains one or more `criterion` blocks, documented below.
     * 
     */
    public FilterFindingCriteria findingCriteria;



    /**
     * The name of your filter.
     * 
     */
    public String name;



    /**
     * Specifies the position of the filter in the list of current filters. Also specifies the order in which this filter is applied to the findings.
     * 
     */
    public Integer rank;



    /**
     * The tags that you want to add to the Filter resource. A tag consists of a key and a value. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



}
