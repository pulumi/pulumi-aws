// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.devicefarm;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:devicefarm/networkProfile:NetworkProfile")
public final class NetworkProfileArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The description of the network profile.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'NetworkProfileArgs.description' is not present");
    }

    /**
     * The data throughput rate in bits per second, as an integer from `0` to `104857600`. Default value is `104857600`.
     * 
     */
    @PolicyResourceProperty(name="downlinkBandwidthBits", flag="unknown_downlinkBandwidthBits")
    private Integer value_downlinkBandwidthBits;
    private boolean unknown_downlinkBandwidthBits;
    public Integer downlinkBandwidthBits() {
        if (!unknown_downlinkBandwidthBits) return value_downlinkBandwidthBits;
        throw new UndeferrableValueException("Value 'NetworkProfileArgs.downlinkBandwidthBits' is not present");
    }

    /**
     * Delay time for all packets to destination in milliseconds as an integer from `0` to `2000`.
     * 
     */
    @PolicyResourceProperty(name="downlinkDelayMs", flag="unknown_downlinkDelayMs")
    private Integer value_downlinkDelayMs;
    private boolean unknown_downlinkDelayMs;
    public Integer downlinkDelayMs() {
        if (!unknown_downlinkDelayMs) return value_downlinkDelayMs;
        throw new UndeferrableValueException("Value 'NetworkProfileArgs.downlinkDelayMs' is not present");
    }

    /**
     * Time variation in the delay of received packets in milliseconds as an integer from `0` to `2000`.
     * 
     */
    @PolicyResourceProperty(name="downlinkJitterMs", flag="unknown_downlinkJitterMs")
    private Integer value_downlinkJitterMs;
    private boolean unknown_downlinkJitterMs;
    public Integer downlinkJitterMs() {
        if (!unknown_downlinkJitterMs) return value_downlinkJitterMs;
        throw new UndeferrableValueException("Value 'NetworkProfileArgs.downlinkJitterMs' is not present");
    }

    /**
     * Proportion of received packets that fail to arrive from `0` to `100` percent.
     * 
     */
    @PolicyResourceProperty(name="downlinkLossPercent", flag="unknown_downlinkLossPercent")
    private Integer value_downlinkLossPercent;
    private boolean unknown_downlinkLossPercent;
    public Integer downlinkLossPercent() {
        if (!unknown_downlinkLossPercent) return value_downlinkLossPercent;
        throw new UndeferrableValueException("Value 'NetworkProfileArgs.downlinkLossPercent' is not present");
    }

    /**
     * The name for the network profile.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'NetworkProfileArgs.name' is not present");
    }

    /**
     * The ARN of the project for the network profile.
     * 
     */
    @PolicyResourceProperty(name="projectArn", flag="unknown_projectArn")
    private String value_projectArn;
    private boolean unknown_projectArn;
    public String projectArn() {
        if (!unknown_projectArn) return value_projectArn;
        throw new UndeferrableValueException("Value 'NetworkProfileArgs.projectArn' is not present");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'NetworkProfileArgs.tags' is not present");
    }

    /**
     * The type of network profile to create. Valid values are listed are `PRIVATE` and `CURATED`.
     * 
     */
    @PolicyResourceProperty(name="type", flag="unknown_type")
    private String value_type;
    private boolean unknown_type;
    public String type() {
        if (!unknown_type) return value_type;
        throw new UndeferrableValueException("Value 'NetworkProfileArgs.type' is not present");
    }

    /**
     * The data throughput rate in bits per second, as an integer from `0` to `104857600`. Default value is `104857600`.
     * 
     */
    @PolicyResourceProperty(name="uplinkBandwidthBits", flag="unknown_uplinkBandwidthBits")
    private Integer value_uplinkBandwidthBits;
    private boolean unknown_uplinkBandwidthBits;
    public Integer uplinkBandwidthBits() {
        if (!unknown_uplinkBandwidthBits) return value_uplinkBandwidthBits;
        throw new UndeferrableValueException("Value 'NetworkProfileArgs.uplinkBandwidthBits' is not present");
    }

    /**
     * Delay time for all packets to destination in milliseconds as an integer from `0` to `2000`.
     * 
     */
    @PolicyResourceProperty(name="uplinkDelayMs", flag="unknown_uplinkDelayMs")
    private Integer value_uplinkDelayMs;
    private boolean unknown_uplinkDelayMs;
    public Integer uplinkDelayMs() {
        if (!unknown_uplinkDelayMs) return value_uplinkDelayMs;
        throw new UndeferrableValueException("Value 'NetworkProfileArgs.uplinkDelayMs' is not present");
    }

    /**
     * Time variation in the delay of received packets in milliseconds as an integer from `0` to `2000`.
     * 
     */
    @PolicyResourceProperty(name="uplinkJitterMs", flag="unknown_uplinkJitterMs")
    private Integer value_uplinkJitterMs;
    private boolean unknown_uplinkJitterMs;
    public Integer uplinkJitterMs() {
        if (!unknown_uplinkJitterMs) return value_uplinkJitterMs;
        throw new UndeferrableValueException("Value 'NetworkProfileArgs.uplinkJitterMs' is not present");
    }

    /**
     * Proportion of received packets that fail to arrive from `0` to `100` percent.
     * 
     */
    @PolicyResourceProperty(name="uplinkLossPercent", flag="unknown_uplinkLossPercent")
    private Integer value_uplinkLossPercent;
    private boolean unknown_uplinkLossPercent;
    public Integer uplinkLossPercent() {
        if (!unknown_uplinkLossPercent) return value_uplinkLossPercent;
        throw new UndeferrableValueException("Value 'NetworkProfileArgs.uplinkLossPercent' is not present");
    }

}
