// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.redshiftserverless;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.redshiftserverless.outputs.EndpointAccessVpcEndpoint;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:redshiftserverless/endpointAccess:EndpointAccess")
public final class EndpointAccess extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The DNS address of the VPC endpoint.
     * 
     */
    @PolicyResourceProperty(name="address", flag="unknown_address")
    private String value_address;
    private boolean unknown_address;
    public String address() {
        if (!unknown_address) return value_address;
        throw new UndeferrableValueException("Value 'EndpointAccess.address' is not present");
    }

    /**
     * Amazon Resource Name (ARN) of the Redshift Serverless Endpoint Access.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'EndpointAccess.arn' is not present");
    }

    /**
     * The name of the endpoint.
     * 
     */
    @PolicyResourceProperty(name="endpointName", flag="unknown_endpointName")
    private String value_endpointName;
    private boolean unknown_endpointName;
    public String endpointName() {
        if (!unknown_endpointName) return value_endpointName;
        throw new UndeferrableValueException("Value 'EndpointAccess.endpointName' is not present");
    }

    /**
     * The owner Amazon Web Services account for the Amazon Redshift Serverless workgroup.
     * 
     */
    @PolicyResourceProperty(name="ownerAccount", flag="unknown_ownerAccount")
    private @Nullable String value_ownerAccount;
    private boolean unknown_ownerAccount;
    public @Nullable String ownerAccount() {
        if (!unknown_ownerAccount) return value_ownerAccount;
        throw new UndeferrableValueException("Value 'EndpointAccess.ownerAccount' is not present");
    }

    /**
     * The port that Amazon Redshift Serverless listens on.
     * 
     */
    @PolicyResourceProperty(name="port", flag="unknown_port")
    private Integer value_port;
    private boolean unknown_port;
    public Integer port() {
        if (!unknown_port) return value_port;
        throw new UndeferrableValueException("Value 'EndpointAccess.port' is not present");
    }

    /**
     * An array of VPC subnet IDs to associate with the endpoint.
     * 
     */
    @PolicyResourceProperty(name="subnetIds", flag="unknown_subnetIds")
    private List<String> value_subnetIds;
    private boolean unknown_subnetIds;
    public List<String> subnetIds() {
        if (!unknown_subnetIds) return value_subnetIds;
        throw new UndeferrableValueException("Value 'EndpointAccess.subnetIds' is not present");
    }

    /**
     * The VPC endpoint or the Redshift Serverless workgroup. See `VPC Endpoint` below.
     * 
     */
    @PolicyResourceProperty(name="vpcEndpoints", flag="unknown_vpcEndpoints")
    private List<EndpointAccessVpcEndpoint> value_vpcEndpoints;
    private boolean unknown_vpcEndpoints;
    public List<EndpointAccessVpcEndpoint> vpcEndpoints() {
        if (!unknown_vpcEndpoints) return value_vpcEndpoints;
        throw new UndeferrableValueException("Value 'EndpointAccess.vpcEndpoints' is not present");
    }

    /**
     * An array of security group IDs to associate with the workgroup.
     * 
     */
    @PolicyResourceProperty(name="vpcSecurityGroupIds", flag="unknown_vpcSecurityGroupIds")
    private List<String> value_vpcSecurityGroupIds;
    private boolean unknown_vpcSecurityGroupIds;
    public List<String> vpcSecurityGroupIds() {
        if (!unknown_vpcSecurityGroupIds) return value_vpcSecurityGroupIds;
        throw new UndeferrableValueException("Value 'EndpointAccess.vpcSecurityGroupIds' is not present");
    }

    /**
     * The name of the workgroup.
     * 
     */
    @PolicyResourceProperty(name="workgroupName", flag="unknown_workgroupName")
    private String value_workgroupName;
    private boolean unknown_workgroupName;
    public String workgroupName() {
        if (!unknown_workgroupName) return value_workgroupName;
        throw new UndeferrableValueException("Value 'EndpointAccess.workgroupName' is not present");
    }

}
