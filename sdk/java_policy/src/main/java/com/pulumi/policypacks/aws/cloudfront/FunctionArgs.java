// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cloudfront;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:cloudfront/function:Function")
public final class FunctionArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Source code of the function
     * 
     */
    private UndeferrableValue<String> code;

    public String code() {
        if (code == null) return null;
        return code.getValue("FunctionArgs.code");
    }

    /**
     * Comment.
     * 
     */
    private UndeferrableValue<String> comment;

    public String comment() {
        if (comment == null) return null;
        return comment.getValue("FunctionArgs.comment");
    }

    /**
     * List of `aws.cloudfront.KeyValueStore` ARNs to be associated to the function. AWS limits associations to on key value store per function.
     * 
     */
    private UndeferrableValue<List<String>> keyValueStoreAssociations;

    public List<String> keyValueStoreAssociations() {
        if (keyValueStoreAssociations == null) return null;
        return keyValueStoreAssociations.getValue("FunctionArgs.keyValueStoreAssociations");
    }

    /**
     * Unique name for your CloudFront Function.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("FunctionArgs.name");
    }

    /**
     * Whether to publish creation/change as Live CloudFront Function Version. Defaults to `true`.
     * 
     */
    private UndeferrableValue<Boolean> publish;

    public Boolean publish() {
        if (publish == null) return null;
        return publish.getValue("FunctionArgs.publish");
    }

    /**
     * Identifier of the function&#39;s runtime. Valid values are `cloudfront-js-1.0` and `cloudfront-js-2.0`.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> runtime;

    public String runtime() {
        if (runtime == null) return null;
        return runtime.getValue("FunctionArgs.runtime");
    }

}
