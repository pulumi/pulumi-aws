// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lambda;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.lambda.EventSourceMappingAmazonManagedKafkaEventSourceConfig;
import com.pulumi.policypacks.aws.lambda.EventSourceMappingDestinationConfig;
import com.pulumi.policypacks.aws.lambda.EventSourceMappingDocumentDbEventSourceConfig;
import com.pulumi.policypacks.aws.lambda.EventSourceMappingFilterCriteria;
import com.pulumi.policypacks.aws.lambda.EventSourceMappingMetricsConfig;
import com.pulumi.policypacks.aws.lambda.EventSourceMappingProvisionedPollerConfig;
import com.pulumi.policypacks.aws.lambda.EventSourceMappingScalingConfig;
import com.pulumi.policypacks.aws.lambda.EventSourceMappingSelfManagedEventSource;
import com.pulumi.policypacks.aws.lambda.EventSourceMappingSelfManagedKafkaEventSourceConfig;
import com.pulumi.policypacks.aws.lambda.EventSourceMappingSourceAccessConfiguration;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:lambda/eventSourceMapping:EventSourceMapping")
public final class EventSourceMapping extends com.pulumi.resources.PolicyResource {

    /**
     * Additional configuration block for Amazon Managed Kafka sources. Incompatible with &#34;self_managed_event_source&#34; and &#34;self_managed_kafka_event_source_config&#34;. Detailed below.
     * 
     */
    public EventSourceMappingAmazonManagedKafkaEventSourceConfig amazonManagedKafkaEventSourceConfig;



    /**
     * The event source mapping ARN.
     * 
     */
    public String arn;



    /**
     * The largest number of records that Lambda will retrieve from your event source at the time of invocation. Defaults to `100` for DynamoDB, Kinesis, MQ and MSK, `10` for SQS.
     * 
     */
    public Integer batchSize;



    /**
     * - (Optional) If the function returns an error, split the batch in two and retry. Only available for stream sources (DynamoDB and Kinesis). Defaults to `false`.
     * 
     */
    public Boolean bisectBatchOnFunctionError;



    /**
     * - (Optional) An Amazon SQS queue, Amazon SNS topic or Amazon S3 bucket (only available for Kafka sources) destination for failed records. Only available for stream sources (DynamoDB and Kinesis) and Kafka sources (Amazon MSK and Self-managed Apache Kafka). Detailed below.
     * 
     */
    public EventSourceMappingDestinationConfig destinationConfig;



    /**
     * - (Optional) Configuration settings for a DocumentDB event source. Detailed below.
     * 
     */
    public EventSourceMappingDocumentDbEventSourceConfig documentDbEventSourceConfig;



    /**
     * Determines if the mapping is enabled. This parameter can be used to enable or disable the mapping, both during resource creation and for already created resources. Defaults to `true`.
     * 
     */
    public Boolean enabled;



    /**
     * The event source ARN - this is required for Kinesis stream, DynamoDB stream, SQS queue, MQ broker, MSK cluster or DocumentDB change stream.  It is incompatible with a Self Managed Kafka source.
     * 
     */
    public String eventSourceArn;



    /**
     * The criteria to use for [event filtering](https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventfiltering.html) Kinesis stream, DynamoDB stream, SQS queue event sources. Detailed below.
     * 
     */
    public EventSourceMappingFilterCriteria filterCriteria;



    /**
     * The ARN of the Lambda function the event source mapping is sending events to. (Note: this is a computed value that differs from `function_name` above.)
     * 
     */
    public String functionArn;



    /**
     * The name or the ARN of the Lambda function that will be subscribing to events.
     * 
     */
    public String functionName;



    /**
     * A list of current response type enums applied to the event source mapping for [AWS Lambda checkpointing](https://docs.aws.amazon.com/lambda/latest/dg/with-ddb.html#services-ddb-batchfailurereporting). Only available for SQS and stream sources (DynamoDB and Kinesis). Valid values: `ReportBatchItemFailures`.
     * 
     */
    public List<String> functionResponseTypes;



    /**
     * The ARN of the Key Management Service (KMS) customer managed key that Lambda uses to encrypt your function&#39;s filter criteria.
     * 
     */
    public String kmsKeyArn;



    /**
     * The date this resource was last modified.
     * 
     */
    public String lastModified;



    /**
     * The result of the last AWS Lambda invocation of your Lambda function.
     * 
     */
    public String lastProcessingResult;



    /**
     * The maximum amount of time to gather records before invoking the function, in seconds (between 0 and 300). Records will continue to buffer (or accumulate in the case of an SQS queue event source) until either `maximum_batching_window_in_seconds` expires or `batch_size` has been met. For streaming event sources, defaults to as soon as records are available in the stream. If the batch it reads from the stream/queue only has one record in it, Lambda only sends one record to the function. Only available for stream sources (DynamoDB and Kinesis) and SQS standard queues.
     * 
     */
    public Integer maximumBatchingWindowInSeconds;



    /**
     * - (Optional) The maximum age of a record that Lambda sends to a function for processing. Only available for stream sources (DynamoDB and Kinesis). Must be either -1 (forever, and the default value) or between 60 and 604800 (inclusive).
     * 
     */
    public Integer maximumRecordAgeInSeconds;



    /**
     * - (Optional) The maximum number of times to retry when the function returns an error. Only available for stream sources (DynamoDB and Kinesis). Minimum and default of -1 (forever), maximum of 10000.
     * 
     */
    public Integer maximumRetryAttempts;



    /**
     * - (Optional) CloudWatch metrics configuration of the event source. Only available for stream sources (DynamoDB and Kinesis) and SQS queues. Detailed below.
     * 
     */
    public EventSourceMappingMetricsConfig metricsConfig;



    /**
     * - (Optional) The number of batches to process from each shard concurrently. Only available for stream sources (DynamoDB and Kinesis). Minimum and default of 1, maximum of 10.
     * 
     */
    public Integer parallelizationFactor;



    /**
     * - (Optional) Event poller configuration for the event source. Only valid for Amazon MSK or self-managed Apache Kafka sources. Detailed below.
     * 
     */
    public EventSourceMappingProvisionedPollerConfig provisionedPollerConfig;



    /**
     * The name of the Amazon MQ broker destination queue to consume. Only available for MQ sources. The list must contain exactly one queue name.
     * 
     */
    public String queues;



    /**
     * Scaling configuration of the event source. Only available for SQS queues. Detailed below.
     * 
     */
    public EventSourceMappingScalingConfig scalingConfig;



    /**
     * - (Optional) For Self Managed Kafka sources, the location of the self managed cluster. If set, configuration must also include `source_access_configuration`. Detailed below.
     * 
     */
    public EventSourceMappingSelfManagedEventSource selfManagedEventSource;



    /**
     * Additional configuration block for Self Managed Kafka sources. Incompatible with &#34;event_source_arn&#34; and &#34;amazon_managed_kafka_event_source_config&#34;. Detailed below.
     * 
     */
    public EventSourceMappingSelfManagedKafkaEventSourceConfig selfManagedKafkaEventSourceConfig;



    /**
     * For Self Managed Kafka sources, the access configuration for the source. If set, configuration must also include `self_managed_event_source`. Detailed below.
     * 
     */
    public List<EventSourceMappingSourceAccessConfiguration> sourceAccessConfigurations;



    /**
     * The position in the stream where AWS Lambda should start reading. Must be one of `AT_TIMESTAMP` (Kinesis only), `LATEST` or `TRIM_HORIZON` if getting events from Kinesis, DynamoDB, MSK or Self Managed Apache Kafka. Must not be provided if getting events from SQS. More information about these positions can be found in the [AWS DynamoDB Streams API Reference](https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_streams_GetShardIterator.html) and [AWS Kinesis API Reference](https://docs.aws.amazon.com/kinesis/latest/APIReference/API_GetShardIterator.html#Kinesis-GetShardIterator-request-ShardIteratorType).
     * 
     */
    public String startingPosition;



    /**
     * A timestamp in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) of the data record which to start reading when using `starting_position` set to `AT_TIMESTAMP`. If a record with this exact timestamp does not exist, the next later record is chosen. If the timestamp is older than the current trim horizon, the oldest available record is chosen.
     * 
     */
    public String startingPositionTimestamp;



    /**
     * The state of the event source mapping.
     * 
     */
    public String state;



    /**
     * The reason the event source mapping is in its current state.
     * 
     */
    public String stateTransitionReason;



    /**
     * Map of tags to assign to the object. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



    /**
     * The name of the Kafka topics. Only available for MSK sources. A single topic name must be specified.
     * 
     */
    public List<String> topics;



    /**
     * The duration in seconds of a processing window for [AWS Lambda streaming analytics](https://docs.aws.amazon.com/lambda/latest/dg/with-kinesis.html#services-kinesis-windows). The range is between 1 second up to 900 seconds. Only available for stream sources (DynamoDB and Kinesis).
     * 
     */
    public Integer tumblingWindowInSeconds;



    /**
     * The UUID of the created event source mapping.
     * 
     */
    public String uuid;



}
