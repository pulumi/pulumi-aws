// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.directoryservice;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.List;


@PolicyResourceType(type="aws:directoryservice/conditionalForwarder:ConditionalForwarder")
public final class ConditionalForwarder extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ID of directory.
     * 
     */
    @PolicyResourceProperty(name="directoryId", flag="unknown_directoryId")
    private String value_directoryId;
    private boolean unknown_directoryId;
    public String directoryId() {
        if (!unknown_directoryId) return value_directoryId;
        throw new UndeferrableValueException("Value 'ConditionalForwarder.directoryId' is not present");
    }

    /**
     * A list of forwarder IP addresses.
     * 
     */
    @PolicyResourceProperty(name="dnsIps", flag="unknown_dnsIps")
    private List<String> value_dnsIps;
    private boolean unknown_dnsIps;
    public List<String> dnsIps() {
        if (!unknown_dnsIps) return value_dnsIps;
        throw new UndeferrableValueException("Value 'ConditionalForwarder.dnsIps' is not present");
    }

    /**
     * The fully qualified domain name of the remote domain for which forwarders will be used.
     * 
     */
    @PolicyResourceProperty(name="remoteDomainName", flag="unknown_remoteDomainName")
    private String value_remoteDomainName;
    private boolean unknown_remoteDomainName;
    public String remoteDomainName() {
        if (!unknown_remoteDomainName) return value_remoteDomainName;
        throw new UndeferrableValueException("Value 'ConditionalForwarder.remoteDomainName' is not present");
    }

}
