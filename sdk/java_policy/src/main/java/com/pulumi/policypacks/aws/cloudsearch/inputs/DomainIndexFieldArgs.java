// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cloudsearch.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;


public final class DomainIndexFieldArgs {

    /**
     * The analysis scheme you want to use for a `text` field. The analysis scheme specifies the language-specific text processing options that are used during indexing.
     * 
     */
    @PolicyResourceProperty(name="analysisScheme", flag="unknown_analysisScheme")
    private String value_analysisScheme;
    private boolean unknown_analysisScheme;
    public String analysisScheme() {
        if (!unknown_analysisScheme) return value_analysisScheme;
        throw new UndeferrableValueException("Value 'DomainIndexFieldArgs.analysisScheme' is not present");
    }

    /**
     * The default value for the field. This value is used when no value is specified for the field in the document data.
     * 
     */
    @PolicyResourceProperty(name="defaultValue", flag="unknown_defaultValue")
    private String value_defaultValue;
    private boolean unknown_defaultValue;
    public String defaultValue() {
        if (!unknown_defaultValue) return value_defaultValue;
        throw new UndeferrableValueException("Value 'DomainIndexFieldArgs.defaultValue' is not present");
    }

    /**
     * You can get facet information by enabling this.
     * 
     */
    @PolicyResourceProperty(name="facet", flag="unknown_facet")
    private Boolean value_facet;
    private boolean unknown_facet;
    public Boolean facet() {
        if (!unknown_facet) return value_facet;
        throw new UndeferrableValueException("Value 'DomainIndexFieldArgs.facet' is not present");
    }

    /**
     * You can highlight information.
     * 
     */
    @PolicyResourceProperty(name="highlight", flag="unknown_highlight")
    private Boolean value_highlight;
    private boolean unknown_highlight;
    public Boolean highlight() {
        if (!unknown_highlight) return value_highlight;
        throw new UndeferrableValueException("Value 'DomainIndexFieldArgs.highlight' is not present");
    }

    /**
     * A unique name for the field. Field names must begin with a letter and be at least 1 and no more than 64 characters long. The allowed characters are: `a`-`z` (lower-case letters), `0`-`9`, and `_` (underscore). The name `score` is reserved and cannot be used as a field name.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'DomainIndexFieldArgs.name' is not present");
    }

    /**
     * You can enable returning the value of all searchable fields.
     * 
     */
    @PolicyResourceProperty(name="return", flag="unknown_return_")
    private Boolean value_return_;
    private boolean unknown_return_;
    public Boolean return_() {
        if (!unknown_return_) return value_return_;
        throw new UndeferrableValueException("Value 'DomainIndexFieldArgs.return_' is not present");
    }

    /**
     * You can set whether this index should be searchable or not.
     * 
     */
    @PolicyResourceProperty(name="search", flag="unknown_search")
    private Boolean value_search;
    private boolean unknown_search;
    public Boolean search() {
        if (!unknown_search) return value_search;
        throw new UndeferrableValueException("Value 'DomainIndexFieldArgs.search' is not present");
    }

    /**
     * You can enable the property to be sortable.
     * 
     */
    @PolicyResourceProperty(name="sort", flag="unknown_sort")
    private Boolean value_sort;
    private boolean unknown_sort;
    public Boolean sort() {
        if (!unknown_sort) return value_sort;
        throw new UndeferrableValueException("Value 'DomainIndexFieldArgs.sort' is not present");
    }

    /**
     * A comma-separated list of source fields to map to the field. Specifying a source field copies data from one field to another, enabling you to use the same source data in different ways by configuring different options for the fields.
     * 
     */
    @PolicyResourceProperty(name="sourceFields", flag="unknown_sourceFields")
    private String value_sourceFields;
    private boolean unknown_sourceFields;
    public String sourceFields() {
        if (!unknown_sourceFields) return value_sourceFields;
        throw new UndeferrableValueException("Value 'DomainIndexFieldArgs.sourceFields' is not present");
    }

    /**
     * The field type. Valid values: `date`, `date-array`, `double`, `double-array`, `int`, `int-array`, `literal`, `literal-array`, `text`, `text-array`.
     * 
     */
    @PolicyResourceProperty(name="type", flag="unknown_type")
    private String value_type;
    private boolean unknown_type;
    public String type() {
        if (!unknown_type) return value_type;
        throw new UndeferrableValueException("Value 'DomainIndexFieldArgs.type' is not present");
    }

}
