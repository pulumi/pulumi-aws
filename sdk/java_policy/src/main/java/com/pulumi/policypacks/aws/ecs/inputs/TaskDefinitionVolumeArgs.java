// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ecs.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.ecs.inputs.TaskDefinitionVolumeDockerVolumeConfigurationArgs;
import com.pulumi.policypacks.aws.ecs.inputs.TaskDefinitionVolumeEfsVolumeConfigurationArgs;
import com.pulumi.policypacks.aws.ecs.inputs.TaskDefinitionVolumeFsxWindowsFileServerVolumeConfigurationArgs;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;


public final class TaskDefinitionVolumeArgs {

    /**
     * Whether the volume should be configured at launch time. This is used to create Amazon EBS volumes for standalone tasks or tasks created as part of a service. Each task definition revision may only have one volume configured at launch in the volume configuration.
     * 
     */
    private UndeferrableValue<Boolean> configureAtLaunch;

    public Boolean configureAtLaunch() {
        if (configureAtLaunch == null) return null;
        return configureAtLaunch.getValue("TaskDefinitionVolumeArgs.configureAtLaunch");
    }

    /**
     * Configuration block to configure a docker volume. Detailed below.
     * 
     */
    private UndeferrableValue<TaskDefinitionVolumeDockerVolumeConfigurationArgs> dockerVolumeConfiguration;

    public TaskDefinitionVolumeDockerVolumeConfigurationArgs dockerVolumeConfiguration() {
        if (dockerVolumeConfiguration == null) return null;
        return dockerVolumeConfiguration.getValue("TaskDefinitionVolumeArgs.dockerVolumeConfiguration");
    }

    /**
     * Configuration block for an EFS volume. Detailed below.
     * 
     */
    private UndeferrableValue<TaskDefinitionVolumeEfsVolumeConfigurationArgs> efsVolumeConfiguration;

    public TaskDefinitionVolumeEfsVolumeConfigurationArgs efsVolumeConfiguration() {
        if (efsVolumeConfiguration == null) return null;
        return efsVolumeConfiguration.getValue("TaskDefinitionVolumeArgs.efsVolumeConfiguration");
    }

    /**
     * Configuration block for an FSX Windows File Server volume. Detailed below.
     * 
     */
    private UndeferrableValue<TaskDefinitionVolumeFsxWindowsFileServerVolumeConfigurationArgs> fsxWindowsFileServerVolumeConfiguration;

    public TaskDefinitionVolumeFsxWindowsFileServerVolumeConfigurationArgs fsxWindowsFileServerVolumeConfiguration() {
        if (fsxWindowsFileServerVolumeConfiguration == null) return null;
        return fsxWindowsFileServerVolumeConfiguration.getValue("TaskDefinitionVolumeArgs.fsxWindowsFileServerVolumeConfiguration");
    }

    /**
     * Path on the host container instance that is presented to the container. If not set, ECS will create a nonpersistent data volume that starts empty and is deleted after the task has finished.
     * 
     */
    private UndeferrableValue<String> hostPath;

    public String hostPath() {
        if (hostPath == null) return null;
        return hostPath.getValue("TaskDefinitionVolumeArgs.hostPath");
    }

    /**
     * Name of the volume. This name is referenced in the `sourceVolume`
     * parameter of container definition in the `mountPoints` section.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("TaskDefinitionVolumeArgs.name");
    }

}
