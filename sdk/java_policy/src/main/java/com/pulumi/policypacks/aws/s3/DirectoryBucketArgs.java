// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.s3;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.s3.inputs.DirectoryBucketLocationArgs;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:s3/directoryBucket:DirectoryBucket")
public final class DirectoryBucketArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Name of the bucket. The name must be in the format `[bucket_name]--[azid]--x-s3`. Use the `aws.s3.BucketV2` resource to manage general purpose buckets.
     * 
     */
    private UndeferrableValue<String> bucket;

    public String bucket() {
        if (bucket == null) return null;
        return bucket.getValue("DirectoryBucketArgs.bucket");
    }

    /**
     * Data redundancy. Valid values: `SingleAvailabilityZone`, `SingleLocalZone`. The default value depends on the value of the `location.type` attribute.
     * 
     */
    private UndeferrableValue<String> dataRedundancy;

    public String dataRedundancy() {
        if (dataRedundancy == null) return null;
        return dataRedundancy.getValue("DirectoryBucketArgs.dataRedundancy");
    }

    /**
     * Boolean that indicates all objects should be deleted from the bucket *when the bucket is destroyed* so that the bucket can be destroyed without error. These objects are *not* recoverable. This only deletes objects when the bucket is destroyed, *not* when setting this parameter to `true`. Once this parameter is set to `true`, there must be a successful `pulumi up` run before a destroy is required to update this value in the resource state. Without a successful `pulumi up` after this parameter is set, this flag will have no effect. If setting this field in the same operation that would require replacing the bucket or destroying the bucket, this flag will not work. Additionally when importing a bucket, a successful `pulumi up` is required to set this value in state before it will take effect on a destroy operation.
     * 
     */
    private UndeferrableValue<Boolean> forceDestroy;

    public Boolean forceDestroy() {
        if (forceDestroy == null) return null;
        return forceDestroy.getValue("DirectoryBucketArgs.forceDestroy");
    }

    /**
     * Bucket location. See Location below for more details.
     * 
     */
    private UndeferrableValue<DirectoryBucketLocationArgs> location;

    public DirectoryBucketLocationArgs location() {
        if (location == null) return null;
        return location.getValue("DirectoryBucketArgs.location");
    }

    /**
     * Bucket type. Valid values: `Directory`.
     * 
     */
    private UndeferrableValue<String> type;

    public String type() {
        if (type == null) return null;
        return type.getValue("DirectoryBucketArgs.type");
    }

}
