// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.redshift.inputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class ClusterLoggingArgs {

    /**
     * The name of an existing S3 bucket where the log files are to be stored. Must be in the same region as the cluster and the cluster must have read bucket and put object permissions.
     * For more information on the permissions required for the bucket, please read the AWS [documentation](http://docs.aws.amazon.com/redshift/latest/mgmt/db-auditing.html#db-auditing-enable-logging)
     * 
     */
    private UndeferrableValue<String> bucketName;

    public String bucketName() {
        if (bucketName == null) return null;
        return bucketName.getValue("ClusterLoggingArgs.bucketName");
    }

    /**
     * Enables logging information such as queries and connection attempts, for the specified Amazon Redshift cluster.
     * 
     */
    private UndeferrableValue<Boolean> enable;

    public Boolean enable() {
        if (enable == null) return null;
        return enable.getValue("ClusterLoggingArgs.enable");
    }

    /**
     * The log destination type. An enum with possible values of `s3` and `cloudwatch`.
     * 
     */
    private UndeferrableValue<String> logDestinationType;

    public String logDestinationType() {
        if (logDestinationType == null) return null;
        return logDestinationType.getValue("ClusterLoggingArgs.logDestinationType");
    }

    /**
     * The collection of exported log types. Log types include the connection log, user log and user activity log. Required when `log_destination_type` is `cloudwatch`. Valid log types are `connectionlog`, `userlog`, and `useractivitylog`.
     * 
     */
    private UndeferrableValue<List<String>> logExports;

    public List<String> logExports() {
        if (logExports == null) return null;
        return logExports.getValue("ClusterLoggingArgs.logExports");
    }

    /**
     * The prefix applied to the log file names.
     * 
     */
    private UndeferrableValue<String> s3KeyPrefix;

    public String s3KeyPrefix() {
        if (s3KeyPrefix == null) return null;
        return s3KeyPrefix.getValue("ClusterLoggingArgs.s3KeyPrefix");
    }

}
