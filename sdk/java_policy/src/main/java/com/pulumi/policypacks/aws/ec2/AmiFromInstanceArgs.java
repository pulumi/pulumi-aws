// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ec2.inputs.AmiFromInstanceEbsBlockDeviceArgs;
import com.pulumi.policypacks.aws.ec2.inputs.AmiFromInstanceEphemeralBlockDeviceArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ec2/amiFromInstance:AmiFromInstance")
public final class AmiFromInstanceArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
     * 
     */
    private UndeferrableValue<String> deprecationTime;

    public String deprecationTime() {
        if (deprecationTime == null) return null;
        return deprecationTime.getValue("AmiFromInstanceArgs.deprecationTime");
    }

    /**
     * Longer, human-readable description for the AMI.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("AmiFromInstanceArgs.description");
    }

    /**
     * Nested block describing an EBS block device that should be
     * attached to created instances. The structure of this block is described below.
     * 
     */
    private UndeferrableValue<List<AmiFromInstanceEbsBlockDeviceArgs>> ebsBlockDevices;

    public List<AmiFromInstanceEbsBlockDeviceArgs> ebsBlockDevices() {
        if (ebsBlockDevices == null) return null;
        return ebsBlockDevices.getValue("AmiFromInstanceArgs.ebsBlockDevices");
    }

    /**
     * Nested block describing an ephemeral block device that
     * should be attached to created instances. The structure of this block is described below.
     * 
     */
    private UndeferrableValue<List<AmiFromInstanceEphemeralBlockDeviceArgs>> ephemeralBlockDevices;

    public List<AmiFromInstanceEphemeralBlockDeviceArgs> ephemeralBlockDevices() {
        if (ephemeralBlockDevices == null) return null;
        return ephemeralBlockDevices.getValue("AmiFromInstanceArgs.ephemeralBlockDevices");
    }

    /**
     * Region-unique name for the AMI.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("AmiFromInstanceArgs.name");
    }

    /**
     * Boolean that overrides the behavior of stopping
     * the instance before snapshotting. This is risky since it may cause a snapshot of an
     * inconsistent filesystem state, but can be used to avoid downtime if the user otherwise
     * guarantees that no filesystem writes will be underway at the time of snapshot.
     * 
     */
    private UndeferrableValue<Boolean> snapshotWithoutReboot;

    public Boolean snapshotWithoutReboot() {
        if (snapshotWithoutReboot == null) return null;
        return snapshotWithoutReboot.getValue("AmiFromInstanceArgs.snapshotWithoutReboot");
    }

    /**
     * ID of the instance to use as the basis of the AMI.
     * 
     */
    private UndeferrableValue<String> sourceInstanceId;

    public String sourceInstanceId() {
        if (sourceInstanceId == null) return null;
        return sourceInstanceId.getValue("AmiFromInstanceArgs.sourceInstanceId");
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("AmiFromInstanceArgs.tags");
    }

}
