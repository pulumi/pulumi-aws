// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.quicksight;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.quicksight.inputs.VpcConnectionTimeoutsArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:quicksight/vpcConnection:VpcConnection")
public final class VpcConnectionArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * AWS account ID.
     * 
     */
    private UndeferrableValue<String> awsAccountId;

    public String awsAccountId() {
        if (awsAccountId == null) return null;
        return awsAccountId.getValue("VpcConnectionArgs.awsAccountId");
    }

    /**
     * A list of IP addresses of DNS resolver endpoints for the VPC connection.
     * 
     */
    private UndeferrableValue<List<String>> dnsResolvers;

    public List<String> dnsResolvers() {
        if (dnsResolvers == null) return null;
        return dnsResolvers.getValue("VpcConnectionArgs.dnsResolvers");
    }

    /**
     * The display name for the VPC connection.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("VpcConnectionArgs.name");
    }

    /**
     * The IAM role to associate with the VPC connection.
     * 
     */
    private UndeferrableValue<String> roleArn;

    public String roleArn() {
        if (roleArn == null) return null;
        return roleArn.getValue("VpcConnectionArgs.roleArn");
    }

    /**
     * A list of security group IDs for the VPC connection.
     * 
     */
    private UndeferrableValue<List<String>> securityGroupIds;

    public List<String> securityGroupIds() {
        if (securityGroupIds == null) return null;
        return securityGroupIds.getValue("VpcConnectionArgs.securityGroupIds");
    }

    /**
     * A list of subnet IDs for the VPC connection.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<List<String>> subnetIds;

    public List<String> subnetIds() {
        if (subnetIds == null) return null;
        return subnetIds.getValue("VpcConnectionArgs.subnetIds");
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("VpcConnectionArgs.tags");
    }

    private UndeferrableValue<VpcConnectionTimeoutsArgs> timeouts;

    public VpcConnectionTimeoutsArgs timeouts() {
        if (timeouts == null) return null;
        return timeouts.getValue("VpcConnectionArgs.timeouts");
    }

    /**
     * The ID of the VPC connection.
     * 
     */
    private UndeferrableValue<String> vpcConnectionId;

    public String vpcConnectionId() {
        if (vpcConnectionId == null) return null;
        return vpcConnectionId.getValue("VpcConnectionArgs.vpcConnectionId");
    }

}
