// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.medialive.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.medialive.inputs.ChannelEncoderSettingsAudioDescriptionAudioWatermarkSettingsNielsenWatermarksSettingsNielsenCbetSettingsArgs;
import com.pulumi.policypacks.aws.medialive.inputs.ChannelEncoderSettingsAudioDescriptionAudioWatermarkSettingsNielsenWatermarksSettingsNielsenNaesIiNwSettingArgs;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class ChannelEncoderSettingsAudioDescriptionAudioWatermarkSettingsNielsenWatermarksSettingsArgs {

    /**
     * Used to insert watermarks of type Nielsen CBET. See Nielsen CBET Settings for more details.
     * 
     */
    @PolicyResourceProperty(name="nielsenCbetSettings", flag="unknown_nielsenCbetSettings")
    private ChannelEncoderSettingsAudioDescriptionAudioWatermarkSettingsNielsenWatermarksSettingsNielsenCbetSettingsArgs value_nielsenCbetSettings;
    private boolean unknown_nielsenCbetSettings;
    public ChannelEncoderSettingsAudioDescriptionAudioWatermarkSettingsNielsenWatermarksSettingsNielsenCbetSettingsArgs nielsenCbetSettings() {
        if (!unknown_nielsenCbetSettings) return value_nielsenCbetSettings;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsAudioDescriptionAudioWatermarkSettingsNielsenWatermarksSettingsArgs.nielsenCbetSettings' is not present");
    }

    /**
     * Distribution types to assign to the watermarks. Options are `PROGRAM_CONTENT` and `FINAL_DISTRIBUTOR`.
     * 
     */
    @PolicyResourceProperty(name="nielsenDistributionType", flag="unknown_nielsenDistributionType")
    private String value_nielsenDistributionType;
    private boolean unknown_nielsenDistributionType;
    public String nielsenDistributionType() {
        if (!unknown_nielsenDistributionType) return value_nielsenDistributionType;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsAudioDescriptionAudioWatermarkSettingsNielsenWatermarksSettingsArgs.nielsenDistributionType' is not present");
    }

    /**
     * Used to insert watermarks of type Nielsen NAES, II (N2) and Nielsen NAES VI (NW). See Nielsen NAES II NW Settings for more details.
     * 
     */
    @PolicyResourceProperty(name="nielsenNaesIiNwSettings", flag="unknown_nielsenNaesIiNwSettings")
    private List<ChannelEncoderSettingsAudioDescriptionAudioWatermarkSettingsNielsenWatermarksSettingsNielsenNaesIiNwSettingArgs> value_nielsenNaesIiNwSettings;
    private boolean unknown_nielsenNaesIiNwSettings;
    public List<ChannelEncoderSettingsAudioDescriptionAudioWatermarkSettingsNielsenWatermarksSettingsNielsenNaesIiNwSettingArgs> nielsenNaesIiNwSettings() {
        if (!unknown_nielsenNaesIiNwSettings) return value_nielsenNaesIiNwSettings;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsAudioDescriptionAudioWatermarkSettingsNielsenWatermarksSettingsArgs.nielsenNaesIiNwSettings' is not present");
    }

}
