// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.efs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.efs.inputs.AccessPointPosixUserArgs;
import com.pulumi.policypacks.aws.efs.inputs.AccessPointRootDirectoryArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:efs/accessPoint:AccessPoint")
public final class AccessPointArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * ID of the file system for which the access point is intended.
     * 
     */
    @PolicyResourceProperty(name="fileSystemId", flag="unknown_fileSystemId")
    private String value_fileSystemId;
    private boolean unknown_fileSystemId;
    public String fileSystemId() {
        if (!unknown_fileSystemId) return value_fileSystemId;
        throw new UndeferrableValueException("Value 'AccessPointArgs.fileSystemId' is not present");
    }

    /**
     * Operating system user and group applied to all file system requests made using the access point. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="posixUser", flag="unknown_posixUser")
    private AccessPointPosixUserArgs value_posixUser;
    private boolean unknown_posixUser;
    public AccessPointPosixUserArgs posixUser() {
        if (!unknown_posixUser) return value_posixUser;
        throw new UndeferrableValueException("Value 'AccessPointArgs.posixUser' is not present");
    }

    /**
     * Directory on the Amazon EFS file system that the access point provides access to. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="rootDirectory", flag="unknown_rootDirectory")
    private AccessPointRootDirectoryArgs value_rootDirectory;
    private boolean unknown_rootDirectory;
    public AccessPointRootDirectoryArgs rootDirectory() {
        if (!unknown_rootDirectory) return value_rootDirectory;
        throw new UndeferrableValueException("Value 'AccessPointArgs.rootDirectory' is not present");
    }

    /**
     * Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'AccessPointArgs.tags' is not present");
    }

}
