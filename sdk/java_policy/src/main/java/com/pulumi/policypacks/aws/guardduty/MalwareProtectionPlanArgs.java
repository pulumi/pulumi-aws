// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.guardduty;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.guardduty.inputs.MalwareProtectionPlanActionArgs;
import com.pulumi.policypacks.aws.guardduty.inputs.MalwareProtectionPlanProtectedResourceArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:guardduty/malwareProtectionPlan:MalwareProtectionPlan")
public final class MalwareProtectionPlanArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Information about whether the tags will be added to the S3 object after scanning. See `actions` below.
     * 
     */
    private UndeferrableValue<List<MalwareProtectionPlanActionArgs>> actions;

    public List<MalwareProtectionPlanActionArgs> actions() {
        if (actions == null) return null;
        return actions.getValue("MalwareProtectionPlanArgs.actions");
    }

    /**
     * Information about the protected resource that is associated with the created Malware Protection plan. Presently, S3Bucket is the only supported protected resource. See `protected_resource` below.
     * 
     */
    private UndeferrableValue<MalwareProtectionPlanProtectedResourceArgs> protectedResource;

    public MalwareProtectionPlanProtectedResourceArgs protectedResource() {
        if (protectedResource == null) return null;
        return protectedResource.getValue("MalwareProtectionPlanArgs.protectedResource");
    }

    /**
     * ARN of IAM role that includes the permissions required to scan and add tags to the associated protected resource.
     * 
     */
    private UndeferrableValue<String> role;

    public String role() {
        if (role == null) return null;
        return role.getValue("MalwareProtectionPlanArgs.role");
    }

    /**
     * Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("MalwareProtectionPlanArgs.tags");
    }

}
