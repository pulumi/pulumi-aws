// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.mwaa.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;


public final class EnvironmentLoggingConfigurationTaskLogsArgs {

    @PolicyResourceProperty(name="cloudWatchLogGroupArn", flag="unknown_cloudWatchLogGroupArn")
    private String value_cloudWatchLogGroupArn;
    private boolean unknown_cloudWatchLogGroupArn;
    public String cloudWatchLogGroupArn() {
        if (!unknown_cloudWatchLogGroupArn) return value_cloudWatchLogGroupArn;
        throw new UndeferrableValueException("Value 'EnvironmentLoggingConfigurationTaskLogsArgs.cloudWatchLogGroupArn' is not present");
    }

    /**
     * Enabling or disabling the collection of logs
     * 
     */
    @PolicyResourceProperty(name="enabled", flag="unknown_enabled")
    private Boolean value_enabled;
    private boolean unknown_enabled;
    public Boolean enabled() {
        if (!unknown_enabled) return value_enabled;
        throw new UndeferrableValueException("Value 'EnvironmentLoggingConfigurationTaskLogsArgs.enabled' is not present");
    }

    /**
     * Logging level. Valid values: `CRITICAL`, `ERROR`, `WARNING`, `INFO`, `DEBUG`. Will be `INFO` by default.
     * 
     */
    @PolicyResourceProperty(name="logLevel", flag="unknown_logLevel")
    private String value_logLevel;
    private boolean unknown_logLevel;
    public String logLevel() {
        if (!unknown_logLevel) return value_logLevel;
        throw new UndeferrableValueException("Value 'EnvironmentLoggingConfigurationTaskLogsArgs.logLevel' is not present");
    }

}
