// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ecs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ecs.inputs.ClusterConfigurationArgs;
import com.pulumi.policypacks.aws.ecs.inputs.ClusterServiceConnectDefaultsArgs;
import com.pulumi.policypacks.aws.ecs.inputs.ClusterSettingArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ecs/cluster:Cluster")
public final class ClusterArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Execute command configuration for the cluster. See `configuration` Block for details.
     * 
     */
    @PolicyResourceProperty(name="configuration", flag="unknown_configuration")
    private ClusterConfigurationArgs value_configuration;
    private boolean unknown_configuration;
    public ClusterConfigurationArgs configuration() {
        if (!unknown_configuration) return value_configuration;
        throw new UndeferrableValueException("Value 'ClusterArgs.configuration' is not present");
    }

    /**
     * Name of the cluster (up to 255 letters, numbers, hyphens, and underscores)
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'ClusterArgs.name' is not present");
    }

    /**
     * Default Service Connect namespace. See `service_connect_defaults` Block for details.
     * 
     */
    @PolicyResourceProperty(name="serviceConnectDefaults", flag="unknown_serviceConnectDefaults")
    private ClusterServiceConnectDefaultsArgs value_serviceConnectDefaults;
    private boolean unknown_serviceConnectDefaults;
    public ClusterServiceConnectDefaultsArgs serviceConnectDefaults() {
        if (!unknown_serviceConnectDefaults) return value_serviceConnectDefaults;
        throw new UndeferrableValueException("Value 'ClusterArgs.serviceConnectDefaults' is not present");
    }

    /**
     * Configuration block(s) with cluster settings. For example, this can be used to enable CloudWatch Container Insights for a cluster. See `setting` Block for details.
     * 
     */
    @PolicyResourceProperty(name="settings", flag="unknown_settings")
    private List<ClusterSettingArgs> value_settings;
    private boolean unknown_settings;
    public List<ClusterSettingArgs> settings() {
        if (!unknown_settings) return value_settings;
        throw new UndeferrableValueException("Value 'ClusterArgs.settings' is not present");
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'ClusterArgs.tags' is not present");
    }

}
