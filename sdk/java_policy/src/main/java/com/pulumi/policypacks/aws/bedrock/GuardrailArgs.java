// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.bedrock;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.bedrock.inputs.GuardrailContentPolicyConfigArgs;
import com.pulumi.policypacks.aws.bedrock.inputs.GuardrailContextualGroundingPolicyConfigArgs;
import com.pulumi.policypacks.aws.bedrock.inputs.GuardrailSensitiveInformationPolicyConfigArgs;
import com.pulumi.policypacks.aws.bedrock.inputs.GuardrailTimeoutsArgs;
import com.pulumi.policypacks.aws.bedrock.inputs.GuardrailTopicPolicyConfigArgs;
import com.pulumi.policypacks.aws.bedrock.inputs.GuardrailWordPolicyConfigArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:bedrock/guardrail:Guardrail")
public final class GuardrailArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Message to return when the guardrail blocks a prompt.
     * 
     */
    private UndeferrableValue<String> blockedInputMessaging;

    public String blockedInputMessaging() {
        if (blockedInputMessaging == null) return null;
        return blockedInputMessaging.getValue("GuardrailArgs.blockedInputMessaging");
    }

    /**
     * Message to return when the guardrail blocks a model response.
     * 
     */
    private UndeferrableValue<String> blockedOutputsMessaging;

    public String blockedOutputsMessaging() {
        if (blockedOutputsMessaging == null) return null;
        return blockedOutputsMessaging.getValue("GuardrailArgs.blockedOutputsMessaging");
    }

    /**
     * Content policy config for a guardrail. See Content Policy Config for more information.
     * 
     */
    private UndeferrableValue<GuardrailContentPolicyConfigArgs> contentPolicyConfig;

    public GuardrailContentPolicyConfigArgs contentPolicyConfig() {
        if (contentPolicyConfig == null) return null;
        return contentPolicyConfig.getValue("GuardrailArgs.contentPolicyConfig");
    }

    /**
     * Contextual grounding policy config for a guardrail. See Contextual Grounding Policy Config for more information.
     * 
     */
    private UndeferrableValue<GuardrailContextualGroundingPolicyConfigArgs> contextualGroundingPolicyConfig;

    public GuardrailContextualGroundingPolicyConfigArgs contextualGroundingPolicyConfig() {
        if (contextualGroundingPolicyConfig == null) return null;
        return contextualGroundingPolicyConfig.getValue("GuardrailArgs.contextualGroundingPolicyConfig");
    }

    /**
     * Description of the guardrail or its version.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("GuardrailArgs.description");
    }

    /**
     * The KMS key with which the guardrail was encrypted at rest.
     * 
     */
    private UndeferrableValue<String> kmsKeyArn;

    public String kmsKeyArn() {
        if (kmsKeyArn == null) return null;
        return kmsKeyArn.getValue("GuardrailArgs.kmsKeyArn");
    }

    /**
     * Name of the guardrail.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("GuardrailArgs.name");
    }

    /**
     * Sensitive information policy config for a guardrail. See Sensitive Information Policy Config for more information.
     * 
     */
    private UndeferrableValue<GuardrailSensitiveInformationPolicyConfigArgs> sensitiveInformationPolicyConfig;

    public GuardrailSensitiveInformationPolicyConfigArgs sensitiveInformationPolicyConfig() {
        if (sensitiveInformationPolicyConfig == null) return null;
        return sensitiveInformationPolicyConfig.getValue("GuardrailArgs.sensitiveInformationPolicyConfig");
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("GuardrailArgs.tags");
    }

    private UndeferrableValue<GuardrailTimeoutsArgs> timeouts;

    public GuardrailTimeoutsArgs timeouts() {
        if (timeouts == null) return null;
        return timeouts.getValue("GuardrailArgs.timeouts");
    }

    /**
     * Topic policy config for a guardrail. See Topic Policy Config for more information.
     * 
     */
    private UndeferrableValue<GuardrailTopicPolicyConfigArgs> topicPolicyConfig;

    public GuardrailTopicPolicyConfigArgs topicPolicyConfig() {
        if (topicPolicyConfig == null) return null;
        return topicPolicyConfig.getValue("GuardrailArgs.topicPolicyConfig");
    }

    /**
     * Word policy config for a guardrail. See Word Policy Config for more information.
     * 
     */
    private UndeferrableValue<GuardrailWordPolicyConfigArgs> wordPolicyConfig;

    public GuardrailWordPolicyConfigArgs wordPolicyConfig() {
        if (wordPolicyConfig == null) return null;
        return wordPolicyConfig.getValue("GuardrailArgs.wordPolicyConfig");
    }

}
