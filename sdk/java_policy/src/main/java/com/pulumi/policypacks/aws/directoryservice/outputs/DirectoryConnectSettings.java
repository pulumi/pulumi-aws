// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.directoryservice.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class DirectoryConnectSettings {

    @PolicyResourceProperty(name="availabilityZones", flag="unknown_availabilityZones")
    private @Nullable List<String> value_availabilityZones;
    private boolean unknown_availabilityZones;
    public @Nullable List<String> availabilityZones() {
        if (!unknown_availabilityZones) return value_availabilityZones;
        throw new UndeferrableValueException("Value 'DirectoryConnectSettings.availabilityZones' is not present");
    }

    /**
     * The IP addresses of the AD Connector servers.
     * 
     */
    @PolicyResourceProperty(name="connectIps", flag="unknown_connectIps")
    private @Nullable List<String> value_connectIps;
    private boolean unknown_connectIps;
    public @Nullable List<String> connectIps() {
        if (!unknown_connectIps) return value_connectIps;
        throw new UndeferrableValueException("Value 'DirectoryConnectSettings.connectIps' is not present");
    }

    /**
     * The DNS IP addresses of the domain to connect to.
     * 
     */
    @PolicyResourceProperty(name="customerDnsIps", flag="unknown_customerDnsIps")
    private List<String> value_customerDnsIps;
    private boolean unknown_customerDnsIps;
    public List<String> customerDnsIps() {
        if (!unknown_customerDnsIps) return value_customerDnsIps;
        throw new UndeferrableValueException("Value 'DirectoryConnectSettings.customerDnsIps' is not present");
    }

    /**
     * The username corresponding to the password provided.
     * 
     */
    @PolicyResourceProperty(name="customerUsername", flag="unknown_customerUsername")
    private String value_customerUsername;
    private boolean unknown_customerUsername;
    public String customerUsername() {
        if (!unknown_customerUsername) return value_customerUsername;
        throw new UndeferrableValueException("Value 'DirectoryConnectSettings.customerUsername' is not present");
    }

    /**
     * The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
     * 
     */
    @PolicyResourceProperty(name="subnetIds", flag="unknown_subnetIds")
    private List<String> value_subnetIds;
    private boolean unknown_subnetIds;
    public List<String> subnetIds() {
        if (!unknown_subnetIds) return value_subnetIds;
        throw new UndeferrableValueException("Value 'DirectoryConnectSettings.subnetIds' is not present");
    }

    /**
     * The identifier of the VPC that the directory is in.
     * 
     */
    @PolicyResourceProperty(name="vpcId", flag="unknown_vpcId")
    private String value_vpcId;
    private boolean unknown_vpcId;
    public String vpcId() {
        if (!unknown_vpcId) return value_vpcId;
        throw new UndeferrableValueException("Value 'DirectoryConnectSettings.vpcId' is not present");
    }

}
