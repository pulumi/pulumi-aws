// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.directoryservice.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class DirectoryConnectSettings {

    private @Nullable UndeferrableValue<List<String>> availabilityZones;

    public @Nullable List<String> availabilityZones() {
        if (availabilityZones == null) return null;
        return availabilityZones.getValue("DirectoryConnectSettings.availabilityZones");
    }

    /**
     * The IP addresses of the AD Connector servers.
     * 
     */
    private @Nullable UndeferrableValue<List<String>> connectIps;

    public @Nullable List<String> connectIps() {
        if (connectIps == null) return null;
        return connectIps.getValue("DirectoryConnectSettings.connectIps");
    }

    /**
     * The DNS IP addresses of the domain to connect to.
     * 
     */
    private UndeferrableValue<List<String>> customerDnsIps;

    public List<String> customerDnsIps() {
        if (customerDnsIps == null) return null;
        return customerDnsIps.getValue("DirectoryConnectSettings.customerDnsIps");
    }

    /**
     * The username corresponding to the password provided.
     * 
     */
    private UndeferrableValue<String> customerUsername;

    public String customerUsername() {
        if (customerUsername == null) return null;
        return customerUsername.getValue("DirectoryConnectSettings.customerUsername");
    }

    /**
     * The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
     * 
     */
    private UndeferrableValue<List<String>> subnetIds;

    public List<String> subnetIds() {
        if (subnetIds == null) return null;
        return subnetIds.getValue("DirectoryConnectSettings.subnetIds");
    }

    /**
     * The identifier of the VPC that the directory is in.
     * 
     */
    private UndeferrableValue<String> vpcId;

    public String vpcId() {
        if (vpcId == null) return null;
        return vpcId.getValue("DirectoryConnectSettings.vpcId");
    }

}
