// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.iot.inputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.String;
import javax.annotation.Nullable;


public final class TopicRuleCloudwatchMetricArgs {

    /**
     * The CloudWatch metric name.
     * 
     */
    private UndeferrableValue<String> metricName;

    public String metricName() {
        if (metricName == null) return null;
        return metricName.getValue("TopicRuleCloudwatchMetricArgs.metricName");
    }

    /**
     * The CloudWatch metric namespace name.
     * 
     */
    private UndeferrableValue<String> metricNamespace;

    public String metricNamespace() {
        if (metricNamespace == null) return null;
        return metricNamespace.getValue("TopicRuleCloudwatchMetricArgs.metricNamespace");
    }

    /**
     * An optional Unix timestamp (http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp).
     * 
     */
    private UndeferrableValue<String> metricTimestamp;

    public String metricTimestamp() {
        if (metricTimestamp == null) return null;
        return metricTimestamp.getValue("TopicRuleCloudwatchMetricArgs.metricTimestamp");
    }

    /**
     * The metric unit (supported units can be found here: http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit)
     * 
     */
    private UndeferrableValue<String> metricUnit;

    public String metricUnit() {
        if (metricUnit == null) return null;
        return metricUnit.getValue("TopicRuleCloudwatchMetricArgs.metricUnit");
    }

    /**
     * The CloudWatch metric value.
     * 
     */
    private UndeferrableValue<String> metricValue;

    public String metricValue() {
        if (metricValue == null) return null;
        return metricValue.getValue("TopicRuleCloudwatchMetricArgs.metricValue");
    }

    /**
     * The IAM role ARN that allows access to the CloudWatch metric.
     * 
     */
    private UndeferrableValue<String> roleArn;

    public String roleArn() {
        if (roleArn == null) return null;
        return roleArn.getValue("TopicRuleCloudwatchMetricArgs.roleArn");
    }

}
