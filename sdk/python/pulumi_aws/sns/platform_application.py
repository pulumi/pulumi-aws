# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class PlatformApplication(pulumi.CustomResource):
    """
    Provides an SNS platform application resource
    """
    def __init__(__self__, __name__, __opts__=None, event_delivery_failure_topic_arn=None, event_endpoint_created_topic_arn=None, event_endpoint_deleted_topic_arn=None, event_endpoint_updated_topic_arn=None, failure_feedback_role_arn=None, name=None, platform=None, platform_credential=None, platform_principal=None, success_feedback_role_arn=None, success_feedback_sample_rate=None):
        """Create a PlatformApplication resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['eventDeliveryFailureTopicArn'] = event_delivery_failure_topic_arn

        __props__['eventEndpointCreatedTopicArn'] = event_endpoint_created_topic_arn

        __props__['eventEndpointDeletedTopicArn'] = event_endpoint_deleted_topic_arn

        __props__['eventEndpointUpdatedTopicArn'] = event_endpoint_updated_topic_arn

        __props__['failureFeedbackRoleArn'] = failure_feedback_role_arn

        __props__['name'] = name

        if not platform:
            raise TypeError('Missing required property platform')
        __props__['platform'] = platform

        if not platform_credential:
            raise TypeError('Missing required property platform_credential')
        __props__['platformCredential'] = platform_credential

        __props__['platformPrincipal'] = platform_principal

        __props__['successFeedbackRoleArn'] = success_feedback_role_arn

        __props__['successFeedbackSampleRate'] = success_feedback_sample_rate

        __props__['arn'] = None

        super(PlatformApplication, __self__).__init__(
            'aws:sns/platformApplication:PlatformApplication',
            __name__,
            __props__,
            __opts__)

