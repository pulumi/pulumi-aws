# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import pulumi
import pulumi.runtime
from .. import utilities, tables

class SmsPreferences(pulumi.CustomResource):
    default_sender_id: pulumi.Output[str]
    """
    A string, such as your business brand, that is displayed as the sender on the receiving device.
    """
    default_sms_type: pulumi.Output[str]
    """
    The type of SMS message that you will send by default. Possible values are: Promotional, Transactional
    """
    delivery_status_iam_role_arn: pulumi.Output[str]
    """
    The ARN of the IAM role that allows Amazon SNS to write logs about SMS deliveries in CloudWatch Logs.
    """
    delivery_status_success_sampling_rate: pulumi.Output[str]
    """
    The percentage of successful SMS deliveries for which Amazon SNS will write logs in CloudWatch Logs. The value must be between 0 and 100.
    """
    monthly_spend_limit: pulumi.Output[str]
    """
    The maximum amount in USD that you are willing to spend each month to send SMS messages.
    """
    usage_report_s3_bucket: pulumi.Output[str]
    """
    The name of the Amazon S3 bucket to receive daily SMS usage reports from Amazon SNS.
    """
    def __init__(__self__, __name__, __opts__=None, default_sender_id=None, default_sms_type=None, delivery_status_iam_role_arn=None, delivery_status_success_sampling_rate=None, monthly_spend_limit=None, usage_report_s3_bucket=None):
        """
        Provides a way to set SNS SMS preferences.
        
        
        :param str __name__: The name of the resource.
        :param pulumi.ResourceOptions __opts__: Options for the resource.
        :param pulumi.Input[str] default_sender_id: A string, such as your business brand, that is displayed as the sender on the receiving device.
        :param pulumi.Input[str] default_sms_type: The type of SMS message that you will send by default. Possible values are: Promotional, Transactional
        :param pulumi.Input[str] delivery_status_iam_role_arn: The ARN of the IAM role that allows Amazon SNS to write logs about SMS deliveries in CloudWatch Logs.
        :param pulumi.Input[str] delivery_status_success_sampling_rate: The percentage of successful SMS deliveries for which Amazon SNS will write logs in CloudWatch Logs. The value must be between 0 and 100.
        :param pulumi.Input[str] monthly_spend_limit: The maximum amount in USD that you are willing to spend each month to send SMS messages.
        :param pulumi.Input[str] usage_report_s3_bucket: The name of the Amazon S3 bucket to receive daily SMS usage reports from Amazon SNS.
        """
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['default_sender_id'] = default_sender_id

        __props__['default_sms_type'] = default_sms_type

        __props__['delivery_status_iam_role_arn'] = delivery_status_iam_role_arn

        __props__['delivery_status_success_sampling_rate'] = delivery_status_success_sampling_rate

        __props__['monthly_spend_limit'] = monthly_spend_limit

        __props__['usage_report_s3_bucket'] = usage_report_s3_bucket

        super(SmsPreferences, __self__).__init__(
            'aws:sns/smsPreferences:SmsPreferences',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

