# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from .. import utilities, tables

class Classifier(pulumi.CustomResource):
    grok_classifier: pulumi.Output[dict]
    """
    A classifier that uses grok patterns. Defined below.
    """
    json_classifier: pulumi.Output[dict]
    """
    A classifier for JSON content. Defined below.
    """
    name: pulumi.Output[str]
    """
    The name of the classifier.
    """
    xml_classifier: pulumi.Output[dict]
    """
    A classifier for XML content. Defined below.
    """
    def __init__(__self__, resource_name, opts=None, grok_classifier=None, json_classifier=None, name=None, xml_classifier=None, __name__=None, __opts__=None):
        """
        Provides a Glue Classifier resource.
        
        > **NOTE:** It is only valid to create one type of classifier (grok, JSON, or XML). Changing classifier types will recreate the classifier.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[dict] grok_classifier: A classifier that uses grok patterns. Defined below.
        :param pulumi.Input[dict] json_classifier: A classifier for JSON content. Defined below.
        :param pulumi.Input[str] name: The name of the classifier.
        :param pulumi.Input[dict] xml_classifier: A classifier for XML content. Defined below.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if not resource_name:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(resource_name, str):
            raise TypeError('Expected resource name to be a string')
        if opts and not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['grok_classifier'] = grok_classifier

        __props__['json_classifier'] = json_classifier

        __props__['name'] = name

        __props__['xml_classifier'] = xml_classifier

        if opts is None:
            opts = pulumi.ResourceOptions()
        if opts.version is None:
            opts.version = utilities.get_version()
        super(Classifier, __self__).__init__(
            'aws:glue/classifier:Classifier',
            resource_name,
            __props__,
            opts)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

