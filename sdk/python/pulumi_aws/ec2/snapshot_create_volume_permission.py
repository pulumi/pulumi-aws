# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime

class SnapshotCreateVolumePermission(pulumi.CustomResource):
    """
    Adds permission to create volumes off of a given EBS Snapshot.
    """
    def __init__(__self__, __name__, __opts__=None, account_id=None, snapshot_id=None):
        """Create a SnapshotCreateVolumePermission resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not account_id:
            raise TypeError('Missing required property account_id')
        elif not isinstance(account_id, basestring):
            raise TypeError('Expected property account_id to be a basestring')
        __self__.account_id = account_id
        """
        An AWS Account ID to add create volume permissions
        """
        __props__['accountId'] = account_id

        if not snapshot_id:
            raise TypeError('Missing required property snapshot_id')
        elif not isinstance(snapshot_id, basestring):
            raise TypeError('Expected property snapshot_id to be a basestring')
        __self__.snapshot_id = snapshot_id
        """
        A snapshot ID
        """
        __props__['snapshotId'] = snapshot_id

        super(SnapshotCreateVolumePermission, __self__).__init__(
            'aws:ec2/snapshotCreateVolumePermission:SnapshotCreateVolumePermission',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'accountId' in outs:
            self.account_id = outs['accountId']
        if 'snapshotId' in outs:
            self.snapshot_id = outs['snapshotId']
