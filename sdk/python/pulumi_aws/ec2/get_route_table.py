# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime

class GetRouteTableResult(object):
    """
    A collection of values returned by getRouteTable.
    """
    def __init__(__self__, associations=None, route_table_id=None, routes=None, subnet_id=None, tags=None, vpc_id=None):
        if not associations:
            raise TypeError('Missing required argument associations')
        elif not isinstance(associations, list):
            raise TypeError('Expected argument associations to be a list')
        __self__.associations = associations
        if not route_table_id:
            raise TypeError('Missing required argument route_table_id')
        elif not isinstance(route_table_id, basestring):
            raise TypeError('Expected argument route_table_id to be a basestring')
        __self__.route_table_id = route_table_id
        """
        The Route Table ID.
        """
        if not routes:
            raise TypeError('Missing required argument routes')
        elif not isinstance(routes, list):
            raise TypeError('Expected argument routes to be a list')
        __self__.routes = routes
        if not subnet_id:
            raise TypeError('Missing required argument subnet_id')
        elif not isinstance(subnet_id, basestring):
            raise TypeError('Expected argument subnet_id to be a basestring')
        __self__.subnet_id = subnet_id
        """
        The Subnet ID.
        """
        if not tags:
            raise TypeError('Missing required argument tags')
        elif not isinstance(tags, dict):
            raise TypeError('Expected argument tags to be a dict')
        __self__.tags = tags
        if not vpc_id:
            raise TypeError('Missing required argument vpc_id')
        elif not isinstance(vpc_id, basestring):
            raise TypeError('Expected argument vpc_id to be a basestring')
        __self__.vpc_id = vpc_id

def get_route_table(filters=None, route_table_id=None, subnet_id=None, tags=None, vpc_id=None):
    """
    `aws_route_table` provides details about a specific Route Table.
    
    This resource can prove useful when a module accepts a Subnet id as
    an input variable and needs to, for example, add a route in
    the Route Table.
    """
    __args__ = dict()

    __args__['filters'] = filters
    __args__['routeTableId'] = route_table_id
    __args__['subnetId'] = subnet_id
    __args__['tags'] = tags
    __args__['vpcId'] = vpc_id
    __ret__ = pulumi.runtime.invoke('aws:ec2/getRouteTable:getRouteTable', __args__)

    return GetRouteTableResult(
        associations=__ret__['associations'],
        route_table_id=__ret__['routeTableId'],
        routes=__ret__['routes'],
        subnet_id=__ret__['subnetId'],
        tags=__ret__['tags'],
        vpc_id=__ret__['vpcId'])
