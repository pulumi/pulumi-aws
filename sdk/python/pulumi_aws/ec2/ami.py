# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class Ami(pulumi.CustomResource):
    """
    The AMI resource allows the creation and management of a completely-custom
    *Amazon Machine Image* (AMI).
    
    If you just want to duplicate an existing AMI, possibly copying it to another
    region, it's better to use `aws_ami_copy` instead.
    
    If you just want to share an existing AMI with another AWS account,
    it's better to use `aws_ami_launch_permission` instead.
    """
    def __init__(__self__, __name__, __opts__=None, architecture=None, description=None, ebs_block_devices=None, ena_support=None, ephemeral_block_devices=None, image_location=None, kernel_id=None, name=None, ramdisk_id=None, root_device_name=None, sriov_net_support=None, tags=None, virtualization_type=None):
        """Create a Ami resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['architecture'] = architecture

        __props__['description'] = description

        __props__['ebsBlockDevices'] = ebs_block_devices

        __props__['enaSupport'] = ena_support

        __props__['ephemeralBlockDevices'] = ephemeral_block_devices

        __props__['imageLocation'] = image_location

        __props__['kernelId'] = kernel_id

        __props__['name'] = name

        __props__['ramdiskId'] = ramdisk_id

        __props__['rootDeviceName'] = root_device_name

        __props__['sriovNetSupport'] = sriov_net_support

        __props__['tags'] = tags

        __props__['virtualizationType'] = virtualization_type

        __props__['manage_ebs_snapshots'] = None
        __props__['root_snapshot_id'] = None

        super(Ami, __self__).__init__(
            'aws:ec2/ami:Ami',
            __name__,
            __props__,
            __opts__)

