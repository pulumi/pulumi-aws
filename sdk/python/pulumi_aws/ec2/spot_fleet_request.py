# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class SpotFleetRequest(pulumi.CustomResource):
    """
    Provides an EC2 Spot Fleet Request resource. This allows a fleet of Spot
    instances to be requested on the Spot market.
    """
    def __init__(__self__, __name__, __opts__=None, allocation_strategy=None, excess_capacity_termination_policy=None, fleet_type=None, iam_fleet_role=None, instance_interruption_behaviour=None, instance_pools_to_use_count=None, launch_specifications=None, load_balancers=None, replace_unhealthy_instances=None, spot_price=None, target_capacity=None, target_group_arns=None, terminate_instances_with_expiration=None, valid_from=None, valid_until=None, wait_for_fulfillment=None):
        """Create a SpotFleetRequest resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['allocationStrategy'] = allocation_strategy

        __props__['excessCapacityTerminationPolicy'] = excess_capacity_termination_policy

        __props__['fleetType'] = fleet_type

        if not iam_fleet_role:
            raise TypeError('Missing required property iam_fleet_role')
        __props__['iamFleetRole'] = iam_fleet_role

        __props__['instanceInterruptionBehaviour'] = instance_interruption_behaviour

        __props__['instancePoolsToUseCount'] = instance_pools_to_use_count

        if not launch_specifications:
            raise TypeError('Missing required property launch_specifications')
        __props__['launchSpecifications'] = launch_specifications

        __props__['loadBalancers'] = load_balancers

        __props__['replaceUnhealthyInstances'] = replace_unhealthy_instances

        __props__['spotPrice'] = spot_price

        if not target_capacity:
            raise TypeError('Missing required property target_capacity')
        __props__['targetCapacity'] = target_capacity

        __props__['targetGroupArns'] = target_group_arns

        __props__['terminateInstancesWithExpiration'] = terminate_instances_with_expiration

        __props__['validFrom'] = valid_from

        __props__['validUntil'] = valid_until

        __props__['waitForFulfillment'] = wait_for_fulfillment

        __props__['client_token'] = None
        __props__['spot_request_state'] = None

        super(SpotFleetRequest, __self__).__init__(
            'aws:ec2/spotFleetRequest:SpotFleetRequest',
            __name__,
            __props__,
            __opts__)

