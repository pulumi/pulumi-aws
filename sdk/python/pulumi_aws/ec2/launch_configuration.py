# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class LaunchConfiguration(pulumi.CustomResource):
    """
    Provides a resource to create a new launch configuration, used for autoscaling groups.
    """
    def __init__(__self__, __name__, __opts__=None, associate_public_ip_address=None, ebs_block_devices=None, ebs_optimized=None, enable_monitoring=None, ephemeral_block_devices=None, iam_instance_profile=None, image_id=None, instance_type=None, key_name=None, name=None, name_prefix=None, placement_tenancy=None, root_block_device=None, security_groups=None, spot_price=None, user_data=None, user_data_base64=None, vpc_classic_link_id=None, vpc_classic_link_security_groups=None):
        """Create a LaunchConfiguration resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['associatePublicIpAddress'] = associate_public_ip_address

        __props__['ebsBlockDevices'] = ebs_block_devices

        __props__['ebsOptimized'] = ebs_optimized

        __props__['enableMonitoring'] = enable_monitoring

        __props__['ephemeralBlockDevices'] = ephemeral_block_devices

        __props__['iamInstanceProfile'] = iam_instance_profile

        if not image_id:
            raise TypeError('Missing required property image_id')
        __props__['imageId'] = image_id

        if not instance_type:
            raise TypeError('Missing required property instance_type')
        __props__['instanceType'] = instance_type

        __props__['keyName'] = key_name

        __props__['name'] = name

        __props__['namePrefix'] = name_prefix

        __props__['placementTenancy'] = placement_tenancy

        __props__['rootBlockDevice'] = root_block_device

        __props__['securityGroups'] = security_groups

        __props__['spotPrice'] = spot_price

        __props__['userData'] = user_data

        __props__['userDataBase64'] = user_data_base64

        __props__['vpcClassicLinkId'] = vpc_classic_link_id

        __props__['vpcClassicLinkSecurityGroups'] = vpc_classic_link_security_groups

        super(LaunchConfiguration, __self__).__init__(
            'aws:ec2/launchConfiguration:LaunchConfiguration',
            __name__,
            __props__,
            __opts__)

