# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class Instance(pulumi.CustomResource):
    """
    Provides an EC2 instance resource. This allows instances to be created, updated,
    and deleted. Instances also support [provisioning](https://www.terraform.io/docs/provisioners/index.html).
    """
    def __init__(__self__, __name__, __opts__=None, ami=None, associate_public_ip_address=None, availability_zone=None, cpu_core_count=None, cpu_threads_per_core=None, credit_specification=None, disable_api_termination=None, ebs_block_devices=None, ebs_optimized=None, ephemeral_block_devices=None, get_password_data=None, iam_instance_profile=None, instance_initiated_shutdown_behavior=None, instance_type=None, ipv6_address_count=None, ipv6_addresses=None, key_name=None, monitoring=None, network_interfaces=None, placement_group=None, private_ip=None, root_block_device=None, security_groups=None, source_dest_check=None, subnet_id=None, tags=None, tenancy=None, user_data=None, user_data_base64=None, volume_tags=None, vpc_security_group_ids=None):
        """Create a Instance resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not ami:
            raise TypeError('Missing required property ami')
        __props__['ami'] = ami

        __props__['associatePublicIpAddress'] = associate_public_ip_address

        __props__['availabilityZone'] = availability_zone

        __props__['cpuCoreCount'] = cpu_core_count

        __props__['cpuThreadsPerCore'] = cpu_threads_per_core

        __props__['creditSpecification'] = credit_specification

        __props__['disableApiTermination'] = disable_api_termination

        __props__['ebsBlockDevices'] = ebs_block_devices

        __props__['ebsOptimized'] = ebs_optimized

        __props__['ephemeralBlockDevices'] = ephemeral_block_devices

        __props__['getPasswordData'] = get_password_data

        __props__['iamInstanceProfile'] = iam_instance_profile

        __props__['instanceInitiatedShutdownBehavior'] = instance_initiated_shutdown_behavior

        if not instance_type:
            raise TypeError('Missing required property instance_type')
        __props__['instanceType'] = instance_type

        __props__['ipv6AddressCount'] = ipv6_address_count

        __props__['ipv6Addresses'] = ipv6_addresses

        __props__['keyName'] = key_name

        __props__['monitoring'] = monitoring

        __props__['networkInterfaces'] = network_interfaces

        __props__['placementGroup'] = placement_group

        __props__['privateIp'] = private_ip

        __props__['rootBlockDevice'] = root_block_device

        __props__['securityGroups'] = security_groups

        __props__['sourceDestCheck'] = source_dest_check

        __props__['subnetId'] = subnet_id

        __props__['tags'] = tags

        __props__['tenancy'] = tenancy

        __props__['userData'] = user_data

        __props__['userDataBase64'] = user_data_base64

        __props__['volumeTags'] = volume_tags

        __props__['vpcSecurityGroupIds'] = vpc_security_group_ids

        __props__['arn'] = None
        __props__['instance_state'] = None
        __props__['network_interface_id'] = None
        __props__['password_data'] = None
        __props__['primary_network_interface_id'] = None
        __props__['private_dns'] = None
        __props__['public_dns'] = None
        __props__['public_ip'] = None

        super(Instance, __self__).__init__(
            'aws:ec2/instance:Instance',
            __name__,
            __props__,
            __opts__)

