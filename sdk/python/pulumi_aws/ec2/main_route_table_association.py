# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime

class MainRouteTableAssociation(pulumi.CustomResource):
    """
    Provides a resource for managing the main routing table of a VPC.
    """
    def __init__(__self__, __name__, __opts__=None, route_table_id=None, vpc_id=None):
        """Create a MainRouteTableAssociation resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not route_table_id:
            raise TypeError('Missing required property route_table_id')
        elif not isinstance(route_table_id, basestring):
            raise TypeError('Expected property route_table_id to be a basestring')
        __self__.route_table_id = route_table_id
        """
        The ID of the Route Table to set as the new
        main route table for the target VPC
        """
        __props__['routeTableId'] = route_table_id

        if not vpc_id:
            raise TypeError('Missing required property vpc_id')
        elif not isinstance(vpc_id, basestring):
            raise TypeError('Expected property vpc_id to be a basestring')
        __self__.vpc_id = vpc_id
        """
        The ID of the VPC whose main route table should be set
        """
        __props__['vpcId'] = vpc_id

        __self__.original_route_table_id = pulumi.runtime.UNKNOWN
        """
        Used internally, see __Notes__ below
        """

        super(MainRouteTableAssociation, __self__).__init__(
            'aws:ec2/mainRouteTableAssociation:MainRouteTableAssociation',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'originalRouteTableId' in outs:
            self.original_route_table_id = outs['originalRouteTableId']
        if 'routeTableId' in outs:
            self.route_table_id = outs['routeTableId']
        if 'vpcId' in outs:
            self.vpc_id = outs['vpcId']
