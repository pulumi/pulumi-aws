# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime

class VpnGatewayAttachment(pulumi.CustomResource):
    """
    Provides a Virtual Private Gateway attachment resource, allowing for an existing
    hardware VPN gateway to be attached and/or detached from a VPC.
    
    -> **Note:** The [`aws_vpn_gateway`](vpn_gateway.html)
    resource can also automatically attach the Virtual Private Gateway it creates
    to an existing VPC by setting the [`vpc_id`](vpn_gateway.html#vpc_id) attribute accordingly.
    """
    def __init__(__self__, __name__, __opts__=None, vpc_id=None, vpn_gateway_id=None):
        """Create a VpnGatewayAttachment resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not vpc_id:
            raise TypeError('Missing required property vpc_id')
        elif not isinstance(vpc_id, basestring):
            raise TypeError('Expected property vpc_id to be a basestring')
        __self__.vpc_id = vpc_id
        """
        The ID of the VPC.
        """
        __props__['vpcId'] = vpc_id

        if not vpn_gateway_id:
            raise TypeError('Missing required property vpn_gateway_id')
        elif not isinstance(vpn_gateway_id, basestring):
            raise TypeError('Expected property vpn_gateway_id to be a basestring')
        __self__.vpn_gateway_id = vpn_gateway_id
        """
        The ID of the Virtual Private Gateway.
        """
        __props__['vpnGatewayId'] = vpn_gateway_id

        super(VpnGatewayAttachment, __self__).__init__(
            'aws:ec2/vpnGatewayAttachment:VpnGatewayAttachment',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'vpcId' in outs:
            self.vpc_id = outs['vpcId']
        if 'vpnGatewayId' in outs:
            self.vpn_gateway_id = outs['vpnGatewayId']
