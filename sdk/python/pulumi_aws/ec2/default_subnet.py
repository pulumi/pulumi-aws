# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import pulumi
import pulumi.runtime
from .. import utilities, tables

class DefaultSubnet(pulumi.CustomResource):
    arn: pulumi.Output[str]
    assign_ipv6_address_on_creation: pulumi.Output[bool]
    availability_zone: pulumi.Output[str]
    availability_zone_id: pulumi.Output[str]
    cidr_block: pulumi.Output[str]
    """
    The CIDR block for the subnet.
    """
    ipv6_cidr_block: pulumi.Output[str]
    """
    The IPv6 CIDR block.
    """
    ipv6_cidr_block_association_id: pulumi.Output[str]
    map_public_ip_on_launch: pulumi.Output[bool]
    """
    Specify true to indicate
    that instances launched into the subnet should be assigned
    a public IP address.
    """
    owner_id: pulumi.Output[str]
    """
    The ID of the AWS account that owns the subnet.
    """
    tags: pulumi.Output[dict]
    """
    A mapping of tags to assign to the resource.
    """
    vpc_id: pulumi.Output[str]
    """
    The VPC ID.
    """
    def __init__(__self__, __name__, __opts__=None, availability_zone=None, map_public_ip_on_launch=None, tags=None):
        """
        Provides a resource to manage a [default AWS VPC subnet](http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/default-vpc.html#default-vpc-basics)
        in the current region.
        
        The `aws_default_subnet` behaves differently from normal resources, in that
        Terraform does not _create_ this resource, but instead "adopts" it
        into management.
        
        
        :param str __name__: The name of the resource.
        :param pulumi.ResourceOptions __opts__: Options for the resource.
        :param pulumi.Input[str] availability_zone
        :param pulumi.Input[bool] map_public_ip_on_launch: Specify true to indicate
               that instances launched into the subnet should be assigned
               a public IP address.
        :param pulumi.Input[dict] tags: A mapping of tags to assign to the resource.
        """
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not availability_zone:
            raise TypeError('Missing required property availability_zone')
        __props__['availability_zone'] = availability_zone

        __props__['map_public_ip_on_launch'] = map_public_ip_on_launch

        __props__['tags'] = tags

        __props__['arn'] = None
        __props__['assign_ipv6_address_on_creation'] = None
        __props__['availability_zone_id'] = None
        __props__['cidr_block'] = None
        __props__['ipv6_cidr_block'] = None
        __props__['ipv6_cidr_block_association_id'] = None
        __props__['owner_id'] = None
        __props__['vpc_id'] = None

        super(DefaultSubnet, __self__).__init__(
            'aws:ec2/defaultSubnet:DefaultSubnet',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

