# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime

class RouteTableAssociation(pulumi.CustomResource):
    """
    Provides a resource to create an association between a subnet and routing table.
    """
    def __init__(__self__, __name__, __opts__=None, route_table_id=None, subnet_id=None):
        """Create a RouteTableAssociation resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not route_table_id:
            raise TypeError('Missing required property route_table_id')
        elif not isinstance(route_table_id, basestring):
            raise TypeError('Expected property route_table_id to be a basestring')
        __self__.route_table_id = route_table_id
        """
        The ID of the routing table to associate with.
        """
        __props__['routeTableId'] = route_table_id

        if not subnet_id:
            raise TypeError('Missing required property subnet_id')
        elif not isinstance(subnet_id, basestring):
            raise TypeError('Expected property subnet_id to be a basestring')
        __self__.subnet_id = subnet_id
        """
        The subnet ID to create an association.
        """
        __props__['subnetId'] = subnet_id

        super(RouteTableAssociation, __self__).__init__(
            'aws:ec2/routeTableAssociation:RouteTableAssociation',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'routeTableId' in outs:
            self.route_table_id = outs['routeTableId']
        if 'subnetId' in outs:
            self.subnet_id = outs['subnetId']
