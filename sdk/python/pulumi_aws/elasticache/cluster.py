# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class Cluster(pulumi.CustomResource):
    """
    Provides an ElastiCache Cluster resource, which manages a Memcached cluster or Redis instance.
    For working with Redis (Cluster Mode Enabled) replication groups, see the
    [`aws_elasticache_replication_group` resource](https://www.terraform.io/docs/providers/aws/r/elasticache_replication_group.html).
    
    ~> **Note:** When you change an attribute, such as `node_type`, by default
    it is applied in the next maintenance window. Because of this, Terraform may report
    a difference in its planning phase because the actual modification has not yet taken
    place. You can use the `apply_immediately` flag to instruct the service to apply the
    change immediately. Using `apply_immediately` can result in a brief downtime as the server reboots.
    See the AWS Docs on [Modifying an ElastiCache Cache Cluster][2] for more information.
    """
    def __init__(__self__, __name__, __opts__=None, apply_immediately=None, availability_zone=None, availability_zones=None, az_mode=None, cluster_id=None, engine=None, engine_version=None, maintenance_window=None, node_type=None, notification_topic_arn=None, num_cache_nodes=None, parameter_group_name=None, port=None, preferred_availability_zones=None, replication_group_id=None, security_group_ids=None, security_group_names=None, snapshot_arns=None, snapshot_name=None, snapshot_retention_limit=None, snapshot_window=None, subnet_group_name=None, tags=None):
        """Create a Cluster resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['applyImmediately'] = apply_immediately

        __props__['availabilityZone'] = availability_zone

        __props__['availabilityZones'] = availability_zones

        __props__['azMode'] = az_mode

        __props__['clusterId'] = cluster_id

        __props__['engine'] = engine

        __props__['engineVersion'] = engine_version

        __props__['maintenanceWindow'] = maintenance_window

        __props__['nodeType'] = node_type

        __props__['notificationTopicArn'] = notification_topic_arn

        __props__['numCacheNodes'] = num_cache_nodes

        __props__['parameterGroupName'] = parameter_group_name

        __props__['port'] = port

        __props__['preferredAvailabilityZones'] = preferred_availability_zones

        __props__['replicationGroupId'] = replication_group_id

        __props__['securityGroupIds'] = security_group_ids

        __props__['securityGroupNames'] = security_group_names

        __props__['snapshotArns'] = snapshot_arns

        __props__['snapshotName'] = snapshot_name

        __props__['snapshotRetentionLimit'] = snapshot_retention_limit

        __props__['snapshotWindow'] = snapshot_window

        __props__['subnetGroupName'] = subnet_group_name

        __props__['tags'] = tags

        __props__['cache_nodes'] = None
        __props__['cluster_address'] = None
        __props__['configuration_endpoint'] = None

        super(Cluster, __self__).__init__(
            'aws:elasticache/cluster:Cluster',
            __name__,
            __props__,
            __opts__)

