# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime

class AssessmentTarget(pulumi.CustomResource):
    """
    Provides a Inspector assessment target
    """
    def __init__(__self__, __name__, __opts__=None, name=None, resource_group_arn=None):
        """Create a AssessmentTarget resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if name and not isinstance(name, basestring):
            raise TypeError('Expected property name to be a basestring')
        __self__.name = name
        """
        The name of the assessment target.
        * `resource_group_arn` (Required )- The resource group ARN stating tags for instance matching.
        """
        __props__['name'] = name

        if not resource_group_arn:
            raise TypeError('Missing required property resource_group_arn')
        elif not isinstance(resource_group_arn, basestring):
            raise TypeError('Expected property resource_group_arn to be a basestring')
        __self__.resource_group_arn = resource_group_arn
        __props__['resourceGroupArn'] = resource_group_arn

        __self__.arn = pulumi.runtime.UNKNOWN
        """
        The target assessment ARN.
        """

        super(AssessmentTarget, __self__).__init__(
            'aws:inspector/assessmentTarget:AssessmentTarget',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'arn' in outs:
            self.arn = outs['arn']
        if 'name' in outs:
            self.name = outs['name']
        if 'resourceGroupArn' in outs:
            self.resource_group_arn = outs['resourceGroupArn']
