# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime

class ResourceGroup(pulumi.CustomResource):
    """
    Provides a Inspector resource group
    """
    def __init__(__self__, __name__, __opts__=None, tags=None):
        """Create a ResourceGroup resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not tags:
            raise TypeError('Missing required property tags')
        elif not isinstance(tags, dict):
            raise TypeError('Expected property tags to be a dict')
        __self__.tags = tags
        """
        The tags on your EC2 Instance.
        """
        __props__['tags'] = tags

        __self__.arn = pulumi.runtime.UNKNOWN
        """
        The resource group ARN.
        """

        super(ResourceGroup, __self__).__init__(
            'aws:inspector/resourceGroup:ResourceGroup',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'arn' in outs:
            self.arn = outs['arn']
        if 'tags' in outs:
            self.tags = outs['tags']
