# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import pulumi
import pulumi.runtime
from .. import utilities, tables

class Hsm(pulumi.CustomResource):
    availability_zone: pulumi.Output[str]
    """
    The IDs of AZ in which HSM module will be located. Do not use together with subnet_id.
    """
    cluster_id: pulumi.Output[str]
    """
    The ID of Cloud HSM v2 cluster to which HSM will be added.
    """
    hsm_eni_id: pulumi.Output[str]
    """
    The id of the ENI interface allocated for HSM module.
    """
    hsm_id: pulumi.Output[str]
    """
    The id of the HSM module.
    """
    hsm_state: pulumi.Output[str]
    """
    The state of the HSM module.
    """
    ip_address: pulumi.Output[str]
    """
    The IP address of HSM module. Must be within the CIDR of selected subnet.
    """
    subnet_id: pulumi.Output[str]
    """
    The ID of subnet in which HSM module will be located.
    """
    def __init__(__self__, __name__, __opts__=None, availability_zone=None, cluster_id=None, ip_address=None, subnet_id=None):
        """
        Creates an HSM module in Amazon CloudHSM v2 cluster.
        
        
        :param str __name__: The name of the resource.
        :param pulumi.ResourceOptions __opts__: Options for the resource.
        :param pulumi.Input[str] availability_zone: The IDs of AZ in which HSM module will be located. Do not use together with subnet_id.
        :param pulumi.Input[str] cluster_id: The ID of Cloud HSM v2 cluster to which HSM will be added.
        :param pulumi.Input[str] ip_address: The IP address of HSM module. Must be within the CIDR of selected subnet.
        :param pulumi.Input[str] subnet_id: The ID of subnet in which HSM module will be located.
        """
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['availability_zone'] = availability_zone

        if not cluster_id:
            raise TypeError('Missing required property cluster_id')
        __props__['cluster_id'] = cluster_id

        __props__['ip_address'] = ip_address

        __props__['subnet_id'] = subnet_id

        __props__['hsm_eni_id'] = None
        __props__['hsm_id'] = None
        __props__['hsm_state'] = None

        super(Hsm, __self__).__init__(
            'aws:cloudhsmv2/hsm:Hsm',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

