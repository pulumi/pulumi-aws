# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'ClusterClusterCertificate',
    'GetClusterClusterCertificatesResult',
]

@pulumi.output_type
class ClusterClusterCertificate(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "awsHardwareCertificate":
            suggest = "aws_hardware_certificate"
        elif key == "clusterCertificate":
            suggest = "cluster_certificate"
        elif key == "clusterCsr":
            suggest = "cluster_csr"
        elif key == "hsmCertificate":
            suggest = "hsm_certificate"
        elif key == "manufacturerHardwareCertificate":
            suggest = "manufacturer_hardware_certificate"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ClusterClusterCertificate. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ClusterClusterCertificate.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ClusterClusterCertificate.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 aws_hardware_certificate: Optional[str] = None,
                 cluster_certificate: Optional[str] = None,
                 cluster_csr: Optional[str] = None,
                 hsm_certificate: Optional[str] = None,
                 manufacturer_hardware_certificate: Optional[str] = None):
        if aws_hardware_certificate is not None:
            pulumi.set(__self__, "aws_hardware_certificate", aws_hardware_certificate)
        if cluster_certificate is not None:
            pulumi.set(__self__, "cluster_certificate", cluster_certificate)
        if cluster_csr is not None:
            pulumi.set(__self__, "cluster_csr", cluster_csr)
        if hsm_certificate is not None:
            pulumi.set(__self__, "hsm_certificate", hsm_certificate)
        if manufacturer_hardware_certificate is not None:
            pulumi.set(__self__, "manufacturer_hardware_certificate", manufacturer_hardware_certificate)

    @property
    @pulumi.getter(name="awsHardwareCertificate")
    def aws_hardware_certificate(self) -> Optional[str]:
        return pulumi.get(self, "aws_hardware_certificate")

    @property
    @pulumi.getter(name="clusterCertificate")
    def cluster_certificate(self) -> Optional[str]:
        return pulumi.get(self, "cluster_certificate")

    @property
    @pulumi.getter(name="clusterCsr")
    def cluster_csr(self) -> Optional[str]:
        return pulumi.get(self, "cluster_csr")

    @property
    @pulumi.getter(name="hsmCertificate")
    def hsm_certificate(self) -> Optional[str]:
        return pulumi.get(self, "hsm_certificate")

    @property
    @pulumi.getter(name="manufacturerHardwareCertificate")
    def manufacturer_hardware_certificate(self) -> Optional[str]:
        return pulumi.get(self, "manufacturer_hardware_certificate")


@pulumi.output_type
class GetClusterClusterCertificatesResult(dict):
    def __init__(__self__, *,
                 aws_hardware_certificate: str,
                 cluster_certificate: str,
                 cluster_csr: str,
                 hsm_certificate: str,
                 manufacturer_hardware_certificate: str):
        pulumi.set(__self__, "aws_hardware_certificate", aws_hardware_certificate)
        pulumi.set(__self__, "cluster_certificate", cluster_certificate)
        pulumi.set(__self__, "cluster_csr", cluster_csr)
        pulumi.set(__self__, "hsm_certificate", hsm_certificate)
        pulumi.set(__self__, "manufacturer_hardware_certificate", manufacturer_hardware_certificate)

    @property
    @pulumi.getter(name="awsHardwareCertificate")
    def aws_hardware_certificate(self) -> str:
        return pulumi.get(self, "aws_hardware_certificate")

    @property
    @pulumi.getter(name="clusterCertificate")
    def cluster_certificate(self) -> str:
        return pulumi.get(self, "cluster_certificate")

    @property
    @pulumi.getter(name="clusterCsr")
    def cluster_csr(self) -> str:
        return pulumi.get(self, "cluster_csr")

    @property
    @pulumi.getter(name="hsmCertificate")
    def hsm_certificate(self) -> str:
        return pulumi.get(self, "hsm_certificate")

    @property
    @pulumi.getter(name="manufacturerHardwareCertificate")
    def manufacturer_hardware_certificate(self) -> str:
        return pulumi.get(self, "manufacturer_hardware_certificate")


