# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime

class Detector(pulumi.CustomResource):
    """
    Provides a resource to manage a GuardDuty detector.
    
    ~> **NOTE:** Deleting this resource is equivalent to "disabling" GuardDuty for an AWS region, which removes all existing findings. You can set the `enable` attribute to `false` to instead "suspend" monitoring and feedback reporting while keeping existing data. See the [Suspending or Disabling Amazon GuardDuty documentation](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_suspend-disable.html) for more information.
    """
    def __init__(__self__, __name__, __opts__=None, enable=None):
        """Create a Detector resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if enable and not isinstance(enable, bool):
            raise TypeError('Expected property enable to be a bool')
        __self__.enable = enable
        """
        Enable monitoring and feedback reporting. Setting to `false` is equivalent to "suspending" GuardDuty. Defaults to `true`.
        """
        __props__['enable'] = enable

        __self__.account_id = pulumi.runtime.UNKNOWN
        """
        The AWS account ID of the GuardDuty detector
        """

        super(Detector, __self__).__init__(
            'aws:glacier/detector:Detector',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'accountId' in outs:
            self.account_id = outs['accountId']
        if 'enable' in outs:
            self.enable = outs['enable']
