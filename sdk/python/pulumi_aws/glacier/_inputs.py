# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'VaultNotificationArgs',
]

@pulumi.input_type
class VaultNotificationArgs:
    def __init__(__self__, *,
                 events: pulumi.Input[Sequence[pulumi.Input[str]]],
                 sns_topic: pulumi.Input[str]):
        """
        :param pulumi.Input[Sequence[pulumi.Input[str]]] events: You can configure a vault to publish a notification for `ArchiveRetrievalCompleted` and `InventoryRetrievalCompleted` events.
        :param pulumi.Input[str] sns_topic: The SNS Topic ARN.
        """
        pulumi.set(__self__, "events", events)
        pulumi.set(__self__, "sns_topic", sns_topic)

    @property
    @pulumi.getter
    def events(self) -> pulumi.Input[Sequence[pulumi.Input[str]]]:
        """
        You can configure a vault to publish a notification for `ArchiveRetrievalCompleted` and `InventoryRetrievalCompleted` events.
        """
        return pulumi.get(self, "events")

    @events.setter
    def events(self, value: pulumi.Input[Sequence[pulumi.Input[str]]]):
        pulumi.set(self, "events", value)

    @property
    @pulumi.getter(name="snsTopic")
    def sns_topic(self) -> pulumi.Input[str]:
        """
        The SNS Topic ARN.
        """
        return pulumi.get(self, "sns_topic")

    @sns_topic.setter
    def sns_topic(self, value: pulumi.Input[str]):
        pulumi.set(self, "sns_topic", value)


