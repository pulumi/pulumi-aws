# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class Broker(pulumi.CustomResource):
    """
    Provides an MQ Broker Resource. This resources also manages users for the broker.
    
    For more information on Amazon MQ, see [Amazon MQ documentation](https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/welcome.html).
    
    Changes to an MQ Broker can occur when you change a
    parameter, such as `configuration` or `user`, and are reflected in the next maintenance
    window. Because of this, Terraform may report a difference in its planning
    phase because a modification has not yet taken place. You can use the
    `apply_immediately` flag to instruct the service to apply the change immediately
    (see documentation below).
    
    ~> **Note:** using `apply_immediately` can result in a
    brief downtime as the broker reboots.
    
    ~> **Note:** All arguments including the username and password will be stored in the raw state as plain-text.
    [Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).
    """
    def __init__(__self__, __name__, __opts__=None, apply_immediately=None, auto_minor_version_upgrade=None, broker_name=None, configuration=None, deployment_mode=None, engine_type=None, engine_version=None, host_instance_type=None, maintenance_window_start_time=None, publicly_accessible=None, security_groups=None, subnet_ids=None, users=None):
        """Create a Broker resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['applyImmediately'] = apply_immediately

        __props__['autoMinorVersionUpgrade'] = auto_minor_version_upgrade

        if not broker_name:
            raise TypeError('Missing required property broker_name')
        __props__['brokerName'] = broker_name

        __props__['configuration'] = configuration

        __props__['deploymentMode'] = deployment_mode

        if not engine_type:
            raise TypeError('Missing required property engine_type')
        __props__['engineType'] = engine_type

        if not engine_version:
            raise TypeError('Missing required property engine_version')
        __props__['engineVersion'] = engine_version

        if not host_instance_type:
            raise TypeError('Missing required property host_instance_type')
        __props__['hostInstanceType'] = host_instance_type

        __props__['maintenanceWindowStartTime'] = maintenance_window_start_time

        __props__['publiclyAccessible'] = publicly_accessible

        if not security_groups:
            raise TypeError('Missing required property security_groups')
        __props__['securityGroups'] = security_groups

        __props__['subnetIds'] = subnet_ids

        if not users:
            raise TypeError('Missing required property users')
        __props__['users'] = users

        __props__['arn'] = None
        __props__['instances'] = None

        super(Broker, __self__).__init__(
            'aws:mq/broker:Broker',
            __name__,
            __props__,
            __opts__)

