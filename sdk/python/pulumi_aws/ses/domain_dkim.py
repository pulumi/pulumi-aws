# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime

class DomainDkim(pulumi.CustomResource):
    """
    Provides an SES domain DKIM generation resource.
    
    Domain ownership needs to be confirmed first using [ses_domain_identity Resource](/docs/providers/aws/r/ses_domain_identity.html)
    """
    def __init__(__self__, __name__, __opts__=None, domain=None):
        """Create a DomainDkim resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not domain:
            raise TypeError('Missing required property domain')
        elif not isinstance(domain, basestring):
            raise TypeError('Expected property domain to be a basestring')
        __self__.domain = domain
        """
        Verified domain name to generate DKIM tokens for.
        """
        __props__['domain'] = domain

        __self__.dkim_tokens = pulumi.runtime.UNKNOWN
        """
        DKIM tokens generated by SES.
        These tokens should be used to create CNAME records used to verify SES Easy DKIM.
        See below for an example of how this might be achieved
        when the domain is hosted in Route 53 and managed by Terraform.
        Find out more about verifying domains in Amazon SES
        in the [AWS SES docs](http://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim-dns-records.html).
        """

        super(DomainDkim, __self__).__init__(
            'aws:ses/domainDkim:DomainDkim',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'dkimTokens' in outs:
            self.dkim_tokens = outs['dkimTokens']
        if 'domain' in outs:
            self.domain = outs['domain']
