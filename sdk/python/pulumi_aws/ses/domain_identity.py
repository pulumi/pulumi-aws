# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime

class DomainIdentity(pulumi.CustomResource):
    """
    Provides an SES domain identity resource
    """
    def __init__(__self__, __name__, __opts__=None, domain=None):
        """Create a DomainIdentity resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not domain:
            raise TypeError('Missing required property domain')
        elif not isinstance(domain, basestring):
            raise TypeError('Expected property domain to be a basestring')
        __self__.domain = domain
        """
        The domain name to assign to SES
        """
        __props__['domain'] = domain

        __self__.arn = pulumi.runtime.UNKNOWN
        """
        The ARN of the domain identity.
        """
        __self__.verification_token = pulumi.runtime.UNKNOWN
        """
        A code which when added to the domain as a TXT record
        will signal to SES that the owner of the domain has authorised SES to act on
        their behalf. The domain identity will be in state "verification pending"
        until this is done. See below for an example of how this might be achieved
        when the domain is hosted in Route 53 and managed by Terraform.  Find out
        more about verifying domains in Amazon SES in the [AWS SES
        docs](http://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-domains.html).
        """

        super(DomainIdentity, __self__).__init__(
            'aws:ses/domainIdentity:DomainIdentity',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'arn' in outs:
            self.arn = outs['arn']
        if 'domain' in outs:
            self.domain = outs['domain']
        if 'verificationToken' in outs:
            self.verification_token = outs['verificationToken']
