# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from .. import _utilities, _tables

__all__ = [
    'RepositoryExternalConnections',
    'RepositoryUpstream',
]

@pulumi.output_type
class RepositoryExternalConnections(dict):
    def __init__(__self__, *,
                 external_connection_name: str,
                 package_format: Optional[str] = None,
                 status: Optional[str] = None):
        """
        :param str external_connection_name: The name of the external connection associated with a repository.
        """
        pulumi.set(__self__, "external_connection_name", external_connection_name)
        if package_format is not None:
            pulumi.set(__self__, "package_format", package_format)
        if status is not None:
            pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter(name="externalConnectionName")
    def external_connection_name(self) -> str:
        """
        The name of the external connection associated with a repository.
        """
        return pulumi.get(self, "external_connection_name")

    @property
    @pulumi.getter(name="packageFormat")
    def package_format(self) -> Optional[str]:
        return pulumi.get(self, "package_format")

    @property
    @pulumi.getter
    def status(self) -> Optional[str]:
        return pulumi.get(self, "status")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class RepositoryUpstream(dict):
    def __init__(__self__, *,
                 repository_name: str):
        """
        :param str repository_name: The name of an upstream repository.
        """
        pulumi.set(__self__, "repository_name", repository_name)

    @property
    @pulumi.getter(name="repositoryName")
    def repository_name(self) -> str:
        """
        The name of an upstream repository.
        """
        return pulumi.get(self, "repository_name")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


