# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from .. import _utilities, _tables

__all__ = ['ResourcePolicy']


class ResourcePolicy(pulumi.CustomResource):
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 policy: Optional[pulumi.Input[str]] = None,
                 resource_arn: Optional[pulumi.Input[str]] = None,
                 __props__=None,
                 __name__=None,
                 __opts__=None):
        """
        Provides an AWS Network Firewall Resource Policy Resource for a rule group or firewall policy.

        ## Example Usage
        ### For a Firewall Policy resource

        ```python
        import pulumi
        import json
        import pulumi_aws as aws

        example = aws.networkfirewall.ResourcePolicy("example",
            resource_arn=aws_networkfirewall_firewall_policy["example"]["arn"],
            policy=json.dumps({
                "Statement": [{
                    "Action": [
                        "network-firewall:ListFirewallPolicies",
                        "network-firewall:CreateFirewall",
                        "network-firewall:UpdateFirewall",
                        "network-firewall:AssociateFirewallPolicy",
                    ],
                    "Effect": "Allow",
                    "Resource": aws_networkfirewall_firewall_policy["example"]["arn"],
                    "Principal": {
                        "AWS": "arn:aws:iam::123456789012:root",
                    },
                }],
                "Version": "2012-10-17",
            }))
        ```
        ### For a Rule Group resource

        ```python
        import pulumi
        import json
        import pulumi_aws as aws

        example = aws.networkfirewall.ResourcePolicy("example",
            resource_arn=aws_networkfirewall_rule_group["example"]["arn"],
            policy=json.dumps({
                "Statement": [{
                    "Action": [
                        "network-firewall:ListRuleGroups",
                        "network-firewall:CreateFirewallPolicy",
                        "network-firewall:UpdateFirewallPolicy",
                    ],
                    "Effect": "Allow",
                    "Resource": aws_networkfirewall_rule_group["example"]["arn"],
                    "Principal": {
                        "AWS": "arn:aws:iam::123456789012:root",
                    },
                }],
                "Version": "2012-10-17",
            }))
        ```

        ## Import

        Network Firewall Resource Policies can be imported using the `resource_arn` e.g.

        ```sh
         $ pulumi import aws:networkfirewall/resourcePolicy:ResourcePolicy example aws_networkfirewall_rule_group.example arn:aws:network-firewall:us-west-1:123456789012:stateful-rulegroup/example
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] resource_arn: The Amazon Resource Name (ARN) of the rule group or firewall policy.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            if policy is None and not opts.urn:
                raise TypeError("Missing required property 'policy'")
            __props__['policy'] = policy
            if resource_arn is None and not opts.urn:
                raise TypeError("Missing required property 'resource_arn'")
            __props__['resource_arn'] = resource_arn
        super(ResourcePolicy, __self__).__init__(
            'aws:networkfirewall/resourcePolicy:ResourcePolicy',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            policy: Optional[pulumi.Input[str]] = None,
            resource_arn: Optional[pulumi.Input[str]] = None) -> 'ResourcePolicy':
        """
        Get an existing ResourcePolicy resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] resource_arn: The Amazon Resource Name (ARN) of the rule group or firewall policy.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["policy"] = policy
        __props__["resource_arn"] = resource_arn
        return ResourcePolicy(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def policy(self) -> pulumi.Output[str]:
        return pulumi.get(self, "policy")

    @property
    @pulumi.getter(name="resourceArn")
    def resource_arn(self) -> pulumi.Output[str]:
        """
        The Amazon Resource Name (ARN) of the rule group or firewall policy.
        """
        return pulumi.get(self, "resource_arn")

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

