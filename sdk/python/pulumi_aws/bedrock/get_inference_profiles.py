# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetInferenceProfilesResult',
    'AwaitableGetInferenceProfilesResult',
    'get_inference_profiles',
    'get_inference_profiles_output',
]

@pulumi.output_type
class GetInferenceProfilesResult:
    """
    A collection of values returned by getInferenceProfiles.
    """
    def __init__(__self__, id=None, inference_profile_summaries=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if inference_profile_summaries and not isinstance(inference_profile_summaries, list):
            raise TypeError("Expected argument 'inference_profile_summaries' to be a list")
        pulumi.set(__self__, "inference_profile_summaries", inference_profile_summaries)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="inferenceProfileSummaries")
    def inference_profile_summaries(self) -> Sequence['outputs.GetInferenceProfilesInferenceProfileSummaryResult']:
        """
        List of inference profile summary objects. See `inference_profile_summaries`.
        """
        return pulumi.get(self, "inference_profile_summaries")


class AwaitableGetInferenceProfilesResult(GetInferenceProfilesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetInferenceProfilesResult(
            id=self.id,
            inference_profile_summaries=self.inference_profile_summaries)


def get_inference_profiles(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetInferenceProfilesResult:
    """
    Data source for managing AWS Bedrock AWS Bedrock Inference Profiles.

    ## Example Usage

    ### Basic Usage

    ```python
    import pulumi
    import pulumi_aws as aws

    test = aws.bedrock.get_inference_profiles()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws:bedrock/getInferenceProfiles:getInferenceProfiles', __args__, opts=opts, typ=GetInferenceProfilesResult).value

    return AwaitableGetInferenceProfilesResult(
        id=pulumi.get(__ret__, 'id'),
        inference_profile_summaries=pulumi.get(__ret__, 'inference_profile_summaries'))
def get_inference_profiles_output(opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetInferenceProfilesResult]:
    """
    Data source for managing AWS Bedrock AWS Bedrock Inference Profiles.

    ## Example Usage

    ### Basic Usage

    ```python
    import pulumi
    import pulumi_aws as aws

    test = aws.bedrock.get_inference_profiles()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('aws:bedrock/getInferenceProfiles:getInferenceProfiles', __args__, opts=opts, typ=GetInferenceProfilesResult)
    return __ret__.apply(lambda __response__: GetInferenceProfilesResult(
        id=pulumi.get(__response__, 'id'),
        inference_profile_summaries=pulumi.get(__response__, 'inference_profile_summaries')))
