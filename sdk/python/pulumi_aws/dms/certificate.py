# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class Certificate(pulumi.CustomResource):
    """
    Provides a DMS (Data Migration Service) certificate resource. DMS certificates can be created, deleted, and imported.
    
    ~> **Note:** All arguments including the PEM encoded certificate will be stored in the raw state as plain-text.
    [Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).
    """
    def __init__(__self__, __name__, __opts__=None, certificate_id=None, certificate_pem=None, certificate_wallet=None):
        """Create a Certificate resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not certificate_id:
            raise TypeError('Missing required property certificate_id')
        __props__['certificateId'] = certificate_id

        __props__['certificatePem'] = certificate_pem

        __props__['certificateWallet'] = certificate_wallet

        __props__['certificate_arn'] = None

        super(Certificate, __self__).__init__(
            'aws:dms/certificate:Certificate',
            __name__,
            __props__,
            __opts__)

