# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetNotificationChannelResult',
    'AwaitableGetNotificationChannelResult',
    'get_notification_channel',
    'get_notification_channel_output',
]

@pulumi.output_type
class GetNotificationChannelResult:
    """
    A collection of values returned by getNotificationChannel.
    """
    def __init__(__self__, filters=None, id=None, sns=None):
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        pulumi.set(__self__, "filters", filters)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if sns and not isinstance(sns, list):
            raise TypeError("Expected argument 'sns' to be a list")
        pulumi.set(__self__, "sns", sns)

    @property
    @pulumi.getter
    def filters(self) -> Optional[Sequence['outputs.GetNotificationChannelFilterResult']]:
        """
        Filter configurations for the Amazon SNS notification topic. See the `filters` attribute reference below.
        """
        return pulumi.get(self, "filters")

    @property
    @pulumi.getter
    def id(self) -> str:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def sns(self) -> Optional[Sequence['outputs.GetNotificationChannelSnResult']]:
        """
        SNS noficiation channel configurations. See the `sns` attribute reference below.
        """
        return pulumi.get(self, "sns")


class AwaitableGetNotificationChannelResult(GetNotificationChannelResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetNotificationChannelResult(
            filters=self.filters,
            id=self.id,
            sns=self.sns)


def get_notification_channel(filters: Optional[Sequence[pulumi.InputType['GetNotificationChannelFilterArgs']]] = None,
                             id: Optional[str] = None,
                             sns: Optional[Sequence[pulumi.InputType['GetNotificationChannelSnArgs']]] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetNotificationChannelResult:
    """
    Data source for managing an AWS DevOps Guru Notification Channel.

    ## Example Usage

    ### Basic Usage

    ```python
    import pulumi
    import pulumi_aws as aws

    example = aws.devopsguru.get_notification_channel(id="channel-1234")
    ```


    :param Sequence[pulumi.InputType['GetNotificationChannelFilterArgs']] filters: Filter configurations for the Amazon SNS notification topic. See the `filters` attribute reference below.
    :param str id: Unique identifier for the notification channel.
    :param Sequence[pulumi.InputType['GetNotificationChannelSnArgs']] sns: SNS noficiation channel configurations. See the `sns` attribute reference below.
    """
    __args__ = dict()
    __args__['filters'] = filters
    __args__['id'] = id
    __args__['sns'] = sns
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws:devopsguru/getNotificationChannel:getNotificationChannel', __args__, opts=opts, typ=GetNotificationChannelResult).value

    return AwaitableGetNotificationChannelResult(
        filters=pulumi.get(__ret__, 'filters'),
        id=pulumi.get(__ret__, 'id'),
        sns=pulumi.get(__ret__, 'sns'))


@_utilities.lift_output_func(get_notification_channel)
def get_notification_channel_output(filters: Optional[pulumi.Input[Optional[Sequence[pulumi.InputType['GetNotificationChannelFilterArgs']]]]] = None,
                                    id: Optional[pulumi.Input[str]] = None,
                                    sns: Optional[pulumi.Input[Optional[Sequence[pulumi.InputType['GetNotificationChannelSnArgs']]]]] = None,
                                    opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetNotificationChannelResult]:
    """
    Data source for managing an AWS DevOps Guru Notification Channel.

    ## Example Usage

    ### Basic Usage

    ```python
    import pulumi
    import pulumi_aws as aws

    example = aws.devopsguru.get_notification_channel(id="channel-1234")
    ```


    :param Sequence[pulumi.InputType['GetNotificationChannelFilterArgs']] filters: Filter configurations for the Amazon SNS notification topic. See the `filters` attribute reference below.
    :param str id: Unique identifier for the notification channel.
    :param Sequence[pulumi.InputType['GetNotificationChannelSnArgs']] sns: SNS noficiation channel configurations. See the `sns` attribute reference below.
    """
    ...
