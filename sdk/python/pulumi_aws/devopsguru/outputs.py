# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'EventSourcesConfigEventSource',
    'EventSourcesConfigEventSourceAmazonCodeGuruProfiler',
    'ResourceCollectionCloudformation',
    'ResourceCollectionTags',
]

@pulumi.output_type
class EventSourcesConfigEventSource(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "amazonCodeGuruProfilers":
            suggest = "amazon_code_guru_profilers"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in EventSourcesConfigEventSource. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        EventSourcesConfigEventSource.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        EventSourcesConfigEventSource.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 amazon_code_guru_profilers: Optional[Sequence['outputs.EventSourcesConfigEventSourceAmazonCodeGuruProfiler']] = None):
        """
        :param Sequence['EventSourcesConfigEventSourceAmazonCodeGuruProfilerArgs'] amazon_code_guru_profilers: Stores whether DevOps Guru is configured to consume recommendations which are generated from AWS CodeGuru Profiler. See `amazon_code_guru_profiler` below.
        """
        if amazon_code_guru_profilers is not None:
            pulumi.set(__self__, "amazon_code_guru_profilers", amazon_code_guru_profilers)

    @property
    @pulumi.getter(name="amazonCodeGuruProfilers")
    def amazon_code_guru_profilers(self) -> Optional[Sequence['outputs.EventSourcesConfigEventSourceAmazonCodeGuruProfiler']]:
        """
        Stores whether DevOps Guru is configured to consume recommendations which are generated from AWS CodeGuru Profiler. See `amazon_code_guru_profiler` below.
        """
        return pulumi.get(self, "amazon_code_guru_profilers")


@pulumi.output_type
class EventSourcesConfigEventSourceAmazonCodeGuruProfiler(dict):
    def __init__(__self__, *,
                 status: str):
        """
        :param str status: Status of the CodeGuru Profiler integration. Valid values are `ENABLED` and `DISABLED`.
        """
        pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter
    def status(self) -> str:
        """
        Status of the CodeGuru Profiler integration. Valid values are `ENABLED` and `DISABLED`.
        """
        return pulumi.get(self, "status")


@pulumi.output_type
class ResourceCollectionCloudformation(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "stackNames":
            suggest = "stack_names"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ResourceCollectionCloudformation. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ResourceCollectionCloudformation.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ResourceCollectionCloudformation.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 stack_names: Sequence[str]):
        """
        :param Sequence[str] stack_names: Array of the names of the AWS CloudFormation stacks. If `type` is `AWS_SERVICE` (all acccount resources) this array should be a single item containing a wildcard (`"*"`).
        """
        pulumi.set(__self__, "stack_names", stack_names)

    @property
    @pulumi.getter(name="stackNames")
    def stack_names(self) -> Sequence[str]:
        """
        Array of the names of the AWS CloudFormation stacks. If `type` is `AWS_SERVICE` (all acccount resources) this array should be a single item containing a wildcard (`"*"`).
        """
        return pulumi.get(self, "stack_names")


@pulumi.output_type
class ResourceCollectionTags(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "appBoundaryKey":
            suggest = "app_boundary_key"
        elif key == "tagValues":
            suggest = "tag_values"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ResourceCollectionTags. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ResourceCollectionTags.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ResourceCollectionTags.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 app_boundary_key: str,
                 tag_values: Sequence[str]):
        """
        :param str app_boundary_key: An AWS tag key that is used to identify the AWS resources that DevOps Guru analyzes. All AWS resources in your account and Region tagged with this key make up your DevOps Guru application and analysis boundary. The key must begin with the prefix `DevOps-Guru-`. Any casing can be used for the prefix, but the associated tags __must use the same casing__ in their tag key.
        :param Sequence[str] tag_values: Array of tag values. These can be used to further filter for specific resources within the application boundary. To analyze all resources tagged with the `app_boundary_key` regardless of the corresponding tag value, this array should be a single item containing a wildcard (`"*"`).
        """
        pulumi.set(__self__, "app_boundary_key", app_boundary_key)
        pulumi.set(__self__, "tag_values", tag_values)

    @property
    @pulumi.getter(name="appBoundaryKey")
    def app_boundary_key(self) -> str:
        """
        An AWS tag key that is used to identify the AWS resources that DevOps Guru analyzes. All AWS resources in your account and Region tagged with this key make up your DevOps Guru application and analysis boundary. The key must begin with the prefix `DevOps-Guru-`. Any casing can be used for the prefix, but the associated tags __must use the same casing__ in their tag key.
        """
        return pulumi.get(self, "app_boundary_key")

    @property
    @pulumi.getter(name="tagValues")
    def tag_values(self) -> Sequence[str]:
        """
        Array of tag values. These can be used to further filter for specific resources within the application boundary. To analyze all resources tagged with the `app_boundary_key` regardless of the corresponding tag value, this array should be a single item containing a wildcard (`"*"`).
        """
        return pulumi.get(self, "tag_values")


