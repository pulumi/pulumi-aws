# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'EventSourcesConfigEventSourceArgs',
    'EventSourcesConfigEventSourceAmazonCodeGuruProfilerArgs',
    'ResourceCollectionCloudformationArgs',
    'ResourceCollectionTagsArgs',
]

@pulumi.input_type
class EventSourcesConfigEventSourceArgs:
    def __init__(__self__, *,
                 amazon_code_guru_profilers: Optional[pulumi.Input[Sequence[pulumi.Input['EventSourcesConfigEventSourceAmazonCodeGuruProfilerArgs']]]] = None):
        """
        :param pulumi.Input[Sequence[pulumi.Input['EventSourcesConfigEventSourceAmazonCodeGuruProfilerArgs']]] amazon_code_guru_profilers: Stores whether DevOps Guru is configured to consume recommendations which are generated from AWS CodeGuru Profiler. See `amazon_code_guru_profiler` below.
        """
        if amazon_code_guru_profilers is not None:
            pulumi.set(__self__, "amazon_code_guru_profilers", amazon_code_guru_profilers)

    @property
    @pulumi.getter(name="amazonCodeGuruProfilers")
    def amazon_code_guru_profilers(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['EventSourcesConfigEventSourceAmazonCodeGuruProfilerArgs']]]]:
        """
        Stores whether DevOps Guru is configured to consume recommendations which are generated from AWS CodeGuru Profiler. See `amazon_code_guru_profiler` below.
        """
        return pulumi.get(self, "amazon_code_guru_profilers")

    @amazon_code_guru_profilers.setter
    def amazon_code_guru_profilers(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['EventSourcesConfigEventSourceAmazonCodeGuruProfilerArgs']]]]):
        pulumi.set(self, "amazon_code_guru_profilers", value)


@pulumi.input_type
class EventSourcesConfigEventSourceAmazonCodeGuruProfilerArgs:
    def __init__(__self__, *,
                 status: pulumi.Input[str]):
        """
        :param pulumi.Input[str] status: Status of the CodeGuru Profiler integration. Valid values are `ENABLED` and `DISABLED`.
        """
        pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter
    def status(self) -> pulumi.Input[str]:
        """
        Status of the CodeGuru Profiler integration. Valid values are `ENABLED` and `DISABLED`.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: pulumi.Input[str]):
        pulumi.set(self, "status", value)


@pulumi.input_type
class ResourceCollectionCloudformationArgs:
    def __init__(__self__, *,
                 stack_names: pulumi.Input[Sequence[pulumi.Input[str]]]):
        """
        :param pulumi.Input[Sequence[pulumi.Input[str]]] stack_names: Array of the names of the AWS CloudFormation stacks. If `type` is `AWS_SERVICE` (all acccount resources) this array should be a single item containing a wildcard (`"*"`).
        """
        pulumi.set(__self__, "stack_names", stack_names)

    @property
    @pulumi.getter(name="stackNames")
    def stack_names(self) -> pulumi.Input[Sequence[pulumi.Input[str]]]:
        """
        Array of the names of the AWS CloudFormation stacks. If `type` is `AWS_SERVICE` (all acccount resources) this array should be a single item containing a wildcard (`"*"`).
        """
        return pulumi.get(self, "stack_names")

    @stack_names.setter
    def stack_names(self, value: pulumi.Input[Sequence[pulumi.Input[str]]]):
        pulumi.set(self, "stack_names", value)


@pulumi.input_type
class ResourceCollectionTagsArgs:
    def __init__(__self__, *,
                 app_boundary_key: pulumi.Input[str],
                 tag_values: pulumi.Input[Sequence[pulumi.Input[str]]]):
        """
        :param pulumi.Input[str] app_boundary_key: An AWS tag key that is used to identify the AWS resources that DevOps Guru analyzes. All AWS resources in your account and Region tagged with this key make up your DevOps Guru application and analysis boundary. The key must begin with the prefix `DevOps-Guru-`. Any casing can be used for the prefix, but the associated tags __must use the same casing__ in their tag key.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] tag_values: Array of tag values. These can be used to further filter for specific resources within the application boundary. To analyze all resources tagged with the `app_boundary_key` regardless of the corresponding tag value, this array should be a single item containing a wildcard (`"*"`).
        """
        pulumi.set(__self__, "app_boundary_key", app_boundary_key)
        pulumi.set(__self__, "tag_values", tag_values)

    @property
    @pulumi.getter(name="appBoundaryKey")
    def app_boundary_key(self) -> pulumi.Input[str]:
        """
        An AWS tag key that is used to identify the AWS resources that DevOps Guru analyzes. All AWS resources in your account and Region tagged with this key make up your DevOps Guru application and analysis boundary. The key must begin with the prefix `DevOps-Guru-`. Any casing can be used for the prefix, but the associated tags __must use the same casing__ in their tag key.
        """
        return pulumi.get(self, "app_boundary_key")

    @app_boundary_key.setter
    def app_boundary_key(self, value: pulumi.Input[str]):
        pulumi.set(self, "app_boundary_key", value)

    @property
    @pulumi.getter(name="tagValues")
    def tag_values(self) -> pulumi.Input[Sequence[pulumi.Input[str]]]:
        """
        Array of tag values. These can be used to further filter for specific resources within the application boundary. To analyze all resources tagged with the `app_boundary_key` regardless of the corresponding tag value, this array should be a single item containing a wildcard (`"*"`).
        """
        return pulumi.get(self, "tag_values")

    @tag_values.setter
    def tag_values(self, value: pulumi.Input[Sequence[pulumi.Input[str]]]):
        pulumi.set(self, "tag_values", value)


