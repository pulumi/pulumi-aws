# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import pulumi
import pulumi.runtime
from .. import utilities, tables

class PolicyAttachment(pulumi.CustomResource):
    policy_id: pulumi.Output[str]
    """
    The unique identifier (ID) of the policy that you want to attach to the target.
    """
    target_id: pulumi.Output[str]
    """
    The unique identifier (ID) of the root, organizational unit, or account number that you want to attach the policy to.
    """
    def __init__(__self__, __name__, __opts__=None, policy_id=None, target_id=None):
        """
        Provides a resource to attach an AWS Organizations policy to an organization account, root, or unit.
        
        
        :param str __name__: The name of the resource.
        :param pulumi.ResourceOptions __opts__: Options for the resource.
        :param pulumi.Input[str] policy_id: The unique identifier (ID) of the policy that you want to attach to the target.
        :param pulumi.Input[str] target_id: The unique identifier (ID) of the root, organizational unit, or account number that you want to attach the policy to.
        """
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not policy_id:
            raise TypeError('Missing required property policy_id')
        __props__['policy_id'] = policy_id

        if not target_id:
            raise TypeError('Missing required property target_id')
        __props__['target_id'] = target_id

        super(PolicyAttachment, __self__).__init__(
            'aws:organizations/policyAttachment:PolicyAttachment',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

