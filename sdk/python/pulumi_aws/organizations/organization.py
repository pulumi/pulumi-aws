# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import pulumi
import pulumi.runtime
from .. import utilities, tables

class Organization(pulumi.CustomResource):
    arn: pulumi.Output[str]
    """
    ARN of the organization
    """
    aws_service_access_principals: pulumi.Output[list]
    """
    List of AWS service principal names for which you want to enable integration with your organization. This is typically in the form of a URL, such as service-abbreviation.amazonaws.com. Organization must have `feature_set` set to `ALL`. For additional information, see the [AWS Organizations User Guide](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html).
    """
    feature_set: pulumi.Output[str]
    """
    Specify "ALL" (default) or "CONSOLIDATED_BILLING".
    """
    master_account_arn: pulumi.Output[str]
    """
    ARN of the master account
    """
    master_account_email: pulumi.Output[str]
    """
    Email address of the master account
    """
    master_account_id: pulumi.Output[str]
    """
    Identifier of the master account
    """
    def __init__(__self__, __name__, __opts__=None, aws_service_access_principals=None, feature_set=None):
        """
        Provides a resource to create an organization.
        
        
        :param str __name__: The name of the resource.
        :param pulumi.ResourceOptions __opts__: Options for the resource.
        :param pulumi.Input[list] aws_service_access_principals: List of AWS service principal names for which you want to enable integration with your organization. This is typically in the form of a URL, such as service-abbreviation.amazonaws.com. Organization must have `feature_set` set to `ALL`. For additional information, see the [AWS Organizations User Guide](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html).
        :param pulumi.Input[str] feature_set: Specify "ALL" (default) or "CONSOLIDATED_BILLING".
        """
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['aws_service_access_principals'] = aws_service_access_principals

        __props__['feature_set'] = feature_set

        __props__['arn'] = None
        __props__['master_account_arn'] = None
        __props__['master_account_email'] = None
        __props__['master_account_id'] = None

        super(Organization, __self__).__init__(
            'aws:organizations/organization:Organization',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

