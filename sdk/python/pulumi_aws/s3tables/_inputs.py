# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'TableBucketMaintenanceConfigurationArgs',
    'TableBucketMaintenanceConfigurationArgsDict',
    'TableBucketMaintenanceConfigurationIcebergUnreferencedFileRemovalArgs',
    'TableBucketMaintenanceConfigurationIcebergUnreferencedFileRemovalArgsDict',
    'TableBucketMaintenanceConfigurationIcebergUnreferencedFileRemovalSettingsArgs',
    'TableBucketMaintenanceConfigurationIcebergUnreferencedFileRemovalSettingsArgsDict',
    'TableMaintenanceConfigurationArgs',
    'TableMaintenanceConfigurationArgsDict',
    'TableMaintenanceConfigurationIcebergCompactionArgs',
    'TableMaintenanceConfigurationIcebergCompactionArgsDict',
    'TableMaintenanceConfigurationIcebergCompactionSettingsArgs',
    'TableMaintenanceConfigurationIcebergCompactionSettingsArgsDict',
    'TableMaintenanceConfigurationIcebergSnapshotManagementArgs',
    'TableMaintenanceConfigurationIcebergSnapshotManagementArgsDict',
    'TableMaintenanceConfigurationIcebergSnapshotManagementSettingsArgs',
    'TableMaintenanceConfigurationIcebergSnapshotManagementSettingsArgsDict',
]

MYPY = False

if not MYPY:
    class TableBucketMaintenanceConfigurationArgsDict(TypedDict):
        iceberg_unreferenced_file_removal: pulumi.Input['TableBucketMaintenanceConfigurationIcebergUnreferencedFileRemovalArgsDict']
        """
        A single Iceberg unreferenced file removal settings block.
        See `iceberg_unreferenced_file_removal` below
        """
elif False:
    TableBucketMaintenanceConfigurationArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class TableBucketMaintenanceConfigurationArgs:
    def __init__(__self__, *,
                 iceberg_unreferenced_file_removal: pulumi.Input['TableBucketMaintenanceConfigurationIcebergUnreferencedFileRemovalArgs']):
        """
        :param pulumi.Input['TableBucketMaintenanceConfigurationIcebergUnreferencedFileRemovalArgs'] iceberg_unreferenced_file_removal: A single Iceberg unreferenced file removal settings block.
               See `iceberg_unreferenced_file_removal` below
        """
        pulumi.set(__self__, "iceberg_unreferenced_file_removal", iceberg_unreferenced_file_removal)

    @property
    @pulumi.getter(name="icebergUnreferencedFileRemoval")
    def iceberg_unreferenced_file_removal(self) -> pulumi.Input['TableBucketMaintenanceConfigurationIcebergUnreferencedFileRemovalArgs']:
        """
        A single Iceberg unreferenced file removal settings block.
        See `iceberg_unreferenced_file_removal` below
        """
        return pulumi.get(self, "iceberg_unreferenced_file_removal")

    @iceberg_unreferenced_file_removal.setter
    def iceberg_unreferenced_file_removal(self, value: pulumi.Input['TableBucketMaintenanceConfigurationIcebergUnreferencedFileRemovalArgs']):
        pulumi.set(self, "iceberg_unreferenced_file_removal", value)


if not MYPY:
    class TableBucketMaintenanceConfigurationIcebergUnreferencedFileRemovalArgsDict(TypedDict):
        settings: pulumi.Input['TableBucketMaintenanceConfigurationIcebergUnreferencedFileRemovalSettingsArgsDict']
        """
        Settings for unreferenced file removal.
        See `iceberg_unreferenced_file_removal.settings` below
        """
        status: pulumi.Input[str]
        """
        Whether the configuration is enabled.
        Valid values are `enabled` and `disabled`.
        """
elif False:
    TableBucketMaintenanceConfigurationIcebergUnreferencedFileRemovalArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class TableBucketMaintenanceConfigurationIcebergUnreferencedFileRemovalArgs:
    def __init__(__self__, *,
                 settings: pulumi.Input['TableBucketMaintenanceConfigurationIcebergUnreferencedFileRemovalSettingsArgs'],
                 status: pulumi.Input[str]):
        """
        :param pulumi.Input['TableBucketMaintenanceConfigurationIcebergUnreferencedFileRemovalSettingsArgs'] settings: Settings for unreferenced file removal.
               See `iceberg_unreferenced_file_removal.settings` below
        :param pulumi.Input[str] status: Whether the configuration is enabled.
               Valid values are `enabled` and `disabled`.
        """
        pulumi.set(__self__, "settings", settings)
        pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter
    def settings(self) -> pulumi.Input['TableBucketMaintenanceConfigurationIcebergUnreferencedFileRemovalSettingsArgs']:
        """
        Settings for unreferenced file removal.
        See `iceberg_unreferenced_file_removal.settings` below
        """
        return pulumi.get(self, "settings")

    @settings.setter
    def settings(self, value: pulumi.Input['TableBucketMaintenanceConfigurationIcebergUnreferencedFileRemovalSettingsArgs']):
        pulumi.set(self, "settings", value)

    @property
    @pulumi.getter
    def status(self) -> pulumi.Input[str]:
        """
        Whether the configuration is enabled.
        Valid values are `enabled` and `disabled`.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: pulumi.Input[str]):
        pulumi.set(self, "status", value)


if not MYPY:
    class TableBucketMaintenanceConfigurationIcebergUnreferencedFileRemovalSettingsArgsDict(TypedDict):
        non_current_days: pulumi.Input[float]
        """
        Data objects marked for deletion are deleted after this many days.
        Must be at least `1`.
        """
        unreferenced_days: pulumi.Input[float]
        """
        Unreferenced data objects are marked for deletion after this many days.
        Must be at least `1`.
        """
elif False:
    TableBucketMaintenanceConfigurationIcebergUnreferencedFileRemovalSettingsArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class TableBucketMaintenanceConfigurationIcebergUnreferencedFileRemovalSettingsArgs:
    def __init__(__self__, *,
                 non_current_days: pulumi.Input[float],
                 unreferenced_days: pulumi.Input[float]):
        """
        :param pulumi.Input[float] non_current_days: Data objects marked for deletion are deleted after this many days.
               Must be at least `1`.
        :param pulumi.Input[float] unreferenced_days: Unreferenced data objects are marked for deletion after this many days.
               Must be at least `1`.
        """
        pulumi.set(__self__, "non_current_days", non_current_days)
        pulumi.set(__self__, "unreferenced_days", unreferenced_days)

    @property
    @pulumi.getter(name="nonCurrentDays")
    def non_current_days(self) -> pulumi.Input[float]:
        """
        Data objects marked for deletion are deleted after this many days.
        Must be at least `1`.
        """
        return pulumi.get(self, "non_current_days")

    @non_current_days.setter
    def non_current_days(self, value: pulumi.Input[float]):
        pulumi.set(self, "non_current_days", value)

    @property
    @pulumi.getter(name="unreferencedDays")
    def unreferenced_days(self) -> pulumi.Input[float]:
        """
        Unreferenced data objects are marked for deletion after this many days.
        Must be at least `1`.
        """
        return pulumi.get(self, "unreferenced_days")

    @unreferenced_days.setter
    def unreferenced_days(self, value: pulumi.Input[float]):
        pulumi.set(self, "unreferenced_days", value)


if not MYPY:
    class TableMaintenanceConfigurationArgsDict(TypedDict):
        iceberg_compaction: pulumi.Input['TableMaintenanceConfigurationIcebergCompactionArgsDict']
        """
        A single Iceberg compaction settings block.
        See `iceberg_compaction` below
        """
        iceberg_snapshot_management: pulumi.Input['TableMaintenanceConfigurationIcebergSnapshotManagementArgsDict']
        """
        A single Iceberg snapshot management settings block.
        See `iceberg_snapshot_management` below
        """
elif False:
    TableMaintenanceConfigurationArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class TableMaintenanceConfigurationArgs:
    def __init__(__self__, *,
                 iceberg_compaction: pulumi.Input['TableMaintenanceConfigurationIcebergCompactionArgs'],
                 iceberg_snapshot_management: pulumi.Input['TableMaintenanceConfigurationIcebergSnapshotManagementArgs']):
        """
        :param pulumi.Input['TableMaintenanceConfigurationIcebergCompactionArgs'] iceberg_compaction: A single Iceberg compaction settings block.
               See `iceberg_compaction` below
        :param pulumi.Input['TableMaintenanceConfigurationIcebergSnapshotManagementArgs'] iceberg_snapshot_management: A single Iceberg snapshot management settings block.
               See `iceberg_snapshot_management` below
        """
        pulumi.set(__self__, "iceberg_compaction", iceberg_compaction)
        pulumi.set(__self__, "iceberg_snapshot_management", iceberg_snapshot_management)

    @property
    @pulumi.getter(name="icebergCompaction")
    def iceberg_compaction(self) -> pulumi.Input['TableMaintenanceConfigurationIcebergCompactionArgs']:
        """
        A single Iceberg compaction settings block.
        See `iceberg_compaction` below
        """
        return pulumi.get(self, "iceberg_compaction")

    @iceberg_compaction.setter
    def iceberg_compaction(self, value: pulumi.Input['TableMaintenanceConfigurationIcebergCompactionArgs']):
        pulumi.set(self, "iceberg_compaction", value)

    @property
    @pulumi.getter(name="icebergSnapshotManagement")
    def iceberg_snapshot_management(self) -> pulumi.Input['TableMaintenanceConfigurationIcebergSnapshotManagementArgs']:
        """
        A single Iceberg snapshot management settings block.
        See `iceberg_snapshot_management` below
        """
        return pulumi.get(self, "iceberg_snapshot_management")

    @iceberg_snapshot_management.setter
    def iceberg_snapshot_management(self, value: pulumi.Input['TableMaintenanceConfigurationIcebergSnapshotManagementArgs']):
        pulumi.set(self, "iceberg_snapshot_management", value)


if not MYPY:
    class TableMaintenanceConfigurationIcebergCompactionArgsDict(TypedDict):
        settings: pulumi.Input['TableMaintenanceConfigurationIcebergCompactionSettingsArgsDict']
        """
        Settings for compaction.
        See `iceberg_compaction.settings` below
        """
        status: pulumi.Input[str]
        """
        Whether the configuration is enabled.
        Valid values are `enabled` and `disabled`.
        """
elif False:
    TableMaintenanceConfigurationIcebergCompactionArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class TableMaintenanceConfigurationIcebergCompactionArgs:
    def __init__(__self__, *,
                 settings: pulumi.Input['TableMaintenanceConfigurationIcebergCompactionSettingsArgs'],
                 status: pulumi.Input[str]):
        """
        :param pulumi.Input['TableMaintenanceConfigurationIcebergCompactionSettingsArgs'] settings: Settings for compaction.
               See `iceberg_compaction.settings` below
        :param pulumi.Input[str] status: Whether the configuration is enabled.
               Valid values are `enabled` and `disabled`.
        """
        pulumi.set(__self__, "settings", settings)
        pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter
    def settings(self) -> pulumi.Input['TableMaintenanceConfigurationIcebergCompactionSettingsArgs']:
        """
        Settings for compaction.
        See `iceberg_compaction.settings` below
        """
        return pulumi.get(self, "settings")

    @settings.setter
    def settings(self, value: pulumi.Input['TableMaintenanceConfigurationIcebergCompactionSettingsArgs']):
        pulumi.set(self, "settings", value)

    @property
    @pulumi.getter
    def status(self) -> pulumi.Input[str]:
        """
        Whether the configuration is enabled.
        Valid values are `enabled` and `disabled`.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: pulumi.Input[str]):
        pulumi.set(self, "status", value)


if not MYPY:
    class TableMaintenanceConfigurationIcebergCompactionSettingsArgsDict(TypedDict):
        target_file_size_mb: pulumi.Input[float]
        """
        Data objects smaller than this size may be combined with others to improve query performance.
        Must be between `64` and `512`.
        """
elif False:
    TableMaintenanceConfigurationIcebergCompactionSettingsArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class TableMaintenanceConfigurationIcebergCompactionSettingsArgs:
    def __init__(__self__, *,
                 target_file_size_mb: pulumi.Input[float]):
        """
        :param pulumi.Input[float] target_file_size_mb: Data objects smaller than this size may be combined with others to improve query performance.
               Must be between `64` and `512`.
        """
        pulumi.set(__self__, "target_file_size_mb", target_file_size_mb)

    @property
    @pulumi.getter(name="targetFileSizeMb")
    def target_file_size_mb(self) -> pulumi.Input[float]:
        """
        Data objects smaller than this size may be combined with others to improve query performance.
        Must be between `64` and `512`.
        """
        return pulumi.get(self, "target_file_size_mb")

    @target_file_size_mb.setter
    def target_file_size_mb(self, value: pulumi.Input[float]):
        pulumi.set(self, "target_file_size_mb", value)


if not MYPY:
    class TableMaintenanceConfigurationIcebergSnapshotManagementArgsDict(TypedDict):
        settings: pulumi.Input['TableMaintenanceConfigurationIcebergSnapshotManagementSettingsArgsDict']
        """
        Settings for snapshot management.
        See `iceberg_snapshot_management.settings` below
        """
        status: pulumi.Input[str]
        """
        Whether the configuration is enabled.
        Valid values are `enabled` and `disabled`.
        """
elif False:
    TableMaintenanceConfigurationIcebergSnapshotManagementArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class TableMaintenanceConfigurationIcebergSnapshotManagementArgs:
    def __init__(__self__, *,
                 settings: pulumi.Input['TableMaintenanceConfigurationIcebergSnapshotManagementSettingsArgs'],
                 status: pulumi.Input[str]):
        """
        :param pulumi.Input['TableMaintenanceConfigurationIcebergSnapshotManagementSettingsArgs'] settings: Settings for snapshot management.
               See `iceberg_snapshot_management.settings` below
        :param pulumi.Input[str] status: Whether the configuration is enabled.
               Valid values are `enabled` and `disabled`.
        """
        pulumi.set(__self__, "settings", settings)
        pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter
    def settings(self) -> pulumi.Input['TableMaintenanceConfigurationIcebergSnapshotManagementSettingsArgs']:
        """
        Settings for snapshot management.
        See `iceberg_snapshot_management.settings` below
        """
        return pulumi.get(self, "settings")

    @settings.setter
    def settings(self, value: pulumi.Input['TableMaintenanceConfigurationIcebergSnapshotManagementSettingsArgs']):
        pulumi.set(self, "settings", value)

    @property
    @pulumi.getter
    def status(self) -> pulumi.Input[str]:
        """
        Whether the configuration is enabled.
        Valid values are `enabled` and `disabled`.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: pulumi.Input[str]):
        pulumi.set(self, "status", value)


if not MYPY:
    class TableMaintenanceConfigurationIcebergSnapshotManagementSettingsArgsDict(TypedDict):
        max_snapshot_age_hours: pulumi.Input[float]
        """
        Snapshots older than this will be marked for deletiion.
        Must be at least `1`.
        """
        min_snapshots_to_keep: pulumi.Input[float]
        """
        Minimum number of snapshots to keep.
        Must be at least `1`.
        """
elif False:
    TableMaintenanceConfigurationIcebergSnapshotManagementSettingsArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class TableMaintenanceConfigurationIcebergSnapshotManagementSettingsArgs:
    def __init__(__self__, *,
                 max_snapshot_age_hours: pulumi.Input[float],
                 min_snapshots_to_keep: pulumi.Input[float]):
        """
        :param pulumi.Input[float] max_snapshot_age_hours: Snapshots older than this will be marked for deletiion.
               Must be at least `1`.
        :param pulumi.Input[float] min_snapshots_to_keep: Minimum number of snapshots to keep.
               Must be at least `1`.
        """
        pulumi.set(__self__, "max_snapshot_age_hours", max_snapshot_age_hours)
        pulumi.set(__self__, "min_snapshots_to_keep", min_snapshots_to_keep)

    @property
    @pulumi.getter(name="maxSnapshotAgeHours")
    def max_snapshot_age_hours(self) -> pulumi.Input[float]:
        """
        Snapshots older than this will be marked for deletiion.
        Must be at least `1`.
        """
        return pulumi.get(self, "max_snapshot_age_hours")

    @max_snapshot_age_hours.setter
    def max_snapshot_age_hours(self, value: pulumi.Input[float]):
        pulumi.set(self, "max_snapshot_age_hours", value)

    @property
    @pulumi.getter(name="minSnapshotsToKeep")
    def min_snapshots_to_keep(self) -> pulumi.Input[float]:
        """
        Minimum number of snapshots to keep.
        Must be at least `1`.
        """
        return pulumi.get(self, "min_snapshots_to_keep")

    @min_snapshots_to_keep.setter
    def min_snapshots_to_keep(self, value: pulumi.Input[float]):
        pulumi.set(self, "min_snapshots_to_keep", value)


