# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'TableBucketMaintenanceConfiguration',
    'TableBucketMaintenanceConfigurationIcebergUnreferencedFileRemoval',
    'TableBucketMaintenanceConfigurationIcebergUnreferencedFileRemovalSettings',
    'TableMaintenanceConfiguration',
    'TableMaintenanceConfigurationIcebergCompaction',
    'TableMaintenanceConfigurationIcebergCompactionSettings',
    'TableMaintenanceConfigurationIcebergSnapshotManagement',
    'TableMaintenanceConfigurationIcebergSnapshotManagementSettings',
]

@pulumi.output_type
class TableBucketMaintenanceConfiguration(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "icebergUnreferencedFileRemoval":
            suggest = "iceberg_unreferenced_file_removal"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in TableBucketMaintenanceConfiguration. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        TableBucketMaintenanceConfiguration.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        TableBucketMaintenanceConfiguration.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 iceberg_unreferenced_file_removal: 'outputs.TableBucketMaintenanceConfigurationIcebergUnreferencedFileRemoval'):
        """
        :param 'TableBucketMaintenanceConfigurationIcebergUnreferencedFileRemovalArgs' iceberg_unreferenced_file_removal: A single Iceberg unreferenced file removal settings block.
               See `iceberg_unreferenced_file_removal` below
        """
        pulumi.set(__self__, "iceberg_unreferenced_file_removal", iceberg_unreferenced_file_removal)

    @property
    @pulumi.getter(name="icebergUnreferencedFileRemoval")
    def iceberg_unreferenced_file_removal(self) -> 'outputs.TableBucketMaintenanceConfigurationIcebergUnreferencedFileRemoval':
        """
        A single Iceberg unreferenced file removal settings block.
        See `iceberg_unreferenced_file_removal` below
        """
        return pulumi.get(self, "iceberg_unreferenced_file_removal")


@pulumi.output_type
class TableBucketMaintenanceConfigurationIcebergUnreferencedFileRemoval(dict):
    def __init__(__self__, *,
                 settings: 'outputs.TableBucketMaintenanceConfigurationIcebergUnreferencedFileRemovalSettings',
                 status: str):
        """
        :param 'TableBucketMaintenanceConfigurationIcebergUnreferencedFileRemovalSettingsArgs' settings: Settings for unreferenced file removal.
               See `iceberg_unreferenced_file_removal.settings` below
        :param str status: Whether the configuration is enabled.
               Valid values are `enabled` and `disabled`.
        """
        pulumi.set(__self__, "settings", settings)
        pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter
    def settings(self) -> 'outputs.TableBucketMaintenanceConfigurationIcebergUnreferencedFileRemovalSettings':
        """
        Settings for unreferenced file removal.
        See `iceberg_unreferenced_file_removal.settings` below
        """
        return pulumi.get(self, "settings")

    @property
    @pulumi.getter
    def status(self) -> str:
        """
        Whether the configuration is enabled.
        Valid values are `enabled` and `disabled`.
        """
        return pulumi.get(self, "status")


@pulumi.output_type
class TableBucketMaintenanceConfigurationIcebergUnreferencedFileRemovalSettings(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "nonCurrentDays":
            suggest = "non_current_days"
        elif key == "unreferencedDays":
            suggest = "unreferenced_days"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in TableBucketMaintenanceConfigurationIcebergUnreferencedFileRemovalSettings. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        TableBucketMaintenanceConfigurationIcebergUnreferencedFileRemovalSettings.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        TableBucketMaintenanceConfigurationIcebergUnreferencedFileRemovalSettings.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 non_current_days: float,
                 unreferenced_days: float):
        """
        :param float non_current_days: Data objects marked for deletion are deleted after this many days.
               Must be at least `1`.
        :param float unreferenced_days: Unreferenced data objects are marked for deletion after this many days.
               Must be at least `1`.
        """
        pulumi.set(__self__, "non_current_days", non_current_days)
        pulumi.set(__self__, "unreferenced_days", unreferenced_days)

    @property
    @pulumi.getter(name="nonCurrentDays")
    def non_current_days(self) -> float:
        """
        Data objects marked for deletion are deleted after this many days.
        Must be at least `1`.
        """
        return pulumi.get(self, "non_current_days")

    @property
    @pulumi.getter(name="unreferencedDays")
    def unreferenced_days(self) -> float:
        """
        Unreferenced data objects are marked for deletion after this many days.
        Must be at least `1`.
        """
        return pulumi.get(self, "unreferenced_days")


@pulumi.output_type
class TableMaintenanceConfiguration(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "icebergCompaction":
            suggest = "iceberg_compaction"
        elif key == "icebergSnapshotManagement":
            suggest = "iceberg_snapshot_management"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in TableMaintenanceConfiguration. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        TableMaintenanceConfiguration.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        TableMaintenanceConfiguration.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 iceberg_compaction: 'outputs.TableMaintenanceConfigurationIcebergCompaction',
                 iceberg_snapshot_management: 'outputs.TableMaintenanceConfigurationIcebergSnapshotManagement'):
        """
        :param 'TableMaintenanceConfigurationIcebergCompactionArgs' iceberg_compaction: A single Iceberg compaction settings block.
               See `iceberg_compaction` below
        :param 'TableMaintenanceConfigurationIcebergSnapshotManagementArgs' iceberg_snapshot_management: A single Iceberg snapshot management settings block.
               See `iceberg_snapshot_management` below
        """
        pulumi.set(__self__, "iceberg_compaction", iceberg_compaction)
        pulumi.set(__self__, "iceberg_snapshot_management", iceberg_snapshot_management)

    @property
    @pulumi.getter(name="icebergCompaction")
    def iceberg_compaction(self) -> 'outputs.TableMaintenanceConfigurationIcebergCompaction':
        """
        A single Iceberg compaction settings block.
        See `iceberg_compaction` below
        """
        return pulumi.get(self, "iceberg_compaction")

    @property
    @pulumi.getter(name="icebergSnapshotManagement")
    def iceberg_snapshot_management(self) -> 'outputs.TableMaintenanceConfigurationIcebergSnapshotManagement':
        """
        A single Iceberg snapshot management settings block.
        See `iceberg_snapshot_management` below
        """
        return pulumi.get(self, "iceberg_snapshot_management")


@pulumi.output_type
class TableMaintenanceConfigurationIcebergCompaction(dict):
    def __init__(__self__, *,
                 settings: 'outputs.TableMaintenanceConfigurationIcebergCompactionSettings',
                 status: str):
        """
        :param 'TableMaintenanceConfigurationIcebergCompactionSettingsArgs' settings: Settings for compaction.
               See `iceberg_compaction.settings` below
        :param str status: Whether the configuration is enabled.
               Valid values are `enabled` and `disabled`.
        """
        pulumi.set(__self__, "settings", settings)
        pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter
    def settings(self) -> 'outputs.TableMaintenanceConfigurationIcebergCompactionSettings':
        """
        Settings for compaction.
        See `iceberg_compaction.settings` below
        """
        return pulumi.get(self, "settings")

    @property
    @pulumi.getter
    def status(self) -> str:
        """
        Whether the configuration is enabled.
        Valid values are `enabled` and `disabled`.
        """
        return pulumi.get(self, "status")


@pulumi.output_type
class TableMaintenanceConfigurationIcebergCompactionSettings(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "targetFileSizeMb":
            suggest = "target_file_size_mb"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in TableMaintenanceConfigurationIcebergCompactionSettings. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        TableMaintenanceConfigurationIcebergCompactionSettings.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        TableMaintenanceConfigurationIcebergCompactionSettings.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 target_file_size_mb: float):
        """
        :param float target_file_size_mb: Data objects smaller than this size may be combined with others to improve query performance.
               Must be between `64` and `512`.
        """
        pulumi.set(__self__, "target_file_size_mb", target_file_size_mb)

    @property
    @pulumi.getter(name="targetFileSizeMb")
    def target_file_size_mb(self) -> float:
        """
        Data objects smaller than this size may be combined with others to improve query performance.
        Must be between `64` and `512`.
        """
        return pulumi.get(self, "target_file_size_mb")


@pulumi.output_type
class TableMaintenanceConfigurationIcebergSnapshotManagement(dict):
    def __init__(__self__, *,
                 settings: 'outputs.TableMaintenanceConfigurationIcebergSnapshotManagementSettings',
                 status: str):
        """
        :param 'TableMaintenanceConfigurationIcebergSnapshotManagementSettingsArgs' settings: Settings for snapshot management.
               See `iceberg_snapshot_management.settings` below
        :param str status: Whether the configuration is enabled.
               Valid values are `enabled` and `disabled`.
        """
        pulumi.set(__self__, "settings", settings)
        pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter
    def settings(self) -> 'outputs.TableMaintenanceConfigurationIcebergSnapshotManagementSettings':
        """
        Settings for snapshot management.
        See `iceberg_snapshot_management.settings` below
        """
        return pulumi.get(self, "settings")

    @property
    @pulumi.getter
    def status(self) -> str:
        """
        Whether the configuration is enabled.
        Valid values are `enabled` and `disabled`.
        """
        return pulumi.get(self, "status")


@pulumi.output_type
class TableMaintenanceConfigurationIcebergSnapshotManagementSettings(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "maxSnapshotAgeHours":
            suggest = "max_snapshot_age_hours"
        elif key == "minSnapshotsToKeep":
            suggest = "min_snapshots_to_keep"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in TableMaintenanceConfigurationIcebergSnapshotManagementSettings. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        TableMaintenanceConfigurationIcebergSnapshotManagementSettings.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        TableMaintenanceConfigurationIcebergSnapshotManagementSettings.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 max_snapshot_age_hours: float,
                 min_snapshots_to_keep: float):
        """
        :param float max_snapshot_age_hours: Snapshots older than this will be marked for deletiion.
               Must be at least `1`.
        :param float min_snapshots_to_keep: Minimum number of snapshots to keep.
               Must be at least `1`.
        """
        pulumi.set(__self__, "max_snapshot_age_hours", max_snapshot_age_hours)
        pulumi.set(__self__, "min_snapshots_to_keep", min_snapshots_to_keep)

    @property
    @pulumi.getter(name="maxSnapshotAgeHours")
    def max_snapshot_age_hours(self) -> float:
        """
        Snapshots older than this will be marked for deletiion.
        Must be at least `1`.
        """
        return pulumi.get(self, "max_snapshot_age_hours")

    @property
    @pulumi.getter(name="minSnapshotsToKeep")
    def min_snapshots_to_keep(self) -> float:
        """
        Minimum number of snapshots to keep.
        Must be at least `1`.
        """
        return pulumi.get(self, "min_snapshots_to_keep")


