# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetGlobalNetworkResult',
    'AwaitableGetGlobalNetworkResult',
    'get_global_network',
    'get_global_network_output',
]

@pulumi.output_type
class GetGlobalNetworkResult:
    """
    A collection of values returned by getGlobalNetwork.
    """
    def __init__(__self__, arn=None, description=None, global_network_id=None, id=None, tags=None):
        if arn and not isinstance(arn, str):
            raise TypeError("Expected argument 'arn' to be a str")
        pulumi.set(__self__, "arn", arn)
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if global_network_id and not isinstance(global_network_id, str):
            raise TypeError("Expected argument 'global_network_id' to be a str")
        pulumi.set(__self__, "global_network_id", global_network_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if tags and not isinstance(tags, dict):
            raise TypeError("Expected argument 'tags' to be a dict")
        pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter
    def arn(self) -> str:
        """
        The ARN of the global network.
        """
        return pulumi.get(self, "arn")

    @property
    @pulumi.getter
    def description(self) -> str:
        """
        The description of the global network.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="globalNetworkId")
    def global_network_id(self) -> str:
        return pulumi.get(self, "global_network_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def tags(self) -> Mapping[str, str]:
        """
        A map of resource tags.
        """
        return pulumi.get(self, "tags")


class AwaitableGetGlobalNetworkResult(GetGlobalNetworkResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetGlobalNetworkResult(
            arn=self.arn,
            description=self.description,
            global_network_id=self.global_network_id,
            id=self.id,
            tags=self.tags)


def get_global_network(global_network_id: Optional[str] = None,
                       tags: Optional[Mapping[str, str]] = None,
                       opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetGlobalNetworkResult:
    """
    Retrieve information about a global network.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_aws as aws

    example = aws.networkmanager.get_global_network(global_network_id=var["global_network_id"])
    ```


    :param str global_network_id: The id of the specific global network to retrieve.
    :param Mapping[str, str] tags: A map of resource tags.
    """
    __args__ = dict()
    __args__['globalNetworkId'] = global_network_id
    __args__['tags'] = tags
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('aws:networkmanager/getGlobalNetwork:getGlobalNetwork', __args__, opts=opts, typ=GetGlobalNetworkResult).value

    return AwaitableGetGlobalNetworkResult(
        arn=__ret__.arn,
        description=__ret__.description,
        global_network_id=__ret__.global_network_id,
        id=__ret__.id,
        tags=__ret__.tags)


@_utilities.lift_output_func(get_global_network)
def get_global_network_output(global_network_id: Optional[pulumi.Input[str]] = None,
                              tags: Optional[pulumi.Input[Optional[Mapping[str, str]]]] = None,
                              opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetGlobalNetworkResult]:
    """
    Retrieve information about a global network.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_aws as aws

    example = aws.networkmanager.get_global_network(global_network_id=var["global_network_id"])
    ```


    :param str global_network_id: The id of the specific global network to retrieve.
    :param Mapping[str, str] tags: A map of resource tags.
    """
    ...
