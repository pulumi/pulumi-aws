# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class CachesIscsiVolume(pulumi.CustomResource):
    """
    Manages an AWS Storage Gateway cached iSCSI volume.
    
    ~> **NOTE:** The gateway must have cache added (e.g. via the [`aws_storagegateway_cache`](https://www.terraform.io/docs/providers/aws/r/storagegateway_cache.html) resource) before creating volumes otherwise the Storage Gateway API will return an error.
    
    ~> **NOTE:** The gateway must have an upload buffer added (e.g. via the [`aws_storagegateway_upload_buffer`](https://www.terraform.io/docs/providers/aws/r/storagegateway_upload_buffer.html) resource) before the volume is operational to clients, however the Storage Gateway API will allow volume creation without error in that case and return volume status as `UPLOAD BUFFER NOT CONFIGURED`.
    """
    def __init__(__self__, __name__, __opts__=None, gateway_arn=None, network_interface_id=None, snapshot_id=None, source_volume_arn=None, target_name=None, volume_size_in_bytes=None):
        """Create a CachesIscsiVolume resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not gateway_arn:
            raise TypeError('Missing required property gateway_arn')
        __props__['gatewayArn'] = gateway_arn

        if not network_interface_id:
            raise TypeError('Missing required property network_interface_id')
        __props__['networkInterfaceId'] = network_interface_id

        __props__['snapshotId'] = snapshot_id

        __props__['sourceVolumeArn'] = source_volume_arn

        if not target_name:
            raise TypeError('Missing required property target_name')
        __props__['targetName'] = target_name

        if not volume_size_in_bytes:
            raise TypeError('Missing required property volume_size_in_bytes')
        __props__['volumeSizeInBytes'] = volume_size_in_bytes

        __props__['arn'] = None
        __props__['chap_enabled'] = None
        __props__['lun_number'] = None
        __props__['network_interface_port'] = None
        __props__['target_arn'] = None
        __props__['volume_arn'] = None
        __props__['volume_id'] = None

        super(CachesIscsiVolume, __self__).__init__(
            'aws:storagegateway/cachesIscsiVolume:CachesIscsiVolume',
            __name__,
            __props__,
            __opts__)

