# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GroupInsightsConfigurationArgs',
    'GroupInsightsConfigurationArgsDict',
]

MYPY = False

if not MYPY:
    class GroupInsightsConfigurationArgsDict(TypedDict):
        insights_enabled: pulumi.Input[builtins.bool]
        """
        Specifies whether insights are enabled.
        """
        notifications_enabled: NotRequired[pulumi.Input[builtins.bool]]
        """
        Specifies whether insight notifications are enabled.
        """
elif False:
    GroupInsightsConfigurationArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class GroupInsightsConfigurationArgs:
    def __init__(__self__, *,
                 insights_enabled: pulumi.Input[builtins.bool],
                 notifications_enabled: Optional[pulumi.Input[builtins.bool]] = None):
        """
        :param pulumi.Input[builtins.bool] insights_enabled: Specifies whether insights are enabled.
        :param pulumi.Input[builtins.bool] notifications_enabled: Specifies whether insight notifications are enabled.
        """
        pulumi.set(__self__, "insights_enabled", insights_enabled)
        if notifications_enabled is not None:
            pulumi.set(__self__, "notifications_enabled", notifications_enabled)

    @property
    @pulumi.getter(name="insightsEnabled")
    def insights_enabled(self) -> pulumi.Input[builtins.bool]:
        """
        Specifies whether insights are enabled.
        """
        return pulumi.get(self, "insights_enabled")

    @insights_enabled.setter
    def insights_enabled(self, value: pulumi.Input[builtins.bool]):
        pulumi.set(self, "insights_enabled", value)

    @property
    @pulumi.getter(name="notificationsEnabled")
    def notifications_enabled(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Specifies whether insight notifications are enabled.
        """
        return pulumi.get(self, "notifications_enabled")

    @notifications_enabled.setter
    def notifications_enabled(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "notifications_enabled", value)


