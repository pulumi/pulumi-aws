# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import pulumi
import pulumi.runtime
from .. import utilities, tables

class GetClusterResult(object):
    """
    A collection of values returned by getCluster.
    """
    def __init__(__self__, arn=None, certificate_authority=None, created_at=None, endpoint=None, platform_version=None, role_arn=None, version=None, vpc_config=None, id=None):
        if arn and not isinstance(arn, str):
            raise TypeError('Expected argument arn to be a str')
        __self__.arn = arn
        """
        The Amazon Resource Name (ARN) of the cluster.
        """
        if certificate_authority and not isinstance(certificate_authority, dict):
            raise TypeError('Expected argument certificate_authority to be a dict')
        __self__.certificate_authority = certificate_authority
        """
        Nested attribute containing `certificate-authority-data` for your cluster.
        """
        if created_at and not isinstance(created_at, str):
            raise TypeError('Expected argument created_at to be a str')
        __self__.created_at = created_at
        """
        The Unix epoch time stamp in seconds for when the cluster was created.
        """
        if endpoint and not isinstance(endpoint, str):
            raise TypeError('Expected argument endpoint to be a str')
        __self__.endpoint = endpoint
        """
        The endpoint for your Kubernetes API server.
        """
        if platform_version and not isinstance(platform_version, str):
            raise TypeError('Expected argument platform_version to be a str')
        __self__.platform_version = platform_version
        """
        The platform version for the cluster.
        """
        if role_arn and not isinstance(role_arn, str):
            raise TypeError('Expected argument role_arn to be a str')
        __self__.role_arn = role_arn
        """
        The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.
        """
        if version and not isinstance(version, str):
            raise TypeError('Expected argument version to be a str')
        __self__.version = version
        """
        The Kubernetes server version for the cluster.
        """
        if vpc_config and not isinstance(vpc_config, dict):
            raise TypeError('Expected argument vpc_config to be a dict')
        __self__.vpc_config = vpc_config
        """
        Nested attribute containing VPC configuration for the cluster.
        """
        if id and not isinstance(id, str):
            raise TypeError('Expected argument id to be a str')
        __self__.id = id
        """
        id is the provider-assigned unique ID for this managed resource.
        """

async def get_cluster(name=None):
    """
    Retrieve information about an EKS Cluster.
    """
    __args__ = dict()

    __args__['name'] = name
    __ret__ = await pulumi.runtime.invoke('aws:eks/getCluster:getCluster', __args__)

    return GetClusterResult(
        arn=__ret__.get('arn'),
        certificate_authority=__ret__.get('certificateAuthority'),
        created_at=__ret__.get('createdAt'),
        endpoint=__ret__.get('endpoint'),
        platform_version=__ret__.get('platformVersion'),
        role_arn=__ret__.get('roleArn'),
        version=__ret__.get('version'),
        vpc_config=__ret__.get('vpcConfig'),
        id=__ret__.get('id'))
