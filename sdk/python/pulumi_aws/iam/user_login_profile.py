# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import pulumi
import pulumi.runtime
from .. import utilities, tables

class UserLoginProfile(pulumi.CustomResource):
    encrypted_password: pulumi.Output[str]
    """
    The encrypted password, base64 encoded.
    """
    key_fingerprint: pulumi.Output[str]
    """
    The fingerprint of the PGP key used to encrypt
    the password
    """
    password_length: pulumi.Output[int]
    """
    The length of the generated
    password.
    """
    password_reset_required: pulumi.Output[bool]
    """
    Whether the
    user should be forced to reset the generated password on first login.
    """
    pgp_key: pulumi.Output[str]
    """
    Either a base-64 encoded PGP public key, or a
    keybase username in the form `keybase:username`.
    """
    user: pulumi.Output[str]
    """
    The IAM user's name.
    """
    def __init__(__self__, __name__, __opts__=None, password_length=None, password_reset_required=None, pgp_key=None, user=None):
        """
        Provides one-time creation of a IAM user login profile, and uses PGP to
        encrypt the password for safe transport to the user. PGP keys can be
        obtained from Keybase.
        
        
        :param str __name__: The name of the resource.
        :param pulumi.ResourceOptions __opts__: Options for the resource.
        :param pulumi.Input[int] password_length: The length of the generated
               password.
        :param pulumi.Input[bool] password_reset_required: Whether the
               user should be forced to reset the generated password on first login.
        :param pulumi.Input[str] pgp_key: Either a base-64 encoded PGP public key, or a
               keybase username in the form `keybase:username`.
        :param pulumi.Input[str] user: The IAM user's name.
        """
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['password_length'] = password_length

        __props__['password_reset_required'] = password_reset_required

        if not pgp_key:
            raise TypeError('Missing required property pgp_key')
        __props__['pgp_key'] = pgp_key

        if not user:
            raise TypeError('Missing required property user')
        __props__['user'] = user

        __props__['encrypted_password'] = None
        __props__['key_fingerprint'] = None

        super(UserLoginProfile, __self__).__init__(
            'aws:iam/userLoginProfile:UserLoginProfile',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

