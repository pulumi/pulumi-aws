# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime

class SamlProvider(pulumi.CustomResource):
    """
    Provides an IAM SAML provider.
    """
    def __init__(__self__, __name__, __opts__=None, name=None, saml_metadata_document=None):
        """Create a SamlProvider resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if name and not isinstance(name, basestring):
            raise TypeError('Expected property name to be a basestring')
        __self__.name = name
        """
        The name of the provider to create.
        """
        __props__['name'] = name

        if not saml_metadata_document:
            raise TypeError('Missing required property saml_metadata_document')
        elif not isinstance(saml_metadata_document, basestring):
            raise TypeError('Expected property saml_metadata_document to be a basestring')
        __self__.saml_metadata_document = saml_metadata_document
        """
        An XML document generated by an identity provider that supports SAML 2.0.
        """
        __props__['samlMetadataDocument'] = saml_metadata_document

        __self__.arn = pulumi.runtime.UNKNOWN
        """
        The ARN assigned by AWS for this provider.
        """
        __self__.valid_until = pulumi.runtime.UNKNOWN
        """
        The expiration date and time for the SAML provider in RFC1123 format, e.g. `Mon, 02 Jan 2006 15:04:05 MST`.
        """

        super(SamlProvider, __self__).__init__(
            'aws:iam/samlProvider:SamlProvider',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'arn' in outs:
            self.arn = outs['arn']
        if 'name' in outs:
            self.name = outs['name']
        if 'samlMetadataDocument' in outs:
            self.saml_metadata_document = outs['samlMetadataDocument']
        if 'validUntil' in outs:
            self.valid_until = outs['validUntil']
