# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetDataSharesResult',
    'AwaitableGetDataSharesResult',
    'get_data_shares',
    'get_data_shares_output',
]

@pulumi.output_type
class GetDataSharesResult:
    """
    A collection of values returned by getDataShares.
    """
    def __init__(__self__, data_shares=None, id=None, region=None):
        if data_shares and not isinstance(data_shares, list):
            raise TypeError("Expected argument 'data_shares' to be a list")
        pulumi.set(__self__, "data_shares", data_shares)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="dataShares")
    def data_shares(self) -> Sequence['outputs.GetDataSharesDataShareResult']:
        """
        An array of all data shares in the current region. See `data_shares` below.
        """
        return pulumi.get(self, "data_shares")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        AWS region.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")


class AwaitableGetDataSharesResult(GetDataSharesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDataSharesResult(
            data_shares=self.data_shares,
            id=self.id,
            region=self.region)


def get_data_shares(region: Optional[_builtins.str] = None,
                    opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDataSharesResult:
    """
    Data source for managing AWS Redshift Data Shares.

    ## Example Usage

    ### Basic Usage

    ```python
    import pulumi
    import pulumi_aws as aws

    example = aws.redshift.get_data_shares()
    ```


    :param _builtins.str region: Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
    """
    __args__ = dict()
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws:redshift/getDataShares:getDataShares', __args__, opts=opts, typ=GetDataSharesResult).value

    return AwaitableGetDataSharesResult(
        data_shares=pulumi.get(__ret__, 'data_shares'),
        id=pulumi.get(__ret__, 'id'),
        region=pulumi.get(__ret__, 'region'))
def get_data_shares_output(region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                           opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetDataSharesResult]:
    """
    Data source for managing AWS Redshift Data Shares.

    ## Example Usage

    ### Basic Usage

    ```python
    import pulumi
    import pulumi_aws as aws

    example = aws.redshift.get_data_shares()
    ```


    :param _builtins.str region: Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
    """
    __args__ = dict()
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('aws:redshift/getDataShares:getDataShares', __args__, opts=opts, typ=GetDataSharesResult)
    return __ret__.apply(lambda __response__: GetDataSharesResult(
        data_shares=pulumi.get(__response__, 'data_shares'),
        id=pulumi.get(__response__, 'id'),
        region=pulumi.get(__response__, 'region')))
