# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetDataSharesResult',
    'AwaitableGetDataSharesResult',
    'get_data_shares',
    'get_data_shares_output',
]

@pulumi.output_type
class GetDataSharesResult:
    """
    A collection of values returned by getDataShares.
    """
    def __init__(__self__, data_shares=None, id=None):
        if data_shares and not isinstance(data_shares, list):
            raise TypeError("Expected argument 'data_shares' to be a list")
        pulumi.set(__self__, "data_shares", data_shares)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter(name="dataShares")
    def data_shares(self) -> Optional[Sequence['outputs.GetDataSharesDataShareResult']]:
        """
        An array of all data shares in the current region. See `data_shares` below.
        """
        return pulumi.get(self, "data_shares")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        AWS region.
        """
        return pulumi.get(self, "id")


class AwaitableGetDataSharesResult(GetDataSharesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDataSharesResult(
            data_shares=self.data_shares,
            id=self.id)


def get_data_shares(data_shares: Optional[Sequence[pulumi.InputType['GetDataSharesDataShareArgs']]] = None,
                    opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDataSharesResult:
    """
    Data source for managing AWS Redshift Data Shares.

    ## Example Usage

    ### Basic Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_aws as aws

    example = aws.redshift.get_data_shares()
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[pulumi.InputType['GetDataSharesDataShareArgs']] data_shares: An array of all data shares in the current region. See `data_shares` below.
    """
    __args__ = dict()
    __args__['dataShares'] = data_shares
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws:redshift/getDataShares:getDataShares', __args__, opts=opts, typ=GetDataSharesResult).value

    return AwaitableGetDataSharesResult(
        data_shares=pulumi.get(__ret__, 'data_shares'),
        id=pulumi.get(__ret__, 'id'))


@_utilities.lift_output_func(get_data_shares)
def get_data_shares_output(data_shares: Optional[pulumi.Input[Optional[Sequence[pulumi.InputType['GetDataSharesDataShareArgs']]]]] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetDataSharesResult]:
    """
    Data source for managing AWS Redshift Data Shares.

    ## Example Usage

    ### Basic Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_aws as aws

    example = aws.redshift.get_data_shares()
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[pulumi.InputType['GetDataSharesDataShareArgs']] data_shares: An array of all data shares in the current region. See `data_shares` below.
    """
    ...
