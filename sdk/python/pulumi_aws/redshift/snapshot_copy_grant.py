# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class SnapshotCopyGrant(pulumi.CustomResource):
    """
    Creates a snapshot copy grant that allows AWS Redshift to encrypt copied snapshots with a customer master key from AWS KMS in a destination region.
    
    Note that the grant must exist in the destination region, and not in the region of the cluster.
    """
    def __init__(__self__, __name__, __opts__=None, kms_key_id=None, snapshot_copy_grant_name=None, tags=None):
        """Create a SnapshotCopyGrant resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if kms_key_id and not isinstance(kms_key_id, basestring):
            raise TypeError('Expected property kms_key_id to be a basestring')
        __self__.kms_key_id = kms_key_id
        """
        The unique identifier for the customer master key (CMK) that the grant applies to. Specify the key ID or the Amazon Resource Name (ARN) of the CMK. To specify a CMK in a different AWS account, you must use the key ARN. If not specified, the default key is used.
        """
        __props__['kmsKeyId'] = kms_key_id

        if not snapshot_copy_grant_name:
            raise TypeError('Missing required property snapshot_copy_grant_name')
        elif not isinstance(snapshot_copy_grant_name, basestring):
            raise TypeError('Expected property snapshot_copy_grant_name to be a basestring')
        __self__.snapshot_copy_grant_name = snapshot_copy_grant_name
        """
        A friendly name for identifying the grant.
        """
        __props__['snapshotCopyGrantName'] = snapshot_copy_grant_name

        if tags and not isinstance(tags, dict):
            raise TypeError('Expected property tags to be a dict')
        __self__.tags = tags
        __props__['tags'] = tags

        super(SnapshotCopyGrant, __self__).__init__(
            'aws:redshift/snapshotCopyGrant:SnapshotCopyGrant',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'kmsKeyId' in outs:
            self.kms_key_id = outs['kmsKeyId']
        if 'snapshotCopyGrantName' in outs:
            self.snapshot_copy_grant_name = outs['snapshotCopyGrantName']
        if 'tags' in outs:
            self.tags = outs['tags']
