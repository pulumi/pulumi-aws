# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class Environment(pulumi.CustomResource):
    """
    Provides an Elastic Beanstalk Environment Resource. Elastic Beanstalk allows
    you to deploy and manage applications in the AWS cloud without worrying about
    the infrastructure that runs those applications.
    
    Environments are often things such as `development`, `integration`, or
    `production`.
    """
    def __init__(__self__, __name__, __opts__=None, application=None, cname_prefix=None, description=None, name=None, platform_arn=None, poll_interval=None, settings=None, solution_stack_name=None, tags=None, template_name=None, tier=None, version=None, wait_for_ready_timeout=None):
        """Create a Environment resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not application:
            raise TypeError('Missing required property application')
        __props__['application'] = application

        __props__['cnamePrefix'] = cname_prefix

        __props__['description'] = description

        __props__['name'] = name

        __props__['platformArn'] = platform_arn

        __props__['pollInterval'] = poll_interval

        __props__['settings'] = settings

        __props__['solutionStackName'] = solution_stack_name

        __props__['tags'] = tags

        __props__['templateName'] = template_name

        __props__['tier'] = tier

        __props__['version'] = version

        __props__['waitForReadyTimeout'] = wait_for_ready_timeout

        __props__['all_settings'] = None
        __props__['arn'] = None
        __props__['autoscaling_groups'] = None
        __props__['cname'] = None
        __props__['instances'] = None
        __props__['launch_configurations'] = None
        __props__['load_balancers'] = None
        __props__['queues'] = None
        __props__['triggers'] = None

        super(Environment, __self__).__init__(
            'aws:elasticbeanstalk/environment:Environment',
            __name__,
            __props__,
            __opts__)

