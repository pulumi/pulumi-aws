# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime

class FileSystem(pulumi.CustomResource):
    """
    Provides an Elastic File System (EFS) resource.
    """
    def __init__(__self__, __name__, __opts__=None, creation_token=None, encrypted=None, kms_key_id=None, performance_mode=None, reference_name=None, tags=None):
        """Create a FileSystem resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if creation_token and not isinstance(creation_token, basestring):
            raise TypeError('Expected property creation_token to be a basestring')
        __self__.creation_token = creation_token
        """
        A unique name (a maximum of 64 characters are allowed)
        used as reference when creating the Elastic File System to ensure idempotent file
        system creation. By default generated by Terraform. See [Elastic File System]
        (http://docs.aws.amazon.com/efs/latest/ug/) user guide for more information.
        """
        __props__['creationToken'] = creation_token

        if encrypted and not isinstance(encrypted, bool):
            raise TypeError('Expected property encrypted to be a bool')
        __self__.encrypted = encrypted
        """
        If true, the disk will be encrypted.
        """
        __props__['encrypted'] = encrypted

        if kms_key_id and not isinstance(kms_key_id, basestring):
            raise TypeError('Expected property kms_key_id to be a basestring')
        __self__.kms_key_id = kms_key_id
        """
        The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true.
        """
        __props__['kmsKeyId'] = kms_key_id

        if performance_mode and not isinstance(performance_mode, basestring):
            raise TypeError('Expected property performance_mode to be a basestring')
        __self__.performance_mode = performance_mode
        """
        The file system performance mode. Can be either
        `"generalPurpose"` or `"maxIO"` (Default: `"generalPurpose"`).
        """
        __props__['performanceMode'] = performance_mode

        if reference_name and not isinstance(reference_name, basestring):
            raise TypeError('Expected property reference_name to be a basestring')
        __self__.reference_name = reference_name
        """
        **DEPRECATED** (Optional) A reference name used when creating the
        `Creation Token` which Amazon EFS uses to ensure idempotent file system creation. By
        default generated by Terraform.
        """
        __props__['referenceName'] = reference_name

        if tags and not isinstance(tags, dict):
            raise TypeError('Expected property tags to be a dict')
        __self__.tags = tags
        """
        A mapping of tags to assign to the file system.
        """
        __props__['tags'] = tags

        __self__.dns_name = pulumi.runtime.UNKNOWN
        """
        The DNS name for the filesystem per [documented convention](http://docs.aws.amazon.com/efs/latest/ug/mounting-fs-mount-cmd-dns-name.html).
        """

        super(FileSystem, __self__).__init__(
            'aws:efs/fileSystem:FileSystem',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'creationToken' in outs:
            self.creation_token = outs['creationToken']
        if 'dnsName' in outs:
            self.dns_name = outs['dnsName']
        if 'encrypted' in outs:
            self.encrypted = outs['encrypted']
        if 'kmsKeyId' in outs:
            self.kms_key_id = outs['kmsKeyId']
        if 'performanceMode' in outs:
            self.performance_mode = outs['performanceMode']
        if 'referenceName' in outs:
            self.reference_name = outs['referenceName']
        if 'tags' in outs:
            self.tags = outs['tags']
