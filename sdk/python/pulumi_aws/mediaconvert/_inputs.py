# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'QueueReservationPlanSettingsArgs',
]

@pulumi.input_type
class QueueReservationPlanSettingsArgs:
    def __init__(__self__, *,
                 commitment: pulumi.Input[str],
                 renewal_type: pulumi.Input[str],
                 reserved_slots: pulumi.Input[int]):
        """
        :param pulumi.Input[str] commitment: The length of the term of your reserved queue pricing plan commitment. Valid value is `ONE_YEAR`.
        :param pulumi.Input[str] renewal_type: Specifies whether the term of your reserved queue pricing plan. Valid values are `AUTO_RENEW` or `EXPIRE`.
        :param pulumi.Input[int] reserved_slots: Specifies the number of reserved transcode slots (RTS) for queue.
        """
        pulumi.set(__self__, "commitment", commitment)
        pulumi.set(__self__, "renewal_type", renewal_type)
        pulumi.set(__self__, "reserved_slots", reserved_slots)

    @property
    @pulumi.getter
    def commitment(self) -> pulumi.Input[str]:
        """
        The length of the term of your reserved queue pricing plan commitment. Valid value is `ONE_YEAR`.
        """
        return pulumi.get(self, "commitment")

    @commitment.setter
    def commitment(self, value: pulumi.Input[str]):
        pulumi.set(self, "commitment", value)

    @property
    @pulumi.getter(name="renewalType")
    def renewal_type(self) -> pulumi.Input[str]:
        """
        Specifies whether the term of your reserved queue pricing plan. Valid values are `AUTO_RENEW` or `EXPIRE`.
        """
        return pulumi.get(self, "renewal_type")

    @renewal_type.setter
    def renewal_type(self, value: pulumi.Input[str]):
        pulumi.set(self, "renewal_type", value)

    @property
    @pulumi.getter(name="reservedSlots")
    def reserved_slots(self) -> pulumi.Input[int]:
        """
        Specifies the number of reserved transcode slots (RTS) for queue.
        """
        return pulumi.get(self, "reserved_slots")

    @reserved_slots.setter
    def reserved_slots(self, value: pulumi.Input[int]):
        pulumi.set(self, "reserved_slots", value)


