# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class SmsChannel(pulumi.CustomResource):
    def __init__(__self__, __name__, __opts__=None, application_id=None, enabled=None, sender_id=None, short_code=None):
        """Create a SmsChannel resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not application_id:
            raise TypeError('Missing required property application_id')
        elif not isinstance(application_id, basestring):
            raise TypeError('Expected property application_id to be a basestring')
        __self__.application_id = application_id
        __props__['applicationId'] = application_id

        if enabled and not isinstance(enabled, bool):
            raise TypeError('Expected property enabled to be a bool')
        __self__.enabled = enabled
        __props__['enabled'] = enabled

        if sender_id and not isinstance(sender_id, basestring):
            raise TypeError('Expected property sender_id to be a basestring')
        __self__.sender_id = sender_id
        __props__['senderId'] = sender_id

        if short_code and not isinstance(short_code, basestring):
            raise TypeError('Expected property short_code to be a basestring')
        __self__.short_code = short_code
        __props__['shortCode'] = short_code

        __self__.promotional_messages_per_second = pulumi.runtime.UNKNOWN
        __self__.transactional_messages_per_second = pulumi.runtime.UNKNOWN

        super(SmsChannel, __self__).__init__(
            'aws:pinpoint/smsChannel:SmsChannel',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'applicationId' in outs:
            self.application_id = outs['applicationId']
        if 'enabled' in outs:
            self.enabled = outs['enabled']
        if 'promotionalMessagesPerSecond' in outs:
            self.promotional_messages_per_second = outs['promotionalMessagesPerSecond']
        if 'senderId' in outs:
            self.sender_id = outs['senderId']
        if 'shortCode' in outs:
            self.short_code = outs['shortCode']
        if 'transactionalMessagesPerSecond' in outs:
            self.transactional_messages_per_second = outs['transactionalMessagesPerSecond']
