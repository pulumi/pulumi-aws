# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class App(pulumi.CustomResource):
    """
    Provides a Pinpoint App resource.
    """
    def __init__(__self__, __name__, __opts__=None, campaign_hook=None, limits=None, name=None, name_prefix=None, quiet_time=None):
        """Create a App resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if campaign_hook and not isinstance(campaign_hook, dict):
            raise TypeError('Expected property campaign_hook to be a dict')
        __self__.campaign_hook = campaign_hook
        """
        The default campaign limits for the app. These limits apply to each campaign for the app, unless the campaign overrides the default with limits of its own
        """
        __props__['campaignHook'] = campaign_hook

        if limits and not isinstance(limits, dict):
            raise TypeError('Expected property limits to be a dict')
        __self__.limits = limits
        """
        The default campaign limits for the app. These limits apply to each campaign for the app, unless the campaign overrides the default with limits of its own
        """
        __props__['limits'] = limits

        if name and not isinstance(name, basestring):
            raise TypeError('Expected property name to be a basestring')
        __self__.name = name
        """
        The application name. By default generated by Terraform
        """
        __props__['name'] = name

        if name_prefix and not isinstance(name_prefix, basestring):
            raise TypeError('Expected property name_prefix to be a basestring')
        __self__.name_prefix = name_prefix
        """
        The name of the Pinpoint application. Conflicts with `name`
        """
        __props__['namePrefix'] = name_prefix

        if quiet_time and not isinstance(quiet_time, dict):
            raise TypeError('Expected property quiet_time to be a dict')
        __self__.quiet_time = quiet_time
        """
        The default quiet time for the app. Each campaign for this app sends no messages during this time unless the campaign overrides the default with a quiet time of its own
        """
        __props__['quietTime'] = quiet_time

        __self__.application_id = pulumi.runtime.UNKNOWN
        """
        The Application ID of the Pinpoint App.
        """

        super(App, __self__).__init__(
            'aws:pinpoint/app:App',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'applicationId' in outs:
            self.application_id = outs['applicationId']
        if 'campaignHook' in outs:
            self.campaign_hook = outs['campaignHook']
        if 'limits' in outs:
            self.limits = outs['limits']
        if 'name' in outs:
            self.name = outs['name']
        if 'namePrefix' in outs:
            self.name_prefix = outs['namePrefix']
        if 'quietTime' in outs:
            self.quiet_time = outs['quietTime']
