# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class EmailChannel(pulumi.CustomResource):
    def __init__(__self__, __name__, __opts__=None, application_id=None, enabled=None, from_address=None, identity=None, role_arn=None):
        """Create a EmailChannel resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not application_id:
            raise TypeError('Missing required property application_id')
        elif not isinstance(application_id, basestring):
            raise TypeError('Expected property application_id to be a basestring')
        __self__.application_id = application_id
        __props__['applicationId'] = application_id

        if enabled and not isinstance(enabled, bool):
            raise TypeError('Expected property enabled to be a bool')
        __self__.enabled = enabled
        __props__['enabled'] = enabled

        if not from_address:
            raise TypeError('Missing required property from_address')
        elif not isinstance(from_address, basestring):
            raise TypeError('Expected property from_address to be a basestring')
        __self__.from_address = from_address
        __props__['fromAddress'] = from_address

        if not identity:
            raise TypeError('Missing required property identity')
        elif not isinstance(identity, basestring):
            raise TypeError('Expected property identity to be a basestring')
        __self__.identity = identity
        __props__['identity'] = identity

        if not role_arn:
            raise TypeError('Missing required property role_arn')
        elif not isinstance(role_arn, basestring):
            raise TypeError('Expected property role_arn to be a basestring')
        __self__.role_arn = role_arn
        __props__['roleArn'] = role_arn

        __self__.messages_per_second = pulumi.runtime.UNKNOWN

        super(EmailChannel, __self__).__init__(
            'aws:pinpoint/emailChannel:EmailChannel',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'applicationId' in outs:
            self.application_id = outs['applicationId']
        if 'enabled' in outs:
            self.enabled = outs['enabled']
        if 'fromAddress' in outs:
            self.from_address = outs['fromAddress']
        if 'identity' in outs:
            self.identity = outs['identity']
        if 'messagesPerSecond' in outs:
            self.messages_per_second = outs['messagesPerSecond']
        if 'roleArn' in outs:
            self.role_arn = outs['roleArn']
