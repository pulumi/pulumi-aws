# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime

class GetSecretResult(object):
    """
    A collection of values returned by getSecret.
    """
    def __init__(__self__, arn=None, description=None, kms_key_id=None, name=None, rotation_enabled=None, rotation_lambda_arn=None, rotation_rules=None, tags=None):
        if not arn:
            raise TypeError('Missing required argument arn')
        elif not isinstance(arn, basestring):
            raise TypeError('Expected argument arn to be a basestring')
        __self__.arn = arn
        """
        The Amazon Resource Name (ARN) of the secret.
        """
        if not description:
            raise TypeError('Missing required argument description')
        elif not isinstance(description, basestring):
            raise TypeError('Expected argument description to be a basestring')
        __self__.description = description
        """
        A description of the secret.
        """
        if not kms_key_id:
            raise TypeError('Missing required argument kms_key_id')
        elif not isinstance(kms_key_id, basestring):
            raise TypeError('Expected argument kms_key_id to be a basestring')
        __self__.kms_key_id = kms_key_id
        """
        The Key Management Service (KMS) Customer Master Key (CMK) associated with the secret.
        """
        if not name:
            raise TypeError('Missing required argument name')
        elif not isinstance(name, basestring):
            raise TypeError('Expected argument name to be a basestring')
        __self__.name = name
        if not rotation_enabled:
            raise TypeError('Missing required argument rotation_enabled')
        elif not isinstance(rotation_enabled, bool):
            raise TypeError('Expected argument rotation_enabled to be a bool')
        __self__.rotation_enabled = rotation_enabled
        """
        Whether rotation is enabled or not.
        """
        if not rotation_lambda_arn:
            raise TypeError('Missing required argument rotation_lambda_arn')
        elif not isinstance(rotation_lambda_arn, basestring):
            raise TypeError('Expected argument rotation_lambda_arn to be a basestring')
        __self__.rotation_lambda_arn = rotation_lambda_arn
        """
        Rotation Lambda function Amazon Resource Name (ARN) if rotation is enabled.
        """
        if not rotation_rules:
            raise TypeError('Missing required argument rotation_rules')
        elif not isinstance(rotation_rules, list):
            raise TypeError('Expected argument rotation_rules to be a list')
        __self__.rotation_rules = rotation_rules
        """
        Rotation rules if rotation is enabled.
        """
        if not tags:
            raise TypeError('Missing required argument tags')
        elif not isinstance(tags, dict):
            raise TypeError('Expected argument tags to be a dict')
        __self__.tags = tags
        """
        Tags of the secret.
        """

def get_secret(arn=None, name=None):
    """
    Retrieve metadata information about a Secrets Manager secret. To retrieve a secret value, see the [`aws_secretsmanager_secret_version` data source](/docs/providers/aws/d/secretsmanager_secret_version.html).
    """
    __args__ = dict()

    __args__['arn'] = arn
    __args__['name'] = name
    __ret__ = pulumi.runtime.invoke('aws:secretsmanager/getSecret:getSecret', __args__)

    return GetSecretResult(
        arn=__ret__['arn'],
        description=__ret__['description'],
        kms_key_id=__ret__['kmsKeyId'],
        name=__ret__['name'],
        rotation_enabled=__ret__['rotationEnabled'],
        rotation_lambda_arn=__ret__['rotationLambdaArn'],
        rotation_rules=__ret__['rotationRules'],
        tags=__ret__['tags'])
