# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from .. import utilities, tables

class Resolver(pulumi.CustomResource):
    api_id: pulumi.Output[str]
    """
    The API ID for the GraphQL API.
    """
    arn: pulumi.Output[str]
    """
    The ARN
    """
    data_source: pulumi.Output[str]
    """
    The DataSource name.
    """
    field: pulumi.Output[str]
    """
    The field name from the schema defined in the GraphQL API.
    """
    request_template: pulumi.Output[str]
    """
    The request mapping template for this resolver.
    """
    response_template: pulumi.Output[str]
    """
    The response mapping template for this resolver.
    """
    type: pulumi.Output[str]
    """
    The type name from the schema defined in the GraphQL API.
    """
    def __init__(__self__, resource_name, opts=None, api_id=None, data_source=None, field=None, request_template=None, response_template=None, type=None, __name__=None, __opts__=None):
        """
        Provides an AppSync Resolver.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] api_id: The API ID for the GraphQL API.
        :param pulumi.Input[str] data_source: The DataSource name.
        :param pulumi.Input[str] field: The field name from the schema defined in the GraphQL API.
        :param pulumi.Input[str] request_template: The request mapping template for this resolver.
        :param pulumi.Input[str] response_template: The response mapping template for this resolver.
        :param pulumi.Input[str] type: The type name from the schema defined in the GraphQL API.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if not resource_name:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(resource_name, str):
            raise TypeError('Expected resource name to be a string')
        if opts and not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if api_id is None:
            raise TypeError("Missing required property 'api_id'")
        __props__['api_id'] = api_id

        if data_source is None:
            raise TypeError("Missing required property 'data_source'")
        __props__['data_source'] = data_source

        if field is None:
            raise TypeError("Missing required property 'field'")
        __props__['field'] = field

        if request_template is None:
            raise TypeError("Missing required property 'request_template'")
        __props__['request_template'] = request_template

        if response_template is None:
            raise TypeError("Missing required property 'response_template'")
        __props__['response_template'] = response_template

        if type is None:
            raise TypeError("Missing required property 'type'")
        __props__['type'] = type

        __props__['arn'] = None

        super(Resolver, __self__).__init__(
            'aws:appsync/resolver:Resolver',
            resource_name,
            __props__,
            opts)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

