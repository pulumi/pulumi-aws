# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class Budget(pulumi.CustomResource):
    """
    Provides a budgets budget resource. Budgets use the cost visualisation provided by Cost Explorer to show you the status of your budgets, to provide forecasts of your estimated costs, and to track your AWS usage, including your free tier usage.
    """
    def __init__(__self__, __name__, __opts__=None, account_id=None, budget_type=None, cost_filters=None, cost_types=None, limit_amount=None, limit_unit=None, name=None, name_prefix=None, time_period_end=None, time_period_start=None, time_unit=None):
        """Create a Budget resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['accountId'] = account_id

        if not budget_type:
            raise TypeError('Missing required property budget_type')
        __props__['budgetType'] = budget_type

        __props__['costFilters'] = cost_filters

        __props__['costTypes'] = cost_types

        if not limit_amount:
            raise TypeError('Missing required property limit_amount')
        __props__['limitAmount'] = limit_amount

        if not limit_unit:
            raise TypeError('Missing required property limit_unit')
        __props__['limitUnit'] = limit_unit

        __props__['name'] = name

        __props__['namePrefix'] = name_prefix

        __props__['timePeriodEnd'] = time_period_end

        if not time_period_start:
            raise TypeError('Missing required property time_period_start')
        __props__['timePeriodStart'] = time_period_start

        if not time_unit:
            raise TypeError('Missing required property time_unit')
        __props__['timeUnit'] = time_unit

        super(Budget, __self__).__init__(
            'aws:budgets/budget:Budget',
            __name__,
            __props__,
            __opts__)

