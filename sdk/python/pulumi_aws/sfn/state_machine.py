# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime

class StateMachine(pulumi.CustomResource):
    """
    Provides a Step Function State Machine resource
    """
    def __init__(__self__, __name__, __opts__=None, definition=None, name=None, role_arn=None):
        """Create a StateMachine resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not definition:
            raise TypeError('Missing required property definition')
        elif not isinstance(definition, basestring):
            raise TypeError('Expected property definition to be a basestring')
        __self__.definition = definition
        """
        The Amazon States Language definition of the state machine.
        """
        __props__['definition'] = definition

        if name and not isinstance(name, basestring):
            raise TypeError('Expected property name to be a basestring')
        __self__.name = name
        """
        The name of the state machine.
        """
        __props__['name'] = name

        if not role_arn:
            raise TypeError('Missing required property role_arn')
        elif not isinstance(role_arn, basestring):
            raise TypeError('Expected property role_arn to be a basestring')
        __self__.role_arn = role_arn
        """
        The Amazon Resource Name (ARN) of the IAM role to use for this state machine.
        """
        __props__['roleArn'] = role_arn

        __self__.creation_date = pulumi.runtime.UNKNOWN
        """
        The date the state machine was created.
        """
        __self__.status = pulumi.runtime.UNKNOWN
        """
        The current status of the state machine. Either "ACTIVE" or "DELETING".
        """

        super(StateMachine, __self__).__init__(
            'aws:sfn/stateMachine:StateMachine',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'creationDate' in outs:
            self.creation_date = outs['creationDate']
        if 'definition' in outs:
            self.definition = outs['definition']
        if 'name' in outs:
            self.name = outs['name']
        if 'roleArn' in outs:
            self.role_arn = outs['roleArn']
        if 'status' in outs:
            self.status = outs['status']
