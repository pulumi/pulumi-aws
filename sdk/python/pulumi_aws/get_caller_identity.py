# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime

class GetCallerIdentityResult(object):
    """
    A collection of values returned by getCallerIdentity.
    """
    def __init__(__self__, account_id=None, arn=None, user_id=None):
        if not account_id:
            raise TypeError('Missing required argument account_id')
        elif not isinstance(account_id, basestring):
            raise TypeError('Expected argument account_id to be a basestring')
        __self__.account_id = account_id
        """
        The AWS Account ID number of the account that owns or contains the calling entity.
        """
        if not arn:
            raise TypeError('Missing required argument arn')
        elif not isinstance(arn, basestring):
            raise TypeError('Expected argument arn to be a basestring')
        __self__.arn = arn
        """
        The AWS ARN associated with the calling entity.
        """
        if not user_id:
            raise TypeError('Missing required argument user_id')
        elif not isinstance(user_id, basestring):
            raise TypeError('Expected argument user_id to be a basestring')
        __self__.user_id = user_id
        """
        The unique identifier of the calling entity.
        """

def get_caller_identity():
    """
    Use this data source to get the access to the effective Account ID, User ID, and ARN in
    which Terraform is authorized.
    """
    __args__ = dict()

    __ret__ = pulumi.runtime.invoke('aws:index/getCallerIdentity:getCallerIdentity', __args__)

    return GetCallerIdentityResult(
        account_id=__ret__['accountId'],
        arn=__ret__['arn'],
        user_id=__ret__['userId'])
