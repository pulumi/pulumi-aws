# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import pulumi
import pulumi.runtime
from .. import utilities, tables

class PrivateDnsNamespace(pulumi.CustomResource):
    arn: pulumi.Output[str]
    """
    The ARN that Amazon Route 53 assigns to the namespace when you create it.
    """
    description: pulumi.Output[str]
    """
    The description that you specify for the namespace when you create it.
    """
    hosted_zone: pulumi.Output[str]
    """
    The ID for the hosted zone that Amazon Route 53 creates when you create a namespace.
    """
    name: pulumi.Output[str]
    """
    The name of the namespace.
    """
    vpc: pulumi.Output[str]
    """
    The ID of VPC that you want to associate the namespace with.
    """
    def __init__(__self__, __name__, __opts__=None, description=None, name=None, vpc=None):
        """
        Provides a Service Discovery Private DNS Namespace resource.
        
        
        :param str __name__: The name of the resource.
        :param pulumi.ResourceOptions __opts__: Options for the resource.
        :param pulumi.Input[str] description: The description that you specify for the namespace when you create it.
        :param pulumi.Input[str] name: The name of the namespace.
        :param pulumi.Input[str] vpc: The ID of VPC that you want to associate the namespace with.
        """
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['description'] = description

        __props__['name'] = name

        if not vpc:
            raise TypeError('Missing required property vpc')
        __props__['vpc'] = vpc

        __props__['arn'] = None
        __props__['hosted_zone'] = None

        super(PrivateDnsNamespace, __self__).__init__(
            'aws:servicediscovery/privateDnsNamespace:PrivateDnsNamespace',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

