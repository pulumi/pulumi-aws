# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'MapConfigurationArgs',
    'PlaceIndexDataSourceConfigurationArgs',
]

@pulumi.input_type
class MapConfigurationArgs:
    def __init__(__self__, *,
                 style: pulumi.Input[str]):
        """
        :param pulumi.Input[str] style: Specifies the map style selected from an available data provider. Valid values can be found in the [Location Service CreateMap API Reference](https://docs.aws.amazon.com/location/latest/APIReference/API_CreateMap.html).
        """
        pulumi.set(__self__, "style", style)

    @property
    @pulumi.getter
    def style(self) -> pulumi.Input[str]:
        """
        Specifies the map style selected from an available data provider. Valid values can be found in the [Location Service CreateMap API Reference](https://docs.aws.amazon.com/location/latest/APIReference/API_CreateMap.html).
        """
        return pulumi.get(self, "style")

    @style.setter
    def style(self, value: pulumi.Input[str]):
        pulumi.set(self, "style", value)


@pulumi.input_type
class PlaceIndexDataSourceConfigurationArgs:
    def __init__(__self__, *,
                 intended_use: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] intended_use: Specifies how the results of an operation will be stored by the caller. Valid values: `SingleUse`, `Storage`. Default: `SingleUse`.
        """
        if intended_use is not None:
            pulumi.set(__self__, "intended_use", intended_use)

    @property
    @pulumi.getter(name="intendedUse")
    def intended_use(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies how the results of an operation will be stored by the caller. Valid values: `SingleUse`, `Storage`. Default: `SingleUse`.
        """
        return pulumi.get(self, "intended_use")

    @intended_use.setter
    def intended_use(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "intended_use", value)


