# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables

class Directory(pulumi.CustomResource):
    directory_id: pulumi.Output[str]
    """
    The directory identifier for registration in WorkSpaces service.
    """
    self_service_permissions: pulumi.Output[dict]
    """
    The permissions to enable or disable self-service capabilities.

      * `changeComputeType` (`bool`) - Whether WorkSpaces directory users can change the compute type (bundle) for their workspace. Default `false`.
      * `increaseVolumeSize` (`bool`) - Whether WorkSpaces directory users can increase the volume size of the drives on their workspace. Default `false`.
      * `rebuildWorkspace` (`bool`) - Whether WorkSpaces directory users can rebuild the operating system of a workspace to its original state. Default `false`.
      * `restartWorkspace` (`bool`) - Whether WorkSpaces directory users can restart their workspace. Default `true`.
      * `switchRunningMode` (`bool`) - Whether WorkSpaces directory users can switch the running mode of their workspace. Default `false`.
    """
    subnet_ids: pulumi.Output[list]
    """
    The identifiers of the subnets where the directory resides.
    """
    tags: pulumi.Output[dict]
    """
    A mapping of tags assigned to the WorkSpaces directory.
    """
    def __init__(__self__, resource_name, opts=None, directory_id=None, self_service_permissions=None, subnet_ids=None, tags=None, __props__=None, __name__=None, __opts__=None):
        """
        Provides a directory registration in AWS WorkSpaces Service



        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] directory_id: The directory identifier for registration in WorkSpaces service.
        :param pulumi.Input[dict] self_service_permissions: The permissions to enable or disable self-service capabilities.
        :param pulumi.Input[list] subnet_ids: The identifiers of the subnets where the directory resides.
        :param pulumi.Input[dict] tags: A mapping of tags assigned to the WorkSpaces directory.

        The **self_service_permissions** object supports the following:

          * `changeComputeType` (`pulumi.Input[bool]`) - Whether WorkSpaces directory users can change the compute type (bundle) for their workspace. Default `false`.
          * `increaseVolumeSize` (`pulumi.Input[bool]`) - Whether WorkSpaces directory users can increase the volume size of the drives on their workspace. Default `false`.
          * `rebuildWorkspace` (`pulumi.Input[bool]`) - Whether WorkSpaces directory users can rebuild the operating system of a workspace to its original state. Default `false`.
          * `restartWorkspace` (`pulumi.Input[bool]`) - Whether WorkSpaces directory users can restart their workspace. Default `true`.
          * `switchRunningMode` (`pulumi.Input[bool]`) - Whether WorkSpaces directory users can switch the running mode of their workspace. Default `false`.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            if directory_id is None:
                raise TypeError("Missing required property 'directory_id'")
            __props__['directory_id'] = directory_id
            __props__['self_service_permissions'] = self_service_permissions
            __props__['subnet_ids'] = subnet_ids
            __props__['tags'] = tags
        super(Directory, __self__).__init__(
            'aws:workspaces/directory:Directory',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, directory_id=None, self_service_permissions=None, subnet_ids=None, tags=None):
        """
        Get an existing Directory resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] directory_id: The directory identifier for registration in WorkSpaces service.
        :param pulumi.Input[dict] self_service_permissions: The permissions to enable or disable self-service capabilities.
        :param pulumi.Input[list] subnet_ids: The identifiers of the subnets where the directory resides.
        :param pulumi.Input[dict] tags: A mapping of tags assigned to the WorkSpaces directory.

        The **self_service_permissions** object supports the following:

          * `changeComputeType` (`pulumi.Input[bool]`) - Whether WorkSpaces directory users can change the compute type (bundle) for their workspace. Default `false`.
          * `increaseVolumeSize` (`pulumi.Input[bool]`) - Whether WorkSpaces directory users can increase the volume size of the drives on their workspace. Default `false`.
          * `rebuildWorkspace` (`pulumi.Input[bool]`) - Whether WorkSpaces directory users can rebuild the operating system of a workspace to its original state. Default `false`.
          * `restartWorkspace` (`pulumi.Input[bool]`) - Whether WorkSpaces directory users can restart their workspace. Default `true`.
          * `switchRunningMode` (`pulumi.Input[bool]`) - Whether WorkSpaces directory users can switch the running mode of their workspace. Default `false`.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["directory_id"] = directory_id
        __props__["self_service_permissions"] = self_service_permissions
        __props__["subnet_ids"] = subnet_ids
        __props__["tags"] = tags
        return Directory(resource_name, opts=opts, __props__=__props__)
    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

