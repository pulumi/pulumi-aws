# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class Table(pulumi.CustomResource):
    """
    Provides a DynamoDB table resource
    
    ~> **Note:** It is recommended to use `lifecycle` [`ignore_changes`](https://www.terraform.io/docs/configuration/resources.html#ignore_changes) for `read_capacity` and/or `write_capacity` if there's [autoscaling policy](https://www.terraform.io/docs/providers/aws/r/appautoscaling_policy.html) attached to the table.
    """
    def __init__(__self__, __name__, __opts__=None, attributes=None, global_secondary_indexes=None, hash_key=None, local_secondary_indexes=None, name=None, point_in_time_recovery=None, range_key=None, read_capacity=None, server_side_encryption=None, stream_enabled=None, stream_view_type=None, tags=None, ttl=None, write_capacity=None):
        """Create a Table resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not attributes:
            raise TypeError('Missing required property attributes')
        __props__['attributes'] = attributes

        __props__['globalSecondaryIndexes'] = global_secondary_indexes

        if not hash_key:
            raise TypeError('Missing required property hash_key')
        __props__['hashKey'] = hash_key

        __props__['localSecondaryIndexes'] = local_secondary_indexes

        __props__['name'] = name

        __props__['pointInTimeRecovery'] = point_in_time_recovery

        __props__['rangeKey'] = range_key

        if not read_capacity:
            raise TypeError('Missing required property read_capacity')
        __props__['readCapacity'] = read_capacity

        __props__['serverSideEncryption'] = server_side_encryption

        __props__['streamEnabled'] = stream_enabled

        __props__['streamViewType'] = stream_view_type

        __props__['tags'] = tags

        __props__['ttl'] = ttl

        if not write_capacity:
            raise TypeError('Missing required property write_capacity')
        __props__['writeCapacity'] = write_capacity

        __props__['arn'] = None
        __props__['stream_arn'] = None
        __props__['stream_label'] = None

        super(Table, __self__).__init__(
            'aws:dynamodb/table:Table',
            __name__,
            __props__,
            __opts__)

