# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

# Export this package's modules as members:
from .get_resource_share import *
from .principal_association import *
from .resource_association import *
from .resource_share import *
from .resource_share_accepter import *
from ._inputs import *
from . import outputs

def _register_module():
    import pulumi
    from .. import _utilities


    class Module(pulumi.runtime.ResourceModule):
        _version = _utilities.get_semver_version()

        def version(self):
            return Module._version

        def construct(self, name: str, typ: str, urn: str) -> pulumi.Resource:
            if typ == "aws:ram/principalAssociation:PrincipalAssociation":
                return PrincipalAssociation(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws:ram/resourceAssociation:ResourceAssociation":
                return ResourceAssociation(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws:ram/resourceShare:ResourceShare":
                return ResourceShare(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws:ram/resourceShareAccepter:ResourceShareAccepter":
                return ResourceShareAccepter(name, pulumi.ResourceOptions(urn=urn))
            else:
                raise Exception(f"unknown resource type {typ}")


    _module_instance = Module()
    pulumi.runtime.register_resource_module("aws", "ram/principalAssociation", _module_instance)
    pulumi.runtime.register_resource_module("aws", "ram/resourceAssociation", _module_instance)
    pulumi.runtime.register_resource_module("aws", "ram/resourceShare", _module_instance)
    pulumi.runtime.register_resource_module("aws", "ram/resourceShareAccepter", _module_instance)

_register_module()
