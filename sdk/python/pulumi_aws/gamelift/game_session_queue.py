# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import pulumi
import pulumi.runtime
from .. import utilities, tables

class GameSessionQueue(pulumi.CustomResource):
    arn: pulumi.Output[str]
    """
    Game Session Queue ARN.
    """
    destinations: pulumi.Output[list]
    """
    List of fleet/alias ARNs used by session queue for placing game sessions.
    """
    name: pulumi.Output[str]
    """
    Name of the session queue.
    """
    player_latency_policies: pulumi.Output[list]
    """
    One or more policies used to choose fleet based on player latency. See below.
    """
    timeout_in_seconds: pulumi.Output[int]
    """
    Maximum time a game session request can remain in the queue.
    """
    def __init__(__self__, __name__, __opts__=None, destinations=None, name=None, player_latency_policies=None, timeout_in_seconds=None):
        """
        Provides an Gamelift Game Session Queue resource.
        
        
        :param str __name__: The name of the resource.
        :param pulumi.ResourceOptions __opts__: Options for the resource.
        :param pulumi.Input[list] destinations: List of fleet/alias ARNs used by session queue for placing game sessions.
        :param pulumi.Input[str] name: Name of the session queue.
        :param pulumi.Input[list] player_latency_policies: One or more policies used to choose fleet based on player latency. See below.
        :param pulumi.Input[int] timeout_in_seconds: Maximum time a game session request can remain in the queue.
        """
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['destinations'] = destinations

        __props__['name'] = name

        __props__['player_latency_policies'] = player_latency_policies

        __props__['timeout_in_seconds'] = timeout_in_seconds

        __props__['arn'] = None

        super(GameSessionQueue, __self__).__init__(
            'aws:gamelift/gameSessionQueue:GameSessionQueue',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

