# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import pulumi
import pulumi.runtime
from .. import utilities, tables

class DeploymentConfig(pulumi.CustomResource):
    compute_platform: pulumi.Output[str]
    """
    The compute platform can be `Server`, `Lambda`, or `ECS`. Default is `Server`.
    """
    deployment_config_id: pulumi.Output[str]
    """
    The AWS Assigned deployment config id
    """
    deployment_config_name: pulumi.Output[str]
    """
    The name of the deployment config.
    """
    minimum_healthy_hosts: pulumi.Output[dict]
    """
    A minimum_healthy_hosts block. Minimum Healthy Hosts are documented below.
    """
    traffic_routing_config: pulumi.Output[dict]
    """
    A traffic_routing_config block. Traffic Routing Config is documented below.
    """
    def __init__(__self__, __name__, __opts__=None, compute_platform=None, deployment_config_name=None, minimum_healthy_hosts=None, traffic_routing_config=None):
        """
        Provides a CodeDeploy deployment config for an application
        
        
        :param str __name__: The name of the resource.
        :param pulumi.ResourceOptions __opts__: Options for the resource.
        :param pulumi.Input[str] compute_platform: The compute platform can be `Server`, `Lambda`, or `ECS`. Default is `Server`.
        :param pulumi.Input[str] deployment_config_name: The name of the deployment config.
        :param pulumi.Input[dict] minimum_healthy_hosts: A minimum_healthy_hosts block. Minimum Healthy Hosts are documented below.
        :param pulumi.Input[dict] traffic_routing_config: A traffic_routing_config block. Traffic Routing Config is documented below.
        """
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['compute_platform'] = compute_platform

        if not deployment_config_name:
            raise TypeError('Missing required property deployment_config_name')
        __props__['deployment_config_name'] = deployment_config_name

        __props__['minimum_healthy_hosts'] = minimum_healthy_hosts

        __props__['traffic_routing_config'] = traffic_routing_config

        __props__['deployment_config_id'] = None

        super(DeploymentConfig, __self__).__init__(
            'aws:codedeploy/deploymentConfig:DeploymentConfig',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

