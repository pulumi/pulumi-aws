# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['StandardsSubscriptionArgs', 'StandardsSubscription']

@pulumi.input_type
class StandardsSubscriptionArgs:
    def __init__(__self__, *,
                 standards_arn: pulumi.Input[str]):
        """
        The set of arguments for constructing a StandardsSubscription resource.
        :param pulumi.Input[str] standards_arn: The ARN of a standard - see below.
               
               Currently available standards (remember to replace `${var.region}` as appropriate):
               
               | Name                                     | ARN                                                                                             |
               |------------------------------------------|-------------------------------------------------------------------------------------------------|
               | AWS Foundational Security Best Practices | `arn:aws:securityhub:${var.region}::standards/aws-foundational-security-best-practices/v/1.0.0` |
               | CIS AWS Foundations Benchmark v1.2.0     | `arn:aws:securityhub:::ruleset/cis-aws-foundations-benchmark/v/1.2.0`                           |
               | CIS AWS Foundations Benchmark v1.4.0     | `arn:aws:securityhub:${var.region}::standards/cis-aws-foundations-benchmark/v/1.4.0`            |
               | NIST SP 800-53 Rev. 5                    | `arn:aws:securityhub:${var.region}::standards/nist-800-53/v/5.0.0`                              |
               | PCI DSS                                  | `arn:aws:securityhub:${var.region}::standards/pci-dss/v/3.2.1`                                  |
        """
        pulumi.set(__self__, "standards_arn", standards_arn)

    @property
    @pulumi.getter(name="standardsArn")
    def standards_arn(self) -> pulumi.Input[str]:
        """
        The ARN of a standard - see below.

        Currently available standards (remember to replace `${var.region}` as appropriate):

        | Name                                     | ARN                                                                                             |
        |------------------------------------------|-------------------------------------------------------------------------------------------------|
        | AWS Foundational Security Best Practices | `arn:aws:securityhub:${var.region}::standards/aws-foundational-security-best-practices/v/1.0.0` |
        | CIS AWS Foundations Benchmark v1.2.0     | `arn:aws:securityhub:::ruleset/cis-aws-foundations-benchmark/v/1.2.0`                           |
        | CIS AWS Foundations Benchmark v1.4.0     | `arn:aws:securityhub:${var.region}::standards/cis-aws-foundations-benchmark/v/1.4.0`            |
        | NIST SP 800-53 Rev. 5                    | `arn:aws:securityhub:${var.region}::standards/nist-800-53/v/5.0.0`                              |
        | PCI DSS                                  | `arn:aws:securityhub:${var.region}::standards/pci-dss/v/3.2.1`                                  |
        """
        return pulumi.get(self, "standards_arn")

    @standards_arn.setter
    def standards_arn(self, value: pulumi.Input[str]):
        pulumi.set(self, "standards_arn", value)


@pulumi.input_type
class _StandardsSubscriptionState:
    def __init__(__self__, *,
                 standards_arn: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering StandardsSubscription resources.
        :param pulumi.Input[str] standards_arn: The ARN of a standard - see below.
               
               Currently available standards (remember to replace `${var.region}` as appropriate):
               
               | Name                                     | ARN                                                                                             |
               |------------------------------------------|-------------------------------------------------------------------------------------------------|
               | AWS Foundational Security Best Practices | `arn:aws:securityhub:${var.region}::standards/aws-foundational-security-best-practices/v/1.0.0` |
               | CIS AWS Foundations Benchmark v1.2.0     | `arn:aws:securityhub:::ruleset/cis-aws-foundations-benchmark/v/1.2.0`                           |
               | CIS AWS Foundations Benchmark v1.4.0     | `arn:aws:securityhub:${var.region}::standards/cis-aws-foundations-benchmark/v/1.4.0`            |
               | NIST SP 800-53 Rev. 5                    | `arn:aws:securityhub:${var.region}::standards/nist-800-53/v/5.0.0`                              |
               | PCI DSS                                  | `arn:aws:securityhub:${var.region}::standards/pci-dss/v/3.2.1`                                  |
        """
        if standards_arn is not None:
            pulumi.set(__self__, "standards_arn", standards_arn)

    @property
    @pulumi.getter(name="standardsArn")
    def standards_arn(self) -> Optional[pulumi.Input[str]]:
        """
        The ARN of a standard - see below.

        Currently available standards (remember to replace `${var.region}` as appropriate):

        | Name                                     | ARN                                                                                             |
        |------------------------------------------|-------------------------------------------------------------------------------------------------|
        | AWS Foundational Security Best Practices | `arn:aws:securityhub:${var.region}::standards/aws-foundational-security-best-practices/v/1.0.0` |
        | CIS AWS Foundations Benchmark v1.2.0     | `arn:aws:securityhub:::ruleset/cis-aws-foundations-benchmark/v/1.2.0`                           |
        | CIS AWS Foundations Benchmark v1.4.0     | `arn:aws:securityhub:${var.region}::standards/cis-aws-foundations-benchmark/v/1.4.0`            |
        | NIST SP 800-53 Rev. 5                    | `arn:aws:securityhub:${var.region}::standards/nist-800-53/v/5.0.0`                              |
        | PCI DSS                                  | `arn:aws:securityhub:${var.region}::standards/pci-dss/v/3.2.1`                                  |
        """
        return pulumi.get(self, "standards_arn")

    @standards_arn.setter
    def standards_arn(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "standards_arn", value)


class StandardsSubscription(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 standards_arn: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Subscribes to a Security Hub standard.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_aws as aws

        example = aws.securityhub.Account("example")
        current = aws.get_region()
        cis = aws.securityhub.StandardsSubscription("cis", standards_arn="arn:aws:securityhub:::ruleset/cis-aws-foundations-benchmark/v/1.2.0",
        opts=pulumi.ResourceOptions(depends_on=[example]))
        pci321 = aws.securityhub.StandardsSubscription("pci321", standards_arn=f"arn:aws:securityhub:{current.name}::standards/pci-dss/v/3.2.1",
        opts=pulumi.ResourceOptions(depends_on=[example]))
        ```

        ## Import

        In TODO v1.5.0 and later, use an `import` block to import Security Hub standards subscriptions using the standards subscription ARN. For exampleterraform import {

         to = aws_securityhub_standards_subscription.cis

         id = "arn:aws:securityhub:eu-west-1:123456789012:subscription/cis-aws-foundations-benchmark/v/1.2.0" } terraform import {

         to = aws_securityhub_standards_subscription.pci_321

         id = "arn:aws:securityhub:eu-west-1:123456789012:subscription/pci-dss/v/3.2.1" } terraform import {

         to = aws_securityhub_standards_subscription.nist_800_53_rev_5

         id = "arn:aws:securityhub:eu-west-1:123456789012:subscription/nist-800-53/v/5.0.0" } Using `TODO import`, import Security Hub standards subscriptions using the standards subscription ARN. For exampleconsole % TODO import aws_securityhub_standards_subscription.cis arn:aws:securityhub:eu-west-1:123456789012:subscription/cis-aws-foundations-benchmark/v/1.2.0 console % TODO import aws_securityhub_standards_subscription.pci_321 arn:aws:securityhub:eu-west-1:123456789012:subscription/pci-dss/v/3.2.1 console % TODO import aws_securityhub_standards_subscription.nist_800_53_rev_5 arn:aws:securityhub:eu-west-1:123456789012:subscription/nist-800-53/v/5.0.0

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] standards_arn: The ARN of a standard - see below.
               
               Currently available standards (remember to replace `${var.region}` as appropriate):
               
               | Name                                     | ARN                                                                                             |
               |------------------------------------------|-------------------------------------------------------------------------------------------------|
               | AWS Foundational Security Best Practices | `arn:aws:securityhub:${var.region}::standards/aws-foundational-security-best-practices/v/1.0.0` |
               | CIS AWS Foundations Benchmark v1.2.0     | `arn:aws:securityhub:::ruleset/cis-aws-foundations-benchmark/v/1.2.0`                           |
               | CIS AWS Foundations Benchmark v1.4.0     | `arn:aws:securityhub:${var.region}::standards/cis-aws-foundations-benchmark/v/1.4.0`            |
               | NIST SP 800-53 Rev. 5                    | `arn:aws:securityhub:${var.region}::standards/nist-800-53/v/5.0.0`                              |
               | PCI DSS                                  | `arn:aws:securityhub:${var.region}::standards/pci-dss/v/3.2.1`                                  |
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: StandardsSubscriptionArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Subscribes to a Security Hub standard.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_aws as aws

        example = aws.securityhub.Account("example")
        current = aws.get_region()
        cis = aws.securityhub.StandardsSubscription("cis", standards_arn="arn:aws:securityhub:::ruleset/cis-aws-foundations-benchmark/v/1.2.0",
        opts=pulumi.ResourceOptions(depends_on=[example]))
        pci321 = aws.securityhub.StandardsSubscription("pci321", standards_arn=f"arn:aws:securityhub:{current.name}::standards/pci-dss/v/3.2.1",
        opts=pulumi.ResourceOptions(depends_on=[example]))
        ```

        ## Import

        In TODO v1.5.0 and later, use an `import` block to import Security Hub standards subscriptions using the standards subscription ARN. For exampleterraform import {

         to = aws_securityhub_standards_subscription.cis

         id = "arn:aws:securityhub:eu-west-1:123456789012:subscription/cis-aws-foundations-benchmark/v/1.2.0" } terraform import {

         to = aws_securityhub_standards_subscription.pci_321

         id = "arn:aws:securityhub:eu-west-1:123456789012:subscription/pci-dss/v/3.2.1" } terraform import {

         to = aws_securityhub_standards_subscription.nist_800_53_rev_5

         id = "arn:aws:securityhub:eu-west-1:123456789012:subscription/nist-800-53/v/5.0.0" } Using `TODO import`, import Security Hub standards subscriptions using the standards subscription ARN. For exampleconsole % TODO import aws_securityhub_standards_subscription.cis arn:aws:securityhub:eu-west-1:123456789012:subscription/cis-aws-foundations-benchmark/v/1.2.0 console % TODO import aws_securityhub_standards_subscription.pci_321 arn:aws:securityhub:eu-west-1:123456789012:subscription/pci-dss/v/3.2.1 console % TODO import aws_securityhub_standards_subscription.nist_800_53_rev_5 arn:aws:securityhub:eu-west-1:123456789012:subscription/nist-800-53/v/5.0.0

        :param str resource_name: The name of the resource.
        :param StandardsSubscriptionArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(StandardsSubscriptionArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 standards_arn: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = StandardsSubscriptionArgs.__new__(StandardsSubscriptionArgs)

            if standards_arn is None and not opts.urn:
                raise TypeError("Missing required property 'standards_arn'")
            __props__.__dict__["standards_arn"] = standards_arn
        super(StandardsSubscription, __self__).__init__(
            'aws:securityhub/standardsSubscription:StandardsSubscription',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            standards_arn: Optional[pulumi.Input[str]] = None) -> 'StandardsSubscription':
        """
        Get an existing StandardsSubscription resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] standards_arn: The ARN of a standard - see below.
               
               Currently available standards (remember to replace `${var.region}` as appropriate):
               
               | Name                                     | ARN                                                                                             |
               |------------------------------------------|-------------------------------------------------------------------------------------------------|
               | AWS Foundational Security Best Practices | `arn:aws:securityhub:${var.region}::standards/aws-foundational-security-best-practices/v/1.0.0` |
               | CIS AWS Foundations Benchmark v1.2.0     | `arn:aws:securityhub:::ruleset/cis-aws-foundations-benchmark/v/1.2.0`                           |
               | CIS AWS Foundations Benchmark v1.4.0     | `arn:aws:securityhub:${var.region}::standards/cis-aws-foundations-benchmark/v/1.4.0`            |
               | NIST SP 800-53 Rev. 5                    | `arn:aws:securityhub:${var.region}::standards/nist-800-53/v/5.0.0`                              |
               | PCI DSS                                  | `arn:aws:securityhub:${var.region}::standards/pci-dss/v/3.2.1`                                  |
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _StandardsSubscriptionState.__new__(_StandardsSubscriptionState)

        __props__.__dict__["standards_arn"] = standards_arn
        return StandardsSubscription(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="standardsArn")
    def standards_arn(self) -> pulumi.Output[str]:
        """
        The ARN of a standard - see below.

        Currently available standards (remember to replace `${var.region}` as appropriate):

        | Name                                     | ARN                                                                                             |
        |------------------------------------------|-------------------------------------------------------------------------------------------------|
        | AWS Foundational Security Best Practices | `arn:aws:securityhub:${var.region}::standards/aws-foundational-security-best-practices/v/1.0.0` |
        | CIS AWS Foundations Benchmark v1.2.0     | `arn:aws:securityhub:::ruleset/cis-aws-foundations-benchmark/v/1.2.0`                           |
        | CIS AWS Foundations Benchmark v1.4.0     | `arn:aws:securityhub:${var.region}::standards/cis-aws-foundations-benchmark/v/1.4.0`            |
        | NIST SP 800-53 Rev. 5                    | `arn:aws:securityhub:${var.region}::standards/nist-800-53/v/5.0.0`                              |
        | PCI DSS                                  | `arn:aws:securityhub:${var.region}::standards/pci-dss/v/3.2.1`                                  |
        """
        return pulumi.get(self, "standards_arn")

