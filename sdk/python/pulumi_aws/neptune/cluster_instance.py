# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class ClusterInstance(pulumi.CustomResource):
    """
    A Cluster Instance Resource defines attributes that are specific to a single instance in a Neptune Cluster.
    
    You can simply add neptune instances and Neptune manages the replication. You can use the [count][1]
    meta-parameter to make multiple instances and join them all to the same Neptune Cluster, or you may specify different Cluster Instance resources with various `instance_class` sizes.
    
    """
    def __init__(__self__, __name__, __opts__=None, apply_immediately=None, auto_minor_version_upgrade=None, availability_zone=None, cluster_identifier=None, engine=None, engine_version=None, identifier=None, identifier_prefix=None, instance_class=None, neptune_parameter_group_name=None, neptune_subnet_group_name=None, port=None, preferred_backup_window=None, preferred_maintenance_window=None, promotion_tier=None, publicly_accessible=None, tags=None):
        """Create a ClusterInstance resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['applyImmediately'] = apply_immediately

        __props__['autoMinorVersionUpgrade'] = auto_minor_version_upgrade

        __props__['availabilityZone'] = availability_zone

        if not cluster_identifier:
            raise TypeError('Missing required property cluster_identifier')
        __props__['clusterIdentifier'] = cluster_identifier

        __props__['engine'] = engine

        __props__['engineVersion'] = engine_version

        __props__['identifier'] = identifier

        __props__['identifierPrefix'] = identifier_prefix

        if not instance_class:
            raise TypeError('Missing required property instance_class')
        __props__['instanceClass'] = instance_class

        __props__['neptuneParameterGroupName'] = neptune_parameter_group_name

        __props__['neptuneSubnetGroupName'] = neptune_subnet_group_name

        __props__['port'] = port

        __props__['preferredBackupWindow'] = preferred_backup_window

        __props__['preferredMaintenanceWindow'] = preferred_maintenance_window

        __props__['promotionTier'] = promotion_tier

        __props__['publiclyAccessible'] = publicly_accessible

        __props__['tags'] = tags

        __props__['address'] = None
        __props__['arn'] = None
        __props__['dbi_resource_id'] = None
        __props__['endpoint'] = None
        __props__['kms_key_arn'] = None
        __props__['storage_encrypted'] = None
        __props__['writer'] = None

        super(ClusterInstance, __self__).__init__(
            'aws:neptune/clusterInstance:ClusterInstance',
            __name__,
            __props__,
            __opts__)

