# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'RepositoryCatalogDataArgs',
]

@pulumi.input_type
class RepositoryCatalogDataArgs:
    def __init__(__self__, *,
                 about_text: Optional[pulumi.Input[str]] = None,
                 architectures: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 logo_image_blob: Optional[pulumi.Input[str]] = None,
                 operating_systems: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 usage_text: Optional[pulumi.Input[str]] = None):
        if about_text is not None:
            pulumi.set(__self__, "about_text", about_text)
        if architectures is not None:
            pulumi.set(__self__, "architectures", architectures)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if logo_image_blob is not None:
            pulumi.set(__self__, "logo_image_blob", logo_image_blob)
        if operating_systems is not None:
            pulumi.set(__self__, "operating_systems", operating_systems)
        if usage_text is not None:
            pulumi.set(__self__, "usage_text", usage_text)

    @property
    @pulumi.getter(name="aboutText")
    def about_text(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "about_text")

    @about_text.setter
    def about_text(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "about_text", value)

    @property
    @pulumi.getter
    def architectures(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        return pulumi.get(self, "architectures")

    @architectures.setter
    def architectures(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "architectures", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="logoImageBlob")
    def logo_image_blob(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "logo_image_blob")

    @logo_image_blob.setter
    def logo_image_blob(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "logo_image_blob", value)

    @property
    @pulumi.getter(name="operatingSystems")
    def operating_systems(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        return pulumi.get(self, "operating_systems")

    @operating_systems.setter
    def operating_systems(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "operating_systems", value)

    @property
    @pulumi.getter(name="usageText")
    def usage_text(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "usage_text")

    @usage_text.setter
    def usage_text(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "usage_text", value)


