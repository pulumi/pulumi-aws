# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetConnectionFilterResult',
    'GetConnectionRouteResult',
    'GetConnectionVgwTelemetryResult',
]

@pulumi.output_type
class GetConnectionFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 values: Sequence[_builtins.str]):
        """
        :param _builtins.str name: Name of the filter field. Valid values can be found in the [EC2 `DescribeVPNConnections` API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnConnections.html).
        :param Sequence[_builtins.str] values: Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Name of the filter field. Valid values can be found in the [EC2 `DescribeVPNConnections` API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnConnections.html).
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        """
        Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
        """
        return pulumi.get(self, "values")


@pulumi.output_type
class GetConnectionRouteResult(dict):
    def __init__(__self__, *,
                 destination_cidr_block: _builtins.str,
                 source: _builtins.str,
                 state: _builtins.str):
        """
        :param _builtins.str state: Current state of the VPN connection.
        """
        pulumi.set(__self__, "destination_cidr_block", destination_cidr_block)
        pulumi.set(__self__, "source", source)
        pulumi.set(__self__, "state", state)

    @_builtins.property
    @pulumi.getter(name="destinationCidrBlock")
    def destination_cidr_block(self) -> _builtins.str:
        return pulumi.get(self, "destination_cidr_block")

    @_builtins.property
    @pulumi.getter
    def source(self) -> _builtins.str:
        return pulumi.get(self, "source")

    @_builtins.property
    @pulumi.getter
    def state(self) -> _builtins.str:
        """
        Current state of the VPN connection.
        """
        return pulumi.get(self, "state")


@pulumi.output_type
class GetConnectionVgwTelemetryResult(dict):
    def __init__(__self__, *,
                 accepted_route_count: _builtins.int,
                 last_status_change: _builtins.str,
                 outside_ip_address: _builtins.str,
                 status: _builtins.str,
                 status_message: _builtins.str):
        pulumi.set(__self__, "accepted_route_count", accepted_route_count)
        pulumi.set(__self__, "last_status_change", last_status_change)
        pulumi.set(__self__, "outside_ip_address", outside_ip_address)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "status_message", status_message)

    @_builtins.property
    @pulumi.getter(name="acceptedRouteCount")
    def accepted_route_count(self) -> _builtins.int:
        return pulumi.get(self, "accepted_route_count")

    @_builtins.property
    @pulumi.getter(name="lastStatusChange")
    def last_status_change(self) -> _builtins.str:
        return pulumi.get(self, "last_status_change")

    @_builtins.property
    @pulumi.getter(name="outsideIpAddress")
    def outside_ip_address(self) -> _builtins.str:
        return pulumi.get(self, "outside_ip_address")

    @_builtins.property
    @pulumi.getter
    def status(self) -> _builtins.str:
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="statusMessage")
    def status_message(self) -> _builtins.str:
        return pulumi.get(self, "status_message")


