# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'PipelineDefinitionParameterObjectArgs',
    'PipelineDefinitionParameterObjectAttributeArgs',
    'PipelineDefinitionParameterValueArgs',
    'PipelineDefinitionPipelineObjectArgs',
    'PipelineDefinitionPipelineObjectFieldArgs',
    'GetPipelineDefinitionParameterValueArgs',
]

@pulumi.input_type
class PipelineDefinitionParameterObjectArgs:
    def __init__(__self__, *,
                 id: pulumi.Input[str],
                 attributes: Optional[pulumi.Input[Sequence[pulumi.Input['PipelineDefinitionParameterObjectAttributeArgs']]]] = None):
        """
        :param pulumi.Input[str] id: ID of the parameter value.
        :param pulumi.Input[Sequence[pulumi.Input['PipelineDefinitionParameterObjectAttributeArgs']]] attributes: Configuration block for attributes of the parameter object. See below
        """
        pulumi.set(__self__, "id", id)
        if attributes is not None:
            pulumi.set(__self__, "attributes", attributes)

    @property
    @pulumi.getter
    def id(self) -> pulumi.Input[str]:
        """
        ID of the parameter value.
        """
        return pulumi.get(self, "id")

    @id.setter
    def id(self, value: pulumi.Input[str]):
        pulumi.set(self, "id", value)

    @property
    @pulumi.getter
    def attributes(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['PipelineDefinitionParameterObjectAttributeArgs']]]]:
        """
        Configuration block for attributes of the parameter object. See below
        """
        return pulumi.get(self, "attributes")

    @attributes.setter
    def attributes(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['PipelineDefinitionParameterObjectAttributeArgs']]]]):
        pulumi.set(self, "attributes", value)


@pulumi.input_type
class PipelineDefinitionParameterObjectAttributeArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 string_value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: Field identifier.
        :param pulumi.Input[str] string_value: Field value, expressed as a String.
        """
        pulumi.set(__self__, "key", key)
        pulumi.set(__self__, "string_value", string_value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        Field identifier.
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter(name="stringValue")
    def string_value(self) -> pulumi.Input[str]:
        """
        Field value, expressed as a String.
        """
        return pulumi.get(self, "string_value")

    @string_value.setter
    def string_value(self, value: pulumi.Input[str]):
        pulumi.set(self, "string_value", value)


@pulumi.input_type
class PipelineDefinitionParameterValueArgs:
    def __init__(__self__, *,
                 id: pulumi.Input[str],
                 string_value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] id: ID of the parameter value.
        :param pulumi.Input[str] string_value: Field value, expressed as a String.
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "string_value", string_value)

    @property
    @pulumi.getter
    def id(self) -> pulumi.Input[str]:
        """
        ID of the parameter value.
        """
        return pulumi.get(self, "id")

    @id.setter
    def id(self, value: pulumi.Input[str]):
        pulumi.set(self, "id", value)

    @property
    @pulumi.getter(name="stringValue")
    def string_value(self) -> pulumi.Input[str]:
        """
        Field value, expressed as a String.
        """
        return pulumi.get(self, "string_value")

    @string_value.setter
    def string_value(self, value: pulumi.Input[str]):
        pulumi.set(self, "string_value", value)


@pulumi.input_type
class PipelineDefinitionPipelineObjectArgs:
    def __init__(__self__, *,
                 id: pulumi.Input[str],
                 name: pulumi.Input[str],
                 fields: Optional[pulumi.Input[Sequence[pulumi.Input['PipelineDefinitionPipelineObjectFieldArgs']]]] = None):
        """
        :param pulumi.Input[str] id: ID of the parameter value.
        :param pulumi.Input[str] name: ARN of the storage connector.
        :param pulumi.Input[Sequence[pulumi.Input['PipelineDefinitionPipelineObjectFieldArgs']]] fields: Configuration block for Key-value pairs that define the properties of the object. See below
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        if fields is not None:
            pulumi.set(__self__, "fields", fields)

    @property
    @pulumi.getter
    def id(self) -> pulumi.Input[str]:
        """
        ID of the parameter value.
        """
        return pulumi.get(self, "id")

    @id.setter
    def id(self, value: pulumi.Input[str]):
        pulumi.set(self, "id", value)

    @property
    @pulumi.getter
    def name(self) -> pulumi.Input[str]:
        """
        ARN of the storage connector.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: pulumi.Input[str]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def fields(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['PipelineDefinitionPipelineObjectFieldArgs']]]]:
        """
        Configuration block for Key-value pairs that define the properties of the object. See below
        """
        return pulumi.get(self, "fields")

    @fields.setter
    def fields(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['PipelineDefinitionPipelineObjectFieldArgs']]]]):
        pulumi.set(self, "fields", value)


@pulumi.input_type
class PipelineDefinitionPipelineObjectFieldArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 ref_value: Optional[pulumi.Input[str]] = None,
                 string_value: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] key: Field identifier.
        :param pulumi.Input[str] ref_value: Field value, expressed as the identifier of another object
        :param pulumi.Input[str] string_value: Field value, expressed as a String.
        """
        pulumi.set(__self__, "key", key)
        if ref_value is not None:
            pulumi.set(__self__, "ref_value", ref_value)
        if string_value is not None:
            pulumi.set(__self__, "string_value", string_value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        Field identifier.
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter(name="refValue")
    def ref_value(self) -> Optional[pulumi.Input[str]]:
        """
        Field value, expressed as the identifier of another object
        """
        return pulumi.get(self, "ref_value")

    @ref_value.setter
    def ref_value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref_value", value)

    @property
    @pulumi.getter(name="stringValue")
    def string_value(self) -> Optional[pulumi.Input[str]]:
        """
        Field value, expressed as a String.
        """
        return pulumi.get(self, "string_value")

    @string_value.setter
    def string_value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "string_value", value)


@pulumi.input_type
class GetPipelineDefinitionParameterValueArgs:
    def __init__(__self__, *,
                 id: str,
                 string_value: str):
        """
        :param str id: ID of the object.
        :param str string_value: Field value, expressed as a String.
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "string_value", string_value)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        ID of the object.
        """
        return pulumi.get(self, "id")

    @id.setter
    def id(self, value: str):
        pulumi.set(self, "id", value)

    @property
    @pulumi.getter(name="stringValue")
    def string_value(self) -> str:
        """
        Field value, expressed as a String.
        """
        return pulumi.get(self, "string_value")

    @string_value.setter
    def string_value(self, value: str):
        pulumi.set(self, "string_value", value)


