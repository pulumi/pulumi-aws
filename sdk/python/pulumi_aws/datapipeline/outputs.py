# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'PipelineDefinitionParameterObject',
    'PipelineDefinitionParameterObjectAttribute',
    'PipelineDefinitionParameterValue',
    'PipelineDefinitionPipelineObject',
    'PipelineDefinitionPipelineObjectField',
    'GetPipelineDefinitionParameterObjectResult',
    'GetPipelineDefinitionParameterObjectAttributeResult',
    'GetPipelineDefinitionParameterValueResult',
    'GetPipelineDefinitionPipelineObjectResult',
    'GetPipelineDefinitionPipelineObjectFieldResult',
]

@pulumi.output_type
class PipelineDefinitionParameterObject(dict):
    def __init__(__self__, *,
                 id: _builtins.str,
                 attributes: Optional[Sequence['outputs.PipelineDefinitionParameterObjectAttribute']] = None):
        """
        :param _builtins.str id: ID of the parameter object.
        :param Sequence['PipelineDefinitionParameterObjectAttributeArgs'] attributes: Configuration block for attributes of the parameter object. See below
        """
        pulumi.set(__self__, "id", id)
        if attributes is not None:
            pulumi.set(__self__, "attributes", attributes)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        ID of the parameter object.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def attributes(self) -> Optional[Sequence['outputs.PipelineDefinitionParameterObjectAttribute']]:
        """
        Configuration block for attributes of the parameter object. See below
        """
        return pulumi.get(self, "attributes")


@pulumi.output_type
class PipelineDefinitionParameterObjectAttribute(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "stringValue":
            suggest = "string_value"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in PipelineDefinitionParameterObjectAttribute. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        PipelineDefinitionParameterObjectAttribute.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        PipelineDefinitionParameterObjectAttribute.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 key: _builtins.str,
                 string_value: _builtins.str):
        """
        :param _builtins.str key: Field identifier.
        :param _builtins.str string_value: Field value, expressed as a String.
        """
        pulumi.set(__self__, "key", key)
        pulumi.set(__self__, "string_value", string_value)

    @_builtins.property
    @pulumi.getter
    def key(self) -> _builtins.str:
        """
        Field identifier.
        """
        return pulumi.get(self, "key")

    @_builtins.property
    @pulumi.getter(name="stringValue")
    def string_value(self) -> _builtins.str:
        """
        Field value, expressed as a String.
        """
        return pulumi.get(self, "string_value")


@pulumi.output_type
class PipelineDefinitionParameterValue(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "stringValue":
            suggest = "string_value"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in PipelineDefinitionParameterValue. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        PipelineDefinitionParameterValue.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        PipelineDefinitionParameterValue.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 id: _builtins.str,
                 string_value: _builtins.str):
        """
        :param _builtins.str id: ID of the parameter value.
        :param _builtins.str string_value: Field value, expressed as a String.
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "string_value", string_value)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        ID of the parameter value.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="stringValue")
    def string_value(self) -> _builtins.str:
        """
        Field value, expressed as a String.
        """
        return pulumi.get(self, "string_value")


@pulumi.output_type
class PipelineDefinitionPipelineObject(dict):
    def __init__(__self__, *,
                 id: _builtins.str,
                 name: _builtins.str,
                 fields: Optional[Sequence['outputs.PipelineDefinitionPipelineObjectField']] = None):
        """
        :param _builtins.str id: ID of the object.
        :param _builtins.str name: ARN of the storage connector.
        :param Sequence['PipelineDefinitionPipelineObjectFieldArgs'] fields: Configuration block for Key-value pairs that define the properties of the object. See below
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        if fields is not None:
            pulumi.set(__self__, "fields", fields)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        ID of the object.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        ARN of the storage connector.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def fields(self) -> Optional[Sequence['outputs.PipelineDefinitionPipelineObjectField']]:
        """
        Configuration block for Key-value pairs that define the properties of the object. See below
        """
        return pulumi.get(self, "fields")


@pulumi.output_type
class PipelineDefinitionPipelineObjectField(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "refValue":
            suggest = "ref_value"
        elif key == "stringValue":
            suggest = "string_value"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in PipelineDefinitionPipelineObjectField. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        PipelineDefinitionPipelineObjectField.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        PipelineDefinitionPipelineObjectField.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 key: _builtins.str,
                 ref_value: Optional[_builtins.str] = None,
                 string_value: Optional[_builtins.str] = None):
        """
        :param _builtins.str key: Field identifier.
        :param _builtins.str ref_value: Field value, expressed as the identifier of another object
        :param _builtins.str string_value: Field value, expressed as a String.
        """
        pulumi.set(__self__, "key", key)
        if ref_value is not None:
            pulumi.set(__self__, "ref_value", ref_value)
        if string_value is not None:
            pulumi.set(__self__, "string_value", string_value)

    @_builtins.property
    @pulumi.getter
    def key(self) -> _builtins.str:
        """
        Field identifier.
        """
        return pulumi.get(self, "key")

    @_builtins.property
    @pulumi.getter(name="refValue")
    def ref_value(self) -> Optional[_builtins.str]:
        """
        Field value, expressed as the identifier of another object
        """
        return pulumi.get(self, "ref_value")

    @_builtins.property
    @pulumi.getter(name="stringValue")
    def string_value(self) -> Optional[_builtins.str]:
        """
        Field value, expressed as a String.
        """
        return pulumi.get(self, "string_value")


@pulumi.output_type
class GetPipelineDefinitionParameterObjectResult(dict):
    def __init__(__self__, *,
                 attributes: Sequence['outputs.GetPipelineDefinitionParameterObjectAttributeResult'],
                 id: _builtins.str):
        """
        :param _builtins.str id: ID of the object.
        """
        pulumi.set(__self__, "attributes", attributes)
        pulumi.set(__self__, "id", id)

    @_builtins.property
    @pulumi.getter
    def attributes(self) -> Sequence['outputs.GetPipelineDefinitionParameterObjectAttributeResult']:
        return pulumi.get(self, "attributes")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        ID of the object.
        """
        return pulumi.get(self, "id")


@pulumi.output_type
class GetPipelineDefinitionParameterObjectAttributeResult(dict):
    def __init__(__self__, *,
                 key: _builtins.str,
                 string_value: _builtins.str):
        """
        :param _builtins.str key: Field identifier.
        :param _builtins.str string_value: Field value, expressed as a String.
        """
        pulumi.set(__self__, "key", key)
        pulumi.set(__self__, "string_value", string_value)

    @_builtins.property
    @pulumi.getter
    def key(self) -> _builtins.str:
        """
        Field identifier.
        """
        return pulumi.get(self, "key")

    @_builtins.property
    @pulumi.getter(name="stringValue")
    def string_value(self) -> _builtins.str:
        """
        Field value, expressed as a String.
        """
        return pulumi.get(self, "string_value")


@pulumi.output_type
class GetPipelineDefinitionParameterValueResult(dict):
    def __init__(__self__, *,
                 id: _builtins.str,
                 string_value: _builtins.str):
        """
        :param _builtins.str id: ID of the object.
        :param _builtins.str string_value: Field value, expressed as a String.
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "string_value", string_value)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        ID of the object.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="stringValue")
    def string_value(self) -> _builtins.str:
        """
        Field value, expressed as a String.
        """
        return pulumi.get(self, "string_value")


@pulumi.output_type
class GetPipelineDefinitionPipelineObjectResult(dict):
    def __init__(__self__, *,
                 id: _builtins.str,
                 name: _builtins.str,
                 fields: Optional[Sequence['outputs.GetPipelineDefinitionPipelineObjectFieldResult']] = None):
        """
        :param _builtins.str id: ID of the object.
        :param _builtins.str name: ARN of the storage connector.
        :param Sequence['GetPipelineDefinitionPipelineObjectFieldArgs'] fields: Key-value pairs that define the properties of the object. See below
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        if fields is not None:
            pulumi.set(__self__, "fields", fields)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        ID of the object.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        ARN of the storage connector.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def fields(self) -> Optional[Sequence['outputs.GetPipelineDefinitionPipelineObjectFieldResult']]:
        """
        Key-value pairs that define the properties of the object. See below
        """
        return pulumi.get(self, "fields")


@pulumi.output_type
class GetPipelineDefinitionPipelineObjectFieldResult(dict):
    def __init__(__self__, *,
                 key: _builtins.str,
                 ref_value: _builtins.str,
                 string_value: _builtins.str):
        """
        :param _builtins.str key: Field identifier.
        :param _builtins.str ref_value: Field value, expressed as the identifier of another object
        :param _builtins.str string_value: Field value, expressed as a String.
        """
        pulumi.set(__self__, "key", key)
        pulumi.set(__self__, "ref_value", ref_value)
        pulumi.set(__self__, "string_value", string_value)

    @_builtins.property
    @pulumi.getter
    def key(self) -> _builtins.str:
        """
        Field identifier.
        """
        return pulumi.get(self, "key")

    @_builtins.property
    @pulumi.getter(name="refValue")
    def ref_value(self) -> _builtins.str:
        """
        Field value, expressed as the identifier of another object
        """
        return pulumi.get(self, "ref_value")

    @_builtins.property
    @pulumi.getter(name="stringValue")
    def string_value(self) -> _builtins.str:
        """
        Field value, expressed as a String.
        """
        return pulumi.get(self, "string_value")


