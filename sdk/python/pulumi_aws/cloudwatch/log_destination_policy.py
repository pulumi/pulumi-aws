# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime

class LogDestinationPolicy(pulumi.CustomResource):
    """
    Provides a CloudWatch Logs destination policy resource.
    """
    def __init__(__self__, __name__, __opts__=None, access_policy=None, destination_name=None):
        """Create a LogDestinationPolicy resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not access_policy:
            raise TypeError('Missing required property access_policy')
        elif not isinstance(access_policy, basestring):
            raise TypeError('Expected property access_policy to be a basestring')
        __self__.access_policy = access_policy
        """
        The policy document. This is a JSON formatted string.
        """
        __props__['accessPolicy'] = access_policy

        if not destination_name:
            raise TypeError('Missing required property destination_name')
        elif not isinstance(destination_name, basestring):
            raise TypeError('Expected property destination_name to be a basestring')
        __self__.destination_name = destination_name
        """
        A name for the subscription filter
        """
        __props__['destinationName'] = destination_name

        super(LogDestinationPolicy, __self__).__init__(
            'aws:cloudwatch/logDestinationPolicy:LogDestinationPolicy',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'accessPolicy' in outs:
            self.access_policy = outs['accessPolicy']
        if 'destinationName' in outs:
            self.destination_name = outs['destinationName']
