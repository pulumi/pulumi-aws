# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import pulumi
import pulumi.runtime
from .. import utilities, tables

class Attachment(pulumi.CustomResource):
    alb_target_group_arn: pulumi.Output[str]
    """
    The ARN of an ALB Target Group.
    """
    autoscaling_group_name: pulumi.Output[str]
    """
    Name of ASG to associate with the ELB.
    """
    elb: pulumi.Output[str]
    """
    The name of the ELB.
    """
    def __init__(__self__, __name__, __opts__=None, alb_target_group_arn=None, autoscaling_group_name=None, elb=None):
        """
        Provides an AutoScaling Attachment resource.
        
        > **NOTE on AutoScaling Groups and ASG Attachments:** Terraform currently provides
        both a standalone ASG Attachment resource (describing an ASG attached to
        an ELB), and an AutoScaling Group resource with
        `load_balancers` defined in-line. At this time you cannot use an ASG with in-line
        load balancers in conjunction with an ASG Attachment resource. Doing so will cause a
        conflict and will overwrite attachments.
        
        
        :param str __name__: The name of the resource.
        :param pulumi.ResourceOptions __opts__: Options for the resource.
        :param pulumi.Input[str] alb_target_group_arn: The ARN of an ALB Target Group.
        :param pulumi.Input[str] autoscaling_group_name: Name of ASG to associate with the ELB.
        :param pulumi.Input[str] elb: The name of the ELB.
        """
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['alb_target_group_arn'] = alb_target_group_arn

        if not autoscaling_group_name:
            raise TypeError('Missing required property autoscaling_group_name')
        __props__['autoscaling_group_name'] = autoscaling_group_name

        __props__['elb'] = elb

        super(Attachment, __self__).__init__(
            'aws:autoscaling/attachment:Attachment',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

