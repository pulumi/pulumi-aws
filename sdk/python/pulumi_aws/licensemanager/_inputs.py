# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetLicenseGrantsFilterArgs',
    'GetReceivedLicensesFilterArgs',
]

@pulumi.input_type
class GetLicenseGrantsFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str]):
        """
        :param str name: Name of the field to filter by, as defined by
               [the underlying AWS API](https://docs.aws.amazon.com/license-manager/latest/APIReference/API_ListReceivedGrants.html#API_ListReceivedGrants_RequestSyntax).
               For example, if filtering using `ProductSKU`, use:
               
               ```typescript
               import * as pulumi from "@pulumi/pulumi";
               import * as aws from "@pulumi/aws";
               
               const selected = aws.licensemanager.getLicenseGrants({
                   filters: [{
                       name: "ProductSKU",
                       values: [""],
                   }],
               });
               ```
               ```python
               import pulumi
               import pulumi_aws as aws
               
               selected = aws.licensemanager.get_license_grants(filters=[aws.licensemanager.GetLicenseGrantsFilterArgs(
                   name="ProductSKU",
                   values=[""],
               )])
               ```
               ```csharp
               using System.Collections.Generic;
               using System.Linq;
               using Pulumi;
               using Aws = Pulumi.Aws;
               
               return await Deployment.RunAsync(() => 
               {
                   var selected = Aws.LicenseManager.GetLicenseGrants.Invoke(new()
                   {
                       Filters = new[]
                       {
                           new Aws.LicenseManager.Inputs.GetLicenseGrantsFilterInputArgs
                           {
                               Name = "ProductSKU",
                               Values = new[]
                               {
                                   "",
                               },
                           },
                       },
                   });
               
               });
               ```
               ```go
               package main
               
               import (
               	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/licensemanager"
               	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
               )
               
               func main() {
               	pulumi.Run(func(ctx *pulumi.Context) error {
               		_, err := licensemanager.GetLicenseGrants(ctx, &licensemanager.GetLicenseGrantsArgs{
               			Filters: []licensemanager.GetLicenseGrantsFilter{
               				{
               					Name: "ProductSKU",
               					Values: []string{
               						"",
               					},
               				},
               			},
               		}, nil)
               		if err != nil {
               			return err
               		}
               		return nil
               	})
               }
               ```
               ```java
               package generated_program;
               
               import com.pulumi.Context;
               import com.pulumi.Pulumi;
               import com.pulumi.core.Output;
               import com.pulumi.aws.licensemanager.LicensemanagerFunctions;
               import com.pulumi.aws.licensemanager.inputs.GetLicenseGrantsArgs;
               import java.util.List;
               import java.util.ArrayList;
               import java.util.Map;
               import java.io.File;
               import java.nio.file.Files;
               import java.nio.file.Paths;
               
               public class App {
                   public static void main(String[] args) {
                       Pulumi.run(App::stack);
                   }
               
                   public static void stack(Context ctx) {
                       final var selected = LicensemanagerFunctions.getLicenseGrants(GetLicenseGrantsArgs.builder()
                           .filters(GetLicenseGrantsFilterArgs.builder()
                               .name("ProductSKU")
                               .values("")
                               .build())
                           .build());
               
                   }
               }
               ```
               ```yaml
               variables:
                 selected:
                   fn::invoke:
                     Function: aws:licensemanager:getLicenseGrants
                     Arguments:
                       filters:
                         - name: ProductSKU
                           values:
                             -
               ```
        :param Sequence[str] values: Set of values that are accepted for the given field.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Name of the field to filter by, as defined by
        [the underlying AWS API](https://docs.aws.amazon.com/license-manager/latest/APIReference/API_ListReceivedGrants.html#API_ListReceivedGrants_RequestSyntax).
        For example, if filtering using `ProductSKU`, use:

        ```typescript
        import * as pulumi from "@pulumi/pulumi";
        import * as aws from "@pulumi/aws";

        const selected = aws.licensemanager.getLicenseGrants({
            filters: [{
                name: "ProductSKU",
                values: [""],
            }],
        });
        ```
        ```python
        import pulumi
        import pulumi_aws as aws

        selected = aws.licensemanager.get_license_grants(filters=[aws.licensemanager.GetLicenseGrantsFilterArgs(
            name="ProductSKU",
            values=[""],
        )])
        ```
        ```csharp
        using System.Collections.Generic;
        using System.Linq;
        using Pulumi;
        using Aws = Pulumi.Aws;

        return await Deployment.RunAsync(() => 
        {
            var selected = Aws.LicenseManager.GetLicenseGrants.Invoke(new()
            {
                Filters = new[]
                {
                    new Aws.LicenseManager.Inputs.GetLicenseGrantsFilterInputArgs
                    {
                        Name = "ProductSKU",
                        Values = new[]
                        {
                            "",
                        },
                    },
                },
            });

        });
        ```
        ```go
        package main

        import (
        	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/licensemanager"
        	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        )

        func main() {
        	pulumi.Run(func(ctx *pulumi.Context) error {
        		_, err := licensemanager.GetLicenseGrants(ctx, &licensemanager.GetLicenseGrantsArgs{
        			Filters: []licensemanager.GetLicenseGrantsFilter{
        				{
        					Name: "ProductSKU",
        					Values: []string{
        						"",
        					},
        				},
        			},
        		}, nil)
        		if err != nil {
        			return err
        		}
        		return nil
        	})
        }
        ```
        ```java
        package generated_program;

        import com.pulumi.Context;
        import com.pulumi.Pulumi;
        import com.pulumi.core.Output;
        import com.pulumi.aws.licensemanager.LicensemanagerFunctions;
        import com.pulumi.aws.licensemanager.inputs.GetLicenseGrantsArgs;
        import java.util.List;
        import java.util.ArrayList;
        import java.util.Map;
        import java.io.File;
        import java.nio.file.Files;
        import java.nio.file.Paths;

        public class App {
            public static void main(String[] args) {
                Pulumi.run(App::stack);
            }

            public static void stack(Context ctx) {
                final var selected = LicensemanagerFunctions.getLicenseGrants(GetLicenseGrantsArgs.builder()
                    .filters(GetLicenseGrantsFilterArgs.builder()
                        .name("ProductSKU")
                        .values("")
                        .build())
                    .build());

            }
        }
        ```
        ```yaml
        variables:
          selected:
            fn::invoke:
              Function: aws:licensemanager:getLicenseGrants
              Arguments:
                filters:
                  - name: ProductSKU
                    values:
                      -
        ```
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: str):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        """
        Set of values that are accepted for the given field.
        """
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        pulumi.set(self, "values", value)


@pulumi.input_type
class GetReceivedLicensesFilterArgs:
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str]):
        """
        :param str name: Name of the field to filter by, as defined by
               [the underlying AWS API](https://docs.aws.amazon.com/license-manager/latest/APIReference/API_ListReceivedLicenses.html#API_ListReceivedLicenses_RequestSyntax).
               For example, if filtering using `ProductSKU`, use:
               
               ```typescript
               import * as pulumi from "@pulumi/pulumi";
               import * as aws from "@pulumi/aws";
               
               const selected = aws.licensemanager.getReceivedLicenses({
                   filters: [{
                       name: "ProductSKU",
                       values: [""],
                   }],
               });
               ```
               ```python
               import pulumi
               import pulumi_aws as aws
               
               selected = aws.licensemanager.get_received_licenses(filters=[aws.licensemanager.GetReceivedLicensesFilterArgs(
                   name="ProductSKU",
                   values=[""],
               )])
               ```
               ```csharp
               using System.Collections.Generic;
               using System.Linq;
               using Pulumi;
               using Aws = Pulumi.Aws;
               
               return await Deployment.RunAsync(() => 
               {
                   var selected = Aws.LicenseManager.GetReceivedLicenses.Invoke(new()
                   {
                       Filters = new[]
                       {
                           new Aws.LicenseManager.Inputs.GetReceivedLicensesFilterInputArgs
                           {
                               Name = "ProductSKU",
                               Values = new[]
                               {
                                   "",
                               },
                           },
                       },
                   });
               
               });
               ```
               ```go
               package main
               
               import (
               	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/licensemanager"
               	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
               )
               
               func main() {
               	pulumi.Run(func(ctx *pulumi.Context) error {
               		_, err := licensemanager.GetReceivedLicenses(ctx, &licensemanager.GetReceivedLicensesArgs{
               			Filters: []licensemanager.GetReceivedLicensesFilter{
               				{
               					Name: "ProductSKU",
               					Values: []string{
               						"",
               					},
               				},
               			},
               		}, nil)
               		if err != nil {
               			return err
               		}
               		return nil
               	})
               }
               ```
               ```java
               package generated_program;
               
               import com.pulumi.Context;
               import com.pulumi.Pulumi;
               import com.pulumi.core.Output;
               import com.pulumi.aws.licensemanager.LicensemanagerFunctions;
               import com.pulumi.aws.licensemanager.inputs.GetReceivedLicensesArgs;
               import java.util.List;
               import java.util.ArrayList;
               import java.util.Map;
               import java.io.File;
               import java.nio.file.Files;
               import java.nio.file.Paths;
               
               public class App {
                   public static void main(String[] args) {
                       Pulumi.run(App::stack);
                   }
               
                   public static void stack(Context ctx) {
                       final var selected = LicensemanagerFunctions.getReceivedLicenses(GetReceivedLicensesArgs.builder()
                           .filters(GetReceivedLicensesFilterArgs.builder()
                               .name("ProductSKU")
                               .values("")
                               .build())
                           .build());
               
                   }
               }
               ```
               ```yaml
               variables:
                 selected:
                   fn::invoke:
                     Function: aws:licensemanager:getReceivedLicenses
                     Arguments:
                       filters:
                         - name: ProductSKU
                           values:
                             -
               ```
        :param Sequence[str] values: Set of values that are accepted for the given field.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Name of the field to filter by, as defined by
        [the underlying AWS API](https://docs.aws.amazon.com/license-manager/latest/APIReference/API_ListReceivedLicenses.html#API_ListReceivedLicenses_RequestSyntax).
        For example, if filtering using `ProductSKU`, use:

        ```typescript
        import * as pulumi from "@pulumi/pulumi";
        import * as aws from "@pulumi/aws";

        const selected = aws.licensemanager.getReceivedLicenses({
            filters: [{
                name: "ProductSKU",
                values: [""],
            }],
        });
        ```
        ```python
        import pulumi
        import pulumi_aws as aws

        selected = aws.licensemanager.get_received_licenses(filters=[aws.licensemanager.GetReceivedLicensesFilterArgs(
            name="ProductSKU",
            values=[""],
        )])
        ```
        ```csharp
        using System.Collections.Generic;
        using System.Linq;
        using Pulumi;
        using Aws = Pulumi.Aws;

        return await Deployment.RunAsync(() => 
        {
            var selected = Aws.LicenseManager.GetReceivedLicenses.Invoke(new()
            {
                Filters = new[]
                {
                    new Aws.LicenseManager.Inputs.GetReceivedLicensesFilterInputArgs
                    {
                        Name = "ProductSKU",
                        Values = new[]
                        {
                            "",
                        },
                    },
                },
            });

        });
        ```
        ```go
        package main

        import (
        	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/licensemanager"
        	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        )

        func main() {
        	pulumi.Run(func(ctx *pulumi.Context) error {
        		_, err := licensemanager.GetReceivedLicenses(ctx, &licensemanager.GetReceivedLicensesArgs{
        			Filters: []licensemanager.GetReceivedLicensesFilter{
        				{
        					Name: "ProductSKU",
        					Values: []string{
        						"",
        					},
        				},
        			},
        		}, nil)
        		if err != nil {
        			return err
        		}
        		return nil
        	})
        }
        ```
        ```java
        package generated_program;

        import com.pulumi.Context;
        import com.pulumi.Pulumi;
        import com.pulumi.core.Output;
        import com.pulumi.aws.licensemanager.LicensemanagerFunctions;
        import com.pulumi.aws.licensemanager.inputs.GetReceivedLicensesArgs;
        import java.util.List;
        import java.util.ArrayList;
        import java.util.Map;
        import java.io.File;
        import java.nio.file.Files;
        import java.nio.file.Paths;

        public class App {
            public static void main(String[] args) {
                Pulumi.run(App::stack);
            }

            public static void stack(Context ctx) {
                final var selected = LicensemanagerFunctions.getReceivedLicenses(GetReceivedLicensesArgs.builder()
                    .filters(GetReceivedLicensesFilterArgs.builder()
                        .name("ProductSKU")
                        .values("")
                        .build())
                    .build());

            }
        }
        ```
        ```yaml
        variables:
          selected:
            fn::invoke:
              Function: aws:licensemanager:getReceivedLicenses
              Arguments:
                filters:
                  - name: ProductSKU
                    values:
                      -
        ```
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: str):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        """
        Set of values that are accepted for the given field.
        """
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[str]):
        pulumi.set(self, "values", value)


