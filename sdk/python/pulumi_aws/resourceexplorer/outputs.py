# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'IndexTimeouts',
    'ViewFilters',
    'ViewIncludedProperty',
]

@pulumi.output_type
class IndexTimeouts(dict):
    def __init__(__self__, *,
                 create: Optional[str] = None,
                 delete: Optional[str] = None,
                 update: Optional[str] = None):
        if create is not None:
            pulumi.set(__self__, "create", create)
        if delete is not None:
            pulumi.set(__self__, "delete", delete)
        if update is not None:
            pulumi.set(__self__, "update", update)

    @property
    @pulumi.getter
    def create(self) -> Optional[str]:
        return pulumi.get(self, "create")

    @property
    @pulumi.getter
    def delete(self) -> Optional[str]:
        return pulumi.get(self, "delete")

    @property
    @pulumi.getter
    def update(self) -> Optional[str]:
        return pulumi.get(self, "update")


@pulumi.output_type
class ViewFilters(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "filterString":
            suggest = "filter_string"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ViewFilters. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ViewFilters.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ViewFilters.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 filter_string: str):
        """
        :param str filter_string: The string that contains the search keywords, prefixes, and operators to control the results that can be returned by a search operation. For more details, see [Search query syntax](https://docs.aws.amazon.com/resource-explorer/latest/userguide/using-search-query-syntax.html).
        """
        pulumi.set(__self__, "filter_string", filter_string)

    @property
    @pulumi.getter(name="filterString")
    def filter_string(self) -> str:
        """
        The string that contains the search keywords, prefixes, and operators to control the results that can be returned by a search operation. For more details, see [Search query syntax](https://docs.aws.amazon.com/resource-explorer/latest/userguide/using-search-query-syntax.html).
        """
        return pulumi.get(self, "filter_string")


@pulumi.output_type
class ViewIncludedProperty(dict):
    def __init__(__self__, *,
                 name: str):
        """
        :param str name: The name of the property that is included in this view. Valid values: `tags`.
        """
        pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the property that is included in this view. Valid values: `tags`.
        """
        return pulumi.get(self, "name")


