# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables

class Group(pulumi.CustomResource):
    arn: pulumi.Output[str]
    """
    The ARN assigned by AWS for this resource group.
    """
    description: pulumi.Output[str]
    """
    A description of the resource group.
    """
    name: pulumi.Output[str]
    """
    The resource group's name. A resource group name can have a maximum of 127 characters, including letters, numbers, hyphens, dots, and underscores. The name cannot start with `AWS` or `aws`.
    """
    resource_query: pulumi.Output[dict]
    """
    A `resource_query` block. Resource queries are documented below.

      * `query` (`str`) - The resource query as a JSON string.
      * `type` (`str`) - The type of the resource query. Defaults to `TAG_FILTERS_1_0`. 
    """
    tags: pulumi.Output[dict]
    """
    Key-value map of resource tags
    """
    def __init__(__self__, resource_name, opts=None, description=None, name=None, resource_query=None, tags=None, __props__=None, __name__=None, __opts__=None):
        """
        Provides a Resource Group.

        ## Example Usage



        ```python
        import pulumi
        import pulumi_aws as aws

        test = aws.resourcegroups.Group("test", resource_query={
            "query": \"\"\"{
          "ResourceTypeFilters": [
            "AWS::EC2::Instance"
          ],
          "TagFilters": [
            {
              "Key": "Stage",
              "Values": ["Test"]
            }
          ]
        }

        \"\"\",
        })
        ```


        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description: A description of the resource group.
        :param pulumi.Input[str] name: The resource group's name. A resource group name can have a maximum of 127 characters, including letters, numbers, hyphens, dots, and underscores. The name cannot start with `AWS` or `aws`.
        :param pulumi.Input[dict] resource_query: A `resource_query` block. Resource queries are documented below.
        :param pulumi.Input[dict] tags: Key-value map of resource tags

        The **resource_query** object supports the following:

          * `query` (`pulumi.Input[str]`) - The resource query as a JSON string.
          * `type` (`pulumi.Input[str]`) - The type of the resource query. Defaults to `TAG_FILTERS_1_0`. 
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['description'] = description
            __props__['name'] = name
            if resource_query is None:
                raise TypeError("Missing required property 'resource_query'")
            __props__['resource_query'] = resource_query
            __props__['tags'] = tags
            __props__['arn'] = None
        super(Group, __self__).__init__(
            'aws:resourcegroups/group:Group',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, arn=None, description=None, name=None, resource_query=None, tags=None):
        """
        Get an existing Group resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] arn: The ARN assigned by AWS for this resource group.
        :param pulumi.Input[str] description: A description of the resource group.
        :param pulumi.Input[str] name: The resource group's name. A resource group name can have a maximum of 127 characters, including letters, numbers, hyphens, dots, and underscores. The name cannot start with `AWS` or `aws`.
        :param pulumi.Input[dict] resource_query: A `resource_query` block. Resource queries are documented below.
        :param pulumi.Input[dict] tags: Key-value map of resource tags

        The **resource_query** object supports the following:

          * `query` (`pulumi.Input[str]`) - The resource query as a JSON string.
          * `type` (`pulumi.Input[str]`) - The type of the resource query. Defaults to `TAG_FILTERS_1_0`. 
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["arn"] = arn
        __props__["description"] = description
        __props__["name"] = name
        __props__["resource_query"] = resource_query
        __props__["tags"] = tags
        return Group(resource_name, opts=opts, __props__=__props__)
    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

