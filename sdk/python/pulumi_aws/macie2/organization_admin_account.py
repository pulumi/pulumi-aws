# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['OrganizationAdminAccountArgs', 'OrganizationAdminAccount']

@pulumi.input_type
class OrganizationAdminAccountArgs:
    def __init__(__self__, *,
                 admin_account_id: pulumi.Input[str]):
        """
        The set of arguments for constructing a OrganizationAdminAccount resource.
        :param pulumi.Input[str] admin_account_id: The AWS account ID for the account to designate as the delegated Amazon Macie administrator account for the organization.
        """
        pulumi.set(__self__, "admin_account_id", admin_account_id)

    @property
    @pulumi.getter(name="adminAccountId")
    def admin_account_id(self) -> pulumi.Input[str]:
        """
        The AWS account ID for the account to designate as the delegated Amazon Macie administrator account for the organization.
        """
        return pulumi.get(self, "admin_account_id")

    @admin_account_id.setter
    def admin_account_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "admin_account_id", value)


@pulumi.input_type
class _OrganizationAdminAccountState:
    def __init__(__self__, *,
                 admin_account_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering OrganizationAdminAccount resources.
        :param pulumi.Input[str] admin_account_id: The AWS account ID for the account to designate as the delegated Amazon Macie administrator account for the organization.
        """
        if admin_account_id is not None:
            pulumi.set(__self__, "admin_account_id", admin_account_id)

    @property
    @pulumi.getter(name="adminAccountId")
    def admin_account_id(self) -> Optional[pulumi.Input[str]]:
        """
        The AWS account ID for the account to designate as the delegated Amazon Macie administrator account for the organization.
        """
        return pulumi.get(self, "admin_account_id")

    @admin_account_id.setter
    def admin_account_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "admin_account_id", value)


class OrganizationAdminAccount(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 admin_account_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to manage an [Amazon Macie Organization Admin Account](https://docs.aws.amazon.com/macie/latest/APIReference/admin.html).

        ## Example Usage

        ```python
        import pulumi
        import pulumi_aws as aws

        example = aws.macie2.Account("example")
        test = aws.macie2.OrganizationAdminAccount("test", admin_account_id="ID OF THE ADMIN ACCOUNT",
        opts=pulumi.ResourceOptions(depends_on=[aws_macie2_account["test"]]))
        ```

        ## Import

        `aws_macie2_organization_admin_account` can be imported using the id, e.g.

        ```sh
         $ pulumi import aws:macie2/organizationAdminAccount:OrganizationAdminAccount example abcd1
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] admin_account_id: The AWS account ID for the account to designate as the delegated Amazon Macie administrator account for the organization.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: OrganizationAdminAccountArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to manage an [Amazon Macie Organization Admin Account](https://docs.aws.amazon.com/macie/latest/APIReference/admin.html).

        ## Example Usage

        ```python
        import pulumi
        import pulumi_aws as aws

        example = aws.macie2.Account("example")
        test = aws.macie2.OrganizationAdminAccount("test", admin_account_id="ID OF THE ADMIN ACCOUNT",
        opts=pulumi.ResourceOptions(depends_on=[aws_macie2_account["test"]]))
        ```

        ## Import

        `aws_macie2_organization_admin_account` can be imported using the id, e.g.

        ```sh
         $ pulumi import aws:macie2/organizationAdminAccount:OrganizationAdminAccount example abcd1
        ```

        :param str resource_name: The name of the resource.
        :param OrganizationAdminAccountArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(OrganizationAdminAccountArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 admin_account_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = OrganizationAdminAccountArgs.__new__(OrganizationAdminAccountArgs)

            if admin_account_id is None and not opts.urn:
                raise TypeError("Missing required property 'admin_account_id'")
            __props__.__dict__["admin_account_id"] = admin_account_id
        super(OrganizationAdminAccount, __self__).__init__(
            'aws:macie2/organizationAdminAccount:OrganizationAdminAccount',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            admin_account_id: Optional[pulumi.Input[str]] = None) -> 'OrganizationAdminAccount':
        """
        Get an existing OrganizationAdminAccount resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] admin_account_id: The AWS account ID for the account to designate as the delegated Amazon Macie administrator account for the organization.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _OrganizationAdminAccountState.__new__(_OrganizationAdminAccountState)

        __props__.__dict__["admin_account_id"] = admin_account_id
        return OrganizationAdminAccount(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="adminAccountId")
    def admin_account_id(self) -> pulumi.Output[str]:
        """
        The AWS account ID for the account to designate as the delegated Amazon Macie administrator account for the organization.
        """
        return pulumi.get(self, "admin_account_id")

