# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class Integration(pulumi.CustomResource):
    """
    Provides an HTTP Method Integration for an API Gateway Integration.
    """
    def __init__(__self__, __name__, __opts__=None, cache_key_parameters=None, cache_namespace=None, connection_id=None, connection_type=None, content_handling=None, credentials=None, http_method=None, integration_http_method=None, passthrough_behavior=None, request_parameters=None, request_parameters_in_json=None, request_templates=None, resource_id=None, rest_api=None, timeout_milliseconds=None, type=None, uri=None):
        """Create a Integration resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['cacheKeyParameters'] = cache_key_parameters

        __props__['cacheNamespace'] = cache_namespace

        __props__['connectionId'] = connection_id

        __props__['connectionType'] = connection_type

        __props__['contentHandling'] = content_handling

        __props__['credentials'] = credentials

        if not http_method:
            raise TypeError('Missing required property http_method')
        __props__['httpMethod'] = http_method

        __props__['integrationHttpMethod'] = integration_http_method

        __props__['passthroughBehavior'] = passthrough_behavior

        __props__['requestParameters'] = request_parameters

        __props__['requestParametersInJson'] = request_parameters_in_json

        __props__['requestTemplates'] = request_templates

        if not resource_id:
            raise TypeError('Missing required property resource_id')
        __props__['resourceId'] = resource_id

        if not rest_api:
            raise TypeError('Missing required property rest_api')
        __props__['restApi'] = rest_api

        __props__['timeoutMilliseconds'] = timeout_milliseconds

        if not type:
            raise TypeError('Missing required property type')
        __props__['type'] = type

        __props__['uri'] = uri

        super(Integration, __self__).__init__(
            'aws:apigateway/integration:Integration',
            __name__,
            __props__,
            __opts__)

