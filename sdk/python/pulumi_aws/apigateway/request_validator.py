# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime

class RequestValidator(pulumi.CustomResource):
    def __init__(__self__, __name__, __opts__=None, name=None, rest_api=None, validate_request_body=None, validate_request_parameters=None):
        """Create a RequestValidator resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if name and not isinstance(name, basestring):
            raise TypeError('Expected property name to be a basestring')
        __self__.name = name
        __props__['name'] = name

        if not rest_api:
            raise TypeError('Missing required property rest_api')
        elif not isinstance(rest_api, basestring):
            raise TypeError('Expected property rest_api to be a basestring')
        __self__.rest_api = rest_api
        __props__['restApi'] = rest_api

        if validate_request_body and not isinstance(validate_request_body, bool):
            raise TypeError('Expected property validate_request_body to be a bool')
        __self__.validate_request_body = validate_request_body
        __props__['validateRequestBody'] = validate_request_body

        if validate_request_parameters and not isinstance(validate_request_parameters, bool):
            raise TypeError('Expected property validate_request_parameters to be a bool')
        __self__.validate_request_parameters = validate_request_parameters
        __props__['validateRequestParameters'] = validate_request_parameters

        super(RequestValidator, __self__).__init__(
            'aws:apigateway/requestValidator:RequestValidator',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'name' in outs:
            self.name = outs['name']
        if 'restApi' in outs:
            self.rest_api = outs['restApi']
        if 'validateRequestBody' in outs:
            self.validate_request_body = outs['validateRequestBody']
        if 'validateRequestParameters' in outs:
            self.validate_request_parameters = outs['validateRequestParameters']
