# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import pulumi
import pulumi.runtime
from .. import utilities, tables

class Response(pulumi.CustomResource):
    response_parameters: pulumi.Output[dict]
    """
    A map specifying the templates used to transform the response body.
    """
    response_templates: pulumi.Output[dict]
    """
    A map specifying the parameters (paths, query strings and headers) of the Gateway Response.
    """
    response_type: pulumi.Output[str]
    """
    The response type of the associated GatewayResponse.
    """
    rest_api_id: pulumi.Output[str]
    """
    The string identifier of the associated REST API.
    """
    status_code: pulumi.Output[str]
    """
    The HTTP status code of the Gateway Response.
    """
    def __init__(__self__, __name__, __opts__=None, response_parameters=None, response_templates=None, response_type=None, rest_api_id=None, status_code=None):
        """
        Provides an API Gateway Gateway Response for a REST API Gateway.
        
        
        :param str __name__: The name of the resource.
        :param pulumi.ResourceOptions __opts__: Options for the resource.
        :param pulumi.Input[dict] response_parameters: A map specifying the templates used to transform the response body.
        :param pulumi.Input[dict] response_templates: A map specifying the parameters (paths, query strings and headers) of the Gateway Response.
        :param pulumi.Input[str] response_type: The response type of the associated GatewayResponse.
        :param pulumi.Input[str] rest_api_id: The string identifier of the associated REST API.
        :param pulumi.Input[str] status_code: The HTTP status code of the Gateway Response.
        """
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['response_parameters'] = response_parameters

        __props__['response_templates'] = response_templates

        if not response_type:
            raise TypeError('Missing required property response_type')
        __props__['response_type'] = response_type

        if not rest_api_id:
            raise TypeError('Missing required property rest_api_id')
        __props__['rest_api_id'] = rest_api_id

        __props__['status_code'] = status_code

        super(Response, __self__).__init__(
            'aws:apigateway/response:Response',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

