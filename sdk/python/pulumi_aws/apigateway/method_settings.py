# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import pulumi
import pulumi.runtime
from .. import utilities, tables

class MethodSettings(pulumi.CustomResource):
    method_path: pulumi.Output[str]
    """
    Method path defined as `{resource_path}/{http_method}` for an individual method override, or `*/*` for overriding all methods in the stage.
    """
    rest_api: pulumi.Output[str]
    """
    The ID of the REST API
    """
    settings: pulumi.Output[dict]
    """
    The settings block, see below.
    """
    stage_name: pulumi.Output[str]
    """
    The name of the stage
    """
    def __init__(__self__, __name__, __opts__=None, method_path=None, rest_api=None, settings=None, stage_name=None):
        """
        Provides an API Gateway Method Settings, e.g. logging or monitoring.
        
        
        :param str __name__: The name of the resource.
        :param pulumi.ResourceOptions __opts__: Options for the resource.
        :param pulumi.Input[str] method_path: Method path defined as `{resource_path}/{http_method}` for an individual method override, or `*/*` for overriding all methods in the stage.
        :param pulumi.Input[str] rest_api: The ID of the REST API
        :param pulumi.Input[dict] settings: The settings block, see below.
        :param pulumi.Input[str] stage_name: The name of the stage
        """
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not method_path:
            raise TypeError('Missing required property method_path')
        __props__['method_path'] = method_path

        if not rest_api:
            raise TypeError('Missing required property rest_api')
        __props__['rest_api'] = rest_api

        if not settings:
            raise TypeError('Missing required property settings')
        __props__['settings'] = settings

        if not stage_name:
            raise TypeError('Missing required property stage_name')
        __props__['stage_name'] = stage_name

        super(MethodSettings, __self__).__init__(
            'aws:apigateway/methodSettings:MethodSettings',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

