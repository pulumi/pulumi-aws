# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime

class ApiKey(pulumi.CustomResource):
    """
    Provides an API Gateway API Key.
    
    ~> **Warning:** Since the API Gateway usage plans feature was launched on August 11, 2016, usage plans are now **required** to associate an API key with an API stage.
    """
    def __init__(__self__, __name__, __opts__=None, description=None, enabled=None, name=None, stage_keys=None, value=None):
        """Create a ApiKey resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if description and not isinstance(description, basestring):
            raise TypeError('Expected property description to be a basestring')
        __self__.description = description
        """
        The API key description. Defaults to "Managed by Terraform".
        """
        __props__['description'] = description

        if enabled and not isinstance(enabled, bool):
            raise TypeError('Expected property enabled to be a bool')
        __self__.enabled = enabled
        """
        Specifies whether the API key can be used by callers. Defaults to `true`.
        """
        __props__['enabled'] = enabled

        if name and not isinstance(name, basestring):
            raise TypeError('Expected property name to be a basestring')
        __self__.name = name
        """
        The name of the API key
        """
        __props__['name'] = name

        if stage_keys and not isinstance(stage_keys, list):
            raise TypeError('Expected property stage_keys to be a list')
        __self__.stage_keys = stage_keys
        """
        A list of stage keys associated with the API key - see below
        """
        __props__['stageKeys'] = stage_keys

        if value and not isinstance(value, basestring):
            raise TypeError('Expected property value to be a basestring')
        __self__.value = value
        """
        The value of the API key. If not specified, it will be automatically generated by AWS on creation.
        """
        __props__['value'] = value

        __self__.created_date = pulumi.runtime.UNKNOWN
        """
        The creation date of the API key
        """
        __self__.last_updated_date = pulumi.runtime.UNKNOWN
        """
        The last update date of the API key
        """

        super(ApiKey, __self__).__init__(
            'aws:apigateway/apiKey:ApiKey',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'createdDate' in outs:
            self.created_date = outs['createdDate']
        if 'description' in outs:
            self.description = outs['description']
        if 'enabled' in outs:
            self.enabled = outs['enabled']
        if 'lastUpdatedDate' in outs:
            self.last_updated_date = outs['lastUpdatedDate']
        if 'name' in outs:
            self.name = outs['name']
        if 'stageKeys' in outs:
            self.stage_keys = outs['stageKeys']
        if 'value' in outs:
            self.value = outs['value']
