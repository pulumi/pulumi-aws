# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetProductFilterResult',
]

@pulumi.output_type
class GetProductFilterResult(dict):
    def __init__(__self__, *,
                 field: str,
                 value: str):
        """
        :param str field: Product attribute name that you want to filter on.
        :param str value: Product attribute value that you want to filter on.
        """
        GetProductFilterResult._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            field=field,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             field: Optional[str] = None,
             value: Optional[str] = None,
             opts: Optional[pulumi.ResourceOptions] = None,
             **kwargs):
        if field is None:
            raise TypeError("Missing 'field' argument")
        if value is None:
            raise TypeError("Missing 'value' argument")

        _setter("field", field)
        _setter("value", value)

    @property
    @pulumi.getter
    def field(self) -> str:
        """
        Product attribute name that you want to filter on.
        """
        return pulumi.get(self, "field")

    @property
    @pulumi.getter
    def value(self) -> str:
        """
        Product attribute value that you want to filter on.
        """
        return pulumi.get(self, "value")


