# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class HostedPublicVirtualInterface(pulumi.CustomResource):
    """
    Provides a Direct Connect hosted public virtual interface resource. This resource represents the allocator's side of the hosted virtual interface.
    A hosted virtual interface is a virtual interface that is owned by another AWS account.
    """
    def __init__(__self__, __name__, __opts__=None, address_family=None, amazon_address=None, bgp_asn=None, bgp_auth_key=None, connection_id=None, customer_address=None, name=None, owner_account_id=None, route_filter_prefixes=None, vlan=None):
        """Create a HostedPublicVirtualInterface resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not address_family:
            raise TypeError('Missing required property address_family')
        __props__['addressFamily'] = address_family

        __props__['amazonAddress'] = amazon_address

        if not bgp_asn:
            raise TypeError('Missing required property bgp_asn')
        __props__['bgpAsn'] = bgp_asn

        __props__['bgpAuthKey'] = bgp_auth_key

        if not connection_id:
            raise TypeError('Missing required property connection_id')
        __props__['connectionId'] = connection_id

        __props__['customerAddress'] = customer_address

        __props__['name'] = name

        if not owner_account_id:
            raise TypeError('Missing required property owner_account_id')
        __props__['ownerAccountId'] = owner_account_id

        if not route_filter_prefixes:
            raise TypeError('Missing required property route_filter_prefixes')
        __props__['routeFilterPrefixes'] = route_filter_prefixes

        if not vlan:
            raise TypeError('Missing required property vlan')
        __props__['vlan'] = vlan

        __props__['arn'] = None

        super(HostedPublicVirtualInterface, __self__).__init__(
            'aws:directconnect/hostedPublicVirtualInterface:HostedPublicVirtualInterface',
            __name__,
            __props__,
            __opts__)

