# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class Domain(pulumi.CustomResource):
    """
    Provides an SWF Domain resource.
    """
    def __init__(__self__, __name__, __opts__=None, description=None, name=None, name_prefix=None, workflow_execution_retention_period_in_days=None):
        """Create a Domain resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if description and not isinstance(description, basestring):
            raise TypeError('Expected property description to be a basestring')
        __self__.description = description
        """
        The domain description.
        """
        __props__['description'] = description

        if name and not isinstance(name, basestring):
            raise TypeError('Expected property name to be a basestring')
        __self__.name = name
        """
        The name of the domain. If omitted, Terraform will assign a random, unique name.
        """
        __props__['name'] = name

        if name_prefix and not isinstance(name_prefix, basestring):
            raise TypeError('Expected property name_prefix to be a basestring')
        __self__.name_prefix = name_prefix
        """
        Creates a unique name beginning with the specified prefix. Conflicts with `name`.
        """
        __props__['namePrefix'] = name_prefix

        if not workflow_execution_retention_period_in_days:
            raise TypeError('Missing required property workflow_execution_retention_period_in_days')
        elif not isinstance(workflow_execution_retention_period_in_days, basestring):
            raise TypeError('Expected property workflow_execution_retention_period_in_days to be a basestring')
        __self__.workflow_execution_retention_period_in_days = workflow_execution_retention_period_in_days
        """
        Length of time that SWF will continue to retain information about the workflow execution after the workflow execution is complete, must be between 0 and 90 days.
        """
        __props__['workflowExecutionRetentionPeriodInDays'] = workflow_execution_retention_period_in_days

        super(Domain, __self__).__init__(
            'aws:swf/domain:Domain',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'description' in outs:
            self.description = outs['description']
        if 'name' in outs:
            self.name = outs['name']
        if 'namePrefix' in outs:
            self.name_prefix = outs['namePrefix']
        if 'workflowExecutionRetentionPeriodInDays' in outs:
            self.workflow_execution_retention_period_in_days = outs['workflowExecutionRetentionPeriodInDays']
