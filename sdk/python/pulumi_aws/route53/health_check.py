# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class HealthCheck(pulumi.CustomResource):
    """
    Provides a Route53 health check.
    """
    def __init__(__self__, __name__, __opts__=None, child_health_threshold=None, child_healthchecks=None, cloudwatch_alarm_name=None, cloudwatch_alarm_region=None, enable_sni=None, failure_threshold=None, fqdn=None, insufficient_data_health_status=None, invert_healthcheck=None, ip_address=None, measure_latency=None, port=None, reference_name=None, regions=None, request_interval=None, resource_path=None, search_string=None, tags=None, type=None):
        """Create a HealthCheck resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['childHealthThreshold'] = child_health_threshold

        __props__['childHealthchecks'] = child_healthchecks

        __props__['cloudwatchAlarmName'] = cloudwatch_alarm_name

        __props__['cloudwatchAlarmRegion'] = cloudwatch_alarm_region

        __props__['enableSni'] = enable_sni

        __props__['failureThreshold'] = failure_threshold

        __props__['fqdn'] = fqdn

        __props__['insufficientDataHealthStatus'] = insufficient_data_health_status

        __props__['invertHealthcheck'] = invert_healthcheck

        __props__['ipAddress'] = ip_address

        __props__['measureLatency'] = measure_latency

        __props__['port'] = port

        __props__['referenceName'] = reference_name

        __props__['regions'] = regions

        __props__['requestInterval'] = request_interval

        __props__['resourcePath'] = resource_path

        __props__['searchString'] = search_string

        __props__['tags'] = tags

        if not type:
            raise TypeError('Missing required property type')
        __props__['type'] = type

        super(HealthCheck, __self__).__init__(
            'aws:route53/healthCheck:HealthCheck',
            __name__,
            __props__,
            __opts__)

