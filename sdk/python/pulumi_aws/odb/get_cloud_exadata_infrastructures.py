# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetCloudExadataInfrastructuresResult',
    'AwaitableGetCloudExadataInfrastructuresResult',
    'get_cloud_exadata_infrastructures',
    'get_cloud_exadata_infrastructures_output',
]

@pulumi.output_type
class GetCloudExadataInfrastructuresResult:
    """
    A collection of values returned by getCloudExadataInfrastructures.
    """
    def __init__(__self__, cloud_exadata_infrastructures=None, id=None, region=None):
        if cloud_exadata_infrastructures and not isinstance(cloud_exadata_infrastructures, list):
            raise TypeError("Expected argument 'cloud_exadata_infrastructures' to be a list")
        pulumi.set(__self__, "cloud_exadata_infrastructures", cloud_exadata_infrastructures)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="cloudExadataInfrastructures")
    def cloud_exadata_infrastructures(self) -> Sequence['outputs.GetCloudExadataInfrastructuresCloudExadataInfrastructureResult']:
        """
        List of Cloud Exadata Infrastructures. Returns basic information about the Cloud Exadata Infrastructures.
        """
        return pulumi.get(self, "cloud_exadata_infrastructures")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")


class AwaitableGetCloudExadataInfrastructuresResult(GetCloudExadataInfrastructuresResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetCloudExadataInfrastructuresResult(
            cloud_exadata_infrastructures=self.cloud_exadata_infrastructures,
            id=self.id,
            region=self.region)


def get_cloud_exadata_infrastructures(region: Optional[_builtins.str] = None,
                                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetCloudExadataInfrastructuresResult:
    """
    Data source for exadata infrastructures in AWS for Oracle Database@AWS.

    You can find out more about Oracle Database@AWS from [User Guide](https://docs.aws.amazon.com/odb/latest/UserGuide/what-is-odb.html).

    ## Example Usage

    ### Basic Usage

    ```python
    import pulumi
    import pulumi_aws as aws

    example = aws.odb.get_cloud_exadata_infrastructures()
    ```


    :param _builtins.str region: Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
    """
    __args__ = dict()
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws:odb/getCloudExadataInfrastructures:getCloudExadataInfrastructures', __args__, opts=opts, typ=GetCloudExadataInfrastructuresResult).value

    return AwaitableGetCloudExadataInfrastructuresResult(
        cloud_exadata_infrastructures=pulumi.get(__ret__, 'cloud_exadata_infrastructures'),
        id=pulumi.get(__ret__, 'id'),
        region=pulumi.get(__ret__, 'region'))
def get_cloud_exadata_infrastructures_output(region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                             opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetCloudExadataInfrastructuresResult]:
    """
    Data source for exadata infrastructures in AWS for Oracle Database@AWS.

    You can find out more about Oracle Database@AWS from [User Guide](https://docs.aws.amazon.com/odb/latest/UserGuide/what-is-odb.html).

    ## Example Usage

    ### Basic Usage

    ```python
    import pulumi
    import pulumi_aws as aws

    example = aws.odb.get_cloud_exadata_infrastructures()
    ```


    :param _builtins.str region: Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
    """
    __args__ = dict()
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('aws:odb/getCloudExadataInfrastructures:getCloudExadataInfrastructures', __args__, opts=opts, typ=GetCloudExadataInfrastructuresResult)
    return __ret__.apply(lambda __response__: GetCloudExadataInfrastructuresResult(
        cloud_exadata_infrastructures=pulumi.get(__response__, 'cloud_exadata_infrastructures'),
        id=pulumi.get(__response__, 'id'),
        region=pulumi.get(__response__, 'region')))
