// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getDelegatedAdministrators(args?: GetDelegatedAdministratorsArgs, opts?: pulumi.InvokeOptions): Promise<GetDelegatedAdministratorsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:organizations/getDelegatedAdministrators:getDelegatedAdministrators", {
        "servicePrincipal": args.servicePrincipal,
    }, opts);
}

/**
 * A collection of arguments for invoking getDelegatedAdministrators.
 */
export interface GetDelegatedAdministratorsArgs {
    servicePrincipal?: string;
}

/**
 * A collection of values returned by getDelegatedAdministrators.
 */
export interface GetDelegatedAdministratorsResult {
    readonly delegatedAdministrators: outputs.organizations.GetDelegatedAdministratorsDelegatedAdministrator[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly servicePrincipal?: string;
}
export function getDelegatedAdministratorsOutput(args?: GetDelegatedAdministratorsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDelegatedAdministratorsResult> {
    return pulumi.output(args).apply((a: any) => getDelegatedAdministrators(a, opts))
}

/**
 * A collection of arguments for invoking getDelegatedAdministrators.
 */
export interface GetDelegatedAdministratorsOutputArgs {
    servicePrincipal?: pulumi.Input<string>;
}
