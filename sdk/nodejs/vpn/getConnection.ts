// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Fetches details of a Site-to-Site VPN connection. A Site-to-Site VPN connection is an Internet Protocol security (IPsec) VPN connection between a VPC and an on-premises network.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.ec2.getVpnConnection({
 *     filters: [{
 *         name: "customer-gateway-id",
 *         values: ["cgw-1234567890"],
 *     }],
 * });
 * export const vpnConnectionId = example.then(example => example.vpnConnectionId);
 * ```
 *
 * ### Find by VPN Connection ID
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.ec2.getVpnConnection({
 *     vpnConnectionId: "vpn-abcd1234567890",
 * });
 * export const gatewayAssociationState = example.then(example => example.gatewayAssociationState);
 * ```
 */
/** @deprecated aws.vpn/getconnection.getConnection has been deprecated in favor of aws.ec2/getvpnconnection.getVpnConnection */
export function getConnection(args?: GetConnectionArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectionResult> {
    pulumi.log.warn("getConnection is deprecated: aws.vpn/getconnection.getConnection has been deprecated in favor of aws.ec2/getvpnconnection.getVpnConnection")
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:vpn/getConnection:getConnection", {
        "filters": args.filters,
        "region": args.region,
        "vpnConnectionId": args.vpnConnectionId,
    }, opts);
}

/**
 * A collection of arguments for invoking getConnection.
 */
export interface GetConnectionArgs {
    /**
     * Configuration block(s) for filtering. Detailed below.
     */
    filters?: inputs.vpn.GetConnectionFilter[];
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: string;
    /**
     * Identifier of the EC2 VPN Connection.
     */
    vpnConnectionId?: string;
}

/**
 * A collection of values returned by getConnection.
 */
export interface GetConnectionResult {
    /**
     * Category of the VPN connection. A value of VPN indicates an AWS VPN connection. A value of VPN-Classic indicates an AWS Classic VPN connection.
     */
    readonly category: string;
    /**
     * ARN of the core network.
     */
    readonly coreNetworkArn: string;
    /**
     * ARN of the core network attachment.
     */
    readonly coreNetworkAttachmentArn: string;
    /**
     * Configuration information for the VPN connection's customer gateway (in the native XML format).
     */
    readonly customerGatewayConfiguration: string;
    /**
     * ID of the customer gateway at your end of the VPN connection.
     */
    readonly customerGatewayId: string;
    readonly filters?: outputs.vpn.GetConnectionFilter[];
    /**
     * Current state of the gateway association.
     */
    readonly gatewayAssociationState: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * (ARN) of the Secrets Manager secret storing the pre-shared key(s) for the VPN connection.
     */
    readonly preSharedKeyArn: string;
    readonly region: string;
    /**
     * List of static routes associated with the VPN connection.
     */
    readonly routes: outputs.vpn.GetConnectionRoute[];
    /**
     * Current state of the VPN connection.
     */
    readonly state: string;
    /**
     * Tags associated to the VPN Connection.
     */
    readonly tags: {[key: string]: string};
    /**
     * ID of a transit gateway associated with the VPN connection.
     */
    readonly transitGatewayId: string;
    /**
     * Type of VPN connection. Currently the only supported type is ipsec.1.
     */
    readonly type: string;
    /**
     * List of objects containing information about the VPN tunnel.
     */
    readonly vgwTelemetries: outputs.vpn.GetConnectionVgwTelemetry[];
    readonly vpnConnectionId: string;
    /**
     * ID of a virtual private gateway associated with the VPN connection.
     */
    readonly vpnGatewayId: string;
}
/**
 * Fetches details of a Site-to-Site VPN connection. A Site-to-Site VPN connection is an Internet Protocol security (IPsec) VPN connection between a VPC and an on-premises network.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.ec2.getVpnConnection({
 *     filters: [{
 *         name: "customer-gateway-id",
 *         values: ["cgw-1234567890"],
 *     }],
 * });
 * export const vpnConnectionId = example.then(example => example.vpnConnectionId);
 * ```
 *
 * ### Find by VPN Connection ID
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.ec2.getVpnConnection({
 *     vpnConnectionId: "vpn-abcd1234567890",
 * });
 * export const gatewayAssociationState = example.then(example => example.gatewayAssociationState);
 * ```
 */
/** @deprecated aws.vpn/getconnection.getConnection has been deprecated in favor of aws.ec2/getvpnconnection.getVpnConnection */
export function getConnectionOutput(args?: GetConnectionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetConnectionResult> {
    pulumi.log.warn("getConnection is deprecated: aws.vpn/getconnection.getConnection has been deprecated in favor of aws.ec2/getvpnconnection.getVpnConnection")
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws:vpn/getConnection:getConnection", {
        "filters": args.filters,
        "region": args.region,
        "vpnConnectionId": args.vpnConnectionId,
    }, opts);
}

/**
 * A collection of arguments for invoking getConnection.
 */
export interface GetConnectionOutputArgs {
    /**
     * Configuration block(s) for filtering. Detailed below.
     */
    filters?: pulumi.Input<pulumi.Input<inputs.vpn.GetConnectionFilterArgs>[]>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * Identifier of the EC2 VPN Connection.
     */
    vpnConnectionId?: pulumi.Input<string>;
}
