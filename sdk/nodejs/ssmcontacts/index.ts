// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ContactArgs, ContactState } from "./contact";
export type Contact = import("./contact").Contact;
export const Contact: typeof import("./contact").Contact = null as any;
utilities.lazyLoad(exports, ["Contact"], () => require("./contact"));

export { ContactChannelArgs, ContactChannelState } from "./contactChannel";
export type ContactChannel = import("./contactChannel").ContactChannel;
export const ContactChannel: typeof import("./contactChannel").ContactChannel = null as any;
utilities.lazyLoad(exports, ["ContactChannel"], () => require("./contactChannel"));

export { GetContactArgs, GetContactResult, GetContactOutputArgs } from "./getContact";
export const getContact: typeof import("./getContact").getContact = null as any;
export const getContactOutput: typeof import("./getContact").getContactOutput = null as any;
utilities.lazyLoad(exports, ["getContact","getContactOutput"], () => require("./getContact"));

export { GetContactChannelArgs, GetContactChannelResult, GetContactChannelOutputArgs } from "./getContactChannel";
export const getContactChannel: typeof import("./getContactChannel").getContactChannel = null as any;
export const getContactChannelOutput: typeof import("./getContactChannel").getContactChannelOutput = null as any;
utilities.lazyLoad(exports, ["getContactChannel","getContactChannelOutput"], () => require("./getContactChannel"));

export { GetPlanArgs, GetPlanResult, GetPlanOutputArgs } from "./getPlan";
export const getPlan: typeof import("./getPlan").getPlan = null as any;
export const getPlanOutput: typeof import("./getPlan").getPlanOutput = null as any;
utilities.lazyLoad(exports, ["getPlan","getPlanOutput"], () => require("./getPlan"));

export { PlanArgs, PlanState } from "./plan";
export type Plan = import("./plan").Plan;
export const Plan: typeof import("./plan").Plan = null as any;
utilities.lazyLoad(exports, ["Plan"], () => require("./plan"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws:ssmcontacts/contact:Contact":
                return new Contact(name, <any>undefined, { urn })
            case "aws:ssmcontacts/contactChannel:ContactChannel":
                return new ContactChannel(name, <any>undefined, { urn })
            case "aws:ssmcontacts/plan:Plan":
                return new Plan(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "ssmcontacts/contact", _module)
pulumi.runtime.registerResourceModule("aws", "ssmcontacts/contactChannel", _module)
pulumi.runtime.registerResourceModule("aws", "ssmcontacts/plan", _module)
