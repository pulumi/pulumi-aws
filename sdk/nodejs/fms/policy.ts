// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Provides a resource to create an AWS Firewall Manager policy. You need to be using AWS organizations and have enabled the Firewall Manager administrator account.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleRuleGroup = new aws.wafregional.RuleGroup("exampleRuleGroup", {metricName: "WAFRuleGroupExample"});
 * const examplePolicy = new aws.fms.Policy("examplePolicy", {
 *     excludeResourceTags: false,
 *     remediationEnabled: false,
 *     resourceTypeLists: ["AWS::ElasticLoadBalancingV2::LoadBalancer"],
 *     securityServicePolicyData: {
 *         type: "WAF",
 *         managedServiceData: exampleRuleGroup.id.apply(id => JSON.stringify({
 *             type: "WAF",
 *             ruleGroups: [{
 *                 id: id,
 *                 overrideAction: {
 *                     type: "COUNT",
 *                 },
 *             }],
 *             defaultAction: {
 *                 type: "BLOCK",
 *             },
 *             overrideCustomerWebACLAssociation: false,
 *         })),
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Firewall Manager policies can be imported using the policy ID, e.g.
 *
 * ```sh
 *  $ pulumi import aws:fms/policy:Policy example 5be49585-a7e3-4c49-dde1-a179fe4a619a
 * ```
 */
export class Policy extends pulumi.CustomResource {
    /**
     * Get an existing Policy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PolicyState, opts?: pulumi.CustomResourceOptions): Policy {
        return new Policy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:fms/policy:Policy';

    /**
     * Returns true if the given object is an instance of Policy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Policy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Policy.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * If true, the request will also perform a clean-up process. Defaults to `true`. More information can be found here [AWS Firewall Manager delete policy](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_DeletePolicy.html)
     */
    public readonly deleteAllPolicyResources!: pulumi.Output<boolean | undefined>;
    /**
     * A map of lists, with a single key named 'account' with a list of AWS Account IDs to exclude from this policy.
     */
    public readonly excludeMap!: pulumi.Output<outputs.fms.PolicyExcludeMap | undefined>;
    /**
     * A boolean value, if true the tags that are specified in the `resourceTags` are not protected by this policy. If set to false and resourceTags are populated, resources that contain tags will be protected by this policy.
     */
    public readonly excludeResourceTags!: pulumi.Output<boolean>;
    /**
     * A map of lists, with a single key named 'account' with a list of AWS Account IDs to include for this policy.
     */
    public readonly includeMap!: pulumi.Output<outputs.fms.PolicyIncludeMap | undefined>;
    /**
     * The friendly name of the AWS Firewall Manager Policy.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A unique identifier for each update to the policy.
     */
    public /*out*/ readonly policyUpdateToken!: pulumi.Output<string>;
    /**
     * A boolean value, indicates if the policy should automatically applied to resources that already exist in the account.
     */
    public readonly remediationEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * A map of resource tags, that if present will filter protections on resources based on the exclude_resource_tags.
     */
    public readonly resourceTags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A resource type to protect. Conflicts with `resourceTypeList`. See the [FMS API Reference](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_Policy.html#fms-Type-Policy-ResourceType) for more information about supported values.
     */
    public readonly resourceType!: pulumi.Output<string>;
    /**
     * A list of resource types to protect. Conflicts with `resourceType`. See the [FMS API Reference](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_Policy.html#fms-Type-Policy-ResourceType) for more information about supported values.
     */
    public readonly resourceTypeLists!: pulumi.Output<string[]>;
    /**
     * The objects to include in Security Service Policy Data. Documented below.
     */
    public readonly securityServicePolicyData!: pulumi.Output<outputs.fms.PolicySecurityServicePolicyData>;

    /**
     * Create a Policy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PolicyArgs | PolicyState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PolicyState | undefined;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["deleteAllPolicyResources"] = state ? state.deleteAllPolicyResources : undefined;
            inputs["excludeMap"] = state ? state.excludeMap : undefined;
            inputs["excludeResourceTags"] = state ? state.excludeResourceTags : undefined;
            inputs["includeMap"] = state ? state.includeMap : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["policyUpdateToken"] = state ? state.policyUpdateToken : undefined;
            inputs["remediationEnabled"] = state ? state.remediationEnabled : undefined;
            inputs["resourceTags"] = state ? state.resourceTags : undefined;
            inputs["resourceType"] = state ? state.resourceType : undefined;
            inputs["resourceTypeLists"] = state ? state.resourceTypeLists : undefined;
            inputs["securityServicePolicyData"] = state ? state.securityServicePolicyData : undefined;
        } else {
            const args = argsOrState as PolicyArgs | undefined;
            if ((!args || args.excludeResourceTags === undefined) && !opts.urn) {
                throw new Error("Missing required property 'excludeResourceTags'");
            }
            if ((!args || args.securityServicePolicyData === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityServicePolicyData'");
            }
            inputs["deleteAllPolicyResources"] = args ? args.deleteAllPolicyResources : undefined;
            inputs["excludeMap"] = args ? args.excludeMap : undefined;
            inputs["excludeResourceTags"] = args ? args.excludeResourceTags : undefined;
            inputs["includeMap"] = args ? args.includeMap : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["remediationEnabled"] = args ? args.remediationEnabled : undefined;
            inputs["resourceTags"] = args ? args.resourceTags : undefined;
            inputs["resourceType"] = args ? args.resourceType : undefined;
            inputs["resourceTypeLists"] = args ? args.resourceTypeLists : undefined;
            inputs["securityServicePolicyData"] = args ? args.securityServicePolicyData : undefined;
            inputs["arn"] = undefined /*out*/;
            inputs["policyUpdateToken"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(Policy.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Policy resources.
 */
export interface PolicyState {
    arn?: pulumi.Input<string>;
    /**
     * If true, the request will also perform a clean-up process. Defaults to `true`. More information can be found here [AWS Firewall Manager delete policy](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_DeletePolicy.html)
     */
    deleteAllPolicyResources?: pulumi.Input<boolean>;
    /**
     * A map of lists, with a single key named 'account' with a list of AWS Account IDs to exclude from this policy.
     */
    excludeMap?: pulumi.Input<inputs.fms.PolicyExcludeMap>;
    /**
     * A boolean value, if true the tags that are specified in the `resourceTags` are not protected by this policy. If set to false and resourceTags are populated, resources that contain tags will be protected by this policy.
     */
    excludeResourceTags?: pulumi.Input<boolean>;
    /**
     * A map of lists, with a single key named 'account' with a list of AWS Account IDs to include for this policy.
     */
    includeMap?: pulumi.Input<inputs.fms.PolicyIncludeMap>;
    /**
     * The friendly name of the AWS Firewall Manager Policy.
     */
    name?: pulumi.Input<string>;
    /**
     * A unique identifier for each update to the policy.
     */
    policyUpdateToken?: pulumi.Input<string>;
    /**
     * A boolean value, indicates if the policy should automatically applied to resources that already exist in the account.
     */
    remediationEnabled?: pulumi.Input<boolean>;
    /**
     * A map of resource tags, that if present will filter protections on resources based on the exclude_resource_tags.
     */
    resourceTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A resource type to protect. Conflicts with `resourceTypeList`. See the [FMS API Reference](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_Policy.html#fms-Type-Policy-ResourceType) for more information about supported values.
     */
    resourceType?: pulumi.Input<string>;
    /**
     * A list of resource types to protect. Conflicts with `resourceType`. See the [FMS API Reference](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_Policy.html#fms-Type-Policy-ResourceType) for more information about supported values.
     */
    resourceTypeLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The objects to include in Security Service Policy Data. Documented below.
     */
    securityServicePolicyData?: pulumi.Input<inputs.fms.PolicySecurityServicePolicyData>;
}

/**
 * The set of arguments for constructing a Policy resource.
 */
export interface PolicyArgs {
    /**
     * If true, the request will also perform a clean-up process. Defaults to `true`. More information can be found here [AWS Firewall Manager delete policy](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_DeletePolicy.html)
     */
    deleteAllPolicyResources?: pulumi.Input<boolean>;
    /**
     * A map of lists, with a single key named 'account' with a list of AWS Account IDs to exclude from this policy.
     */
    excludeMap?: pulumi.Input<inputs.fms.PolicyExcludeMap>;
    /**
     * A boolean value, if true the tags that are specified in the `resourceTags` are not protected by this policy. If set to false and resourceTags are populated, resources that contain tags will be protected by this policy.
     */
    excludeResourceTags: pulumi.Input<boolean>;
    /**
     * A map of lists, with a single key named 'account' with a list of AWS Account IDs to include for this policy.
     */
    includeMap?: pulumi.Input<inputs.fms.PolicyIncludeMap>;
    /**
     * The friendly name of the AWS Firewall Manager Policy.
     */
    name?: pulumi.Input<string>;
    /**
     * A boolean value, indicates if the policy should automatically applied to resources that already exist in the account.
     */
    remediationEnabled?: pulumi.Input<boolean>;
    /**
     * A map of resource tags, that if present will filter protections on resources based on the exclude_resource_tags.
     */
    resourceTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A resource type to protect. Conflicts with `resourceTypeList`. See the [FMS API Reference](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_Policy.html#fms-Type-Policy-ResourceType) for more information about supported values.
     */
    resourceType?: pulumi.Input<string>;
    /**
     * A list of resource types to protect. Conflicts with `resourceType`. See the [FMS API Reference](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_Policy.html#fms-Type-Policy-ResourceType) for more information about supported values.
     */
    resourceTypeLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The objects to include in Security Service Policy Data. Documented below.
     */
    securityServicePolicyData: pulumi.Input<inputs.fms.PolicySecurityServicePolicyData>;
}
