// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS Global Accelerator Cross Account Attachment.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.globalaccelerator.CrossAccountAttachment("example", {name: "example-cross-account-attachment"});
 * ```
 *
 * ### Usage with Optional Arguments
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.globalaccelerator.CrossAccountAttachment("example", {
 *     name: "example-cross-account-attachment",
 *     principals: ["123456789012"],
 *     resources: [{
 *         endpointId: "arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188",
 *         region: "us-west-2",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Global Accelerator Cross Account Attachment using the `example_id_arg`. For example:
 *
 * ```sh
 * $ pulumi import aws:globalaccelerator/crossAccountAttachment:CrossAccountAttachment example arn:aws:globalaccelerator::012345678910:attachment/01234567-abcd-8910-efgh-123456789012
 * ```
 */
export class CrossAccountAttachment extends pulumi.CustomResource {
    /**
     * Get an existing CrossAccountAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CrossAccountAttachmentState, opts?: pulumi.CustomResourceOptions): CrossAccountAttachment {
        return new CrossAccountAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:globalaccelerator/crossAccountAttachment:CrossAccountAttachment';

    /**
     * Returns true if the given object is an instance of CrossAccountAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CrossAccountAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CrossAccountAttachment.__pulumiType;
    }

    /**
     * ARN of the Cross Account Attachment.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Creation Time when the Cross Account Attachment.
     */
    public /*out*/ readonly createdTime!: pulumi.Output<string>;
    /**
     * Last modified time of the Cross Account Attachment.
     */
    public /*out*/ readonly lastModifiedTime!: pulumi.Output<string>;
    /**
     * Name of the Cross Account Attachment.
     *
     * The following arguments are optional:
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * List of AWS account IDs that are allowed to associate resources with the accelerator.
     */
    public readonly principals!: pulumi.Output<string[] | undefined>;
    /**
     * List of resources to be associated with the accelerator.
     */
    public readonly resources!: pulumi.Output<outputs.globalaccelerator.CrossAccountAttachmentResource[] | undefined>;
    /**
     * A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     *
     * @deprecated Please use `tags` instead.
     */
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a CrossAccountAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: CrossAccountAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CrossAccountAttachmentArgs | CrossAccountAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CrossAccountAttachmentState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["createdTime"] = state ? state.createdTime : undefined;
            resourceInputs["lastModifiedTime"] = state ? state.lastModifiedTime : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["principals"] = state ? state.principals : undefined;
            resourceInputs["resources"] = state ? state.resources : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
        } else {
            const args = argsOrState as CrossAccountAttachmentArgs | undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["principals"] = args ? args.principals : undefined;
            resourceInputs["resources"] = args ? args.resources : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["createdTime"] = undefined /*out*/;
            resourceInputs["lastModifiedTime"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CrossAccountAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CrossAccountAttachment resources.
 */
export interface CrossAccountAttachmentState {
    /**
     * ARN of the Cross Account Attachment.
     */
    arn?: pulumi.Input<string>;
    /**
     * Creation Time when the Cross Account Attachment.
     */
    createdTime?: pulumi.Input<string>;
    /**
     * Last modified time of the Cross Account Attachment.
     */
    lastModifiedTime?: pulumi.Input<string>;
    /**
     * Name of the Cross Account Attachment.
     *
     * The following arguments are optional:
     */
    name?: pulumi.Input<string>;
    /**
     * List of AWS account IDs that are allowed to associate resources with the accelerator.
     */
    principals?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of resources to be associated with the accelerator.
     */
    resources?: pulumi.Input<pulumi.Input<inputs.globalaccelerator.CrossAccountAttachmentResource>[]>;
    /**
     * A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     *
     * @deprecated Please use `tags` instead.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a CrossAccountAttachment resource.
 */
export interface CrossAccountAttachmentArgs {
    /**
     * Name of the Cross Account Attachment.
     *
     * The following arguments are optional:
     */
    name?: pulumi.Input<string>;
    /**
     * List of AWS account IDs that are allowed to associate resources with the accelerator.
     */
    principals?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of resources to be associated with the accelerator.
     */
    resources?: pulumi.Input<pulumi.Input<inputs.globalaccelerator.CrossAccountAttachmentResource>[]>;
    /**
     * A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
