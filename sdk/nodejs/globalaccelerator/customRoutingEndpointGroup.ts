// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Provides a Global Accelerator custom routing endpoint group.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.globalaccelerator.CustomRoutingEndpointGroup("example", {
 *     listenerArn: exampleAwsGlobalacceleratorCustomRoutingListener.arn,
 *     destinationConfigurations: [{
 *         fromPort: 80,
 *         toPort: 8080,
 *         protocols: ["TCP"],
 *     }],
 *     endpointConfigurations: [{
 *         endpointId: exampleAwsSubnet.id,
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * ### Identity Schema
 *
 * #### Required
 *
 * - `arn` (String) Amazon Resource Name (ARN) of the Global Accelerator custom routing endpoint group.
 *
 * Using `pulumi import`, import Global Accelerator custom routing endpoint groups using the `id`. For example:
 *
 * console
 *
 * % pulumi import aws_globalaccelerator_custom_routing_endpoint_group.example arn:aws:globalaccelerator::111111111111:accelerator/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/listener/xxxxxxx/endpoint-group/xxxxxxxx
 */
export class CustomRoutingEndpointGroup extends pulumi.CustomResource {
    /**
     * Get an existing CustomRoutingEndpointGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomRoutingEndpointGroupState, opts?: pulumi.CustomResourceOptions): CustomRoutingEndpointGroup {
        return new CustomRoutingEndpointGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:globalaccelerator/customRoutingEndpointGroup:CustomRoutingEndpointGroup';

    /**
     * Returns true if the given object is an instance of CustomRoutingEndpointGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomRoutingEndpointGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomRoutingEndpointGroup.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the custom routing endpoint group.
     */
    declare public /*out*/ readonly arn: pulumi.Output<string>;
    /**
     * The port ranges and protocols for all endpoints in a custom routing endpoint group to accept client traffic on. Fields documented below.
     */
    declare public readonly destinationConfigurations: pulumi.Output<outputs.globalaccelerator.CustomRoutingEndpointGroupDestinationConfiguration[]>;
    /**
     * The list of endpoint objects. Fields documented below.
     */
    declare public readonly endpointConfigurations: pulumi.Output<outputs.globalaccelerator.CustomRoutingEndpointGroupEndpointConfiguration[] | undefined>;
    /**
     * The name of the AWS Region where the custom routing endpoint group is located.
     */
    declare public readonly endpointGroupRegion: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the custom routing listener.
     */
    declare public readonly listenerArn: pulumi.Output<string>;

    /**
     * Create a CustomRoutingEndpointGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomRoutingEndpointGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CustomRoutingEndpointGroupArgs | CustomRoutingEndpointGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CustomRoutingEndpointGroupState | undefined;
            resourceInputs["arn"] = state?.arn;
            resourceInputs["destinationConfigurations"] = state?.destinationConfigurations;
            resourceInputs["endpointConfigurations"] = state?.endpointConfigurations;
            resourceInputs["endpointGroupRegion"] = state?.endpointGroupRegion;
            resourceInputs["listenerArn"] = state?.listenerArn;
        } else {
            const args = argsOrState as CustomRoutingEndpointGroupArgs | undefined;
            if (args?.destinationConfigurations === undefined && !opts.urn) {
                throw new Error("Missing required property 'destinationConfigurations'");
            }
            if (args?.listenerArn === undefined && !opts.urn) {
                throw new Error("Missing required property 'listenerArn'");
            }
            resourceInputs["destinationConfigurations"] = args?.destinationConfigurations;
            resourceInputs["endpointConfigurations"] = args?.endpointConfigurations;
            resourceInputs["endpointGroupRegion"] = args?.endpointGroupRegion;
            resourceInputs["listenerArn"] = args?.listenerArn;
            resourceInputs["arn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CustomRoutingEndpointGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CustomRoutingEndpointGroup resources.
 */
export interface CustomRoutingEndpointGroupState {
    /**
     * The Amazon Resource Name (ARN) of the custom routing endpoint group.
     */
    arn?: pulumi.Input<string>;
    /**
     * The port ranges and protocols for all endpoints in a custom routing endpoint group to accept client traffic on. Fields documented below.
     */
    destinationConfigurations?: pulumi.Input<pulumi.Input<inputs.globalaccelerator.CustomRoutingEndpointGroupDestinationConfiguration>[]>;
    /**
     * The list of endpoint objects. Fields documented below.
     */
    endpointConfigurations?: pulumi.Input<pulumi.Input<inputs.globalaccelerator.CustomRoutingEndpointGroupEndpointConfiguration>[]>;
    /**
     * The name of the AWS Region where the custom routing endpoint group is located.
     */
    endpointGroupRegion?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the custom routing listener.
     */
    listenerArn?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CustomRoutingEndpointGroup resource.
 */
export interface CustomRoutingEndpointGroupArgs {
    /**
     * The port ranges and protocols for all endpoints in a custom routing endpoint group to accept client traffic on. Fields documented below.
     */
    destinationConfigurations: pulumi.Input<pulumi.Input<inputs.globalaccelerator.CustomRoutingEndpointGroupDestinationConfiguration>[]>;
    /**
     * The list of endpoint objects. Fields documented below.
     */
    endpointConfigurations?: pulumi.Input<pulumi.Input<inputs.globalaccelerator.CustomRoutingEndpointGroupEndpointConfiguration>[]>;
    /**
     * The name of the AWS Region where the custom routing endpoint group is located.
     */
    endpointGroupRegion?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the custom routing listener.
     */
    listenerArn: pulumi.Input<string>;
}
