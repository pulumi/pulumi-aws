// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Data source for managing an AWS Cognito IDP (Identity Provider) User Group.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.cognito.getUserGroup({
 *     userPoolId: "us-west-2_aaaaaaaaa",
 *     name: "example",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getUserGroup(args: GetUserGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetUserGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:cognito/getUserGroup:getUserGroup", {
        "name": args.name,
        "userPoolId": args.userPoolId,
    }, opts);
}

/**
 * A collection of arguments for invoking getUserGroup.
 */
export interface GetUserGroupArgs {
    /**
     * Name of the user group.
     */
    name: string;
    /**
     * User pool the client belongs to.
     */
    userPoolId: string;
}

/**
 * A collection of values returned by getUserGroup.
 */
export interface GetUserGroupResult {
    /**
     * Description of the user group.
     */
    readonly description: string;
    /**
     * A comma-delimited string concatenating `name` and `userPoolId`.
     */
    readonly id: string;
    readonly name: string;
    /**
     * Precedence of the user group.
     */
    readonly precedence: number;
    /**
     * ARN of the IAM role to be associated with the user group.
     */
    readonly roleArn: string;
    readonly userPoolId: string;
}
/**
 * Data source for managing an AWS Cognito IDP (Identity Provider) User Group.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.cognito.getUserGroup({
 *     userPoolId: "us-west-2_aaaaaaaaa",
 *     name: "example",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getUserGroupOutput(args: GetUserGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserGroupResult> {
    return pulumi.output(args).apply((a: any) => getUserGroup(a, opts))
}

/**
 * A collection of arguments for invoking getUserGroup.
 */
export interface GetUserGroupOutputArgs {
    /**
     * Name of the user group.
     */
    name: pulumi.Input<string>;
    /**
     * User pool the client belongs to.
     */
    userPoolId: pulumi.Input<string>;
}
