// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to get a list of cognito user pools.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const selected = aws.apigateway.getRestApi({
 *     name: apiGatewayName,
 * });
 * const selectedGetUserPools = aws.cognito.getUserPools({
 *     name: cognitoUserPoolName,
 * });
 * const cognito = new aws.apigateway.Authorizer("cognito", {
 *     name: "cognito",
 *     type: "COGNITO_USER_POOLS",
 *     restApi: selected.then(selected => selected.id),
 *     providerArns: selectedGetUserPools.then(selectedGetUserPools => selectedGetUserPools.arns),
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getUserPools(args: GetUserPoolsArgs, opts?: pulumi.InvokeOptions): Promise<GetUserPoolsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:cognito/getUserPools:getUserPools", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getUserPools.
 */
export interface GetUserPoolsArgs {
    /**
     * Name of the cognito user pools. Name is not a unique attribute for cognito user pool, so multiple pools might be returned with given name. If the pool name is expected to be unique, you can reference the pool id via ```tolist(data.aws_cognito_user_pools.selected.ids)[0]```
     */
    name: string;
}

/**
 * A collection of values returned by getUserPools.
 */
export interface GetUserPoolsResult {
    /**
     * Set of cognito user pool Amazon Resource Names (ARNs).
     */
    readonly arns: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Set of cognito user pool ids.
     */
    readonly ids: string[];
    readonly name: string;
}
/**
 * Use this data source to get a list of cognito user pools.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const selected = aws.apigateway.getRestApi({
 *     name: apiGatewayName,
 * });
 * const selectedGetUserPools = aws.cognito.getUserPools({
 *     name: cognitoUserPoolName,
 * });
 * const cognito = new aws.apigateway.Authorizer("cognito", {
 *     name: "cognito",
 *     type: "COGNITO_USER_POOLS",
 *     restApi: selected.then(selected => selected.id),
 *     providerArns: selectedGetUserPools.then(selectedGetUserPools => selectedGetUserPools.arns),
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getUserPoolsOutput(args: GetUserPoolsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserPoolsResult> {
    return pulumi.output(args).apply((a: any) => getUserPools(a, opts))
}

/**
 * A collection of arguments for invoking getUserPools.
 */
export interface GetUserPoolsOutputArgs {
    /**
     * Name of the cognito user pools. Name is not a unique attribute for cognito user pool, so multiple pools might be returned with given name. If the pool name is expected to be unique, you can reference the pool id via ```tolist(data.aws_cognito_user_pools.selected.ids)[0]```
     */
    name: pulumi.Input<string>;
}
