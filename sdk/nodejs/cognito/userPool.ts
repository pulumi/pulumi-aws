// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a Cognito User Pool resource.
 * 
 * ## Example Usage
 * 
 * ### Basic configuration
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const pool = new aws.cognito.UserPool("pool", {});
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/cognito_user_pool.html.markdown.
 */
export class UserPool extends pulumi.CustomResource {
    /**
     * Get an existing UserPool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserPoolState, opts?: pulumi.CustomResourceOptions): UserPool {
        return new UserPool(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:cognito/userPool:UserPool';

    /**
     * Returns true if the given object is an instance of UserPool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is UserPool {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UserPool.__pulumiType;
    }

    /**
     * The configuration for AdminCreateUser requests.
     */
    public readonly adminCreateUserConfig!: pulumi.Output<outputs.cognito.UserPoolAdminCreateUserConfig>;
    /**
     * Attributes supported as an alias for this user pool. Possible values: phone_number, email, or preferred_username. Conflicts with `usernameAttributes`.
     */
    public readonly aliasAttributes!: pulumi.Output<string[] | undefined>;
    /**
     * The ARN of the user pool.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The attributes to be auto-verified. Possible values: email, phone_number.
     */
    public readonly autoVerifiedAttributes!: pulumi.Output<string[] | undefined>;
    /**
     * The date the user pool was created.
     */
    public /*out*/ readonly creationDate!: pulumi.Output<string>;
    /**
     * The configuration for the user pool's device tracking.
     */
    public readonly deviceConfiguration!: pulumi.Output<outputs.cognito.UserPoolDeviceConfiguration | undefined>;
    /**
     * The Email Configuration.
     */
    public readonly emailConfiguration!: pulumi.Output<outputs.cognito.UserPoolEmailConfiguration | undefined>;
    /**
     * A string representing the email verification message. Conflicts with `verificationMessageTemplate` configuration block `emailMessage` argument.
     */
    public readonly emailVerificationMessage!: pulumi.Output<string>;
    /**
     * A string representing the email verification subject. Conflicts with `verificationMessageTemplate` configuration block `emailSubject` argument.
     */
    public readonly emailVerificationSubject!: pulumi.Output<string>;
    /**
     * The endpoint name of the user pool. Example format: cognito-idp.REGION.amazonaws.com/xxxx_yyyyy
     */
    public /*out*/ readonly endpoint!: pulumi.Output<string>;
    /**
     * A container for the AWS Lambda triggers associated with the user pool.
     */
    public readonly lambdaConfig!: pulumi.Output<outputs.cognito.UserPoolLambdaConfig>;
    /**
     * The date the user pool was last modified.
     */
    public /*out*/ readonly lastModifiedDate!: pulumi.Output<string>;
    /**
     * Set to enable multi-factor authentication. Must be one of the following values (ON, OFF, OPTIONAL)
     */
    public readonly mfaConfiguration!: pulumi.Output<string | undefined>;
    /**
     * The name of the attribute.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A container for information about the user pool password policy.
     */
    public readonly passwordPolicy!: pulumi.Output<outputs.cognito.UserPoolPasswordPolicy>;
    /**
     * A container with the schema attributes of a user pool. Maximum of 50 attributes.
     */
    public readonly schemas!: pulumi.Output<outputs.cognito.UserPoolSchema[] | undefined>;
    /**
     * A string representing the SMS authentication message.
     */
    public readonly smsAuthenticationMessage!: pulumi.Output<string | undefined>;
    /**
     * The SMS Configuration.
     */
    public readonly smsConfiguration!: pulumi.Output<outputs.cognito.UserPoolSmsConfiguration | undefined>;
    /**
     * A string representing the SMS verification message. Conflicts with `verificationMessageTemplate` configuration block `smsMessage` argument.
     */
    public readonly smsVerificationMessage!: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the User Pool.
     */
    public readonly tags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * Configuration block for user pool add-ons to enable user pool advanced security mode features.
     */
    public readonly userPoolAddOns!: pulumi.Output<outputs.cognito.UserPoolUserPoolAddOns | undefined>;
    /**
     * Specifies whether email addresses or phone numbers can be specified as usernames when a user signs up. Conflicts with `aliasAttributes`.
     */
    public readonly usernameAttributes!: pulumi.Output<string[] | undefined>;
    /**
     * The verification message templates configuration.
     */
    public readonly verificationMessageTemplate!: pulumi.Output<outputs.cognito.UserPoolVerificationMessageTemplate>;

    /**
     * Create a UserPool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: UserPoolArgs, opts?: pulumi.CustomResourceOptions);
    constructor(name: string, argsOrState: UserPoolArgs | UserPoolState = {}, opts: pulumi.CustomResourceOptions = {}) {
        const inputs: pulumi.Inputs = {};
        if (opts.id) {
            const state = argsOrState as UserPoolState;
            inputs.adminCreateUserConfig = state.adminCreateUserConfig;
            inputs.aliasAttributes = state.aliasAttributes;
            inputs.arn = state.arn;
            inputs.autoVerifiedAttributes = state.autoVerifiedAttributes;
            inputs.creationDate = state.creationDate;
            inputs.deviceConfiguration = state.deviceConfiguration;
            inputs.emailConfiguration = state.emailConfiguration;
            inputs.emailVerificationMessage = state.emailVerificationMessage;
            inputs.emailVerificationSubject = state.emailVerificationSubject;
            inputs.endpoint = state.endpoint;
            inputs.lambdaConfig = state.lambdaConfig;
            inputs.lastModifiedDate = state.lastModifiedDate;
            inputs.mfaConfiguration = state.mfaConfiguration;
            inputs.name = state.name;
            inputs.passwordPolicy = state.passwordPolicy;
            inputs.schemas = state.schemas;
            inputs.smsAuthenticationMessage = state.smsAuthenticationMessage;
            inputs.smsConfiguration = state.smsConfiguration;
            inputs.smsVerificationMessage = state.smsVerificationMessage;
            inputs.tags = state.tags;
            inputs.userPoolAddOns = state.userPoolAddOns;
            inputs.usernameAttributes = state.usernameAttributes;
            inputs.verificationMessageTemplate = state.verificationMessageTemplate;
        } else {
            const args = argsOrState as UserPoolArgs;
            inputs.adminCreateUserConfig = args.adminCreateUserConfig;
            inputs.aliasAttributes = args.aliasAttributes;
            inputs.autoVerifiedAttributes = args.autoVerifiedAttributes;
            inputs.deviceConfiguration = args.deviceConfiguration;
            inputs.emailConfiguration = args.emailConfiguration;
            inputs.emailVerificationMessage = args.emailVerificationMessage;
            inputs.emailVerificationSubject = args.emailVerificationSubject;
            inputs.lambdaConfig = args.lambdaConfig;
            inputs.mfaConfiguration = args.mfaConfiguration;
            inputs.name = args.name;
            inputs.passwordPolicy = args.passwordPolicy;
            inputs.schemas = args.schemas;
            inputs.smsAuthenticationMessage = args.smsAuthenticationMessage;
            inputs.smsConfiguration = args.smsConfiguration;
            inputs.smsVerificationMessage = args.smsVerificationMessage;
            inputs.tags = args.tags;
            inputs.userPoolAddOns = args.userPoolAddOns;
            inputs.usernameAttributes = args.usernameAttributes;
            inputs.verificationMessageTemplate = args.verificationMessageTemplate;
            inputs.arn = undefined /*out*/;
            inputs.creationDate = undefined /*out*/;
            inputs.endpoint = undefined /*out*/;
            inputs.lastModifiedDate = undefined /*out*/;
        }
        opts.version = opts.version || utilities.getVersion();
        super(UserPool.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering UserPool resources.
 */
export interface UserPoolState {
    /**
     * The configuration for AdminCreateUser requests.
     */
    readonly adminCreateUserConfig?: pulumi.Input<inputs.cognito.UserPoolAdminCreateUserConfig>;
    /**
     * Attributes supported as an alias for this user pool. Possible values: phone_number, email, or preferred_username. Conflicts with `usernameAttributes`.
     */
    readonly aliasAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ARN of the user pool.
     */
    readonly arn?: pulumi.Input<string>;
    /**
     * The attributes to be auto-verified. Possible values: email, phone_number.
     */
    readonly autoVerifiedAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The date the user pool was created.
     */
    readonly creationDate?: pulumi.Input<string>;
    /**
     * The configuration for the user pool's device tracking.
     */
    readonly deviceConfiguration?: pulumi.Input<inputs.cognito.UserPoolDeviceConfiguration>;
    /**
     * The Email Configuration.
     */
    readonly emailConfiguration?: pulumi.Input<inputs.cognito.UserPoolEmailConfiguration>;
    /**
     * A string representing the email verification message. Conflicts with `verificationMessageTemplate` configuration block `emailMessage` argument.
     */
    readonly emailVerificationMessage?: pulumi.Input<string>;
    /**
     * A string representing the email verification subject. Conflicts with `verificationMessageTemplate` configuration block `emailSubject` argument.
     */
    readonly emailVerificationSubject?: pulumi.Input<string>;
    /**
     * The endpoint name of the user pool. Example format: cognito-idp.REGION.amazonaws.com/xxxx_yyyyy
     */
    readonly endpoint?: pulumi.Input<string>;
    /**
     * A container for the AWS Lambda triggers associated with the user pool.
     */
    readonly lambdaConfig?: pulumi.Input<inputs.cognito.UserPoolLambdaConfig>;
    /**
     * The date the user pool was last modified.
     */
    readonly lastModifiedDate?: pulumi.Input<string>;
    /**
     * Set to enable multi-factor authentication. Must be one of the following values (ON, OFF, OPTIONAL)
     */
    readonly mfaConfiguration?: pulumi.Input<string>;
    /**
     * The name of the attribute.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * A container for information about the user pool password policy.
     */
    readonly passwordPolicy?: pulumi.Input<inputs.cognito.UserPoolPasswordPolicy>;
    /**
     * A container with the schema attributes of a user pool. Maximum of 50 attributes.
     */
    readonly schemas?: pulumi.Input<pulumi.Input<inputs.cognito.UserPoolSchema>[]>;
    /**
     * A string representing the SMS authentication message.
     */
    readonly smsAuthenticationMessage?: pulumi.Input<string>;
    /**
     * The SMS Configuration.
     */
    readonly smsConfiguration?: pulumi.Input<inputs.cognito.UserPoolSmsConfiguration>;
    /**
     * A string representing the SMS verification message. Conflicts with `verificationMessageTemplate` configuration block `smsMessage` argument.
     */
    readonly smsVerificationMessage?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the User Pool.
     */
    readonly tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Configuration block for user pool add-ons to enable user pool advanced security mode features.
     */
    readonly userPoolAddOns?: pulumi.Input<inputs.cognito.UserPoolUserPoolAddOns>;
    /**
     * Specifies whether email addresses or phone numbers can be specified as usernames when a user signs up. Conflicts with `aliasAttributes`.
     */
    readonly usernameAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The verification message templates configuration.
     */
    readonly verificationMessageTemplate?: pulumi.Input<inputs.cognito.UserPoolVerificationMessageTemplate>;
}

/**
 * The set of arguments for constructing a UserPool resource.
 */
export interface UserPoolArgs {
    /**
     * The configuration for AdminCreateUser requests.
     */
    readonly adminCreateUserConfig?: pulumi.Input<inputs.cognito.UserPoolAdminCreateUserConfig>;
    /**
     * Attributes supported as an alias for this user pool. Possible values: phone_number, email, or preferred_username. Conflicts with `usernameAttributes`.
     */
    readonly aliasAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The attributes to be auto-verified. Possible values: email, phone_number.
     */
    readonly autoVerifiedAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The configuration for the user pool's device tracking.
     */
    readonly deviceConfiguration?: pulumi.Input<inputs.cognito.UserPoolDeviceConfiguration>;
    /**
     * The Email Configuration.
     */
    readonly emailConfiguration?: pulumi.Input<inputs.cognito.UserPoolEmailConfiguration>;
    /**
     * A string representing the email verification message. Conflicts with `verificationMessageTemplate` configuration block `emailMessage` argument.
     */
    readonly emailVerificationMessage?: pulumi.Input<string>;
    /**
     * A string representing the email verification subject. Conflicts with `verificationMessageTemplate` configuration block `emailSubject` argument.
     */
    readonly emailVerificationSubject?: pulumi.Input<string>;
    /**
     * A container for the AWS Lambda triggers associated with the user pool.
     */
    readonly lambdaConfig?: pulumi.Input<inputs.cognito.UserPoolLambdaConfig>;
    /**
     * Set to enable multi-factor authentication. Must be one of the following values (ON, OFF, OPTIONAL)
     */
    readonly mfaConfiguration?: pulumi.Input<string>;
    /**
     * The name of the attribute.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * A container for information about the user pool password policy.
     */
    readonly passwordPolicy?: pulumi.Input<inputs.cognito.UserPoolPasswordPolicy>;
    /**
     * A container with the schema attributes of a user pool. Maximum of 50 attributes.
     */
    readonly schemas?: pulumi.Input<pulumi.Input<inputs.cognito.UserPoolSchema>[]>;
    /**
     * A string representing the SMS authentication message.
     */
    readonly smsAuthenticationMessage?: pulumi.Input<string>;
    /**
     * The SMS Configuration.
     */
    readonly smsConfiguration?: pulumi.Input<inputs.cognito.UserPoolSmsConfiguration>;
    /**
     * A string representing the SMS verification message. Conflicts with `verificationMessageTemplate` configuration block `smsMessage` argument.
     */
    readonly smsVerificationMessage?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the User Pool.
     */
    readonly tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Configuration block for user pool add-ons to enable user pool advanced security mode features.
     */
    readonly userPoolAddOns?: pulumi.Input<inputs.cognito.UserPoolUserPoolAddOns>;
    /**
     * Specifies whether email addresses or phone numbers can be specified as usernames when a user signs up. Conflicts with `aliasAttributes`.
     */
    readonly usernameAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The verification message templates configuration.
     */
    readonly verificationMessageTemplate?: pulumi.Input<inputs.cognito.UserPoolVerificationMessageTemplate>;
}
