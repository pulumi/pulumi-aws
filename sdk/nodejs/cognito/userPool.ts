// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Cognito User Pool resource.
 * 
 * ## Example Usage
 * 
 * ### Basic configuration
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const pool = new aws.cognito.UserPool("pool", {});
 * ```
 */
export class UserPool extends pulumi.CustomResource {
    /**
     * Get an existing UserPool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserPoolState, opts?: pulumi.CustomResourceOptions): UserPool {
        return new UserPool(name, <any>state, { ...opts, id: id });
    }

    /**
     * The configuration for AdminCreateUser requests.
     */
    public readonly adminCreateUserConfig: pulumi.Output<{ allowAdminCreateUserOnly?: boolean, inviteMessageTemplate?: { emailMessage?: string, emailSubject?: string, smsMessage?: string }, unusedAccountValidityDays?: number }>;
    /**
     * Attributes supported as an alias for this user pool. Possible values: phone_number, email, or preferred_username. Conflicts with `username_attributes`.
     */
    public readonly aliasAttributes: pulumi.Output<string[] | undefined>;
    /**
     * The ARN of the user pool.
     */
    public /*out*/ readonly arn: pulumi.Output<string>;
    /**
     * The attributes to be auto-verified. Possible values: email, phone_number.
     */
    public readonly autoVerifiedAttributes: pulumi.Output<string[] | undefined>;
    /**
     * The date the user pool was created.
     */
    public /*out*/ readonly creationDate: pulumi.Output<string>;
    /**
     * The configuration for the user pool's device tracking.
     */
    public readonly deviceConfiguration: pulumi.Output<{ challengeRequiredOnNewDevice?: boolean, deviceOnlyRememberedOnUserPrompt?: boolean } | undefined>;
    /**
     * The Email Configuration.
     */
    public readonly emailConfiguration: pulumi.Output<{ replyToEmailAddress?: string, sourceArn?: string } | undefined>;
    /**
     * A string representing the email verification message. Conflicts with `verification_message_template` configuration block `email_message` argument.
     */
    public readonly emailVerificationMessage: pulumi.Output<string>;
    /**
     * A string representing the email verification subject. Conflicts with `verification_message_template` configuration block `email_subject` argument.
     */
    public readonly emailVerificationSubject: pulumi.Output<string>;
    /**
     * The endpoint name of the user pool. Example format: cognito-idp.REGION.amazonaws.com/xxxx_yyyyy
     */
    public /*out*/ readonly endpoint: pulumi.Output<string>;
    /**
     * A container for the AWS Lambda triggers associated with the user pool.
     */
    public readonly lambdaConfig: pulumi.Output<{ createAuthChallenge?: string, customMessage?: string, defineAuthChallenge?: string, postAuthentication?: string, postConfirmation?: string, preAuthentication?: string, preSignUp?: string, preTokenGeneration?: string, userMigration?: string, verifyAuthChallengeResponse?: string }>;
    /**
     * The date the user pool was last modified.
     */
    public /*out*/ readonly lastModifiedDate: pulumi.Output<string>;
    /**
     * Set to enable multi-factor authentication. Must be one of the following values (ON, OFF, OPTIONAL)
     */
    public readonly mfaConfiguration: pulumi.Output<string | undefined>;
    /**
     * The name of the attribute.
     */
    public readonly name: pulumi.Output<string>;
    /**
     * A container for information about the user pool password policy.
     */
    public readonly passwordPolicy: pulumi.Output<{ minimumLength?: number, requireLowercase?: boolean, requireNumbers?: boolean, requireSymbols?: boolean, requireUppercase?: boolean }>;
    /**
     * A container with the schema attributes of a user pool. Maximum of 50 attributes.
     */
    public readonly schemas: pulumi.Output<{ attributeDataType: string, developerOnlyAttribute?: boolean, mutable?: boolean, name: string, numberAttributeConstraints?: { maxValue?: string, minValue?: string }, required?: boolean, stringAttributeConstraints?: { maxLength?: string, minLength?: string } }[] | undefined>;
    /**
     * A string representing the SMS authentication message.
     */
    public readonly smsAuthenticationMessage: pulumi.Output<string | undefined>;
    /**
     * The SMS Configuration.
     */
    public readonly smsConfiguration: pulumi.Output<{ externalId: string, snsCallerArn: string } | undefined>;
    /**
     * A string representing the SMS verification message. Conflicts with `verification_message_template` configuration block `sms_message` argument.
     */
    public readonly smsVerificationMessage: pulumi.Output<string | undefined>;
    /**
     * A mapping of tags to assign to the User Pool.
     */
    public readonly tags: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * Configuration block for user pool add-ons to enable user pool advanced security mode features.
     */
    public readonly userPoolAddOns: pulumi.Output<{ advancedSecurityMode: string } | undefined>;
    /**
     * Specifies whether email addresses or phone numbers can be specified as usernames when a user signs up. Conflicts with `alias_attributes`.
     */
    public readonly usernameAttributes: pulumi.Output<string[] | undefined>;
    /**
     * The verification message templates configuration.
     */
    public readonly verificationMessageTemplate: pulumi.Output<{ defaultEmailOption?: string, emailMessage: string, emailMessageByLink: string, emailSubject: string, emailSubjectByLink: string, smsMessage: string }>;

    /**
     * Create a UserPool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: UserPoolArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UserPoolArgs | UserPoolState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: UserPoolState = argsOrState as UserPoolState | undefined;
            inputs["adminCreateUserConfig"] = state ? state.adminCreateUserConfig : undefined;
            inputs["aliasAttributes"] = state ? state.aliasAttributes : undefined;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["autoVerifiedAttributes"] = state ? state.autoVerifiedAttributes : undefined;
            inputs["creationDate"] = state ? state.creationDate : undefined;
            inputs["deviceConfiguration"] = state ? state.deviceConfiguration : undefined;
            inputs["emailConfiguration"] = state ? state.emailConfiguration : undefined;
            inputs["emailVerificationMessage"] = state ? state.emailVerificationMessage : undefined;
            inputs["emailVerificationSubject"] = state ? state.emailVerificationSubject : undefined;
            inputs["endpoint"] = state ? state.endpoint : undefined;
            inputs["lambdaConfig"] = state ? state.lambdaConfig : undefined;
            inputs["lastModifiedDate"] = state ? state.lastModifiedDate : undefined;
            inputs["mfaConfiguration"] = state ? state.mfaConfiguration : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["passwordPolicy"] = state ? state.passwordPolicy : undefined;
            inputs["schemas"] = state ? state.schemas : undefined;
            inputs["smsAuthenticationMessage"] = state ? state.smsAuthenticationMessage : undefined;
            inputs["smsConfiguration"] = state ? state.smsConfiguration : undefined;
            inputs["smsVerificationMessage"] = state ? state.smsVerificationMessage : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["userPoolAddOns"] = state ? state.userPoolAddOns : undefined;
            inputs["usernameAttributes"] = state ? state.usernameAttributes : undefined;
            inputs["verificationMessageTemplate"] = state ? state.verificationMessageTemplate : undefined;
        } else {
            const args = argsOrState as UserPoolArgs | undefined;
            inputs["adminCreateUserConfig"] = args ? args.adminCreateUserConfig : undefined;
            inputs["aliasAttributes"] = args ? args.aliasAttributes : undefined;
            inputs["autoVerifiedAttributes"] = args ? args.autoVerifiedAttributes : undefined;
            inputs["deviceConfiguration"] = args ? args.deviceConfiguration : undefined;
            inputs["emailConfiguration"] = args ? args.emailConfiguration : undefined;
            inputs["emailVerificationMessage"] = args ? args.emailVerificationMessage : undefined;
            inputs["emailVerificationSubject"] = args ? args.emailVerificationSubject : undefined;
            inputs["lambdaConfig"] = args ? args.lambdaConfig : undefined;
            inputs["mfaConfiguration"] = args ? args.mfaConfiguration : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["passwordPolicy"] = args ? args.passwordPolicy : undefined;
            inputs["schemas"] = args ? args.schemas : undefined;
            inputs["smsAuthenticationMessage"] = args ? args.smsAuthenticationMessage : undefined;
            inputs["smsConfiguration"] = args ? args.smsConfiguration : undefined;
            inputs["smsVerificationMessage"] = args ? args.smsVerificationMessage : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["userPoolAddOns"] = args ? args.userPoolAddOns : undefined;
            inputs["usernameAttributes"] = args ? args.usernameAttributes : undefined;
            inputs["verificationMessageTemplate"] = args ? args.verificationMessageTemplate : undefined;
            inputs["arn"] = undefined /*out*/;
            inputs["creationDate"] = undefined /*out*/;
            inputs["endpoint"] = undefined /*out*/;
            inputs["lastModifiedDate"] = undefined /*out*/;
        }
        super("aws:cognito/userPool:UserPool", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering UserPool resources.
 */
export interface UserPoolState {
    /**
     * The configuration for AdminCreateUser requests.
     */
    readonly adminCreateUserConfig?: pulumi.Input<{ allowAdminCreateUserOnly?: pulumi.Input<boolean>, inviteMessageTemplate?: pulumi.Input<{ emailMessage?: pulumi.Input<string>, emailSubject?: pulumi.Input<string>, smsMessage?: pulumi.Input<string> }>, unusedAccountValidityDays?: pulumi.Input<number> }>;
    /**
     * Attributes supported as an alias for this user pool. Possible values: phone_number, email, or preferred_username. Conflicts with `username_attributes`.
     */
    readonly aliasAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ARN of the user pool.
     */
    readonly arn?: pulumi.Input<string>;
    /**
     * The attributes to be auto-verified. Possible values: email, phone_number.
     */
    readonly autoVerifiedAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The date the user pool was created.
     */
    readonly creationDate?: pulumi.Input<string>;
    /**
     * The configuration for the user pool's device tracking.
     */
    readonly deviceConfiguration?: pulumi.Input<{ challengeRequiredOnNewDevice?: pulumi.Input<boolean>, deviceOnlyRememberedOnUserPrompt?: pulumi.Input<boolean> }>;
    /**
     * The Email Configuration.
     */
    readonly emailConfiguration?: pulumi.Input<{ replyToEmailAddress?: pulumi.Input<string>, sourceArn?: pulumi.Input<string> }>;
    /**
     * A string representing the email verification message. Conflicts with `verification_message_template` configuration block `email_message` argument.
     */
    readonly emailVerificationMessage?: pulumi.Input<string>;
    /**
     * A string representing the email verification subject. Conflicts with `verification_message_template` configuration block `email_subject` argument.
     */
    readonly emailVerificationSubject?: pulumi.Input<string>;
    /**
     * The endpoint name of the user pool. Example format: cognito-idp.REGION.amazonaws.com/xxxx_yyyyy
     */
    readonly endpoint?: pulumi.Input<string>;
    /**
     * A container for the AWS Lambda triggers associated with the user pool.
     */
    readonly lambdaConfig?: pulumi.Input<{ createAuthChallenge?: pulumi.Input<string>, customMessage?: pulumi.Input<string>, defineAuthChallenge?: pulumi.Input<string>, postAuthentication?: pulumi.Input<string>, postConfirmation?: pulumi.Input<string>, preAuthentication?: pulumi.Input<string>, preSignUp?: pulumi.Input<string>, preTokenGeneration?: pulumi.Input<string>, userMigration?: pulumi.Input<string>, verifyAuthChallengeResponse?: pulumi.Input<string> }>;
    /**
     * The date the user pool was last modified.
     */
    readonly lastModifiedDate?: pulumi.Input<string>;
    /**
     * Set to enable multi-factor authentication. Must be one of the following values (ON, OFF, OPTIONAL)
     */
    readonly mfaConfiguration?: pulumi.Input<string>;
    /**
     * The name of the attribute.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * A container for information about the user pool password policy.
     */
    readonly passwordPolicy?: pulumi.Input<{ minimumLength?: pulumi.Input<number>, requireLowercase?: pulumi.Input<boolean>, requireNumbers?: pulumi.Input<boolean>, requireSymbols?: pulumi.Input<boolean>, requireUppercase?: pulumi.Input<boolean> }>;
    /**
     * A container with the schema attributes of a user pool. Maximum of 50 attributes.
     */
    readonly schemas?: pulumi.Input<pulumi.Input<{ attributeDataType: pulumi.Input<string>, developerOnlyAttribute?: pulumi.Input<boolean>, mutable?: pulumi.Input<boolean>, name: pulumi.Input<string>, numberAttributeConstraints?: pulumi.Input<{ maxValue?: pulumi.Input<string>, minValue?: pulumi.Input<string> }>, required?: pulumi.Input<boolean>, stringAttributeConstraints?: pulumi.Input<{ maxLength?: pulumi.Input<string>, minLength?: pulumi.Input<string> }> }>[]>;
    /**
     * A string representing the SMS authentication message.
     */
    readonly smsAuthenticationMessage?: pulumi.Input<string>;
    /**
     * The SMS Configuration.
     */
    readonly smsConfiguration?: pulumi.Input<{ externalId: pulumi.Input<string>, snsCallerArn: pulumi.Input<string> }>;
    /**
     * A string representing the SMS verification message. Conflicts with `verification_message_template` configuration block `sms_message` argument.
     */
    readonly smsVerificationMessage?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the User Pool.
     */
    readonly tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Configuration block for user pool add-ons to enable user pool advanced security mode features.
     */
    readonly userPoolAddOns?: pulumi.Input<{ advancedSecurityMode: pulumi.Input<string> }>;
    /**
     * Specifies whether email addresses or phone numbers can be specified as usernames when a user signs up. Conflicts with `alias_attributes`.
     */
    readonly usernameAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The verification message templates configuration.
     */
    readonly verificationMessageTemplate?: pulumi.Input<{ defaultEmailOption?: pulumi.Input<string>, emailMessage?: pulumi.Input<string>, emailMessageByLink?: pulumi.Input<string>, emailSubject?: pulumi.Input<string>, emailSubjectByLink?: pulumi.Input<string>, smsMessage?: pulumi.Input<string> }>;
}

/**
 * The set of arguments for constructing a UserPool resource.
 */
export interface UserPoolArgs {
    /**
     * The configuration for AdminCreateUser requests.
     */
    readonly adminCreateUserConfig?: pulumi.Input<{ allowAdminCreateUserOnly?: pulumi.Input<boolean>, inviteMessageTemplate?: pulumi.Input<{ emailMessage?: pulumi.Input<string>, emailSubject?: pulumi.Input<string>, smsMessage?: pulumi.Input<string> }>, unusedAccountValidityDays?: pulumi.Input<number> }>;
    /**
     * Attributes supported as an alias for this user pool. Possible values: phone_number, email, or preferred_username. Conflicts with `username_attributes`.
     */
    readonly aliasAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The attributes to be auto-verified. Possible values: email, phone_number.
     */
    readonly autoVerifiedAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The configuration for the user pool's device tracking.
     */
    readonly deviceConfiguration?: pulumi.Input<{ challengeRequiredOnNewDevice?: pulumi.Input<boolean>, deviceOnlyRememberedOnUserPrompt?: pulumi.Input<boolean> }>;
    /**
     * The Email Configuration.
     */
    readonly emailConfiguration?: pulumi.Input<{ replyToEmailAddress?: pulumi.Input<string>, sourceArn?: pulumi.Input<string> }>;
    /**
     * A string representing the email verification message. Conflicts with `verification_message_template` configuration block `email_message` argument.
     */
    readonly emailVerificationMessage?: pulumi.Input<string>;
    /**
     * A string representing the email verification subject. Conflicts with `verification_message_template` configuration block `email_subject` argument.
     */
    readonly emailVerificationSubject?: pulumi.Input<string>;
    /**
     * A container for the AWS Lambda triggers associated with the user pool.
     */
    readonly lambdaConfig?: pulumi.Input<{ createAuthChallenge?: pulumi.Input<string>, customMessage?: pulumi.Input<string>, defineAuthChallenge?: pulumi.Input<string>, postAuthentication?: pulumi.Input<string>, postConfirmation?: pulumi.Input<string>, preAuthentication?: pulumi.Input<string>, preSignUp?: pulumi.Input<string>, preTokenGeneration?: pulumi.Input<string>, userMigration?: pulumi.Input<string>, verifyAuthChallengeResponse?: pulumi.Input<string> }>;
    /**
     * Set to enable multi-factor authentication. Must be one of the following values (ON, OFF, OPTIONAL)
     */
    readonly mfaConfiguration?: pulumi.Input<string>;
    /**
     * The name of the attribute.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * A container for information about the user pool password policy.
     */
    readonly passwordPolicy?: pulumi.Input<{ minimumLength?: pulumi.Input<number>, requireLowercase?: pulumi.Input<boolean>, requireNumbers?: pulumi.Input<boolean>, requireSymbols?: pulumi.Input<boolean>, requireUppercase?: pulumi.Input<boolean> }>;
    /**
     * A container with the schema attributes of a user pool. Maximum of 50 attributes.
     */
    readonly schemas?: pulumi.Input<pulumi.Input<{ attributeDataType: pulumi.Input<string>, developerOnlyAttribute?: pulumi.Input<boolean>, mutable?: pulumi.Input<boolean>, name: pulumi.Input<string>, numberAttributeConstraints?: pulumi.Input<{ maxValue?: pulumi.Input<string>, minValue?: pulumi.Input<string> }>, required?: pulumi.Input<boolean>, stringAttributeConstraints?: pulumi.Input<{ maxLength?: pulumi.Input<string>, minLength?: pulumi.Input<string> }> }>[]>;
    /**
     * A string representing the SMS authentication message.
     */
    readonly smsAuthenticationMessage?: pulumi.Input<string>;
    /**
     * The SMS Configuration.
     */
    readonly smsConfiguration?: pulumi.Input<{ externalId: pulumi.Input<string>, snsCallerArn: pulumi.Input<string> }>;
    /**
     * A string representing the SMS verification message. Conflicts with `verification_message_template` configuration block `sms_message` argument.
     */
    readonly smsVerificationMessage?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the User Pool.
     */
    readonly tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Configuration block for user pool add-ons to enable user pool advanced security mode features.
     */
    readonly userPoolAddOns?: pulumi.Input<{ advancedSecurityMode: pulumi.Input<string> }>;
    /**
     * Specifies whether email addresses or phone numbers can be specified as usernames when a user signs up. Conflicts with `alias_attributes`.
     */
    readonly usernameAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The verification message templates configuration.
     */
    readonly verificationMessageTemplate?: pulumi.Input<{ defaultEmailOption?: pulumi.Input<string>, emailMessage?: pulumi.Input<string>, emailMessageByLink?: pulumi.Input<string>, emailSubject?: pulumi.Input<string>, emailSubjectByLink?: pulumi.Input<string>, smsMessage?: pulumi.Input<string> }>;
}
