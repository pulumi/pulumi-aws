// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Data source for managing an AWS Cognito User Pool.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.cognito.getUserPool({
 *     userPoolId: "us-west-2_aaaaaaaaa",
 * });
 * ```
 */
export function getUserPool(args: GetUserPoolArgs, opts?: pulumi.InvokeOptions): Promise<GetUserPoolResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:cognito/getUserPool:getUserPool", {
        "userPoolId": args.userPoolId,
    }, opts);
}

/**
 * A collection of arguments for invoking getUserPool.
 */
export interface GetUserPoolArgs {
    /**
     * The cognito pool ID
     */
    userPoolId: string;
}

/**
 * A collection of values returned by getUserPool.
 */
export interface GetUserPoolResult {
    readonly accountRecoverySettings: outputs.cognito.GetUserPoolAccountRecoverySetting[];
    readonly adminCreateUserConfigs: outputs.cognito.GetUserPoolAdminCreateUserConfig[];
    /**
     * ARN of the User Pool.
     * * accountRecoverySetting - The available verified method a user can use to recover their password when they call ForgotPassword. You can use this setting to define a preferred method when a user has more than one method available. With this setting, SMS doesn't qualify for a valid password recovery mechanism if the user also has SMS multi-factor authentication (MFA) activated. In the absence of this setting, Amazon Cognito uses the legacy behavior to determine the recovery method where SMS is preferred through email.
     * * adminCreateUserConfig - The configuration for AdminCreateUser requests.
     */
    readonly arn: string;
    /**
     * The attributes that are auto-verified in a user pool.
     */
    readonly autoVerifiedAttributes: string[];
    /**
     * The date and time, in ISO 8601 format, when the item was created.
     */
    readonly creationDate: string;
    /**
     * A custom domain name that you provide to Amazon Cognito. This parameter applies only if you use a custom domain to host the sign-up and sign-in pages for your application. An example of a custom domain name might be auth.example.com.
     */
    readonly customDomain: string;
    /**
     * When active, DeletionProtection prevents accidental deletion of your user pool. Before you can delete a user pool that you have protected against deletion, you must deactivate this feature.
     * * deviceConfiguration - The device-remembering configuration for a user pool. A null value indicates that you have deactivated device remembering in your user pool.
     */
    readonly deletionProtection: string;
    readonly deviceConfigurations: outputs.cognito.GetUserPoolDeviceConfiguration[];
    /**
     * The domain prefix, if the user pool has a domain associated with it.
     * * emailConfiguration - The email configuration of your user pool. The email configuration type sets your preferred sending method, AWS Region, and sender for messages from your user pool.
     */
    readonly domain: string;
    readonly emailConfigurations: outputs.cognito.GetUserPoolEmailConfiguration[];
    /**
     * A number estimating the size of the user pool.
     * * lambdaConfig - The AWS Lambda triggers associated with the user pool.
     */
    readonly estimatedNumberOfUsers: number;
    readonly id: string;
    readonly lambdaConfigs: outputs.cognito.GetUserPoolLambdaConfig[];
    /**
     * The date and time, in ISO 8601 format, when the item was modified.
     */
    readonly lastModifiedDate: string;
    /**
     * Can be one of the following values: `OFF` | `ON` | `OPTIONAL`
     */
    readonly mfaConfiguration: string;
    /**
     * - Name of the attribute.
     */
    readonly name: string;
    readonly schemaAttributes: outputs.cognito.GetUserPoolSchemaAttribute[];
    /**
     * The contents of the SMS authentication message.
     */
    readonly smsAuthenticationMessage: string;
    /**
     * The reason why the SMS configuration can't send the messages to your users.
     */
    readonly smsConfigurationFailure: string;
    /**
     * The contents of the SMS authentication message.
     */
    readonly smsVerificationMessage: string;
    /**
     * Map of tags assigned to the resource.
     */
    readonly tags: {[key: string]: string};
    readonly userPoolId: string;
    /**
     * (Deprecated) Map of tags assigned to the resource.
     *
     * @deprecated Use the attribute "tags" instead
     */
    readonly userPoolTags: {[key: string]: string};
    /**
     * Specifies whether a user can use an email address or phone number as a username when they sign up.
     */
    readonly usernameAttributes: string[];
}
/**
 * Data source for managing an AWS Cognito User Pool.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.cognito.getUserPool({
 *     userPoolId: "us-west-2_aaaaaaaaa",
 * });
 * ```
 */
export function getUserPoolOutput(args: GetUserPoolOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetUserPoolResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws:cognito/getUserPool:getUserPool", {
        "userPoolId": args.userPoolId,
    }, opts);
}

/**
 * A collection of arguments for invoking getUserPool.
 */
export interface GetUserPoolOutputArgs {
    /**
     * The cognito pool ID
     */
    userPoolId: pulumi.Input<string>;
}
