// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to get a list of Cognito user pools clients for a Cognito IdP user pool.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const main = aws.cognito.getUserPoolClients({
 *     userPoolId: aws_cognito_user_pool.main.id,
 * });
 * ```
 */
export function getUserPoolClients(args: GetUserPoolClientsArgs, opts?: pulumi.InvokeOptions): Promise<GetUserPoolClientsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws:cognito/getUserPoolClients:getUserPoolClients", {
        "userPoolId": args.userPoolId,
    }, opts);
}

/**
 * A collection of arguments for invoking getUserPoolClients.
 */
export interface GetUserPoolClientsArgs {
    /**
     * Cognito user pool ID.
     */
    userPoolId: string;
}

/**
 * A collection of values returned by getUserPoolClients.
 */
export interface GetUserPoolClientsResult {
    /**
     * List of Cognito user pool client IDs.
     */
    readonly clientIds: string[];
    /**
     * List of Cognito user pool client names.
     */
    readonly clientNames: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly userPoolId: string;
}

export function getUserPoolClientsOutput(args: GetUserPoolClientsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserPoolClientsResult> {
    return pulumi.output(args).apply(a => getUserPoolClients(a, opts))
}

/**
 * A collection of arguments for invoking getUserPoolClients.
 */
export interface GetUserPoolClientsOutputArgs {
    /**
     * Cognito user pool ID.
     */
    userPoolId: pulumi.Input<string>;
}
