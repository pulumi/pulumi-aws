// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Cognito User Pool UI Customization resource.
 *
 * > **Note:** To use this resource, the user pool must have a domain associated with it. For more information, see the Amazon Cognito Developer Guide on [Customizing the Built-in Sign-In and Sign-up Webpages](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-app-ui-customization.html).
 *
 * ## Example Usage
 *
 * ## Import
 *
 * Cognito User Pool UI Customizations can be imported using the `user_pool_id` and `client_id` separated by `,`, e.g.
 *
 * ```sh
 *  $ pulumi import aws:cognito/userPoolUICustomization:UserPoolUICustomization example us-west-2_ZCTarbt5C,12bu4fuk3mlgqa2rtrujgp6egq
 * ```
 */
export class UserPoolUICustomization extends pulumi.CustomResource {
    /**
     * Get an existing UserPoolUICustomization resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserPoolUICustomizationState, opts?: pulumi.CustomResourceOptions): UserPoolUICustomization {
        return new UserPoolUICustomization(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:cognito/userPoolUICustomization:UserPoolUICustomization';

    /**
     * Returns true if the given object is an instance of UserPoolUICustomization.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is UserPoolUICustomization {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UserPoolUICustomization.__pulumiType;
    }

    /**
     * The client ID for the client app. Defaults to `ALL`. If `ALL` is specified, the `css` and/or `imageFile` settings will be used for every client that has no UI customization set previously.
     */
    public readonly clientId!: pulumi.Output<string | undefined>;
    /**
     * The creation date in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) for the UI customization.
     */
    public /*out*/ readonly creationDate!: pulumi.Output<string>;
    /**
     * The CSS values in the UI customization, provided as a String. At least one of `css` or `imageFile` is required.
     */
    public readonly css!: pulumi.Output<string | undefined>;
    /**
     * The CSS version number.
     */
    public /*out*/ readonly cssVersion!: pulumi.Output<string>;
    /**
     * The uploaded logo image for the UI customization, provided as a base64-encoded String. Drift detection is not possible for this argument. At least one of `css` or `imageFile` is required.
     */
    public readonly imageFile!: pulumi.Output<string | undefined>;
    /**
     * The logo image URL for the UI customization.
     */
    public /*out*/ readonly imageUrl!: pulumi.Output<string>;
    /**
     * The last-modified date in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) for the UI customization.
     */
    public /*out*/ readonly lastModifiedDate!: pulumi.Output<string>;
    /**
     * The user pool ID for the user pool.
     */
    public readonly userPoolId!: pulumi.Output<string>;

    /**
     * Create a UserPoolUICustomization resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserPoolUICustomizationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UserPoolUICustomizationArgs | UserPoolUICustomizationState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UserPoolUICustomizationState | undefined;
            inputs["clientId"] = state ? state.clientId : undefined;
            inputs["creationDate"] = state ? state.creationDate : undefined;
            inputs["css"] = state ? state.css : undefined;
            inputs["cssVersion"] = state ? state.cssVersion : undefined;
            inputs["imageFile"] = state ? state.imageFile : undefined;
            inputs["imageUrl"] = state ? state.imageUrl : undefined;
            inputs["lastModifiedDate"] = state ? state.lastModifiedDate : undefined;
            inputs["userPoolId"] = state ? state.userPoolId : undefined;
        } else {
            const args = argsOrState as UserPoolUICustomizationArgs | undefined;
            if ((!args || args.userPoolId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userPoolId'");
            }
            inputs["clientId"] = args ? args.clientId : undefined;
            inputs["css"] = args ? args.css : undefined;
            inputs["imageFile"] = args ? args.imageFile : undefined;
            inputs["userPoolId"] = args ? args.userPoolId : undefined;
            inputs["creationDate"] = undefined /*out*/;
            inputs["cssVersion"] = undefined /*out*/;
            inputs["imageUrl"] = undefined /*out*/;
            inputs["lastModifiedDate"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(UserPoolUICustomization.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering UserPoolUICustomization resources.
 */
export interface UserPoolUICustomizationState {
    /**
     * The client ID for the client app. Defaults to `ALL`. If `ALL` is specified, the `css` and/or `imageFile` settings will be used for every client that has no UI customization set previously.
     */
    clientId?: pulumi.Input<string>;
    /**
     * The creation date in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) for the UI customization.
     */
    creationDate?: pulumi.Input<string>;
    /**
     * The CSS values in the UI customization, provided as a String. At least one of `css` or `imageFile` is required.
     */
    css?: pulumi.Input<string>;
    /**
     * The CSS version number.
     */
    cssVersion?: pulumi.Input<string>;
    /**
     * The uploaded logo image for the UI customization, provided as a base64-encoded String. Drift detection is not possible for this argument. At least one of `css` or `imageFile` is required.
     */
    imageFile?: pulumi.Input<string>;
    /**
     * The logo image URL for the UI customization.
     */
    imageUrl?: pulumi.Input<string>;
    /**
     * The last-modified date in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) for the UI customization.
     */
    lastModifiedDate?: pulumi.Input<string>;
    /**
     * The user pool ID for the user pool.
     */
    userPoolId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a UserPoolUICustomization resource.
 */
export interface UserPoolUICustomizationArgs {
    /**
     * The client ID for the client app. Defaults to `ALL`. If `ALL` is specified, the `css` and/or `imageFile` settings will be used for every client that has no UI customization set previously.
     */
    clientId?: pulumi.Input<string>;
    /**
     * The CSS values in the UI customization, provided as a String. At least one of `css` or `imageFile` is required.
     */
    css?: pulumi.Input<string>;
    /**
     * The uploaded logo image for the UI customization, provided as a base64-encoded String. Drift detection is not possible for this argument. At least one of `css` or `imageFile` is required.
     */
    imageFile?: pulumi.Input<string>;
    /**
     * The user pool ID for the user pool.
     */
    userPoolId: pulumi.Input<string>;
}
