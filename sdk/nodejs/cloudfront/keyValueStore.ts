// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS CloudFront Key Value Store.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.cloudfront.KeyValueStore("example", {
 *     name: "ExampleKeyValueStore",
 *     comment: "This is an example key value store",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * Using `pulumi import`, import CloudFront Key Value Store using the `name`. For example:
 *
 * ```sh
 * $ pulumi import aws:cloudfront/keyValueStore:KeyValueStore example example_store
 * ```
 */
export class KeyValueStore extends pulumi.CustomResource {
    /**
     * Get an existing KeyValueStore resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KeyValueStoreState, opts?: pulumi.CustomResourceOptions): KeyValueStore {
        return new KeyValueStore(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:cloudfront/keyValueStore:KeyValueStore';

    /**
     * Returns true if the given object is an instance of KeyValueStore.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KeyValueStore {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KeyValueStore.__pulumiType;
    }

    /**
     * Amazon Resource Name (ARN) identifying your CloudFront KeyValueStore.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Comment.
     */
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * ETag hash of the KeyValueStore.
     */
    public /*out*/ readonly etag!: pulumi.Output<string>;
    public /*out*/ readonly lastModifiedTime!: pulumi.Output<string>;
    /**
     * Unique name for your CloudFront KeyValueStore.
     *
     * The following arguments are optional:
     */
    public readonly name!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.cloudfront.KeyValueStoreTimeouts | undefined>;

    /**
     * Create a KeyValueStore resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: KeyValueStoreArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KeyValueStoreArgs | KeyValueStoreState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as KeyValueStoreState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["etag"] = state ? state.etag : undefined;
            resourceInputs["lastModifiedTime"] = state ? state.lastModifiedTime : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as KeyValueStoreArgs | undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["lastModifiedTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(KeyValueStore.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering KeyValueStore resources.
 */
export interface KeyValueStoreState {
    /**
     * Amazon Resource Name (ARN) identifying your CloudFront KeyValueStore.
     */
    arn?: pulumi.Input<string>;
    /**
     * Comment.
     */
    comment?: pulumi.Input<string>;
    /**
     * ETag hash of the KeyValueStore.
     */
    etag?: pulumi.Input<string>;
    lastModifiedTime?: pulumi.Input<string>;
    /**
     * Unique name for your CloudFront KeyValueStore.
     *
     * The following arguments are optional:
     */
    name?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.cloudfront.KeyValueStoreTimeouts>;
}

/**
 * The set of arguments for constructing a KeyValueStore resource.
 */
export interface KeyValueStoreArgs {
    /**
     * Comment.
     */
    comment?: pulumi.Input<string>;
    /**
     * Unique name for your CloudFront KeyValueStore.
     *
     * The following arguments are optional:
     */
    name?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.cloudfront.KeyValueStoreTimeouts>;
}
