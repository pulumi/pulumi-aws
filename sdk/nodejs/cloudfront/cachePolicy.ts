// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * The following example below creates a CloudFront cache policy.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.cloudfront.CachePolicy("example", {
 *     comment: "test comment",
 *     defaultTtl: 50,
 *     maxTtl: 100,
 *     minTtl: 1,
 *     parametersInCacheKeyAndForwardedToOrigin: {
 *         cookiesConfig: {
 *             cookieBehavior: "whitelist",
 *             cookies: {
 *                 items: ["example"],
 *             },
 *         },
 *         headersConfig: {
 *             headerBehavior: "whitelist",
 *             headers: {
 *                 items: ["example"],
 *             },
 *         },
 *         queryStringsConfig: {
 *             queryStringBehavior: "whitelist",
 *             queryStrings: {
 *                 items: ["example"],
 *             },
 *         },
 *     },
 * });
 * ```
 */
export class CachePolicy extends pulumi.CustomResource {
    /**
     * Get an existing CachePolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CachePolicyState, opts?: pulumi.CustomResourceOptions): CachePolicy {
        return new CachePolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:cloudfront/cachePolicy:CachePolicy';

    /**
     * Returns true if the given object is an instance of CachePolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CachePolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CachePolicy.__pulumiType;
    }

    /**
     * A comment to describe the cache policy.
     */
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * The default amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
     */
    public readonly defaultTtl!: pulumi.Output<number | undefined>;
    /**
     * The current version of the cache policy.
     */
    public readonly etag!: pulumi.Output<string>;
    /**
     * The maximum amount of time, in seconds, that objects stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
     */
    public readonly maxTtl!: pulumi.Output<number | undefined>;
    /**
     * The minimum amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
     */
    public readonly minTtl!: pulumi.Output<number | undefined>;
    /**
     * A unique name to identify the cache policy.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The HTTP headers, cookies, and URL query strings to include in the cache key. See Parameters In Cache Key And Forwarded To Origin for more information.
     */
    public readonly parametersInCacheKeyAndForwardedToOrigin!: pulumi.Output<outputs.cloudfront.CachePolicyParametersInCacheKeyAndForwardedToOrigin | undefined>;

    /**
     * Create a CachePolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: CachePolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CachePolicyArgs | CachePolicyState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CachePolicyState | undefined;
            inputs["comment"] = state ? state.comment : undefined;
            inputs["defaultTtl"] = state ? state.defaultTtl : undefined;
            inputs["etag"] = state ? state.etag : undefined;
            inputs["maxTtl"] = state ? state.maxTtl : undefined;
            inputs["minTtl"] = state ? state.minTtl : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["parametersInCacheKeyAndForwardedToOrigin"] = state ? state.parametersInCacheKeyAndForwardedToOrigin : undefined;
        } else {
            const args = argsOrState as CachePolicyArgs | undefined;
            inputs["comment"] = args ? args.comment : undefined;
            inputs["defaultTtl"] = args ? args.defaultTtl : undefined;
            inputs["etag"] = args ? args.etag : undefined;
            inputs["maxTtl"] = args ? args.maxTtl : undefined;
            inputs["minTtl"] = args ? args.minTtl : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["parametersInCacheKeyAndForwardedToOrigin"] = args ? args.parametersInCacheKeyAndForwardedToOrigin : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(CachePolicy.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CachePolicy resources.
 */
export interface CachePolicyState {
    /**
     * A comment to describe the cache policy.
     */
    readonly comment?: pulumi.Input<string>;
    /**
     * The default amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
     */
    readonly defaultTtl?: pulumi.Input<number>;
    /**
     * The current version of the cache policy.
     */
    readonly etag?: pulumi.Input<string>;
    /**
     * The maximum amount of time, in seconds, that objects stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
     */
    readonly maxTtl?: pulumi.Input<number>;
    /**
     * The minimum amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
     */
    readonly minTtl?: pulumi.Input<number>;
    /**
     * A unique name to identify the cache policy.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The HTTP headers, cookies, and URL query strings to include in the cache key. See Parameters In Cache Key And Forwarded To Origin for more information.
     */
    readonly parametersInCacheKeyAndForwardedToOrigin?: pulumi.Input<inputs.cloudfront.CachePolicyParametersInCacheKeyAndForwardedToOrigin>;
}

/**
 * The set of arguments for constructing a CachePolicy resource.
 */
export interface CachePolicyArgs {
    /**
     * A comment to describe the cache policy.
     */
    readonly comment?: pulumi.Input<string>;
    /**
     * The default amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
     */
    readonly defaultTtl?: pulumi.Input<number>;
    /**
     * The current version of the cache policy.
     */
    readonly etag?: pulumi.Input<string>;
    /**
     * The maximum amount of time, in seconds, that objects stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
     */
    readonly maxTtl?: pulumi.Input<number>;
    /**
     * The minimum amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
     */
    readonly minTtl?: pulumi.Input<number>;
    /**
     * A unique name to identify the cache policy.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The HTTP headers, cookies, and URL query strings to include in the cache key. See Parameters In Cache Key And Forwarded To Origin for more information.
     */
    readonly parametersInCacheKeyAndForwardedToOrigin?: pulumi.Input<inputs.cloudfront.CachePolicyParametersInCacheKeyAndForwardedToOrigin>;
}
