// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export class Distribution extends pulumi.CustomResource {
    /**
     * Get an existing Distribution resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DistributionState, opts?: pulumi.CustomResourceOptions): Distribution {
        return new Distribution(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:cloudfront/distribution:Distribution';

    /**
     * Returns true if the given object is an instance of Distribution.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Distribution {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Distribution.__pulumiType;
    }

    public readonly aliases!: pulumi.Output<string[] | undefined>;
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public /*out*/ readonly callerReference!: pulumi.Output<string>;
    public readonly comment!: pulumi.Output<string | undefined>;
    public readonly customErrorResponses!: pulumi.Output<outputs.cloudfront.DistributionCustomErrorResponse[] | undefined>;
    public readonly defaultCacheBehavior!: pulumi.Output<outputs.cloudfront.DistributionDefaultCacheBehavior>;
    public readonly defaultRootObject!: pulumi.Output<string | undefined>;
    public /*out*/ readonly domainName!: pulumi.Output<string>;
    public readonly enabled!: pulumi.Output<boolean>;
    public /*out*/ readonly etag!: pulumi.Output<string>;
    public /*out*/ readonly hostedZoneId!: pulumi.Output<string>;
    public readonly httpVersion!: pulumi.Output<string | undefined>;
    public /*out*/ readonly inProgressValidationBatches!: pulumi.Output<number>;
    public readonly isIpv6Enabled!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly lastModifiedTime!: pulumi.Output<string>;
    public readonly loggingConfig!: pulumi.Output<outputs.cloudfront.DistributionLoggingConfig | undefined>;
    public readonly orderedCacheBehaviors!: pulumi.Output<outputs.cloudfront.DistributionOrderedCacheBehavior[] | undefined>;
    public readonly originGroups!: pulumi.Output<outputs.cloudfront.DistributionOriginGroup[] | undefined>;
    public readonly origins!: pulumi.Output<outputs.cloudfront.DistributionOrigin[]>;
    public readonly priceClass!: pulumi.Output<string | undefined>;
    public readonly restrictions!: pulumi.Output<outputs.cloudfront.DistributionRestrictions>;
    public readonly retainOnDelete!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly trustedKeyGroups!: pulumi.Output<outputs.cloudfront.DistributionTrustedKeyGroup[]>;
    public /*out*/ readonly trustedSigners!: pulumi.Output<outputs.cloudfront.DistributionTrustedSigner[]>;
    public readonly viewerCertificate!: pulumi.Output<outputs.cloudfront.DistributionViewerCertificate>;
    public readonly waitForDeployment!: pulumi.Output<boolean | undefined>;
    public readonly webAclId!: pulumi.Output<string | undefined>;

    /**
     * Create a Distribution resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DistributionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DistributionArgs | DistributionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DistributionState | undefined;
            resourceInputs["aliases"] = state ? state.aliases : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["callerReference"] = state ? state.callerReference : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["customErrorResponses"] = state ? state.customErrorResponses : undefined;
            resourceInputs["defaultCacheBehavior"] = state ? state.defaultCacheBehavior : undefined;
            resourceInputs["defaultRootObject"] = state ? state.defaultRootObject : undefined;
            resourceInputs["domainName"] = state ? state.domainName : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["etag"] = state ? state.etag : undefined;
            resourceInputs["hostedZoneId"] = state ? state.hostedZoneId : undefined;
            resourceInputs["httpVersion"] = state ? state.httpVersion : undefined;
            resourceInputs["inProgressValidationBatches"] = state ? state.inProgressValidationBatches : undefined;
            resourceInputs["isIpv6Enabled"] = state ? state.isIpv6Enabled : undefined;
            resourceInputs["lastModifiedTime"] = state ? state.lastModifiedTime : undefined;
            resourceInputs["loggingConfig"] = state ? state.loggingConfig : undefined;
            resourceInputs["orderedCacheBehaviors"] = state ? state.orderedCacheBehaviors : undefined;
            resourceInputs["originGroups"] = state ? state.originGroups : undefined;
            resourceInputs["origins"] = state ? state.origins : undefined;
            resourceInputs["priceClass"] = state ? state.priceClass : undefined;
            resourceInputs["restrictions"] = state ? state.restrictions : undefined;
            resourceInputs["retainOnDelete"] = state ? state.retainOnDelete : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["trustedKeyGroups"] = state ? state.trustedKeyGroups : undefined;
            resourceInputs["trustedSigners"] = state ? state.trustedSigners : undefined;
            resourceInputs["viewerCertificate"] = state ? state.viewerCertificate : undefined;
            resourceInputs["waitForDeployment"] = state ? state.waitForDeployment : undefined;
            resourceInputs["webAclId"] = state ? state.webAclId : undefined;
        } else {
            const args = argsOrState as DistributionArgs | undefined;
            if ((!args || args.defaultCacheBehavior === undefined) && !opts.urn) {
                throw new Error("Missing required property 'defaultCacheBehavior'");
            }
            if ((!args || args.enabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if ((!args || args.origins === undefined) && !opts.urn) {
                throw new Error("Missing required property 'origins'");
            }
            if ((!args || args.restrictions === undefined) && !opts.urn) {
                throw new Error("Missing required property 'restrictions'");
            }
            if ((!args || args.viewerCertificate === undefined) && !opts.urn) {
                throw new Error("Missing required property 'viewerCertificate'");
            }
            resourceInputs["aliases"] = args ? args.aliases : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["customErrorResponses"] = args ? args.customErrorResponses : undefined;
            resourceInputs["defaultCacheBehavior"] = args ? args.defaultCacheBehavior : undefined;
            resourceInputs["defaultRootObject"] = args ? args.defaultRootObject : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["httpVersion"] = args ? args.httpVersion : undefined;
            resourceInputs["isIpv6Enabled"] = args ? args.isIpv6Enabled : undefined;
            resourceInputs["loggingConfig"] = args ? args.loggingConfig : undefined;
            resourceInputs["orderedCacheBehaviors"] = args ? args.orderedCacheBehaviors : undefined;
            resourceInputs["originGroups"] = args ? args.originGroups : undefined;
            resourceInputs["origins"] = args ? args.origins : undefined;
            resourceInputs["priceClass"] = args ? args.priceClass : undefined;
            resourceInputs["restrictions"] = args ? args.restrictions : undefined;
            resourceInputs["retainOnDelete"] = args ? args.retainOnDelete : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["viewerCertificate"] = args ? args.viewerCertificate : undefined;
            resourceInputs["waitForDeployment"] = args ? args.waitForDeployment : undefined;
            resourceInputs["webAclId"] = args ? args.webAclId : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["callerReference"] = undefined /*out*/;
            resourceInputs["domainName"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["hostedZoneId"] = undefined /*out*/;
            resourceInputs["inProgressValidationBatches"] = undefined /*out*/;
            resourceInputs["lastModifiedTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
            resourceInputs["trustedKeyGroups"] = undefined /*out*/;
            resourceInputs["trustedSigners"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Distribution.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Distribution resources.
 */
export interface DistributionState {
    aliases?: pulumi.Input<pulumi.Input<string>[]>;
    arn?: pulumi.Input<string>;
    callerReference?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    customErrorResponses?: pulumi.Input<pulumi.Input<inputs.cloudfront.DistributionCustomErrorResponse>[]>;
    defaultCacheBehavior?: pulumi.Input<inputs.cloudfront.DistributionDefaultCacheBehavior>;
    defaultRootObject?: pulumi.Input<string>;
    domainName?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    etag?: pulumi.Input<string>;
    hostedZoneId?: pulumi.Input<string>;
    httpVersion?: pulumi.Input<string>;
    inProgressValidationBatches?: pulumi.Input<number>;
    isIpv6Enabled?: pulumi.Input<boolean>;
    lastModifiedTime?: pulumi.Input<string>;
    loggingConfig?: pulumi.Input<inputs.cloudfront.DistributionLoggingConfig>;
    orderedCacheBehaviors?: pulumi.Input<pulumi.Input<inputs.cloudfront.DistributionOrderedCacheBehavior>[]>;
    originGroups?: pulumi.Input<pulumi.Input<inputs.cloudfront.DistributionOriginGroup>[]>;
    origins?: pulumi.Input<pulumi.Input<inputs.cloudfront.DistributionOrigin>[]>;
    priceClass?: pulumi.Input<string>;
    restrictions?: pulumi.Input<inputs.cloudfront.DistributionRestrictions>;
    retainOnDelete?: pulumi.Input<boolean>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    trustedKeyGroups?: pulumi.Input<pulumi.Input<inputs.cloudfront.DistributionTrustedKeyGroup>[]>;
    trustedSigners?: pulumi.Input<pulumi.Input<inputs.cloudfront.DistributionTrustedSigner>[]>;
    viewerCertificate?: pulumi.Input<inputs.cloudfront.DistributionViewerCertificate>;
    waitForDeployment?: pulumi.Input<boolean>;
    webAclId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Distribution resource.
 */
export interface DistributionArgs {
    aliases?: pulumi.Input<pulumi.Input<string>[]>;
    comment?: pulumi.Input<string>;
    customErrorResponses?: pulumi.Input<pulumi.Input<inputs.cloudfront.DistributionCustomErrorResponse>[]>;
    defaultCacheBehavior: pulumi.Input<inputs.cloudfront.DistributionDefaultCacheBehavior>;
    defaultRootObject?: pulumi.Input<string>;
    enabled: pulumi.Input<boolean>;
    httpVersion?: pulumi.Input<string>;
    isIpv6Enabled?: pulumi.Input<boolean>;
    loggingConfig?: pulumi.Input<inputs.cloudfront.DistributionLoggingConfig>;
    orderedCacheBehaviors?: pulumi.Input<pulumi.Input<inputs.cloudfront.DistributionOrderedCacheBehavior>[]>;
    originGroups?: pulumi.Input<pulumi.Input<inputs.cloudfront.DistributionOriginGroup>[]>;
    origins: pulumi.Input<pulumi.Input<inputs.cloudfront.DistributionOrigin>[]>;
    priceClass?: pulumi.Input<string>;
    restrictions: pulumi.Input<inputs.cloudfront.DistributionRestrictions>;
    retainOnDelete?: pulumi.Input<boolean>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    viewerCertificate: pulumi.Input<inputs.cloudfront.DistributionViewerCertificate>;
    waitForDeployment?: pulumi.Input<boolean>;
    webAclId?: pulumi.Input<string>;
}
