// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Use this data source to retrieve information about a CloudFront cache policy.
 *
 * ## Example Usage
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.cloudfront.getResponseHeadersPolicy({
 *     name: "example-policy",
 * });
 * ```
 * ### AWS-Managed Policies
 *
 * AWS managed response header policy names are prefixed with `Managed-`:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.cloudfront.getResponseHeadersPolicy({
 *     name: "Managed-SimpleCORS",
 * });
 * ```
 */
export function getResponseHeadersPolicy(args?: GetResponseHeadersPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetResponseHeadersPolicyResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:cloudfront/getResponseHeadersPolicy:getResponseHeadersPolicy", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getResponseHeadersPolicy.
 */
export interface GetResponseHeadersPolicyArgs {
    /**
     * Identifier for the response headers policy.
     */
    id?: string;
    /**
     * Unique name to identify the response headers policy.
     */
    name?: string;
}

/**
 * A collection of values returned by getResponseHeadersPolicy.
 */
export interface GetResponseHeadersPolicyResult {
    /**
     * Comment to describe the response headers policy. The comment cannot be longer than 128 characters.
     */
    readonly comment: string;
    /**
     * Configuration for a set of HTTP response headers that are used for Cross-Origin Resource Sharing (CORS). See Cors Config for more information.
     */
    readonly corsConfigs: outputs.cloudfront.GetResponseHeadersPolicyCorsConfig[];
    /**
     * Object that contains an attribute `items` that contains a list of Custom Headers See Custom Header for more information.
     */
    readonly customHeadersConfigs: outputs.cloudfront.GetResponseHeadersPolicyCustomHeadersConfig[];
    /**
     * Current version of the response headers policy.
     */
    readonly etag: string;
    readonly id: string;
    readonly name: string;
    /**
     * A configuration for a set of security-related HTTP response headers. See Security Headers Config for more information.
     */
    readonly securityHeadersConfigs: outputs.cloudfront.GetResponseHeadersPolicySecurityHeadersConfig[];
    /**
     * (Optional) Configuration for enabling the Server-Timing header in HTTP responses sent from CloudFront. See Server Timing Headers Config for more information.
     */
    readonly serverTimingHeadersConfigs: outputs.cloudfront.GetResponseHeadersPolicyServerTimingHeadersConfig[];
}
/**
 * Use this data source to retrieve information about a CloudFront cache policy.
 *
 * ## Example Usage
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.cloudfront.getResponseHeadersPolicy({
 *     name: "example-policy",
 * });
 * ```
 * ### AWS-Managed Policies
 *
 * AWS managed response header policy names are prefixed with `Managed-`:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.cloudfront.getResponseHeadersPolicy({
 *     name: "Managed-SimpleCORS",
 * });
 * ```
 */
export function getResponseHeadersPolicyOutput(args?: GetResponseHeadersPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetResponseHeadersPolicyResult> {
    return pulumi.output(args).apply((a: any) => getResponseHeadersPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getResponseHeadersPolicy.
 */
export interface GetResponseHeadersPolicyOutputArgs {
    /**
     * Identifier for the response headers policy.
     */
    id?: pulumi.Input<string>;
    /**
     * Unique name to identify the response headers policy.
     */
    name?: pulumi.Input<string>;
}
