// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./input";
import * as outputs from "./output";

export interface CachePolicyParametersInCacheKeyAndForwardedToOrigin {
    /**
     * Whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. See Cookies Config for more information.
     */
    cookiesConfig: outputs.CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfig;
    /**
     * Flag determines whether the Accept-Encoding HTTP header is included in the cache key and in requests that CloudFront sends to the origin.
     */
    enableAcceptEncodingBrotli?: boolean;
    /**
     * Whether the Accept-Encoding HTTP header is included in the cache key and in requests sent to the origin by CloudFront.
     */
    enableAcceptEncodingGzip?: boolean;
    /**
     * Whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin. See Headers Config for more information.
     */
    headersConfig: outputs.CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig;
    /**
     * Whether any URL query strings in viewer requests are included in the cache key. It also automatically includes these query strings in requests that CloudFront sends to the origin. Please refer to the Query String Config for more information.
     */
    queryStringsConfig: outputs.CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig;
}
export interface CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfig {
    /**
     * Whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values for `cookieBehavior` are `none`, `whitelist`, `allExcept`, and `all`.
     */
    cookieBehavior: string;
    /**
     * Object that contains a list of cookie names. See Items for more information.
     */
    cookies?: outputs.CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies;
}
export interface CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies {
    items?: string[];
}
export interface CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig {
    /**
     * Whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values for `headerBehavior` are `none` and `whitelist`.
     */
    headerBehavior?: string;
    /**
     * Object contains a list of header names. See Items for more information.
     */
    headers?: outputs.CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders;
}
export interface CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders {
    items?: string[];
}
export interface CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig {
    queryStringBehavior: string;
    queryStrings?: outputs.CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings;
}
export interface CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings {
    items?: string[];
}
export interface ContinuousDeploymentPolicyStagingDistributionDnsNames {
    /**
     * A list of CloudFront domain names for the staging distribution.
     */
    items?: string[];
    /**
     * Number of CloudFront domain names in the staging distribution.
     */
    quantity: number;
}
export interface ContinuousDeploymentPolicyTrafficConfig {
    /**
     * Determines which HTTP requests are sent to the staging distribution. See `singleHeaderConfig`.
     */
    singleHeaderConfig?: outputs.ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfig;
    /**
     * Contains the percentage of traffic to send to the staging distribution. See `singleWeightConfig`.
     */
    singleWeightConfig?: outputs.ContinuousDeploymentPolicyTrafficConfigSingleWeightConfig;
    /**
     * Type of traffic configuration. Valid values are `SingleWeight` and `SingleHeader`.
     */
    type: string;
}
export interface ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfig {
    /**
     * Request header name to send to the staging distribution. The header must contain the prefix `aws-cf-cd-`.
     */
    header: string;
    /**
     * Request header value.
     */
    value: string;
}
export interface ContinuousDeploymentPolicyTrafficConfigSingleWeightConfig {
    /**
     * Session stickiness provides the ability to define multiple requests from a single viewer as a single session. This prevents the potentially inconsistent experience of sending some of a given user's requests to the staging distribution, while others are sent to the primary distribution. Define the session duration using TTL values. See `sessionStickinessConfig`.
     */
    sessionStickinessConfig?: outputs.ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfig;
    /**
     * The percentage of traffic to send to a staging distribution, expressed as a decimal number between `0` and `.15`.
     */
    weight: number;
}
export interface ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfig {
    /**
     * The amount of time in seconds after which sessions will cease if no requests are received. Valid values are `300` – `3600` (5–60 minutes). The value must be less than or equal to `maximumTtl`.
     */
    idleTtl: number;
    /**
     * The maximum amount of time in seconds to consider requests from the viewer as being part of the same session. Valid values are `300` – `3600` (5–60 minutes). The value must be greater than or equal to `idleTtl`.
     */
    maximumTtl: number;
}
export interface DistributionCustomErrorResponse {
    errorCachingMinTtl?: number;
    errorCode: number;
    responseCode?: number;
    responsePagePath?: string;
}
export interface DistributionDefaultCacheBehavior {
    allowedMethods: string[];
    cachePolicyId?: string;
    cachedMethods: string[];
    compress?: boolean;
    defaultTtl: number;
    fieldLevelEncryptionId?: string;
    forwardedValues?: outputs.DistributionDefaultCacheBehaviorForwardedValues;
    functionAssociations?: outputs.DistributionDefaultCacheBehaviorFunctionAssociation[];
    lambdaFunctionAssociations?: outputs.DistributionDefaultCacheBehaviorLambdaFunctionAssociation[];
    maxTtl: number;
    minTtl?: number;
    originRequestPolicyId?: string;
    realtimeLogConfigArn?: string;
    responseHeadersPolicyId?: string;
    smoothStreaming?: boolean;
    targetOriginId: string;
    /**
     * List of nested attributes for active trusted key groups, if the distribution is set up to serve private content with signed URLs.
     */
    trustedKeyGroups: string[];
    /**
     * List of nested attributes for active trusted signers, if the distribution is set up to serve private content with signed URLs.
     */
    trustedSigners: string[];
    viewerProtocolPolicy: string;
}
export interface DistributionDefaultCacheBehaviorForwardedValues {
    cookies: outputs.DistributionDefaultCacheBehaviorForwardedValuesCookies;
    headers: string[];
    queryString: boolean;
    queryStringCacheKeys: string[];
}
export interface DistributionDefaultCacheBehaviorForwardedValuesCookies {
    forward: string;
    whitelistedNames: string[];
}
export interface DistributionDefaultCacheBehaviorFunctionAssociation {
    /**
     * Specific event to trigger this function. Valid values: `viewer-request` or `viewer-response`.
     */
    eventType: string;
    /**
     * ARN of the CloudFront function.
     */
    functionArn: string;
}
export interface DistributionDefaultCacheBehaviorLambdaFunctionAssociation {
    /**
     * Specific event to trigger this function. Valid values: `viewer-request`, `origin-request`, `viewer-response`, `origin-response`.
     */
    eventType: string;
    /**
     * When set to true it exposes the request body to the lambda function. Defaults to false. Valid values: `true`, `false`.
     */
    includeBody?: boolean;
    /**
     * ARN of the Lambda function.
     */
    lambdaArn: string;
}
export interface DistributionLoggingConfig {
    bucket: string;
    includeCookies?: boolean;
    prefix?: string;
}
export interface DistributionOrderedCacheBehavior {
    allowedMethods: string[];
    cachePolicyId?: string;
    cachedMethods: string[];
    compress?: boolean;
    defaultTtl: number;
    fieldLevelEncryptionId?: string;
    forwardedValues?: outputs.DistributionOrderedCacheBehaviorForwardedValues;
    functionAssociations?: outputs.DistributionOrderedCacheBehaviorFunctionAssociation[];
    lambdaFunctionAssociations?: outputs.DistributionOrderedCacheBehaviorLambdaFunctionAssociation[];
    maxTtl: number;
    minTtl?: number;
    originRequestPolicyId?: string;
    pathPattern: string;
    realtimeLogConfigArn?: string;
    responseHeadersPolicyId?: string;
    smoothStreaming?: boolean;
    targetOriginId: string;
    /**
     * List of nested attributes for active trusted key groups, if the distribution is set up to serve private content with signed URLs.
     */
    trustedKeyGroups?: string[];
    /**
     * List of nested attributes for active trusted signers, if the distribution is set up to serve private content with signed URLs.
     */
    trustedSigners?: string[];
    viewerProtocolPolicy: string;
}
export interface DistributionOrderedCacheBehaviorForwardedValues {
    cookies: outputs.DistributionOrderedCacheBehaviorForwardedValuesCookies;
    headers: string[];
    queryString: boolean;
    queryStringCacheKeys: string[];
}
export interface DistributionOrderedCacheBehaviorForwardedValuesCookies {
    forward: string;
    whitelistedNames?: string[];
}
export interface DistributionOrderedCacheBehaviorFunctionAssociation {
    /**
     * Specific event to trigger this function. Valid values: `viewer-request` or `viewer-response`.
     */
    eventType: string;
    /**
     * ARN of the CloudFront function.
     */
    functionArn: string;
}
export interface DistributionOrderedCacheBehaviorLambdaFunctionAssociation {
    /**
     * Specific event to trigger this function. Valid values: `viewer-request`, `origin-request`, `viewer-response`, `origin-response`.
     */
    eventType: string;
    /**
     * When set to true it exposes the request body to the lambda function. Defaults to false. Valid values: `true`, `false`.
     */
    includeBody?: boolean;
    /**
     * ARN of the Lambda function.
     */
    lambdaArn: string;
}
export interface DistributionOrigin {
    connectionAttempts?: number;
    connectionTimeout?: number;
    customHeaders?: outputs.DistributionOriginCustomHeader[];
    customOriginConfig?: outputs.DistributionOriginCustomOriginConfig;
    /**
     * Domain name corresponding to the distribution. For example: `d604721fxaaqy9.cloudfront.net`.
     */
    domainName: string;
    originAccessControlId?: string;
    originId: string;
    originPath?: string;
    originShield?: outputs.DistributionOriginOriginShield;
    s3OriginConfig?: outputs.DistributionOriginS3OriginConfig;
}
export interface DistributionOriginCustomHeader {
    name: string;
    value: string;
}
export interface DistributionOriginCustomOriginConfig {
    httpPort: number;
    httpsPort: number;
    originKeepaliveTimeout?: number;
    originProtocolPolicy: string;
    originReadTimeout?: number;
    originSslProtocols: string[];
}
export interface DistributionOriginGroup {
    failoverCriteria: outputs.DistributionOriginGroupFailoverCriteria;
    members: outputs.DistributionOriginGroupMember[];
    originId: string;
}
export interface DistributionOriginGroupFailoverCriteria {
    statusCodes: number[];
}
export interface DistributionOriginGroupMember {
    originId: string;
}
export interface DistributionOriginOriginShield {
    /**
     * `true` if any of the AWS accounts listed as trusted signers have active CloudFront key pairs
     */
    enabled: boolean;
    originShieldRegion?: string;
}
export interface DistributionOriginS3OriginConfig {
    originAccessIdentity: string;
}
export interface DistributionRestrictions {
    geoRestriction: outputs.DistributionRestrictionsGeoRestriction;
}
export interface DistributionRestrictionsGeoRestriction {
    locations: string[];
    restrictionType: string;
}
export interface DistributionTrustedKeyGroup {
    /**
     * `true` if any of the AWS accounts listed as trusted signers have active CloudFront key pairs
     */
    enabled: boolean;
    /**
     * List of nested attributes for each trusted signer
     */
    items: outputs.DistributionTrustedKeyGroupItem[];
}
export interface DistributionTrustedKeyGroupItem {
    /**
     * ID of the key group that contains the public keys.
     */
    keyGroupId: string;
    /**
     * Set of active CloudFront key pairs associated with the signer account
     */
    keyPairIds: string[];
}
export interface DistributionTrustedSigner {
    /**
     * `true` if any of the AWS accounts listed as trusted signers have active CloudFront key pairs
     */
    enabled: boolean;
    /**
     * List of nested attributes for each trusted signer
     */
    items: outputs.DistributionTrustedSignerItem[];
}
export interface DistributionTrustedSignerItem {
    /**
     * AWS account ID or `self`
     */
    awsAccountNumber: string;
    /**
     * Set of active CloudFront key pairs associated with the signer account
     */
    keyPairIds: string[];
}
export interface DistributionViewerCertificate {
    acmCertificateArn?: string;
    cloudfrontDefaultCertificate?: boolean;
    iamCertificateId?: string;
    minimumProtocolVersion?: string;
    sslSupportMethod?: string;
}
export interface FieldLevelEncryptionConfigContentTypeProfileConfig {
    /**
     * Object that contains an attribute `items` that contains the list of configurations for a field-level encryption content type-profile. See Content Type Profile.
     */
    contentTypeProfiles: outputs.FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfiles;
    /**
     * specifies what to do when an unknown content type is provided for the profile. If true, content is forwarded without being encrypted when the content type is unknown. If false (the default), an error is returned when the content type is unknown.
     */
    forwardWhenContentTypeIsUnknown: boolean;
}
export interface FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfiles {
    items: outputs.FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItem[];
}
export interface FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItem {
    contentType: string;
    format: string;
    profileId?: string;
}
export interface FieldLevelEncryptionConfigQueryArgProfileConfig {
    /**
     * Flag to set if you want a request to be forwarded to the origin even if the profile specified by the field-level encryption query argument, fle-profile, is unknown.
     */
    forwardWhenQueryArgProfileIsUnknown: boolean;
    /**
     * Object that contains an attribute `items` that contains the list ofrofiles specified for query argument-profile mapping for field-level encryption. see Query Arg Profile.
     */
    queryArgProfiles?: outputs.FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfiles;
}
export interface FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfiles {
    items?: outputs.FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItem[];
}
export interface FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItem {
    profileId: string;
    queryArg: string;
}
export interface FieldLevelEncryptionProfileEncryptionEntities {
    items?: outputs.FieldLevelEncryptionProfileEncryptionEntitiesItem[];
}
export interface FieldLevelEncryptionProfileEncryptionEntitiesItem {
    fieldPatterns: outputs.FieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatterns;
    providerId: string;
    publicKeyId: string;
}
export interface FieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatterns {
    items?: string[];
}
export interface KeyValueStoreTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: string;
}
export interface MonitoringSubscriptionMonitoringSubscription {
    /**
     * A subscription configuration for additional CloudWatch metrics. See below.
     */
    realtimeMetricsSubscriptionConfig: outputs.MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfig;
}
export interface MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfig {
    /**
     * A flag that indicates whether additional CloudWatch metrics are enabled for a given CloudFront distribution. Valid values are `Enabled` and `Disabled`. See below.
     */
    realtimeMetricsSubscriptionStatus: string;
}
export interface OriginRequestPolicyCookiesConfig {
    cookieBehavior: string;
    cookies?: outputs.OriginRequestPolicyCookiesConfigCookies;
}
export interface OriginRequestPolicyCookiesConfigCookies {
    items?: string[];
}
export interface OriginRequestPolicyHeadersConfig {
    headerBehavior?: string;
    headers?: outputs.OriginRequestPolicyHeadersConfigHeaders;
}
export interface OriginRequestPolicyHeadersConfigHeaders {
    items?: string[];
}
export interface OriginRequestPolicyQueryStringsConfig {
    queryStringBehavior: string;
    queryStrings?: outputs.OriginRequestPolicyQueryStringsConfigQueryStrings;
}
export interface OriginRequestPolicyQueryStringsConfigQueryStrings {
    items?: string[];
}
export interface RealtimeLogConfigEndpoint {
    /**
     * The Amazon Kinesis data stream configuration.
     */
    kinesisStreamConfig: outputs.RealtimeLogConfigEndpointKinesisStreamConfig;
    /**
     * The type of data stream where real-time log data is sent. The only valid value is `Kinesis`.
     */
    streamType: string;
}
export interface RealtimeLogConfigEndpointKinesisStreamConfig {
    /**
     * The ARN of an IAM role that CloudFront can use to send real-time log data to the Kinesis data stream.
     * See the [AWS documentation](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-iam-role) for more information.
     */
    roleArn: string;
    /**
     * The ARN of the Kinesis data stream.
     */
    streamArn: string;
}
export interface ResponseHeadersPolicyCorsConfig {
    /**
     * A Boolean value that CloudFront uses as the value for the `Access-Control-Allow-Credentials` HTTP response header.
     */
    accessControlAllowCredentials: boolean;
    /**
     * Object that contains an attribute `items` that contains a list of HTTP header names that CloudFront includes as values for the `Access-Control-Allow-Headers` HTTP response header.
     */
    accessControlAllowHeaders: outputs.ResponseHeadersPolicyCorsConfigAccessControlAllowHeaders;
    /**
     * Object that contains an attribute `items` that contains a list of HTTP methods that CloudFront includes as values for the `Access-Control-Allow-Methods` HTTP response header. Valid values: `GET` | `POST` | `OPTIONS` | `PUT` | `DELETE` | `HEAD` | `ALL`
     */
    accessControlAllowMethods: outputs.ResponseHeadersPolicyCorsConfigAccessControlAllowMethods;
    /**
     * Object that contains an attribute `items` that contains a list of origins that CloudFront can use as the value for the `Access-Control-Allow-Origin` HTTP response header.
     */
    accessControlAllowOrigins: outputs.ResponseHeadersPolicyCorsConfigAccessControlAllowOrigins;
    /**
     * Object that contains an attribute `items` that contains a list of HTTP headers that CloudFront includes as values for the `Access-Control-Expose-Headers` HTTP response header.
     */
    accessControlExposeHeaders?: outputs.ResponseHeadersPolicyCorsConfigAccessControlExposeHeaders;
    /**
     * A number that CloudFront uses as the value for the `Access-Control-Max-Age` HTTP response header.
     */
    accessControlMaxAgeSec?: number;
    /**
     * A Boolean value that determines how CloudFront behaves for the HTTP response header.
     */
    originOverride: boolean;
}
export interface ResponseHeadersPolicyCorsConfigAccessControlAllowHeaders {
    items?: string[];
}
export interface ResponseHeadersPolicyCorsConfigAccessControlAllowMethods {
    items?: string[];
}
export interface ResponseHeadersPolicyCorsConfigAccessControlAllowOrigins {
    items?: string[];
}
export interface ResponseHeadersPolicyCorsConfigAccessControlExposeHeaders {
    items?: string[];
}
export interface ResponseHeadersPolicyCustomHeadersConfig {
    items?: outputs.ResponseHeadersPolicyCustomHeadersConfigItem[];
}
export interface ResponseHeadersPolicyCustomHeadersConfigItem {
    header: string;
    override: boolean;
    value: string;
}
export interface ResponseHeadersPolicyRemoveHeadersConfig {
    items?: outputs.ResponseHeadersPolicyRemoveHeadersConfigItem[];
}
export interface ResponseHeadersPolicyRemoveHeadersConfigItem {
    header: string;
}
export interface ResponseHeadersPolicySecurityHeadersConfig {
    /**
     * The policy directives and their values that CloudFront includes as values for the `Content-Security-Policy` HTTP response header. See Content Security Policy for more information.
     */
    contentSecurityPolicy?: outputs.ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy;
    /**
     * Determines whether CloudFront includes the `X-Content-Type-Options` HTTP response header with its value set to `nosniff`. See Content Type Options for more information.
     */
    contentTypeOptions?: outputs.ResponseHeadersPolicySecurityHeadersConfigContentTypeOptions;
    /**
     * Determines whether CloudFront includes the `X-Frame-Options` HTTP response header and the header’s value. See Frame Options for more information.
     */
    frameOptions?: outputs.ResponseHeadersPolicySecurityHeadersConfigFrameOptions;
    /**
     * Determines whether CloudFront includes the `Referrer-Policy` HTTP response header and the header’s value. See Referrer Policy for more information.
     */
    referrerPolicy?: outputs.ResponseHeadersPolicySecurityHeadersConfigReferrerPolicy;
    /**
     * Determines whether CloudFront includes the `Strict-Transport-Security` HTTP response header and the header’s value. See Strict Transport Security for more information.
     */
    strictTransportSecurity?: outputs.ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity;
    /**
     * Determine whether CloudFront includes the `X-XSS-Protection` HTTP response header and the header’s value. See XSS Protection for more information.
     */
    xssProtection?: outputs.ResponseHeadersPolicySecurityHeadersConfigXssProtection;
}
export interface ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy {
    /**
     * The policy directives and their values that CloudFront includes as values for the `Content-Security-Policy` HTTP response header.
     */
    contentSecurityPolicy: string;
    /**
     * Whether CloudFront overrides the `Content-Security-Policy` HTTP response header received from the origin with the one specified in this response headers policy.
     */
    override: boolean;
}
export interface ResponseHeadersPolicySecurityHeadersConfigContentTypeOptions {
    /**
     * Whether CloudFront overrides the `X-Content-Type-Options` HTTP response header received from the origin with the one specified in this response headers policy.
     */
    override: boolean;
}
export interface ResponseHeadersPolicySecurityHeadersConfigFrameOptions {
    /**
     * The value of the `X-Frame-Options` HTTP response header. Valid values: `DENY` | `SAMEORIGIN`
     */
    frameOption: string;
    /**
     * Whether CloudFront overrides the `X-Frame-Options` HTTP response header received from the origin with the one specified in this response headers policy.
     */
    override: boolean;
}
export interface ResponseHeadersPolicySecurityHeadersConfigReferrerPolicy {
    /**
     * Whether CloudFront overrides the `Referrer-Policy` HTTP response header received from the origin with the one specified in this response headers policy.
     */
    override: boolean;
    /**
     * The value of the `Referrer-Policy` HTTP response header. Valid Values: `no-referrer` | `no-referrer-when-downgrade` | `origin` | `origin-when-cross-origin` | `same-origin` | `strict-origin` | `strict-origin-when-cross-origin` | `unsafe-url`
     */
    referrerPolicy: string;
}
export interface ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity {
    /**
     * A number that CloudFront uses as the value for the `max-age` directive in the `Strict-Transport-Security` HTTP response header.
     */
    accessControlMaxAgeSec: number;
    /**
     * Whether CloudFront includes the `includeSubDomains` directive in the `Strict-Transport-Security` HTTP response header.
     */
    includeSubdomains?: boolean;
    /**
     * Whether CloudFront overrides the `Strict-Transport-Security` HTTP response header received from the origin with the one specified in this response headers policy.
     */
    override: boolean;
    /**
     * Whether CloudFront includes the `preload` directive in the `Strict-Transport-Security` HTTP response header.
     */
    preload?: boolean;
}
export interface ResponseHeadersPolicySecurityHeadersConfigXssProtection {
    /**
     * Whether CloudFront includes the `mode=block` directive in the `X-XSS-Protection` header.
     */
    modeBlock?: boolean;
    /**
     * Whether CloudFront overrides the `X-XSS-Protection` HTTP response header received from the origin with the one specified in this response headers policy.
     */
    override: boolean;
    /**
     * A Boolean value that determines the value of the `X-XSS-Protection` HTTP response header. When this setting is `true`, the value of the `X-XSS-Protection` header is `1`. When this setting is `false`, the value of the `X-XSS-Protection` header is `0`.
     */
    protection: boolean;
    /**
     * A reporting URI, which CloudFront uses as the value of the report directive in the `X-XSS-Protection` header. You cannot specify a `reportUri` when `modeBlock` is `true`.
     */
    reportUri?: string;
}
export interface ResponseHeadersPolicyServerTimingHeadersConfig {
    /**
     * A Whether CloudFront adds the `Server-Timing` header to HTTP responses that it sends in response to requests that match a cache behavior that's associated with this response headers policy.
     */
    enabled: boolean;
    /**
     * A number 0–100 (inclusive) that specifies the percentage of responses that you want CloudFront to add the Server-Timing header to. Valid range: Minimum value of 0.0. Maximum value of 100.0.
     */
    samplingRate: number;
}
export interface GetCachePolicyParametersInCacheKeyAndForwardedToOrigin {
    /**
     * Object that determines whether any cookies in viewer requests (and if so, which cookies) are included in the cache key and automatically included in requests that CloudFront sends to the origin. See Cookies Config for more information.
     */
    cookiesConfigs: outputs.GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfig[];
    /**
     * A flag that can affect whether the Accept-Encoding HTTP header is included in the cache key and included in requests that CloudFront sends to the origin.
     */
    enableAcceptEncodingBrotli: boolean;
    /**
     * A flag that can affect whether the Accept-Encoding HTTP header is included in the cache key and included in requests that CloudFront sends to the origin.
     */
    enableAcceptEncodingGzip: boolean;
    /**
     * Object that determines whether any HTTP headers (and if so, which headers) are included in the cache key and automatically included in requests that CloudFront sends to the origin. See Headers Config for more information.
     */
    headersConfigs: outputs.GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig[];
    /**
     * Object that determines whether any URL query strings in viewer requests (and if so, which query strings) are included in the cache key and automatically included in requests that CloudFront sends to the origin. See Query String Config for more information.
     */
    queryStringsConfigs: outputs.GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig[];
}
export interface GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfig {
    /**
     * Determines whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are `none`, `whitelist`, `allExcept`, `all`.
     */
    cookieBehavior: string;
    /**
     * Object that contains a list of cookie names. See Items for more information.
     */
    cookies: outputs.GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookie[];
}
export interface GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookie {
    /**
     * List of item names (`cookies`, `headers`, or `queryStrings`).
     */
    items: string[];
}
export interface GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig {
    /**
     * Determines whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are `none`, `whitelist`.
     */
    headerBehavior: string;
    /**
     * Object that contains a list of header names. See Items for more information.
     */
    headers: outputs.GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeader[];
}
export interface GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeader {
    /**
     * List of item names (`cookies`, `headers`, or `queryStrings`).
     */
    items: string[];
}
export interface GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig {
    /**
     * Determines whether any URL query strings in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are `none`, `whitelist`, `allExcept`, `all`.
     */
    queryStringBehavior: string;
    /**
     * Object that contains a list of query string names. See Items for more information.
     */
    queryStrings: outputs.GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryString[];
}
export interface GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryString {
    /**
     * List of item names (`cookies`, `headers`, or `queryStrings`).
     */
    items: string[];
}
export interface GetOriginRequestPolicyCookiesConfig {
    cookieBehavior: string;
    cookies: outputs.GetOriginRequestPolicyCookiesConfigCookie[];
}
export interface GetOriginRequestPolicyCookiesConfigCookie {
    items: string[];
}
export interface GetOriginRequestPolicyHeadersConfig {
    headerBehavior: string;
    headers: outputs.GetOriginRequestPolicyHeadersConfigHeader[];
}
export interface GetOriginRequestPolicyHeadersConfigHeader {
    items: string[];
}
export interface GetOriginRequestPolicyQueryStringsConfig {
    queryStringBehavior: string;
    queryStrings: outputs.GetOriginRequestPolicyQueryStringsConfigQueryString[];
}
export interface GetOriginRequestPolicyQueryStringsConfigQueryString {
    items: string[];
}
export interface GetRealtimeLogConfigEndpoint {
    /**
     * (Required) Amazon Kinesis data stream configuration.
     */
    kinesisStreamConfigs: outputs.GetRealtimeLogConfigEndpointKinesisStreamConfig[];
    /**
     * (Required) Type of data stream where real-time log data is sent. The only valid value is `Kinesis`.
     */
    streamType: string;
}
export interface GetRealtimeLogConfigEndpointKinesisStreamConfig {
    /**
     * (Required) ARN of an IAM role that CloudFront can use to send real-time log data to the Kinesis data stream.
     * See the [AWS documentation](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-iam-role) for more information.
     */
    roleArn: string;
    /**
     * (Required) ARN of the Kinesis data stream.
     */
    streamArn: string;
}
export interface GetResponseHeadersPolicyCorsConfig {
    /**
     * A Boolean value that CloudFront uses as the value for the Access-Control-Allow-Credentials HTTP response header.
     */
    accessControlAllowCredentials: boolean;
    /**
     * Object that contains an attribute `items` that contains a list of HTTP header names that CloudFront includes as values for the Access-Control-Allow-Headers HTTP response header.
     */
    accessControlAllowHeaders: outputs.GetResponseHeadersPolicyCorsConfigAccessControlAllowHeader[];
    /**
     * Object that contains an attribute `items` that contains a list of HTTP methods that CloudFront includes as values for the Access-Control-Allow-Methods HTTP response header. Valid values: `GET` | `POST` | `OPTIONS` | `PUT` | `DELETE` | `HEAD` | `ALL`
     */
    accessControlAllowMethods: outputs.GetResponseHeadersPolicyCorsConfigAccessControlAllowMethod[];
    /**
     * Object that contains an attribute `items` that contains a list of origins that CloudFront can use as the value for the Access-Control-Allow-Origin HTTP response header.
     */
    accessControlAllowOrigins: outputs.GetResponseHeadersPolicyCorsConfigAccessControlAllowOrigin[];
    /**
     * Object that contains an attribute `items` that contains a list of HTTP headers that CloudFront includes as values for the Access-Control-Expose-Headers HTTP response header.
     */
    accessControlExposeHeaders: outputs.GetResponseHeadersPolicyCorsConfigAccessControlExposeHeader[];
    /**
     * A number that CloudFront uses as the value for the max-age directive in the Strict-Transport-Security HTTP response header.
     */
    accessControlMaxAgeSec: number;
    originOverride: boolean;
}
export interface GetResponseHeadersPolicyCorsConfigAccessControlAllowHeader {
    items: string[];
}
export interface GetResponseHeadersPolicyCorsConfigAccessControlAllowMethod {
    items: string[];
}
export interface GetResponseHeadersPolicyCorsConfigAccessControlAllowOrigin {
    items: string[];
}
export interface GetResponseHeadersPolicyCorsConfigAccessControlExposeHeader {
    items: string[];
}
export interface GetResponseHeadersPolicyCustomHeadersConfig {
    items: outputs.GetResponseHeadersPolicyCustomHeadersConfigItem[];
}
export interface GetResponseHeadersPolicyCustomHeadersConfigItem {
    /**
     * The HTTP header name.
     */
    header: string;
    /**
     * Whether CloudFront overrides the X-XSS-Protection HTTP response header received from the origin with the one specified in this response headers policy.
     */
    override: boolean;
    /**
     * Value for the HTTP response header.
     */
    value: string;
}
export interface GetResponseHeadersPolicyRemoveHeadersConfig {
    items: outputs.GetResponseHeadersPolicyRemoveHeadersConfigItem[];
}
export interface GetResponseHeadersPolicyRemoveHeadersConfigItem {
    /**
     * The HTTP header name.
     */
    header: string;
}
export interface GetResponseHeadersPolicySecurityHeadersConfig {
    /**
     * The policy directives and their values that CloudFront includes as values for the Content-Security-Policy HTTP response header.
     */
    contentSecurityPolicies: outputs.GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy[];
    /**
     * A setting that determines whether CloudFront includes the X-Content-Type-Options HTTP response header with its value set to nosniff. See Content Type Options for more information.
     */
    contentTypeOptions: outputs.GetResponseHeadersPolicySecurityHeadersConfigContentTypeOption[];
    /**
     * Setting that determines whether CloudFront includes the X-Frame-Options HTTP response header and the header’s value. See Frame Options for more information.
     */
    frameOptions: outputs.GetResponseHeadersPolicySecurityHeadersConfigFrameOption[];
    /**
     * Value of the Referrer-Policy HTTP response header. Valid Values: `no-referrer` | `no-referrer-when-downgrade` | `origin` | `origin-when-cross-origin` | `same-origin` | `strict-origin` | `strict-origin-when-cross-origin` | `unsafe-url`
     */
    referrerPolicies: outputs.GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicy[];
    /**
     * Settings that determine whether CloudFront includes the Strict-Transport-Security HTTP response header and the header’s value. See Strict Transport Security for more information.
     */
    strictTransportSecurities: outputs.GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity[];
    /**
     * Settings that determine whether CloudFront includes the X-XSS-Protection HTTP response header and the header’s value. See XSS Protection for more information.
     */
    xssProtections: outputs.GetResponseHeadersPolicySecurityHeadersConfigXssProtection[];
}
export interface GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy {
    /**
     * The policy directives and their values that CloudFront includes as values for the Content-Security-Policy HTTP response header.
     */
    contentSecurityPolicy: string;
    /**
     * Whether CloudFront overrides the X-XSS-Protection HTTP response header received from the origin with the one specified in this response headers policy.
     */
    override: boolean;
}
export interface GetResponseHeadersPolicySecurityHeadersConfigContentTypeOption {
    /**
     * Whether CloudFront overrides the X-XSS-Protection HTTP response header received from the origin with the one specified in this response headers policy.
     */
    override: boolean;
}
export interface GetResponseHeadersPolicySecurityHeadersConfigFrameOption {
    /**
     * Value of the X-Frame-Options HTTP response header. Valid values: `DENY` | `SAMEORIGIN`
     */
    frameOption: string;
    /**
     * Whether CloudFront overrides the X-XSS-Protection HTTP response header received from the origin with the one specified in this response headers policy.
     */
    override: boolean;
}
export interface GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicy {
    /**
     * Whether CloudFront overrides the X-XSS-Protection HTTP response header received from the origin with the one specified in this response headers policy.
     */
    override: boolean;
    /**
     * Value of the Referrer-Policy HTTP response header. Valid Values: `no-referrer` | `no-referrer-when-downgrade` | `origin` | `origin-when-cross-origin` | `same-origin` | `strict-origin` | `strict-origin-when-cross-origin` | `unsafe-url`
     */
    referrerPolicy: string;
}
export interface GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity {
    /**
     * A number that CloudFront uses as the value for the max-age directive in the Strict-Transport-Security HTTP response header.
     */
    accessControlMaxAgeSec: number;
    /**
     * Whether CloudFront includes the includeSubDomains directive in the Strict-Transport-Security HTTP response header.
     */
    includeSubdomains: boolean;
    /**
     * Whether CloudFront overrides the X-XSS-Protection HTTP response header received from the origin with the one specified in this response headers policy.
     */
    override: boolean;
    /**
     * Whether CloudFront includes the preload directive in the Strict-Transport-Security HTTP response header.
     */
    preload: boolean;
}
export interface GetResponseHeadersPolicySecurityHeadersConfigXssProtection {
    /**
     * Whether CloudFront includes the mode=block directive in the X-XSS-Protection header.
     */
    modeBlock: boolean;
    /**
     * Whether CloudFront overrides the X-XSS-Protection HTTP response header received from the origin with the one specified in this response headers policy.
     */
    override: boolean;
    /**
     * Boolean value that determines the value of the X-XSS-Protection HTTP response header. When this setting is true, the value of the X-XSS-Protection header is 1. When this setting is false, the value of the X-XSS-Protection header is 0.
     */
    protection: boolean;
    /**
     * Whether CloudFront sets a reporting URI in the X-XSS-Protection header.
     */
    reportUri: string;
}
export interface GetResponseHeadersPolicyServerTimingHeadersConfig {
    /**
     * Whether CloudFront adds the `Server-Timing` header to HTTP responses that it sends in response to requests that match a cache behavior that's associated with this response headers policy.
     */
    enabled: boolean;
    /**
     * Number 0–100 (inclusive) that specifies the percentage of responses that you want CloudFront to add the Server-Timing header to.
     */
    samplingRate: number;
}
