// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * The CloudFront Log Delivery Canonical User ID data source allows access to the [canonical user ID](http://docs.aws.amazon.com/general/latest/gr/acct-identifiers.html) of the AWS `awslogsdelivery` account for CloudFront bucket logging.
 * See the [Amazon CloudFront Developer Guide](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html) for more information.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const current = aws.s3.getCanonicalUserId({});
 * const example = aws.cloudfront.getLogDeliveryCanonicalUserId({});
 * const exampleBucket = new aws.s3.Bucket("example", {bucket: "example"});
 * const exampleBucketOwnershipControls = new aws.s3.BucketOwnershipControls("example", {
 *     bucket: exampleBucket.id,
 *     rule: {
 *         objectOwnership: "BucketOwnerPreferred",
 *     },
 * });
 * const exampleBucketAcl = new aws.s3.BucketAcl("example", {
 *     bucket: exampleBucket.id,
 *     accessControlPolicy: {
 *         grants: [{
 *             grantee: {
 *                 id: example.then(example => example.id),
 *                 type: "CanonicalUser",
 *             },
 *             permission: "FULL_CONTROL",
 *         }],
 *         owner: {
 *             id: current.then(current => current.id),
 *         },
 *     },
 * }, {
 *     dependsOn: [exampleBucketOwnershipControls],
 * });
 * ```
 */
export function getLogDeliveryCanonicalUserId(opts?: pulumi.InvokeOptions): Promise<GetLogDeliveryCanonicalUserIdResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:cloudfront/getLogDeliveryCanonicalUserId:getLogDeliveryCanonicalUserId", {
    }, opts);
}

/**
 * A collection of values returned by getLogDeliveryCanonicalUserId.
 */
export interface GetLogDeliveryCanonicalUserIdResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
/**
 * The CloudFront Log Delivery Canonical User ID data source allows access to the [canonical user ID](http://docs.aws.amazon.com/general/latest/gr/acct-identifiers.html) of the AWS `awslogsdelivery` account for CloudFront bucket logging.
 * See the [Amazon CloudFront Developer Guide](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html) for more information.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const current = aws.s3.getCanonicalUserId({});
 * const example = aws.cloudfront.getLogDeliveryCanonicalUserId({});
 * const exampleBucket = new aws.s3.Bucket("example", {bucket: "example"});
 * const exampleBucketOwnershipControls = new aws.s3.BucketOwnershipControls("example", {
 *     bucket: exampleBucket.id,
 *     rule: {
 *         objectOwnership: "BucketOwnerPreferred",
 *     },
 * });
 * const exampleBucketAcl = new aws.s3.BucketAcl("example", {
 *     bucket: exampleBucket.id,
 *     accessControlPolicy: {
 *         grants: [{
 *             grantee: {
 *                 id: example.then(example => example.id),
 *                 type: "CanonicalUser",
 *             },
 *             permission: "FULL_CONTROL",
 *         }],
 *         owner: {
 *             id: current.then(current => current.id),
 *         },
 *     },
 * }, {
 *     dependsOn: [exampleBucketOwnershipControls],
 * });
 * ```
 */
export function getLogDeliveryCanonicalUserIdOutput(opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetLogDeliveryCanonicalUserIdResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws:cloudfront/getLogDeliveryCanonicalUserId:getLogDeliveryCanonicalUserId", {
    }, opts);
}
