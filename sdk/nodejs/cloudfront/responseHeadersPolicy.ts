// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export class ResponseHeadersPolicy extends pulumi.CustomResource {
    /**
     * Get an existing ResponseHeadersPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResponseHeadersPolicyState, opts?: pulumi.CustomResourceOptions): ResponseHeadersPolicy {
        return new ResponseHeadersPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:cloudfront/responseHeadersPolicy:ResponseHeadersPolicy';

    /**
     * Returns true if the given object is an instance of ResponseHeadersPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ResponseHeadersPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ResponseHeadersPolicy.__pulumiType;
    }

    public readonly comment!: pulumi.Output<string | undefined>;
    public readonly corsConfig!: pulumi.Output<outputs.cloudfront.ResponseHeadersPolicyCorsConfig | undefined>;
    public readonly customHeadersConfig!: pulumi.Output<outputs.cloudfront.ResponseHeadersPolicyCustomHeadersConfig | undefined>;
    public readonly etag!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly securityHeadersConfig!: pulumi.Output<outputs.cloudfront.ResponseHeadersPolicySecurityHeadersConfig | undefined>;
    public readonly serverTimingHeadersConfig!: pulumi.Output<outputs.cloudfront.ResponseHeadersPolicyServerTimingHeadersConfig | undefined>;

    /**
     * Create a ResponseHeadersPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ResponseHeadersPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ResponseHeadersPolicyArgs | ResponseHeadersPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ResponseHeadersPolicyState | undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["corsConfig"] = state ? state.corsConfig : undefined;
            resourceInputs["customHeadersConfig"] = state ? state.customHeadersConfig : undefined;
            resourceInputs["etag"] = state ? state.etag : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["securityHeadersConfig"] = state ? state.securityHeadersConfig : undefined;
            resourceInputs["serverTimingHeadersConfig"] = state ? state.serverTimingHeadersConfig : undefined;
        } else {
            const args = argsOrState as ResponseHeadersPolicyArgs | undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["corsConfig"] = args ? args.corsConfig : undefined;
            resourceInputs["customHeadersConfig"] = args ? args.customHeadersConfig : undefined;
            resourceInputs["etag"] = args ? args.etag : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["securityHeadersConfig"] = args ? args.securityHeadersConfig : undefined;
            resourceInputs["serverTimingHeadersConfig"] = args ? args.serverTimingHeadersConfig : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ResponseHeadersPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ResponseHeadersPolicy resources.
 */
export interface ResponseHeadersPolicyState {
    comment?: pulumi.Input<string>;
    corsConfig?: pulumi.Input<inputs.cloudfront.ResponseHeadersPolicyCorsConfig>;
    customHeadersConfig?: pulumi.Input<inputs.cloudfront.ResponseHeadersPolicyCustomHeadersConfig>;
    etag?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    securityHeadersConfig?: pulumi.Input<inputs.cloudfront.ResponseHeadersPolicySecurityHeadersConfig>;
    serverTimingHeadersConfig?: pulumi.Input<inputs.cloudfront.ResponseHeadersPolicyServerTimingHeadersConfig>;
}

/**
 * The set of arguments for constructing a ResponseHeadersPolicy resource.
 */
export interface ResponseHeadersPolicyArgs {
    comment?: pulumi.Input<string>;
    corsConfig?: pulumi.Input<inputs.cloudfront.ResponseHeadersPolicyCorsConfig>;
    customHeadersConfig?: pulumi.Input<inputs.cloudfront.ResponseHeadersPolicyCustomHeadersConfig>;
    etag?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    securityHeadersConfig?: pulumi.Input<inputs.cloudfront.ResponseHeadersPolicySecurityHeadersConfig>;
    serverTimingHeadersConfig?: pulumi.Input<inputs.cloudfront.ResponseHeadersPolicyServerTimingHeadersConfig>;
}
