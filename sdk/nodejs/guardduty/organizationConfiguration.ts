// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages the GuardDuty Organization Configuration in the current AWS Region. The AWS account utilizing this resource must have been assigned as a delegated Organization administrator account, e.g. via the `aws.guardduty.OrganizationAdminAccount` resource. More information about Organizations support in GuardDuty can be found in the [GuardDuty User Guide](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_organizations.html).
 *
 * > **NOTE:** This is an advanced resource. The provider will automatically assume management of the GuardDuty Organization Configuration without import and perform no actions on removal from the resource configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleDetector = new aws.guardduty.Detector("exampleDetector", {enable: true});
 * const exampleOrganizationConfiguration = new aws.guardduty.OrganizationConfiguration("exampleOrganizationConfiguration", {
 *     autoEnable: true,
 *     detectorId: exampleDetector.id,
 * });
 * ```
 *
 * ## Import
 *
 * GuardDuty Organization Configurations can be imported using the GuardDuty Detector ID, e.g.
 *
 * ```sh
 *  $ pulumi import aws:guardduty/organizationConfiguration:OrganizationConfiguration example 00b00fd5aecc0ab60a708659477e9617
 * ```
 */
export class OrganizationConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing OrganizationConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OrganizationConfigurationState, opts?: pulumi.CustomResourceOptions): OrganizationConfiguration {
        return new OrganizationConfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:guardduty/organizationConfiguration:OrganizationConfiguration';

    /**
     * Returns true if the given object is an instance of OrganizationConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OrganizationConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OrganizationConfiguration.__pulumiType;
    }

    /**
     * When this setting is enabled, all new accounts that are created in, or added to, the organization are added as a member accounts of the organization’s GuardDuty delegated administrator and GuardDuty is enabled in that AWS Region.
     */
    public readonly autoEnable!: pulumi.Output<boolean>;
    /**
     * The detector ID of the GuardDuty account.
     */
    public readonly detectorId!: pulumi.Output<string>;

    /**
     * Create a OrganizationConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OrganizationConfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OrganizationConfigurationArgs | OrganizationConfigurationState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as OrganizationConfigurationState | undefined;
            inputs["autoEnable"] = state ? state.autoEnable : undefined;
            inputs["detectorId"] = state ? state.detectorId : undefined;
        } else {
            const args = argsOrState as OrganizationConfigurationArgs | undefined;
            if ((!args || args.autoEnable === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'autoEnable'");
            }
            if ((!args || args.detectorId === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'detectorId'");
            }
            inputs["autoEnable"] = args ? args.autoEnable : undefined;
            inputs["detectorId"] = args ? args.detectorId : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(OrganizationConfiguration.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OrganizationConfiguration resources.
 */
export interface OrganizationConfigurationState {
    /**
     * When this setting is enabled, all new accounts that are created in, or added to, the organization are added as a member accounts of the organization’s GuardDuty delegated administrator and GuardDuty is enabled in that AWS Region.
     */
    readonly autoEnable?: pulumi.Input<boolean>;
    /**
     * The detector ID of the GuardDuty account.
     */
    readonly detectorId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OrganizationConfiguration resource.
 */
export interface OrganizationConfigurationArgs {
    /**
     * When this setting is enabled, all new accounts that are created in, or added to, the organization are added as a member accounts of the organization’s GuardDuty delegated administrator and GuardDuty is enabled in that AWS Region.
     */
    readonly autoEnable: pulumi.Input<boolean>;
    /**
     * The detector ID of the GuardDuty account.
     */
    readonly detectorId: pulumi.Input<string>;
}
