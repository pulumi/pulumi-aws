// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage a single Amazon GuardDuty [detector feature](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty-features-activation-model.html#guardduty-features).
 *
 * > **NOTE:** Deleting this resource does not disable the detector feature, the resource in simply removed from state instead.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.guardduty.Detector("example", {enable: true});
 * const eksRuntimeMonitoring = new aws.guardduty.DetectorFeature("eksRuntimeMonitoring", {
 *     detectorId: example.id,
 *     status: "ENABLED",
 *     additionalConfigurations: [{
 *         name: "EKS_ADDON_MANAGEMENT",
 *         status: "ENABLED",
 *     }],
 * });
 * ```
 */
export class DetectorFeature extends pulumi.CustomResource {
    /**
     * Get an existing DetectorFeature resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DetectorFeatureState, opts?: pulumi.CustomResourceOptions): DetectorFeature {
        return new DetectorFeature(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:guardduty/detectorFeature:DetectorFeature';

    /**
     * Returns true if the given object is an instance of DetectorFeature.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DetectorFeature {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DetectorFeature.__pulumiType;
    }

    /**
     * Additional feature configuration block. See below.
     */
    public readonly additionalConfigurations!: pulumi.Output<outputs.guardduty.DetectorFeatureAdditionalConfiguration[] | undefined>;
    /**
     * Amazon GuardDuty detector ID.
     */
    public readonly detectorId!: pulumi.Output<string>;
    /**
     * The name of the detector feature. Valid values: `S3_DATA_EVENTS`, `EKS_AUDIT_LOGS`, `EBS_MALWARE_PROTECTION`, `RDS_LOGIN_EVENTS`, `EKS_RUNTIME_MONITORING`, `LAMBDA_NETWORK_LOGS`.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The status of the detector feature. Valid values: `ENABLED`, `DISABLED`.
     */
    public readonly status!: pulumi.Output<string>;

    /**
     * Create a DetectorFeature resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DetectorFeatureArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DetectorFeatureArgs | DetectorFeatureState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DetectorFeatureState | undefined;
            resourceInputs["additionalConfigurations"] = state ? state.additionalConfigurations : undefined;
            resourceInputs["detectorId"] = state ? state.detectorId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as DetectorFeatureArgs | undefined;
            if ((!args || args.detectorId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'detectorId'");
            }
            if ((!args || args.status === undefined) && !opts.urn) {
                throw new Error("Missing required property 'status'");
            }
            resourceInputs["additionalConfigurations"] = args ? args.additionalConfigurations : undefined;
            resourceInputs["detectorId"] = args ? args.detectorId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DetectorFeature.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DetectorFeature resources.
 */
export interface DetectorFeatureState {
    /**
     * Additional feature configuration block. See below.
     */
    additionalConfigurations?: pulumi.Input<pulumi.Input<inputs.guardduty.DetectorFeatureAdditionalConfiguration>[]>;
    /**
     * Amazon GuardDuty detector ID.
     */
    detectorId?: pulumi.Input<string>;
    /**
     * The name of the detector feature. Valid values: `S3_DATA_EVENTS`, `EKS_AUDIT_LOGS`, `EBS_MALWARE_PROTECTION`, `RDS_LOGIN_EVENTS`, `EKS_RUNTIME_MONITORING`, `LAMBDA_NETWORK_LOGS`.
     */
    name?: pulumi.Input<string>;
    /**
     * The status of the detector feature. Valid values: `ENABLED`, `DISABLED`.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DetectorFeature resource.
 */
export interface DetectorFeatureArgs {
    /**
     * Additional feature configuration block. See below.
     */
    additionalConfigurations?: pulumi.Input<pulumi.Input<inputs.guardduty.DetectorFeatureAdditionalConfiguration>[]>;
    /**
     * Amazon GuardDuty detector ID.
     */
    detectorId: pulumi.Input<string>;
    /**
     * The name of the detector feature. Valid values: `S3_DATA_EVENTS`, `EKS_AUDIT_LOGS`, `EBS_MALWARE_PROTECTION`, `RDS_LOGIN_EVENTS`, `EKS_RUNTIME_MONITORING`, `LAMBDA_NETWORK_LOGS`.
     */
    name?: pulumi.Input<string>;
    /**
     * The status of the detector feature. Valid values: `ENABLED`, `DISABLED`.
     */
    status: pulumi.Input<string>;
}
