// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { DetectorArgs, DetectorState } from "./detector";
export type Detector = import("./detector").Detector;
export const Detector: typeof import("./detector").Detector = null as any;

export { FilterArgs, FilterState } from "./filter";
export type Filter = import("./filter").Filter;
export const Filter: typeof import("./filter").Filter = null as any;

export { GetDetectorArgs, GetDetectorResult, GetDetectorOutputArgs } from "./getDetector";
export const getDetector: typeof import("./getDetector").getDetector = null as any;
export const getDetectorOutput: typeof import("./getDetector").getDetectorOutput = null as any;

export { InviteAccepterArgs, InviteAccepterState } from "./inviteAccepter";
export type InviteAccepter = import("./inviteAccepter").InviteAccepter;
export const InviteAccepter: typeof import("./inviteAccepter").InviteAccepter = null as any;

export { IPSetArgs, IPSetState } from "./ipset";
export type IPSet = import("./ipset").IPSet;
export const IPSet: typeof import("./ipset").IPSet = null as any;

export { MemberArgs, MemberState } from "./member";
export type Member = import("./member").Member;
export const Member: typeof import("./member").Member = null as any;

export { OrganizationAdminAccountArgs, OrganizationAdminAccountState } from "./organizationAdminAccount";
export type OrganizationAdminAccount = import("./organizationAdminAccount").OrganizationAdminAccount;
export const OrganizationAdminAccount: typeof import("./organizationAdminAccount").OrganizationAdminAccount = null as any;

export { OrganizationConfigurationArgs, OrganizationConfigurationState } from "./organizationConfiguration";
export type OrganizationConfiguration = import("./organizationConfiguration").OrganizationConfiguration;
export const OrganizationConfiguration: typeof import("./organizationConfiguration").OrganizationConfiguration = null as any;

export { PublishingDestinationArgs, PublishingDestinationState } from "./publishingDestination";
export type PublishingDestination = import("./publishingDestination").PublishingDestination;
export const PublishingDestination: typeof import("./publishingDestination").PublishingDestination = null as any;

export { ThreatIntelSetArgs, ThreatIntelSetState } from "./threatIntelSet";
export type ThreatIntelSet = import("./threatIntelSet").ThreatIntelSet;
export const ThreatIntelSet: typeof import("./threatIntelSet").ThreatIntelSet = null as any;

utilities.lazyLoad(exports, ["Detector"], () => require("./detector"));
utilities.lazyLoad(exports, ["Filter"], () => require("./filter"));
utilities.lazyLoad(exports, ["getDetector","getDetectorOutput"], () => require("./getDetector"));
utilities.lazyLoad(exports, ["InviteAccepter"], () => require("./inviteAccepter"));
utilities.lazyLoad(exports, ["IPSet"], () => require("./ipset"));
utilities.lazyLoad(exports, ["Member"], () => require("./member"));
utilities.lazyLoad(exports, ["OrganizationAdminAccount"], () => require("./organizationAdminAccount"));
utilities.lazyLoad(exports, ["OrganizationConfiguration"], () => require("./organizationConfiguration"));
utilities.lazyLoad(exports, ["PublishingDestination"], () => require("./publishingDestination"));
utilities.lazyLoad(exports, ["ThreatIntelSet"], () => require("./threatIntelSet"));

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws:guardduty/detector:Detector":
                return new Detector(name, <any>undefined, { urn })
            case "aws:guardduty/filter:Filter":
                return new Filter(name, <any>undefined, { urn })
            case "aws:guardduty/iPSet:IPSet":
                return new IPSet(name, <any>undefined, { urn })
            case "aws:guardduty/inviteAccepter:InviteAccepter":
                return new InviteAccepter(name, <any>undefined, { urn })
            case "aws:guardduty/member:Member":
                return new Member(name, <any>undefined, { urn })
            case "aws:guardduty/organizationAdminAccount:OrganizationAdminAccount":
                return new OrganizationAdminAccount(name, <any>undefined, { urn })
            case "aws:guardduty/organizationConfiguration:OrganizationConfiguration":
                return new OrganizationConfiguration(name, <any>undefined, { urn })
            case "aws:guardduty/publishingDestination:PublishingDestination":
                return new PublishingDestination(name, <any>undefined, { urn })
            case "aws:guardduty/threatIntelSet:ThreatIntelSet":
                return new ThreatIntelSet(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "guardduty/detector", _module)
pulumi.runtime.registerResourceModule("aws", "guardduty/filter", _module)
pulumi.runtime.registerResourceModule("aws", "guardduty/iPSet", _module)
pulumi.runtime.registerResourceModule("aws", "guardduty/inviteAccepter", _module)
pulumi.runtime.registerResourceModule("aws", "guardduty/member", _module)
pulumi.runtime.registerResourceModule("aws", "guardduty/organizationAdminAccount", _module)
pulumi.runtime.registerResourceModule("aws", "guardduty/organizationConfiguration", _module)
pulumi.runtime.registerResourceModule("aws", "guardduty/publishingDestination", _module)
pulumi.runtime.registerResourceModule("aws", "guardduty/threatIntelSet", _module)
