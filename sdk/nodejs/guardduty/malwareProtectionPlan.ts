// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage a GuardDuty malware protection plan.
 *
 * ## Import
 *
 * Using `pulumi import`, import GuardDuty malware protection plans using their IDs. For example:
 *
 * ```sh
 * $ pulumi import aws:guardduty/malwareProtectionPlan:MalwareProtectionPlan example 1234567890abcdef0123
 * ```
 */
export class MalwareProtectionPlan extends pulumi.CustomResource {
    /**
     * Get an existing MalwareProtectionPlan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MalwareProtectionPlanState, opts?: pulumi.CustomResourceOptions): MalwareProtectionPlan {
        return new MalwareProtectionPlan(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:guardduty/malwareProtectionPlan:MalwareProtectionPlan';

    /**
     * Returns true if the given object is an instance of MalwareProtectionPlan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MalwareProtectionPlan {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MalwareProtectionPlan.__pulumiType;
    }

    /**
     * Information about whether the tags will be added to the S3 object after scanning. See `actions` below.
     */
    public readonly actions!: pulumi.Output<outputs.guardduty.MalwareProtectionPlanAction[]>;
    /**
     * The ARN of the GuardDuty malware protection plan
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The timestamp when the Malware Protection plan resource was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Information about the protected resource that is associated with the created Malware Protection plan. Presently, S3Bucket is the only supported protected resource. See `protectedResource` below.
     */
    public readonly protectedResource!: pulumi.Output<outputs.guardduty.MalwareProtectionPlanProtectedResource | undefined>;
    /**
     * ARN of IAM role that includes the permissions required to scan and add tags to the associated protected resource.
     */
    public readonly role!: pulumi.Output<string>;
    /**
     * The GuardDuty malware protection plan status. Valid values are `ACTIVE`, `WARNING`, and `ERROR`.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * @deprecated Please use `tags` instead.
     */
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a MalwareProtectionPlan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MalwareProtectionPlanArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MalwareProtectionPlanArgs | MalwareProtectionPlanState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MalwareProtectionPlanState | undefined;
            resourceInputs["actions"] = state ? state.actions : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["protectedResource"] = state ? state.protectedResource : undefined;
            resourceInputs["role"] = state ? state.role : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
        } else {
            const args = argsOrState as MalwareProtectionPlanArgs | undefined;
            if ((!args || args.role === undefined) && !opts.urn) {
                throw new Error("Missing required property 'role'");
            }
            resourceInputs["actions"] = args ? args.actions : undefined;
            resourceInputs["protectedResource"] = args ? args.protectedResource : undefined;
            resourceInputs["role"] = args ? args.role : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MalwareProtectionPlan.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MalwareProtectionPlan resources.
 */
export interface MalwareProtectionPlanState {
    /**
     * Information about whether the tags will be added to the S3 object after scanning. See `actions` below.
     */
    actions?: pulumi.Input<pulumi.Input<inputs.guardduty.MalwareProtectionPlanAction>[]>;
    /**
     * The ARN of the GuardDuty malware protection plan
     */
    arn?: pulumi.Input<string>;
    /**
     * The timestamp when the Malware Protection plan resource was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Information about the protected resource that is associated with the created Malware Protection plan. Presently, S3Bucket is the only supported protected resource. See `protectedResource` below.
     */
    protectedResource?: pulumi.Input<inputs.guardduty.MalwareProtectionPlanProtectedResource>;
    /**
     * ARN of IAM role that includes the permissions required to scan and add tags to the associated protected resource.
     */
    role?: pulumi.Input<string>;
    /**
     * The GuardDuty malware protection plan status. Valid values are `ACTIVE`, `WARNING`, and `ERROR`.
     */
    status?: pulumi.Input<string>;
    /**
     * Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * @deprecated Please use `tags` instead.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a MalwareProtectionPlan resource.
 */
export interface MalwareProtectionPlanArgs {
    /**
     * Information about whether the tags will be added to the S3 object after scanning. See `actions` below.
     */
    actions?: pulumi.Input<pulumi.Input<inputs.guardduty.MalwareProtectionPlanAction>[]>;
    /**
     * Information about the protected resource that is associated with the created Malware Protection plan. Presently, S3Bucket is the only supported protected resource. See `protectedResource` below.
     */
    protectedResource?: pulumi.Input<inputs.guardduty.MalwareProtectionPlanProtectedResource>;
    /**
     * ARN of IAM role that includes the permissions required to scan and add tags to the associated protected resource.
     */
    role: pulumi.Input<string>;
    /**
     * Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
