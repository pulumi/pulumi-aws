// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Provides an Amazon MSK Connect Custom Plugin Resource.
 *
 * ## Example Usage
 * ### Basic configuration
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleBucketV2 = new aws.s3.BucketV2("exampleBucketV2", {});
 * const exampleBucketObjectv2 = new aws.s3.BucketObjectv2("exampleBucketObjectv2", {
 *     bucket: exampleBucketV2.id,
 *     key: "debezium.zip",
 *     source: new pulumi.asset.FileAsset("debezium.zip"),
 * });
 * const exampleCustomPlugin = new aws.mskconnect.CustomPlugin("exampleCustomPlugin", {
 *     contentType: "ZIP",
 *     location: {
 *         s3: {
 *             bucketArn: exampleBucketV2.arn,
 *             fileKey: exampleBucketObjectv2.key,
 *         },
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * terraform import {
 *
 *  to = aws_mskconnect_custom_plugin.example
 *
 *  id = "arn:aws:kafkaconnect:eu-central-1:123456789012:custom-plugin/debezium-example/abcdefgh-1234-5678-9abc-defghijklmno-4" } Using `pulumi import`, import MSK Connect Custom Plugin using the plugin's `arn`. For exampleconsole % pulumi import aws_mskconnect_custom_plugin.example 'arn:aws:kafkaconnect:eu-central-1:123456789012:custom-plugin/debezium-example/abcdefgh-1234-5678-9abc-defghijklmno-4'
 */
export class CustomPlugin extends pulumi.CustomResource {
    /**
     * Get an existing CustomPlugin resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomPluginState, opts?: pulumi.CustomResourceOptions): CustomPlugin {
        return new CustomPlugin(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:mskconnect/customPlugin:CustomPlugin';

    /**
     * Returns true if the given object is an instance of CustomPlugin.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomPlugin {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomPlugin.__pulumiType;
    }

    /**
     * the Amazon Resource Name (ARN) of the custom plugin.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The type of the plugin file. Allowed values are `ZIP` and `JAR`.
     */
    public readonly contentType!: pulumi.Output<string>;
    /**
     * A summary description of the custom plugin.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * an ID of the latest successfully created revision of the custom plugin.
     */
    public /*out*/ readonly latestRevision!: pulumi.Output<number>;
    /**
     * Information about the location of a custom plugin. See below.
     *
     * The following arguments are optional:
     */
    public readonly location!: pulumi.Output<outputs.mskconnect.CustomPluginLocation>;
    /**
     * The name of the custom plugin..
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * the state of the custom plugin.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;

    /**
     * Create a CustomPlugin resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomPluginArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CustomPluginArgs | CustomPluginState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CustomPluginState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["contentType"] = state ? state.contentType : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["latestRevision"] = state ? state.latestRevision : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
        } else {
            const args = argsOrState as CustomPluginArgs | undefined;
            if ((!args || args.contentType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'contentType'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            resourceInputs["contentType"] = args ? args.contentType : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["latestRevision"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CustomPlugin.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CustomPlugin resources.
 */
export interface CustomPluginState {
    /**
     * the Amazon Resource Name (ARN) of the custom plugin.
     */
    arn?: pulumi.Input<string>;
    /**
     * The type of the plugin file. Allowed values are `ZIP` and `JAR`.
     */
    contentType?: pulumi.Input<string>;
    /**
     * A summary description of the custom plugin.
     */
    description?: pulumi.Input<string>;
    /**
     * an ID of the latest successfully created revision of the custom plugin.
     */
    latestRevision?: pulumi.Input<number>;
    /**
     * Information about the location of a custom plugin. See below.
     *
     * The following arguments are optional:
     */
    location?: pulumi.Input<inputs.mskconnect.CustomPluginLocation>;
    /**
     * The name of the custom plugin..
     */
    name?: pulumi.Input<string>;
    /**
     * the state of the custom plugin.
     */
    state?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CustomPlugin resource.
 */
export interface CustomPluginArgs {
    /**
     * The type of the plugin file. Allowed values are `ZIP` and `JAR`.
     */
    contentType: pulumi.Input<string>;
    /**
     * A summary description of the custom plugin.
     */
    description?: pulumi.Input<string>;
    /**
     * Information about the location of a custom plugin. See below.
     *
     * The following arguments are optional:
     */
    location: pulumi.Input<inputs.mskconnect.CustomPluginLocation>;
    /**
     * The name of the custom plugin..
     */
    name?: pulumi.Input<string>;
}
