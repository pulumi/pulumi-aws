// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./input";
import * as outputs from "./output";

export interface ClusterBrokerNodeGroupInfo {
    /**
     * The distribution of broker nodes across availability zones ([documentation](https://docs.aws.amazon.com/msk/1.0/apireference/clusters.html#clusters-model-brokerazdistribution)). Currently the only valid value is `DEFAULT`.
     */
    azDistribution?: pulumi.Input<string>;
    /**
     * A list of subnets to connect to in client VPC ([documentation](https://docs.aws.amazon.com/msk/1.0/apireference/clusters.html#clusters-prop-brokernodegroupinfo-clientsubnets)).
     */
    clientSubnets: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Information about the cluster access configuration. See below. For security reasons, you can't turn on public access while creating an MSK cluster. However, you can update an existing cluster to make it publicly accessible. You can also create a new cluster and then update it to make it publicly accessible ([documentation](https://docs.aws.amazon.com/msk/latest/developerguide/public-access.html)).
     */
    connectivityInfo?: pulumi.Input<inputs.ClusterBrokerNodeGroupInfoConnectivityInfo>;
    /**
     * Specify the instance type to use for the kafka brokersE.g., kafka.m5.large. ([Pricing info](https://aws.amazon.com/msk/pricing/))
     */
    instanceType: pulumi.Input<string>;
    /**
     * A list of the security groups to associate with the elastic network interfaces to control who can communicate with the cluster.
     */
    securityGroups: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A block that contains information about storage volumes attached to MSK broker nodes. See below.
     */
    storageInfo?: pulumi.Input<inputs.ClusterBrokerNodeGroupInfoStorageInfo>;
}
export interface ClusterBrokerNodeGroupInfoConnectivityInfo {
    publicAccess?: pulumi.Input<inputs.ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccess>;
    vpcConnectivity?: pulumi.Input<inputs.ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivity>;
}
export interface ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccess {
    type?: pulumi.Input<string>;
}
export interface ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivity {
    /**
     * Configuration block for specifying a client authentication. See below.
     */
    clientAuthentication?: pulumi.Input<inputs.ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication>;
}
export interface ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication {
    /**
     * Configuration block for specifying SASL client authentication. See below.
     */
    sasl?: pulumi.Input<inputs.ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl>;
    /**
     * Configuration block for specifying TLS client authentication. See below.
     */
    tls?: pulumi.Input<boolean>;
}
export interface ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl {
    iam?: pulumi.Input<boolean>;
    scram?: pulumi.Input<boolean>;
}
export interface ClusterBrokerNodeGroupInfoStorageInfo {
    ebsStorageInfo?: pulumi.Input<inputs.ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfo>;
}
export interface ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfo {
    provisionedThroughput?: pulumi.Input<inputs.ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput>;
    volumeSize?: pulumi.Input<number>;
}
export interface ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput {
    enabled?: pulumi.Input<boolean>;
    volumeThroughput?: pulumi.Input<number>;
}
export interface ClusterClientAuthentication {
    /**
     * Configuration block for specifying SASL client authentication. See below.
     */
    sasl?: pulumi.Input<inputs.ClusterClientAuthenticationSasl>;
    /**
     * Configuration block for specifying TLS client authentication. See below.
     */
    tls?: pulumi.Input<inputs.ClusterClientAuthenticationTls>;
    /**
     * Enables unauthenticated access.
     */
    unauthenticated?: pulumi.Input<boolean>;
}
export interface ClusterClientAuthenticationSasl {
    iam?: pulumi.Input<boolean>;
    scram?: pulumi.Input<boolean>;
}
export interface ClusterClientAuthenticationTls {
    certificateAuthorityArns?: pulumi.Input<pulumi.Input<string>[]>;
}
export interface ClusterConfigurationInfo {
    /**
     * Amazon Resource Name (ARN) of the MSK Configuration to use in the cluster.
     */
    arn: pulumi.Input<string>;
    /**
     * Revision of the MSK Configuration to use in the cluster.
     */
    revision: pulumi.Input<number>;
}
export interface ClusterEncryptionInfo {
    /**
     * You may specify a KMS key short ID or ARN (it will always output an ARN) to use for encrypting your data at rest.  If no key is specified, an AWS managed KMS ('aws/msk' managed service) key will be used for encrypting the data at rest.
     */
    encryptionAtRestKmsKeyArn?: pulumi.Input<string>;
    /**
     * Configuration block to specify encryption in transit. See below.
     */
    encryptionInTransit?: pulumi.Input<inputs.ClusterEncryptionInfoEncryptionInTransit>;
}
export interface ClusterEncryptionInfoEncryptionInTransit {
    clientBroker?: pulumi.Input<string>;
    inCluster?: pulumi.Input<boolean>;
}
export interface ClusterLoggingInfo {
    /**
     * Configuration block for Broker Logs settings for logging info. See below.
     */
    brokerLogs: pulumi.Input<inputs.ClusterLoggingInfoBrokerLogs>;
}
export interface ClusterLoggingInfoBrokerLogs {
    cloudwatchLogs?: pulumi.Input<inputs.ClusterLoggingInfoBrokerLogsCloudwatchLogs>;
    firehose?: pulumi.Input<inputs.ClusterLoggingInfoBrokerLogsFirehose>;
    s3?: pulumi.Input<inputs.ClusterLoggingInfoBrokerLogsS3>;
}
export interface ClusterLoggingInfoBrokerLogsCloudwatchLogs {
    enabled: pulumi.Input<boolean>;
    logGroup?: pulumi.Input<string>;
}
export interface ClusterLoggingInfoBrokerLogsFirehose {
    deliveryStream?: pulumi.Input<string>;
    enabled: pulumi.Input<boolean>;
}
export interface ClusterLoggingInfoBrokerLogsS3 {
    bucket?: pulumi.Input<string>;
    enabled: pulumi.Input<boolean>;
    prefix?: pulumi.Input<string>;
}
export interface ClusterOpenMonitoring {
    /**
     * Configuration block for Prometheus settings for open monitoring. See below.
     */
    prometheus: pulumi.Input<inputs.ClusterOpenMonitoringPrometheus>;
}
export interface ClusterOpenMonitoringPrometheus {
    jmxExporter?: pulumi.Input<inputs.ClusterOpenMonitoringPrometheusJmxExporter>;
    nodeExporter?: pulumi.Input<inputs.ClusterOpenMonitoringPrometheusNodeExporter>;
}
export interface ClusterOpenMonitoringPrometheusJmxExporter {
    enabledInBroker: pulumi.Input<boolean>;
}
export interface ClusterOpenMonitoringPrometheusNodeExporter {
    enabledInBroker: pulumi.Input<boolean>;
}
export interface ReplicatorKafkaCluster {
    /**
     * Details of an Amazon MSK cluster.
     */
    amazonMskCluster: pulumi.Input<inputs.ReplicatorKafkaClusterAmazonMskCluster>;
    /**
     * Details of an Amazon VPC which has network connectivity to the Apache Kafka cluster.
     */
    vpcConfig: pulumi.Input<inputs.ReplicatorKafkaClusterVpcConfig>;
}
export interface ReplicatorKafkaClusterAmazonMskCluster {
    /**
     * The ARN of an Amazon MSK cluster.
     */
    mskClusterArn: pulumi.Input<string>;
}
export interface ReplicatorKafkaClusterVpcConfig {
    /**
     * The AWS security groups to associate with the ENIs used by the replicator. If a security group is not specified, the default security group associated with the VPC is used.
     */
    securityGroupsIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of subnets to connect to in the virtual private cloud (VPC). AWS creates elastic network interfaces inside these subnets to allow communication between your Kafka Cluster and the replicator.
     */
    subnetIds: pulumi.Input<pulumi.Input<string>[]>;
}
export interface ReplicatorReplicationInfoList {
    /**
     * Confguration relating to consumer group replication.
     */
    consumerGroupReplications: pulumi.Input<pulumi.Input<inputs.ReplicatorReplicationInfoListConsumerGroupReplication>[]>;
    sourceKafkaClusterAlias?: pulumi.Input<string>;
    /**
     * The ARN of the source Kafka cluster.
     */
    sourceKafkaClusterArn: pulumi.Input<string>;
    /**
     * The type of compression to use writing records to target Kafka cluster.
     */
    targetCompressionType: pulumi.Input<string>;
    targetKafkaClusterAlias?: pulumi.Input<string>;
    /**
     * The ARN of the target Kafka cluster.
     */
    targetKafkaClusterArn: pulumi.Input<string>;
    /**
     * Configuration relating to topic replication.
     */
    topicReplications: pulumi.Input<pulumi.Input<inputs.ReplicatorReplicationInfoListTopicReplication>[]>;
}
export interface ReplicatorReplicationInfoListConsumerGroupReplication {
    /**
     * List of regular expression patterns indicating the consumer groups that should not be replicated.
     */
    consumerGroupsToExcludes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of regular expression patterns indicating the consumer groups to copy.
     */
    consumerGroupsToReplicates: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether to periodically check for new consumer groups.
     */
    detectAndCopyNewConsumerGroups?: pulumi.Input<boolean>;
    /**
     * Whether to periodically write the translated offsets to __consumer_offsets topic in target cluster.
     */
    synchroniseConsumerGroupOffsets?: pulumi.Input<boolean>;
}
export interface ReplicatorReplicationInfoListTopicReplication {
    /**
     * Whether to periodically configure remote topic ACLs to match their corresponding upstream topics.
     */
    copyAccessControlListsForTopics?: pulumi.Input<boolean>;
    /**
     * Whether to periodically configure remote topics to match their corresponding upstream topics.
     */
    copyTopicConfigurations?: pulumi.Input<boolean>;
    /**
     * Whether to periodically check for new topics and partitions.
     */
    detectAndCopyNewTopics?: pulumi.Input<boolean>;
    /**
     * List of regular expression patterns indicating the topics that should not be replica.
     */
    topicsToExcludes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of regular expression patterns indicating the topics to copy.
     */
    topicsToReplicates: pulumi.Input<pulumi.Input<string>[]>;
}
export interface ServerlessClusterClientAuthentication {
    /**
     * Details for client authentication using SASL. See below.
     */
    sasl: pulumi.Input<inputs.ServerlessClusterClientAuthenticationSasl>;
}
export interface ServerlessClusterClientAuthenticationSasl {
    /**
     * Details for client authentication using IAM. See below.
     */
    iam: pulumi.Input<inputs.ServerlessClusterClientAuthenticationSaslIam>;
}
export interface ServerlessClusterClientAuthenticationSaslIam {
    /**
     * Whether SASL/IAM authentication is enabled or not.
     */
    enabled: pulumi.Input<boolean>;
}
export interface ServerlessClusterVpcConfig {
    /**
     * Specifies up to five security groups that control inbound and outbound traffic for the serverless cluster.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of subnets in at least two different Availability Zones that host your client applications.
     */
    subnetIds: pulumi.Input<pulumi.Input<string>[]>;
}
