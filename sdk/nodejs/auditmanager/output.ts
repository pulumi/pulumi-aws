// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./input";
import * as outputs from "./output";

export interface AssessmentAssessmentReportsDestination {
    /**
     * Destination of the assessment report. This value be in the form `s3://{bucket_name}`.
     */
    destination: string;
    /**
     * Destination type. Currently, `S3` is the only valid value.
     */
    destinationType: string;
}
export interface AssessmentRole {
    /**
     * Amazon Resource Name (ARN) of the IAM role.
     */
    roleArn: string;
    /**
     * Type of customer persona. For assessment creation, type must always be `PROCESS_OWNER`.
     */
    roleType: string;
}
export interface AssessmentRolesAll {
    roleArn: string;
    roleType: string;
}
export interface AssessmentScope {
    /**
     * Amazon Web Services accounts that are in scope for the assessment. See `awsAccounts` below.
     */
    awsAccounts?: outputs.AssessmentScopeAwsAccount[];
    /**
     * Amazon Web Services services that are included in the scope of the assessment. See `awsServices` below.
     */
    awsServices?: outputs.AssessmentScopeAwsService[];
}
export interface AssessmentScopeAwsAccount {
    /**
     * Identifier for the Amazon Web Services account.
     */
    id: string;
}
export interface AssessmentScopeAwsService {
    /**
     * Name of the Amazon Web Service.
     */
    serviceName: string;
}
export interface ControlControlMappingSource {
    /**
     * Description of the source.
     */
    sourceDescription?: string;
    /**
     * Frequency of evidence collection. Valid values are `DAILY`, `WEEKLY`, or `MONTHLY`.
     */
    sourceFrequency?: string;
    sourceId: string;
    /**
     * The keyword to search for in CloudTrail logs, Config rules, Security Hub checks, and Amazon Web Services API names. See `sourceKeyword` below.
     */
    sourceKeyword?: outputs.ControlControlMappingSourceSourceKeyword;
    /**
     * Name of the source.
     */
    sourceName: string;
    /**
     * The setup option for the data source. This option reflects if the evidence collection is automated or manual. Valid values are `System_Controls_Mapping` (automated) and `Procedural_Controls_Mapping` (manual).
     */
    sourceSetUpOption: string;
    /**
     * Type of data source for evidence collection. If `sourceSetUpOption` is manual, the only valid value is `MANUAL`. If `sourceSetUpOption` is automated, valid values are `AWS_Cloudtrail`, `AWS_Config`, `AWS_Security_Hub`, or `AWS_API_Call`.
     *
     * The following arguments are optional:
     */
    sourceType: string;
    /**
     * Instructions for troubleshooting the control.
     */
    troubleshootingText?: string;
}
export interface ControlControlMappingSourceSourceKeyword {
    /**
     * Input method for the keyword. Valid values are `SELECT_FROM_LIST`.
     */
    keywordInputType: string;
    /**
     * The value of the keyword that's used when mapping a control data source. For example, this can be a CloudTrail event name, a rule name for Config, a Security Hub control, or the name of an Amazon Web Services API call. See the [Audit Manager supported control data sources documentation](https://docs.aws.amazon.com/audit-manager/latest/userguide/control-data-sources.html) for more information.
     */
    keywordValue: string;
}
export interface FrameworkControlSet {
    /**
     * Configuration block(s) for the controls within the control set. See `controls` Block below for details.
     */
    controls?: outputs.FrameworkControlSetControl[];
    /**
     * Unique identifier for the framework.
     */
    id: string;
    /**
     * Name of the control set.
     */
    name: string;
}
export interface FrameworkControlSetControl {
    /**
     * Unique identifier of the control.
     */
    id: string;
}
