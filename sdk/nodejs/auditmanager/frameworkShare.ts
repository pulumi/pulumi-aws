// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS Audit Manager Framework Share.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.auditmanager.FrameworkShare("example", {
 *     destinationAccount: "123456789012",
 *     destinationRegion: "us-east-1",
 *     frameworkId: exampleAwsAuditmanagerFramework.id,
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Audit Manager Framework Share using the `id`. For example:
 *
 * ```sh
 * $ pulumi import aws:auditmanager/frameworkShare:FrameworkShare example abcdef-123456
 * ```
 */
export class FrameworkShare extends pulumi.CustomResource {
    /**
     * Get an existing FrameworkShare resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FrameworkShareState, opts?: pulumi.CustomResourceOptions): FrameworkShare {
        return new FrameworkShare(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:auditmanager/frameworkShare:FrameworkShare';

    /**
     * Returns true if the given object is an instance of FrameworkShare.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FrameworkShare {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FrameworkShare.__pulumiType;
    }

    /**
     * Comment from the sender about the share request.
     */
    declare public readonly comment: pulumi.Output<string | undefined>;
    /**
     * Amazon Web Services account of the recipient.
     */
    declare public readonly destinationAccount: pulumi.Output<string>;
    /**
     * Amazon Web Services region of the recipient.
     */
    declare public readonly destinationRegion: pulumi.Output<string>;
    /**
     * Unique identifier for the shared custom framework.
     *
     * The following arguments are optional:
     */
    declare public readonly frameworkId: pulumi.Output<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * Status of the share request.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;

    /**
     * Create a FrameworkShare resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FrameworkShareArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FrameworkShareArgs | FrameworkShareState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FrameworkShareState | undefined;
            resourceInputs["comment"] = state?.comment;
            resourceInputs["destinationAccount"] = state?.destinationAccount;
            resourceInputs["destinationRegion"] = state?.destinationRegion;
            resourceInputs["frameworkId"] = state?.frameworkId;
            resourceInputs["region"] = state?.region;
            resourceInputs["status"] = state?.status;
        } else {
            const args = argsOrState as FrameworkShareArgs | undefined;
            if (args?.destinationAccount === undefined && !opts.urn) {
                throw new Error("Missing required property 'destinationAccount'");
            }
            if (args?.destinationRegion === undefined && !opts.urn) {
                throw new Error("Missing required property 'destinationRegion'");
            }
            if (args?.frameworkId === undefined && !opts.urn) {
                throw new Error("Missing required property 'frameworkId'");
            }
            resourceInputs["comment"] = args?.comment;
            resourceInputs["destinationAccount"] = args?.destinationAccount;
            resourceInputs["destinationRegion"] = args?.destinationRegion;
            resourceInputs["frameworkId"] = args?.frameworkId;
            resourceInputs["region"] = args?.region;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FrameworkShare.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FrameworkShare resources.
 */
export interface FrameworkShareState {
    /**
     * Comment from the sender about the share request.
     */
    comment?: pulumi.Input<string>;
    /**
     * Amazon Web Services account of the recipient.
     */
    destinationAccount?: pulumi.Input<string>;
    /**
     * Amazon Web Services region of the recipient.
     */
    destinationRegion?: pulumi.Input<string>;
    /**
     * Unique identifier for the shared custom framework.
     *
     * The following arguments are optional:
     */
    frameworkId?: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * Status of the share request.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FrameworkShare resource.
 */
export interface FrameworkShareArgs {
    /**
     * Comment from the sender about the share request.
     */
    comment?: pulumi.Input<string>;
    /**
     * Amazon Web Services account of the recipient.
     */
    destinationAccount: pulumi.Input<string>;
    /**
     * Amazon Web Services region of the recipient.
     */
    destinationRegion: pulumi.Input<string>;
    /**
     * Unique identifier for the shared custom framework.
     *
     * The following arguments are optional:
     */
    frameworkId: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
}
