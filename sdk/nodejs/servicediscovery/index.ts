// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetDnsNamespaceArgs, GetDnsNamespaceResult, GetDnsNamespaceOutputArgs } from "./getDnsNamespace";
export const getDnsNamespace: typeof import("./getDnsNamespace").getDnsNamespace = null as any;
export const getDnsNamespaceOutput: typeof import("./getDnsNamespace").getDnsNamespaceOutput = null as any;
utilities.lazyLoad(exports, ["getDnsNamespace","getDnsNamespaceOutput"], () => require("./getDnsNamespace"));

export { GetHttpNamespaceArgs, GetHttpNamespaceResult, GetHttpNamespaceOutputArgs } from "./getHttpNamespace";
export const getHttpNamespace: typeof import("./getHttpNamespace").getHttpNamespace = null as any;
export const getHttpNamespaceOutput: typeof import("./getHttpNamespace").getHttpNamespaceOutput = null as any;
utilities.lazyLoad(exports, ["getHttpNamespace","getHttpNamespaceOutput"], () => require("./getHttpNamespace"));

export { GetServiceArgs, GetServiceResult, GetServiceOutputArgs } from "./getService";
export const getService: typeof import("./getService").getService = null as any;
export const getServiceOutput: typeof import("./getService").getServiceOutput = null as any;
utilities.lazyLoad(exports, ["getService","getServiceOutput"], () => require("./getService"));

export { HttpNamespaceArgs, HttpNamespaceState } from "./httpNamespace";
export type HttpNamespace = import("./httpNamespace").HttpNamespace;
export const HttpNamespace: typeof import("./httpNamespace").HttpNamespace = null as any;
utilities.lazyLoad(exports, ["HttpNamespace"], () => require("./httpNamespace"));

export { InstanceArgs, InstanceState } from "./instance";
export type Instance = import("./instance").Instance;
export const Instance: typeof import("./instance").Instance = null as any;
utilities.lazyLoad(exports, ["Instance"], () => require("./instance"));

export { PrivateDnsNamespaceArgs, PrivateDnsNamespaceState } from "./privateDnsNamespace";
export type PrivateDnsNamespace = import("./privateDnsNamespace").PrivateDnsNamespace;
export const PrivateDnsNamespace: typeof import("./privateDnsNamespace").PrivateDnsNamespace = null as any;
utilities.lazyLoad(exports, ["PrivateDnsNamespace"], () => require("./privateDnsNamespace"));

export { PublicDnsNamespaceArgs, PublicDnsNamespaceState } from "./publicDnsNamespace";
export type PublicDnsNamespace = import("./publicDnsNamespace").PublicDnsNamespace;
export const PublicDnsNamespace: typeof import("./publicDnsNamespace").PublicDnsNamespace = null as any;
utilities.lazyLoad(exports, ["PublicDnsNamespace"], () => require("./publicDnsNamespace"));

export { ServiceArgs, ServiceState } from "./service";
export type Service = import("./service").Service;
export const Service: typeof import("./service").Service = null as any;
utilities.lazyLoad(exports, ["Service"], () => require("./service"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws:servicediscovery/httpNamespace:HttpNamespace":
                return new HttpNamespace(name, <any>undefined, { urn })
            case "aws:servicediscovery/instance:Instance":
                return new Instance(name, <any>undefined, { urn })
            case "aws:servicediscovery/privateDnsNamespace:PrivateDnsNamespace":
                return new PrivateDnsNamespace(name, <any>undefined, { urn })
            case "aws:servicediscovery/publicDnsNamespace:PublicDnsNamespace":
                return new PublicDnsNamespace(name, <any>undefined, { urn })
            case "aws:servicediscovery/service:Service":
                return new Service(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "servicediscovery/httpNamespace", _module)
pulumi.runtime.registerResourceModule("aws", "servicediscovery/instance", _module)
pulumi.runtime.registerResourceModule("aws", "servicediscovery/privateDnsNamespace", _module)
pulumi.runtime.registerResourceModule("aws", "servicediscovery/publicDnsNamespace", _module)
pulumi.runtime.registerResourceModule("aws", "servicediscovery/service", _module)
