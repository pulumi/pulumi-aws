// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./input";
import * as outputs from "./output";

export interface ServiceDnsConfig {
    /**
     * An array that contains one DnsRecord object for each resource record set.
     */
    dnsRecords: outputs.ServiceDnsConfigDnsRecord[];
    /**
     * The ID of the namespace to use for DNS configuration.
     */
    namespaceId: string;
    /**
     * The routing policy that you want to apply to all records that Route 53 creates when you register an instance and specify the service. Valid Values: MULTIVALUE, WEIGHTED
     */
    routingPolicy?: string;
}
export interface ServiceDnsConfigDnsRecord {
    /**
     * The amount of time, in seconds, that you want DNS resolvers to cache the settings for this resource record set.
     */
    ttl: number;
    /**
     * The type of the resource, which indicates the value that Amazon Route 53 returns in response to DNS queries. Valid Values: A, AAAA, SRV, CNAME
     */
    type: string;
}
export interface ServiceHealthCheckConfig {
    /**
     * The number of consecutive health checks. Maximum value of 10.
     */
    failureThreshold?: number;
    /**
     * The path that you want Route 53 to request when performing health checks. Route 53 automatically adds the DNS name for the service. If you don't specify a value, the default value is /.
     */
    resourcePath?: string;
    /**
     * The type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy. Valid Values: HTTP, HTTPS, TCP
     */
    type?: string;
}
export interface ServiceHealthCheckCustomConfig {
    /**
     * The number of 30-second intervals that you want service discovery to wait before it changes the health status of a service instance.  Maximum value of 10.
     */
    failureThreshold?: number;
}
export interface GetServiceDnsConfig {
    /**
     * An array that contains one DnsRecord object for each resource record set.
     */
    dnsRecords: outputs.GetServiceDnsConfigDnsRecord[];
    /**
     * ID of the namespace that the service belongs to.
     */
    namespaceId: string;
    /**
     * Routing policy that you want to apply to all records that Route 53 creates when you register an instance and specify the service. Valid Values: MULTIVALUE, WEIGHTED
     */
    routingPolicy: string;
}
export interface GetServiceDnsConfigDnsRecord {
    /**
     * Amount of time, in seconds, that you want DNS resolvers to cache the settings for this resource record set.
     */
    ttl: number;
    /**
     * The type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy. Valid Values: HTTP, HTTPS, TCP
     */
    type: string;
}
export interface GetServiceHealthCheckConfig {
    /**
     * The number of 30-second intervals that you want service discovery to wait before it changes the health status of a service instance.  Maximum value of 10.
     */
    failureThreshold: number;
    /**
     * Path that you want Route 53 to request when performing health checks. Route 53 automatically adds the DNS name for the service. If you don't specify a value, the default value is /.
     */
    resourcePath: string;
    /**
     * The type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy. Valid Values: HTTP, HTTPS, TCP
     */
    type: string;
}
export interface GetServiceHealthCheckCustomConfig {
    /**
     * The number of 30-second intervals that you want service discovery to wait before it changes the health status of a service instance.  Maximum value of 10.
     */
    failureThreshold: number;
}
