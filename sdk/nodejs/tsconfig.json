{
    "compilerOptions": {
        "outDir": "bin",
        "target": "es2016",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true,
        "stripInternal": true,
        "experimentalDecorators": true,
        "noFallthroughCasesInSwitch": true,
        "forceConsistentCasingInFileNames": true,
        "strict": true
    },
    "files": [
        "accessanalyzer/analyzer.ts",
        "accessanalyzer/index.ts",
        "acm/certificate.ts",
        "acm/certificateValidation.ts",
        "acm/getCertificate.ts",
        "acm/index.ts",
        "acmpca/certificateAuthority.ts",
        "acmpca/getCertificateAuthority.ts",
        "acmpca/index.ts",
        "alb/getListener.ts",
        "alb/getLoadBalancer.ts",
        "alb/getTargetGroup.ts",
        "alb/index.ts",
        "alb/ipAddressType.ts",
        "alb/listener.ts",
        "alb/listenerCertificate.ts",
        "alb/listenerRule.ts",
        "alb/loadBalancer.ts",
        "alb/loadBalancerType.ts",
        "alb/targetGroup.ts",
        "alb/targetGroupAttachment.ts",
        "apigateway/account.ts",
        "apigateway/apiKey.ts",
        "apigateway/authorizer.ts",
        "apigateway/basePathMapping.ts",
        "apigateway/clientCertificate.ts",
        "apigateway/deployment.ts",
        "apigateway/documentationPart.ts",
        "apigateway/documentationVersion.ts",
        "apigateway/domainName.ts",
        "apigateway/getKey.ts",
        "apigateway/getResource.ts",
        "apigateway/getRestApi.ts",
        "apigateway/getVpcLink.ts",
        "apigateway/index.ts",
        "apigateway/integration.ts",
        "apigateway/integrationResponse.ts",
        "apigateway/method.ts",
        "apigateway/methodResponse.ts",
        "apigateway/methodSettings.ts",
        "apigateway/model.ts",
        "apigateway/requestValidator.ts",
        "apigateway/resource.ts",
        "apigateway/response.ts",
        "apigateway/restApi.ts",
        "apigateway/restApiPolicy.ts",
        "apigateway/stage.ts",
        "apigateway/usagePlan.ts",
        "apigateway/usagePlanKey.ts",
        "apigateway/vpcLink.ts",
        "apigatewayv2/api.ts",
        "apigatewayv2/apiMapping.ts",
        "apigatewayv2/authorizer.ts",
        "apigatewayv2/deployment.ts",
        "apigatewayv2/domainName.ts",
        "apigatewayv2/index.ts",
        "apigatewayv2/integration.ts",
        "apigatewayv2/integrationResponse.ts",
        "apigatewayv2/model.ts",
        "apigatewayv2/route.ts",
        "apigatewayv2/routeResponse.ts",
        "apigatewayv2/stage.ts",
        "apigatewayv2/vpcLink.ts",
        "appautoscaling/index.ts",
        "appautoscaling/policy.ts",
        "appautoscaling/scheduledAction.ts",
        "appautoscaling/target.ts",
        "applicationloadbalancing/getListener.ts",
        "applicationloadbalancing/getLoadBalancer.ts",
        "applicationloadbalancing/getTargetGroup.ts",
        "applicationloadbalancing/index.ts",
        "applicationloadbalancing/ipAddressType.ts",
        "applicationloadbalancing/listener.ts",
        "applicationloadbalancing/listenerCertificate.ts",
        "applicationloadbalancing/listenerRule.ts",
        "applicationloadbalancing/loadBalancer.ts",
        "applicationloadbalancing/loadBalancerType.ts",
        "applicationloadbalancing/targetGroup.ts",
        "applicationloadbalancing/targetGroupAttachment.ts",
        "appmesh/gatewayRoute.ts",
        "appmesh/index.ts",
        "appmesh/mesh.ts",
        "appmesh/route.ts",
        "appmesh/virtualGateway.ts",
        "appmesh/virtualNode.ts",
        "appmesh/virtualRouter.ts",
        "appmesh/virtualService.ts",
        "appsync/apiKey.ts",
        "appsync/dataSource.ts",
        "appsync/function.ts",
        "appsync/graphQLApi.ts",
        "appsync/index.ts",
        "appsync/resolver.ts",
        "arn.ts",
        "athena/database.ts",
        "athena/index.ts",
        "athena/namedQuery.ts",
        "athena/workgroup.ts",
        "autoscaling/attachment.ts",
        "autoscaling/getGroup.ts",
        "autoscaling/group.ts",
        "autoscaling/index.ts",
        "autoscaling/lifecycleHook.ts",
        "autoscaling/metrics.ts",
        "autoscaling/notification.ts",
        "autoscaling/notificationType.ts",
        "autoscaling/policy.ts",
        "autoscaling/schedule.ts",
        "autoscalingplans/index.ts",
        "autoscalingplans/scalingPlan.ts",
        "awsMixins.ts",
        "backup/getPlan.ts",
        "backup/getSelection.ts",
        "backup/getVault.ts",
        "backup/index.ts",
        "backup/plan.ts",
        "backup/regionSettings.ts",
        "backup/selection.ts",
        "backup/vault.ts",
        "backup/vaultNotifications.ts",
        "backup/vaultPolicy.ts",
        "batch/computeEnvironment.ts",
        "batch/getComputeEnvironment.ts",
        "batch/getJobQueue.ts",
        "batch/index.ts",
        "batch/jobDefinition.ts",
        "batch/jobQueue.ts",
        "budgets/budget.ts",
        "budgets/index.ts",
        "cfg/aggregateAuthorization.ts",
        "cfg/configurationAggregator.ts",
        "cfg/deliveryChannel.ts",
        "cfg/index.ts",
        "cfg/organizationCustomRule.ts",
        "cfg/organizationManagedRule.ts",
        "cfg/recorder.ts",
        "cfg/recorderStatus.ts",
        "cfg/remediationConfiguration.ts",
        "cfg/rule.ts",
        "cloud9/environmentEC2.ts",
        "cloud9/index.ts",
        "cloudformation/getExport.ts",
        "cloudformation/getStack.ts",
        "cloudformation/index.ts",
        "cloudformation/stack.ts",
        "cloudformation/stackSet.ts",
        "cloudformation/stackSetInstance.ts",
        "cloudfront/distribution.ts",
        "cloudfront/getDistribution.ts",
        "cloudfront/index.ts",
        "cloudfront/originAccessIdentity.ts",
        "cloudfront/publicKey.ts",
        "cloudhsmv2/cluster.ts",
        "cloudhsmv2/getCluster.ts",
        "cloudhsmv2/hsm.ts",
        "cloudhsmv2/index.ts",
        "cloudtrail/getServiceAccount.ts",
        "cloudtrail/index.ts",
        "cloudtrail/trail.ts",
        "cloudwatch/cloudwatchMixins.ts",
        "cloudwatch/dashboard.ts",
        "cloudwatch/eventBus.ts",
        "cloudwatch/eventPermission.ts",
        "cloudwatch/eventRule.ts",
        "cloudwatch/eventRuleMixins.ts",
        "cloudwatch/eventTarget.ts",
        "cloudwatch/getLogGroup.ts",
        "cloudwatch/index.ts",
        "cloudwatch/logDestination.ts",
        "cloudwatch/logDestinationPolicy.ts",
        "cloudwatch/logGroup.ts",
        "cloudwatch/logGroupMixins.ts",
        "cloudwatch/logMetricFilter.ts",
        "cloudwatch/logResourcePolicy.ts",
        "cloudwatch/logStream.ts",
        "cloudwatch/logSubscriptionFilter.ts",
        "cloudwatch/metricAlarm.ts",
        "codeartifact/domain.ts",
        "codeartifact/domainPermissions.ts",
        "codeartifact/getAuthorizationToken.ts",
        "codeartifact/getRepositoryEndpoint.ts",
        "codeartifact/index.ts",
        "codeartifact/repository.ts",
        "codeartifact/repositoryPermissionsPolicy.ts",
        "codebuild/index.ts",
        "codebuild/project.ts",
        "codebuild/reportGroup.ts",
        "codebuild/sourceCredential.ts",
        "codebuild/webhook.ts",
        "codecommit/getRepository.ts",
        "codecommit/index.ts",
        "codecommit/repository.ts",
        "codecommit/trigger.ts",
        "codedeploy/application.ts",
        "codedeploy/deploymentConfig.ts",
        "codedeploy/deploymentGroup.ts",
        "codedeploy/index.ts",
        "codepipeline/index.ts",
        "codepipeline/pipeline.ts",
        "codepipeline/webhook.ts",
        "codestarnotifications/index.ts",
        "codestarnotifications/notificationRule.ts",
        "cognito/getUserPools.ts",
        "cognito/identityPool.ts",
        "cognito/identityPoolRoleAttachment.ts",
        "cognito/identityProvider.ts",
        "cognito/index.ts",
        "cognito/resourceServer.ts",
        "cognito/userGroup.ts",
        "cognito/userPool.ts",
        "cognito/userPoolClient.ts",
        "cognito/userPoolDomain.ts",
        "config/index.ts",
        "config/require.ts",
        "config/vars.ts",
        "cur/getReportDefinition.ts",
        "cur/index.ts",
        "cur/reportDefinition.ts",
        "datapipeline/index.ts",
        "datapipeline/pipeline.ts",
        "datasync/agent.ts",
        "datasync/efsLocation.ts",
        "datasync/index.ts",
        "datasync/locationFsxWindows.ts",
        "datasync/locationSmb.ts",
        "datasync/nfsLocation.ts",
        "datasync/s3location.ts",
        "datasync/task.ts",
        "dax/cluster.ts",
        "dax/index.ts",
        "dax/parameterGroup.ts",
        "dax/subnetGroup.ts",
        "devicefarm/index.ts",
        "devicefarm/project.ts",
        "directconnect/bgpPeer.ts",
        "directconnect/connection.ts",
        "directconnect/connectionAssociation.ts",
        "directconnect/gateway.ts",
        "directconnect/gatewayAssociation.ts",
        "directconnect/gatewayAssociationProposal.ts",
        "directconnect/getGateway.ts",
        "directconnect/hostedPrivateVirtualInterface.ts",
        "directconnect/hostedPrivateVirtualInterfaceAccepter.ts",
        "directconnect/hostedPublicVirtualInterface.ts",
        "directconnect/hostedPublicVirtualInterfaceAccepter.ts",
        "directconnect/hostedTransitVirtualInterface.ts",
        "directconnect/hostedTransitVirtualInterfaceAcceptor.ts",
        "directconnect/index.ts",
        "directconnect/linkAggregationGroup.ts",
        "directconnect/privateVirtualInterface.ts",
        "directconnect/publicVirtualInterface.ts",
        "directconnect/transitVirtualInterface.ts",
        "directoryservice/conditionalForwader.ts",
        "directoryservice/directory.ts",
        "directoryservice/getDirectory.ts",
        "directoryservice/index.ts",
        "directoryservice/logService.ts",
        "dlm/index.ts",
        "dlm/lifecyclePolicy.ts",
        "dms/certificate.ts",
        "dms/endpoint.ts",
        "dms/eventSubscription.ts",
        "dms/index.ts",
        "dms/replicationInstance.ts",
        "dms/replicationSubnetGroup.ts",
        "dms/replicationTask.ts",
        "docdb/cluster.ts",
        "docdb/clusterInstance.ts",
        "docdb/clusterParameterGroup.ts",
        "docdb/clusterSnapshot.ts",
        "docdb/getEngineVersion.ts",
        "docdb/getOrderableDbInstance.ts",
        "docdb/index.ts",
        "docdb/subnetGroup.ts",
        "dynamodb/dynamodbMixins.ts",
        "dynamodb/getTable.ts",
        "dynamodb/globalTable.ts",
        "dynamodb/index.ts",
        "dynamodb/table.ts",
        "dynamodb/tableItem.ts",
        "ebs/defaultKmsKey.ts",
        "ebs/encryptionByDefault.ts",
        "ebs/getDefaultKmsKey.ts",
        "ebs/getEbsVolumes.ts",
        "ebs/getEncryptionByDefault.ts",
        "ebs/getSnapshot.ts",
        "ebs/getSnapshotIds.ts",
        "ebs/getVolume.ts",
        "ebs/index.ts",
        "ebs/snapshot.ts",
        "ebs/snapshotCopy.ts",
        "ebs/volume.ts",
        "ec2/ami.ts",
        "ec2/amiCopy.ts",
        "ec2/amiFromInstance.ts",
        "ec2/amiLaunchPermission.ts",
        "ec2/availabilityZoneGroup.ts",
        "ec2/capacityReservation.ts",
        "ec2/customerGateway.ts",
        "ec2/dedicatedHost.ts",
        "ec2/defaultNetworkAcl.ts",
        "ec2/defaultRouteTable.ts",
        "ec2/defaultSecurityGroup.ts",
        "ec2/defaultSubnet.ts",
        "ec2/defaultVpc.ts",
        "ec2/defaultVpcDhcpOptions.ts",
        "ec2/egressOnlyInternetGateway.ts",
        "ec2/eip.ts",
        "ec2/eipAssociation.ts",
        "ec2/fleet.ts",
        "ec2/flowLog.ts",
        "ec2/getCoipPool.ts",
        "ec2/getCoipPools.ts",
        "ec2/getCustomerGateway.ts",
        "ec2/getDedicatedHost.ts",
        "ec2/getInstance.ts",
        "ec2/getInstanceType.ts",
        "ec2/getInstanceTypeOffering.ts",
        "ec2/getInstanceTypeOfferings.ts",
        "ec2/getInstances.ts",
        "ec2/getInternetGateway.ts",
        "ec2/getLaunchConfiguration.ts",
        "ec2/getLaunchTemplate.ts",
        "ec2/getLocalGateway.ts",
        "ec2/getLocalGatewayRouteTable.ts",
        "ec2/getLocalGatewayRouteTables.ts",
        "ec2/getLocalGatewayVirtualInterface.ts",
        "ec2/getLocalGatewayVirtualInterfaceGroup.ts",
        "ec2/getLocalGatewayVirtualInterfaceGroups.ts",
        "ec2/getLocalGateways.ts",
        "ec2/getNatGateway.ts",
        "ec2/getNetworkAcls.ts",
        "ec2/getNetworkInterface.ts",
        "ec2/getNetworkInterfaces.ts",
        "ec2/getRoute.ts",
        "ec2/getRouteTable.ts",
        "ec2/getRouteTables.ts",
        "ec2/getSecurityGroup.ts",
        "ec2/getSecurityGroups.ts",
        "ec2/getSpotPrice.ts",
        "ec2/getSubnet.ts",
        "ec2/getSubnetIds.ts",
        "ec2/getVpc.ts",
        "ec2/getVpcDhcpOptions.ts",
        "ec2/getVpcEndpoint.ts",
        "ec2/getVpcEndpointService.ts",
        "ec2/getVpcPeeringConnection.ts",
        "ec2/getVpcPeeringConnections.ts",
        "ec2/getVpcs.ts",
        "ec2/getVpnGateway.ts",
        "ec2/index.ts",
        "ec2/instance.ts",
        "ec2/instancePlatform.ts",
        "ec2/instanceType.ts",
        "ec2/internetGateway.ts",
        "ec2/keyPair.ts",
        "ec2/launchConfiguration.ts",
        "ec2/launchTemplate.ts",
        "ec2/localGatewayRoute.ts",
        "ec2/localGatewayRouteTableVpcAssociation.ts",
        "ec2/mainRouteTableAssociation.ts",
        "ec2/natGateway.ts",
        "ec2/networkAcl.ts",
        "ec2/networkAclRule.ts",
        "ec2/networkInterface.ts",
        "ec2/networkInterfaceAttachment.ts",
        "ec2/networkInterfaceSecurityGroupAttachment.ts",
        "ec2/peeringConnectionOptions.ts",
        "ec2/placementGroup.ts",
        "ec2/placementStrategy.ts",
        "ec2/protocolType.ts",
        "ec2/proxyProtocolPolicy.ts",
        "ec2/route.ts",
        "ec2/routeTable.ts",
        "ec2/routeTableAssociation.ts",
        "ec2/securityGroup.ts",
        "ec2/securityGroupRule.ts",
        "ec2/snapshotCreateVolumePermission.ts",
        "ec2/spotDatafeedSubscription.ts",
        "ec2/spotFleetRequest.ts",
        "ec2/spotInstanceRequest.ts",
        "ec2/subnet.ts",
        "ec2/tag.ts",
        "ec2/tenancy.ts",
        "ec2/trafficMirrorFilter.ts",
        "ec2/trafficMirrorFilterRule.ts",
        "ec2/trafficMirrorSession.ts",
        "ec2/trafficMirrorTarget.ts",
        "ec2/transitGatewayPeeringAttachmentAccepter.ts",
        "ec2/volumeAttachment.ts",
        "ec2/vpc.ts",
        "ec2/vpcDhcpOptions.ts",
        "ec2/vpcDhcpOptionsAssociation.ts",
        "ec2/vpcEndpoint.ts",
        "ec2/vpcEndpointConnectionNotification.ts",
        "ec2/vpcEndpointRouteTableAssociation.ts",
        "ec2/vpcEndpointService.ts",
        "ec2/vpcEndpointServiceAllowedPrinciple.ts",
        "ec2/vpcEndpointSubnetAssociation.ts",
        "ec2/vpcIpv4CidrBlockAssociation.ts",
        "ec2/vpcPeeringConnection.ts",
        "ec2/vpcPeeringConnectionAccepter.ts",
        "ec2/vpnConnection.ts",
        "ec2/vpnConnectionRoute.ts",
        "ec2/vpnGateway.ts",
        "ec2/vpnGatewayAttachment.ts",
        "ec2/vpnGatewayRoutePropagation.ts",
        "ec2clientvpn/authorizationRule.ts",
        "ec2clientvpn/endpoint.ts",
        "ec2clientvpn/index.ts",
        "ec2clientvpn/networkAssociation.ts",
        "ec2clientvpn/route.ts",
        "ec2transitgateway/getDirectConnectGatewayAttachment.ts",
        "ec2transitgateway/getPeeringAttachment.ts",
        "ec2transitgateway/getRouteTable.ts",
        "ec2transitgateway/getTransitGateway.ts",
        "ec2transitgateway/getVpcAttachment.ts",
        "ec2transitgateway/getVpnAttachment.ts",
        "ec2transitgateway/index.ts",
        "ec2transitgateway/peeringAttachment.ts",
        "ec2transitgateway/route.ts",
        "ec2transitgateway/routeTable.ts",
        "ec2transitgateway/routeTableAssociation.ts",
        "ec2transitgateway/routeTablePropagation.ts",
        "ec2transitgateway/transitGateway.ts",
        "ec2transitgateway/vpcAttachment.ts",
        "ec2transitgateway/vpcAttachmentAccepter.ts",
        "ecr/getAuthorizationToken.ts",
        "ecr/getCredentials.ts",
        "ecr/getImage.ts",
        "ecr/getRepository.ts",
        "ecr/index.ts",
        "ecr/lifecyclePolicy.ts",
        "ecr/lifecyclePolicyDocument.ts",
        "ecr/repository.ts",
        "ecr/repositoryPolicy.ts",
        "ecs/capacityProvider.ts",
        "ecs/cluster.ts",
        "ecs/container.ts",
        "ecs/getCluster.ts",
        "ecs/getContainerDefinition.ts",
        "ecs/getService.ts",
        "ecs/getTaskDefinition.ts",
        "ecs/index.ts",
        "ecs/service.ts",
        "ecs/taskDefinition.ts",
        "efs/accessPoint.ts",
        "efs/fileSystem.ts",
        "efs/fileSystemPolicy.ts",
        "efs/getAccessPoint.ts",
        "efs/getAccessPoints.ts",
        "efs/getFileSystem.ts",
        "efs/getMountTarget.ts",
        "efs/index.ts",
        "efs/mountTarget.ts",
        "eks/cluster.ts",
        "eks/fargateProfile.ts",
        "eks/getCluster.ts",
        "eks/getClusterAuth.ts",
        "eks/index.ts",
        "eks/nodeGroup.ts",
        "elasticache/cluster.ts",
        "elasticache/getCluster.ts",
        "elasticache/getReplicationGroup.ts",
        "elasticache/index.ts",
        "elasticache/parameterGroup.ts",
        "elasticache/replicationGroup.ts",
        "elasticache/securityGroup.ts",
        "elasticache/subnetGroup.ts",
        "elasticbeanstalk/application.ts",
        "elasticbeanstalk/applicationVersion.ts",
        "elasticbeanstalk/configurationTemplate.ts",
        "elasticbeanstalk/environment.ts",
        "elasticbeanstalk/getApplication.ts",
        "elasticbeanstalk/getHostedZone.ts",
        "elasticbeanstalk/getSolutionStack.ts",
        "elasticbeanstalk/index.ts",
        "elasticloadbalancing/appCookieStickinessPolicy.ts",
        "elasticloadbalancing/attachment.ts",
        "elasticloadbalancing/getHostedZoneId.ts",
        "elasticloadbalancing/getLoadBalancer.ts",
        "elasticloadbalancing/getServiceAccount.ts",
        "elasticloadbalancing/index.ts",
        "elasticloadbalancing/listenerPolicy.ts",
        "elasticloadbalancing/loadBalancer.ts",
        "elasticloadbalancing/loadBalancerBackendServerPolicy.ts",
        "elasticloadbalancing/loadBalancerCookieStickinessPolicy.ts",
        "elasticloadbalancing/loadBalancerPolicy.ts",
        "elasticloadbalancing/sslNegotiationPolicy.ts",
        "elasticloadbalancingv2/getListener.ts",
        "elasticloadbalancingv2/getLoadBalancer.ts",
        "elasticloadbalancingv2/getTargetGroup.ts",
        "elasticloadbalancingv2/index.ts",
        "elasticloadbalancingv2/listener.ts",
        "elasticloadbalancingv2/listenerCertificate.ts",
        "elasticloadbalancingv2/listenerRule.ts",
        "elasticloadbalancingv2/loadBalancer.ts",
        "elasticloadbalancingv2/targetGroup.ts",
        "elasticloadbalancingv2/targetGroupAttachment.ts",
        "elasticsearch/domain.ts",
        "elasticsearch/domainPolicy.ts",
        "elasticsearch/getDomain.ts",
        "elasticsearch/index.ts",
        "elastictranscoder/index.ts",
        "elastictranscoder/pipeline.ts",
        "elastictranscoder/preset.ts",
        "elb/appCookieStickinessPolicy.ts",
        "elb/attachment.ts",
        "elb/getHostedZoneId.ts",
        "elb/getLoadBalancer.ts",
        "elb/getServiceAccount.ts",
        "elb/index.ts",
        "elb/listenerPolicy.ts",
        "elb/loadBalancer.ts",
        "elb/loadBalancerBackendServerPolicy.ts",
        "elb/loadBalancerCookieStickinessPolicy.ts",
        "elb/loadBalancerPolicy.ts",
        "elb/sslNegotiationPolicy.ts",
        "emr/cluster.ts",
        "emr/index.ts",
        "emr/instanceFleet.ts",
        "emr/instanceGroup.ts",
        "emr/managedScalingPolicy.ts",
        "emr/securityConfiguration.ts",
        "fms/adminAccount.ts",
        "fms/index.ts",
        "fsx/index.ts",
        "fsx/lustreFileSystem.ts",
        "fsx/windowsFileSystem.ts",
        "gamelift/alias.ts",
        "gamelift/build.ts",
        "gamelift/fleet.ts",
        "gamelift/gameSessionQueue.ts",
        "gamelift/index.ts",
        "getAmi.ts",
        "getAmiIds.ts",
        "getArn.ts",
        "getAutoscalingGroups.ts",
        "getAvailabilityZone.ts",
        "getAvailabilityZones.ts",
        "getBillingServiceAccount.ts",
        "getCallerIdentity.ts",
        "getCanonicalUserId.ts",
        "getElasticIp.ts",
        "getIpRanges.ts",
        "getPartition.ts",
        "getPrefixList.ts",
        "getRegion.ts",
        "getRegions.ts",
        "glacier/index.ts",
        "glacier/vault.ts",
        "glacier/vaultLock.ts",
        "globalaccelerator/accelerator.ts",
        "globalaccelerator/endpointGroup.ts",
        "globalaccelerator/index.ts",
        "globalaccelerator/listener.ts",
        "glue/catalogDatabase.ts",
        "glue/catalogTable.ts",
        "glue/classifier.ts",
        "glue/connection.ts",
        "glue/crawler.ts",
        "glue/dataCatalogEncryptionSettings.ts",
        "glue/devEndpoint.ts",
        "glue/getScript.ts",
        "glue/index.ts",
        "glue/job.ts",
        "glue/mltransform.ts",
        "glue/partition.ts",
        "glue/registry.ts",
        "glue/resourcePolicy.ts",
        "glue/securityConfiguration.ts",
        "glue/trigger.ts",
        "glue/userDefinedFunction.ts",
        "glue/workflow.ts",
        "guardduty/detector.ts",
        "guardduty/filter.ts",
        "guardduty/getDetector.ts",
        "guardduty/index.ts",
        "guardduty/inviteAccepter.ts",
        "guardduty/ipset.ts",
        "guardduty/member.ts",
        "guardduty/organizationAdminAccount.ts",
        "guardduty/organizationConfiguration.ts",
        "guardduty/publishingDestination.ts",
        "guardduty/threatIntelSet.ts",
        "iam/accessKey.ts",
        "iam/accountAlias.ts",
        "iam/accountPasswordPolicy.ts",
        "iam/documents.ts",
        "iam/getAccountAlias.ts",
        "iam/getGroup.ts",
        "iam/getInstanceProfile.ts",
        "iam/getPolicy.ts",
        "iam/getPolicyDocument.ts",
        "iam/getRole.ts",
        "iam/getServerCertificate.ts",
        "iam/getUser.ts",
        "iam/group.ts",
        "iam/groupMembership.ts",
        "iam/groupPolicy.ts",
        "iam/groupPolicyAttachment.ts",
        "iam/index.ts",
        "iam/instanceProfile.ts",
        "iam/managedPolicies.ts",
        "iam/openIdConnectProvider.ts",
        "iam/policy.ts",
        "iam/policyAttachment.ts",
        "iam/principals.ts",
        "iam/role.ts",
        "iam/rolePolicy.ts",
        "iam/rolePolicyAttachment.ts",
        "iam/samlProvider.ts",
        "iam/serverCertificate.ts",
        "iam/serviceLinkedRole.ts",
        "iam/sshKey.ts",
        "iam/user.ts",
        "iam/userGroupMembership.ts",
        "iam/userLoginProfile.ts",
        "iam/userPolicy.ts",
        "iam/userPolicyAttachment.ts",
        "imagebuilder/component.ts",
        "imagebuilder/distributionConfiguration.ts",
        "imagebuilder/getComponent.ts",
        "imagebuilder/getDistributionConfiguration.ts",
        "imagebuilder/getImagePipeline.ts",
        "imagebuilder/getImageRecipe.ts",
        "imagebuilder/getInfrastructureConfiguration.ts",
        "imagebuilder/imagePipeline.ts",
        "imagebuilder/imageRecipe.ts",
        "imagebuilder/index.ts",
        "imagebuilder/infrastructureConfiguration.ts",
        "index.ts",
        "inspector/assessmentTarget.ts",
        "inspector/assessmentTemplate.ts",
        "inspector/getRulesPackages.ts",
        "inspector/index.ts",
        "inspector/resourceGroup.ts",
        "iot/certificate.ts",
        "iot/getEndpoint.ts",
        "iot/index.ts",
        "iot/policy.ts",
        "iot/policyAttachment.ts",
        "iot/roleAlias.ts",
        "iot/thing.ts",
        "iot/thingPrincipalAttachment.ts",
        "iot/thingType.ts",
        "iot/topicRule.ts",
        "kinesis/analyticsApplication.ts",
        "kinesis/firehoseDeliveryStream.ts",
        "kinesis/getStream.ts",
        "kinesis/index.ts",
        "kinesis/kinesisMixins.ts",
        "kinesis/stream.ts",
        "kinesis/videoStream.ts",
        "kinesisanalyticsv2/application.ts",
        "kinesisanalyticsv2/index.ts",
        "kms/alias.ts",
        "kms/ciphertext.ts",
        "kms/externalKey.ts",
        "kms/getAlias.ts",
        "kms/getCipherText.ts",
        "kms/getKey.ts",
        "kms/getSecret.ts",
        "kms/getSecrets.ts",
        "kms/grant.ts",
        "kms/index.ts",
        "kms/key.ts",
        "lambda/alias.ts",
        "lambda/codeSigningConfig.ts",
        "lambda/eventSourceMapping.ts",
        "lambda/function.ts",
        "lambda/functionEventInvokeConfig.ts",
        "lambda/getAlias.ts",
        "lambda/getCodeSigningConfig.ts",
        "lambda/getFunction.ts",
        "lambda/getInvocation.ts",
        "lambda/getLayerVersion.ts",
        "lambda/index.ts",
        "lambda/lambdaMixins.ts",
        "lambda/layerVersion.ts",
        "lambda/permission.ts",
        "lambda/provisionedConcurrencyConfig.ts",
        "lambda/runtimes.ts",
        "lb/getListener.ts",
        "lb/getLoadBalancer.ts",
        "lb/getTargetGroup.ts",
        "lb/index.ts",
        "lb/listener.ts",
        "lb/listenerCertificate.ts",
        "lb/listenerRule.ts",
        "lb/loadBalancer.ts",
        "lb/targetGroup.ts",
        "lb/targetGroupAttachment.ts",
        "lex/bot.ts",
        "lex/botAlias.ts",
        "lex/getBot.ts",
        "lex/getBotAlias.ts",
        "lex/getIntent.ts",
        "lex/getSlotType.ts",
        "lex/index.ts",
        "lex/intent.ts",
        "lex/slotType.ts",
        "licensemanager/association.ts",
        "licensemanager/index.ts",
        "licensemanager/licenseConfiguration.ts",
        "lightsail/domain.ts",
        "lightsail/index.ts",
        "lightsail/instance.ts",
        "lightsail/keyPair.ts",
        "lightsail/staticIp.ts",
        "lightsail/staticIpAttachment.ts",
        "macie/index.ts",
        "macie/memberAccountAssociation.ts",
        "macie/s3bucketAssociation.ts",
        "mediaconvert/index.ts",
        "mediaconvert/queue.ts",
        "mediapackage/channel.ts",
        "mediapackage/index.ts",
        "mediastore/container.ts",
        "mediastore/containerPolicy.ts",
        "mediastore/index.ts",
        "mq/broker.ts",
        "mq/configuration.ts",
        "mq/getBroker.ts",
        "mq/index.ts",
        "msk/cluster.ts",
        "msk/configuration.ts",
        "msk/getCluster.ts",
        "msk/getConfiguration.ts",
        "msk/index.ts",
        "msk/scramSecretAssociation.ts",
        "neptune/cluster.ts",
        "neptune/clusterInstance.ts",
        "neptune/clusterParameterGroup.ts",
        "neptune/clusterSnapshot.ts",
        "neptune/eventSubscription.ts",
        "neptune/getEngineVersion.ts",
        "neptune/getOrderableDbInstance.ts",
        "neptune/index.ts",
        "neptune/parameterGroup.ts",
        "neptune/subnetGroup.ts",
        "networkfirewall/firewall.ts",
        "networkfirewall/firewallPolicy.ts",
        "networkfirewall/index.ts",
        "networkfirewall/loggingConfiguration.ts",
        "networkfirewall/resourcePolicy.ts",
        "networkfirewall/ruleGroup.ts",
        "opsworks/application.ts",
        "opsworks/customLayer.ts",
        "opsworks/gangliaLayer.ts",
        "opsworks/haproxyLayer.ts",
        "opsworks/index.ts",
        "opsworks/instance.ts",
        "opsworks/javaAppLayer.ts",
        "opsworks/memcachedLayer.ts",
        "opsworks/mysqlLayer.ts",
        "opsworks/nodejsAppLayer.ts",
        "opsworks/permission.ts",
        "opsworks/phpAppLayer.ts",
        "opsworks/railsAppLayer.ts",
        "opsworks/rdsDbInstance.ts",
        "opsworks/stack.ts",
        "opsworks/staticWebLayer.ts",
        "opsworks/userProfile.ts",
        "organizations/account.ts",
        "organizations/getOrganization.ts",
        "organizations/getOrganizationalUnits.ts",
        "organizations/index.ts",
        "organizations/organization.ts",
        "organizations/organizationalUnit.ts",
        "organizations/policy.ts",
        "organizations/policyAttachment.ts",
        "outposts/getOutpost.ts",
        "outposts/getOutpostInstanceType.ts",
        "outposts/getOutpostInstanceTypes.ts",
        "outposts/getOutposts.ts",
        "outposts/getSite.ts",
        "outposts/getSites.ts",
        "outposts/index.ts",
        "pinpoint/admChannel.ts",
        "pinpoint/apnsChannel.ts",
        "pinpoint/apnsSandboxChannel.ts",
        "pinpoint/apnsVoipChannel.ts",
        "pinpoint/apnsVoipSandboxChannel.ts",
        "pinpoint/app.ts",
        "pinpoint/baiduChannel.ts",
        "pinpoint/emailChannel.ts",
        "pinpoint/eventStream.ts",
        "pinpoint/gcmChannel.ts",
        "pinpoint/index.ts",
        "pinpoint/smsChannel.ts",
        "pricing/getProduct.ts",
        "pricing/index.ts",
        "provider.ts",
        "qldb/getLedger.ts",
        "qldb/index.ts",
        "qldb/ledger.ts",
        "quicksight/group.ts",
        "quicksight/index.ts",
        "quicksight/user.ts",
        "ram/getResourceShare.ts",
        "ram/index.ts",
        "ram/principalAssociation.ts",
        "ram/resourceAssociation.ts",
        "ram/resourceShare.ts",
        "ram/resourceShareAccepter.ts",
        "rds/cluster.ts",
        "rds/clusterEndpoint.ts",
        "rds/clusterInstance.ts",
        "rds/clusterParameterGroup.ts",
        "rds/clusterSnapshot.ts",
        "rds/engineMode.ts",
        "rds/engineType.ts",
        "rds/eventSubscription.ts",
        "rds/getCertificate.ts",
        "rds/getCluster.ts",
        "rds/getClusterSnapshot.ts",
        "rds/getEngineVersion.ts",
        "rds/getEventCategories.ts",
        "rds/getInstance.ts",
        "rds/getOrderableDbInstance.ts",
        "rds/getSnapshot.ts",
        "rds/getSubnetGroup.ts",
        "rds/globalCluster.ts",
        "rds/index.ts",
        "rds/instance.ts",
        "rds/instanceType.ts",
        "rds/optionGroup.ts",
        "rds/parameterGroup.ts",
        "rds/proxy.ts",
        "rds/proxyDefaultTargetGroup.ts",
        "rds/proxyTarget.ts",
        "rds/roleAssociation.ts",
        "rds/securityGroup.ts",
        "rds/snapshot.ts",
        "rds/storageType.ts",
        "rds/subnetGroup.ts",
        "redshift/cluster.ts",
        "redshift/eventSubscription.ts",
        "redshift/getCluster.ts",
        "redshift/getOrderableCluster.ts",
        "redshift/getServiceAccount.ts",
        "redshift/index.ts",
        "redshift/parameterGroup.ts",
        "redshift/securityGroup.ts",
        "redshift/snapshotCopyGrant.ts",
        "redshift/snapshotSchedule.ts",
        "redshift/snapshotScheduleAssociation.ts",
        "redshift/subnetGroup.ts",
        "region.ts",
        "resourcegroups/group.ts",
        "resourcegroups/index.ts",
        "route53/delegationSet.ts",
        "route53/getDelegationSet.ts",
        "route53/getResolverEndpoint.ts",
        "route53/getResolverRule.ts",
        "route53/getResolverRules.ts",
        "route53/getZone.ts",
        "route53/healthCheck.ts",
        "route53/index.ts",
        "route53/queryLog.ts",
        "route53/record.ts",
        "route53/recordType.ts",
        "route53/resolverEndpoint.ts",
        "route53/resolverQueryLogConfig.ts",
        "route53/resolverQueryLogConfigAssociation.ts",
        "route53/resolverRule.ts",
        "route53/resolverRuleAssociation.ts",
        "route53/vpcAssociationAuthorization.ts",
        "route53/zone.ts",
        "route53/zoneAssociation.ts",
        "s3/accessPoint.ts",
        "s3/accountPublicAccessBlock.ts",
        "s3/analyticsConfiguration.ts",
        "s3/bucket.ts",
        "s3/bucketMetric.ts",
        "s3/bucketNotification.ts",
        "s3/bucketObject.ts",
        "s3/bucketOwnershipControls.ts",
        "s3/bucketPolicy.ts",
        "s3/bucketPublicAccessBlock.ts",
        "s3/cannedAcl.ts",
        "s3/getBucket.ts",
        "s3/getBucketObject.ts",
        "s3/getBucketObjects.ts",
        "s3/index.ts",
        "s3/inventory.ts",
        "s3/routingRules.ts",
        "s3/s3Mixins.ts",
        "s3control/bucket.ts",
        "s3control/bucketLifecycleConfiguration.ts",
        "s3control/bucketPolicy.ts",
        "s3control/index.ts",
        "s3outposts/endpoint.ts",
        "s3outposts/index.ts",
        "sagemaker/codeRepository.ts",
        "sagemaker/endpoint.ts",
        "sagemaker/endpointConfiguration.ts",
        "sagemaker/getPrebuiltEcrImage.ts",
        "sagemaker/index.ts",
        "sagemaker/model.ts",
        "sagemaker/notebookInstance.ts",
        "sagemaker/notebookInstanceLifecycleConfiguration.ts",
        "secretsmanager/getSecret.ts",
        "secretsmanager/getSecretRotation.ts",
        "secretsmanager/getSecretVersion.ts",
        "secretsmanager/index.ts",
        "secretsmanager/secret.ts",
        "secretsmanager/secretPolicy.ts",
        "secretsmanager/secretRotation.ts",
        "secretsmanager/secretVersion.ts",
        "securityhub/account.ts",
        "securityhub/actionTarget.ts",
        "securityhub/index.ts",
        "securityhub/member.ts",
        "securityhub/productSubscription.ts",
        "securityhub/standardsSubscription.ts",
        "serverless/function.ts",
        "serverless/index.ts",
        "servicecatalog/index.ts",
        "servicecatalog/portfolio.ts",
        "servicediscovery/httpNamespace.ts",
        "servicediscovery/index.ts",
        "servicediscovery/privateDnsNamespace.ts",
        "servicediscovery/publicDnsNamespace.ts",
        "servicediscovery/service.ts",
        "servicequotas/getService.ts",
        "servicequotas/getServiceQuota.ts",
        "servicequotas/index.ts",
        "servicequotas/serviceQuota.ts",
        "ses/activeReceiptRuleSet.ts",
        "ses/confgurationSet.ts",
        "ses/configurationSet.ts",
        "ses/domainDkim.ts",
        "ses/domainIdentity.ts",
        "ses/domainIdentityVerification.ts",
        "ses/emailIdentity.ts",
        "ses/eventDestination.ts",
        "ses/identityNotificationTopic.ts",
        "ses/identityPolicy.ts",
        "ses/index.ts",
        "ses/mailFrom.ts",
        "ses/receiptFilter.ts",
        "ses/receiptRule.ts",
        "ses/receiptRuleSet.ts",
        "ses/template.ts",
        "sfn/activity.ts",
        "sfn/getActivity.ts",
        "sfn/getStateMachine.ts",
        "sfn/index.ts",
        "sfn/stateMachine.ts",
        "shield/index.ts",
        "shield/protection.ts",
        "signer/getSigningJob.ts",
        "signer/getSigningProfile.ts",
        "signer/index.ts",
        "signer/signingJob.ts",
        "signer/signingProfile.ts",
        "signer/signingProfilePermission.ts",
        "simpledb/domain.ts",
        "simpledb/index.ts",
        "sns/getTopic.ts",
        "sns/index.ts",
        "sns/platformApplication.ts",
        "sns/smsPreferences.ts",
        "sns/snsMixins.ts",
        "sns/topic.ts",
        "sns/topicPolicy.ts",
        "sns/topicSubscription.ts",
        "sqs/getQueue.ts",
        "sqs/index.ts",
        "sqs/queue.ts",
        "sqs/queuePolicy.ts",
        "sqs/redrive.ts",
        "sqs/sqsMixins.ts",
        "ssm/activation.ts",
        "ssm/association.ts",
        "ssm/document.ts",
        "ssm/getDocument.ts",
        "ssm/getParameter.ts",
        "ssm/getPatchBaseline.ts",
        "ssm/index.ts",
        "ssm/maintenanceWindow.ts",
        "ssm/maintenanceWindowTarget.ts",
        "ssm/maintenanceWindowTask.ts",
        "ssm/parameter.ts",
        "ssm/parameterType.ts",
        "ssm/patchBaseline.ts",
        "ssm/patchGroup.ts",
        "ssm/resourceDataSync.ts",
        "storagegateway/cache.ts",
        "storagegateway/cachesIscsiVolume.ts",
        "storagegateway/gateway.ts",
        "storagegateway/getLocalDisk.ts",
        "storagegateway/index.ts",
        "storagegateway/nfsFileShare.ts",
        "storagegateway/smbFileShare.ts",
        "storagegateway/storedIscsiVolume.ts",
        "storagegateway/tapePool.ts",
        "storagegateway/uploadBuffer.ts",
        "storagegateway/workingStorage.ts",
        "swf/domain.ts",
        "swf/index.ts",
        "tags.ts",
        "transfer/getServer.ts",
        "transfer/index.ts",
        "transfer/server.ts",
        "transfer/sshKey.ts",
        "transfer/user.ts",
        "types/enums/alb/index.ts",
        "types/enums/applicationloadbalancing/index.ts",
        "types/enums/autoscaling/index.ts",
        "types/enums/ec2/index.ts",
        "types/enums/iam/index.ts",
        "types/enums/index.ts",
        "types/enums/lambda/index.ts",
        "types/enums/rds/index.ts",
        "types/enums/route53/index.ts",
        "types/enums/s3/index.ts",
        "types/enums/ssm/index.ts",
        "types/index.ts",
        "types/input.ts",
        "types/output.ts",
        "utilities.ts",
        "utils.ts",
        "waf/byteMatchSet.ts",
        "waf/geoMatchSet.ts",
        "waf/getIpset.ts",
        "waf/getRateBasedRule.ts",
        "waf/getRule.ts",
        "waf/getWebAcl.ts",
        "waf/index.ts",
        "waf/ipSet.ts",
        "waf/rateBasedRule.ts",
        "waf/regexMatchSet.ts",
        "waf/regexPatternSet.ts",
        "waf/rule.ts",
        "waf/ruleGroup.ts",
        "waf/sizeConstraintSet.ts",
        "waf/sqlInjectionMatchSet.ts",
        "waf/webAcl.ts",
        "waf/xssMatchSet.ts",
        "wafregional/byteMatchSet.ts",
        "wafregional/geoMatchSet.ts",
        "wafregional/getIpset.ts",
        "wafregional/getRateBasedMod.ts",
        "wafregional/getRule.ts",
        "wafregional/getWebAcl.ts",
        "wafregional/index.ts",
        "wafregional/ipSet.ts",
        "wafregional/rateBasedRule.ts",
        "wafregional/regexMatchSet.ts",
        "wafregional/regexPatternSet.ts",
        "wafregional/rule.ts",
        "wafregional/ruleGroup.ts",
        "wafregional/sizeConstraintSet.ts",
        "wafregional/sqlInjectionMatchSet.ts",
        "wafregional/webAcl.ts",
        "wafregional/webAclAssociation.ts",
        "wafregional/xssMatchSet.ts",
        "wafv2/getIpSet.ts",
        "wafv2/getRegexPatternSet.ts",
        "wafv2/getRuleGroup.ts",
        "wafv2/getWebAcl.ts",
        "wafv2/index.ts",
        "wafv2/ipSet.ts",
        "wafv2/regexPatternSet.ts",
        "wafv2/ruleGroup.ts",
        "wafv2/webAcl.ts",
        "wafv2/webAclAssociation.ts",
        "wafv2/webAclLoggingConfiguration.ts",
        "worklink/fleet.ts",
        "worklink/index.ts",
        "worklink/websiteCertificateAuthorityAssociation.ts",
        "workspaces/directory.ts",
        "workspaces/getBundle.ts",
        "workspaces/getDirectory.ts",
        "workspaces/getImage.ts",
        "workspaces/getWorkspace.ts",
        "workspaces/index.ts",
        "workspaces/ipGroup.ts",
        "workspaces/workspace.ts",
        "xray/encryptionConfig.ts",
        "xray/group.ts",
        "xray/index.ts",
        "xray/samplingRule.ts"
    ]
}
