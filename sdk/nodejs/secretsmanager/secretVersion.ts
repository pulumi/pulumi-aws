// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class SecretVersion extends pulumi.CustomResource {
    /**
     * Get an existing SecretVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SecretVersionState, opts?: pulumi.CustomResourceOptions): SecretVersion {
        return new SecretVersion(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:secretsmanager/secretVersion:SecretVersion';

    /**
     * Returns true if the given object is an instance of SecretVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SecretVersion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SecretVersion.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly secretBinary!: pulumi.Output<string | undefined>;
    public readonly secretId!: pulumi.Output<string>;
    public readonly secretString!: pulumi.Output<string | undefined>;
    public /*out*/ readonly versionId!: pulumi.Output<string>;
    public readonly versionStages!: pulumi.Output<string[]>;

    /**
     * Create a SecretVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SecretVersionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SecretVersionArgs | SecretVersionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SecretVersionState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["secretBinary"] = state ? state.secretBinary : undefined;
            resourceInputs["secretId"] = state ? state.secretId : undefined;
            resourceInputs["secretString"] = state ? state.secretString : undefined;
            resourceInputs["versionId"] = state ? state.versionId : undefined;
            resourceInputs["versionStages"] = state ? state.versionStages : undefined;
        } else {
            const args = argsOrState as SecretVersionArgs | undefined;
            if ((!args || args.secretId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'secretId'");
            }
            resourceInputs["secretBinary"] = args?.secretBinary ? pulumi.secret(args.secretBinary) : undefined;
            resourceInputs["secretId"] = args ? args.secretId : undefined;
            resourceInputs["secretString"] = args?.secretString ? pulumi.secret(args.secretString) : undefined;
            resourceInputs["versionStages"] = args ? args.versionStages : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["versionId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["secretBinary", "secretString"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(SecretVersion.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SecretVersion resources.
 */
export interface SecretVersionState {
    arn?: pulumi.Input<string>;
    secretBinary?: pulumi.Input<string>;
    secretId?: pulumi.Input<string>;
    secretString?: pulumi.Input<string>;
    versionId?: pulumi.Input<string>;
    versionStages?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a SecretVersion resource.
 */
export interface SecretVersionArgs {
    secretBinary?: pulumi.Input<string>;
    secretId: pulumi.Input<string>;
    secretString?: pulumi.Input<string>;
    versionStages?: pulumi.Input<pulumi.Input<string>[]>;
}
