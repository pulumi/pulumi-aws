// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getSecretRotation(args: GetSecretRotationArgs, opts?: pulumi.InvokeOptions): Promise<GetSecretRotationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:secretsmanager/getSecretRotation:getSecretRotation", {
        "secretId": args.secretId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecretRotation.
 */
export interface GetSecretRotationArgs {
    secretId: string;
}

/**
 * A collection of values returned by getSecretRotation.
 */
export interface GetSecretRotationResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly rotationEnabled: boolean;
    readonly rotationLambdaArn: string;
    readonly rotationRules: outputs.secretsmanager.GetSecretRotationRotationRule[];
    readonly secretId: string;
}
export function getSecretRotationOutput(args: GetSecretRotationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecretRotationResult> {
    return pulumi.output(args).apply((a: any) => getSecretRotation(a, opts))
}

/**
 * A collection of arguments for invoking getSecretRotation.
 */
export interface GetSecretRotationOutputArgs {
    secretId: pulumi.Input<string>;
}
