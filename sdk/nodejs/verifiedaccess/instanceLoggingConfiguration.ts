// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource for managing a Verified Access Logging Configuration.
 *
 * ## Example Usage
 * ### With CloudWatch Logging
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.verifiedaccess.InstanceLoggingConfiguration("example", {
 *     accessLogs: {
 *         cloudwatchLogs: {
 *             enabled: true,
 *             logGroup: aws_cloudwatch_log_group.example.id,
 *         },
 *     },
 *     verifiedaccessInstanceId: aws_verifiedaccess_instance.example.id,
 * });
 * ```
 * ### With Kinesis Data Firehose Logging
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.verifiedaccess.InstanceLoggingConfiguration("example", {
 *     accessLogs: {
 *         kinesisDataFirehose: {
 *             deliveryStream: aws_kinesis_firehose_delivery_stream.example.name,
 *             enabled: true,
 *         },
 *     },
 *     verifiedaccessInstanceId: aws_verifiedaccess_instance.example.id,
 * });
 * ```
 * ### With S3 logging
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.verifiedaccess.InstanceLoggingConfiguration("example", {
 *     accessLogs: {
 *         s3: {
 *             bucketName: aws_s3_bucket.example.id,
 *             enabled: true,
 *             prefix: "example",
 *         },
 *     },
 *     verifiedaccessInstanceId: aws_verifiedaccess_instance.example.id,
 * });
 * ```
 * ### With all three logging options
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.verifiedaccess.InstanceLoggingConfiguration("example", {
 *     accessLogs: {
 *         cloudwatchLogs: {
 *             enabled: true,
 *             logGroup: aws_cloudwatch_log_group.example.id,
 *         },
 *         kinesisDataFirehose: {
 *             deliveryStream: aws_kinesis_firehose_delivery_stream.example.name,
 *             enabled: true,
 *         },
 *         s3: {
 *             bucketName: aws_s3_bucket.example.id,
 *             enabled: true,
 *         },
 *     },
 *     verifiedaccessInstanceId: aws_verifiedaccess_instance.example.id,
 * });
 * ```
 * ### With `includeTrustContext`
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.verifiedaccess.InstanceLoggingConfiguration("example", {
 *     accessLogs: {
 *         includeTrustContext: true,
 *     },
 *     verifiedaccessInstanceId: aws_verifiedaccess_instance.example.id,
 * });
 * ```
 * ### With `logVersion`
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.verifiedaccess.InstanceLoggingConfiguration("example", {
 *     accessLogs: {
 *         logVersion: "ocsf-1.0.0-rc.2",
 *     },
 *     verifiedaccessInstanceId: aws_verifiedaccess_instance.example.id,
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Verified Access Logging Configuration using the Verified Access Instance `id`. For example:
 *
 * ```sh
 *  $ pulumi import aws:verifiedaccess/instanceLoggingConfiguration:InstanceLoggingConfiguration example vai-1234567890abcdef0
 * ```
 */
export class InstanceLoggingConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing InstanceLoggingConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceLoggingConfigurationState, opts?: pulumi.CustomResourceOptions): InstanceLoggingConfiguration {
        return new InstanceLoggingConfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:verifiedaccess/instanceLoggingConfiguration:InstanceLoggingConfiguration';

    /**
     * Returns true if the given object is an instance of InstanceLoggingConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InstanceLoggingConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InstanceLoggingConfiguration.__pulumiType;
    }

    /**
     * A block that specifies the configuration options for Verified Access instances. Detailed below.
     */
    public readonly accessLogs!: pulumi.Output<outputs.verifiedaccess.InstanceLoggingConfigurationAccessLogs>;
    /**
     * The ID of the Verified Access instance.
     */
    public readonly verifiedaccessInstanceId!: pulumi.Output<string>;

    /**
     * Create a InstanceLoggingConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceLoggingConfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceLoggingConfigurationArgs | InstanceLoggingConfigurationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceLoggingConfigurationState | undefined;
            resourceInputs["accessLogs"] = state ? state.accessLogs : undefined;
            resourceInputs["verifiedaccessInstanceId"] = state ? state.verifiedaccessInstanceId : undefined;
        } else {
            const args = argsOrState as InstanceLoggingConfigurationArgs | undefined;
            if ((!args || args.accessLogs === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accessLogs'");
            }
            if ((!args || args.verifiedaccessInstanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'verifiedaccessInstanceId'");
            }
            resourceInputs["accessLogs"] = args ? args.accessLogs : undefined;
            resourceInputs["verifiedaccessInstanceId"] = args ? args.verifiedaccessInstanceId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InstanceLoggingConfiguration.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering InstanceLoggingConfiguration resources.
 */
export interface InstanceLoggingConfigurationState {
    /**
     * A block that specifies the configuration options for Verified Access instances. Detailed below.
     */
    accessLogs?: pulumi.Input<inputs.verifiedaccess.InstanceLoggingConfigurationAccessLogs>;
    /**
     * The ID of the Verified Access instance.
     */
    verifiedaccessInstanceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a InstanceLoggingConfiguration resource.
 */
export interface InstanceLoggingConfigurationArgs {
    /**
     * A block that specifies the configuration options for Verified Access instances. Detailed below.
     */
    accessLogs: pulumi.Input<inputs.verifiedaccess.InstanceLoggingConfigurationAccessLogs>;
    /**
     * The ID of the Verified Access instance.
     */
    verifiedaccessInstanceId: pulumi.Input<string>;
}
