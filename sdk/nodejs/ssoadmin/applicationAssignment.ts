// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS SSO Admin Application Assignment.
 *
 * ## Example Usage
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.ssoadmin.ApplicationAssignment("example", {
 *     applicationArn: aws_ssoadmin_application.example.application_arn,
 *     principalId: aws_identitystore_user.example.user_id,
 *     principalType: "USER",
 * });
 * ```
 * ### Group Type
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.ssoadmin.ApplicationAssignment("example", {
 *     applicationArn: aws_ssoadmin_application.example.application_arn,
 *     principalId: aws_identitystore_group.example.group_id,
 *     principalType: "GROUP",
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import SSO Admin Application Assignment using the `id`. For example:
 *
 * ```sh
 *  $ pulumi import aws:ssoadmin/applicationAssignment:ApplicationAssignment example arn:aws:sso::012345678901:application/id-12345678,abcd1234,USER
 * ```
 */
export class ApplicationAssignment extends pulumi.CustomResource {
    /**
     * Get an existing ApplicationAssignment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplicationAssignmentState, opts?: pulumi.CustomResourceOptions): ApplicationAssignment {
        return new ApplicationAssignment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:ssoadmin/applicationAssignment:ApplicationAssignment';

    /**
     * Returns true if the given object is an instance of ApplicationAssignment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApplicationAssignment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApplicationAssignment.__pulumiType;
    }

    /**
     * ARN of the application.
     */
    public readonly applicationArn!: pulumi.Output<string>;
    /**
     * An identifier for an object in IAM Identity Center, such as a user or group.
     */
    public readonly principalId!: pulumi.Output<string>;
    /**
     * Entity type for which the assignment will be created. Valid values are `USER` or `GROUP`.
     */
    public readonly principalType!: pulumi.Output<string>;

    /**
     * Create a ApplicationAssignment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationAssignmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplicationAssignmentArgs | ApplicationAssignmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApplicationAssignmentState | undefined;
            resourceInputs["applicationArn"] = state ? state.applicationArn : undefined;
            resourceInputs["principalId"] = state ? state.principalId : undefined;
            resourceInputs["principalType"] = state ? state.principalType : undefined;
        } else {
            const args = argsOrState as ApplicationAssignmentArgs | undefined;
            if ((!args || args.applicationArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationArn'");
            }
            if ((!args || args.principalId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'principalId'");
            }
            if ((!args || args.principalType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'principalType'");
            }
            resourceInputs["applicationArn"] = args ? args.applicationArn : undefined;
            resourceInputs["principalId"] = args ? args.principalId : undefined;
            resourceInputs["principalType"] = args ? args.principalType : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApplicationAssignment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ApplicationAssignment resources.
 */
export interface ApplicationAssignmentState {
    /**
     * ARN of the application.
     */
    applicationArn?: pulumi.Input<string>;
    /**
     * An identifier for an object in IAM Identity Center, such as a user or group.
     */
    principalId?: pulumi.Input<string>;
    /**
     * Entity type for which the assignment will be created. Valid values are `USER` or `GROUP`.
     */
    principalType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ApplicationAssignment resource.
 */
export interface ApplicationAssignmentArgs {
    /**
     * ARN of the application.
     */
    applicationArn: pulumi.Input<string>;
    /**
     * An identifier for an object in IAM Identity Center, such as a user or group.
     */
    principalId: pulumi.Input<string>;
    /**
     * Entity type for which the assignment will be created. Valid values are `USER` or `GROUP`.
     */
    principalType: pulumi.Input<string>;
}
