// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./input";
import * as outputs from "./output";

export interface ApplicationPortalOptions {
    /**
     * Sign-in options for the access portal. See `signInOptions` below.
     */
    signInOptions?: pulumi.Input<inputs.ApplicationPortalOptionsSignInOptions>;
    /**
     * Indicates whether this application is visible in the access portal. Valid values are `ENABLED` and `DISABLED`.
     */
    visibility?: pulumi.Input<string>;
}
export interface ApplicationPortalOptionsSignInOptions {
    /**
     * URL that accepts authentication requests for an application.
     */
    applicationUrl?: pulumi.Input<string>;
    /**
     * Determines how IAM Identity Center navigates the user to the target application.
     * Valid values are `APPLICATION` and `IDENTITY_CENTER`.
     * If `APPLICATION` is set, IAM Identity Center redirects the customer to the configured `applicationUrl`.
     * If `IDENTITY_CENTER` is set, IAM Identity Center uses SAML identity-provider initiated authentication to sign the customer directly into a SAML-based application.
     */
    origin: pulumi.Input<string>;
}
export interface CustomerManagedPolicyAttachmentCustomerManagedPolicyReference {
    /**
     * Name of the customer managed IAM Policy to be attached.
     */
    name: pulumi.Input<string>;
    /**
     * The path to the IAM policy to be attached. The default is `/`. See [IAM Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-friendly-names) for more information.
     */
    path?: pulumi.Input<string>;
}
export interface InstanceAccessControlAttributesAttribute {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<inputs.InstanceAccessControlAttributesAttributeValue>[]>;
}
export interface InstanceAccessControlAttributesAttributeValue {
    sources: pulumi.Input<pulumi.Input<string>[]>;
}
export interface PermissionsBoundaryAttachmentPermissionsBoundary {
    /**
     * Specifies the name and path of a customer managed policy. See below.
     */
    customerManagedPolicyReference?: pulumi.Input<inputs.PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReference>;
    /**
     * AWS-managed IAM policy ARN to use as the permissions boundary.
     */
    managedPolicyArn?: pulumi.Input<string>;
}
export interface PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReference {
    /**
     * Name of the customer managed IAM Policy to be attached.
     */
    name: pulumi.Input<string>;
    /**
     * The path to the IAM policy to be attached. The default is `/`. See [IAM Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-friendly-names) for more information.
     */
    path?: pulumi.Input<string>;
}
export interface TrustedTokenIssuerTrustedTokenIssuerConfiguration {
    /**
     * A block that describes the settings for a trusted token issuer that works with OpenID Connect (OIDC) by using JSON Web Tokens (JWT). See Documented below below.
     */
    oidcJwtConfiguration?: pulumi.Input<inputs.TrustedTokenIssuerTrustedTokenIssuerConfigurationOidcJwtConfiguration>;
}
export interface TrustedTokenIssuerTrustedTokenIssuerConfigurationOidcJwtConfiguration {
    /**
     * Specifies the path of the source attribute in the JWT from the trusted token issuer.
     */
    claimAttributePath: pulumi.Input<string>;
    /**
     * Specifies path of the destination attribute in a JWT from IAM Identity Center. The attribute mapped by this JMESPath expression is compared against the attribute mapped by `claimAttributePath` when a trusted token issuer token is exchanged for an IAM Identity Center token.
     */
    identityStoreAttributePath: pulumi.Input<string>;
    /**
     * Specifies the URL that IAM Identity Center uses for OpenID Discovery. OpenID Discovery is used to obtain the information required to verify the tokens that the trusted token issuer generates.
     */
    issuerUrl: pulumi.Input<string>;
    /**
     * The method that the trusted token issuer can use to retrieve the JSON Web Key Set used to verify a JWT. Valid values are `OPEN_ID_DISCOVERY`
     */
    jwksRetrievalOption: pulumi.Input<string>;
}
export interface GetApplicationAssignmentsApplicationAssignment {
    /**
     * ARN of the application.
     */
    applicationArn?: string;
    /**
     * An identifier for an object in IAM Identity Center, such as a user or group.
     */
    principalId?: string;
    /**
     * Entity type for which the assignment will be created. Valid values are `USER` or `GROUP`.
     */
    principalType?: string;
}
export interface GetApplicationAssignmentsApplicationAssignmentArgs {
    /**
     * ARN of the application.
     */
    applicationArn?: pulumi.Input<string>;
    /**
     * An identifier for an object in IAM Identity Center, such as a user or group.
     */
    principalId?: pulumi.Input<string>;
    /**
     * Entity type for which the assignment will be created. Valid values are `USER` or `GROUP`.
     */
    principalType?: pulumi.Input<string>;
}
export interface GetApplicationPortalOption {
    signInOptions?: inputs.GetApplicationPortalOptionSignInOption[];
    visibility?: string;
}
export interface GetApplicationPortalOptionArgs {
    signInOptions?: pulumi.Input<pulumi.Input<inputs.GetApplicationPortalOptionSignInOptionArgs>[]>;
    visibility?: pulumi.Input<string>;
}
export interface GetApplicationPortalOptionSignInOption {
    applicationUrl?: string;
    origin?: string;
}
export interface GetApplicationPortalOptionSignInOptionArgs {
    applicationUrl?: pulumi.Input<string>;
    origin?: pulumi.Input<string>;
}
export interface GetApplicationProvidersApplicationProvider {
    /**
     * ARN of the application provider.
     */
    applicationProviderArn?: string;
    /**
     * An object describing how IAM Identity Center represents the application provider in the portal. See `displayData` below.
     */
    displayDatas?: inputs.GetApplicationProvidersApplicationProviderDisplayData[];
    /**
     * Protocol that the application provider uses to perform federation. Valid values are `SAML` and `OAUTH`.
     */
    federationProtocol?: string;
}
export interface GetApplicationProvidersApplicationProviderArgs {
    /**
     * ARN of the application provider.
     */
    applicationProviderArn?: pulumi.Input<string>;
    /**
     * An object describing how IAM Identity Center represents the application provider in the portal. See `displayData` below.
     */
    displayDatas?: pulumi.Input<pulumi.Input<inputs.GetApplicationProvidersApplicationProviderDisplayDataArgs>[]>;
    /**
     * Protocol that the application provider uses to perform federation. Valid values are `SAML` and `OAUTH`.
     */
    federationProtocol?: pulumi.Input<string>;
}
export interface GetApplicationProvidersApplicationProviderDisplayData {
    /**
     * Description of the application provider.
     */
    description?: string;
    /**
     * Name of the application provider.
     */
    displayName?: string;
    /**
     * URL that points to an icon that represents the application provider.
     */
    iconUrl?: string;
}
export interface GetApplicationProvidersApplicationProviderDisplayDataArgs {
    /**
     * Description of the application provider.
     */
    description?: pulumi.Input<string>;
    /**
     * Name of the application provider.
     */
    displayName?: pulumi.Input<string>;
    /**
     * URL that points to an icon that represents the application provider.
     */
    iconUrl?: pulumi.Input<string>;
}
export interface GetPrincipalApplicationAssignmentsApplicationAssignment {
    /**
     * ARN of the application.
     */
    applicationArn?: string;
    /**
     * An identifier for an object in IAM Identity Center, such as a user or group.
     */
    principalId?: string;
    /**
     * Entity type for which the assignment will be created. Valid values are `USER` or `GROUP`.
     */
    principalType?: string;
}
export interface GetPrincipalApplicationAssignmentsApplicationAssignmentArgs {
    /**
     * ARN of the application.
     */
    applicationArn?: pulumi.Input<string>;
    /**
     * An identifier for an object in IAM Identity Center, such as a user or group.
     */
    principalId?: pulumi.Input<string>;
    /**
     * Entity type for which the assignment will be created. Valid values are `USER` or `GROUP`.
     */
    principalType?: pulumi.Input<string>;
}
