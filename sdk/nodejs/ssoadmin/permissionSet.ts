// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Single Sign-On (SSO) Permission Set resource
 *
 * > **NOTE:** Updating this resource will automatically [Provision the Permission Set](https://docs.aws.amazon.com/singlesignon/latest/APIReference/API_ProvisionPermissionSet.html) to apply the corresponding updates to all assigned accounts.
 *
 * ## Import
 *
 * SSO Permission Sets can be imported using the `arn` and `instance_arn` separated by a comma (`,`) e.g.
 *
 * ```sh
 *  $ pulumi import aws:ssoadmin/permissionSet:PermissionSet example arn:aws:sso:::permissionSet/ssoins-2938j0x8920sbj72/ps-80383020jr9302rk,arn:aws:sso:::instance/ssoins-2938j0x8920sbj72
 * ```
 */
export class PermissionSet extends pulumi.CustomResource {
    /**
     * Get an existing PermissionSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PermissionSetState, opts?: pulumi.CustomResourceOptions): PermissionSet {
        return new PermissionSet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:ssoadmin/permissionSet:PermissionSet';

    /**
     * Returns true if the given object is an instance of PermissionSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PermissionSet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PermissionSet.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the Permission Set.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The date the Permission Set was created in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
     */
    public /*out*/ readonly createdDate!: pulumi.Output<string>;
    /**
     * The description of the Permission Set.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the SSO Instance under which the operation will be executed.
     */
    public readonly instanceArn!: pulumi.Output<string>;
    /**
     * The name of the Permission Set.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The relay state URL used to redirect users within the application during the federation authentication process.
     */
    public readonly relayState!: pulumi.Output<string | undefined>;
    /**
     * The length of time that the application user sessions are valid in the ISO-8601 standard. Default: `PT1H`.
     */
    public readonly sessionDuration!: pulumi.Output<string | undefined>;
    /**
     * Key-value map of resource tags.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a PermissionSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PermissionSetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PermissionSetArgs | PermissionSetState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PermissionSetState | undefined;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["createdDate"] = state ? state.createdDate : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["instanceArn"] = state ? state.instanceArn : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["relayState"] = state ? state.relayState : undefined;
            inputs["sessionDuration"] = state ? state.sessionDuration : undefined;
            inputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as PermissionSetArgs | undefined;
            if ((!args || args.instanceArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceArn'");
            }
            inputs["description"] = args ? args.description : undefined;
            inputs["instanceArn"] = args ? args.instanceArn : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["relayState"] = args ? args.relayState : undefined;
            inputs["sessionDuration"] = args ? args.sessionDuration : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["arn"] = undefined /*out*/;
            inputs["createdDate"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(PermissionSet.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PermissionSet resources.
 */
export interface PermissionSetState {
    /**
     * The Amazon Resource Name (ARN) of the Permission Set.
     */
    readonly arn?: pulumi.Input<string>;
    /**
     * The date the Permission Set was created in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
     */
    readonly createdDate?: pulumi.Input<string>;
    /**
     * The description of the Permission Set.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the SSO Instance under which the operation will be executed.
     */
    readonly instanceArn?: pulumi.Input<string>;
    /**
     * The name of the Permission Set.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The relay state URL used to redirect users within the application during the federation authentication process.
     */
    readonly relayState?: pulumi.Input<string>;
    /**
     * The length of time that the application user sessions are valid in the ISO-8601 standard. Default: `PT1H`.
     */
    readonly sessionDuration?: pulumi.Input<string>;
    /**
     * Key-value map of resource tags.
     */
    readonly tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a PermissionSet resource.
 */
export interface PermissionSetArgs {
    /**
     * The description of the Permission Set.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the SSO Instance under which the operation will be executed.
     */
    readonly instanceArn: pulumi.Input<string>;
    /**
     * The name of the Permission Set.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The relay state URL used to redirect users within the application during the federation authentication process.
     */
    readonly relayState?: pulumi.Input<string>;
    /**
     * The length of time that the application user sessions are valid in the ISO-8601 standard. Default: `PT1H`.
     */
    readonly sessionDuration?: pulumi.Input<string>;
    /**
     * Key-value map of resource tags.
     */
    readonly tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
