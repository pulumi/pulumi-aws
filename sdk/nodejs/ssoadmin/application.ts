// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS SSO Admin Application.
 *
 * ## Example Usage
 *
 * ## Import
 *
 * Using `pulumi import`, import SSO Admin Application using the `id`. For example:
 *
 * ```sh
 *  $ pulumi import aws:ssoadmin/application:Application example arn:aws:sso::012345678901:application/id-12345678
 * ```
 */
export class Application extends pulumi.CustomResource {
    /**
     * Get an existing Application resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplicationState, opts?: pulumi.CustomResourceOptions): Application {
        return new Application(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:ssoadmin/application:Application';

    /**
     * Returns true if the given object is an instance of Application.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Application {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Application.__pulumiType;
    }

    /**
     * AWS account ID.
     */
    public /*out*/ readonly applicationAccount!: pulumi.Output<string>;
    /**
     * ARN of the application.
     */
    public /*out*/ readonly applicationArn!: pulumi.Output<string>;
    /**
     * ARN of the application provider.
     */
    public readonly applicationProviderArn!: pulumi.Output<string>;
    /**
     * A unique, case-sensitive ID that you provide to ensure the idempotency of the request. AWS generates a random value when not provided.
     */
    public readonly clientToken!: pulumi.Output<string | undefined>;
    /**
     * Description of the application.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * ARN of the instance of IAM Identity Center.
     */
    public readonly instanceArn!: pulumi.Output<string>;
    /**
     * Name of the application.
     *
     * The following arguments are optional:
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Options for the portal associated with an application. See `portalOptions` below.
     */
    public readonly portalOptions!: pulumi.Output<outputs.ssoadmin.ApplicationPortalOptions | undefined>;
    /**
     * Status of the application. Valid values are `ENABLED` and `DISABLED`.
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     *
     * @deprecated Please use `tags` instead.
     */
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a Application resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplicationArgs | ApplicationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApplicationState | undefined;
            resourceInputs["applicationAccount"] = state ? state.applicationAccount : undefined;
            resourceInputs["applicationArn"] = state ? state.applicationArn : undefined;
            resourceInputs["applicationProviderArn"] = state ? state.applicationProviderArn : undefined;
            resourceInputs["clientToken"] = state ? state.clientToken : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["instanceArn"] = state ? state.instanceArn : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["portalOptions"] = state ? state.portalOptions : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
        } else {
            const args = argsOrState as ApplicationArgs | undefined;
            if ((!args || args.applicationProviderArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationProviderArn'");
            }
            if ((!args || args.instanceArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceArn'");
            }
            resourceInputs["applicationProviderArn"] = args ? args.applicationProviderArn : undefined;
            resourceInputs["clientToken"] = args ? args.clientToken : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["instanceArn"] = args ? args.instanceArn : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["portalOptions"] = args ? args.portalOptions : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["applicationAccount"] = undefined /*out*/;
            resourceInputs["applicationArn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["tagsAll"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Application.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Application resources.
 */
export interface ApplicationState {
    /**
     * AWS account ID.
     */
    applicationAccount?: pulumi.Input<string>;
    /**
     * ARN of the application.
     */
    applicationArn?: pulumi.Input<string>;
    /**
     * ARN of the application provider.
     */
    applicationProviderArn?: pulumi.Input<string>;
    /**
     * A unique, case-sensitive ID that you provide to ensure the idempotency of the request. AWS generates a random value when not provided.
     */
    clientToken?: pulumi.Input<string>;
    /**
     * Description of the application.
     */
    description?: pulumi.Input<string>;
    /**
     * ARN of the instance of IAM Identity Center.
     */
    instanceArn?: pulumi.Input<string>;
    /**
     * Name of the application.
     *
     * The following arguments are optional:
     */
    name?: pulumi.Input<string>;
    /**
     * Options for the portal associated with an application. See `portalOptions` below.
     */
    portalOptions?: pulumi.Input<inputs.ssoadmin.ApplicationPortalOptions>;
    /**
     * Status of the application. Valid values are `ENABLED` and `DISABLED`.
     */
    status?: pulumi.Input<string>;
    /**
     * Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     *
     * @deprecated Please use `tags` instead.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a Application resource.
 */
export interface ApplicationArgs {
    /**
     * ARN of the application provider.
     */
    applicationProviderArn: pulumi.Input<string>;
    /**
     * A unique, case-sensitive ID that you provide to ensure the idempotency of the request. AWS generates a random value when not provided.
     */
    clientToken?: pulumi.Input<string>;
    /**
     * Description of the application.
     */
    description?: pulumi.Input<string>;
    /**
     * ARN of the instance of IAM Identity Center.
     */
    instanceArn: pulumi.Input<string>;
    /**
     * Name of the application.
     *
     * The following arguments are optional:
     */
    name?: pulumi.Input<string>;
    /**
     * Options for the portal associated with an application. See `portalOptions` below.
     */
    portalOptions?: pulumi.Input<inputs.ssoadmin.ApplicationPortalOptions>;
    /**
     * Status of the application. Valid values are `ENABLED` and `DISABLED`.
     */
    status?: pulumi.Input<string>;
    /**
     * Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
