// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AccountAssignmentArgs, AccountAssignmentState } from "./accountAssignment";
export type AccountAssignment = import("./accountAssignment").AccountAssignment;
export const AccountAssignment: typeof import("./accountAssignment").AccountAssignment = null as any;
utilities.lazyLoad(exports, ["AccountAssignment"], () => require("./accountAssignment"));

export { CustomerManagedPolicyAttachmentArgs, CustomerManagedPolicyAttachmentState } from "./customerManagedPolicyAttachment";
export type CustomerManagedPolicyAttachment = import("./customerManagedPolicyAttachment").CustomerManagedPolicyAttachment;
export const CustomerManagedPolicyAttachment: typeof import("./customerManagedPolicyAttachment").CustomerManagedPolicyAttachment = null as any;
utilities.lazyLoad(exports, ["CustomerManagedPolicyAttachment"], () => require("./customerManagedPolicyAttachment"));

export { GetInstancesResult } from "./getInstances";
export const getInstances: typeof import("./getInstances").getInstances = null as any;
utilities.lazyLoad(exports, ["getInstances"], () => require("./getInstances"));

export { GetPermissionSetArgs, GetPermissionSetResult, GetPermissionSetOutputArgs } from "./getPermissionSet";
export const getPermissionSet: typeof import("./getPermissionSet").getPermissionSet = null as any;
export const getPermissionSetOutput: typeof import("./getPermissionSet").getPermissionSetOutput = null as any;
utilities.lazyLoad(exports, ["getPermissionSet","getPermissionSetOutput"], () => require("./getPermissionSet"));

export { ManagedPolicyAttachmentArgs, ManagedPolicyAttachmentState } from "./managedPolicyAttachment";
export type ManagedPolicyAttachment = import("./managedPolicyAttachment").ManagedPolicyAttachment;
export const ManagedPolicyAttachment: typeof import("./managedPolicyAttachment").ManagedPolicyAttachment = null as any;
utilities.lazyLoad(exports, ["ManagedPolicyAttachment"], () => require("./managedPolicyAttachment"));

export { PermissionSetArgs, PermissionSetState } from "./permissionSet";
export type PermissionSet = import("./permissionSet").PermissionSet;
export const PermissionSet: typeof import("./permissionSet").PermissionSet = null as any;
utilities.lazyLoad(exports, ["PermissionSet"], () => require("./permissionSet"));

export { PermissionSetInlinePolicyArgs, PermissionSetInlinePolicyState } from "./permissionSetInlinePolicy";
export type PermissionSetInlinePolicy = import("./permissionSetInlinePolicy").PermissionSetInlinePolicy;
export const PermissionSetInlinePolicy: typeof import("./permissionSetInlinePolicy").PermissionSetInlinePolicy = null as any;
utilities.lazyLoad(exports, ["PermissionSetInlinePolicy"], () => require("./permissionSetInlinePolicy"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws:ssoadmin/accountAssignment:AccountAssignment":
                return new AccountAssignment(name, <any>undefined, { urn })
            case "aws:ssoadmin/customerManagedPolicyAttachment:CustomerManagedPolicyAttachment":
                return new CustomerManagedPolicyAttachment(name, <any>undefined, { urn })
            case "aws:ssoadmin/managedPolicyAttachment:ManagedPolicyAttachment":
                return new ManagedPolicyAttachment(name, <any>undefined, { urn })
            case "aws:ssoadmin/permissionSet:PermissionSet":
                return new PermissionSet(name, <any>undefined, { urn })
            case "aws:ssoadmin/permissionSetInlinePolicy:PermissionSetInlinePolicy":
                return new PermissionSetInlinePolicy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "ssoadmin/accountAssignment", _module)
pulumi.runtime.registerResourceModule("aws", "ssoadmin/customerManagedPolicyAttachment", _module)
pulumi.runtime.registerResourceModule("aws", "ssoadmin/managedPolicyAttachment", _module)
pulumi.runtime.registerResourceModule("aws", "ssoadmin/permissionSet", _module)
pulumi.runtime.registerResourceModule("aws", "ssoadmin/permissionSetInlinePolicy", _module)
