// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class AccountAssignment extends pulumi.CustomResource {
    /**
     * Get an existing AccountAssignment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccountAssignmentState, opts?: pulumi.CustomResourceOptions): AccountAssignment {
        return new AccountAssignment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:ssoadmin/accountAssignment:AccountAssignment';

    /**
     * Returns true if the given object is an instance of AccountAssignment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccountAssignment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccountAssignment.__pulumiType;
    }

    public readonly instanceArn!: pulumi.Output<string>;
    public readonly permissionSetArn!: pulumi.Output<string>;
    public readonly principalId!: pulumi.Output<string>;
    public readonly principalType!: pulumi.Output<string>;
    public readonly targetId!: pulumi.Output<string>;
    public readonly targetType!: pulumi.Output<string | undefined>;

    /**
     * Create a AccountAssignment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountAssignmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccountAssignmentArgs | AccountAssignmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccountAssignmentState | undefined;
            resourceInputs["instanceArn"] = state ? state.instanceArn : undefined;
            resourceInputs["permissionSetArn"] = state ? state.permissionSetArn : undefined;
            resourceInputs["principalId"] = state ? state.principalId : undefined;
            resourceInputs["principalType"] = state ? state.principalType : undefined;
            resourceInputs["targetId"] = state ? state.targetId : undefined;
            resourceInputs["targetType"] = state ? state.targetType : undefined;
        } else {
            const args = argsOrState as AccountAssignmentArgs | undefined;
            if ((!args || args.instanceArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceArn'");
            }
            if ((!args || args.permissionSetArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'permissionSetArn'");
            }
            if ((!args || args.principalId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'principalId'");
            }
            if ((!args || args.principalType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'principalType'");
            }
            if ((!args || args.targetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetId'");
            }
            resourceInputs["instanceArn"] = args ? args.instanceArn : undefined;
            resourceInputs["permissionSetArn"] = args ? args.permissionSetArn : undefined;
            resourceInputs["principalId"] = args ? args.principalId : undefined;
            resourceInputs["principalType"] = args ? args.principalType : undefined;
            resourceInputs["targetId"] = args ? args.targetId : undefined;
            resourceInputs["targetType"] = args ? args.targetType : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AccountAssignment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AccountAssignment resources.
 */
export interface AccountAssignmentState {
    instanceArn?: pulumi.Input<string>;
    permissionSetArn?: pulumi.Input<string>;
    principalId?: pulumi.Input<string>;
    principalType?: pulumi.Input<string>;
    targetId?: pulumi.Input<string>;
    targetType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AccountAssignment resource.
 */
export interface AccountAssignmentArgs {
    instanceArn: pulumi.Input<string>;
    permissionSetArn: pulumi.Input<string>;
    principalId: pulumi.Input<string>;
    principalType: pulumi.Input<string>;
    targetId: pulumi.Input<string>;
    targetType?: pulumi.Input<string>;
}
