// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Get Lake Formation principals designated as data lake administrators and lists of principal permission entries for default create database and default create table permissions.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.lakeformation.getDataLakeSettings({
 *     catalogId: "14916253649",
 * });
 * ```
 */
export function getDataLakeSettings(args?: GetDataLakeSettingsArgs, opts?: pulumi.InvokeOptions): Promise<GetDataLakeSettingsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:lakeformation/getDataLakeSettings:getDataLakeSettings", {
        "catalogId": args.catalogId,
    }, opts);
}

/**
 * A collection of arguments for invoking getDataLakeSettings.
 */
export interface GetDataLakeSettingsArgs {
    /**
     * Identifier for the Data Catalog. By default, the account ID.
     */
    catalogId?: string;
}

/**
 * A collection of values returned by getDataLakeSettings.
 */
export interface GetDataLakeSettingsResult {
    /**
     * List of ARNs of AWS Lake Formation principals (IAM users or roles).
     */
    readonly admins: string[];
    /**
     * Whether to allow Amazon EMR clusters to access data managed by Lake Formation.
     */
    readonly allowExternalDataFiltering: boolean;
    /**
     * Lake Formation relies on a privileged process secured by Amazon EMR or the third party integrator to tag the user's role while assuming it.
     */
    readonly authorizedSessionTagValueLists: string[];
    readonly catalogId?: string;
    /**
     * Up to three configuration blocks of principal permissions for default create database permissions. Detailed below.
     */
    readonly createDatabaseDefaultPermissions: outputs.lakeformation.GetDataLakeSettingsCreateDatabaseDefaultPermission[];
    /**
     * Up to three configuration blocks of principal permissions for default create table permissions. Detailed below.
     */
    readonly createTableDefaultPermissions: outputs.lakeformation.GetDataLakeSettingsCreateTableDefaultPermission[];
    /**
     * A list of the account IDs of Amazon Web Services accounts with Amazon EMR clusters that are to perform data filtering.
     */
    readonly externalDataFilteringAllowLists: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * List of the resource-owning account IDs that the caller's account can use to share their user access details (user ARNs).
     */
    readonly trustedResourceOwners: string[];
}
/**
 * Get Lake Formation principals designated as data lake administrators and lists of principal permission entries for default create database and default create table permissions.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.lakeformation.getDataLakeSettings({
 *     catalogId: "14916253649",
 * });
 * ```
 */
export function getDataLakeSettingsOutput(args?: GetDataLakeSettingsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataLakeSettingsResult> {
    return pulumi.output(args).apply((a: any) => getDataLakeSettings(a, opts))
}

/**
 * A collection of arguments for invoking getDataLakeSettings.
 */
export interface GetDataLakeSettingsOutputArgs {
    /**
     * Identifier for the Data Catalog. By default, the account ID.
     */
    catalogId?: pulumi.Input<string>;
}
