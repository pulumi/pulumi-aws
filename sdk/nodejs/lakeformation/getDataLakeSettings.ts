// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getDataLakeSettings(args?: GetDataLakeSettingsArgs, opts?: pulumi.InvokeOptions): Promise<GetDataLakeSettingsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:lakeformation/getDataLakeSettings:getDataLakeSettings", {
        "catalogId": args.catalogId,
    }, opts);
}

/**
 * A collection of arguments for invoking getDataLakeSettings.
 */
export interface GetDataLakeSettingsArgs {
    catalogId?: string;
}

/**
 * A collection of values returned by getDataLakeSettings.
 */
export interface GetDataLakeSettingsResult {
    readonly admins: string[];
    readonly catalogId?: string;
    readonly createDatabaseDefaultPermissions: outputs.lakeformation.GetDataLakeSettingsCreateDatabaseDefaultPermission[];
    readonly createTableDefaultPermissions: outputs.lakeformation.GetDataLakeSettingsCreateTableDefaultPermission[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly trustedResourceOwners: string[];
}
export function getDataLakeSettingsOutput(args?: GetDataLakeSettingsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataLakeSettingsResult> {
    return pulumi.output(args).apply((a: any) => getDataLakeSettings(a, opts))
}

/**
 * A collection of arguments for invoking getDataLakeSettings.
 */
export interface GetDataLakeSettingsOutputArgs {
    catalogId?: pulumi.Input<string>;
}
