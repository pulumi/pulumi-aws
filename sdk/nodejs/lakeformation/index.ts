// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { DataLakeSettingsArgs, DataLakeSettingsState } from "./dataLakeSettings";
export type DataLakeSettings = import("./dataLakeSettings").DataLakeSettings;
export const DataLakeSettings: typeof import("./dataLakeSettings").DataLakeSettings = null as any;
utilities.lazyLoad(exports, ["DataLakeSettings"], () => require("./dataLakeSettings"));

export { GetDataLakeSettingsArgs, GetDataLakeSettingsResult, GetDataLakeSettingsOutputArgs } from "./getDataLakeSettings";
export const getDataLakeSettings: typeof import("./getDataLakeSettings").getDataLakeSettings = null as any;
export const getDataLakeSettingsOutput: typeof import("./getDataLakeSettings").getDataLakeSettingsOutput = null as any;
utilities.lazyLoad(exports, ["getDataLakeSettings","getDataLakeSettingsOutput"], () => require("./getDataLakeSettings"));

export { GetPermissionsArgs, GetPermissionsResult, GetPermissionsOutputArgs } from "./getPermissions";
export const getPermissions: typeof import("./getPermissions").getPermissions = null as any;
export const getPermissionsOutput: typeof import("./getPermissions").getPermissionsOutput = null as any;
utilities.lazyLoad(exports, ["getPermissions","getPermissionsOutput"], () => require("./getPermissions"));

export { GetResourceArgs, GetResourceResult, GetResourceOutputArgs } from "./getResource";
export const getResource: typeof import("./getResource").getResource = null as any;
export const getResourceOutput: typeof import("./getResource").getResourceOutput = null as any;
utilities.lazyLoad(exports, ["getResource","getResourceOutput"], () => require("./getResource"));

export { LfTagArgs, LfTagState } from "./lfTag";
export type LfTag = import("./lfTag").LfTag;
export const LfTag: typeof import("./lfTag").LfTag = null as any;
utilities.lazyLoad(exports, ["LfTag"], () => require("./lfTag"));

export { PermissionsArgs, PermissionsState } from "./permissions";
export type Permissions = import("./permissions").Permissions;
export const Permissions: typeof import("./permissions").Permissions = null as any;
utilities.lazyLoad(exports, ["Permissions"], () => require("./permissions"));

export { ResourceArgs, ResourceState } from "./resource";
export type Resource = import("./resource").Resource;
export const Resource: typeof import("./resource").Resource = null as any;
utilities.lazyLoad(exports, ["Resource"], () => require("./resource"));

export { ResourceLfTagsArgs, ResourceLfTagsState } from "./resourceLfTags";
export type ResourceLfTags = import("./resourceLfTags").ResourceLfTags;
export const ResourceLfTags: typeof import("./resourceLfTags").ResourceLfTags = null as any;
utilities.lazyLoad(exports, ["ResourceLfTags"], () => require("./resourceLfTags"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws:lakeformation/dataLakeSettings:DataLakeSettings":
                return new DataLakeSettings(name, <any>undefined, { urn })
            case "aws:lakeformation/lfTag:LfTag":
                return new LfTag(name, <any>undefined, { urn })
            case "aws:lakeformation/permissions:Permissions":
                return new Permissions(name, <any>undefined, { urn })
            case "aws:lakeformation/resource:Resource":
                return new Resource(name, <any>undefined, { urn })
            case "aws:lakeformation/resourceLfTags:ResourceLfTags":
                return new ResourceLfTags(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "lakeformation/dataLakeSettings", _module)
pulumi.runtime.registerResourceModule("aws", "lakeformation/lfTag", _module)
pulumi.runtime.registerResourceModule("aws", "lakeformation/permissions", _module)
pulumi.runtime.registerResourceModule("aws", "lakeformation/resource", _module)
pulumi.runtime.registerResourceModule("aws", "lakeformation/resourceLfTags", _module)
