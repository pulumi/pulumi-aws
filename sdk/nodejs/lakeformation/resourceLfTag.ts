// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS Lake Formation Resource LF Tag.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.lakeformation.ResourceLfTag("example", {
 *     database: {
 *         name: exampleAwsGlueCatalogDatabase.name,
 *     },
 *     lfTag: {
 *         key: exampleAwsLakeformationLfTag.key,
 *         value: "stowe",
 *     },
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * You cannot import this resource.
 */
export class ResourceLfTag extends pulumi.CustomResource {
    /**
     * Get an existing ResourceLfTag resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResourceLfTagState, opts?: pulumi.CustomResourceOptions): ResourceLfTag {
        return new ResourceLfTag(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:lakeformation/resourceLfTag:ResourceLfTag';

    /**
     * Returns true if the given object is an instance of ResourceLfTag.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ResourceLfTag {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ResourceLfTag.__pulumiType;
    }

    /**
     * Identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment.
     */
    public readonly catalogId!: pulumi.Output<string | undefined>;
    /**
     * Configuration block for a database resource. See Database for more details.
     */
    public readonly database!: pulumi.Output<outputs.lakeformation.ResourceLfTagDatabase | undefined>;
    /**
     * Set of LF-tags to attach to the resource. See LF Tag for more details.
     *
     * Exactly one of the following is required:
     */
    public readonly lfTag!: pulumi.Output<outputs.lakeformation.ResourceLfTagLfTag | undefined>;
    /**
     * Configuration block for a table resource. See Table for more details.
     */
    public readonly table!: pulumi.Output<outputs.lakeformation.ResourceLfTagTable | undefined>;
    /**
     * Configuration block for a table with columns resource. See Table With Columns for more details.
     *
     * The following arguments are optional:
     */
    public readonly tableWithColumns!: pulumi.Output<outputs.lakeformation.ResourceLfTagTableWithColumns | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.lakeformation.ResourceLfTagTimeouts | undefined>;

    /**
     * Create a ResourceLfTag resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ResourceLfTagArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ResourceLfTagArgs | ResourceLfTagState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ResourceLfTagState | undefined;
            resourceInputs["catalogId"] = state ? state.catalogId : undefined;
            resourceInputs["database"] = state ? state.database : undefined;
            resourceInputs["lfTag"] = state ? state.lfTag : undefined;
            resourceInputs["table"] = state ? state.table : undefined;
            resourceInputs["tableWithColumns"] = state ? state.tableWithColumns : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as ResourceLfTagArgs | undefined;
            resourceInputs["catalogId"] = args ? args.catalogId : undefined;
            resourceInputs["database"] = args ? args.database : undefined;
            resourceInputs["lfTag"] = args ? args.lfTag : undefined;
            resourceInputs["table"] = args ? args.table : undefined;
            resourceInputs["tableWithColumns"] = args ? args.tableWithColumns : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ResourceLfTag.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ResourceLfTag resources.
 */
export interface ResourceLfTagState {
    /**
     * Identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment.
     */
    catalogId?: pulumi.Input<string>;
    /**
     * Configuration block for a database resource. See Database for more details.
     */
    database?: pulumi.Input<inputs.lakeformation.ResourceLfTagDatabase>;
    /**
     * Set of LF-tags to attach to the resource. See LF Tag for more details.
     *
     * Exactly one of the following is required:
     */
    lfTag?: pulumi.Input<inputs.lakeformation.ResourceLfTagLfTag>;
    /**
     * Configuration block for a table resource. See Table for more details.
     */
    table?: pulumi.Input<inputs.lakeformation.ResourceLfTagTable>;
    /**
     * Configuration block for a table with columns resource. See Table With Columns for more details.
     *
     * The following arguments are optional:
     */
    tableWithColumns?: pulumi.Input<inputs.lakeformation.ResourceLfTagTableWithColumns>;
    timeouts?: pulumi.Input<inputs.lakeformation.ResourceLfTagTimeouts>;
}

/**
 * The set of arguments for constructing a ResourceLfTag resource.
 */
export interface ResourceLfTagArgs {
    /**
     * Identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment.
     */
    catalogId?: pulumi.Input<string>;
    /**
     * Configuration block for a database resource. See Database for more details.
     */
    database?: pulumi.Input<inputs.lakeformation.ResourceLfTagDatabase>;
    /**
     * Set of LF-tags to attach to the resource. See LF Tag for more details.
     *
     * Exactly one of the following is required:
     */
    lfTag?: pulumi.Input<inputs.lakeformation.ResourceLfTagLfTag>;
    /**
     * Configuration block for a table resource. See Table for more details.
     */
    table?: pulumi.Input<inputs.lakeformation.ResourceLfTagTable>;
    /**
     * Configuration block for a table with columns resource. See Table With Columns for more details.
     *
     * The following arguments are optional:
     */
    tableWithColumns?: pulumi.Input<inputs.lakeformation.ResourceLfTagTableWithColumns>;
    timeouts?: pulumi.Input<inputs.lakeformation.ResourceLfTagTimeouts>;
}
