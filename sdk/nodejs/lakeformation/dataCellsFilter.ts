// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS Lake Formation Data Cells Filter.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.lakeformation.DataCellsFilter("example", {tableData: {
 *     databaseName: test.name,
 *     name: "example",
 *     tableCatalogId: current.accountId,
 *     tableName: testAwsGlueCatalogTable.name,
 *     columnNames: ["my_column"],
 *     rowFilter: {
 *         filterExpression: "my_column='example'",
 *     },
 * }});
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * Using `pulumi import`, import Lake Formation Data Cells Filter using the `id`. For example:
 *
 * ```sh
 * $ pulumi import aws:lakeformation/dataCellsFilter:DataCellsFilter example database_name,name,table_catalog_id,table_name
 * ```
 */
export class DataCellsFilter extends pulumi.CustomResource {
    /**
     * Get an existing DataCellsFilter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DataCellsFilterState, opts?: pulumi.CustomResourceOptions): DataCellsFilter {
        return new DataCellsFilter(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:lakeformation/dataCellsFilter:DataCellsFilter';

    /**
     * Returns true if the given object is an instance of DataCellsFilter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataCellsFilter {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataCellsFilter.__pulumiType;
    }

    /**
     * Information about the data cells filter. See Table Data below for details.
     */
    public readonly tableData!: pulumi.Output<outputs.lakeformation.DataCellsFilterTableData | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.lakeformation.DataCellsFilterTimeouts | undefined>;

    /**
     * Create a DataCellsFilter resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DataCellsFilterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DataCellsFilterArgs | DataCellsFilterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DataCellsFilterState | undefined;
            resourceInputs["tableData"] = state ? state.tableData : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as DataCellsFilterArgs | undefined;
            resourceInputs["tableData"] = args ? args.tableData : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DataCellsFilter.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DataCellsFilter resources.
 */
export interface DataCellsFilterState {
    /**
     * Information about the data cells filter. See Table Data below for details.
     */
    tableData?: pulumi.Input<inputs.lakeformation.DataCellsFilterTableData>;
    timeouts?: pulumi.Input<inputs.lakeformation.DataCellsFilterTimeouts>;
}

/**
 * The set of arguments for constructing a DataCellsFilter resource.
 */
export interface DataCellsFilterArgs {
    /**
     * Information about the data cells filter. See Table Data below for details.
     */
    tableData?: pulumi.Input<inputs.lakeformation.DataCellsFilterTableData>;
    timeouts?: pulumi.Input<inputs.lakeformation.DataCellsFilterTimeouts>;
}
