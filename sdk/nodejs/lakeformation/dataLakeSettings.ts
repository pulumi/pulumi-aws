// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export class DataLakeSettings extends pulumi.CustomResource {
    /**
     * Get an existing DataLakeSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DataLakeSettingsState, opts?: pulumi.CustomResourceOptions): DataLakeSettings {
        return new DataLakeSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:lakeformation/dataLakeSettings:DataLakeSettings';

    /**
     * Returns true if the given object is an instance of DataLakeSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataLakeSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataLakeSettings.__pulumiType;
    }

    public readonly admins!: pulumi.Output<string[]>;
    public readonly catalogId!: pulumi.Output<string | undefined>;
    public readonly createDatabaseDefaultPermissions!: pulumi.Output<outputs.lakeformation.DataLakeSettingsCreateDatabaseDefaultPermission[]>;
    public readonly createTableDefaultPermissions!: pulumi.Output<outputs.lakeformation.DataLakeSettingsCreateTableDefaultPermission[]>;
    public readonly trustedResourceOwners!: pulumi.Output<string[]>;

    /**
     * Create a DataLakeSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DataLakeSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DataLakeSettingsArgs | DataLakeSettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DataLakeSettingsState | undefined;
            resourceInputs["admins"] = state ? state.admins : undefined;
            resourceInputs["catalogId"] = state ? state.catalogId : undefined;
            resourceInputs["createDatabaseDefaultPermissions"] = state ? state.createDatabaseDefaultPermissions : undefined;
            resourceInputs["createTableDefaultPermissions"] = state ? state.createTableDefaultPermissions : undefined;
            resourceInputs["trustedResourceOwners"] = state ? state.trustedResourceOwners : undefined;
        } else {
            const args = argsOrState as DataLakeSettingsArgs | undefined;
            resourceInputs["admins"] = args ? args.admins : undefined;
            resourceInputs["catalogId"] = args ? args.catalogId : undefined;
            resourceInputs["createDatabaseDefaultPermissions"] = args ? args.createDatabaseDefaultPermissions : undefined;
            resourceInputs["createTableDefaultPermissions"] = args ? args.createTableDefaultPermissions : undefined;
            resourceInputs["trustedResourceOwners"] = args ? args.trustedResourceOwners : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DataLakeSettings.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DataLakeSettings resources.
 */
export interface DataLakeSettingsState {
    admins?: pulumi.Input<pulumi.Input<string>[]>;
    catalogId?: pulumi.Input<string>;
    createDatabaseDefaultPermissions?: pulumi.Input<pulumi.Input<inputs.lakeformation.DataLakeSettingsCreateDatabaseDefaultPermission>[]>;
    createTableDefaultPermissions?: pulumi.Input<pulumi.Input<inputs.lakeformation.DataLakeSettingsCreateTableDefaultPermission>[]>;
    trustedResourceOwners?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a DataLakeSettings resource.
 */
export interface DataLakeSettingsArgs {
    admins?: pulumi.Input<pulumi.Input<string>[]>;
    catalogId?: pulumi.Input<string>;
    createDatabaseDefaultPermissions?: pulumi.Input<pulumi.Input<inputs.lakeformation.DataLakeSettingsCreateDatabaseDefaultPermission>[]>;
    createTableDefaultPermissions?: pulumi.Input<pulumi.Input<inputs.lakeformation.DataLakeSettingsCreateTableDefaultPermission>[]>;
    trustedResourceOwners?: pulumi.Input<pulumi.Input<string>[]>;
}
