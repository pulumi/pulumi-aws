// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS Lake Formation LF Tag Expression.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.lakeformation.LfTag("example", {
 *     key: "example",
 *     values: ["value"],
 * });
 * const exampleLfTagExpression = new aws.lakeformation.LfTagExpression("example", {
 *     name: "example",
 *     expressions: [{
 *         tagKey: example.key,
 *         tagValues: example.values,
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Lake Formation LF Tag Expression using the `name,catalog_id`. For example:
 *
 * ```sh
 * $ pulumi import aws:lakeformation/lfTagExpression:LfTagExpression example example-tag-expression,123456789012
 * ```
 */
export class LfTagExpression extends pulumi.CustomResource {
    /**
     * Get an existing LfTagExpression resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LfTagExpressionState, opts?: pulumi.CustomResourceOptions): LfTagExpression {
        return new LfTagExpression(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:lakeformation/lfTagExpression:LfTagExpression';

    /**
     * Returns true if the given object is an instance of LfTagExpression.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LfTagExpression {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LfTagExpression.__pulumiType;
    }

    /**
     * ID of the Data Catalog. Defaults to the account ID if not specified.
     */
    declare public readonly catalogId: pulumi.Output<string>;
    /**
     * Description of the LF-Tag Expression.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * A list of LF-Tag conditions (key-value pairs). See expression for more details.
     *
     * The following arguments are optional:
     */
    declare public readonly expressions: pulumi.Output<outputs.lakeformation.LfTagExpressionExpression[] | undefined>;
    /**
     * Name of the LF-Tag Expression.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    declare public readonly region: pulumi.Output<string>;

    /**
     * Create a LfTagExpression resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: LfTagExpressionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LfTagExpressionArgs | LfTagExpressionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LfTagExpressionState | undefined;
            resourceInputs["catalogId"] = state?.catalogId;
            resourceInputs["description"] = state?.description;
            resourceInputs["expressions"] = state?.expressions;
            resourceInputs["name"] = state?.name;
            resourceInputs["region"] = state?.region;
        } else {
            const args = argsOrState as LfTagExpressionArgs | undefined;
            resourceInputs["catalogId"] = args?.catalogId;
            resourceInputs["description"] = args?.description;
            resourceInputs["expressions"] = args?.expressions;
            resourceInputs["name"] = args?.name;
            resourceInputs["region"] = args?.region;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LfTagExpression.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LfTagExpression resources.
 */
export interface LfTagExpressionState {
    /**
     * ID of the Data Catalog. Defaults to the account ID if not specified.
     */
    catalogId?: pulumi.Input<string>;
    /**
     * Description of the LF-Tag Expression.
     */
    description?: pulumi.Input<string>;
    /**
     * A list of LF-Tag conditions (key-value pairs). See expression for more details.
     *
     * The following arguments are optional:
     */
    expressions?: pulumi.Input<pulumi.Input<inputs.lakeformation.LfTagExpressionExpression>[]>;
    /**
     * Name of the LF-Tag Expression.
     */
    name?: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LfTagExpression resource.
 */
export interface LfTagExpressionArgs {
    /**
     * ID of the Data Catalog. Defaults to the account ID if not specified.
     */
    catalogId?: pulumi.Input<string>;
    /**
     * Description of the LF-Tag Expression.
     */
    description?: pulumi.Input<string>;
    /**
     * A list of LF-Tag conditions (key-value pairs). See expression for more details.
     *
     * The following arguments are optional:
     */
    expressions?: pulumi.Input<pulumi.Input<inputs.lakeformation.LfTagExpressionExpression>[]>;
    /**
     * Name of the LF-Tag Expression.
     */
    name?: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
}
