// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS Lake Formation Opt In.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.lakeformation.OptIn("example", {});
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Lake Formation Opt In using the `example_id_arg`. For example:
 *
 * ```sh
 * $ pulumi import aws:lakeformation/optIn:OptIn example opt_in-id-12345678
 * ```
 */
export class OptIn extends pulumi.CustomResource {
    /**
     * Get an existing OptIn resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OptInState, opts?: pulumi.CustomResourceOptions): OptIn {
        return new OptIn(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:lakeformation/optIn:OptIn';

    /**
     * Returns true if the given object is an instance of OptIn.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OptIn {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OptIn.__pulumiType;
    }

    /**
     * Lake Formation condition, which applies to permissions and opt-ins that contain an expression.
     */
    public readonly conditions!: pulumi.Output<outputs.lakeformation.OptInCondition[] | undefined>;
    /**
     * Last modified date and time of the record.
     */
    public /*out*/ readonly lastModified!: pulumi.Output<string>;
    public /*out*/ readonly lastUpdatedBy!: pulumi.Output<string>;
    /**
     * Lake Formation principal. Supported principals are IAM users or IAM roles. See Principal for more details.
     */
    public readonly principals!: pulumi.Output<outputs.lakeformation.OptInPrincipal[] | undefined>;
    /**
     * Structure for the resource. See Resource for more details.
     */
    public readonly resourceDatas!: pulumi.Output<outputs.lakeformation.OptInResourceData[] | undefined>;

    /**
     * Create a OptIn resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: OptInArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OptInArgs | OptInState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OptInState | undefined;
            resourceInputs["conditions"] = state ? state.conditions : undefined;
            resourceInputs["lastModified"] = state ? state.lastModified : undefined;
            resourceInputs["lastUpdatedBy"] = state ? state.lastUpdatedBy : undefined;
            resourceInputs["principals"] = state ? state.principals : undefined;
            resourceInputs["resourceDatas"] = state ? state.resourceDatas : undefined;
        } else {
            const args = argsOrState as OptInArgs | undefined;
            resourceInputs["conditions"] = args ? args.conditions : undefined;
            resourceInputs["principals"] = args ? args.principals : undefined;
            resourceInputs["resourceDatas"] = args ? args.resourceDatas : undefined;
            resourceInputs["lastModified"] = undefined /*out*/;
            resourceInputs["lastUpdatedBy"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OptIn.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OptIn resources.
 */
export interface OptInState {
    /**
     * Lake Formation condition, which applies to permissions and opt-ins that contain an expression.
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.lakeformation.OptInCondition>[]>;
    /**
     * Last modified date and time of the record.
     */
    lastModified?: pulumi.Input<string>;
    lastUpdatedBy?: pulumi.Input<string>;
    /**
     * Lake Formation principal. Supported principals are IAM users or IAM roles. See Principal for more details.
     */
    principals?: pulumi.Input<pulumi.Input<inputs.lakeformation.OptInPrincipal>[]>;
    /**
     * Structure for the resource. See Resource for more details.
     */
    resourceDatas?: pulumi.Input<pulumi.Input<inputs.lakeformation.OptInResourceData>[]>;
}

/**
 * The set of arguments for constructing a OptIn resource.
 */
export interface OptInArgs {
    /**
     * Lake Formation condition, which applies to permissions and opt-ins that contain an expression.
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.lakeformation.OptInCondition>[]>;
    /**
     * Lake Formation principal. Supported principals are IAM users or IAM roles. See Principal for more details.
     */
    principals?: pulumi.Input<pulumi.Input<inputs.lakeformation.OptInPrincipal>[]>;
    /**
     * Structure for the resource. See Resource for more details.
     */
    resourceDatas?: pulumi.Input<pulumi.Input<inputs.lakeformation.OptInResourceData>[]>;
}
