// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Retrieve information about a Location Service Tracker.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.location.getTracker({
 *     trackerName: "example",
 * });
 * ```
 */
export function getTracker(args: GetTrackerArgs, opts?: pulumi.InvokeOptions): Promise<GetTrackerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:location/getTracker:getTracker", {
        "tags": args.tags,
        "trackerName": args.trackerName,
    }, opts);
}

/**
 * A collection of arguments for invoking getTracker.
 */
export interface GetTrackerArgs {
    /**
     * Key-value map of resource tags for the tracker.
     */
    tags?: {[key: string]: string};
    /**
     * Name of the tracker resource.
     */
    trackerName: string;
}

/**
 * A collection of values returned by getTracker.
 */
export interface GetTrackerResult {
    /**
     * Timestamp for when the tracker resource was created in ISO 8601 format.
     */
    readonly createTime: string;
    /**
     * Optional description for the tracker resource.
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Key identifier for an AWS KMS customer managed key assigned to the Amazon Location resource.
     */
    readonly kmsKeyId: string;
    /**
     * Position filtering method of the tracker resource.
     */
    readonly positionFiltering: string;
    /**
     * Key-value map of resource tags for the tracker.
     */
    readonly tags: {[key: string]: string};
    /**
     * ARN for the tracker resource. Used when you need to specify a resource across all AWS.
     */
    readonly trackerArn: string;
    readonly trackerName: string;
    /**
     * Timestamp for when the tracker resource was last updated in ISO 8601 format.
     */
    readonly updateTime: string;
}

export function getTrackerOutput(args: GetTrackerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTrackerResult> {
    return pulumi.output(args).apply(a => getTracker(a, opts))
}

/**
 * A collection of arguments for invoking getTracker.
 */
export interface GetTrackerOutputArgs {
    /**
     * Key-value map of resource tags for the tracker.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Name of the tracker resource.
     */
    trackerName: pulumi.Input<string>;
}
