// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getGeofenceCollection(args: GetGeofenceCollectionArgs, opts?: pulumi.InvokeOptions): Promise<GetGeofenceCollectionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:location/getGeofenceCollection:getGeofenceCollection", {
        "collectionName": args.collectionName,
        "kmsKeyId": args.kmsKeyId,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getGeofenceCollection.
 */
export interface GetGeofenceCollectionArgs {
    collectionName: string;
    kmsKeyId?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getGeofenceCollection.
 */
export interface GetGeofenceCollectionResult {
    readonly collectionArn: string;
    readonly collectionName: string;
    readonly createTime: string;
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly kmsKeyId: string;
    readonly tags: {[key: string]: string};
    readonly updateTime: string;
}
export function getGeofenceCollectionOutput(args: GetGeofenceCollectionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGeofenceCollectionResult> {
    return pulumi.output(args).apply((a: any) => getGeofenceCollection(a, opts))
}

/**
 * A collection of arguments for invoking getGeofenceCollection.
 */
export interface GetGeofenceCollectionOutputArgs {
    collectionName: pulumi.Input<string>;
    kmsKeyId?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
