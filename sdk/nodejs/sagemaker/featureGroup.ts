// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Provides a SageMaker AI Feature Group resource.
 *
 * ## Example Usage
 *
 * Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.sagemaker.FeatureGroup("example", {
 *     featureGroupName: "example",
 *     recordIdentifierFeatureName: "example",
 *     eventTimeFeatureName: "example",
 *     roleArn: test.arn,
 *     featureDefinitions: [{
 *         featureName: "example",
 *         featureType: "String",
 *     }],
 *     onlineStoreConfig: {
 *         enableOnlineStore: true,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Feature Groups using the `name`. For example:
 *
 * ```sh
 * $ pulumi import aws:sagemaker/featureGroup:FeatureGroup test_feature_group feature_group-foo
 * ```
 */
export class FeatureGroup extends pulumi.CustomResource {
    /**
     * Get an existing FeatureGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FeatureGroupState, opts?: pulumi.CustomResourceOptions): FeatureGroup {
        return new FeatureGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:sagemaker/featureGroup:FeatureGroup';

    /**
     * Returns true if the given object is an instance of FeatureGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FeatureGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FeatureGroup.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) assigned by AWS to this feature_group.
     */
    declare public /*out*/ readonly arn: pulumi.Output<string>;
    /**
     * A free-form description of a Feature Group.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The name of the feature that stores the EventTime of a Record in a Feature Group.
     */
    declare public readonly eventTimeFeatureName: pulumi.Output<string>;
    /**
     * A list of Feature names and types. See Feature Definition Below.
     */
    declare public readonly featureDefinitions: pulumi.Output<outputs.sagemaker.FeatureGroupFeatureDefinition[]>;
    /**
     * The name of the Feature Group. The name must be unique within an AWS Region in an AWS account.
     */
    declare public readonly featureGroupName: pulumi.Output<string>;
    /**
     * The Offline Feature Store Configuration. See Offline Store Config Below.
     */
    declare public readonly offlineStoreConfig: pulumi.Output<outputs.sagemaker.FeatureGroupOfflineStoreConfig | undefined>;
    /**
     * The Online Feature Store Configuration. See Online Store Config Below.
     */
    declare public readonly onlineStoreConfig: pulumi.Output<outputs.sagemaker.FeatureGroupOnlineStoreConfig | undefined>;
    /**
     * The name of the Feature whose value uniquely identifies a Record defined in the Feature Store. Only the latest record per identifier value will be stored in the Online Store.
     */
    declare public readonly recordIdentifierFeatureName: pulumi.Output<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the IAM execution role used to persist data into the Offline Store if an `offlineStoreConfig` is provided.
     */
    declare public readonly roleArn: pulumi.Output<string>;
    /**
     * Map of resource tags for the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    declare public /*out*/ readonly tagsAll: pulumi.Output<{[key: string]: string}>;
    declare public readonly throughputConfig: pulumi.Output<outputs.sagemaker.FeatureGroupThroughputConfig>;

    /**
     * Create a FeatureGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FeatureGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FeatureGroupArgs | FeatureGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FeatureGroupState | undefined;
            resourceInputs["arn"] = state?.arn;
            resourceInputs["description"] = state?.description;
            resourceInputs["eventTimeFeatureName"] = state?.eventTimeFeatureName;
            resourceInputs["featureDefinitions"] = state?.featureDefinitions;
            resourceInputs["featureGroupName"] = state?.featureGroupName;
            resourceInputs["offlineStoreConfig"] = state?.offlineStoreConfig;
            resourceInputs["onlineStoreConfig"] = state?.onlineStoreConfig;
            resourceInputs["recordIdentifierFeatureName"] = state?.recordIdentifierFeatureName;
            resourceInputs["region"] = state?.region;
            resourceInputs["roleArn"] = state?.roleArn;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tagsAll"] = state?.tagsAll;
            resourceInputs["throughputConfig"] = state?.throughputConfig;
        } else {
            const args = argsOrState as FeatureGroupArgs | undefined;
            if (args?.eventTimeFeatureName === undefined && !opts.urn) {
                throw new Error("Missing required property 'eventTimeFeatureName'");
            }
            if (args?.featureDefinitions === undefined && !opts.urn) {
                throw new Error("Missing required property 'featureDefinitions'");
            }
            if (args?.featureGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'featureGroupName'");
            }
            if (args?.recordIdentifierFeatureName === undefined && !opts.urn) {
                throw new Error("Missing required property 'recordIdentifierFeatureName'");
            }
            if (args?.roleArn === undefined && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["eventTimeFeatureName"] = args?.eventTimeFeatureName;
            resourceInputs["featureDefinitions"] = args?.featureDefinitions;
            resourceInputs["featureGroupName"] = args?.featureGroupName;
            resourceInputs["offlineStoreConfig"] = args?.offlineStoreConfig;
            resourceInputs["onlineStoreConfig"] = args?.onlineStoreConfig;
            resourceInputs["recordIdentifierFeatureName"] = args?.recordIdentifierFeatureName;
            resourceInputs["region"] = args?.region;
            resourceInputs["roleArn"] = args?.roleArn;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["throughputConfig"] = args?.throughputConfig;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FeatureGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FeatureGroup resources.
 */
export interface FeatureGroupState {
    /**
     * The Amazon Resource Name (ARN) assigned by AWS to this feature_group.
     */
    arn?: pulumi.Input<string>;
    /**
     * A free-form description of a Feature Group.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the feature that stores the EventTime of a Record in a Feature Group.
     */
    eventTimeFeatureName?: pulumi.Input<string>;
    /**
     * A list of Feature names and types. See Feature Definition Below.
     */
    featureDefinitions?: pulumi.Input<pulumi.Input<inputs.sagemaker.FeatureGroupFeatureDefinition>[]>;
    /**
     * The name of the Feature Group. The name must be unique within an AWS Region in an AWS account.
     */
    featureGroupName?: pulumi.Input<string>;
    /**
     * The Offline Feature Store Configuration. See Offline Store Config Below.
     */
    offlineStoreConfig?: pulumi.Input<inputs.sagemaker.FeatureGroupOfflineStoreConfig>;
    /**
     * The Online Feature Store Configuration. See Online Store Config Below.
     */
    onlineStoreConfig?: pulumi.Input<inputs.sagemaker.FeatureGroupOnlineStoreConfig>;
    /**
     * The name of the Feature whose value uniquely identifies a Record defined in the Feature Store. Only the latest record per identifier value will be stored in the Online Store.
     */
    recordIdentifierFeatureName?: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the IAM execution role used to persist data into the Offline Store if an `offlineStoreConfig` is provided.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * Map of resource tags for the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    throughputConfig?: pulumi.Input<inputs.sagemaker.FeatureGroupThroughputConfig>;
}

/**
 * The set of arguments for constructing a FeatureGroup resource.
 */
export interface FeatureGroupArgs {
    /**
     * A free-form description of a Feature Group.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the feature that stores the EventTime of a Record in a Feature Group.
     */
    eventTimeFeatureName: pulumi.Input<string>;
    /**
     * A list of Feature names and types. See Feature Definition Below.
     */
    featureDefinitions: pulumi.Input<pulumi.Input<inputs.sagemaker.FeatureGroupFeatureDefinition>[]>;
    /**
     * The name of the Feature Group. The name must be unique within an AWS Region in an AWS account.
     */
    featureGroupName: pulumi.Input<string>;
    /**
     * The Offline Feature Store Configuration. See Offline Store Config Below.
     */
    offlineStoreConfig?: pulumi.Input<inputs.sagemaker.FeatureGroupOfflineStoreConfig>;
    /**
     * The Online Feature Store Configuration. See Online Store Config Below.
     */
    onlineStoreConfig?: pulumi.Input<inputs.sagemaker.FeatureGroupOnlineStoreConfig>;
    /**
     * The name of the Feature whose value uniquely identifies a Record defined in the Feature Store. Only the latest record per identifier value will be stored in the Online Store.
     */
    recordIdentifierFeatureName: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the IAM execution role used to persist data into the Offline Store if an `offlineStoreConfig` is provided.
     */
    roleArn: pulumi.Input<string>;
    /**
     * Map of resource tags for the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    throughputConfig?: pulumi.Input<inputs.sagemaker.FeatureGroupThroughputConfig>;
}
