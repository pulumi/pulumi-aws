// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Provides a Sagemaker Workforce resource.
 *
 * ## Example Usage
 * ### Cognito Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleUserPool = new aws.cognito.UserPool("exampleUserPool", {});
 * const exampleUserPoolClient = new aws.cognito.UserPoolClient("exampleUserPoolClient", {
 *     generateSecret: true,
 *     userPoolId: exampleUserPool.id,
 * });
 * const exampleUserPoolDomain = new aws.cognito.UserPoolDomain("exampleUserPoolDomain", {
 *     domain: "example",
 *     userPoolId: exampleUserPool.id,
 * });
 * const exampleWorkforce = new aws.sagemaker.Workforce("exampleWorkforce", {
 *     workforceName: "example",
 *     cognitoConfig: {
 *         clientId: exampleUserPoolClient.id,
 *         userPool: exampleUserPoolDomain.userPoolId,
 *     },
 * });
 * ```
 * ### Oidc Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.sagemaker.Workforce("example", {
 *     oidcConfig: {
 *         authorizationEndpoint: "https://example.com",
 *         clientId: "example",
 *         clientSecret: "example",
 *         issuer: "https://example.com",
 *         jwksUri: "https://example.com",
 *         logoutEndpoint: "https://example.com",
 *         tokenEndpoint: "https://example.com",
 *         userInfoEndpoint: "https://example.com",
 *     },
 *     workforceName: "example",
 * });
 * ```
 *
 * ## Import
 *
 * Sagemaker Workforces can be imported using the `workforce_name`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:sagemaker/workforce:Workforce example example
 * ```
 */
export class Workforce extends pulumi.CustomResource {
    /**
     * Get an existing Workforce resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkforceState, opts?: pulumi.CustomResourceOptions): Workforce {
        return new Workforce(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:sagemaker/workforce:Workforce';

    /**
     * Returns true if the given object is an instance of Workforce.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Workforce {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Workforce.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) assigned by AWS to this Workforce.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Use this parameter to configure an Amazon Cognito private workforce. A single Cognito workforce is created using and corresponds to a single Amazon Cognito user pool. Conflicts with `oidcConfig`. see Cognito Config details below.
     */
    public readonly cognitoConfig!: pulumi.Output<outputs.sagemaker.WorkforceCognitoConfig | undefined>;
    /**
     * Use this parameter to configure a private workforce using your own OIDC Identity Provider. Conflicts with `cognitoConfig`. see OIDC Config details below.
     */
    public readonly oidcConfig!: pulumi.Output<outputs.sagemaker.WorkforceOidcConfig | undefined>;
    /**
     * A list of IP address ranges Used to create an allow list of IP addresses for a private workforce. By default, a workforce isn't restricted to specific IP addresses. see Source Ip Config details below.
     */
    public readonly sourceIpConfig!: pulumi.Output<outputs.sagemaker.WorkforceSourceIpConfig>;
    /**
     * The subdomain for your OIDC Identity Provider.
     */
    public /*out*/ readonly subdomain!: pulumi.Output<string>;
    /**
     * The name of the Workforce (must be unique).
     */
    public readonly workforceName!: pulumi.Output<string>;

    /**
     * Create a Workforce resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkforceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkforceArgs | WorkforceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WorkforceState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["cognitoConfig"] = state ? state.cognitoConfig : undefined;
            resourceInputs["oidcConfig"] = state ? state.oidcConfig : undefined;
            resourceInputs["sourceIpConfig"] = state ? state.sourceIpConfig : undefined;
            resourceInputs["subdomain"] = state ? state.subdomain : undefined;
            resourceInputs["workforceName"] = state ? state.workforceName : undefined;
        } else {
            const args = argsOrState as WorkforceArgs | undefined;
            if ((!args || args.workforceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workforceName'");
            }
            resourceInputs["cognitoConfig"] = args ? args.cognitoConfig : undefined;
            resourceInputs["oidcConfig"] = args ? args.oidcConfig : undefined;
            resourceInputs["sourceIpConfig"] = args ? args.sourceIpConfig : undefined;
            resourceInputs["workforceName"] = args ? args.workforceName : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["subdomain"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Workforce.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Workforce resources.
 */
export interface WorkforceState {
    /**
     * The Amazon Resource Name (ARN) assigned by AWS to this Workforce.
     */
    arn?: pulumi.Input<string>;
    /**
     * Use this parameter to configure an Amazon Cognito private workforce. A single Cognito workforce is created using and corresponds to a single Amazon Cognito user pool. Conflicts with `oidcConfig`. see Cognito Config details below.
     */
    cognitoConfig?: pulumi.Input<inputs.sagemaker.WorkforceCognitoConfig>;
    /**
     * Use this parameter to configure a private workforce using your own OIDC Identity Provider. Conflicts with `cognitoConfig`. see OIDC Config details below.
     */
    oidcConfig?: pulumi.Input<inputs.sagemaker.WorkforceOidcConfig>;
    /**
     * A list of IP address ranges Used to create an allow list of IP addresses for a private workforce. By default, a workforce isn't restricted to specific IP addresses. see Source Ip Config details below.
     */
    sourceIpConfig?: pulumi.Input<inputs.sagemaker.WorkforceSourceIpConfig>;
    /**
     * The subdomain for your OIDC Identity Provider.
     */
    subdomain?: pulumi.Input<string>;
    /**
     * The name of the Workforce (must be unique).
     */
    workforceName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Workforce resource.
 */
export interface WorkforceArgs {
    /**
     * Use this parameter to configure an Amazon Cognito private workforce. A single Cognito workforce is created using and corresponds to a single Amazon Cognito user pool. Conflicts with `oidcConfig`. see Cognito Config details below.
     */
    cognitoConfig?: pulumi.Input<inputs.sagemaker.WorkforceCognitoConfig>;
    /**
     * Use this parameter to configure a private workforce using your own OIDC Identity Provider. Conflicts with `cognitoConfig`. see OIDC Config details below.
     */
    oidcConfig?: pulumi.Input<inputs.sagemaker.WorkforceOidcConfig>;
    /**
     * A list of IP address ranges Used to create an allow list of IP addresses for a private workforce. By default, a workforce isn't restricted to specific IP addresses. see Source Ip Config details below.
     */
    sourceIpConfig?: pulumi.Input<inputs.sagemaker.WorkforceSourceIpConfig>;
    /**
     * The name of the Workforce (must be unique).
     */
    workforceName: pulumi.Input<string>;
}
