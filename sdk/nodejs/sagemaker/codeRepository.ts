// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Provides a Sagemaker Code Repository resource.
 *
 * ## Example Usage
 * ### Basic usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.sagemaker.CodeRepository("example", {
 *     codeRepositoryName: "example",
 *     gitConfig: {
 *         repositoryUrl: "https://github.com/hashicorp/terraform-provider-aws.git",
 *     },
 * });
 * ```
 * ### Example with Secret
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleSecret = new aws.secretsmanager.Secret("exampleSecret", {});
 * const exampleSecretVersion = new aws.secretsmanager.SecretVersion("exampleSecretVersion", {
 *     secretId: exampleSecret.id,
 *     secretString: JSON.stringify({
 *         username: "example",
 *         password: "example",
 *     }),
 * });
 * const exampleCodeRepository = new aws.sagemaker.CodeRepository("exampleCodeRepository", {
 *     codeRepositoryName: "example",
 *     gitConfig: {
 *         repositoryUrl: "https://github.com/hashicorp/terraform-provider-aws.git",
 *         secretArn: exampleSecret.arn,
 *     },
 * }, {
 *     dependsOn: [exampleSecretVersion],
 * });
 * ```
 *
 * ## Import
 *
 * Sagemaker Code Repositories can be imported using the `name`, e.g.
 *
 * ```sh
 *  $ pulumi import aws:sagemaker/codeRepository:CodeRepository test_code_repository my-code-repo
 * ```
 */
export class CodeRepository extends pulumi.CustomResource {
    /**
     * Get an existing CodeRepository resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CodeRepositoryState, opts?: pulumi.CustomResourceOptions): CodeRepository {
        return new CodeRepository(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:sagemaker/codeRepository:CodeRepository';

    /**
     * Returns true if the given object is an instance of CodeRepository.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CodeRepository {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CodeRepository.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) assigned by AWS to this Code Repository.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The name of the Code Repository (must be unique).
     */
    public readonly codeRepositoryName!: pulumi.Output<string>;
    /**
     * Specifies details about the repository. see Git Config details below.
     */
    public readonly gitConfig!: pulumi.Output<outputs.sagemaker.CodeRepositoryGitConfig>;

    /**
     * Create a CodeRepository resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CodeRepositoryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CodeRepositoryArgs | CodeRepositoryState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CodeRepositoryState | undefined;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["codeRepositoryName"] = state ? state.codeRepositoryName : undefined;
            inputs["gitConfig"] = state ? state.gitConfig : undefined;
        } else {
            const args = argsOrState as CodeRepositoryArgs | undefined;
            if ((!args || args.codeRepositoryName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'codeRepositoryName'");
            }
            if ((!args || args.gitConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gitConfig'");
            }
            inputs["codeRepositoryName"] = args ? args.codeRepositoryName : undefined;
            inputs["gitConfig"] = args ? args.gitConfig : undefined;
            inputs["arn"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(CodeRepository.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CodeRepository resources.
 */
export interface CodeRepositoryState {
    /**
     * The Amazon Resource Name (ARN) assigned by AWS to this Code Repository.
     */
    arn?: pulumi.Input<string>;
    /**
     * The name of the Code Repository (must be unique).
     */
    codeRepositoryName?: pulumi.Input<string>;
    /**
     * Specifies details about the repository. see Git Config details below.
     */
    gitConfig?: pulumi.Input<inputs.sagemaker.CodeRepositoryGitConfig>;
}

/**
 * The set of arguments for constructing a CodeRepository resource.
 */
export interface CodeRepositoryArgs {
    /**
     * The name of the Code Repository (must be unique).
     */
    codeRepositoryName: pulumi.Input<string>;
    /**
     * Specifies details about the repository. see Git Config details below.
     */
    gitConfig: pulumi.Input<inputs.sagemaker.CodeRepositoryGitConfig>;
}
