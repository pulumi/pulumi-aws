// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getPrebuiltEcrImage(args: GetPrebuiltEcrImageArgs, opts?: pulumi.InvokeOptions): Promise<GetPrebuiltEcrImageResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:sagemaker/getPrebuiltEcrImage:getPrebuiltEcrImage", {
        "dnsSuffix": args.dnsSuffix,
        "imageTag": args.imageTag,
        "region": args.region,
        "repositoryName": args.repositoryName,
    }, opts);
}

/**
 * A collection of arguments for invoking getPrebuiltEcrImage.
 */
export interface GetPrebuiltEcrImageArgs {
    dnsSuffix?: string;
    imageTag?: string;
    region?: string;
    repositoryName: string;
}

/**
 * A collection of values returned by getPrebuiltEcrImage.
 */
export interface GetPrebuiltEcrImageResult {
    readonly dnsSuffix?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly imageTag?: string;
    readonly region?: string;
    readonly registryId: string;
    readonly registryPath: string;
    readonly repositoryName: string;
}
export function getPrebuiltEcrImageOutput(args: GetPrebuiltEcrImageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPrebuiltEcrImageResult> {
    return pulumi.output(args).apply((a: any) => getPrebuiltEcrImage(a, opts))
}

/**
 * A collection of arguments for invoking getPrebuiltEcrImage.
 */
export interface GetPrebuiltEcrImageOutputArgs {
    dnsSuffix?: pulumi.Input<string>;
    imageTag?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    repositoryName: pulumi.Input<string>;
}
