// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a SageMaker Model Package Group Policy resource.
 *
 * ## Example Usage
 *
 * ## Import
 *
 * terraform import {
 *
 *  to = aws_sagemaker_model_package_group_policy.example
 *
 *  id = "example" } Using `pulumi import`, import SageMaker Model Package Groups using the `name`. For exampleconsole % pulumi import aws_sagemaker_model_package_group_policy.example example
 */
export class ModelPackageGroupPolicy extends pulumi.CustomResource {
    /**
     * Get an existing ModelPackageGroupPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ModelPackageGroupPolicyState, opts?: pulumi.CustomResourceOptions): ModelPackageGroupPolicy {
        return new ModelPackageGroupPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:sagemaker/modelPackageGroupPolicy:ModelPackageGroupPolicy';

    /**
     * Returns true if the given object is an instance of ModelPackageGroupPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ModelPackageGroupPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ModelPackageGroupPolicy.__pulumiType;
    }

    /**
     * The name of the model package group.
     */
    public readonly modelPackageGroupName!: pulumi.Output<string>;
    public readonly resourcePolicy!: pulumi.Output<string>;

    /**
     * Create a ModelPackageGroupPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ModelPackageGroupPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ModelPackageGroupPolicyArgs | ModelPackageGroupPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ModelPackageGroupPolicyState | undefined;
            resourceInputs["modelPackageGroupName"] = state ? state.modelPackageGroupName : undefined;
            resourceInputs["resourcePolicy"] = state ? state.resourcePolicy : undefined;
        } else {
            const args = argsOrState as ModelPackageGroupPolicyArgs | undefined;
            if ((!args || args.modelPackageGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'modelPackageGroupName'");
            }
            if ((!args || args.resourcePolicy === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourcePolicy'");
            }
            resourceInputs["modelPackageGroupName"] = args ? args.modelPackageGroupName : undefined;
            resourceInputs["resourcePolicy"] = args ? args.resourcePolicy : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ModelPackageGroupPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ModelPackageGroupPolicy resources.
 */
export interface ModelPackageGroupPolicyState {
    /**
     * The name of the model package group.
     */
    modelPackageGroupName?: pulumi.Input<string>;
    resourcePolicy?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ModelPackageGroupPolicy resource.
 */
export interface ModelPackageGroupPolicyArgs {
    /**
     * The name of the model package group.
     */
    modelPackageGroupName: pulumi.Input<string>;
    resourcePolicy: pulumi.Input<string>;
}
