// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Provides a SageMaker monitoring schedule resource.
 *
 * ## Example Usage
 *
 * Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.sagemaker.MonitoringSchedule("test", {monitoringScheduleConfig: {
 *     monitoringJobDefinitionName: aws_sagemaker_data_quality_job_definition.test.name,
 *     monitoringType: "DataQuality",
 * }});
 * ```
 *
 * ## Import
 *
 * Monitoring schedules can be imported using the `name`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:sagemaker/monitoringSchedule:MonitoringSchedule test_monitoring_schedule monitoring-schedule-foo
 * ```
 */
export class MonitoringSchedule extends pulumi.CustomResource {
    /**
     * Get an existing MonitoringSchedule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MonitoringScheduleState, opts?: pulumi.CustomResourceOptions): MonitoringSchedule {
        return new MonitoringSchedule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:sagemaker/monitoringSchedule:MonitoringSchedule';

    /**
     * Returns true if the given object is an instance of MonitoringSchedule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MonitoringSchedule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MonitoringSchedule.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) assigned by AWS to this monitoring schedule.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The configuration object that specifies the monitoring schedule and defines the monitoring job. Fields are documented below.
     */
    public readonly monitoringScheduleConfig!: pulumi.Output<outputs.sagemaker.MonitoringScheduleMonitoringScheduleConfig>;
    /**
     * The name of the monitoring schedule. The name must be unique within an AWS Region within an AWS account. If omitted, the provider will assign a random, unique name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a MonitoringSchedule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MonitoringScheduleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MonitoringScheduleArgs | MonitoringScheduleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MonitoringScheduleState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["monitoringScheduleConfig"] = state ? state.monitoringScheduleConfig : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
        } else {
            const args = argsOrState as MonitoringScheduleArgs | undefined;
            if ((!args || args.monitoringScheduleConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'monitoringScheduleConfig'");
            }
            resourceInputs["monitoringScheduleConfig"] = args ? args.monitoringScheduleConfig : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MonitoringSchedule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MonitoringSchedule resources.
 */
export interface MonitoringScheduleState {
    /**
     * The Amazon Resource Name (ARN) assigned by AWS to this monitoring schedule.
     */
    arn?: pulumi.Input<string>;
    /**
     * The configuration object that specifies the monitoring schedule and defines the monitoring job. Fields are documented below.
     */
    monitoringScheduleConfig?: pulumi.Input<inputs.sagemaker.MonitoringScheduleMonitoringScheduleConfig>;
    /**
     * The name of the monitoring schedule. The name must be unique within an AWS Region within an AWS account. If omitted, the provider will assign a random, unique name.
     */
    name?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a MonitoringSchedule resource.
 */
export interface MonitoringScheduleArgs {
    /**
     * The configuration object that specifies the monitoring schedule and defines the monitoring job. Fields are documented below.
     */
    monitoringScheduleConfig: pulumi.Input<inputs.sagemaker.MonitoringScheduleMonitoringScheduleConfig>;
    /**
     * The name of the monitoring schedule. The name must be unique within an AWS Region within an AWS account. If omitted, the provider will assign a random, unique name.
     */
    name?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
