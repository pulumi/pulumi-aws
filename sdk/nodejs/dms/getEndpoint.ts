// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Data source for managing an AWS DMS (Database Migration) Endpoint.
 *
 * ## Example Usage
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = aws.dms.getEndpoint({
 *     endpointId: "test_id",
 * });
 * ```
 */
export function getEndpoint(args: GetEndpointArgs, opts?: pulumi.InvokeOptions): Promise<GetEndpointResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:dms/getEndpoint:getEndpoint", {
        "elasticsearchSettings": args.elasticsearchSettings,
        "endpointId": args.endpointId,
        "extraConnectionAttributes": args.extraConnectionAttributes,
        "kafkaSettings": args.kafkaSettings,
        "mongodbSettings": args.mongodbSettings,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getEndpoint.
 */
export interface GetEndpointArgs {
    elasticsearchSettings?: inputs.dms.GetEndpointElasticsearchSetting[];
    /**
     * Database endpoint identifier. Identifiers must contain from 1 to 255 alphanumeric characters or hyphens, begin with a letter, contain only ASCII letters, digits, and hyphens, not end with a hyphen, and not contain two consecutive hyphens.
     */
    endpointId: string;
    extraConnectionAttributes?: string;
    kafkaSettings?: inputs.dms.GetEndpointKafkaSetting[];
    mongodbSettings?: inputs.dms.GetEndpointMongodbSetting[];
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getEndpoint.
 */
export interface GetEndpointResult {
    readonly certificateArn: string;
    readonly databaseName: string;
    readonly elasticsearchSettings?: outputs.dms.GetEndpointElasticsearchSetting[];
    readonly endpointArn: string;
    readonly endpointId: string;
    readonly endpointType: string;
    readonly engineName: string;
    readonly extraConnectionAttributes?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly kafkaSettings?: outputs.dms.GetEndpointKafkaSetting[];
    readonly kinesisSettings: outputs.dms.GetEndpointKinesisSetting[];
    readonly kmsKeyArn: string;
    readonly mongodbSettings?: outputs.dms.GetEndpointMongodbSetting[];
    readonly password: string;
    readonly port: number;
    readonly redisSettings: outputs.dms.GetEndpointRedisSetting[];
    readonly redshiftSettings: outputs.dms.GetEndpointRedshiftSetting[];
    readonly s3Settings: outputs.dms.GetEndpointS3Setting[];
    readonly secretsManagerAccessRoleArn: string;
    readonly secretsManagerArn: string;
    readonly serverName: string;
    readonly serviceAccessRole: string;
    readonly sslMode: string;
    readonly tags: {[key: string]: string};
    readonly username: string;
}
/**
 * Data source for managing an AWS DMS (Database Migration) Endpoint.
 *
 * ## Example Usage
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = aws.dms.getEndpoint({
 *     endpointId: "test_id",
 * });
 * ```
 */
export function getEndpointOutput(args: GetEndpointOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEndpointResult> {
    return pulumi.output(args).apply((a: any) => getEndpoint(a, opts))
}

/**
 * A collection of arguments for invoking getEndpoint.
 */
export interface GetEndpointOutputArgs {
    elasticsearchSettings?: pulumi.Input<pulumi.Input<inputs.dms.GetEndpointElasticsearchSettingArgs>[]>;
    /**
     * Database endpoint identifier. Identifiers must contain from 1 to 255 alphanumeric characters or hyphens, begin with a letter, contain only ASCII letters, digits, and hyphens, not end with a hyphen, and not contain two consecutive hyphens.
     */
    endpointId: pulumi.Input<string>;
    extraConnectionAttributes?: pulumi.Input<string>;
    kafkaSettings?: pulumi.Input<pulumi.Input<inputs.dms.GetEndpointKafkaSettingArgs>[]>;
    mongodbSettings?: pulumi.Input<pulumi.Input<inputs.dms.GetEndpointMongodbSettingArgs>[]>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
