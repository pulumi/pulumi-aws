// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./input";
import * as outputs from "./output";

export interface EndpointElasticsearchSettings {
    /**
     * Endpoint for the OpenSearch cluster.
     */
    endpointUri: string;
    /**
     * Maximum number of seconds for which DMS retries failed API requests to the OpenSearch cluster. Default is `300`.
     */
    errorRetryDuration?: number;
    /**
     * Maximum percentage of records that can fail to be written before a full load operation stops. Default is `10`.
     */
    fullLoadErrorPercentage?: number;
    /**
     * ARN of the IAM Role with permissions to write to the OpenSearch cluster.
     */
    serviceAccessRoleArn: string;
    /**
     * Enable to migrate documentation using the documentation type `_doc`. OpenSearch and an Elasticsearch clusters only support the _doc documentation type in versions 7.x and later. The default value is `false`.
     */
    useNewMappingType?: boolean;
}
export interface EndpointKafkaSettings {
    /**
     * Kafka broker location. Specify in the form broker-hostname-or-ip:port.
     */
    broker: string;
    /**
     * Shows detailed control information for table definition, column definition, and table and column changes in the Kafka message output. Default is `false`.
     */
    includeControlDetails?: boolean;
    /**
     * Include NULL and empty columns for records migrated to the endpoint. Default is `false`.
     */
    includeNullAndEmpty?: boolean;
    /**
     * Shows the partition value within the Kafka message output unless the partition type is `schema-table-type`. Default is `false`.
     */
    includePartitionValue?: boolean;
    /**
     * Includes any data definition language (DDL) operations that change the table in the control data, such as `rename-table`, `drop-table`, `add-column`, `drop-column`, and `rename-column`. Default is `false`.
     */
    includeTableAlterOperations?: boolean;
    /**
     * Provides detailed transaction information from the source database. This information includes a commit timestamp, a log position, and values for `transactionId`, previous `transactionId`, and `transactionRecordId` (the record offset within a transaction). Default is `false`.
     */
    includeTransactionDetails?: boolean;
    /**
     * Output format for the records created on the endpoint. Message format is `JSON` (default) or `JSON_UNFORMATTED` (a single line with no tab).
     */
    messageFormat?: string;
    /**
     * Maximum size in bytes for records created on the endpoint Default is `1,000,000`.
     */
    messageMaxBytes?: number;
    /**
     * Set this optional parameter to true to avoid adding a '0x' prefix to raw data in hexadecimal format. For example, by default, AWS DMS adds a '0x' prefix to the LOB column type in hexadecimal format moving from an Oracle source to a Kafka target. Use the `noHexPrefix` endpoint setting to enable migration of RAW data type columns without adding the `'0x'` prefix.
     */
    noHexPrefix?: boolean;
    /**
     * Prefixes schema and table names to partition values, when the partition type is `primary-key-type`. Doing this increases data distribution among Kafka partitions. For example, suppose that a SysBench schema has thousands of tables and each table has only limited range for a primary key. In this case, the same primary key is sent from thousands of tables to the same partition, which causes throttling. Default is `false`.
     */
    partitionIncludeSchemaTable?: boolean;
    /**
     * Secure password you created when you first set up your MSK cluster to validate a client identity and make an encrypted connection between server and client using SASL-SSL authentication.
     */
    saslPassword?: string;
    /**
     * Secure user name you created when you first set up your MSK cluster to validate a client identity and make an encrypted connection between server and client using SASL-SSL authentication.
     */
    saslUsername?: string;
    /**
     * Set secure connection to a Kafka target endpoint using Transport Layer Security (TLS). Options include `ssl-encryption`, `ssl-authentication`, and `sasl-ssl`. `sasl-ssl` requires `saslUsername` and `saslPassword`.
     */
    securityProtocol?: string;
    /**
     * ARN for the private certificate authority (CA) cert that AWS DMS uses to securely connect to your Kafka target endpoint.
     */
    sslCaCertificateArn?: string;
    /**
     * ARN of the client certificate used to securely connect to a Kafka target endpoint.
     */
    sslClientCertificateArn?: string;
    /**
     * ARN for the client private key used to securely connect to a Kafka target endpoint.
     */
    sslClientKeyArn?: string;
    /**
     * Password for the client private key used to securely connect to a Kafka target endpoint.
     */
    sslClientKeyPassword?: string;
    /**
     * Kafka topic for migration. Default is `kafka-default-topic`.
     */
    topic?: string;
}
export interface EndpointKinesisSettings {
    /**
     * Shows detailed control information for table definition, column definition, and table and column changes in the Kinesis message output. Default is `false`.
     */
    includeControlDetails?: boolean;
    /**
     * Include NULL and empty columns in the target. Default is `false`.
     */
    includeNullAndEmpty?: boolean;
    /**
     * Shows the partition value within the Kinesis message output, unless the partition type is schema-table-type. Default is `false`.
     */
    includePartitionValue?: boolean;
    /**
     * Includes any data definition language (DDL) operations that change the table in the control data. Default is `false`.
     */
    includeTableAlterOperations?: boolean;
    /**
     * Provides detailed transaction information from the source database. Default is `false`.
     */
    includeTransactionDetails?: boolean;
    /**
     * Output format for the records created. Default is `json`. Valid values are `json` and `json-unformatted` (a single line with no tab).
     */
    messageFormat?: string;
    /**
     * Prefixes schema and table names to partition values, when the partition type is primary-key-type. Default is `false`.
     */
    partitionIncludeSchemaTable?: boolean;
    /**
     * ARN of the IAM Role with permissions to write to the Kinesis data stream.
     */
    serviceAccessRoleArn?: string;
    /**
     * ARN of the Kinesis data stream.
     */
    streamArn?: string;
}
export interface EndpointMongodbSettings {
    /**
     * Authentication mechanism to access the MongoDB source endpoint. Default is `default`.
     */
    authMechanism?: string;
    /**
     * Authentication database name. Not used when `authType` is `no`. Default is `admin`.
     */
    authSource?: string;
    /**
     * Authentication type to access the MongoDB source endpoint. Default is `password`.
     */
    authType?: string;
    /**
     * Number of documents to preview to determine the document organization. Use this setting when `nestingLevel` is set to `one`. Default is `1000`.
     */
    docsToInvestigate?: string;
    /**
     * Document ID. Use this setting when `nestingLevel` is set to `none`. Default is `false`.
     */
    extractDocId?: string;
    /**
     * Specifies either document or table mode. Default is `none`. Valid values are `one` (table mode) and `none` (document mode).
     */
    nestingLevel?: string;
}
export interface EndpointPostgresSettings {
    /**
     * For use with change data capture (CDC) only, this attribute has AWS DMS bypass foreign keys and user triggers to reduce the time it takes to bulk load data.
     */
    afterConnectScript?: string;
    /**
     * The Babelfish for Aurora PostgreSQL database name for the endpoint.
     */
    babelfishDatabaseName?: string;
    /**
     * To capture DDL events, AWS DMS creates various artifacts in the PostgreSQL database when the task starts.
     */
    captureDdls?: boolean;
    /**
     * Specifies the default behavior of the replication's handling of PostgreSQL- compatible endpoints that require some additional configuration, such as Babelfish endpoints.
     */
    databaseMode?: string;
    /**
     * Sets the schema in which the operational DDL database artifacts are created. Default is `public`.
     */
    ddlArtifactsSchema?: string;
    /**
     * Sets the client statement timeout for the PostgreSQL instance, in seconds. Default value is `60`.
     */
    executeTimeout?: number;
    /**
     * When set to `true`, this value causes a task to fail if the actual size of a LOB column is greater than the specified `LobMaxSize`. Default is `false`.
     */
    failTasksOnLobTruncation?: boolean;
    /**
     * The write-ahead log (WAL) heartbeat feature mimics a dummy transaction. By doing this, it prevents idle logical replication slots from holding onto old WAL logs, which can result in storage full situations on the source.
     */
    heartbeatEnable?: boolean;
    /**
     * Sets the WAL heartbeat frequency (in minutes). Default value is `5`.
     */
    heartbeatFrequency?: number;
    /**
     * Sets the schema in which the heartbeat artifacts are created. Default value is `public`.
     */
    heartbeatSchema?: string;
    /**
     * You can use PostgreSQL endpoint settings to map a boolean as a boolean from your PostgreSQL source to a Amazon Redshift target. Default value is `false`.
     */
    mapBooleanAsBoolean?: boolean;
    /**
     * Optional When true, DMS migrates JSONB values as CLOB.
     */
    mapJsonbAsClob?: boolean;
    /**
     * Optional When true, DMS migrates LONG values as VARCHAR.
     */
    mapLongVarcharAs?: string;
    /**
     * Specifies the maximum size (in KB) of any .csv file used to transfer data to PostgreSQL. Default is `32,768 KB`.
     */
    maxFileSize?: number;
    /**
     * Specifies the plugin to use to create a replication slot. Valid values: `pglogical`, `testDecoding`.
     */
    pluginName?: string;
    /**
     * Sets the name of a previously created logical replication slot for a CDC load of the PostgreSQL source instance.
     */
    slotName?: string;
}
export interface EndpointRedisSettings {
    /**
     * The password provided with the auth-role and auth-token options of the AuthType setting for a Redis target endpoint.
     */
    authPassword?: string;
    /**
     * The type of authentication to perform when connecting to a Redis target. Options include `none`, `auth-token`, and `auth-role`. The `auth-token` option requires an `authPassword` value to be provided. The `auth-role` option requires `authUserName` and `authPassword` values to be provided.
     */
    authType: string;
    /**
     * The username provided with the `auth-role` option of the AuthType setting for a Redis target endpoint.
     */
    authUserName?: string;
    /**
     * Transmission Control Protocol (TCP) port for the endpoint.
     */
    port: number;
    /**
     * Fully qualified domain name of the endpoint.
     */
    serverName: string;
    /**
     * The Amazon Resource Name (ARN) for the certificate authority (CA) that DMS uses to connect to your Redis target endpoint.
     */
    sslCaCertificateArn?: string;
    /**
     * The plaintext option doesn't provide Transport Layer Security (TLS) encryption for traffic between endpoint and database. Options include `plaintext`, `ssl-encryption`. The default is `ssl-encryption`.
     */
    sslSecurityProtocol?: string;
}
export interface EndpointRedshiftSettings {
    /**
     * Custom S3 Bucket Object prefix for intermediate storage.
     */
    bucketFolder?: string;
    /**
     * Custom S3 Bucket name for intermediate storage.
     */
    bucketName?: string;
    /**
     * The server-side encryption mode that you want to encrypt your intermediate .csv object files copied to S3. Defaults to `SSE_S3`. Valid values are `SSE_S3` and `SSE_KMS`.
     */
    encryptionMode?: string;
    /**
     * ARN or Id of KMS Key to use when `encryptionMode` is `SSE_KMS`.
     */
    serverSideEncryptionKmsKeyId?: string;
    /**
     * Amazon Resource Name (ARN) of the IAM Role with permissions to read from or write to the S3 Bucket for intermediate storage.
     */
    serviceAccessRoleArn?: string;
}
export interface EndpointS3Settings {
    /**
     * Whether to add column name information to the .csv output file. Default is `false`.
     */
    addColumnName?: boolean;
    /**
     * S3 object prefix.
     */
    bucketFolder?: string;
    /**
     * S3 bucket name.
     */
    bucketName?: string;
    /**
     * Predefined (canned) access control list for objects created in an S3 bucket. Valid values include `none`, `private`, `public-read`, `public-read-write`, `authenticated-read`, `aws-exec-read`, `bucket-owner-read`, and `bucket-owner-full-control`. Default is `none`.
     */
    cannedAclForObjects?: string;
    /**
     * Whether to write insert and update operations to .csv or .parquet output files. Default is `false`.
     */
    cdcInsertsAndUpdates?: boolean;
    /**
     * Whether to write insert operations to .csv or .parquet output files. Default is `false`.
     */
    cdcInsertsOnly?: boolean;
    /**
     * Maximum length of the interval, defined in seconds, after which to output a file to Amazon S3. Default is `60`.
     */
    cdcMaxBatchInterval?: number;
    /**
     * Minimum file size condition as defined in kilobytes to output a file to Amazon S3. Default is `32000`. **NOTE:** Previously, this setting was measured in megabytes but now represents kilobytes. Update configurations accordingly.
     */
    cdcMinFileSize?: number;
    /**
     * Folder path of CDC files. For an S3 source, this setting is required if a task captures change data; otherwise, it's optional. If `cdcPath` is set, AWS DMS reads CDC files from this path and replicates the data changes to the target endpoint. Supported in AWS DMS versions 3.4.2 and later.
     */
    cdcPath?: string;
    /**
     * Set to compress target files. Default is `NONE`. Valid values are `GZIP` and `NONE`.
     */
    compressionType?: string;
    /**
     * Delimiter used to separate columns in the source files. Default is `,`.
     */
    csvDelimiter?: string;
    /**
     * String to use for all columns not included in the supplemental log.
     */
    csvNoSupValue?: string;
    /**
     * String to as null when writing to the target.
     */
    csvNullValue?: string;
    /**
     * Delimiter used to separate rows in the source files. Default is `\n`.
     */
    csvRowDelimiter?: string;
    /**
     * Output format for the files that AWS DMS uses to create S3 objects. Valid values are `csv` and `parquet`. Default is `csv`.
     */
    dataFormat?: string;
    /**
     * Size of one data page in bytes. Default is `1048576` (1 MiB).
     */
    dataPageSize?: number;
    /**
     * Date separating delimiter to use during folder partitioning. Valid values are `SLASH`, `UNDERSCORE`, `DASH`, and `NONE`. Default is `SLASH`.
     */
    datePartitionDelimiter?: string;
    /**
     * Partition S3 bucket folders based on transaction commit dates. Default is `false`.
     */
    datePartitionEnabled?: boolean;
    /**
     * Date format to use during folder partitioning. Use this parameter when `datePartitionEnabled` is set to true. Valid values are `YYYYMMDD`, `YYYYMMDDHH`, `YYYYMM`, `MMYYYYDD`, and `DDMMYYYY`. Default is `YYYYMMDD`.
     */
    datePartitionSequence?: string;
    /**
     * Maximum size in bytes of an encoded dictionary page of a column. Default is `1048576` (1 MiB).
     */
    dictPageSizeLimit?: number;
    /**
     * Whether to enable statistics for Parquet pages and row groups. Default is `true`.
     */
    enableStatistics?: boolean;
    /**
     * Type of encoding to use. Value values are `rleDictionary`, `plain`, and `plainDictionary`. Default is `rleDictionary`.
     */
    encodingType?: string;
    /**
     * Server-side encryption mode that you want to encrypt your .csv or .parquet object files copied to S3. Valid values are `SSE_S3` and `SSE_KMS`. Default is `SSE_S3`.
     */
    encryptionMode?: string;
    /**
     * JSON document that describes how AWS DMS should interpret the data.
     */
    externalTableDefinition?: string;
    /**
     * Whether to integrate AWS Glue Data Catalog with an Amazon S3 target. See [Using AWS Glue Data Catalog with an Amazon S3 target for AWS DMS](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.S3.html#CHAP_Target.S3.GlueCatalog) for more information. Default is `false`.
     */
    glueCatalogGeneration?: boolean;
    /**
     * When this value is set to `1`, DMS ignores the first row header in a .csv file. Default is `0`.
     */
    ignoreHeaderRows?: number;
    /**
     * Whether to enable a full load to write INSERT operations to the .csv output files only to indicate how the rows were added to the source database. Default is `false`.
     */
    includeOpForFullLoad?: boolean;
    /**
     * Maximum size (in KB) of any .csv file to be created while migrating to an S3 target during full load. Valid values are from `1` to `1048576`. Default is `1048576` (1 GB).
     */
    maxFileSize?: number;
    /**
     * Specifies the precision of any TIMESTAMP column values written to an S3 object file in .parquet format. Default is `false`.
     */
    parquetTimestampInMillisecond?: boolean;
    /**
     * Version of the .parquet file format. Default is `parquet-1-0`. Valid values are `parquet-1-0` and `parquet-2-0`.
     */
    parquetVersion?: string;
    /**
     * Whether DMS saves the transaction order for a CDC load on the S3 target specified by `cdcPath`. Default is `false`.
     */
    preserveTransactions?: boolean;
    /**
     * For an S3 source, whether each leading double quotation mark has to be followed by an ending double quotation mark. Default is `true`.
     */
    rfc4180?: boolean;
    /**
     * Number of rows in a row group. Default is `10000`.
     */
    rowGroupLength?: number;
    /**
     * ARN or Id of KMS Key to use when `encryptionMode` is `SSE_KMS`.
     */
    serverSideEncryptionKmsKeyId?: string;
    /**
     * ARN of the IAM Role with permissions to read from or write to the S3 Bucket.
     */
    serviceAccessRoleArn?: string;
    /**
     * Column to add with timestamp information to the endpoint data for an Amazon S3 target.
     */
    timestampColumnName?: string;
    /**
     * Whether to use `csvNoSupValue` for columns not included in the supplemental log.
     */
    useCsvNoSupValue?: boolean;
    /**
     * When set to true, uses the task start time as the timestamp column value instead of the time data is written to target. For full load, when set to true, each row of the timestamp column contains the task start time. For CDC loads, each row of the timestamp column contains the transaction commit time. When set to false, the full load timestamp in the timestamp column increments with the time data arrives at the target. Default is `false`.
     */
    useTaskStartTimeForFullLoadTimestamp?: boolean;
}
export interface ReplicationConfigComputeConfig {
    /**
     * The Availability Zone where the DMS Serverless replication using this configuration will run. The default value is a random.
     */
    availabilityZone: string;
    /**
     * A list of custom DNS name servers supported for the DMS Serverless replication to access your source or target database.
     */
    dnsNameServers?: string;
    /**
     * An Key Management Service (KMS) key Amazon Resource Name (ARN) that is used to encrypt the data during DMS Serverless replication. If you don't specify a value for the KmsKeyId parameter, DMS uses your default encryption key.
     */
    kmsKeyId: string;
    /**
     * Specifies the maximum value of the DMS capacity units (DCUs) for which a given DMS Serverless replication can be provisioned. A single DCU is 2GB of RAM, with 2 DCUs as the minimum value allowed. The list of valid DCU values includes 2, 4, 8, 16, 32, 64, 128, 192, 256, and 384.
     */
    maxCapacityUnits?: number;
    /**
     * Specifies the minimum value of the DMS capacity units (DCUs) for which a given DMS Serverless replication can be provisioned. The list of valid DCU values includes 2, 4, 8, 16, 32, 64, 128, 192, 256, and 384. If this value isn't set DMS scans the current activity of available source tables to identify an optimum setting for this parameter.
     */
    minCapacityUnits?: number;
    /**
     * Specifies if the replication instance is a multi-az deployment. You cannot set the `availabilityZone` parameter if the `multiAz` parameter is set to `true`.
     */
    multiAz: boolean;
    /**
     * The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
     *
     * - Default: A 30-minute window selected at random from an 8-hour block of time per region, occurring on a random day of the week.
     * - Format: `ddd:hh24:mi-ddd:hh24:mi`
     * - Valid Days: `mon, tue, wed, thu, fri, sat, sun`
     * - Constraints: Minimum 30-minute window.
     */
    preferredMaintenanceWindow: string;
    /**
     * Specifies a subnet group identifier to associate with the DMS Serverless replication.
     */
    replicationSubnetGroupId: string;
    /**
     * Specifies the virtual private cloud (VPC) security group to use with the DMS Serverless replication. The VPC security group must work with the VPC containing the replication.
     */
    vpcSecurityGroupIds: string[];
}
export interface GetEndpointElasticsearchSetting {
    endpointUri: string;
    errorRetryDuration: number;
    fullLoadErrorPercentage: number;
    serviceAccessRoleArn: string;
}
export interface GetEndpointKafkaSetting {
    broker: string;
    includeControlDetails: boolean;
    includeNullAndEmpty: boolean;
    includePartitionValue: boolean;
    includeTableAlterOperations: boolean;
    includeTransactionDetails: boolean;
    messageFormat: string;
    messageMaxBytes: number;
    noHexPrefix: boolean;
    partitionIncludeSchemaTable: boolean;
    saslPassword: string;
    saslUsername: string;
    securityProtocol: string;
    sslCaCertificateArn: string;
    sslClientCertificateArn: string;
    sslClientKeyArn: string;
    sslClientKeyPassword: string;
    topic: string;
}
export interface GetEndpointKinesisSetting {
    includeControlDetails: boolean;
    includeNullAndEmpty: boolean;
    includePartitionValue: boolean;
    includeTableAlterOperations: boolean;
    includeTransactionDetails: boolean;
    messageFormat: string;
    partitionIncludeSchemaTable: boolean;
    serviceAccessRoleArn: string;
    streamArn: string;
}
export interface GetEndpointMongodbSetting {
    authMechanism: string;
    authSource: string;
    authType: string;
    docsToInvestigate: string;
    extractDocId: string;
    nestingLevel: string;
}
export interface GetEndpointPostgresSetting {
    afterConnectScript: string;
    babelfishDatabaseName: string;
    captureDdls: boolean;
    databaseMode: string;
    ddlArtifactsSchema: string;
    executeTimeout: number;
    failTasksOnLobTruncation: boolean;
    heartbeatEnable: boolean;
    heartbeatFrequency: number;
    heartbeatSchema: string;
    mapBooleanAsBoolean: boolean;
    mapJsonbAsClob: boolean;
    mapLongVarcharAs: string;
    maxFileSize: number;
    pluginName: string;
    slotName: string;
}
export interface GetEndpointRedisSetting {
    authPassword: string;
    authType: string;
    authUserName: string;
    port: number;
    serverName: string;
    sslCaCertificateArn: string;
    sslSecurityProtocol: string;
}
export interface GetEndpointRedshiftSetting {
    bucketFolder: string;
    bucketName: string;
    encryptionMode: string;
    serverSideEncryptionKmsKeyId: string;
    serviceAccessRoleArn: string;
}
export interface GetEndpointS3Setting {
    addColumnName: boolean;
    bucketFolder: string;
    bucketName: string;
    cannedAclForObjects: string;
    cdcInsertsAndUpdates: boolean;
    cdcInsertsOnly: boolean;
    cdcMaxBatchInterval: number;
    cdcMinFileSize: number;
    cdcPath: string;
    compressionType: string;
    csvDelimiter: string;
    csvNoSupValue: string;
    csvNullValue: string;
    csvRowDelimiter: string;
    dataFormat: string;
    dataPageSize: number;
    datePartitionDelimiter: string;
    datePartitionEnabled: boolean;
    datePartitionSequence: string;
    dictPageSizeLimit: number;
    enableStatistics: boolean;
    encodingType: string;
    encryptionMode: string;
    externalTableDefinition: string;
    glueCatalogGeneration: boolean;
    ignoreHeaderRows: number;
    ignoreHeadersRow: number;
    includeOpForFullLoad: boolean;
    maxFileSize: number;
    parquetTimestampInMillisecond: boolean;
    parquetVersion: string;
    preserveTransactions: boolean;
    rfc4180: boolean;
    rowGroupLength: number;
    serverSideEncryptionKmsKeyId: string;
    serviceAccessRoleArn: string;
    timestampColumnName: string;
    useCsvNoSupValue: boolean;
    useTaskStartTimeForFullLoadTimestamp: boolean;
}
