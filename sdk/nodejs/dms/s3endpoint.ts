// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class S3Endpoint extends pulumi.CustomResource {
    /**
     * Get an existing S3Endpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: S3EndpointState, opts?: pulumi.CustomResourceOptions): S3Endpoint {
        return new S3Endpoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:dms/s3Endpoint:S3Endpoint';

    /**
     * Returns true if the given object is an instance of S3Endpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is S3Endpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === S3Endpoint.__pulumiType;
    }

    public readonly addColumnName!: pulumi.Output<boolean | undefined>;
    public readonly addTrailingPaddingCharacter!: pulumi.Output<boolean | undefined>;
    public readonly bucketFolder!: pulumi.Output<string | undefined>;
    public readonly bucketName!: pulumi.Output<string>;
    public readonly cannedAclForObjects!: pulumi.Output<string | undefined>;
    public readonly cdcInsertsAndUpdates!: pulumi.Output<boolean | undefined>;
    public readonly cdcInsertsOnly!: pulumi.Output<boolean | undefined>;
    public readonly cdcMaxBatchInterval!: pulumi.Output<number | undefined>;
    public readonly cdcMinFileSize!: pulumi.Output<number | undefined>;
    public readonly cdcPath!: pulumi.Output<string | undefined>;
    public readonly certificateArn!: pulumi.Output<string>;
    public readonly compressionType!: pulumi.Output<string | undefined>;
    public readonly csvDelimiter!: pulumi.Output<string | undefined>;
    public readonly csvNoSupValue!: pulumi.Output<string | undefined>;
    public readonly csvNullValue!: pulumi.Output<string | undefined>;
    public readonly csvRowDelimiter!: pulumi.Output<string | undefined>;
    public readonly dataFormat!: pulumi.Output<string | undefined>;
    public readonly dataPageSize!: pulumi.Output<number | undefined>;
    public readonly datePartitionDelimiter!: pulumi.Output<string | undefined>;
    public readonly datePartitionEnabled!: pulumi.Output<boolean | undefined>;
    public readonly datePartitionSequence!: pulumi.Output<string | undefined>;
    public readonly datePartitionTimezone!: pulumi.Output<string | undefined>;
    public readonly dictPageSizeLimit!: pulumi.Output<number | undefined>;
    public readonly enableStatistics!: pulumi.Output<boolean | undefined>;
    public readonly encodingType!: pulumi.Output<string | undefined>;
    public readonly encryptionMode!: pulumi.Output<string | undefined>;
    public /*out*/ readonly endpointArn!: pulumi.Output<string>;
    public readonly endpointId!: pulumi.Output<string>;
    public readonly endpointType!: pulumi.Output<string>;
    public /*out*/ readonly engineDisplayName!: pulumi.Output<string>;
    public readonly expectedBucketOwner!: pulumi.Output<string | undefined>;
    public /*out*/ readonly externalId!: pulumi.Output<string>;
    public readonly externalTableDefinition!: pulumi.Output<string | undefined>;
    public readonly ignoreHeaderRows!: pulumi.Output<number | undefined>;
    public readonly includeOpForFullLoad!: pulumi.Output<boolean | undefined>;
    public readonly kmsKeyArn!: pulumi.Output<string>;
    public readonly maxFileSize!: pulumi.Output<number | undefined>;
    public readonly parquetTimestampInMillisecond!: pulumi.Output<boolean | undefined>;
    public readonly parquetVersion!: pulumi.Output<string | undefined>;
    public readonly preserveTransactions!: pulumi.Output<boolean | undefined>;
    public readonly rfc4180!: pulumi.Output<boolean | undefined>;
    public readonly rowGroupLength!: pulumi.Output<number | undefined>;
    public readonly serverSideEncryptionKmsKeyId!: pulumi.Output<string | undefined>;
    public readonly serviceAccessRoleArn!: pulumi.Output<string>;
    public readonly sslMode!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    public readonly timestampColumnName!: pulumi.Output<string | undefined>;
    public readonly useCsvNoSupValue!: pulumi.Output<boolean | undefined>;
    public readonly useTaskStartTimeForFullLoadTimestamp!: pulumi.Output<boolean | undefined>;

    /**
     * Create a S3Endpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: S3EndpointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: S3EndpointArgs | S3EndpointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as S3EndpointState | undefined;
            resourceInputs["addColumnName"] = state ? state.addColumnName : undefined;
            resourceInputs["addTrailingPaddingCharacter"] = state ? state.addTrailingPaddingCharacter : undefined;
            resourceInputs["bucketFolder"] = state ? state.bucketFolder : undefined;
            resourceInputs["bucketName"] = state ? state.bucketName : undefined;
            resourceInputs["cannedAclForObjects"] = state ? state.cannedAclForObjects : undefined;
            resourceInputs["cdcInsertsAndUpdates"] = state ? state.cdcInsertsAndUpdates : undefined;
            resourceInputs["cdcInsertsOnly"] = state ? state.cdcInsertsOnly : undefined;
            resourceInputs["cdcMaxBatchInterval"] = state ? state.cdcMaxBatchInterval : undefined;
            resourceInputs["cdcMinFileSize"] = state ? state.cdcMinFileSize : undefined;
            resourceInputs["cdcPath"] = state ? state.cdcPath : undefined;
            resourceInputs["certificateArn"] = state ? state.certificateArn : undefined;
            resourceInputs["compressionType"] = state ? state.compressionType : undefined;
            resourceInputs["csvDelimiter"] = state ? state.csvDelimiter : undefined;
            resourceInputs["csvNoSupValue"] = state ? state.csvNoSupValue : undefined;
            resourceInputs["csvNullValue"] = state ? state.csvNullValue : undefined;
            resourceInputs["csvRowDelimiter"] = state ? state.csvRowDelimiter : undefined;
            resourceInputs["dataFormat"] = state ? state.dataFormat : undefined;
            resourceInputs["dataPageSize"] = state ? state.dataPageSize : undefined;
            resourceInputs["datePartitionDelimiter"] = state ? state.datePartitionDelimiter : undefined;
            resourceInputs["datePartitionEnabled"] = state ? state.datePartitionEnabled : undefined;
            resourceInputs["datePartitionSequence"] = state ? state.datePartitionSequence : undefined;
            resourceInputs["datePartitionTimezone"] = state ? state.datePartitionTimezone : undefined;
            resourceInputs["dictPageSizeLimit"] = state ? state.dictPageSizeLimit : undefined;
            resourceInputs["enableStatistics"] = state ? state.enableStatistics : undefined;
            resourceInputs["encodingType"] = state ? state.encodingType : undefined;
            resourceInputs["encryptionMode"] = state ? state.encryptionMode : undefined;
            resourceInputs["endpointArn"] = state ? state.endpointArn : undefined;
            resourceInputs["endpointId"] = state ? state.endpointId : undefined;
            resourceInputs["endpointType"] = state ? state.endpointType : undefined;
            resourceInputs["engineDisplayName"] = state ? state.engineDisplayName : undefined;
            resourceInputs["expectedBucketOwner"] = state ? state.expectedBucketOwner : undefined;
            resourceInputs["externalId"] = state ? state.externalId : undefined;
            resourceInputs["externalTableDefinition"] = state ? state.externalTableDefinition : undefined;
            resourceInputs["ignoreHeaderRows"] = state ? state.ignoreHeaderRows : undefined;
            resourceInputs["includeOpForFullLoad"] = state ? state.includeOpForFullLoad : undefined;
            resourceInputs["kmsKeyArn"] = state ? state.kmsKeyArn : undefined;
            resourceInputs["maxFileSize"] = state ? state.maxFileSize : undefined;
            resourceInputs["parquetTimestampInMillisecond"] = state ? state.parquetTimestampInMillisecond : undefined;
            resourceInputs["parquetVersion"] = state ? state.parquetVersion : undefined;
            resourceInputs["preserveTransactions"] = state ? state.preserveTransactions : undefined;
            resourceInputs["rfc4180"] = state ? state.rfc4180 : undefined;
            resourceInputs["rowGroupLength"] = state ? state.rowGroupLength : undefined;
            resourceInputs["serverSideEncryptionKmsKeyId"] = state ? state.serverSideEncryptionKmsKeyId : undefined;
            resourceInputs["serviceAccessRoleArn"] = state ? state.serviceAccessRoleArn : undefined;
            resourceInputs["sslMode"] = state ? state.sslMode : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["timestampColumnName"] = state ? state.timestampColumnName : undefined;
            resourceInputs["useCsvNoSupValue"] = state ? state.useCsvNoSupValue : undefined;
            resourceInputs["useTaskStartTimeForFullLoadTimestamp"] = state ? state.useTaskStartTimeForFullLoadTimestamp : undefined;
        } else {
            const args = argsOrState as S3EndpointArgs | undefined;
            if ((!args || args.bucketName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bucketName'");
            }
            if ((!args || args.endpointId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endpointId'");
            }
            if ((!args || args.endpointType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endpointType'");
            }
            if ((!args || args.serviceAccessRoleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceAccessRoleArn'");
            }
            resourceInputs["addColumnName"] = args ? args.addColumnName : undefined;
            resourceInputs["addTrailingPaddingCharacter"] = args ? args.addTrailingPaddingCharacter : undefined;
            resourceInputs["bucketFolder"] = args ? args.bucketFolder : undefined;
            resourceInputs["bucketName"] = args ? args.bucketName : undefined;
            resourceInputs["cannedAclForObjects"] = args ? args.cannedAclForObjects : undefined;
            resourceInputs["cdcInsertsAndUpdates"] = args ? args.cdcInsertsAndUpdates : undefined;
            resourceInputs["cdcInsertsOnly"] = args ? args.cdcInsertsOnly : undefined;
            resourceInputs["cdcMaxBatchInterval"] = args ? args.cdcMaxBatchInterval : undefined;
            resourceInputs["cdcMinFileSize"] = args ? args.cdcMinFileSize : undefined;
            resourceInputs["cdcPath"] = args ? args.cdcPath : undefined;
            resourceInputs["certificateArn"] = args ? args.certificateArn : undefined;
            resourceInputs["compressionType"] = args ? args.compressionType : undefined;
            resourceInputs["csvDelimiter"] = args ? args.csvDelimiter : undefined;
            resourceInputs["csvNoSupValue"] = args ? args.csvNoSupValue : undefined;
            resourceInputs["csvNullValue"] = args ? args.csvNullValue : undefined;
            resourceInputs["csvRowDelimiter"] = args ? args.csvRowDelimiter : undefined;
            resourceInputs["dataFormat"] = args ? args.dataFormat : undefined;
            resourceInputs["dataPageSize"] = args ? args.dataPageSize : undefined;
            resourceInputs["datePartitionDelimiter"] = args ? args.datePartitionDelimiter : undefined;
            resourceInputs["datePartitionEnabled"] = args ? args.datePartitionEnabled : undefined;
            resourceInputs["datePartitionSequence"] = args ? args.datePartitionSequence : undefined;
            resourceInputs["datePartitionTimezone"] = args ? args.datePartitionTimezone : undefined;
            resourceInputs["dictPageSizeLimit"] = args ? args.dictPageSizeLimit : undefined;
            resourceInputs["enableStatistics"] = args ? args.enableStatistics : undefined;
            resourceInputs["encodingType"] = args ? args.encodingType : undefined;
            resourceInputs["encryptionMode"] = args ? args.encryptionMode : undefined;
            resourceInputs["endpointId"] = args ? args.endpointId : undefined;
            resourceInputs["endpointType"] = args ? args.endpointType : undefined;
            resourceInputs["expectedBucketOwner"] = args ? args.expectedBucketOwner : undefined;
            resourceInputs["externalTableDefinition"] = args ? args.externalTableDefinition : undefined;
            resourceInputs["ignoreHeaderRows"] = args ? args.ignoreHeaderRows : undefined;
            resourceInputs["includeOpForFullLoad"] = args ? args.includeOpForFullLoad : undefined;
            resourceInputs["kmsKeyArn"] = args ? args.kmsKeyArn : undefined;
            resourceInputs["maxFileSize"] = args ? args.maxFileSize : undefined;
            resourceInputs["parquetTimestampInMillisecond"] = args ? args.parquetTimestampInMillisecond : undefined;
            resourceInputs["parquetVersion"] = args ? args.parquetVersion : undefined;
            resourceInputs["preserveTransactions"] = args ? args.preserveTransactions : undefined;
            resourceInputs["rfc4180"] = args ? args.rfc4180 : undefined;
            resourceInputs["rowGroupLength"] = args ? args.rowGroupLength : undefined;
            resourceInputs["serverSideEncryptionKmsKeyId"] = args ? args.serverSideEncryptionKmsKeyId : undefined;
            resourceInputs["serviceAccessRoleArn"] = args ? args.serviceAccessRoleArn : undefined;
            resourceInputs["sslMode"] = args ? args.sslMode : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timestampColumnName"] = args ? args.timestampColumnName : undefined;
            resourceInputs["useCsvNoSupValue"] = args ? args.useCsvNoSupValue : undefined;
            resourceInputs["useTaskStartTimeForFullLoadTimestamp"] = args ? args.useTaskStartTimeForFullLoadTimestamp : undefined;
            resourceInputs["endpointArn"] = undefined /*out*/;
            resourceInputs["engineDisplayName"] = undefined /*out*/;
            resourceInputs["externalId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(S3Endpoint.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering S3Endpoint resources.
 */
export interface S3EndpointState {
    addColumnName?: pulumi.Input<boolean>;
    addTrailingPaddingCharacter?: pulumi.Input<boolean>;
    bucketFolder?: pulumi.Input<string>;
    bucketName?: pulumi.Input<string>;
    cannedAclForObjects?: pulumi.Input<string>;
    cdcInsertsAndUpdates?: pulumi.Input<boolean>;
    cdcInsertsOnly?: pulumi.Input<boolean>;
    cdcMaxBatchInterval?: pulumi.Input<number>;
    cdcMinFileSize?: pulumi.Input<number>;
    cdcPath?: pulumi.Input<string>;
    certificateArn?: pulumi.Input<string>;
    compressionType?: pulumi.Input<string>;
    csvDelimiter?: pulumi.Input<string>;
    csvNoSupValue?: pulumi.Input<string>;
    csvNullValue?: pulumi.Input<string>;
    csvRowDelimiter?: pulumi.Input<string>;
    dataFormat?: pulumi.Input<string>;
    dataPageSize?: pulumi.Input<number>;
    datePartitionDelimiter?: pulumi.Input<string>;
    datePartitionEnabled?: pulumi.Input<boolean>;
    datePartitionSequence?: pulumi.Input<string>;
    datePartitionTimezone?: pulumi.Input<string>;
    dictPageSizeLimit?: pulumi.Input<number>;
    enableStatistics?: pulumi.Input<boolean>;
    encodingType?: pulumi.Input<string>;
    encryptionMode?: pulumi.Input<string>;
    endpointArn?: pulumi.Input<string>;
    endpointId?: pulumi.Input<string>;
    endpointType?: pulumi.Input<string>;
    engineDisplayName?: pulumi.Input<string>;
    expectedBucketOwner?: pulumi.Input<string>;
    externalId?: pulumi.Input<string>;
    externalTableDefinition?: pulumi.Input<string>;
    ignoreHeaderRows?: pulumi.Input<number>;
    includeOpForFullLoad?: pulumi.Input<boolean>;
    kmsKeyArn?: pulumi.Input<string>;
    maxFileSize?: pulumi.Input<number>;
    parquetTimestampInMillisecond?: pulumi.Input<boolean>;
    parquetVersion?: pulumi.Input<string>;
    preserveTransactions?: pulumi.Input<boolean>;
    rfc4180?: pulumi.Input<boolean>;
    rowGroupLength?: pulumi.Input<number>;
    serverSideEncryptionKmsKeyId?: pulumi.Input<string>;
    serviceAccessRoleArn?: pulumi.Input<string>;
    sslMode?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timestampColumnName?: pulumi.Input<string>;
    useCsvNoSupValue?: pulumi.Input<boolean>;
    useTaskStartTimeForFullLoadTimestamp?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a S3Endpoint resource.
 */
export interface S3EndpointArgs {
    addColumnName?: pulumi.Input<boolean>;
    addTrailingPaddingCharacter?: pulumi.Input<boolean>;
    bucketFolder?: pulumi.Input<string>;
    bucketName: pulumi.Input<string>;
    cannedAclForObjects?: pulumi.Input<string>;
    cdcInsertsAndUpdates?: pulumi.Input<boolean>;
    cdcInsertsOnly?: pulumi.Input<boolean>;
    cdcMaxBatchInterval?: pulumi.Input<number>;
    cdcMinFileSize?: pulumi.Input<number>;
    cdcPath?: pulumi.Input<string>;
    certificateArn?: pulumi.Input<string>;
    compressionType?: pulumi.Input<string>;
    csvDelimiter?: pulumi.Input<string>;
    csvNoSupValue?: pulumi.Input<string>;
    csvNullValue?: pulumi.Input<string>;
    csvRowDelimiter?: pulumi.Input<string>;
    dataFormat?: pulumi.Input<string>;
    dataPageSize?: pulumi.Input<number>;
    datePartitionDelimiter?: pulumi.Input<string>;
    datePartitionEnabled?: pulumi.Input<boolean>;
    datePartitionSequence?: pulumi.Input<string>;
    datePartitionTimezone?: pulumi.Input<string>;
    dictPageSizeLimit?: pulumi.Input<number>;
    enableStatistics?: pulumi.Input<boolean>;
    encodingType?: pulumi.Input<string>;
    encryptionMode?: pulumi.Input<string>;
    endpointId: pulumi.Input<string>;
    endpointType: pulumi.Input<string>;
    expectedBucketOwner?: pulumi.Input<string>;
    externalTableDefinition?: pulumi.Input<string>;
    ignoreHeaderRows?: pulumi.Input<number>;
    includeOpForFullLoad?: pulumi.Input<boolean>;
    kmsKeyArn?: pulumi.Input<string>;
    maxFileSize?: pulumi.Input<number>;
    parquetTimestampInMillisecond?: pulumi.Input<boolean>;
    parquetVersion?: pulumi.Input<string>;
    preserveTransactions?: pulumi.Input<boolean>;
    rfc4180?: pulumi.Input<boolean>;
    rowGroupLength?: pulumi.Input<number>;
    serverSideEncryptionKmsKeyId?: pulumi.Input<string>;
    serviceAccessRoleArn: pulumi.Input<string>;
    sslMode?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timestampColumnName?: pulumi.Input<string>;
    useCsvNoSupValue?: pulumi.Input<boolean>;
    useTaskStartTimeForFullLoadTimestamp?: pulumi.Input<boolean>;
}
