// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Data source for managing an AWS DMS (Database Migration) Replication Instance.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = aws.dms.getReplicationInstance({
 *     replicationInstanceId: aws_dms_replication_instance.test.replication_instance_id,
 * });
 * ```
 */
export function getReplicationInstance(args: GetReplicationInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetReplicationInstanceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:dms/getReplicationInstance:getReplicationInstance", {
        "replicationInstanceId": args.replicationInstanceId,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getReplicationInstance.
 */
export interface GetReplicationInstanceArgs {
    /**
     * The replication instance identifier.
     */
    replicationInstanceId: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getReplicationInstance.
 */
export interface GetReplicationInstanceResult {
    /**
     * The amount of storage (in gigabytes) to be initially allocated for the replication instance.
     */
    readonly allocatedStorage: number;
    /**
     * Indicates that minor engine upgrades will be applied automatically to the replication instance during the maintenance window.
     */
    readonly autoMinorVersionUpgrade: boolean;
    /**
     * The EC2 Availability Zone that the replication instance will be created in.
     */
    readonly availabilityZone: string;
    /**
     * The engine version number of the replication instance.
     */
    readonly engineVersion: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The Amazon Resource Name (ARN) for the KMS key used to encrypt the connection parameters.
     */
    readonly kmsKeyArn: string;
    /**
     * Specifies if the replication instance is a multi-az deployment.
     */
    readonly multiAz: boolean;
    /**
     * The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
     */
    readonly preferredMaintenanceWindow: string;
    /**
     * Specifies the accessibility options for the replication instance. A value of true represents an instance with a public IP address. A value of false represents an instance with a private IP address.
     */
    readonly publiclyAccessible: boolean;
    /**
     * The Amazon Resource Name (ARN) of the replication instance.
     */
    readonly replicationInstanceArn: string;
    /**
     * The compute and memory capacity of the replication instance as specified by the replication instance class. See [AWS DMS User Guide](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.Types.html) for information on instance classes.
     */
    readonly replicationInstanceClass: string;
    readonly replicationInstanceId: string;
    /**
     * A list of the private IP addresses of the replication instance.
     */
    readonly replicationInstancePrivateIps: string[];
    /**
     * A list of the public IP addresses of the replication instance.
     */
    readonly replicationInstancePublicIps: string[];
    /**
     * A subnet group to associate with the replication instance.
     */
    readonly replicationSubnetGroupId: string;
    readonly tags: {[key: string]: string};
    /**
     * A set of VPC security group IDs that are used with the replication instance.
     */
    readonly vpcSecurityGroupIds: string[];
}
/**
 * Data source for managing an AWS DMS (Database Migration) Replication Instance.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = aws.dms.getReplicationInstance({
 *     replicationInstanceId: aws_dms_replication_instance.test.replication_instance_id,
 * });
 * ```
 */
export function getReplicationInstanceOutput(args: GetReplicationInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetReplicationInstanceResult> {
    return pulumi.output(args).apply((a: any) => getReplicationInstance(a, opts))
}

/**
 * A collection of arguments for invoking getReplicationInstance.
 */
export interface GetReplicationInstanceOutputArgs {
    /**
     * The replication instance identifier.
     */
    replicationInstanceId: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
