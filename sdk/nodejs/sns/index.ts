// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./getTopic";
export * from "./platformApplication";
export * from "./smsPreferences";
export * from "./snsMixins";
export * from "./topic";
export * from "./topicPolicy";
export * from "./topicSubscription";

// Import resources to register:
import { PlatformApplication } from "./platformApplication";
import { SmsPreferences } from "./smsPreferences";
import { Topic } from "./topic";
import { TopicPolicy } from "./topicPolicy";
import { TopicSubscription } from "./topicSubscription";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws:sns/platformApplication:PlatformApplication":
                return new PlatformApplication(name, <any>undefined, { urn })
            case "aws:sns/smsPreferences:SmsPreferences":
                return new SmsPreferences(name, <any>undefined, { urn })
            case "aws:sns/topic:Topic":
                return new Topic(name, <any>undefined, { urn })
            case "aws:sns/topicPolicy:TopicPolicy":
                return new TopicPolicy(name, <any>undefined, { urn })
            case "aws:sns/topicSubscription:TopicSubscription":
                return new TopicSubscription(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "sns/platformApplication", _module)
pulumi.runtime.registerResourceModule("aws", "sns/smsPreferences", _module)
pulumi.runtime.registerResourceModule("aws", "sns/topic", _module)
pulumi.runtime.registerResourceModule("aws", "sns/topicPolicy", _module)
pulumi.runtime.registerResourceModule("aws", "sns/topicSubscription", _module)
