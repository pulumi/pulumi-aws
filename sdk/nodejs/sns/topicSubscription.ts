// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

import {Topic} from "./index";

export class TopicSubscription extends pulumi.CustomResource {
    /**
     * Get an existing TopicSubscription resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TopicSubscriptionState, opts?: pulumi.CustomResourceOptions): TopicSubscription {
        return new TopicSubscription(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:sns/topicSubscription:TopicSubscription';

    /**
     * Returns true if the given object is an instance of TopicSubscription.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TopicSubscription {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TopicSubscription.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly confirmationTimeoutInMinutes!: pulumi.Output<number | undefined>;
    public /*out*/ readonly confirmationWasAuthenticated!: pulumi.Output<boolean>;
    public readonly deliveryPolicy!: pulumi.Output<string | undefined>;
    public readonly endpoint!: pulumi.Output<string>;
    public readonly endpointAutoConfirms!: pulumi.Output<boolean | undefined>;
    public readonly filterPolicy!: pulumi.Output<string | undefined>;
    public readonly filterPolicyScope!: pulumi.Output<string>;
    public /*out*/ readonly ownerId!: pulumi.Output<string>;
    public /*out*/ readonly pendingConfirmation!: pulumi.Output<boolean>;
    public readonly protocol!: pulumi.Output<string>;
    public readonly rawMessageDelivery!: pulumi.Output<boolean | undefined>;
    public readonly redrivePolicy!: pulumi.Output<string | undefined>;
    public readonly subscriptionRoleArn!: pulumi.Output<string | undefined>;
    public readonly topic!: pulumi.Output<string>;

    /**
     * Create a TopicSubscription resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TopicSubscriptionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TopicSubscriptionArgs | TopicSubscriptionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TopicSubscriptionState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["confirmationTimeoutInMinutes"] = state ? state.confirmationTimeoutInMinutes : undefined;
            resourceInputs["confirmationWasAuthenticated"] = state ? state.confirmationWasAuthenticated : undefined;
            resourceInputs["deliveryPolicy"] = state ? state.deliveryPolicy : undefined;
            resourceInputs["endpoint"] = state ? state.endpoint : undefined;
            resourceInputs["endpointAutoConfirms"] = state ? state.endpointAutoConfirms : undefined;
            resourceInputs["filterPolicy"] = state ? state.filterPolicy : undefined;
            resourceInputs["filterPolicyScope"] = state ? state.filterPolicyScope : undefined;
            resourceInputs["ownerId"] = state ? state.ownerId : undefined;
            resourceInputs["pendingConfirmation"] = state ? state.pendingConfirmation : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["rawMessageDelivery"] = state ? state.rawMessageDelivery : undefined;
            resourceInputs["redrivePolicy"] = state ? state.redrivePolicy : undefined;
            resourceInputs["subscriptionRoleArn"] = state ? state.subscriptionRoleArn : undefined;
            resourceInputs["topic"] = state ? state.topic : undefined;
        } else {
            const args = argsOrState as TopicSubscriptionArgs | undefined;
            if ((!args || args.endpoint === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endpoint'");
            }
            if ((!args || args.protocol === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            if ((!args || args.topic === undefined) && !opts.urn) {
                throw new Error("Missing required property 'topic'");
            }
            resourceInputs["confirmationTimeoutInMinutes"] = args ? args.confirmationTimeoutInMinutes : undefined;
            resourceInputs["deliveryPolicy"] = args ? args.deliveryPolicy : undefined;
            resourceInputs["endpoint"] = args ? args.endpoint : undefined;
            resourceInputs["endpointAutoConfirms"] = args ? args.endpointAutoConfirms : undefined;
            resourceInputs["filterPolicy"] = args ? args.filterPolicy : undefined;
            resourceInputs["filterPolicyScope"] = args ? args.filterPolicyScope : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["rawMessageDelivery"] = args ? args.rawMessageDelivery : undefined;
            resourceInputs["redrivePolicy"] = args ? args.redrivePolicy : undefined;
            resourceInputs["subscriptionRoleArn"] = args ? args.subscriptionRoleArn : undefined;
            resourceInputs["topic"] = args ? args.topic : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["confirmationWasAuthenticated"] = undefined /*out*/;
            resourceInputs["ownerId"] = undefined /*out*/;
            resourceInputs["pendingConfirmation"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TopicSubscription.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TopicSubscription resources.
 */
export interface TopicSubscriptionState {
    arn?: pulumi.Input<string>;
    confirmationTimeoutInMinutes?: pulumi.Input<number>;
    confirmationWasAuthenticated?: pulumi.Input<boolean>;
    deliveryPolicy?: pulumi.Input<string>;
    endpoint?: pulumi.Input<string>;
    endpointAutoConfirms?: pulumi.Input<boolean>;
    filterPolicy?: pulumi.Input<string>;
    filterPolicyScope?: pulumi.Input<string>;
    ownerId?: pulumi.Input<string>;
    pendingConfirmation?: pulumi.Input<boolean>;
    protocol?: pulumi.Input<string>;
    rawMessageDelivery?: pulumi.Input<boolean>;
    redrivePolicy?: pulumi.Input<string>;
    subscriptionRoleArn?: pulumi.Input<string>;
    topic?: pulumi.Input<string | Topic>;
}

/**
 * The set of arguments for constructing a TopicSubscription resource.
 */
export interface TopicSubscriptionArgs {
    confirmationTimeoutInMinutes?: pulumi.Input<number>;
    deliveryPolicy?: pulumi.Input<string>;
    endpoint: pulumi.Input<string>;
    endpointAutoConfirms?: pulumi.Input<boolean>;
    filterPolicy?: pulumi.Input<string>;
    filterPolicyScope?: pulumi.Input<string>;
    protocol: pulumi.Input<string>;
    rawMessageDelivery?: pulumi.Input<boolean>;
    redrivePolicy?: pulumi.Input<string>;
    subscriptionRoleArn?: pulumi.Input<string>;
    topic: pulumi.Input<string | Topic>;
}
