// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Data source for cloud vm cluster in AWS for Oracle Database@AWS.
 *
 * You can find out more about Oracle Database@AWS from [User Guide](https://docs.aws.amazon.com/odb/latest/UserGuide/what-is-odb.html).
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.odb.getCloudVmCluster({
 *     id: "example-id",
 * });
 * ```
 */
export function getCloudVmCluster(args: GetCloudVmClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudVmClusterResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:odb/getCloudVmCluster:getCloudVmCluster", {
        "id": args.id,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getCloudVmCluster.
 */
export interface GetCloudVmClusterArgs {
    /**
     * The unique identifier of the cloud vm cluster.
     *
     * The following arguments are optional:
     */
    id: string;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: string;
}

/**
 * A collection of values returned by getCloudVmCluster.
 */
export interface GetCloudVmClusterResult {
    /**
     * The Amazon Resource Name (ARN) for the cloud vm cluster.
     */
    readonly arn: string;
    /**
     * The ID of the Cloud Exadata Infrastructure.
     */
    readonly cloudExadataInfrastructureId: string;
    /**
     * The name of the Grid Infrastructure (GI) cluster.
     */
    readonly clusterName: string;
    /**
     * The OCI model compute model used when you create or clone an instance: ECPU or OCPU. An ECPU is an abstracted measure of compute resources. ECPUs are based on the number of cores elastically allocated from a pool of compute and storage servers. An OCPU is a legacy physical measure of compute resources. OCPUs are based on the physical core of a processor with hyper-threading enabled.
     */
    readonly computeModel: string;
    /**
     * The number of CPU cores enabled on the VM cluster.
     */
    readonly cpuCoreCount: number;
    /**
     * The time when the VM cluster was created.
     */
    readonly createdAt: string;
    /**
     * The set of diagnostic collection options enabled for the VM cluster.
     */
    readonly dataCollectionOptions: outputs.odb.GetCloudVmClusterDataCollectionOption[];
    /**
     * The size of the data disk group, in terabytes (TB), that's allocated for the VM cluster.
     */
    readonly dataStorageSizeInTbs: number;
    /**
     * The amount of local node storage, in gigabytes (GB), that's allocated for the VM cluster.
     */
    readonly dbNodeStorageSizeInGbs: number;
    /**
     * The list of database servers for the VM cluster.
     */
    readonly dbServers: string[];
    /**
     * The type of redundancy configured for the VM cluster. NORMAL is 2-way redundancy. HIGH is 3-way redundancy.
     */
    readonly diskRedundancy: string;
    /**
     * The display name of the VM cluster.
     */
    readonly displayName: string;
    /**
     * The domain name of the VM cluster.
     */
    readonly domain: string;
    /**
     * The software version of the Oracle Grid Infrastructure (GI) for the VM cluster.
     */
    readonly giVersion: string;
    /**
     * The computed hostname prefix for the VM cluster.
     */
    readonly hostnamePrefixComputed: string;
    readonly id: string;
    /**
     * The ExadataIormConfig cache details for the VM cluster.
     */
    readonly iormConfigCaches: outputs.odb.GetCloudVmClusterIormConfigCach[];
    /**
     * Indicates whether database backups to local Exadata storage is enabled for the VM cluster.
     */
    readonly isLocalBackupEnabled: boolean;
    /**
     * Indicates whether the VM cluster is configured with a sparse disk group.
     */
    readonly isSparseDiskGroupEnabled: boolean;
    /**
     * The Oracle Cloud ID (OCID) of the last maintenance update history entry.
     */
    readonly lastUpdateHistoryEntryId: string;
    /**
     * The Oracle license model applied to the VM cluster.
     */
    readonly licenseModel: string;
    /**
     * The port number configured for the listener on the VM cluster.
     */
    readonly listenerPort: number;
    /**
     * The amount of memory, in gigabytes (GB), that's allocated for the VM cluster.
     */
    readonly memorySizeInGbs: number;
    /**
     * The number of nodes in the VM cluster.
     */
    readonly nodeCount: number;
    /**
     * The name of the OCI Resource Anchor.
     */
    readonly ociResourceAnchorName: string;
    /**
     * The HTTPS link to the VM cluster in OCI.
     */
    readonly ociUrl: string;
    /**
     * The OCID of the VM cluster.
     */
    readonly ocid: string;
    /**
     * The ID of the ODB network.
     */
    readonly odbNetworkId: string;
    /**
     * The amount of progress made on the current operation on the VM cluster, expressed as a percentage.
     */
    readonly percentProgress: number;
    readonly region: string;
    /**
     * The FQDN of the DNS record for the Single Client Access Name (SCAN) IP addresses that are associated with the VM cluster.
     */
    readonly scanDnsName: string;
    /**
     * The OCID of the DNS record for the SCAN IP addresses that are associated with the VM cluster.
     */
    readonly scanDnsRecordId: string;
    /**
     * The OCID of the SCAN IP addresses that are associated with the VM cluster.
     */
    readonly scanIpIds: string[];
    /**
     * The hardware model name of the Exadata infrastructure that's running the VM cluster.
     */
    readonly shape: string;
    /**
     * The public key portion of one or more key pairs used for SSH access to the VM cluster.
     */
    readonly sshPublicKeys: string[];
    /**
     * The status of the VM cluster.
     */
    readonly status: string;
    /**
     * Additional information about the status of the VM cluster.
     */
    readonly statusReason: string;
    /**
     * The amount of local node storage, in gigabytes (GB), that's allocated to the VM cluster.
     */
    readonly storageSizeInGbs: number;
    /**
     * The operating system version of the image chosen for the VM cluster.
     */
    readonly systemVersion: string;
    readonly tags: {[key: string]: string};
    /**
     * The time zone of the VM cluster.
     */
    readonly timezone: string;
    /**
     * The virtual IP (VIP) addresses that are associated with the VM cluster. Oracle's Cluster Ready Services (CRS) creates and maintains one VIP address for each node in the VM cluster to enable failover. If one node fails, the VIP is reassigned to another active node in the cluster.
     */
    readonly vipIds: string[];
}
/**
 * Data source for cloud vm cluster in AWS for Oracle Database@AWS.
 *
 * You can find out more about Oracle Database@AWS from [User Guide](https://docs.aws.amazon.com/odb/latest/UserGuide/what-is-odb.html).
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.odb.getCloudVmCluster({
 *     id: "example-id",
 * });
 * ```
 */
export function getCloudVmClusterOutput(args: GetCloudVmClusterOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCloudVmClusterResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws:odb/getCloudVmCluster:getCloudVmCluster", {
        "id": args.id,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getCloudVmCluster.
 */
export interface GetCloudVmClusterOutputArgs {
    /**
     * The unique identifier of the cloud vm cluster.
     *
     * The following arguments are optional:
     */
    id: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
}
