// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { CloudAutonomousVmClusterArgs, CloudAutonomousVmClusterState } from "./cloudAutonomousVmCluster";
export type CloudAutonomousVmCluster = import("./cloudAutonomousVmCluster").CloudAutonomousVmCluster;
export const CloudAutonomousVmCluster: typeof import("./cloudAutonomousVmCluster").CloudAutonomousVmCluster = null as any;
utilities.lazyLoad(exports, ["CloudAutonomousVmCluster"], () => require("./cloudAutonomousVmCluster"));

export { CloudExadataInfrastructureArgs, CloudExadataInfrastructureState } from "./cloudExadataInfrastructure";
export type CloudExadataInfrastructure = import("./cloudExadataInfrastructure").CloudExadataInfrastructure;
export const CloudExadataInfrastructure: typeof import("./cloudExadataInfrastructure").CloudExadataInfrastructure = null as any;
utilities.lazyLoad(exports, ["CloudExadataInfrastructure"], () => require("./cloudExadataInfrastructure"));

export { CloudVmClusterArgs, CloudVmClusterState } from "./cloudVmCluster";
export type CloudVmCluster = import("./cloudVmCluster").CloudVmCluster;
export const CloudVmCluster: typeof import("./cloudVmCluster").CloudVmCluster = null as any;
utilities.lazyLoad(exports, ["CloudVmCluster"], () => require("./cloudVmCluster"));

export { GetCloudAutonomousVmClusterArgs, GetCloudAutonomousVmClusterResult, GetCloudAutonomousVmClusterOutputArgs } from "./getCloudAutonomousVmCluster";
export const getCloudAutonomousVmCluster: typeof import("./getCloudAutonomousVmCluster").getCloudAutonomousVmCluster = null as any;
export const getCloudAutonomousVmClusterOutput: typeof import("./getCloudAutonomousVmCluster").getCloudAutonomousVmClusterOutput = null as any;
utilities.lazyLoad(exports, ["getCloudAutonomousVmCluster","getCloudAutonomousVmClusterOutput"], () => require("./getCloudAutonomousVmCluster"));

export { GetCloudAutonomousVmClustersArgs, GetCloudAutonomousVmClustersResult, GetCloudAutonomousVmClustersOutputArgs } from "./getCloudAutonomousVmClusters";
export const getCloudAutonomousVmClusters: typeof import("./getCloudAutonomousVmClusters").getCloudAutonomousVmClusters = null as any;
export const getCloudAutonomousVmClustersOutput: typeof import("./getCloudAutonomousVmClusters").getCloudAutonomousVmClustersOutput = null as any;
utilities.lazyLoad(exports, ["getCloudAutonomousVmClusters","getCloudAutonomousVmClustersOutput"], () => require("./getCloudAutonomousVmClusters"));

export { GetCloudExadataInfrastructureArgs, GetCloudExadataInfrastructureResult, GetCloudExadataInfrastructureOutputArgs } from "./getCloudExadataInfrastructure";
export const getCloudExadataInfrastructure: typeof import("./getCloudExadataInfrastructure").getCloudExadataInfrastructure = null as any;
export const getCloudExadataInfrastructureOutput: typeof import("./getCloudExadataInfrastructure").getCloudExadataInfrastructureOutput = null as any;
utilities.lazyLoad(exports, ["getCloudExadataInfrastructure","getCloudExadataInfrastructureOutput"], () => require("./getCloudExadataInfrastructure"));

export { GetCloudExadataInfrastructuresArgs, GetCloudExadataInfrastructuresResult, GetCloudExadataInfrastructuresOutputArgs } from "./getCloudExadataInfrastructures";
export const getCloudExadataInfrastructures: typeof import("./getCloudExadataInfrastructures").getCloudExadataInfrastructures = null as any;
export const getCloudExadataInfrastructuresOutput: typeof import("./getCloudExadataInfrastructures").getCloudExadataInfrastructuresOutput = null as any;
utilities.lazyLoad(exports, ["getCloudExadataInfrastructures","getCloudExadataInfrastructuresOutput"], () => require("./getCloudExadataInfrastructures"));

export { GetCloudVmClusterArgs, GetCloudVmClusterResult, GetCloudVmClusterOutputArgs } from "./getCloudVmCluster";
export const getCloudVmCluster: typeof import("./getCloudVmCluster").getCloudVmCluster = null as any;
export const getCloudVmClusterOutput: typeof import("./getCloudVmCluster").getCloudVmClusterOutput = null as any;
utilities.lazyLoad(exports, ["getCloudVmCluster","getCloudVmClusterOutput"], () => require("./getCloudVmCluster"));

export { GetCloudVmClustersArgs, GetCloudVmClustersResult, GetCloudVmClustersOutputArgs } from "./getCloudVmClusters";
export const getCloudVmClusters: typeof import("./getCloudVmClusters").getCloudVmClusters = null as any;
export const getCloudVmClustersOutput: typeof import("./getCloudVmClusters").getCloudVmClustersOutput = null as any;
utilities.lazyLoad(exports, ["getCloudVmClusters","getCloudVmClustersOutput"], () => require("./getCloudVmClusters"));

export { GetDbNodeArgs, GetDbNodeResult, GetDbNodeOutputArgs } from "./getDbNode";
export const getDbNode: typeof import("./getDbNode").getDbNode = null as any;
export const getDbNodeOutput: typeof import("./getDbNode").getDbNodeOutput = null as any;
utilities.lazyLoad(exports, ["getDbNode","getDbNodeOutput"], () => require("./getDbNode"));

export { GetDbNodesArgs, GetDbNodesResult, GetDbNodesOutputArgs } from "./getDbNodes";
export const getDbNodes: typeof import("./getDbNodes").getDbNodes = null as any;
export const getDbNodesOutput: typeof import("./getDbNodes").getDbNodesOutput = null as any;
utilities.lazyLoad(exports, ["getDbNodes","getDbNodesOutput"], () => require("./getDbNodes"));

export { GetDbServerArgs, GetDbServerResult, GetDbServerOutputArgs } from "./getDbServer";
export const getDbServer: typeof import("./getDbServer").getDbServer = null as any;
export const getDbServerOutput: typeof import("./getDbServer").getDbServerOutput = null as any;
utilities.lazyLoad(exports, ["getDbServer","getDbServerOutput"], () => require("./getDbServer"));

export { GetDbServersArgs, GetDbServersResult, GetDbServersOutputArgs } from "./getDbServers";
export const getDbServers: typeof import("./getDbServers").getDbServers = null as any;
export const getDbServersOutput: typeof import("./getDbServers").getDbServersOutput = null as any;
utilities.lazyLoad(exports, ["getDbServers","getDbServersOutput"], () => require("./getDbServers"));

export { GetDbSystemShapesArgs, GetDbSystemShapesResult, GetDbSystemShapesOutputArgs } from "./getDbSystemShapes";
export const getDbSystemShapes: typeof import("./getDbSystemShapes").getDbSystemShapes = null as any;
export const getDbSystemShapesOutput: typeof import("./getDbSystemShapes").getDbSystemShapesOutput = null as any;
utilities.lazyLoad(exports, ["getDbSystemShapes","getDbSystemShapesOutput"], () => require("./getDbSystemShapes"));

export { GetGiVersionsArgs, GetGiVersionsResult, GetGiVersionsOutputArgs } from "./getGiVersions";
export const getGiVersions: typeof import("./getGiVersions").getGiVersions = null as any;
export const getGiVersionsOutput: typeof import("./getGiVersions").getGiVersionsOutput = null as any;
utilities.lazyLoad(exports, ["getGiVersions","getGiVersionsOutput"], () => require("./getGiVersions"));

export { GetNetworkArgs, GetNetworkResult, GetNetworkOutputArgs } from "./getNetwork";
export const getNetwork: typeof import("./getNetwork").getNetwork = null as any;
export const getNetworkOutput: typeof import("./getNetwork").getNetworkOutput = null as any;
utilities.lazyLoad(exports, ["getNetwork","getNetworkOutput"], () => require("./getNetwork"));

export { GetNetworkPeeringConnectionArgs, GetNetworkPeeringConnectionResult, GetNetworkPeeringConnectionOutputArgs } from "./getNetworkPeeringConnection";
export const getNetworkPeeringConnection: typeof import("./getNetworkPeeringConnection").getNetworkPeeringConnection = null as any;
export const getNetworkPeeringConnectionOutput: typeof import("./getNetworkPeeringConnection").getNetworkPeeringConnectionOutput = null as any;
utilities.lazyLoad(exports, ["getNetworkPeeringConnection","getNetworkPeeringConnectionOutput"], () => require("./getNetworkPeeringConnection"));

export { GetNetworkPeeringConnectionsArgs, GetNetworkPeeringConnectionsResult, GetNetworkPeeringConnectionsOutputArgs } from "./getNetworkPeeringConnections";
export const getNetworkPeeringConnections: typeof import("./getNetworkPeeringConnections").getNetworkPeeringConnections = null as any;
export const getNetworkPeeringConnectionsOutput: typeof import("./getNetworkPeeringConnections").getNetworkPeeringConnectionsOutput = null as any;
utilities.lazyLoad(exports, ["getNetworkPeeringConnections","getNetworkPeeringConnectionsOutput"], () => require("./getNetworkPeeringConnections"));

export { GetNetworksArgs, GetNetworksResult, GetNetworksOutputArgs } from "./getNetworks";
export const getNetworks: typeof import("./getNetworks").getNetworks = null as any;
export const getNetworksOutput: typeof import("./getNetworks").getNetworksOutput = null as any;
utilities.lazyLoad(exports, ["getNetworks","getNetworksOutput"], () => require("./getNetworks"));

export { NetworkArgs, NetworkState } from "./network";
export type Network = import("./network").Network;
export const Network: typeof import("./network").Network = null as any;
utilities.lazyLoad(exports, ["Network"], () => require("./network"));

export { NetworkPeeringConnectionArgs, NetworkPeeringConnectionState } from "./networkPeeringConnection";
export type NetworkPeeringConnection = import("./networkPeeringConnection").NetworkPeeringConnection;
export const NetworkPeeringConnection: typeof import("./networkPeeringConnection").NetworkPeeringConnection = null as any;
utilities.lazyLoad(exports, ["NetworkPeeringConnection"], () => require("./networkPeeringConnection"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws:odb/cloudAutonomousVmCluster:CloudAutonomousVmCluster":
                return new CloudAutonomousVmCluster(name, <any>undefined, { urn })
            case "aws:odb/cloudExadataInfrastructure:CloudExadataInfrastructure":
                return new CloudExadataInfrastructure(name, <any>undefined, { urn })
            case "aws:odb/cloudVmCluster:CloudVmCluster":
                return new CloudVmCluster(name, <any>undefined, { urn })
            case "aws:odb/network:Network":
                return new Network(name, <any>undefined, { urn })
            case "aws:odb/networkPeeringConnection:NetworkPeeringConnection":
                return new NetworkPeeringConnection(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "odb/cloudAutonomousVmCluster", _module)
pulumi.runtime.registerResourceModule("aws", "odb/cloudExadataInfrastructure", _module)
pulumi.runtime.registerResourceModule("aws", "odb/cloudVmCluster", _module)
pulumi.runtime.registerResourceModule("aws", "odb/network", _module)
pulumi.runtime.registerResourceModule("aws", "odb/networkPeeringConnection", _module)
