// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages Resource Access Manager (RAM) Resource Sharing with AWS Organizations. If you enable sharing with your organization, you can share resources without using invitations. Refer to the [AWS RAM user guide](https://docs.aws.amazon.com/ram/latest/userguide/getting-started-sharing.html#getting-started-sharing-orgs) for more details.
 *
 * > **NOTE:** Use this resource to manage resource sharing within your organization, **not** the `aws.organizations.Organization` resource with `ram.amazonaws.com` configured in `awsServiceAccessPrincipals`.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.ram.SharingWithOrganization("example", {});
 * ```
 *
 * ## Import
 *
 * In TODO v1.5.0 and later, use an `import` block to import the resource using the current AWS account ID. For exampleterraform import {
 *
 *  to = aws_ram_sharing_with_organization.example
 *
 *  id = "123456789012" } Using `TODO import`, import the resource using the current AWS account ID. For exampleconsole % TODO import aws_ram_sharing_with_organization.example 123456789012
 */
export class SharingWithOrganization extends pulumi.CustomResource {
    /**
     * Get an existing SharingWithOrganization resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SharingWithOrganizationState, opts?: pulumi.CustomResourceOptions): SharingWithOrganization {
        return new SharingWithOrganization(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:ram/sharingWithOrganization:SharingWithOrganization';

    /**
     * Returns true if the given object is an instance of SharingWithOrganization.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SharingWithOrganization {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SharingWithOrganization.__pulumiType;
    }


    /**
     * Create a SharingWithOrganization resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SharingWithOrganizationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SharingWithOrganizationArgs | SharingWithOrganizationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SharingWithOrganizationState | undefined;
        } else {
            const args = argsOrState as SharingWithOrganizationArgs | undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SharingWithOrganization.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SharingWithOrganization resources.
 */
export interface SharingWithOrganizationState {
}

/**
 * The set of arguments for constructing a SharingWithOrganization resource.
 */
export interface SharingWithOrganizationArgs {
}
