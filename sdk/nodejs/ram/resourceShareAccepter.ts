// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class ResourceShareAccepter extends pulumi.CustomResource {
    /**
     * Get an existing ResourceShareAccepter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResourceShareAccepterState, opts?: pulumi.CustomResourceOptions): ResourceShareAccepter {
        return new ResourceShareAccepter(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:ram/resourceShareAccepter:ResourceShareAccepter';

    /**
     * Returns true if the given object is an instance of ResourceShareAccepter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ResourceShareAccepter {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ResourceShareAccepter.__pulumiType;
    }

    public /*out*/ readonly invitationArn!: pulumi.Output<string>;
    public /*out*/ readonly receiverAccountId!: pulumi.Output<string>;
    public /*out*/ readonly resources!: pulumi.Output<string[]>;
    public /*out*/ readonly senderAccountId!: pulumi.Output<string>;
    public readonly shareArn!: pulumi.Output<string>;
    public /*out*/ readonly shareId!: pulumi.Output<string>;
    public /*out*/ readonly shareName!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a ResourceShareAccepter resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResourceShareAccepterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ResourceShareAccepterArgs | ResourceShareAccepterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ResourceShareAccepterState | undefined;
            resourceInputs["invitationArn"] = state ? state.invitationArn : undefined;
            resourceInputs["receiverAccountId"] = state ? state.receiverAccountId : undefined;
            resourceInputs["resources"] = state ? state.resources : undefined;
            resourceInputs["senderAccountId"] = state ? state.senderAccountId : undefined;
            resourceInputs["shareArn"] = state ? state.shareArn : undefined;
            resourceInputs["shareId"] = state ? state.shareId : undefined;
            resourceInputs["shareName"] = state ? state.shareName : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as ResourceShareAccepterArgs | undefined;
            if ((!args || args.shareArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'shareArn'");
            }
            resourceInputs["shareArn"] = args ? args.shareArn : undefined;
            resourceInputs["invitationArn"] = undefined /*out*/;
            resourceInputs["receiverAccountId"] = undefined /*out*/;
            resourceInputs["resources"] = undefined /*out*/;
            resourceInputs["senderAccountId"] = undefined /*out*/;
            resourceInputs["shareId"] = undefined /*out*/;
            resourceInputs["shareName"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ResourceShareAccepter.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ResourceShareAccepter resources.
 */
export interface ResourceShareAccepterState {
    invitationArn?: pulumi.Input<string>;
    receiverAccountId?: pulumi.Input<string>;
    resources?: pulumi.Input<pulumi.Input<string>[]>;
    senderAccountId?: pulumi.Input<string>;
    shareArn?: pulumi.Input<string>;
    shareId?: pulumi.Input<string>;
    shareName?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ResourceShareAccepter resource.
 */
export interface ResourceShareAccepterArgs {
    shareArn: pulumi.Input<string>;
}
