// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides an Amplify Webhook resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.amplify.App("example", {});
 * const masterBranch = new aws.amplify.Branch("masterBranch", {
 *     appId: example.id,
 *     branchName: "master",
 * });
 * const masterWebhook = new aws.amplify.Webhook("masterWebhook", {
 *     appId: example.id,
 *     branchName: masterBranch.branchName,
 *     description: "triggermaster",
 * });
 * ```
 *
 * ## Import
 *
 * Amplify webhook can be imported using a webhook ID, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:amplify/webhook:Webhook master a26b22a0-748b-4b57-b9a0-ae7e601fe4b1
 * ```
 */
export class Webhook extends pulumi.CustomResource {
    /**
     * Get an existing Webhook resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WebhookState, opts?: pulumi.CustomResourceOptions): Webhook {
        return new Webhook(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:amplify/webhook:Webhook';

    /**
     * Returns true if the given object is an instance of Webhook.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Webhook {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Webhook.__pulumiType;
    }

    /**
     * The unique ID for an Amplify app.
     */
    public readonly appId!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) for the webhook.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The name for a branch that is part of the Amplify app.
     */
    public readonly branchName!: pulumi.Output<string>;
    /**
     * The description for a webhook.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The URL of the webhook.
     */
    public /*out*/ readonly url!: pulumi.Output<string>;

    /**
     * Create a Webhook resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WebhookArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WebhookArgs | WebhookState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WebhookState | undefined;
            inputs["appId"] = state ? state.appId : undefined;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["branchName"] = state ? state.branchName : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["url"] = state ? state.url : undefined;
        } else {
            const args = argsOrState as WebhookArgs | undefined;
            if ((!args || args.appId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appId'");
            }
            if ((!args || args.branchName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'branchName'");
            }
            inputs["appId"] = args ? args.appId : undefined;
            inputs["branchName"] = args ? args.branchName : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["arn"] = undefined /*out*/;
            inputs["url"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(Webhook.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Webhook resources.
 */
export interface WebhookState {
    /**
     * The unique ID for an Amplify app.
     */
    appId?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) for the webhook.
     */
    arn?: pulumi.Input<string>;
    /**
     * The name for a branch that is part of the Amplify app.
     */
    branchName?: pulumi.Input<string>;
    /**
     * The description for a webhook.
     */
    description?: pulumi.Input<string>;
    /**
     * The URL of the webhook.
     */
    url?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Webhook resource.
 */
export interface WebhookArgs {
    /**
     * The unique ID for an Amplify app.
     */
    appId: pulumi.Input<string>;
    /**
     * The name for a branch that is part of the Amplify app.
     */
    branchName: pulumi.Input<string>;
    /**
     * The description for a webhook.
     */
    description?: pulumi.Input<string>;
}
