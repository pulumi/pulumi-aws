// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AttachmentArgs, AttachmentState } from "./attachment";
export type Attachment = import("./attachment").Attachment;
export const Attachment: typeof import("./attachment").Attachment = null as any;
utilities.lazyLoad(exports, ["Attachment"], () => require("./attachment"));

export { GetAmiIdsArgs, GetAmiIdsResult, GetAmiIdsOutputArgs } from "./getAmiIds";
export const getAmiIds: typeof import("./getAmiIds").getAmiIds = null as any;
export const getAmiIdsOutput: typeof import("./getAmiIds").getAmiIdsOutput = null as any;
utilities.lazyLoad(exports, ["getAmiIds","getAmiIdsOutput"], () => require("./getAmiIds"));

export { GetGroupArgs, GetGroupResult, GetGroupOutputArgs } from "./getGroup";
export const getGroup: typeof import("./getGroup").getGroup = null as any;
export const getGroupOutput: typeof import("./getGroup").getGroupOutput = null as any;
utilities.lazyLoad(exports, ["getGroup","getGroupOutput"], () => require("./getGroup"));

export { GroupArgs, GroupState } from "./group";
export type Group = import("./group").Group;
export const Group: typeof import("./group").Group = null as any;
utilities.lazyLoad(exports, ["Group"], () => require("./group"));

export { LifecycleHookArgs, LifecycleHookState } from "./lifecycleHook";
export type LifecycleHook = import("./lifecycleHook").LifecycleHook;
export const LifecycleHook: typeof import("./lifecycleHook").LifecycleHook = null as any;
utilities.lazyLoad(exports, ["LifecycleHook"], () => require("./lifecycleHook"));

export * from "./metrics";
export { NotificationArgs, NotificationState } from "./notification";
export type Notification = import("./notification").Notification;
export const Notification: typeof import("./notification").Notification = null as any;
utilities.lazyLoad(exports, ["Notification"], () => require("./notification"));

export * from "./notificationType";
export { PolicyArgs, PolicyState } from "./policy";
export type Policy = import("./policy").Policy;
export const Policy: typeof import("./policy").Policy = null as any;
utilities.lazyLoad(exports, ["Policy"], () => require("./policy"));

export { ScheduleArgs, ScheduleState } from "./schedule";
export type Schedule = import("./schedule").Schedule;
export const Schedule: typeof import("./schedule").Schedule = null as any;
utilities.lazyLoad(exports, ["Schedule"], () => require("./schedule"));

export { TagArgs, TagState } from "./tag";
export type Tag = import("./tag").Tag;
export const Tag: typeof import("./tag").Tag = null as any;
utilities.lazyLoad(exports, ["Tag"], () => require("./tag"));


// Export enums:
export * from "../types/enums/autoscaling";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws:autoscaling/attachment:Attachment":
                return new Attachment(name, <any>undefined, { urn })
            case "aws:autoscaling/group:Group":
                return new Group(name, <any>undefined, { urn })
            case "aws:autoscaling/lifecycleHook:LifecycleHook":
                return new LifecycleHook(name, <any>undefined, { urn })
            case "aws:autoscaling/notification:Notification":
                return new Notification(name, <any>undefined, { urn })
            case "aws:autoscaling/policy:Policy":
                return new Policy(name, <any>undefined, { urn })
            case "aws:autoscaling/schedule:Schedule":
                return new Schedule(name, <any>undefined, { urn })
            case "aws:autoscaling/tag:Tag":
                return new Tag(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "autoscaling/attachment", _module)
pulumi.runtime.registerResourceModule("aws", "autoscaling/group", _module)
pulumi.runtime.registerResourceModule("aws", "autoscaling/lifecycleHook", _module)
pulumi.runtime.registerResourceModule("aws", "autoscaling/notification", _module)
pulumi.runtime.registerResourceModule("aws", "autoscaling/policy", _module)
pulumi.runtime.registerResourceModule("aws", "autoscaling/schedule", _module)
pulumi.runtime.registerResourceModule("aws", "autoscaling/tag", _module)
