// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Use this data source to get information on an existing autoscaling group.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const foo = aws.autoscaling.getGroup({
 *     name: "foo",
 * });
 * ```
 */
export function getGroup(args: GetGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:autoscaling/getGroup:getGroup", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getGroup.
 */
export interface GetGroupArgs {
    /**
     * Specify the exact name of the desired autoscaling group.
     */
    name: string;
}

/**
 * A collection of values returned by getGroup.
 */
export interface GetGroupResult {
    /**
     * ARN of the Auto Scaling group.
     */
    readonly arn: string;
    /**
     * One or more Availability Zones for the group.
     */
    readonly availabilityZones: string[];
    readonly defaultCooldown: number;
    /**
     * Desired size of the group.
     */
    readonly desiredCapacity: number;
    /**
     * The unit of measurement for the value returned for `desiredCapacity`.
     */
    readonly desiredCapacityType: string;
    /**
     * List of metrics enabled for collection.
     */
    readonly enabledMetrics: string[];
    /**
     * The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance that has come into service.
     */
    readonly healthCheckGracePeriod: number;
    /**
     * Service to use for the health checks. The valid values are EC2 and ELB.
     */
    readonly healthCheckType: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name of the associated launch configuration.
     */
    readonly launchConfiguration: string;
    /**
     * List of launch templates along with the overrides.
     */
    readonly launchTemplates: outputs.autoscaling.GetGroupLaunchTemplate[];
    /**
     * One or more load balancers associated with the group.
     */
    readonly loadBalancers: string[];
    /**
     * Maximum amount of time, in seconds, that an instance can be in service.
     */
    readonly maxInstanceLifetime: number;
    /**
     * Maximum size of the group.
     */
    readonly maxSize: number;
    /**
     * Minimum number of instances to maintain in the warm pool.
     */
    readonly minSize: number;
    /**
     * List of mixed instances policy objects for the group.
     */
    readonly mixedInstancesPolicies: outputs.autoscaling.GetGroupMixedInstancesPolicy[];
    /**
     * Name of the Auto Scaling Group.
     */
    readonly name: string;
    readonly newInstancesProtectedFromScaleIn: boolean;
    /**
     * Name of the placement group into which to launch your instances, if any. For more information, see Placement Groups (http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html) in the Amazon Elastic Compute Cloud User Guide.
     */
    readonly placementGroup: string;
    /**
     * Predicted capacity of the group.
     */
    readonly predictedCapacity: number;
    /**
     * ARN of the service-linked role that the Auto Scaling group uses to call other AWS services on your behalf.
     */
    readonly serviceLinkedRoleArn: string;
    /**
     * Current state of the group when DeleteAutoScalingGroup is in progress.
     */
    readonly status: string;
    /**
     * List of processes suspended processes for the Auto Scaling Group.
     */
    readonly suspendedProcesses: string[];
    /**
     * List of tags for the group.
     */
    readonly tags: outputs.autoscaling.GetGroupTag[];
    /**
     * ARNs of the target groups for your load balancer.
     */
    readonly targetGroupArns: string[];
    /**
     * The termination policies for the group.
     */
    readonly terminationPolicies: string[];
    /**
     * Traffic sources.
     */
    readonly trafficSources: outputs.autoscaling.GetGroupTrafficSource[];
    /**
     * VPC ID for the group.
     */
    readonly vpcZoneIdentifier: string;
    /**
     * Current size of the warm pool.
     */
    readonly warmPoolSize: number;
    /**
     * List of warm pool configuration objects.
     */
    readonly warmPools: outputs.autoscaling.GetGroupWarmPool[];
}
/**
 * Use this data source to get information on an existing autoscaling group.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const foo = aws.autoscaling.getGroup({
 *     name: "foo",
 * });
 * ```
 */
export function getGroupOutput(args: GetGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGroupResult> {
    return pulumi.output(args).apply((a: any) => getGroup(a, opts))
}

/**
 * A collection of arguments for invoking getGroup.
 */
export interface GetGroupOutputArgs {
    /**
     * Specify the exact name of the desired autoscaling group.
     */
    name: pulumi.Input<string>;
}
