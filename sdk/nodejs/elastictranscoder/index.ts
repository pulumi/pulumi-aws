// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { PipelineArgs, PipelineState } from "./pipeline";
export type Pipeline = import("./pipeline").Pipeline;
export const Pipeline: typeof import("./pipeline").Pipeline = null as any;
utilities.lazyLoad(exports, ["Pipeline"], () => require("./pipeline"));

export { PresetArgs, PresetState } from "./preset";
export type Preset = import("./preset").Preset;
export const Preset: typeof import("./preset").Preset = null as any;
utilities.lazyLoad(exports, ["Preset"], () => require("./preset"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws:elastictranscoder/pipeline:Pipeline":
                return new Pipeline(name, <any>undefined, { urn })
            case "aws:elastictranscoder/preset:Preset":
                return new Preset(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "elastictranscoder/pipeline", _module)
pulumi.runtime.registerResourceModule("aws", "elastictranscoder/preset", _module)
