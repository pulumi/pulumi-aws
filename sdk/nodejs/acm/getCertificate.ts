// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to get the ARN of a certificate in AWS Certificate
 * Manager (ACM), you can reference
 * it by domain without having to hard code the ARNs as input.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * // Find a certificate that is issued
 * const issued = pulumi.output(aws.acm.getCertificate({
 *     domain: "tf.example.com",
 *     statuses: ["ISSUED"],
 * }));
 * // Find a certificate issued by (not imported into) ACM
 * const amazonIssued = pulumi.output(aws.acm.getCertificate({
 *     domain: "tf.example.com",
 *     mostRecent: true,
 *     types: ["AMAZON_ISSUED"],
 * }));
 * // Find a RSA 4096 bit certificate
 * const rsa4096 = pulumi.output(aws.acm.getCertificate({
 *     domain: "tf.example.com",
 *     keyTypes: ["RSA_4096"],
 * }));
 * ```
 */
export function getCertificate(args: GetCertificateArgs, opts?: pulumi.InvokeOptions): Promise<GetCertificateResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws:acm/getCertificate:getCertificate", {
        "domain": args.domain,
        "keyTypes": args.keyTypes,
        "mostRecent": args.mostRecent,
        "statuses": args.statuses,
        "tags": args.tags,
        "types": args.types,
    }, opts);
}

/**
 * A collection of arguments for invoking getCertificate.
 */
export interface GetCertificateArgs {
    /**
     * The domain of the certificate to look up. If no certificate is found with this name, an error will be returned.
     */
    domain: string;
    /**
     * A list of key algorithms to filter certificates. By default, ACM does not return all certificate types when searching. See the [ACM API Reference](https://docs.aws.amazon.com/acm/latest/APIReference/API_CertificateDetail.html#ACM-Type-CertificateDetail-KeyAlgorithm) for supported key algorithms.
     */
    keyTypes?: string[];
    /**
     * If set to true, it sorts the certificates matched by previous criteria by the NotBefore field, returning only the most recent one. If set to false, it returns an error if more than one certificate is found. Defaults to false.
     */
    mostRecent?: boolean;
    /**
     * A list of statuses on which to filter the returned list. Valid values are `PENDING_VALIDATION`, `ISSUED`,
     * `INACTIVE`, `EXPIRED`, `VALIDATION_TIMED_OUT`, `REVOKED` and `FAILED`. If no value is specified, only certificates in the `ISSUED` state
     * are returned.
     */
    statuses?: string[];
    /**
     * A mapping of tags for the resource.
     */
    tags?: {[key: string]: string};
    /**
     * A list of types on which to filter the returned list. Valid values are `AMAZON_ISSUED` and `IMPORTED`.
     */
    types?: string[];
}

/**
 * A collection of values returned by getCertificate.
 */
export interface GetCertificateResult {
    /**
     * Amazon Resource Name (ARN) of the found certificate, suitable for referencing in other resources that support ACM certificates.
     */
    readonly arn: string;
    readonly domain: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly keyTypes?: string[];
    readonly mostRecent?: boolean;
    /**
     * Status of the found certificate.
     */
    readonly status: string;
    readonly statuses?: string[];
    /**
     * A mapping of tags for the resource.
     */
    readonly tags: {[key: string]: string};
    readonly types?: string[];
}

export function getCertificateOutput(args: GetCertificateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCertificateResult> {
    return pulumi.output(args).apply(a => getCertificate(a, opts))
}

/**
 * A collection of arguments for invoking getCertificate.
 */
export interface GetCertificateOutputArgs {
    /**
     * The domain of the certificate to look up. If no certificate is found with this name, an error will be returned.
     */
    domain: pulumi.Input<string>;
    /**
     * A list of key algorithms to filter certificates. By default, ACM does not return all certificate types when searching. See the [ACM API Reference](https://docs.aws.amazon.com/acm/latest/APIReference/API_CertificateDetail.html#ACM-Type-CertificateDetail-KeyAlgorithm) for supported key algorithms.
     */
    keyTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If set to true, it sorts the certificates matched by previous criteria by the NotBefore field, returning only the most recent one. If set to false, it returns an error if more than one certificate is found. Defaults to false.
     */
    mostRecent?: pulumi.Input<boolean>;
    /**
     * A list of statuses on which to filter the returned list. Valid values are `PENDING_VALIDATION`, `ISSUED`,
     * `INACTIVE`, `EXPIRED`, `VALIDATION_TIMED_OUT`, `REVOKED` and `FAILED`. If no value is specified, only certificates in the `ISSUED` state
     * are returned.
     */
    statuses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A mapping of tags for the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A list of types on which to filter the returned list. Valid values are `AMAZON_ISSUED` and `IMPORTED`.
     */
    types?: pulumi.Input<pulumi.Input<string>[]>;
}
