// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./input";
import * as outputs from "./output";

export interface ApplicationAutoStartConfiguration {
    /**
     * Enables the application to automatically start on job submission. Defaults to `true`.
     */
    enabled?: boolean;
}
export interface ApplicationAutoStopConfiguration {
    /**
     * Enables the application to automatically stop after a certain amount of time being idle. Defaults to `true`.
     */
    enabled?: boolean;
    /**
     * The amount of idle time in minutes after which your application will automatically stop. Defaults to `15` minutes.
     */
    idleTimeoutMinutes?: number;
}
export interface ApplicationImageConfiguration {
    /**
     * The image URI.
     */
    imageUri: string;
}
export interface ApplicationInitialCapacity {
    /**
     * The initial capacity configuration per worker.
     */
    initialCapacityConfig?: outputs.ApplicationInitialCapacityInitialCapacityConfig;
    /**
     * The worker type for an analytics framework. For Spark applications, the key can either be set to `Driver` or `Executor`. For Hive applications, it can be set to `HiveDriver` or `TezTask`.
     */
    initialCapacityType: string;
}
export interface ApplicationInitialCapacityInitialCapacityConfig {
    /**
     * The resource configuration of the initial capacity configuration.
     */
    workerConfiguration?: outputs.ApplicationInitialCapacityInitialCapacityConfigWorkerConfiguration;
    /**
     * The number of workers in the initial capacity configuration.
     */
    workerCount: number;
}
export interface ApplicationInitialCapacityInitialCapacityConfigWorkerConfiguration {
    /**
     * The CPU requirements for every worker instance of the worker type.
     */
    cpu: string;
    /**
     * The disk requirements for every worker instance of the worker type.
     */
    disk: string;
    /**
     * The memory requirements for every worker instance of the worker type.
     */
    memory: string;
}
export interface ApplicationMaximumCapacity {
    /**
     * The maximum allowed CPU for an application.
     */
    cpu: string;
    /**
     * The maximum allowed disk for an application.
     */
    disk: string;
    /**
     * The maximum allowed resources for an application.
     */
    memory: string;
}
export interface ApplicationNetworkConfiguration {
    /**
     * The array of security group Ids for customer VPC connectivity.
     */
    securityGroupIds?: string[];
    /**
     * The array of subnet Ids for customer VPC connectivity.
     */
    subnetIds?: string[];
}
