// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { DirectoryConfigArgs, DirectoryConfigState } from "./directoryConfig";
export type DirectoryConfig = import("./directoryConfig").DirectoryConfig;
export const DirectoryConfig: typeof import("./directoryConfig").DirectoryConfig = null as any;
utilities.lazyLoad(exports, ["DirectoryConfig"], () => require("./directoryConfig"));

export { FleetArgs, FleetState } from "./fleet";
export type Fleet = import("./fleet").Fleet;
export const Fleet: typeof import("./fleet").Fleet = null as any;
utilities.lazyLoad(exports, ["Fleet"], () => require("./fleet"));

export { FleetStackAssociationArgs, FleetStackAssociationState } from "./fleetStackAssociation";
export type FleetStackAssociation = import("./fleetStackAssociation").FleetStackAssociation;
export const FleetStackAssociation: typeof import("./fleetStackAssociation").FleetStackAssociation = null as any;
utilities.lazyLoad(exports, ["FleetStackAssociation"], () => require("./fleetStackAssociation"));

export { ImageBuilderArgs, ImageBuilderState } from "./imageBuilder";
export type ImageBuilder = import("./imageBuilder").ImageBuilder;
export const ImageBuilder: typeof import("./imageBuilder").ImageBuilder = null as any;
utilities.lazyLoad(exports, ["ImageBuilder"], () => require("./imageBuilder"));

export { StackArgs, StackState } from "./stack";
export type Stack = import("./stack").Stack;
export const Stack: typeof import("./stack").Stack = null as any;
utilities.lazyLoad(exports, ["Stack"], () => require("./stack"));

export { UserArgs, UserState } from "./user";
export type User = import("./user").User;
export const User: typeof import("./user").User = null as any;
utilities.lazyLoad(exports, ["User"], () => require("./user"));

export { UserStackAssociationArgs, UserStackAssociationState } from "./userStackAssociation";
export type UserStackAssociation = import("./userStackAssociation").UserStackAssociation;
export const UserStackAssociation: typeof import("./userStackAssociation").UserStackAssociation = null as any;
utilities.lazyLoad(exports, ["UserStackAssociation"], () => require("./userStackAssociation"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws:appstream/directoryConfig:DirectoryConfig":
                return new DirectoryConfig(name, <any>undefined, { urn })
            case "aws:appstream/fleet:Fleet":
                return new Fleet(name, <any>undefined, { urn })
            case "aws:appstream/fleetStackAssociation:FleetStackAssociation":
                return new FleetStackAssociation(name, <any>undefined, { urn })
            case "aws:appstream/imageBuilder:ImageBuilder":
                return new ImageBuilder(name, <any>undefined, { urn })
            case "aws:appstream/stack:Stack":
                return new Stack(name, <any>undefined, { urn })
            case "aws:appstream/user:User":
                return new User(name, <any>undefined, { urn })
            case "aws:appstream/userStackAssociation:UserStackAssociation":
                return new UserStackAssociation(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "appstream/directoryConfig", _module)
pulumi.runtime.registerResourceModule("aws", "appstream/fleet", _module)
pulumi.runtime.registerResourceModule("aws", "appstream/fleetStackAssociation", _module)
pulumi.runtime.registerResourceModule("aws", "appstream/imageBuilder", _module)
pulumi.runtime.registerResourceModule("aws", "appstream/stack", _module)
pulumi.runtime.registerResourceModule("aws", "appstream/user", _module)
pulumi.runtime.registerResourceModule("aws", "appstream/userStackAssociation", _module)
