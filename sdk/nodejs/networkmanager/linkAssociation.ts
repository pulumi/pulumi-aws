// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class LinkAssociation extends pulumi.CustomResource {
    /**
     * Get an existing LinkAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LinkAssociationState, opts?: pulumi.CustomResourceOptions): LinkAssociation {
        return new LinkAssociation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:networkmanager/linkAssociation:LinkAssociation';

    /**
     * Returns true if the given object is an instance of LinkAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LinkAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LinkAssociation.__pulumiType;
    }

    public readonly deviceId!: pulumi.Output<string>;
    public readonly globalNetworkId!: pulumi.Output<string>;
    public readonly linkId!: pulumi.Output<string>;

    /**
     * Create a LinkAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LinkAssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LinkAssociationArgs | LinkAssociationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LinkAssociationState | undefined;
            resourceInputs["deviceId"] = state ? state.deviceId : undefined;
            resourceInputs["globalNetworkId"] = state ? state.globalNetworkId : undefined;
            resourceInputs["linkId"] = state ? state.linkId : undefined;
        } else {
            const args = argsOrState as LinkAssociationArgs | undefined;
            if ((!args || args.deviceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deviceId'");
            }
            if ((!args || args.globalNetworkId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'globalNetworkId'");
            }
            if ((!args || args.linkId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'linkId'");
            }
            resourceInputs["deviceId"] = args ? args.deviceId : undefined;
            resourceInputs["globalNetworkId"] = args ? args.globalNetworkId : undefined;
            resourceInputs["linkId"] = args ? args.linkId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LinkAssociation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LinkAssociation resources.
 */
export interface LinkAssociationState {
    deviceId?: pulumi.Input<string>;
    globalNetworkId?: pulumi.Input<string>;
    linkId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LinkAssociation resource.
 */
export interface LinkAssociationArgs {
    deviceId: pulumi.Input<string>;
    globalNetworkId: pulumi.Input<string>;
    linkId: pulumi.Input<string>;
}
