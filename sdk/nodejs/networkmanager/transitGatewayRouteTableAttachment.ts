// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class TransitGatewayRouteTableAttachment extends pulumi.CustomResource {
    /**
     * Get an existing TransitGatewayRouteTableAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TransitGatewayRouteTableAttachmentState, opts?: pulumi.CustomResourceOptions): TransitGatewayRouteTableAttachment {
        return new TransitGatewayRouteTableAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:networkmanager/transitGatewayRouteTableAttachment:TransitGatewayRouteTableAttachment';

    /**
     * Returns true if the given object is an instance of TransitGatewayRouteTableAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TransitGatewayRouteTableAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TransitGatewayRouteTableAttachment.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public /*out*/ readonly attachmentPolicyRuleNumber!: pulumi.Output<number>;
    public /*out*/ readonly attachmentType!: pulumi.Output<string>;
    public /*out*/ readonly coreNetworkArn!: pulumi.Output<string>;
    public /*out*/ readonly coreNetworkId!: pulumi.Output<string>;
    public /*out*/ readonly edgeLocation!: pulumi.Output<string>;
    public /*out*/ readonly ownerAccountId!: pulumi.Output<string>;
    public readonly peeringId!: pulumi.Output<string>;
    public /*out*/ readonly resourceArn!: pulumi.Output<string>;
    public /*out*/ readonly segmentName!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    public readonly transitGatewayRouteTableArn!: pulumi.Output<string>;

    /**
     * Create a TransitGatewayRouteTableAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TransitGatewayRouteTableAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TransitGatewayRouteTableAttachmentArgs | TransitGatewayRouteTableAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TransitGatewayRouteTableAttachmentState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["attachmentPolicyRuleNumber"] = state ? state.attachmentPolicyRuleNumber : undefined;
            resourceInputs["attachmentType"] = state ? state.attachmentType : undefined;
            resourceInputs["coreNetworkArn"] = state ? state.coreNetworkArn : undefined;
            resourceInputs["coreNetworkId"] = state ? state.coreNetworkId : undefined;
            resourceInputs["edgeLocation"] = state ? state.edgeLocation : undefined;
            resourceInputs["ownerAccountId"] = state ? state.ownerAccountId : undefined;
            resourceInputs["peeringId"] = state ? state.peeringId : undefined;
            resourceInputs["resourceArn"] = state ? state.resourceArn : undefined;
            resourceInputs["segmentName"] = state ? state.segmentName : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["transitGatewayRouteTableArn"] = state ? state.transitGatewayRouteTableArn : undefined;
        } else {
            const args = argsOrState as TransitGatewayRouteTableAttachmentArgs | undefined;
            if ((!args || args.peeringId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'peeringId'");
            }
            if ((!args || args.transitGatewayRouteTableArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'transitGatewayRouteTableArn'");
            }
            resourceInputs["peeringId"] = args ? args.peeringId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["transitGatewayRouteTableArn"] = args ? args.transitGatewayRouteTableArn : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["attachmentPolicyRuleNumber"] = undefined /*out*/;
            resourceInputs["attachmentType"] = undefined /*out*/;
            resourceInputs["coreNetworkArn"] = undefined /*out*/;
            resourceInputs["coreNetworkId"] = undefined /*out*/;
            resourceInputs["edgeLocation"] = undefined /*out*/;
            resourceInputs["ownerAccountId"] = undefined /*out*/;
            resourceInputs["resourceArn"] = undefined /*out*/;
            resourceInputs["segmentName"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TransitGatewayRouteTableAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TransitGatewayRouteTableAttachment resources.
 */
export interface TransitGatewayRouteTableAttachmentState {
    arn?: pulumi.Input<string>;
    attachmentPolicyRuleNumber?: pulumi.Input<number>;
    attachmentType?: pulumi.Input<string>;
    coreNetworkArn?: pulumi.Input<string>;
    coreNetworkId?: pulumi.Input<string>;
    edgeLocation?: pulumi.Input<string>;
    ownerAccountId?: pulumi.Input<string>;
    peeringId?: pulumi.Input<string>;
    resourceArn?: pulumi.Input<string>;
    segmentName?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    transitGatewayRouteTableArn?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TransitGatewayRouteTableAttachment resource.
 */
export interface TransitGatewayRouteTableAttachmentArgs {
    peeringId: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    transitGatewayRouteTableArn: pulumi.Input<string>;
}
