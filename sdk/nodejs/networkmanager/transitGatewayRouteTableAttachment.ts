// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Creates a transit gateway route table attachment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.networkmanager.TransitGatewayRouteTableAttachment("example", {
 *     peeringId: aws_networkmanager_transit_gateway_peering.example.id,
 *     transitGatewayRouteTableArn: aws_ec2_transit_gateway_route_table.example.arn,
 * });
 * ```
 *
 * ## Import
 *
 * `aws_networkmanager_transit_gateway_route_table_attachment` can be imported using the attachment ID, e.g.
 *
 * ```sh
 *  $ pulumi import aws:networkmanager/transitGatewayRouteTableAttachment:TransitGatewayRouteTableAttachment example attachment-0f8fa60d2238d1bd8
 * ```
 */
export class TransitGatewayRouteTableAttachment extends pulumi.CustomResource {
    /**
     * Get an existing TransitGatewayRouteTableAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TransitGatewayRouteTableAttachmentState, opts?: pulumi.CustomResourceOptions): TransitGatewayRouteTableAttachment {
        return new TransitGatewayRouteTableAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:networkmanager/transitGatewayRouteTableAttachment:TransitGatewayRouteTableAttachment';

    /**
     * Returns true if the given object is an instance of TransitGatewayRouteTableAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TransitGatewayRouteTableAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TransitGatewayRouteTableAttachment.__pulumiType;
    }

    /**
     * Attachment Amazon Resource Name (ARN).
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The policy rule number associated with the attachment.
     */
    public /*out*/ readonly attachmentPolicyRuleNumber!: pulumi.Output<number>;
    /**
     * The type of attachment.
     */
    public /*out*/ readonly attachmentType!: pulumi.Output<string>;
    /**
     * The ARN of the core network.
     */
    public /*out*/ readonly coreNetworkArn!: pulumi.Output<string>;
    /**
     * The ID of the core network.
     */
    public /*out*/ readonly coreNetworkId!: pulumi.Output<string>;
    /**
     * The edge location for the peer.
     */
    public /*out*/ readonly edgeLocation!: pulumi.Output<string>;
    /**
     * The ID of the attachment account owner.
     */
    public /*out*/ readonly ownerAccountId!: pulumi.Output<string>;
    /**
     * The ID of the peer for the attachment.
     */
    public readonly peeringId!: pulumi.Output<string>;
    /**
     * The attachment resource ARN.
     */
    public /*out*/ readonly resourceArn!: pulumi.Output<string>;
    /**
     * The name of the segment attachment.
     */
    public /*out*/ readonly segmentName!: pulumi.Output<string>;
    /**
     * The state of the attachment.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Key-value tags for the attachment. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    /**
     * The ARN of the transit gateway route table for the attachment.
     */
    public readonly transitGatewayRouteTableArn!: pulumi.Output<string>;

    /**
     * Create a TransitGatewayRouteTableAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TransitGatewayRouteTableAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TransitGatewayRouteTableAttachmentArgs | TransitGatewayRouteTableAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TransitGatewayRouteTableAttachmentState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["attachmentPolicyRuleNumber"] = state ? state.attachmentPolicyRuleNumber : undefined;
            resourceInputs["attachmentType"] = state ? state.attachmentType : undefined;
            resourceInputs["coreNetworkArn"] = state ? state.coreNetworkArn : undefined;
            resourceInputs["coreNetworkId"] = state ? state.coreNetworkId : undefined;
            resourceInputs["edgeLocation"] = state ? state.edgeLocation : undefined;
            resourceInputs["ownerAccountId"] = state ? state.ownerAccountId : undefined;
            resourceInputs["peeringId"] = state ? state.peeringId : undefined;
            resourceInputs["resourceArn"] = state ? state.resourceArn : undefined;
            resourceInputs["segmentName"] = state ? state.segmentName : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["transitGatewayRouteTableArn"] = state ? state.transitGatewayRouteTableArn : undefined;
        } else {
            const args = argsOrState as TransitGatewayRouteTableAttachmentArgs | undefined;
            if ((!args || args.peeringId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'peeringId'");
            }
            if ((!args || args.transitGatewayRouteTableArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'transitGatewayRouteTableArn'");
            }
            resourceInputs["peeringId"] = args ? args.peeringId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["transitGatewayRouteTableArn"] = args ? args.transitGatewayRouteTableArn : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["attachmentPolicyRuleNumber"] = undefined /*out*/;
            resourceInputs["attachmentType"] = undefined /*out*/;
            resourceInputs["coreNetworkArn"] = undefined /*out*/;
            resourceInputs["coreNetworkId"] = undefined /*out*/;
            resourceInputs["edgeLocation"] = undefined /*out*/;
            resourceInputs["ownerAccountId"] = undefined /*out*/;
            resourceInputs["resourceArn"] = undefined /*out*/;
            resourceInputs["segmentName"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TransitGatewayRouteTableAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TransitGatewayRouteTableAttachment resources.
 */
export interface TransitGatewayRouteTableAttachmentState {
    /**
     * Attachment Amazon Resource Name (ARN).
     */
    arn?: pulumi.Input<string>;
    /**
     * The policy rule number associated with the attachment.
     */
    attachmentPolicyRuleNumber?: pulumi.Input<number>;
    /**
     * The type of attachment.
     */
    attachmentType?: pulumi.Input<string>;
    /**
     * The ARN of the core network.
     */
    coreNetworkArn?: pulumi.Input<string>;
    /**
     * The ID of the core network.
     */
    coreNetworkId?: pulumi.Input<string>;
    /**
     * The edge location for the peer.
     */
    edgeLocation?: pulumi.Input<string>;
    /**
     * The ID of the attachment account owner.
     */
    ownerAccountId?: pulumi.Input<string>;
    /**
     * The ID of the peer for the attachment.
     */
    peeringId?: pulumi.Input<string>;
    /**
     * The attachment resource ARN.
     */
    resourceArn?: pulumi.Input<string>;
    /**
     * The name of the segment attachment.
     */
    segmentName?: pulumi.Input<string>;
    /**
     * The state of the attachment.
     */
    state?: pulumi.Input<string>;
    /**
     * Key-value tags for the attachment. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The ARN of the transit gateway route table for the attachment.
     */
    transitGatewayRouteTableArn?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TransitGatewayRouteTableAttachment resource.
 */
export interface TransitGatewayRouteTableAttachmentArgs {
    /**
     * The ID of the peer for the attachment.
     */
    peeringId: pulumi.Input<string>;
    /**
     * Key-value tags for the attachment. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The ARN of the transit gateway route table for the attachment.
     */
    transitGatewayRouteTableArn: pulumi.Input<string>;
}
