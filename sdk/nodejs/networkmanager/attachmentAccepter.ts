// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages an AWS Network Manager Attachment Accepter.
 *
 * Use this resource to accept cross-account attachments in AWS Network Manager. When an attachment is created in one account and needs to be accepted by another account that owns the core network, this resource handles the acceptance process.
 *
 * ## Example Usage
 *
 * ### VPC Attachment
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.networkmanager.AttachmentAccepter("example", {
 *     attachmentId: exampleAwsNetworkmanagerVpcAttachment.id,
 *     attachmentType: exampleAwsNetworkmanagerVpcAttachment.attachmentType,
 * });
 * ```
 *
 * ### Site-to-Site VPN Attachment
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.networkmanager.AttachmentAccepter("example", {
 *     attachmentId: exampleAwsNetworkmanagerSiteToSiteVpnAttachment.id,
 *     attachmentType: exampleAwsNetworkmanagerSiteToSiteVpnAttachment.attachmentType,
 * });
 * ```
 *
 * ### Connect Attachment
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.networkmanager.AttachmentAccepter("example", {
 *     attachmentId: exampleAwsNetworkmanagerConnectAttachment.id,
 *     attachmentType: exampleAwsNetworkmanagerConnectAttachment.attachmentType,
 * });
 * ```
 *
 * ### Transit Gateway Route Table Attachment
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.networkmanager.AttachmentAccepter("example", {
 *     attachmentId: exampleAwsNetworkmanagerTransitGatewayRouteTableAttachment.id,
 *     attachmentType: exampleAwsNetworkmanagerTransitGatewayRouteTableAttachment.attachmentType,
 * });
 * ```
 *
 * ### Direct Connect Gateway Attachment
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.networkmanager.AttachmentAccepter("example", {
 *     attachmentId: exampleAwsNetworkmanagerDxGatewayAttachment.id,
 *     attachmentType: exampleAwsNetworkmanagerDxGatewayAttachment.attachmentType,
 * });
 * ```
 */
export class AttachmentAccepter extends pulumi.CustomResource {
    /**
     * Get an existing AttachmentAccepter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AttachmentAccepterState, opts?: pulumi.CustomResourceOptions): AttachmentAccepter {
        return new AttachmentAccepter(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:networkmanager/attachmentAccepter:AttachmentAccepter';

    /**
     * Returns true if the given object is an instance of AttachmentAccepter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AttachmentAccepter {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AttachmentAccepter.__pulumiType;
    }

    /**
     * ID of the attachment.
     */
    declare public readonly attachmentId: pulumi.Output<string>;
    /**
     * Policy rule number associated with the attachment.
     */
    declare public /*out*/ readonly attachmentPolicyRuleNumber: pulumi.Output<number>;
    /**
     * Type of attachment. Valid values: `CONNECT`, `DIRECT_CONNECT_GATEWAY`, `SITE_TO_SITE_VPN`, `TRANSIT_GATEWAY_ROUTE_TABLE`, `VPC`.
     */
    declare public readonly attachmentType: pulumi.Output<string>;
    /**
     * ARN of the core network.
     */
    declare public /*out*/ readonly coreNetworkArn: pulumi.Output<string>;
    /**
     * ID of the core network.
     */
    declare public /*out*/ readonly coreNetworkId: pulumi.Output<string>;
    /**
     * Region where the edge is located. This is returned for all attachment types except Direct Connect gateway attachments, which instead return `edgeLocations`.
     */
    declare public /*out*/ readonly edgeLocation: pulumi.Output<string>;
    /**
     * Edge locations that the Direct Connect gateway is associated with. This is returned only for Direct Connect gateway attachments. All other attachment types return `edgeLocation`.
     */
    declare public /*out*/ readonly edgeLocations: pulumi.Output<string[]>;
    /**
     * ID of the attachment account owner.
     */
    declare public /*out*/ readonly ownerAccountId: pulumi.Output<string>;
    /**
     * Attachment resource ARN.
     */
    declare public /*out*/ readonly resourceArn: pulumi.Output<string>;
    /**
     * Name of the segment attachment.
     */
    declare public /*out*/ readonly segmentName: pulumi.Output<string>;
    /**
     * State of the attachment.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;

    /**
     * Create a AttachmentAccepter resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AttachmentAccepterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AttachmentAccepterArgs | AttachmentAccepterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AttachmentAccepterState | undefined;
            resourceInputs["attachmentId"] = state?.attachmentId;
            resourceInputs["attachmentPolicyRuleNumber"] = state?.attachmentPolicyRuleNumber;
            resourceInputs["attachmentType"] = state?.attachmentType;
            resourceInputs["coreNetworkArn"] = state?.coreNetworkArn;
            resourceInputs["coreNetworkId"] = state?.coreNetworkId;
            resourceInputs["edgeLocation"] = state?.edgeLocation;
            resourceInputs["edgeLocations"] = state?.edgeLocations;
            resourceInputs["ownerAccountId"] = state?.ownerAccountId;
            resourceInputs["resourceArn"] = state?.resourceArn;
            resourceInputs["segmentName"] = state?.segmentName;
            resourceInputs["state"] = state?.state;
        } else {
            const args = argsOrState as AttachmentAccepterArgs | undefined;
            if (args?.attachmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'attachmentId'");
            }
            if (args?.attachmentType === undefined && !opts.urn) {
                throw new Error("Missing required property 'attachmentType'");
            }
            resourceInputs["attachmentId"] = args?.attachmentId;
            resourceInputs["attachmentType"] = args?.attachmentType;
            resourceInputs["attachmentPolicyRuleNumber"] = undefined /*out*/;
            resourceInputs["coreNetworkArn"] = undefined /*out*/;
            resourceInputs["coreNetworkId"] = undefined /*out*/;
            resourceInputs["edgeLocation"] = undefined /*out*/;
            resourceInputs["edgeLocations"] = undefined /*out*/;
            resourceInputs["ownerAccountId"] = undefined /*out*/;
            resourceInputs["resourceArn"] = undefined /*out*/;
            resourceInputs["segmentName"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AttachmentAccepter.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AttachmentAccepter resources.
 */
export interface AttachmentAccepterState {
    /**
     * ID of the attachment.
     */
    attachmentId?: pulumi.Input<string>;
    /**
     * Policy rule number associated with the attachment.
     */
    attachmentPolicyRuleNumber?: pulumi.Input<number>;
    /**
     * Type of attachment. Valid values: `CONNECT`, `DIRECT_CONNECT_GATEWAY`, `SITE_TO_SITE_VPN`, `TRANSIT_GATEWAY_ROUTE_TABLE`, `VPC`.
     */
    attachmentType?: pulumi.Input<string>;
    /**
     * ARN of the core network.
     */
    coreNetworkArn?: pulumi.Input<string>;
    /**
     * ID of the core network.
     */
    coreNetworkId?: pulumi.Input<string>;
    /**
     * Region where the edge is located. This is returned for all attachment types except Direct Connect gateway attachments, which instead return `edgeLocations`.
     */
    edgeLocation?: pulumi.Input<string>;
    /**
     * Edge locations that the Direct Connect gateway is associated with. This is returned only for Direct Connect gateway attachments. All other attachment types return `edgeLocation`.
     */
    edgeLocations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * ID of the attachment account owner.
     */
    ownerAccountId?: pulumi.Input<string>;
    /**
     * Attachment resource ARN.
     */
    resourceArn?: pulumi.Input<string>;
    /**
     * Name of the segment attachment.
     */
    segmentName?: pulumi.Input<string>;
    /**
     * State of the attachment.
     */
    state?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AttachmentAccepter resource.
 */
export interface AttachmentAccepterArgs {
    /**
     * ID of the attachment.
     */
    attachmentId: pulumi.Input<string>;
    /**
     * Type of attachment. Valid values: `CONNECT`, `DIRECT_CONNECT_GATEWAY`, `SITE_TO_SITE_VPN`, `TRANSIT_GATEWAY_ROUTE_TABLE`, `VPC`.
     */
    attachmentType: pulumi.Input<string>;
}
