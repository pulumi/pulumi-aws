// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export class ConnectAttachment extends pulumi.CustomResource {
    /**
     * Get an existing ConnectAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConnectAttachmentState, opts?: pulumi.CustomResourceOptions): ConnectAttachment {
        return new ConnectAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:networkmanager/connectAttachment:ConnectAttachment';

    /**
     * Returns true if the given object is an instance of ConnectAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ConnectAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ConnectAttachment.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public /*out*/ readonly attachmentId!: pulumi.Output<string>;
    public /*out*/ readonly attachmentPolicyRuleNumber!: pulumi.Output<number>;
    public /*out*/ readonly attachmentType!: pulumi.Output<string>;
    public /*out*/ readonly coreNetworkArn!: pulumi.Output<string>;
    public readonly coreNetworkId!: pulumi.Output<string>;
    public readonly edgeLocation!: pulumi.Output<string>;
    public readonly options!: pulumi.Output<outputs.networkmanager.ConnectAttachmentOptions>;
    public /*out*/ readonly ownerAccountId!: pulumi.Output<string>;
    public /*out*/ readonly resourceArn!: pulumi.Output<string>;
    public /*out*/ readonly segmentName!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    public readonly transportAttachmentId!: pulumi.Output<string>;

    /**
     * Create a ConnectAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConnectAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ConnectAttachmentArgs | ConnectAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ConnectAttachmentState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["attachmentId"] = state ? state.attachmentId : undefined;
            resourceInputs["attachmentPolicyRuleNumber"] = state ? state.attachmentPolicyRuleNumber : undefined;
            resourceInputs["attachmentType"] = state ? state.attachmentType : undefined;
            resourceInputs["coreNetworkArn"] = state ? state.coreNetworkArn : undefined;
            resourceInputs["coreNetworkId"] = state ? state.coreNetworkId : undefined;
            resourceInputs["edgeLocation"] = state ? state.edgeLocation : undefined;
            resourceInputs["options"] = state ? state.options : undefined;
            resourceInputs["ownerAccountId"] = state ? state.ownerAccountId : undefined;
            resourceInputs["resourceArn"] = state ? state.resourceArn : undefined;
            resourceInputs["segmentName"] = state ? state.segmentName : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["transportAttachmentId"] = state ? state.transportAttachmentId : undefined;
        } else {
            const args = argsOrState as ConnectAttachmentArgs | undefined;
            if ((!args || args.coreNetworkId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'coreNetworkId'");
            }
            if ((!args || args.edgeLocation === undefined) && !opts.urn) {
                throw new Error("Missing required property 'edgeLocation'");
            }
            if ((!args || args.options === undefined) && !opts.urn) {
                throw new Error("Missing required property 'options'");
            }
            if ((!args || args.transportAttachmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'transportAttachmentId'");
            }
            resourceInputs["coreNetworkId"] = args ? args.coreNetworkId : undefined;
            resourceInputs["edgeLocation"] = args ? args.edgeLocation : undefined;
            resourceInputs["options"] = args ? args.options : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["transportAttachmentId"] = args ? args.transportAttachmentId : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["attachmentId"] = undefined /*out*/;
            resourceInputs["attachmentPolicyRuleNumber"] = undefined /*out*/;
            resourceInputs["attachmentType"] = undefined /*out*/;
            resourceInputs["coreNetworkArn"] = undefined /*out*/;
            resourceInputs["ownerAccountId"] = undefined /*out*/;
            resourceInputs["resourceArn"] = undefined /*out*/;
            resourceInputs["segmentName"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ConnectAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ConnectAttachment resources.
 */
export interface ConnectAttachmentState {
    arn?: pulumi.Input<string>;
    attachmentId?: pulumi.Input<string>;
    attachmentPolicyRuleNumber?: pulumi.Input<number>;
    attachmentType?: pulumi.Input<string>;
    coreNetworkArn?: pulumi.Input<string>;
    coreNetworkId?: pulumi.Input<string>;
    edgeLocation?: pulumi.Input<string>;
    options?: pulumi.Input<inputs.networkmanager.ConnectAttachmentOptions>;
    ownerAccountId?: pulumi.Input<string>;
    resourceArn?: pulumi.Input<string>;
    segmentName?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    transportAttachmentId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ConnectAttachment resource.
 */
export interface ConnectAttachmentArgs {
    coreNetworkId: pulumi.Input<string>;
    edgeLocation: pulumi.Input<string>;
    options: pulumi.Input<inputs.networkmanager.ConnectAttachmentOptions>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    transportAttachmentId: pulumi.Input<string>;
}
