// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Registers a transit gateway to a global network. The transit gateway can be in any AWS Region,
 * but it must be owned by the same AWS account that owns the global network.
 * You cannot register a transit gateway in more than one global network.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleGlobalNetwork = new aws.networkmanager.GlobalNetwork("exampleGlobalNetwork", {description: "example"});
 * const exampleTransitGateway = new aws.ec2transitgateway.TransitGateway("exampleTransitGateway", {});
 * const exampleTransitGatewayRegistration = new aws.networkmanager.TransitGatewayRegistration("exampleTransitGatewayRegistration", {
 *     globalNetworkId: exampleGlobalNetwork.id,
 *     transitGatewayArn: exampleTransitGateway.arn,
 * });
 * ```
 *
 * ## Import
 *
 * terraform import {
 *
 *  to = aws_networkmanager_transit_gateway_registration.example
 *
 *  id = "global-network-0d47f6t230mz46dy4,arn:aws:ec2:us-west-2:123456789012:transit-gateway/tgw-123abc05e04123abc" } Using `pulumi import`, import `aws_networkmanager_transit_gateway_registration` using the global network ID and transit gateway ARN. For exampleconsole % pulumi import aws_networkmanager_transit_gateway_registration.example global-network-0d47f6t230mz46dy4,arn:aws:ec2:us-west-2:123456789012:transit-gateway/tgw-123abc05e04123abc
 */
export class TransitGatewayRegistration extends pulumi.CustomResource {
    /**
     * Get an existing TransitGatewayRegistration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TransitGatewayRegistrationState, opts?: pulumi.CustomResourceOptions): TransitGatewayRegistration {
        return new TransitGatewayRegistration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:networkmanager/transitGatewayRegistration:TransitGatewayRegistration';

    /**
     * Returns true if the given object is an instance of TransitGatewayRegistration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TransitGatewayRegistration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TransitGatewayRegistration.__pulumiType;
    }

    /**
     * The ID of the Global Network to register to.
     */
    public readonly globalNetworkId!: pulumi.Output<string>;
    /**
     * The ARN of the Transit Gateway to register.
     */
    public readonly transitGatewayArn!: pulumi.Output<string>;

    /**
     * Create a TransitGatewayRegistration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TransitGatewayRegistrationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TransitGatewayRegistrationArgs | TransitGatewayRegistrationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TransitGatewayRegistrationState | undefined;
            resourceInputs["globalNetworkId"] = state ? state.globalNetworkId : undefined;
            resourceInputs["transitGatewayArn"] = state ? state.transitGatewayArn : undefined;
        } else {
            const args = argsOrState as TransitGatewayRegistrationArgs | undefined;
            if ((!args || args.globalNetworkId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'globalNetworkId'");
            }
            if ((!args || args.transitGatewayArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'transitGatewayArn'");
            }
            resourceInputs["globalNetworkId"] = args ? args.globalNetworkId : undefined;
            resourceInputs["transitGatewayArn"] = args ? args.transitGatewayArn : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TransitGatewayRegistration.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TransitGatewayRegistration resources.
 */
export interface TransitGatewayRegistrationState {
    /**
     * The ID of the Global Network to register to.
     */
    globalNetworkId?: pulumi.Input<string>;
    /**
     * The ARN of the Transit Gateway to register.
     */
    transitGatewayArn?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TransitGatewayRegistration resource.
 */
export interface TransitGatewayRegistrationArgs {
    /**
     * The ID of the Global Network to register to.
     */
    globalNetworkId: pulumi.Input<string>;
    /**
     * The ARN of the Transit Gateway to register.
     */
    transitGatewayArn: pulumi.Input<string>;
}
