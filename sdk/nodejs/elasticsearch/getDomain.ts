// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to get information about an Elasticsearch Domain
 * 
 * ## Example Usage
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const myDomain = aws.elasticsearch.getDomain({
 *     domainName: "my-domain-name",
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/d/elasticsearch_domain.html.markdown.
 */
export function getDomain(args: GetDomainArgs, opts?: pulumi.InvokeOptions): Promise<GetDomainResult> & GetDomainResult {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    const promise: Promise<GetDomainResult> = pulumi.runtime.invoke("aws:elasticsearch/getDomain:getDomain", {
        "domainName": args.domainName,
        "tags": args.tags,
    }, opts);

    return pulumi.utils.liftProperties(promise, opts);
}

/**
 * A collection of arguments for invoking getDomain.
 */
export interface GetDomainArgs {
    /**
     * Name of the domain.
     */
    readonly domainName: string;
    /**
     * The tags assigned to the domain.
     */
    readonly tags?: {[key: string]: any};
}

/**
 * A collection of values returned by getDomain.
 */
export interface GetDomainResult {
    /**
     * The policy document attached to the domain.
     */
    readonly accessPolicies: string;
    /**
     * Key-value string pairs to specify advanced configuration options.
     */
    readonly advancedOptions: {[key: string]: any};
    /**
     * The Amazon Resource Name (ARN) of the domain.
     */
    readonly arn: string;
    /**
     * Cluster configuration of the domain.
     */
    readonly clusterConfigs: outputs.elasticsearch.GetDomainClusterConfig[];
    /**
     * Domain Amazon Cognito Authentication options for Kibana.
     */
    readonly cognitoOptions: outputs.elasticsearch.GetDomainCognitoOption[];
    /**
     * Status of the creation of the domain.
     */
    readonly created: boolean;
    /**
     * Status of the deletion of the domain.
     */
    readonly deleted: boolean;
    /**
     * Unique identifier for the domain.
     */
    readonly domainId: string;
    readonly domainName: string;
    /**
     * EBS Options for the instances in the domain.
     */
    readonly ebsOptions: outputs.elasticsearch.GetDomainEbsOption[];
    /**
     * ElasticSearch version for the domain.
     */
    readonly elasticsearchVersion: string;
    /**
     * Domain encryption at rest related options.
     */
    readonly encryptionAtRests: outputs.elasticsearch.GetDomainEncryptionAtRest[];
    /**
     * Domain-specific endpoint used to submit index, search, and data upload requests.
     */
    readonly endpoint: string;
    /**
     * Domain-specific endpoint used to access the Kibana application.
     */
    readonly kibanaEndpoint: string;
    /**
     * Domain log publishing related options.
     */
    readonly logPublishingOptions: outputs.elasticsearch.GetDomainLogPublishingOption[];
    /**
     * Domain in transit encryption related options.
     */
    readonly nodeToNodeEncryptions: outputs.elasticsearch.GetDomainNodeToNodeEncryption[];
    /**
     * Status of a configuration change in the domain.
     * * `snapshotOptions` – Domain snapshot related options.
     */
    readonly processing: string;
    readonly snapshotOptions: outputs.elasticsearch.GetDomainSnapshotOption[];
    /**
     * The tags assigned to the domain.
     */
    readonly tags: {[key: string]: any};
    /**
     * VPC Options for private Elasticsearch domains.
     */
    readonly vpcOptions: outputs.elasticsearch.GetDomainVpcOption[];
    /**
     * id is the provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
