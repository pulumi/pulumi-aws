// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { DomainArgs, DomainState } from "./domain";
export type Domain = import("./domain").Domain;
export const Domain: typeof import("./domain").Domain = null as any;
utilities.lazyLoad(exports, ["Domain"], () => require("./domain"));

export { DomainPolicyArgs, DomainPolicyState } from "./domainPolicy";
export type DomainPolicy = import("./domainPolicy").DomainPolicy;
export const DomainPolicy: typeof import("./domainPolicy").DomainPolicy = null as any;
utilities.lazyLoad(exports, ["DomainPolicy"], () => require("./domainPolicy"));

export { DomainSamlOptionsArgs, DomainSamlOptionsState } from "./domainSamlOptions";
export type DomainSamlOptions = import("./domainSamlOptions").DomainSamlOptions;
export const DomainSamlOptions: typeof import("./domainSamlOptions").DomainSamlOptions = null as any;
utilities.lazyLoad(exports, ["DomainSamlOptions"], () => require("./domainSamlOptions"));

export { GetDomainArgs, GetDomainResult, GetDomainOutputArgs } from "./getDomain";
export const getDomain: typeof import("./getDomain").getDomain = null as any;
export const getDomainOutput: typeof import("./getDomain").getDomainOutput = null as any;
utilities.lazyLoad(exports, ["getDomain","getDomainOutput"], () => require("./getDomain"));

export { VpcEndpointArgs, VpcEndpointState } from "./vpcEndpoint";
export type VpcEndpoint = import("./vpcEndpoint").VpcEndpoint;
export const VpcEndpoint: typeof import("./vpcEndpoint").VpcEndpoint = null as any;
utilities.lazyLoad(exports, ["VpcEndpoint"], () => require("./vpcEndpoint"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws:elasticsearch/domain:Domain":
                return new Domain(name, <any>undefined, { urn })
            case "aws:elasticsearch/domainPolicy:DomainPolicy":
                return new DomainPolicy(name, <any>undefined, { urn })
            case "aws:elasticsearch/domainSamlOptions:DomainSamlOptions":
                return new DomainSamlOptions(name, <any>undefined, { urn })
            case "aws:elasticsearch/vpcEndpoint:VpcEndpoint":
                return new VpcEndpoint(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "elasticsearch/domain", _module)
pulumi.runtime.registerResourceModule("aws", "elasticsearch/domainPolicy", _module)
pulumi.runtime.registerResourceModule("aws", "elasticsearch/domainSamlOptions", _module)
pulumi.runtime.registerResourceModule("aws", "elasticsearch/vpcEndpoint", _module)
