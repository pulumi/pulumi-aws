// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AnalyticsApplicationArgs, AnalyticsApplicationState } from "./analyticsApplication";
export type AnalyticsApplication = import("./analyticsApplication").AnalyticsApplication;
export const AnalyticsApplication: typeof import("./analyticsApplication").AnalyticsApplication = null as any;
utilities.lazyLoad(exports, ["AnalyticsApplication"], () => require("./analyticsApplication"));

export { FirehoseDeliveryStreamArgs, FirehoseDeliveryStreamState } from "./firehoseDeliveryStream";
export type FirehoseDeliveryStream = import("./firehoseDeliveryStream").FirehoseDeliveryStream;
export const FirehoseDeliveryStream: typeof import("./firehoseDeliveryStream").FirehoseDeliveryStream = null as any;
utilities.lazyLoad(exports, ["FirehoseDeliveryStream"], () => require("./firehoseDeliveryStream"));

export { GetFirehoseDeliveryStreamArgs, GetFirehoseDeliveryStreamResult, GetFirehoseDeliveryStreamOutputArgs } from "./getFirehoseDeliveryStream";
export const getFirehoseDeliveryStream: typeof import("./getFirehoseDeliveryStream").getFirehoseDeliveryStream = null as any;
export const getFirehoseDeliveryStreamOutput: typeof import("./getFirehoseDeliveryStream").getFirehoseDeliveryStreamOutput = null as any;
utilities.lazyLoad(exports, ["getFirehoseDeliveryStream","getFirehoseDeliveryStreamOutput"], () => require("./getFirehoseDeliveryStream"));

export { GetStreamArgs, GetStreamResult, GetStreamOutputArgs } from "./getStream";
export const getStream: typeof import("./getStream").getStream = null as any;
export const getStreamOutput: typeof import("./getStream").getStreamOutput = null as any;
utilities.lazyLoad(exports, ["getStream","getStreamOutput"], () => require("./getStream"));

export { GetStreamConsumerArgs, GetStreamConsumerResult, GetStreamConsumerOutputArgs } from "./getStreamConsumer";
export const getStreamConsumer: typeof import("./getStreamConsumer").getStreamConsumer = null as any;
export const getStreamConsumerOutput: typeof import("./getStreamConsumer").getStreamConsumerOutput = null as any;
utilities.lazyLoad(exports, ["getStreamConsumer","getStreamConsumerOutput"], () => require("./getStreamConsumer"));

export * from "./kinesisMixins";
export { StreamArgs, StreamState } from "./stream";
export type Stream = import("./stream").Stream;
export const Stream: typeof import("./stream").Stream = null as any;
utilities.lazyLoad(exports, ["Stream"], () => require("./stream"));

export { StreamConsumerArgs, StreamConsumerState } from "./streamConsumer";
export type StreamConsumer = import("./streamConsumer").StreamConsumer;
export const StreamConsumer: typeof import("./streamConsumer").StreamConsumer = null as any;
utilities.lazyLoad(exports, ["StreamConsumer"], () => require("./streamConsumer"));

export { VideoStreamArgs, VideoStreamState } from "./videoStream";
export type VideoStream = import("./videoStream").VideoStream;
export const VideoStream: typeof import("./videoStream").VideoStream = null as any;
utilities.lazyLoad(exports, ["VideoStream"], () => require("./videoStream"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws:kinesis/analyticsApplication:AnalyticsApplication":
                return new AnalyticsApplication(name, <any>undefined, { urn })
            case "aws:kinesis/firehoseDeliveryStream:FirehoseDeliveryStream":
                return new FirehoseDeliveryStream(name, <any>undefined, { urn })
            case "aws:kinesis/stream:Stream":
                return new Stream(name, <any>undefined, { urn })
            case "aws:kinesis/streamConsumer:StreamConsumer":
                return new StreamConsumer(name, <any>undefined, { urn })
            case "aws:kinesis/videoStream:VideoStream":
                return new VideoStream(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "kinesis/analyticsApplication", _module)
pulumi.runtime.registerResourceModule("aws", "kinesis/firehoseDeliveryStream", _module)
pulumi.runtime.registerResourceModule("aws", "kinesis/stream", _module)
pulumi.runtime.registerResourceModule("aws", "kinesis/streamConsumer", _module)
pulumi.runtime.registerResourceModule("aws", "kinesis/videoStream", _module)
