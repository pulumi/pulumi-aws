// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * 
 * ## Example Usage
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const aws_iam_role_role = new aws.iam.Role("role", {
 *     assumeRolePolicy: "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"pinpoint.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n",
 * });
 * const aws_pinpoint_app_app = new aws.pinpoint.App("app", {});
 * const aws_ses_domain_identity_identity = new aws.ses.DomainIdentity("identity", {
 *     domain: "example.com",
 * });
 * const aws_iam_role_policy_role_policy = new aws.iam.RolePolicy("role_policy", {
 *     name: "role_policy",
 *     policy: "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": {\n    \"Action\": [\n      \"mobileanalytics:PutEvents\",\n      \"mobileanalytics:PutItems\"\n    ],\n    \"Effect\": \"Allow\",\n    \"Resource\": [\n      \"*\"\n    ]\n  }\n}\n",
 *     role: aws_iam_role_role.id,
 * });
 * const aws_pinpoint_email_channel_email = new aws.pinpoint.EmailChannel("email", {
 *     applicationId: aws_pinpoint_app_app.applicationId,
 *     fromAddress: "user@example.com",
 *     identity: aws_ses_domain_identity_identity.arn,
 *     roleArn: aws_iam_role_role.arn,
 * });
 * ```
 * 
 */
export class EmailChannel extends pulumi.CustomResource {
    /**
     * Get an existing EmailChannel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EmailChannelState, opts?: pulumi.CustomResourceOptions): EmailChannel {
        return new EmailChannel(name, <any>state, { ...opts, id: id });
    }

    public readonly applicationId: pulumi.Output<string>;
    public readonly enabled: pulumi.Output<boolean | undefined>;
    public readonly fromAddress: pulumi.Output<string>;
    public readonly identity: pulumi.Output<string>;
    public /*out*/ readonly messagesPerSecond: pulumi.Output<number>;
    public readonly roleArn: pulumi.Output<string>;

    /**
     * Create a EmailChannel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EmailChannelArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EmailChannelArgs | EmailChannelState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: EmailChannelState = argsOrState as EmailChannelState | undefined;
            inputs["applicationId"] = state ? state.applicationId : undefined;
            inputs["enabled"] = state ? state.enabled : undefined;
            inputs["fromAddress"] = state ? state.fromAddress : undefined;
            inputs["identity"] = state ? state.identity : undefined;
            inputs["messagesPerSecond"] = state ? state.messagesPerSecond : undefined;
            inputs["roleArn"] = state ? state.roleArn : undefined;
        } else {
            const args = argsOrState as EmailChannelArgs | undefined;
            if (!args || args.applicationId === undefined) {
                throw new Error("Missing required property 'applicationId'");
            }
            if (!args || args.fromAddress === undefined) {
                throw new Error("Missing required property 'fromAddress'");
            }
            if (!args || args.identity === undefined) {
                throw new Error("Missing required property 'identity'");
            }
            if (!args || args.roleArn === undefined) {
                throw new Error("Missing required property 'roleArn'");
            }
            inputs["applicationId"] = args ? args.applicationId : undefined;
            inputs["enabled"] = args ? args.enabled : undefined;
            inputs["fromAddress"] = args ? args.fromAddress : undefined;
            inputs["identity"] = args ? args.identity : undefined;
            inputs["roleArn"] = args ? args.roleArn : undefined;
            inputs["messagesPerSecond"] = undefined /*out*/;
        }
        super("aws:pinpoint/emailChannel:EmailChannel", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EmailChannel resources.
 */
export interface EmailChannelState {
    readonly applicationId?: pulumi.Input<string>;
    readonly enabled?: pulumi.Input<boolean>;
    readonly fromAddress?: pulumi.Input<string>;
    readonly identity?: pulumi.Input<string>;
    readonly messagesPerSecond?: pulumi.Input<number>;
    readonly roleArn?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EmailChannel resource.
 */
export interface EmailChannelArgs {
    readonly applicationId: pulumi.Input<string>;
    readonly enabled?: pulumi.Input<boolean>;
    readonly fromAddress: pulumi.Input<string>;
    readonly identity: pulumi.Input<string>;
    readonly roleArn: pulumi.Input<string>;
}
