// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use the `aws.pinpoint.SmsChannel` resource to manage Pinpoint SMS Channels.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const app = new aws.pinpoint.App("app", {});
 * const sms = new aws.pinpoint.SmsChannel("sms", {applicationId: app.applicationId});
 * ```
 *
 * ## Import
 *
 * terraform import {
 *
 *  to = aws_pinpoint_sms_channel.sms
 *
 *  id = "application-id" } Using `pulumi import`, import the Pinpoint SMS Channel using the `application_id`. For exampleconsole % pulumi import aws_pinpoint_sms_channel.sms application-id
 */
export class SmsChannel extends pulumi.CustomResource {
    /**
     * Get an existing SmsChannel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SmsChannelState, opts?: pulumi.CustomResourceOptions): SmsChannel {
        return new SmsChannel(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:pinpoint/smsChannel:SmsChannel';

    /**
     * Returns true if the given object is an instance of SmsChannel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SmsChannel {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SmsChannel.__pulumiType;
    }

    /**
     * ID of the application.
     */
    public readonly applicationId!: pulumi.Output<string>;
    /**
     * Whether the channel is enabled or disabled. By default, it is set to `true`.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * Maximum number of promotional messages that can be sent per second.
     */
    public /*out*/ readonly promotionalMessagesPerSecond!: pulumi.Output<number>;
    /**
     * Identifier of the sender for your messages.
     */
    public readonly senderId!: pulumi.Output<string | undefined>;
    /**
     * Short Code registered with the phone provider.
     */
    public readonly shortCode!: pulumi.Output<string | undefined>;
    /**
     * Maximum number of transactional messages per second that can be sent.
     */
    public /*out*/ readonly transactionalMessagesPerSecond!: pulumi.Output<number>;

    /**
     * Create a SmsChannel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SmsChannelArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SmsChannelArgs | SmsChannelState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SmsChannelState | undefined;
            resourceInputs["applicationId"] = state ? state.applicationId : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["promotionalMessagesPerSecond"] = state ? state.promotionalMessagesPerSecond : undefined;
            resourceInputs["senderId"] = state ? state.senderId : undefined;
            resourceInputs["shortCode"] = state ? state.shortCode : undefined;
            resourceInputs["transactionalMessagesPerSecond"] = state ? state.transactionalMessagesPerSecond : undefined;
        } else {
            const args = argsOrState as SmsChannelArgs | undefined;
            if ((!args || args.applicationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationId'");
            }
            resourceInputs["applicationId"] = args ? args.applicationId : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["senderId"] = args ? args.senderId : undefined;
            resourceInputs["shortCode"] = args ? args.shortCode : undefined;
            resourceInputs["promotionalMessagesPerSecond"] = undefined /*out*/;
            resourceInputs["transactionalMessagesPerSecond"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SmsChannel.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SmsChannel resources.
 */
export interface SmsChannelState {
    /**
     * ID of the application.
     */
    applicationId?: pulumi.Input<string>;
    /**
     * Whether the channel is enabled or disabled. By default, it is set to `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Maximum number of promotional messages that can be sent per second.
     */
    promotionalMessagesPerSecond?: pulumi.Input<number>;
    /**
     * Identifier of the sender for your messages.
     */
    senderId?: pulumi.Input<string>;
    /**
     * Short Code registered with the phone provider.
     */
    shortCode?: pulumi.Input<string>;
    /**
     * Maximum number of transactional messages per second that can be sent.
     */
    transactionalMessagesPerSecond?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a SmsChannel resource.
 */
export interface SmsChannelArgs {
    /**
     * ID of the application.
     */
    applicationId: pulumi.Input<string>;
    /**
     * Whether the channel is enabled or disabled. By default, it is set to `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Identifier of the sender for your messages.
     */
    senderId?: pulumi.Input<string>;
    /**
     * Short Code registered with the phone provider.
     */
    shortCode?: pulumi.Input<string>;
}
