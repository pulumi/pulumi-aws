// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages an AWS End User Messaging SMS opt-out list.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.pinpoint.Smsvoicev2OptOutList("example", {name: "example-opt-out-list"});
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import opt-out lists using the `name`. For example:
 *
 * ```sh
 * $ pulumi import aws:pinpoint/smsvoicev2OptOutList:Smsvoicev2OptOutList example example-opt-out-list
 * ```
 */
export class Smsvoicev2OptOutList extends pulumi.CustomResource {
    /**
     * Get an existing Smsvoicev2OptOutList resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Smsvoicev2OptOutListState, opts?: pulumi.CustomResourceOptions): Smsvoicev2OptOutList {
        return new Smsvoicev2OptOutList(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:pinpoint/smsvoicev2OptOutList:Smsvoicev2OptOutList';

    /**
     * Returns true if the given object is an instance of Smsvoicev2OptOutList.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Smsvoicev2OptOutList {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Smsvoicev2OptOutList.__pulumiType;
    }

    /**
     * ARN of the opt-out list.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The name of the opt-out list.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     *
     * @deprecated Please use `tags` instead.
     */
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a Smsvoicev2OptOutList resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: Smsvoicev2OptOutListArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Smsvoicev2OptOutListArgs | Smsvoicev2OptOutListState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Smsvoicev2OptOutListState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
        } else {
            const args = argsOrState as Smsvoicev2OptOutListArgs | undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Smsvoicev2OptOutList.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Smsvoicev2OptOutList resources.
 */
export interface Smsvoicev2OptOutListState {
    /**
     * ARN of the opt-out list.
     */
    arn?: pulumi.Input<string>;
    /**
     * The name of the opt-out list.
     */
    name?: pulumi.Input<string>;
    /**
     * Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     *
     * @deprecated Please use `tags` instead.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a Smsvoicev2OptOutList resource.
 */
export interface Smsvoicev2OptOutListArgs {
    /**
     * The name of the opt-out list.
     */
    name?: pulumi.Input<string>;
    /**
     * Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
