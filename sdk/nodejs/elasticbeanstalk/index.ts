// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ApplicationArgs, ApplicationState } from "./application";
export type Application = import("./application").Application;
export const Application: typeof import("./application").Application = null as any;

export { ApplicationVersionArgs, ApplicationVersionState } from "./applicationVersion";
export type ApplicationVersion = import("./applicationVersion").ApplicationVersion;
export const ApplicationVersion: typeof import("./applicationVersion").ApplicationVersion = null as any;

export { ConfigurationTemplateArgs, ConfigurationTemplateState } from "./configurationTemplate";
export type ConfigurationTemplate = import("./configurationTemplate").ConfigurationTemplate;
export const ConfigurationTemplate: typeof import("./configurationTemplate").ConfigurationTemplate = null as any;

export { EnvironmentArgs, EnvironmentState } from "./environment";
export type Environment = import("./environment").Environment;
export const Environment: typeof import("./environment").Environment = null as any;

export { GetApplicationArgs, GetApplicationResult, GetApplicationOutputArgs } from "./getApplication";
export const getApplication: typeof import("./getApplication").getApplication = null as any;
export const getApplicationOutput: typeof import("./getApplication").getApplicationOutput = null as any;

export { GetHostedZoneArgs, GetHostedZoneResult, GetHostedZoneOutputArgs } from "./getHostedZone";
export const getHostedZone: typeof import("./getHostedZone").getHostedZone = null as any;
export const getHostedZoneOutput: typeof import("./getHostedZone").getHostedZoneOutput = null as any;

export { GetSolutionStackArgs, GetSolutionStackResult, GetSolutionStackOutputArgs } from "./getSolutionStack";
export const getSolutionStack: typeof import("./getSolutionStack").getSolutionStack = null as any;
export const getSolutionStackOutput: typeof import("./getSolutionStack").getSolutionStackOutput = null as any;

utilities.lazyLoad(exports, ["Application"], () => require("./application"));
utilities.lazyLoad(exports, ["ApplicationVersion"], () => require("./applicationVersion"));
utilities.lazyLoad(exports, ["ConfigurationTemplate"], () => require("./configurationTemplate"));
utilities.lazyLoad(exports, ["Environment"], () => require("./environment"));
utilities.lazyLoad(exports, ["getApplication","getApplicationOutput"], () => require("./getApplication"));
utilities.lazyLoad(exports, ["getHostedZone","getHostedZoneOutput"], () => require("./getHostedZone"));
utilities.lazyLoad(exports, ["getSolutionStack","getSolutionStackOutput"], () => require("./getSolutionStack"));

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws:elasticbeanstalk/application:Application":
                return new Application(name, <any>undefined, { urn })
            case "aws:elasticbeanstalk/applicationVersion:ApplicationVersion":
                return new ApplicationVersion(name, <any>undefined, { urn })
            case "aws:elasticbeanstalk/configurationTemplate:ConfigurationTemplate":
                return new ConfigurationTemplate(name, <any>undefined, { urn })
            case "aws:elasticbeanstalk/environment:Environment":
                return new Environment(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "elasticbeanstalk/application", _module)
pulumi.runtime.registerResourceModule("aws", "elasticbeanstalk/applicationVersion", _module)
pulumi.runtime.registerResourceModule("aws", "elasticbeanstalk/configurationTemplate", _module)
pulumi.runtime.registerResourceModule("aws", "elasticbeanstalk/environment", _module)
