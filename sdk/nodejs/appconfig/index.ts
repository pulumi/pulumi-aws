// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ApplicationArgs, ApplicationState } from "./application";
export type Application = import("./application").Application;
export const Application: typeof import("./application").Application = null as any;

export { ConfigurationProfileArgs, ConfigurationProfileState } from "./configurationProfile";
export type ConfigurationProfile = import("./configurationProfile").ConfigurationProfile;
export const ConfigurationProfile: typeof import("./configurationProfile").ConfigurationProfile = null as any;

export { DeploymentArgs, DeploymentState } from "./deployment";
export type Deployment = import("./deployment").Deployment;
export const Deployment: typeof import("./deployment").Deployment = null as any;

export { DeploymentStrategyArgs, DeploymentStrategyState } from "./deploymentStrategy";
export type DeploymentStrategy = import("./deploymentStrategy").DeploymentStrategy;
export const DeploymentStrategy: typeof import("./deploymentStrategy").DeploymentStrategy = null as any;

export { EnvironmentArgs, EnvironmentState } from "./environment";
export type Environment = import("./environment").Environment;
export const Environment: typeof import("./environment").Environment = null as any;

export { EventIntegrationArgs, EventIntegrationState } from "./eventIntegration";
export type EventIntegration = import("./eventIntegration").EventIntegration;
export const EventIntegration: typeof import("./eventIntegration").EventIntegration = null as any;

export { GetConfigurationProfileArgs, GetConfigurationProfileResult, GetConfigurationProfileOutputArgs } from "./getConfigurationProfile";
export const getConfigurationProfile: typeof import("./getConfigurationProfile").getConfigurationProfile = null as any;
export const getConfigurationProfileOutput: typeof import("./getConfigurationProfile").getConfigurationProfileOutput = null as any;

export { GetConfigurationProfilesArgs, GetConfigurationProfilesResult, GetConfigurationProfilesOutputArgs } from "./getConfigurationProfiles";
export const getConfigurationProfiles: typeof import("./getConfigurationProfiles").getConfigurationProfiles = null as any;
export const getConfigurationProfilesOutput: typeof import("./getConfigurationProfiles").getConfigurationProfilesOutput = null as any;

export { GetEnvironmentArgs, GetEnvironmentResult, GetEnvironmentOutputArgs } from "./getEnvironment";
export const getEnvironment: typeof import("./getEnvironment").getEnvironment = null as any;
export const getEnvironmentOutput: typeof import("./getEnvironment").getEnvironmentOutput = null as any;

export { GetEnvironmentsArgs, GetEnvironmentsResult, GetEnvironmentsOutputArgs } from "./getEnvironments";
export const getEnvironments: typeof import("./getEnvironments").getEnvironments = null as any;
export const getEnvironmentsOutput: typeof import("./getEnvironments").getEnvironmentsOutput = null as any;

export { HostedConfigurationVersionArgs, HostedConfigurationVersionState } from "./hostedConfigurationVersion";
export type HostedConfigurationVersion = import("./hostedConfigurationVersion").HostedConfigurationVersion;
export const HostedConfigurationVersion: typeof import("./hostedConfigurationVersion").HostedConfigurationVersion = null as any;

utilities.lazyLoad(exports, ["Application"], () => require("./application"));
utilities.lazyLoad(exports, ["ConfigurationProfile"], () => require("./configurationProfile"));
utilities.lazyLoad(exports, ["Deployment"], () => require("./deployment"));
utilities.lazyLoad(exports, ["DeploymentStrategy"], () => require("./deploymentStrategy"));
utilities.lazyLoad(exports, ["Environment"], () => require("./environment"));
utilities.lazyLoad(exports, ["EventIntegration"], () => require("./eventIntegration"));
utilities.lazyLoad(exports, ["getConfigurationProfile","getConfigurationProfileOutput"], () => require("./getConfigurationProfile"));
utilities.lazyLoad(exports, ["getConfigurationProfiles","getConfigurationProfilesOutput"], () => require("./getConfigurationProfiles"));
utilities.lazyLoad(exports, ["getEnvironment","getEnvironmentOutput"], () => require("./getEnvironment"));
utilities.lazyLoad(exports, ["getEnvironments","getEnvironmentsOutput"], () => require("./getEnvironments"));
utilities.lazyLoad(exports, ["HostedConfigurationVersion"], () => require("./hostedConfigurationVersion"));

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws:appconfig/application:Application":
                return new Application(name, <any>undefined, { urn })
            case "aws:appconfig/configurationProfile:ConfigurationProfile":
                return new ConfigurationProfile(name, <any>undefined, { urn })
            case "aws:appconfig/deployment:Deployment":
                return new Deployment(name, <any>undefined, { urn })
            case "aws:appconfig/deploymentStrategy:DeploymentStrategy":
                return new DeploymentStrategy(name, <any>undefined, { urn })
            case "aws:appconfig/environment:Environment":
                return new Environment(name, <any>undefined, { urn })
            case "aws:appconfig/eventIntegration:EventIntegration":
                return new EventIntegration(name, <any>undefined, { urn })
            case "aws:appconfig/hostedConfigurationVersion:HostedConfigurationVersion":
                return new HostedConfigurationVersion(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "appconfig/application", _module)
pulumi.runtime.registerResourceModule("aws", "appconfig/configurationProfile", _module)
pulumi.runtime.registerResourceModule("aws", "appconfig/deployment", _module)
pulumi.runtime.registerResourceModule("aws", "appconfig/deploymentStrategy", _module)
pulumi.runtime.registerResourceModule("aws", "appconfig/environment", _module)
pulumi.runtime.registerResourceModule("aws", "appconfig/eventIntegration", _module)
pulumi.runtime.registerResourceModule("aws", "appconfig/hostedConfigurationVersion", _module)
