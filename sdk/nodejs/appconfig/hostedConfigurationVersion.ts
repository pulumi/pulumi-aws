// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class HostedConfigurationVersion extends pulumi.CustomResource {
    /**
     * Get an existing HostedConfigurationVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HostedConfigurationVersionState, opts?: pulumi.CustomResourceOptions): HostedConfigurationVersion {
        return new HostedConfigurationVersion(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:appconfig/hostedConfigurationVersion:HostedConfigurationVersion';

    /**
     * Returns true if the given object is an instance of HostedConfigurationVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HostedConfigurationVersion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HostedConfigurationVersion.__pulumiType;
    }

    public readonly applicationId!: pulumi.Output<string>;
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly configurationProfileId!: pulumi.Output<string>;
    public readonly content!: pulumi.Output<string>;
    public readonly contentType!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public /*out*/ readonly versionNumber!: pulumi.Output<number>;

    /**
     * Create a HostedConfigurationVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HostedConfigurationVersionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HostedConfigurationVersionArgs | HostedConfigurationVersionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HostedConfigurationVersionState | undefined;
            resourceInputs["applicationId"] = state ? state.applicationId : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["configurationProfileId"] = state ? state.configurationProfileId : undefined;
            resourceInputs["content"] = state ? state.content : undefined;
            resourceInputs["contentType"] = state ? state.contentType : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["versionNumber"] = state ? state.versionNumber : undefined;
        } else {
            const args = argsOrState as HostedConfigurationVersionArgs | undefined;
            if ((!args || args.applicationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationId'");
            }
            if ((!args || args.configurationProfileId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configurationProfileId'");
            }
            if ((!args || args.content === undefined) && !opts.urn) {
                throw new Error("Missing required property 'content'");
            }
            if ((!args || args.contentType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'contentType'");
            }
            resourceInputs["applicationId"] = args ? args.applicationId : undefined;
            resourceInputs["configurationProfileId"] = args ? args.configurationProfileId : undefined;
            resourceInputs["content"] = args?.content ? pulumi.secret(args.content) : undefined;
            resourceInputs["contentType"] = args ? args.contentType : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["versionNumber"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["content"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(HostedConfigurationVersion.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering HostedConfigurationVersion resources.
 */
export interface HostedConfigurationVersionState {
    applicationId?: pulumi.Input<string>;
    arn?: pulumi.Input<string>;
    configurationProfileId?: pulumi.Input<string>;
    content?: pulumi.Input<string>;
    contentType?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    versionNumber?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a HostedConfigurationVersion resource.
 */
export interface HostedConfigurationVersionArgs {
    applicationId: pulumi.Input<string>;
    configurationProfileId: pulumi.Input<string>;
    content: pulumi.Input<string>;
    contentType: pulumi.Input<string>;
    description?: pulumi.Input<string>;
}
