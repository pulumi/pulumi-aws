// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export class BucketV2 extends pulumi.CustomResource {
    /**
     * Get an existing BucketV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BucketV2State, opts?: pulumi.CustomResourceOptions): BucketV2 {
        return new BucketV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:s3/bucketV2:BucketV2';

    /**
     * Returns true if the given object is an instance of BucketV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BucketV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BucketV2.__pulumiType;
    }

    /**
     * @deprecated Use the aws_s3_bucket_accelerate_configuration resource instead
     */
    public readonly accelerationStatus!: pulumi.Output<string>;
    /**
     * @deprecated Use the aws_s3_bucket_acl resource instead
     */
    public readonly acl!: pulumi.Output<string>;
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly bucket!: pulumi.Output<string>;
    public /*out*/ readonly bucketDomainName!: pulumi.Output<string>;
    public readonly bucketPrefix!: pulumi.Output<string | undefined>;
    public /*out*/ readonly bucketRegionalDomainName!: pulumi.Output<string>;
    /**
     * @deprecated Use the aws_s3_bucket_cors_configuration resource instead
     */
    public readonly corsRules!: pulumi.Output<outputs.s3.BucketV2CorsRule[]>;
    public readonly forceDestroy!: pulumi.Output<boolean | undefined>;
    /**
     * @deprecated Use the aws_s3_bucket_acl resource instead
     */
    public readonly grants!: pulumi.Output<outputs.s3.BucketV2Grant[]>;
    public /*out*/ readonly hostedZoneId!: pulumi.Output<string>;
    /**
     * @deprecated Use the aws_s3_bucket_lifecycle_configuration resource instead
     */
    public readonly lifecycleRules!: pulumi.Output<outputs.s3.BucketV2LifecycleRule[]>;
    /**
     * @deprecated Use the aws_s3_bucket_logging resource instead
     */
    public readonly loggings!: pulumi.Output<outputs.s3.BucketV2Logging[]>;
    /**
     * @deprecated Use the top-level parameter object_lock_enabled and the aws_s3_bucket_object_lock_configuration resource instead
     */
    public readonly objectLockConfiguration!: pulumi.Output<outputs.s3.BucketV2ObjectLockConfiguration>;
    public readonly objectLockEnabled!: pulumi.Output<boolean>;
    /**
     * @deprecated Use the aws_s3_bucket_policy resource instead
     */
    public readonly policy!: pulumi.Output<string>;
    public /*out*/ readonly region!: pulumi.Output<string>;
    /**
     * @deprecated Use the aws_s3_bucket_replication_configuration resource instead
     */
    public readonly replicationConfigurations!: pulumi.Output<outputs.s3.BucketV2ReplicationConfiguration[]>;
    /**
     * @deprecated Use the aws_s3_bucket_request_payment_configuration resource instead
     */
    public readonly requestPayer!: pulumi.Output<string>;
    /**
     * @deprecated Use the aws_s3_bucket_server_side_encryption_configuration resource instead
     */
    public readonly serverSideEncryptionConfigurations!: pulumi.Output<outputs.s3.BucketV2ServerSideEncryptionConfiguration[]>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    /**
     * @deprecated Use the aws_s3_bucket_versioning resource instead
     */
    public readonly versionings!: pulumi.Output<outputs.s3.BucketV2Versioning[]>;
    /**
     * @deprecated Use the aws_s3_bucket_website_configuration resource
     */
    public /*out*/ readonly websiteDomain!: pulumi.Output<string>;
    /**
     * @deprecated Use the aws_s3_bucket_website_configuration resource
     */
    public /*out*/ readonly websiteEndpoint!: pulumi.Output<string>;
    /**
     * @deprecated Use the aws_s3_bucket_website_configuration resource instead
     */
    public readonly websites!: pulumi.Output<outputs.s3.BucketV2Website[]>;

    /**
     * Create a BucketV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: BucketV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BucketV2Args | BucketV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BucketV2State | undefined;
            resourceInputs["accelerationStatus"] = state ? state.accelerationStatus : undefined;
            resourceInputs["acl"] = state ? state.acl : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["bucket"] = state ? state.bucket : undefined;
            resourceInputs["bucketDomainName"] = state ? state.bucketDomainName : undefined;
            resourceInputs["bucketPrefix"] = state ? state.bucketPrefix : undefined;
            resourceInputs["bucketRegionalDomainName"] = state ? state.bucketRegionalDomainName : undefined;
            resourceInputs["corsRules"] = state ? state.corsRules : undefined;
            resourceInputs["forceDestroy"] = state ? state.forceDestroy : undefined;
            resourceInputs["grants"] = state ? state.grants : undefined;
            resourceInputs["hostedZoneId"] = state ? state.hostedZoneId : undefined;
            resourceInputs["lifecycleRules"] = state ? state.lifecycleRules : undefined;
            resourceInputs["loggings"] = state ? state.loggings : undefined;
            resourceInputs["objectLockConfiguration"] = state ? state.objectLockConfiguration : undefined;
            resourceInputs["objectLockEnabled"] = state ? state.objectLockEnabled : undefined;
            resourceInputs["policy"] = state ? state.policy : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["replicationConfigurations"] = state ? state.replicationConfigurations : undefined;
            resourceInputs["requestPayer"] = state ? state.requestPayer : undefined;
            resourceInputs["serverSideEncryptionConfigurations"] = state ? state.serverSideEncryptionConfigurations : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["versionings"] = state ? state.versionings : undefined;
            resourceInputs["websiteDomain"] = state ? state.websiteDomain : undefined;
            resourceInputs["websiteEndpoint"] = state ? state.websiteEndpoint : undefined;
            resourceInputs["websites"] = state ? state.websites : undefined;
        } else {
            const args = argsOrState as BucketV2Args | undefined;
            resourceInputs["accelerationStatus"] = args ? args.accelerationStatus : undefined;
            resourceInputs["acl"] = args ? args.acl : undefined;
            resourceInputs["bucket"] = args ? args.bucket : undefined;
            resourceInputs["bucketPrefix"] = args ? args.bucketPrefix : undefined;
            resourceInputs["corsRules"] = args ? args.corsRules : undefined;
            resourceInputs["forceDestroy"] = args ? args.forceDestroy : undefined;
            resourceInputs["grants"] = args ? args.grants : undefined;
            resourceInputs["lifecycleRules"] = args ? args.lifecycleRules : undefined;
            resourceInputs["loggings"] = args ? args.loggings : undefined;
            resourceInputs["objectLockConfiguration"] = args ? args.objectLockConfiguration : undefined;
            resourceInputs["objectLockEnabled"] = args ? args.objectLockEnabled : undefined;
            resourceInputs["policy"] = args ? args.policy : undefined;
            resourceInputs["replicationConfigurations"] = args ? args.replicationConfigurations : undefined;
            resourceInputs["requestPayer"] = args ? args.requestPayer : undefined;
            resourceInputs["serverSideEncryptionConfigurations"] = args ? args.serverSideEncryptionConfigurations : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["versionings"] = args ? args.versionings : undefined;
            resourceInputs["websites"] = args ? args.websites : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["bucketDomainName"] = undefined /*out*/;
            resourceInputs["bucketRegionalDomainName"] = undefined /*out*/;
            resourceInputs["hostedZoneId"] = undefined /*out*/;
            resourceInputs["region"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
            resourceInputs["websiteDomain"] = undefined /*out*/;
            resourceInputs["websiteEndpoint"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "aws:s3/bucket:Bucket" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(BucketV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BucketV2 resources.
 */
export interface BucketV2State {
    /**
     * @deprecated Use the aws_s3_bucket_accelerate_configuration resource instead
     */
    accelerationStatus?: pulumi.Input<string>;
    /**
     * @deprecated Use the aws_s3_bucket_acl resource instead
     */
    acl?: pulumi.Input<string>;
    arn?: pulumi.Input<string>;
    bucket?: pulumi.Input<string>;
    bucketDomainName?: pulumi.Input<string>;
    bucketPrefix?: pulumi.Input<string>;
    bucketRegionalDomainName?: pulumi.Input<string>;
    /**
     * @deprecated Use the aws_s3_bucket_cors_configuration resource instead
     */
    corsRules?: pulumi.Input<pulumi.Input<inputs.s3.BucketV2CorsRule>[]>;
    forceDestroy?: pulumi.Input<boolean>;
    /**
     * @deprecated Use the aws_s3_bucket_acl resource instead
     */
    grants?: pulumi.Input<pulumi.Input<inputs.s3.BucketV2Grant>[]>;
    hostedZoneId?: pulumi.Input<string>;
    /**
     * @deprecated Use the aws_s3_bucket_lifecycle_configuration resource instead
     */
    lifecycleRules?: pulumi.Input<pulumi.Input<inputs.s3.BucketV2LifecycleRule>[]>;
    /**
     * @deprecated Use the aws_s3_bucket_logging resource instead
     */
    loggings?: pulumi.Input<pulumi.Input<inputs.s3.BucketV2Logging>[]>;
    /**
     * @deprecated Use the top-level parameter object_lock_enabled and the aws_s3_bucket_object_lock_configuration resource instead
     */
    objectLockConfiguration?: pulumi.Input<inputs.s3.BucketV2ObjectLockConfiguration>;
    objectLockEnabled?: pulumi.Input<boolean>;
    /**
     * @deprecated Use the aws_s3_bucket_policy resource instead
     */
    policy?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    /**
     * @deprecated Use the aws_s3_bucket_replication_configuration resource instead
     */
    replicationConfigurations?: pulumi.Input<pulumi.Input<inputs.s3.BucketV2ReplicationConfiguration>[]>;
    /**
     * @deprecated Use the aws_s3_bucket_request_payment_configuration resource instead
     */
    requestPayer?: pulumi.Input<string>;
    /**
     * @deprecated Use the aws_s3_bucket_server_side_encryption_configuration resource instead
     */
    serverSideEncryptionConfigurations?: pulumi.Input<pulumi.Input<inputs.s3.BucketV2ServerSideEncryptionConfiguration>[]>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * @deprecated Use the aws_s3_bucket_versioning resource instead
     */
    versionings?: pulumi.Input<pulumi.Input<inputs.s3.BucketV2Versioning>[]>;
    /**
     * @deprecated Use the aws_s3_bucket_website_configuration resource
     */
    websiteDomain?: pulumi.Input<string>;
    /**
     * @deprecated Use the aws_s3_bucket_website_configuration resource
     */
    websiteEndpoint?: pulumi.Input<string>;
    /**
     * @deprecated Use the aws_s3_bucket_website_configuration resource instead
     */
    websites?: pulumi.Input<pulumi.Input<inputs.s3.BucketV2Website>[]>;
}

/**
 * The set of arguments for constructing a BucketV2 resource.
 */
export interface BucketV2Args {
    /**
     * @deprecated Use the aws_s3_bucket_accelerate_configuration resource instead
     */
    accelerationStatus?: pulumi.Input<string>;
    /**
     * @deprecated Use the aws_s3_bucket_acl resource instead
     */
    acl?: pulumi.Input<string>;
    bucket?: pulumi.Input<string>;
    bucketPrefix?: pulumi.Input<string>;
    /**
     * @deprecated Use the aws_s3_bucket_cors_configuration resource instead
     */
    corsRules?: pulumi.Input<pulumi.Input<inputs.s3.BucketV2CorsRule>[]>;
    forceDestroy?: pulumi.Input<boolean>;
    /**
     * @deprecated Use the aws_s3_bucket_acl resource instead
     */
    grants?: pulumi.Input<pulumi.Input<inputs.s3.BucketV2Grant>[]>;
    /**
     * @deprecated Use the aws_s3_bucket_lifecycle_configuration resource instead
     */
    lifecycleRules?: pulumi.Input<pulumi.Input<inputs.s3.BucketV2LifecycleRule>[]>;
    /**
     * @deprecated Use the aws_s3_bucket_logging resource instead
     */
    loggings?: pulumi.Input<pulumi.Input<inputs.s3.BucketV2Logging>[]>;
    /**
     * @deprecated Use the top-level parameter object_lock_enabled and the aws_s3_bucket_object_lock_configuration resource instead
     */
    objectLockConfiguration?: pulumi.Input<inputs.s3.BucketV2ObjectLockConfiguration>;
    objectLockEnabled?: pulumi.Input<boolean>;
    /**
     * @deprecated Use the aws_s3_bucket_policy resource instead
     */
    policy?: pulumi.Input<string>;
    /**
     * @deprecated Use the aws_s3_bucket_replication_configuration resource instead
     */
    replicationConfigurations?: pulumi.Input<pulumi.Input<inputs.s3.BucketV2ReplicationConfiguration>[]>;
    /**
     * @deprecated Use the aws_s3_bucket_request_payment_configuration resource instead
     */
    requestPayer?: pulumi.Input<string>;
    /**
     * @deprecated Use the aws_s3_bucket_server_side_encryption_configuration resource instead
     */
    serverSideEncryptionConfigurations?: pulumi.Input<pulumi.Input<inputs.s3.BucketV2ServerSideEncryptionConfiguration>[]>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * @deprecated Use the aws_s3_bucket_versioning resource instead
     */
    versionings?: pulumi.Input<pulumi.Input<inputs.s3.BucketV2Versioning>[]>;
    /**
     * @deprecated Use the aws_s3_bucket_website_configuration resource instead
     */
    websites?: pulumi.Input<pulumi.Input<inputs.s3.BucketV2Website>[]>;
}
