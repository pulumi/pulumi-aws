// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export class BucketLifecycleConfigurationV2 extends pulumi.CustomResource {
    /**
     * Get an existing BucketLifecycleConfigurationV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BucketLifecycleConfigurationV2State, opts?: pulumi.CustomResourceOptions): BucketLifecycleConfigurationV2 {
        return new BucketLifecycleConfigurationV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:s3/bucketLifecycleConfigurationV2:BucketLifecycleConfigurationV2';

    /**
     * Returns true if the given object is an instance of BucketLifecycleConfigurationV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BucketLifecycleConfigurationV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BucketLifecycleConfigurationV2.__pulumiType;
    }

    public readonly bucket!: pulumi.Output<string>;
    public readonly expectedBucketOwner!: pulumi.Output<string | undefined>;
    public readonly rules!: pulumi.Output<outputs.s3.BucketLifecycleConfigurationV2Rule[]>;

    /**
     * Create a BucketLifecycleConfigurationV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BucketLifecycleConfigurationV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BucketLifecycleConfigurationV2Args | BucketLifecycleConfigurationV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BucketLifecycleConfigurationV2State | undefined;
            resourceInputs["bucket"] = state ? state.bucket : undefined;
            resourceInputs["expectedBucketOwner"] = state ? state.expectedBucketOwner : undefined;
            resourceInputs["rules"] = state ? state.rules : undefined;
        } else {
            const args = argsOrState as BucketLifecycleConfigurationV2Args | undefined;
            if ((!args || args.bucket === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bucket'");
            }
            if ((!args || args.rules === undefined) && !opts.urn) {
                throw new Error("Missing required property 'rules'");
            }
            resourceInputs["bucket"] = args ? args.bucket : undefined;
            resourceInputs["expectedBucketOwner"] = args ? args.expectedBucketOwner : undefined;
            resourceInputs["rules"] = args ? args.rules : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BucketLifecycleConfigurationV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BucketLifecycleConfigurationV2 resources.
 */
export interface BucketLifecycleConfigurationV2State {
    bucket?: pulumi.Input<string>;
    expectedBucketOwner?: pulumi.Input<string>;
    rules?: pulumi.Input<pulumi.Input<inputs.s3.BucketLifecycleConfigurationV2Rule>[]>;
}

/**
 * The set of arguments for constructing a BucketLifecycleConfigurationV2 resource.
 */
export interface BucketLifecycleConfigurationV2Args {
    bucket: pulumi.Input<string>;
    expectedBucketOwner?: pulumi.Input<string>;
    rules: pulumi.Input<pulumi.Input<inputs.s3.BucketLifecycleConfigurationV2Rule>[]>;
}
