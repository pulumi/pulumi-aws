// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Provides an independent configuration resource for S3 bucket [replication configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html).
 *
 * > **NOTE:** S3 Buckets only support a single replication configuration. Declaring multiple `aws.s3.BucketReplicationConfig` resources to the same S3 Bucket will cause a perpetual difference in configuration.
 *
 * ## Example Usage
 *
 * ## Import
 *
 * Using `pulumi import`, import S3 bucket replication configuration using the `bucket`. For example:
 *
 * ```sh
 *  $ pulumi import aws:s3/bucketReplicationConfig:BucketReplicationConfig replication bucket-name
 * ```
 */
export class BucketReplicationConfig extends pulumi.CustomResource {
    /**
     * Get an existing BucketReplicationConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BucketReplicationConfigState, opts?: pulumi.CustomResourceOptions): BucketReplicationConfig {
        return new BucketReplicationConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:s3/bucketReplicationConfig:BucketReplicationConfig';

    /**
     * Returns true if the given object is an instance of BucketReplicationConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BucketReplicationConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BucketReplicationConfig.__pulumiType;
    }

    /**
     * Name of the source S3 bucket you want Amazon S3 to monitor.
     */
    public readonly bucket!: pulumi.Output<string>;
    /**
     * ARN of the IAM role for Amazon S3 to assume when replicating the objects.
     */
    public readonly role!: pulumi.Output<string>;
    /**
     * List of configuration blocks describing the rules managing the replication. See below.
     */
    public readonly rules!: pulumi.Output<outputs.s3.BucketReplicationConfigRule[]>;
    /**
     * Token to allow replication to be enabled on an Object Lock-enabled bucket. You must contact AWS support for the bucket's "Object Lock token".
     * For more details, see [Using S3 Object Lock with replication](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-managing.html#object-lock-managing-replication).
     */
    public readonly token!: pulumi.Output<string | undefined>;

    /**
     * Create a BucketReplicationConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BucketReplicationConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BucketReplicationConfigArgs | BucketReplicationConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BucketReplicationConfigState | undefined;
            resourceInputs["bucket"] = state ? state.bucket : undefined;
            resourceInputs["role"] = state ? state.role : undefined;
            resourceInputs["rules"] = state ? state.rules : undefined;
            resourceInputs["token"] = state ? state.token : undefined;
        } else {
            const args = argsOrState as BucketReplicationConfigArgs | undefined;
            if ((!args || args.bucket === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bucket'");
            }
            if ((!args || args.role === undefined) && !opts.urn) {
                throw new Error("Missing required property 'role'");
            }
            if ((!args || args.rules === undefined) && !opts.urn) {
                throw new Error("Missing required property 'rules'");
            }
            resourceInputs["bucket"] = args ? args.bucket : undefined;
            resourceInputs["role"] = args ? args.role : undefined;
            resourceInputs["rules"] = args ? args.rules : undefined;
            resourceInputs["token"] = args?.token ? pulumi.secret(args.token) : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["token"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(BucketReplicationConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BucketReplicationConfig resources.
 */
export interface BucketReplicationConfigState {
    /**
     * Name of the source S3 bucket you want Amazon S3 to monitor.
     */
    bucket?: pulumi.Input<string>;
    /**
     * ARN of the IAM role for Amazon S3 to assume when replicating the objects.
     */
    role?: pulumi.Input<string>;
    /**
     * List of configuration blocks describing the rules managing the replication. See below.
     */
    rules?: pulumi.Input<pulumi.Input<inputs.s3.BucketReplicationConfigRule>[]>;
    /**
     * Token to allow replication to be enabled on an Object Lock-enabled bucket. You must contact AWS support for the bucket's "Object Lock token".
     * For more details, see [Using S3 Object Lock with replication](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-managing.html#object-lock-managing-replication).
     */
    token?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BucketReplicationConfig resource.
 */
export interface BucketReplicationConfigArgs {
    /**
     * Name of the source S3 bucket you want Amazon S3 to monitor.
     */
    bucket: pulumi.Input<string>;
    /**
     * ARN of the IAM role for Amazon S3 to assume when replicating the objects.
     */
    role: pulumi.Input<string>;
    /**
     * List of configuration blocks describing the rules managing the replication. See below.
     */
    rules: pulumi.Input<pulumi.Input<inputs.s3.BucketReplicationConfigRule>[]>;
    /**
     * Token to allow replication to be enabled on an Object Lock-enabled bucket. You must contact AWS support for the bucket's "Object Lock token".
     * For more details, see [Using S3 Object Lock with replication](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-managing.html#object-lock-managing-replication).
     */
    token?: pulumi.Input<string>;
}
