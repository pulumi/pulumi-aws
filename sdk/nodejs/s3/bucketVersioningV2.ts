// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 * ### With Versioning Enabled
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleBucketV2 = new aws.s3.BucketV2("exampleBucketV2", {});
 * const exampleBucketAclV2 = new aws.s3.BucketAclV2("exampleBucketAclV2", {
 *     bucket: exampleBucketV2.id,
 *     acl: "private",
 * });
 * const versioningExample = new aws.s3.BucketVersioningV2("versioningExample", {
 *     bucket: exampleBucketV2.id,
 *     versioningConfiguration: {
 *         status: "Enabled",
 *     },
 * });
 * ```
 * ### With Versioning Disabled
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleBucketV2 = new aws.s3.BucketV2("exampleBucketV2", {});
 * const exampleBucketAclV2 = new aws.s3.BucketAclV2("exampleBucketAclV2", {
 *     bucket: exampleBucketV2.id,
 *     acl: "private",
 * });
 * const versioningExample = new aws.s3.BucketVersioningV2("versioningExample", {
 *     bucket: exampleBucketV2.id,
 *     versioningConfiguration: {
 *         status: "Disabled",
 *     },
 * });
 * ```
 * ### Object Dependency On Versioning
 *
 * When you create an object whose `versionId` you need and an `aws.s3.BucketVersioningV2` resource in the same configuration, you are more likely to have success by ensuring the `s3Object` depends either implicitly (see below) or explicitly (i.e., using `dependsOn = [aws_s3_bucket_versioning.example]`) on the `aws.s3.BucketVersioningV2` resource.
 *
 * > **NOTE:** For critical and/or production S3 objects, do not create a bucket, enable versioning, and create an object in the bucket within the same configuration. Doing so will not allow the AWS-recommended 15 minutes between enabling versioning and writing to the bucket.
 *
 * This example shows the `aws_s3_object.example` depending implicitly on the versioning resource through the reference to `aws_s3_bucket_versioning.example.bucket` to define `bucket`:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleBucketV2 = new aws.s3.BucketV2("exampleBucketV2", {});
 * const exampleBucketVersioningV2 = new aws.s3.BucketVersioningV2("exampleBucketVersioningV2", {
 *     bucket: exampleBucketV2.id,
 *     versioningConfiguration: {
 *         status: "Enabled",
 *     },
 * });
 * const exampleBucketObjectv2 = new aws.s3.BucketObjectv2("exampleBucketObjectv2", {
 *     bucket: exampleBucketVersioningV2.bucket,
 *     key: "droeloe",
 *     source: new pulumi.asset.FileAsset("example.txt"),
 * });
 * ```
 *
 * ## Import
 *
 * S3 bucket versioning can be imported in one of two ways. If the owner (account ID) of the source bucket is the same account used to configure the Terraform AWS Provider, the S3 bucket versioning resource should be imported using the `bucket` e.g.,
 *
 * ```sh
 *  $ pulumi import aws:s3/bucketVersioningV2:BucketVersioningV2 example bucket-name
 * ```
 *
 *  If the owner (account ID) of the source bucket differs from the account used to configure the Terraform AWS Provider, the S3 bucket versioning resource should be imported using the `bucket` and `expected_bucket_owner` separated by a comma (`,`) e.g.,
 *
 * ```sh
 *  $ pulumi import aws:s3/bucketVersioningV2:BucketVersioningV2 example bucket-name,123456789012
 * ```
 */
export class BucketVersioningV2 extends pulumi.CustomResource {
    /**
     * Get an existing BucketVersioningV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BucketVersioningV2State, opts?: pulumi.CustomResourceOptions): BucketVersioningV2 {
        return new BucketVersioningV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:s3/bucketVersioningV2:BucketVersioningV2';

    /**
     * Returns true if the given object is an instance of BucketVersioningV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BucketVersioningV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BucketVersioningV2.__pulumiType;
    }

    /**
     * The name of the S3 bucket.
     */
    public readonly bucket!: pulumi.Output<string>;
    /**
     * The account ID of the expected bucket owner.
     */
    public readonly expectedBucketOwner!: pulumi.Output<string | undefined>;
    /**
     * The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device.
     */
    public readonly mfa!: pulumi.Output<string | undefined>;
    /**
     * Configuration block for the versioning parameters detailed below.
     */
    public readonly versioningConfiguration!: pulumi.Output<outputs.s3.BucketVersioningV2VersioningConfiguration>;

    /**
     * Create a BucketVersioningV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BucketVersioningV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BucketVersioningV2Args | BucketVersioningV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BucketVersioningV2State | undefined;
            resourceInputs["bucket"] = state ? state.bucket : undefined;
            resourceInputs["expectedBucketOwner"] = state ? state.expectedBucketOwner : undefined;
            resourceInputs["mfa"] = state ? state.mfa : undefined;
            resourceInputs["versioningConfiguration"] = state ? state.versioningConfiguration : undefined;
        } else {
            const args = argsOrState as BucketVersioningV2Args | undefined;
            if ((!args || args.bucket === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bucket'");
            }
            if ((!args || args.versioningConfiguration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'versioningConfiguration'");
            }
            resourceInputs["bucket"] = args ? args.bucket : undefined;
            resourceInputs["expectedBucketOwner"] = args ? args.expectedBucketOwner : undefined;
            resourceInputs["mfa"] = args ? args.mfa : undefined;
            resourceInputs["versioningConfiguration"] = args ? args.versioningConfiguration : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BucketVersioningV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BucketVersioningV2 resources.
 */
export interface BucketVersioningV2State {
    /**
     * The name of the S3 bucket.
     */
    bucket?: pulumi.Input<string>;
    /**
     * The account ID of the expected bucket owner.
     */
    expectedBucketOwner?: pulumi.Input<string>;
    /**
     * The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device.
     */
    mfa?: pulumi.Input<string>;
    /**
     * Configuration block for the versioning parameters detailed below.
     */
    versioningConfiguration?: pulumi.Input<inputs.s3.BucketVersioningV2VersioningConfiguration>;
}

/**
 * The set of arguments for constructing a BucketVersioningV2 resource.
 */
export interface BucketVersioningV2Args {
    /**
     * The name of the S3 bucket.
     */
    bucket: pulumi.Input<string>;
    /**
     * The account ID of the expected bucket owner.
     */
    expectedBucketOwner?: pulumi.Input<string>;
    /**
     * The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device.
     */
    mfa?: pulumi.Input<string>;
    /**
     * Configuration block for the versioning parameters detailed below.
     */
    versioningConfiguration: pulumi.Input<inputs.s3.BucketVersioningV2VersioningConfiguration>;
}
