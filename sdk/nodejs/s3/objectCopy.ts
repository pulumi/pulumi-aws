// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export class ObjectCopy extends pulumi.CustomResource {
    /**
     * Get an existing ObjectCopy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectCopyState, opts?: pulumi.CustomResourceOptions): ObjectCopy {
        return new ObjectCopy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:s3/objectCopy:ObjectCopy';

    /**
     * Returns true if the given object is an instance of ObjectCopy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectCopy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectCopy.__pulumiType;
    }

    public readonly acl!: pulumi.Output<string | undefined>;
    public readonly bucket!: pulumi.Output<string>;
    public readonly bucketKeyEnabled!: pulumi.Output<boolean>;
    public readonly cacheControl!: pulumi.Output<string>;
    public readonly contentDisposition!: pulumi.Output<string>;
    public readonly contentEncoding!: pulumi.Output<string>;
    public readonly contentLanguage!: pulumi.Output<string>;
    public readonly contentType!: pulumi.Output<string>;
    public readonly copyIfMatch!: pulumi.Output<string | undefined>;
    public readonly copyIfModifiedSince!: pulumi.Output<string | undefined>;
    public readonly copyIfNoneMatch!: pulumi.Output<string | undefined>;
    public readonly copyIfUnmodifiedSince!: pulumi.Output<string | undefined>;
    public readonly customerAlgorithm!: pulumi.Output<string>;
    public readonly customerKey!: pulumi.Output<string | undefined>;
    public readonly customerKeyMd5!: pulumi.Output<string>;
    public /*out*/ readonly etag!: pulumi.Output<string>;
    public readonly expectedBucketOwner!: pulumi.Output<string | undefined>;
    public readonly expectedSourceBucketOwner!: pulumi.Output<string | undefined>;
    public /*out*/ readonly expiration!: pulumi.Output<string>;
    public readonly expires!: pulumi.Output<string | undefined>;
    public readonly forceDestroy!: pulumi.Output<boolean | undefined>;
    public readonly grants!: pulumi.Output<outputs.s3.ObjectCopyGrant[] | undefined>;
    public readonly key!: pulumi.Output<string>;
    public readonly kmsEncryptionContext!: pulumi.Output<string>;
    public readonly kmsKeyId!: pulumi.Output<string>;
    public /*out*/ readonly lastModified!: pulumi.Output<string>;
    public readonly metadata!: pulumi.Output<{[key: string]: string}>;
    public readonly metadataDirective!: pulumi.Output<string | undefined>;
    public readonly objectLockLegalHoldStatus!: pulumi.Output<string>;
    public readonly objectLockMode!: pulumi.Output<string>;
    public readonly objectLockRetainUntilDate!: pulumi.Output<string>;
    public /*out*/ readonly requestCharged!: pulumi.Output<boolean>;
    public readonly requestPayer!: pulumi.Output<string | undefined>;
    public readonly serverSideEncryption!: pulumi.Output<string>;
    public readonly source!: pulumi.Output<string>;
    public readonly sourceCustomerAlgorithm!: pulumi.Output<string | undefined>;
    public readonly sourceCustomerKey!: pulumi.Output<string | undefined>;
    public readonly sourceCustomerKeyMd5!: pulumi.Output<string | undefined>;
    public /*out*/ readonly sourceVersionId!: pulumi.Output<string>;
    public readonly storageClass!: pulumi.Output<string>;
    public readonly taggingDirective!: pulumi.Output<string | undefined>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly versionId!: pulumi.Output<string>;
    public readonly websiteRedirect!: pulumi.Output<string>;

    /**
     * Create a ObjectCopy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ObjectCopyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectCopyArgs | ObjectCopyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectCopyState | undefined;
            resourceInputs["acl"] = state ? state.acl : undefined;
            resourceInputs["bucket"] = state ? state.bucket : undefined;
            resourceInputs["bucketKeyEnabled"] = state ? state.bucketKeyEnabled : undefined;
            resourceInputs["cacheControl"] = state ? state.cacheControl : undefined;
            resourceInputs["contentDisposition"] = state ? state.contentDisposition : undefined;
            resourceInputs["contentEncoding"] = state ? state.contentEncoding : undefined;
            resourceInputs["contentLanguage"] = state ? state.contentLanguage : undefined;
            resourceInputs["contentType"] = state ? state.contentType : undefined;
            resourceInputs["copyIfMatch"] = state ? state.copyIfMatch : undefined;
            resourceInputs["copyIfModifiedSince"] = state ? state.copyIfModifiedSince : undefined;
            resourceInputs["copyIfNoneMatch"] = state ? state.copyIfNoneMatch : undefined;
            resourceInputs["copyIfUnmodifiedSince"] = state ? state.copyIfUnmodifiedSince : undefined;
            resourceInputs["customerAlgorithm"] = state ? state.customerAlgorithm : undefined;
            resourceInputs["customerKey"] = state ? state.customerKey : undefined;
            resourceInputs["customerKeyMd5"] = state ? state.customerKeyMd5 : undefined;
            resourceInputs["etag"] = state ? state.etag : undefined;
            resourceInputs["expectedBucketOwner"] = state ? state.expectedBucketOwner : undefined;
            resourceInputs["expectedSourceBucketOwner"] = state ? state.expectedSourceBucketOwner : undefined;
            resourceInputs["expiration"] = state ? state.expiration : undefined;
            resourceInputs["expires"] = state ? state.expires : undefined;
            resourceInputs["forceDestroy"] = state ? state.forceDestroy : undefined;
            resourceInputs["grants"] = state ? state.grants : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["kmsEncryptionContext"] = state ? state.kmsEncryptionContext : undefined;
            resourceInputs["kmsKeyId"] = state ? state.kmsKeyId : undefined;
            resourceInputs["lastModified"] = state ? state.lastModified : undefined;
            resourceInputs["metadata"] = state ? state.metadata : undefined;
            resourceInputs["metadataDirective"] = state ? state.metadataDirective : undefined;
            resourceInputs["objectLockLegalHoldStatus"] = state ? state.objectLockLegalHoldStatus : undefined;
            resourceInputs["objectLockMode"] = state ? state.objectLockMode : undefined;
            resourceInputs["objectLockRetainUntilDate"] = state ? state.objectLockRetainUntilDate : undefined;
            resourceInputs["requestCharged"] = state ? state.requestCharged : undefined;
            resourceInputs["requestPayer"] = state ? state.requestPayer : undefined;
            resourceInputs["serverSideEncryption"] = state ? state.serverSideEncryption : undefined;
            resourceInputs["source"] = state ? state.source : undefined;
            resourceInputs["sourceCustomerAlgorithm"] = state ? state.sourceCustomerAlgorithm : undefined;
            resourceInputs["sourceCustomerKey"] = state ? state.sourceCustomerKey : undefined;
            resourceInputs["sourceCustomerKeyMd5"] = state ? state.sourceCustomerKeyMd5 : undefined;
            resourceInputs["sourceVersionId"] = state ? state.sourceVersionId : undefined;
            resourceInputs["storageClass"] = state ? state.storageClass : undefined;
            resourceInputs["taggingDirective"] = state ? state.taggingDirective : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["versionId"] = state ? state.versionId : undefined;
            resourceInputs["websiteRedirect"] = state ? state.websiteRedirect : undefined;
        } else {
            const args = argsOrState as ObjectCopyArgs | undefined;
            if ((!args || args.bucket === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bucket'");
            }
            if ((!args || args.key === undefined) && !opts.urn) {
                throw new Error("Missing required property 'key'");
            }
            if ((!args || args.source === undefined) && !opts.urn) {
                throw new Error("Missing required property 'source'");
            }
            resourceInputs["acl"] = args ? args.acl : undefined;
            resourceInputs["bucket"] = args ? args.bucket : undefined;
            resourceInputs["bucketKeyEnabled"] = args ? args.bucketKeyEnabled : undefined;
            resourceInputs["cacheControl"] = args ? args.cacheControl : undefined;
            resourceInputs["contentDisposition"] = args ? args.contentDisposition : undefined;
            resourceInputs["contentEncoding"] = args ? args.contentEncoding : undefined;
            resourceInputs["contentLanguage"] = args ? args.contentLanguage : undefined;
            resourceInputs["contentType"] = args ? args.contentType : undefined;
            resourceInputs["copyIfMatch"] = args ? args.copyIfMatch : undefined;
            resourceInputs["copyIfModifiedSince"] = args ? args.copyIfModifiedSince : undefined;
            resourceInputs["copyIfNoneMatch"] = args ? args.copyIfNoneMatch : undefined;
            resourceInputs["copyIfUnmodifiedSince"] = args ? args.copyIfUnmodifiedSince : undefined;
            resourceInputs["customerAlgorithm"] = args ? args.customerAlgorithm : undefined;
            resourceInputs["customerKey"] = args?.customerKey ? pulumi.secret(args.customerKey) : undefined;
            resourceInputs["customerKeyMd5"] = args ? args.customerKeyMd5 : undefined;
            resourceInputs["expectedBucketOwner"] = args ? args.expectedBucketOwner : undefined;
            resourceInputs["expectedSourceBucketOwner"] = args ? args.expectedSourceBucketOwner : undefined;
            resourceInputs["expires"] = args ? args.expires : undefined;
            resourceInputs["forceDestroy"] = args ? args.forceDestroy : undefined;
            resourceInputs["grants"] = args ? args.grants : undefined;
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["kmsEncryptionContext"] = args?.kmsEncryptionContext ? pulumi.secret(args.kmsEncryptionContext) : undefined;
            resourceInputs["kmsKeyId"] = args?.kmsKeyId ? pulumi.secret(args.kmsKeyId) : undefined;
            resourceInputs["metadata"] = args ? args.metadata : undefined;
            resourceInputs["metadataDirective"] = args ? args.metadataDirective : undefined;
            resourceInputs["objectLockLegalHoldStatus"] = args ? args.objectLockLegalHoldStatus : undefined;
            resourceInputs["objectLockMode"] = args ? args.objectLockMode : undefined;
            resourceInputs["objectLockRetainUntilDate"] = args ? args.objectLockRetainUntilDate : undefined;
            resourceInputs["requestPayer"] = args ? args.requestPayer : undefined;
            resourceInputs["serverSideEncryption"] = args ? args.serverSideEncryption : undefined;
            resourceInputs["source"] = args ? args.source : undefined;
            resourceInputs["sourceCustomerAlgorithm"] = args ? args.sourceCustomerAlgorithm : undefined;
            resourceInputs["sourceCustomerKey"] = args?.sourceCustomerKey ? pulumi.secret(args.sourceCustomerKey) : undefined;
            resourceInputs["sourceCustomerKeyMd5"] = args ? args.sourceCustomerKeyMd5 : undefined;
            resourceInputs["storageClass"] = args ? args.storageClass : undefined;
            resourceInputs["taggingDirective"] = args ? args.taggingDirective : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["websiteRedirect"] = args ? args.websiteRedirect : undefined;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["expiration"] = undefined /*out*/;
            resourceInputs["lastModified"] = undefined /*out*/;
            resourceInputs["requestCharged"] = undefined /*out*/;
            resourceInputs["sourceVersionId"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
            resourceInputs["versionId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["customerKey", "kmsEncryptionContext", "kmsKeyId", "sourceCustomerKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ObjectCopy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ObjectCopy resources.
 */
export interface ObjectCopyState {
    acl?: pulumi.Input<string>;
    bucket?: pulumi.Input<string>;
    bucketKeyEnabled?: pulumi.Input<boolean>;
    cacheControl?: pulumi.Input<string>;
    contentDisposition?: pulumi.Input<string>;
    contentEncoding?: pulumi.Input<string>;
    contentLanguage?: pulumi.Input<string>;
    contentType?: pulumi.Input<string>;
    copyIfMatch?: pulumi.Input<string>;
    copyIfModifiedSince?: pulumi.Input<string>;
    copyIfNoneMatch?: pulumi.Input<string>;
    copyIfUnmodifiedSince?: pulumi.Input<string>;
    customerAlgorithm?: pulumi.Input<string>;
    customerKey?: pulumi.Input<string>;
    customerKeyMd5?: pulumi.Input<string>;
    etag?: pulumi.Input<string>;
    expectedBucketOwner?: pulumi.Input<string>;
    expectedSourceBucketOwner?: pulumi.Input<string>;
    expiration?: pulumi.Input<string>;
    expires?: pulumi.Input<string>;
    forceDestroy?: pulumi.Input<boolean>;
    grants?: pulumi.Input<pulumi.Input<inputs.s3.ObjectCopyGrant>[]>;
    key?: pulumi.Input<string>;
    kmsEncryptionContext?: pulumi.Input<string>;
    kmsKeyId?: pulumi.Input<string>;
    lastModified?: pulumi.Input<string>;
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    metadataDirective?: pulumi.Input<string>;
    objectLockLegalHoldStatus?: pulumi.Input<string>;
    objectLockMode?: pulumi.Input<string>;
    objectLockRetainUntilDate?: pulumi.Input<string>;
    requestCharged?: pulumi.Input<boolean>;
    requestPayer?: pulumi.Input<string>;
    serverSideEncryption?: pulumi.Input<string>;
    source?: pulumi.Input<string>;
    sourceCustomerAlgorithm?: pulumi.Input<string>;
    sourceCustomerKey?: pulumi.Input<string>;
    sourceCustomerKeyMd5?: pulumi.Input<string>;
    sourceVersionId?: pulumi.Input<string>;
    storageClass?: pulumi.Input<string>;
    taggingDirective?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    versionId?: pulumi.Input<string>;
    websiteRedirect?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectCopy resource.
 */
export interface ObjectCopyArgs {
    acl?: pulumi.Input<string>;
    bucket: pulumi.Input<string>;
    bucketKeyEnabled?: pulumi.Input<boolean>;
    cacheControl?: pulumi.Input<string>;
    contentDisposition?: pulumi.Input<string>;
    contentEncoding?: pulumi.Input<string>;
    contentLanguage?: pulumi.Input<string>;
    contentType?: pulumi.Input<string>;
    copyIfMatch?: pulumi.Input<string>;
    copyIfModifiedSince?: pulumi.Input<string>;
    copyIfNoneMatch?: pulumi.Input<string>;
    copyIfUnmodifiedSince?: pulumi.Input<string>;
    customerAlgorithm?: pulumi.Input<string>;
    customerKey?: pulumi.Input<string>;
    customerKeyMd5?: pulumi.Input<string>;
    expectedBucketOwner?: pulumi.Input<string>;
    expectedSourceBucketOwner?: pulumi.Input<string>;
    expires?: pulumi.Input<string>;
    forceDestroy?: pulumi.Input<boolean>;
    grants?: pulumi.Input<pulumi.Input<inputs.s3.ObjectCopyGrant>[]>;
    key: pulumi.Input<string>;
    kmsEncryptionContext?: pulumi.Input<string>;
    kmsKeyId?: pulumi.Input<string>;
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    metadataDirective?: pulumi.Input<string>;
    objectLockLegalHoldStatus?: pulumi.Input<string>;
    objectLockMode?: pulumi.Input<string>;
    objectLockRetainUntilDate?: pulumi.Input<string>;
    requestPayer?: pulumi.Input<string>;
    serverSideEncryption?: pulumi.Input<string>;
    source: pulumi.Input<string>;
    sourceCustomerAlgorithm?: pulumi.Input<string>;
    sourceCustomerKey?: pulumi.Input<string>;
    sourceCustomerKeyMd5?: pulumi.Input<string>;
    storageClass?: pulumi.Input<string>;
    taggingDirective?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    websiteRedirect?: pulumi.Input<string>;
}
