// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Manages an EC2 Instance Connect Endpoint.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.ec2transitgateway.InstanceConnectEndpoint("example", {subnetId: exampleAwsSubnet.id});
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import EC2 Instance Connect Endpoints using the `id`. For example:
 *
 * ```sh
 * $ pulumi import aws:ec2transitgateway/instanceConnectEndpoint:InstanceConnectEndpoint example eice-012345678
 * ```
 */
export class InstanceConnectEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing InstanceConnectEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceConnectEndpointState, opts?: pulumi.CustomResourceOptions): InstanceConnectEndpoint {
        return new InstanceConnectEndpoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:ec2transitgateway/instanceConnectEndpoint:InstanceConnectEndpoint';

    /**
     * Returns true if the given object is an instance of InstanceConnectEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InstanceConnectEndpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InstanceConnectEndpoint.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the EC2 Instance Connect Endpoint.
     */
    declare public /*out*/ readonly arn: pulumi.Output<string>;
    /**
     * The Availability Zone of the EC2 Instance Connect Endpoint.
     */
    declare public /*out*/ readonly availabilityZone: pulumi.Output<string>;
    /**
     * The DNS name of the EC2 Instance Connect Endpoint.
     */
    declare public /*out*/ readonly dnsName: pulumi.Output<string>;
    /**
     * The DNS name of the EC2 Instance Connect FIPS Endpoint.
     */
    declare public /*out*/ readonly fipsDnsName: pulumi.Output<string>;
    /**
     * The IDs of the ENIs that Amazon EC2 automatically created when creating the EC2 Instance Connect Endpoint.
     */
    declare public /*out*/ readonly networkInterfaceIds: pulumi.Output<string[]>;
    /**
     * The ID of the AWS account that created the EC2 Instance Connect Endpoint.
     */
    declare public /*out*/ readonly ownerId: pulumi.Output<string>;
    /**
     * Indicates whether your client's IP address is preserved as the source. Default: `true`.
     */
    declare public readonly preserveClientIp: pulumi.Output<boolean>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * One or more security groups to associate with the endpoint. If you don't specify a security group, the default security group for the VPC will be associated with the endpoint.
     */
    declare public readonly securityGroupIds: pulumi.Output<string[]>;
    /**
     * The ID of the subnet in which to create the EC2 Instance Connect Endpoint.
     */
    declare public readonly subnetId: pulumi.Output<string>;
    /**
     * Map of tags to assign to this resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    declare public /*out*/ readonly tagsAll: pulumi.Output<{[key: string]: string}>;
    declare public readonly timeouts: pulumi.Output<outputs.ec2transitgateway.InstanceConnectEndpointTimeouts | undefined>;
    /**
     * The ID of the VPC in which the EC2 Instance Connect Endpoint was created.
     */
    declare public /*out*/ readonly vpcId: pulumi.Output<string>;

    /**
     * Create a InstanceConnectEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceConnectEndpointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceConnectEndpointArgs | InstanceConnectEndpointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceConnectEndpointState | undefined;
            resourceInputs["arn"] = state?.arn;
            resourceInputs["availabilityZone"] = state?.availabilityZone;
            resourceInputs["dnsName"] = state?.dnsName;
            resourceInputs["fipsDnsName"] = state?.fipsDnsName;
            resourceInputs["networkInterfaceIds"] = state?.networkInterfaceIds;
            resourceInputs["ownerId"] = state?.ownerId;
            resourceInputs["preserveClientIp"] = state?.preserveClientIp;
            resourceInputs["region"] = state?.region;
            resourceInputs["securityGroupIds"] = state?.securityGroupIds;
            resourceInputs["subnetId"] = state?.subnetId;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tagsAll"] = state?.tagsAll;
            resourceInputs["timeouts"] = state?.timeouts;
            resourceInputs["vpcId"] = state?.vpcId;
        } else {
            const args = argsOrState as InstanceConnectEndpointArgs | undefined;
            if (args?.subnetId === undefined && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            resourceInputs["preserveClientIp"] = args?.preserveClientIp;
            resourceInputs["region"] = args?.region;
            resourceInputs["securityGroupIds"] = args?.securityGroupIds;
            resourceInputs["subnetId"] = args?.subnetId;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["timeouts"] = args?.timeouts;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["availabilityZone"] = undefined /*out*/;
            resourceInputs["dnsName"] = undefined /*out*/;
            resourceInputs["fipsDnsName"] = undefined /*out*/;
            resourceInputs["networkInterfaceIds"] = undefined /*out*/;
            resourceInputs["ownerId"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
            resourceInputs["vpcId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InstanceConnectEndpoint.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering InstanceConnectEndpoint resources.
 */
export interface InstanceConnectEndpointState {
    /**
     * The Amazon Resource Name (ARN) of the EC2 Instance Connect Endpoint.
     */
    arn?: pulumi.Input<string>;
    /**
     * The Availability Zone of the EC2 Instance Connect Endpoint.
     */
    availabilityZone?: pulumi.Input<string>;
    /**
     * The DNS name of the EC2 Instance Connect Endpoint.
     */
    dnsName?: pulumi.Input<string>;
    /**
     * The DNS name of the EC2 Instance Connect FIPS Endpoint.
     */
    fipsDnsName?: pulumi.Input<string>;
    /**
     * The IDs of the ENIs that Amazon EC2 automatically created when creating the EC2 Instance Connect Endpoint.
     */
    networkInterfaceIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the AWS account that created the EC2 Instance Connect Endpoint.
     */
    ownerId?: pulumi.Input<string>;
    /**
     * Indicates whether your client's IP address is preserved as the source. Default: `true`.
     */
    preserveClientIp?: pulumi.Input<boolean>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * One or more security groups to associate with the endpoint. If you don't specify a security group, the default security group for the VPC will be associated with the endpoint.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the subnet in which to create the EC2 Instance Connect Endpoint.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * Map of tags to assign to this resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.ec2transitgateway.InstanceConnectEndpointTimeouts>;
    /**
     * The ID of the VPC in which the EC2 Instance Connect Endpoint was created.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a InstanceConnectEndpoint resource.
 */
export interface InstanceConnectEndpointArgs {
    /**
     * Indicates whether your client's IP address is preserved as the source. Default: `true`.
     */
    preserveClientIp?: pulumi.Input<boolean>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * One or more security groups to associate with the endpoint. If you don't specify a security group, the default security group for the VPC will be associated with the endpoint.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the subnet in which to create the EC2 Instance Connect Endpoint.
     */
    subnetId: pulumi.Input<string>;
    /**
     * Map of tags to assign to this resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.ec2transitgateway.InstanceConnectEndpointTimeouts>;
}
