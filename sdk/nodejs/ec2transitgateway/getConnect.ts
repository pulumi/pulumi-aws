// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Get information on an EC2 Transit Gateway Connect.
 *
 * ## Example Usage
 * ### By Filter
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = pulumi.output(aws.ec2transitgateway.getConnect({
 *     filters: [{
 *         name: "transport-transit-gateway-attachment-id",
 *         values: ["tgw-attach-12345678"],
 *     }],
 * }));
 * ```
 * ### By Identifier
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = pulumi.output(aws.ec2transitgateway.getConnect({
 *     transitGatewayConnectId: "tgw-attach-12345678",
 * }));
 * ```
 */
export function getConnect(args?: GetConnectArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws:ec2transitgateway/getConnect:getConnect", {
        "filters": args.filters,
        "tags": args.tags,
        "transitGatewayConnectId": args.transitGatewayConnectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getConnect.
 */
export interface GetConnectArgs {
    /**
     * One or more configuration blocks containing name-values filters. Detailed below.
     */
    filters?: inputs.ec2transitgateway.GetConnectFilter[];
    /**
     * Key-value tags for the EC2 Transit Gateway Connect
     */
    tags?: {[key: string]: string};
    /**
     * Identifier of the EC2 Transit Gateway Connect.
     */
    transitGatewayConnectId?: string;
}

/**
 * A collection of values returned by getConnect.
 */
export interface GetConnectResult {
    readonly filters?: outputs.ec2transitgateway.GetConnectFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Tunnel protocol
     */
    readonly protocol: string;
    /**
     * Key-value tags for the EC2 Transit Gateway Connect
     */
    readonly tags: {[key: string]: string};
    readonly transitGatewayConnectId: string;
    /**
     * EC2 Transit Gateway identifier
     */
    readonly transitGatewayId: string;
    /**
     * The underlaying VPC attachment
     */
    readonly transportAttachmentId: string;
}

export function getConnectOutput(args?: GetConnectOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConnectResult> {
    return pulumi.output(args).apply(a => getConnect(a, opts))
}

/**
 * A collection of arguments for invoking getConnect.
 */
export interface GetConnectOutputArgs {
    /**
     * One or more configuration blocks containing name-values filters. Detailed below.
     */
    filters?: pulumi.Input<pulumi.Input<inputs.ec2transitgateway.GetConnectFilterArgs>[]>;
    /**
     * Key-value tags for the EC2 Transit Gateway Connect
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Identifier of the EC2 Transit Gateway Connect.
     */
    transitGatewayConnectId?: pulumi.Input<string>;
}
