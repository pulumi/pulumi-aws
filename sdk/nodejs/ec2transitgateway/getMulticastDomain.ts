// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Get information on an EC2 Transit Gateway Multicast Domain.
 *
 * ## Example Usage
 * ### By Filter
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = pulumi.output(aws.ec2transitgateway.getMulticastDomain({
 *     filters: [{
 *         name: "transit-gateway-multicast-domain-id",
 *         values: ["tgw-mcast-domain-12345678"],
 *     }],
 * }));
 * ```
 * ### By Identifier
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = pulumi.output(aws.ec2transitgateway.getMulticastDomain({
 *     transitGatewayMulticastDomainId: "tgw-mcast-domain-12345678",
 * }));
 * ```
 */
export function getMulticastDomain(args?: GetMulticastDomainArgs, opts?: pulumi.InvokeOptions): Promise<GetMulticastDomainResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws:ec2transitgateway/getMulticastDomain:getMulticastDomain", {
        "filters": args.filters,
        "tags": args.tags,
        "transitGatewayMulticastDomainId": args.transitGatewayMulticastDomainId,
    }, opts);
}

/**
 * A collection of arguments for invoking getMulticastDomain.
 */
export interface GetMulticastDomainArgs {
    /**
     * One or more configuration blocks containing name-values filters. Detailed below.
     */
    filters?: inputs.ec2transitgateway.GetMulticastDomainFilter[];
    /**
     * Key-value tags for the EC2 Transit Gateway Multicast Domain.
     */
    tags?: {[key: string]: string};
    /**
     * Identifier of the EC2 Transit Gateway Multicast Domain.
     */
    transitGatewayMulticastDomainId?: string;
}

/**
 * A collection of values returned by getMulticastDomain.
 */
export interface GetMulticastDomainResult {
    /**
     * EC2 Transit Gateway Multicast Domain ARN.
     */
    readonly arn: string;
    /**
     * EC2 Transit Gateway Multicast Domain Associations
     */
    readonly associations: outputs.ec2transitgateway.GetMulticastDomainAssociation[];
    /**
     * Whether to automatically accept cross-account subnet associations that are associated with the EC2 Transit Gateway Multicast Domain.
     */
    readonly autoAcceptSharedAssociations: string;
    readonly filters?: outputs.ec2transitgateway.GetMulticastDomainFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Whether to enable Internet Group Management Protocol (IGMP) version 2 for the EC2 Transit Gateway Multicast Domain.
     */
    readonly igmpv2Support: string;
    /**
     * EC2 Multicast Domain Group Members
     */
    readonly members: outputs.ec2transitgateway.GetMulticastDomainMember[];
    /**
     * Identifier of the AWS account that owns the EC2 Transit Gateway Multicast Domain.
     */
    readonly ownerId: string;
    /**
     * EC2 Multicast Domain Group Sources
     */
    readonly sources: outputs.ec2transitgateway.GetMulticastDomainSource[];
    readonly state: string;
    /**
     * Whether to enable support for statically configuring multicast group sources for the EC2 Transit Gateway Multicast Domain.
     */
    readonly staticSourcesSupport: string;
    /**
     * Key-value tags for the EC2 Transit Gateway Multicast Domain.
     */
    readonly tags: {[key: string]: string};
    /**
     * The ID of the transit gateway attachment.
     */
    readonly transitGatewayAttachmentId: string;
    /**
     * EC2 Transit Gateway identifier.
     */
    readonly transitGatewayId: string;
    readonly transitGatewayMulticastDomainId: string;
}

export function getMulticastDomainOutput(args?: GetMulticastDomainOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMulticastDomainResult> {
    return pulumi.output(args).apply(a => getMulticastDomain(a, opts))
}

/**
 * A collection of arguments for invoking getMulticastDomain.
 */
export interface GetMulticastDomainOutputArgs {
    /**
     * One or more configuration blocks containing name-values filters. Detailed below.
     */
    filters?: pulumi.Input<pulumi.Input<inputs.ec2transitgateway.GetMulticastDomainFilterArgs>[]>;
    /**
     * Key-value tags for the EC2 Transit Gateway Multicast Domain.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Identifier of the EC2 Transit Gateway Multicast Domain.
     */
    transitGatewayMulticastDomainId?: pulumi.Input<string>;
}
