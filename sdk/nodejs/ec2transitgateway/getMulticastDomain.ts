// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getMulticastDomain(args?: GetMulticastDomainArgs, opts?: pulumi.InvokeOptions): Promise<GetMulticastDomainResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:ec2transitgateway/getMulticastDomain:getMulticastDomain", {
        "filters": args.filters,
        "tags": args.tags,
        "transitGatewayMulticastDomainId": args.transitGatewayMulticastDomainId,
    }, opts);
}

/**
 * A collection of arguments for invoking getMulticastDomain.
 */
export interface GetMulticastDomainArgs {
    filters?: inputs.ec2transitgateway.GetMulticastDomainFilter[];
    tags?: {[key: string]: string};
    transitGatewayMulticastDomainId?: string;
}

/**
 * A collection of values returned by getMulticastDomain.
 */
export interface GetMulticastDomainResult {
    readonly arn: string;
    readonly associations: outputs.ec2transitgateway.GetMulticastDomainAssociation[];
    readonly autoAcceptSharedAssociations: string;
    readonly filters?: outputs.ec2transitgateway.GetMulticastDomainFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly igmpv2Support: string;
    readonly members: outputs.ec2transitgateway.GetMulticastDomainMember[];
    readonly ownerId: string;
    readonly sources: outputs.ec2transitgateway.GetMulticastDomainSource[];
    readonly state: string;
    readonly staticSourcesSupport: string;
    readonly tags: {[key: string]: string};
    readonly transitGatewayAttachmentId: string;
    readonly transitGatewayId: string;
    readonly transitGatewayMulticastDomainId: string;
}
export function getMulticastDomainOutput(args?: GetMulticastDomainOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMulticastDomainResult> {
    return pulumi.output(args).apply((a: any) => getMulticastDomain(a, opts))
}

/**
 * A collection of arguments for invoking getMulticastDomain.
 */
export interface GetMulticastDomainOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.ec2transitgateway.GetMulticastDomainFilterArgs>[]>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    transitGatewayMulticastDomainId?: pulumi.Input<string>;
}
