// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetPolicyStoreArgs, GetPolicyStoreResult, GetPolicyStoreOutputArgs } from "./getPolicyStore";
export const getPolicyStore: typeof import("./getPolicyStore").getPolicyStore = null as any;
export const getPolicyStoreOutput: typeof import("./getPolicyStore").getPolicyStoreOutput = null as any;
utilities.lazyLoad(exports, ["getPolicyStore","getPolicyStoreOutput"], () => require("./getPolicyStore"));

export { PolicyStoreArgs, PolicyStoreState } from "./policyStore";
export type PolicyStore = import("./policyStore").PolicyStore;
export const PolicyStore: typeof import("./policyStore").PolicyStore = null as any;
utilities.lazyLoad(exports, ["PolicyStore"], () => require("./policyStore"));

export { PolicyTemplateArgs, PolicyTemplateState } from "./policyTemplate";
export type PolicyTemplate = import("./policyTemplate").PolicyTemplate;
export const PolicyTemplate: typeof import("./policyTemplate").PolicyTemplate = null as any;
utilities.lazyLoad(exports, ["PolicyTemplate"], () => require("./policyTemplate"));

export { SchemaArgs, SchemaState } from "./schema";
export type Schema = import("./schema").Schema;
export const Schema: typeof import("./schema").Schema = null as any;
utilities.lazyLoad(exports, ["Schema"], () => require("./schema"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws:verifiedpermissions/policyStore:PolicyStore":
                return new PolicyStore(name, <any>undefined, { urn })
            case "aws:verifiedpermissions/policyTemplate:PolicyTemplate":
                return new PolicyTemplate(name, <any>undefined, { urn })
            case "aws:verifiedpermissions/schema:Schema":
                return new Schema(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "verifiedpermissions/policyStore", _module)
pulumi.runtime.registerResourceModule("aws", "verifiedpermissions/policyTemplate", _module)
pulumi.runtime.registerResourceModule("aws", "verifiedpermissions/schema", _module)
