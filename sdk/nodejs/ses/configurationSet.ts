// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Provides an SES configuration set resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.ses.ConfigurationSet("test", {});
 * ```
 * ### Require TLS Connections
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.ses.ConfigurationSet("test", {
 *     deliveryOptions: {
 *         tlsPolicy: "Require",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * SES Configuration Sets can be imported using their `name`, e.g.
 *
 * ```sh
 *  $ pulumi import aws:ses/configurationSet:ConfigurationSet test some-configuration-set-test
 * ```
 */
export class ConfigurationSet extends pulumi.CustomResource {
    /**
     * Get an existing ConfigurationSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConfigurationSetState, opts?: pulumi.CustomResourceOptions): ConfigurationSet {
        return new ConfigurationSet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:ses/configurationSet:ConfigurationSet';

    /**
     * Returns true if the given object is an instance of ConfigurationSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ConfigurationSet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ConfigurationSet.__pulumiType;
    }

    /**
     * SES configuration set ARN.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Configuration block. Detailed below.
     */
    public readonly deliveryOptions!: pulumi.Output<outputs.ses.ConfigurationSetDeliveryOptions | undefined>;
    /**
     * The date and time at which the reputation metrics for the configuration set were last reset. Resetting these metrics is known as a fresh start.
     */
    public /*out*/ readonly lastFreshStart!: pulumi.Output<string>;
    /**
     * Name of the configuration set.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Whether or not Amazon SES publishes reputation metrics for the configuration set, such as bounce and complaint rates, to Amazon CloudWatch. The default value is `false`.
     */
    public readonly reputationMetricsEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Whether email sending is enabled or disabled for the configuration set. The default value is `true`.
     */
    public readonly sendingEnabled!: pulumi.Output<boolean | undefined>;

    /**
     * Create a ConfigurationSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ConfigurationSetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ConfigurationSetArgs | ConfigurationSetState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ConfigurationSetState | undefined;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["deliveryOptions"] = state ? state.deliveryOptions : undefined;
            inputs["lastFreshStart"] = state ? state.lastFreshStart : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["reputationMetricsEnabled"] = state ? state.reputationMetricsEnabled : undefined;
            inputs["sendingEnabled"] = state ? state.sendingEnabled : undefined;
        } else {
            const args = argsOrState as ConfigurationSetArgs | undefined;
            inputs["deliveryOptions"] = args ? args.deliveryOptions : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["reputationMetricsEnabled"] = args ? args.reputationMetricsEnabled : undefined;
            inputs["sendingEnabled"] = args ? args.sendingEnabled : undefined;
            inputs["arn"] = undefined /*out*/;
            inputs["lastFreshStart"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        const aliasOpts = { aliases: [{ type: "aws:ses/confgurationSet:ConfgurationSet" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(ConfigurationSet.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ConfigurationSet resources.
 */
export interface ConfigurationSetState {
    /**
     * SES configuration set ARN.
     */
    arn?: pulumi.Input<string>;
    /**
     * Configuration block. Detailed below.
     */
    deliveryOptions?: pulumi.Input<inputs.ses.ConfigurationSetDeliveryOptions>;
    /**
     * The date and time at which the reputation metrics for the configuration set were last reset. Resetting these metrics is known as a fresh start.
     */
    lastFreshStart?: pulumi.Input<string>;
    /**
     * Name of the configuration set.
     */
    name?: pulumi.Input<string>;
    /**
     * Whether or not Amazon SES publishes reputation metrics for the configuration set, such as bounce and complaint rates, to Amazon CloudWatch. The default value is `false`.
     */
    reputationMetricsEnabled?: pulumi.Input<boolean>;
    /**
     * Whether email sending is enabled or disabled for the configuration set. The default value is `true`.
     */
    sendingEnabled?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a ConfigurationSet resource.
 */
export interface ConfigurationSetArgs {
    /**
     * Configuration block. Detailed below.
     */
    deliveryOptions?: pulumi.Input<inputs.ses.ConfigurationSetDeliveryOptions>;
    /**
     * Name of the configuration set.
     */
    name?: pulumi.Input<string>;
    /**
     * Whether or not Amazon SES publishes reputation metrics for the configuration set, such as bounce and complaint rates, to Amazon CloudWatch. The default value is `false`.
     */
    reputationMetricsEnabled?: pulumi.Input<boolean>;
    /**
     * Whether email sending is enabled or disabled for the configuration set. The default value is `true`.
     */
    sendingEnabled?: pulumi.Input<boolean>;
}
