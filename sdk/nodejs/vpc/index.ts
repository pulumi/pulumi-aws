// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { EndpointPrivateDnsArgs, EndpointPrivateDnsState } from "./endpointPrivateDns";
export type EndpointPrivateDns = import("./endpointPrivateDns").EndpointPrivateDns;
export const EndpointPrivateDns: typeof import("./endpointPrivateDns").EndpointPrivateDns = null as any;
utilities.lazyLoad(exports, ["EndpointPrivateDns"], () => require("./endpointPrivateDns"));

export { EndpointServicePrivateDnsVerificationArgs, EndpointServicePrivateDnsVerificationState } from "./endpointServicePrivateDnsVerification";
export type EndpointServicePrivateDnsVerification = import("./endpointServicePrivateDnsVerification").EndpointServicePrivateDnsVerification;
export const EndpointServicePrivateDnsVerification: typeof import("./endpointServicePrivateDnsVerification").EndpointServicePrivateDnsVerification = null as any;
utilities.lazyLoad(exports, ["EndpointServicePrivateDnsVerification"], () => require("./endpointServicePrivateDnsVerification"));

export { GetSecurityGroupRuleArgs, GetSecurityGroupRuleResult, GetSecurityGroupRuleOutputArgs } from "./getSecurityGroupRule";
export const getSecurityGroupRule: typeof import("./getSecurityGroupRule").getSecurityGroupRule = null as any;
export const getSecurityGroupRuleOutput: typeof import("./getSecurityGroupRule").getSecurityGroupRuleOutput = null as any;
utilities.lazyLoad(exports, ["getSecurityGroupRule","getSecurityGroupRuleOutput"], () => require("./getSecurityGroupRule"));

export { GetSecurityGroupRulesArgs, GetSecurityGroupRulesResult, GetSecurityGroupRulesOutputArgs } from "./getSecurityGroupRules";
export const getSecurityGroupRules: typeof import("./getSecurityGroupRules").getSecurityGroupRules = null as any;
export const getSecurityGroupRulesOutput: typeof import("./getSecurityGroupRules").getSecurityGroupRulesOutput = null as any;
utilities.lazyLoad(exports, ["getSecurityGroupRules","getSecurityGroupRulesOutput"], () => require("./getSecurityGroupRules"));

export { GetVpcEndpointAssociationsArgs, GetVpcEndpointAssociationsResult, GetVpcEndpointAssociationsOutputArgs } from "./getVpcEndpointAssociations";
export const getVpcEndpointAssociations: typeof import("./getVpcEndpointAssociations").getVpcEndpointAssociations = null as any;
export const getVpcEndpointAssociationsOutput: typeof import("./getVpcEndpointAssociations").getVpcEndpointAssociationsOutput = null as any;
utilities.lazyLoad(exports, ["getVpcEndpointAssociations","getVpcEndpointAssociationsOutput"], () => require("./getVpcEndpointAssociations"));

export { RouteServerArgs, RouteServerState } from "./routeServer";
export type RouteServer = import("./routeServer").RouteServer;
export const RouteServer: typeof import("./routeServer").RouteServer = null as any;
utilities.lazyLoad(exports, ["RouteServer"], () => require("./routeServer"));

export { RouteServerEndpointArgs, RouteServerEndpointState } from "./routeServerEndpoint";
export type RouteServerEndpoint = import("./routeServerEndpoint").RouteServerEndpoint;
export const RouteServerEndpoint: typeof import("./routeServerEndpoint").RouteServerEndpoint = null as any;
utilities.lazyLoad(exports, ["RouteServerEndpoint"], () => require("./routeServerEndpoint"));

export { RouteServerPeerArgs, RouteServerPeerState } from "./routeServerPeer";
export type RouteServerPeer = import("./routeServerPeer").RouteServerPeer;
export const RouteServerPeer: typeof import("./routeServerPeer").RouteServerPeer = null as any;
utilities.lazyLoad(exports, ["RouteServerPeer"], () => require("./routeServerPeer"));

export { RouteServerPropagationArgs, RouteServerPropagationState } from "./routeServerPropagation";
export type RouteServerPropagation = import("./routeServerPropagation").RouteServerPropagation;
export const RouteServerPropagation: typeof import("./routeServerPropagation").RouteServerPropagation = null as any;
utilities.lazyLoad(exports, ["RouteServerPropagation"], () => require("./routeServerPropagation"));

export { RouteServerVpcAssociationArgs, RouteServerVpcAssociationState } from "./routeServerVpcAssociation";
export type RouteServerVpcAssociation = import("./routeServerVpcAssociation").RouteServerVpcAssociation;
export const RouteServerVpcAssociation: typeof import("./routeServerVpcAssociation").RouteServerVpcAssociation = null as any;
utilities.lazyLoad(exports, ["RouteServerVpcAssociation"], () => require("./routeServerVpcAssociation"));

export { SecurityGroupEgressRuleArgs, SecurityGroupEgressRuleState } from "./securityGroupEgressRule";
export type SecurityGroupEgressRule = import("./securityGroupEgressRule").SecurityGroupEgressRule;
export const SecurityGroupEgressRule: typeof import("./securityGroupEgressRule").SecurityGroupEgressRule = null as any;
utilities.lazyLoad(exports, ["SecurityGroupEgressRule"], () => require("./securityGroupEgressRule"));

export { SecurityGroupIngressRuleArgs, SecurityGroupIngressRuleState } from "./securityGroupIngressRule";
export type SecurityGroupIngressRule = import("./securityGroupIngressRule").SecurityGroupIngressRule;
export const SecurityGroupIngressRule: typeof import("./securityGroupIngressRule").SecurityGroupIngressRule = null as any;
utilities.lazyLoad(exports, ["SecurityGroupIngressRule"], () => require("./securityGroupIngressRule"));

export { SecurityGroupVpcAssociationArgs, SecurityGroupVpcAssociationState } from "./securityGroupVpcAssociation";
export type SecurityGroupVpcAssociation = import("./securityGroupVpcAssociation").SecurityGroupVpcAssociation;
export const SecurityGroupVpcAssociation: typeof import("./securityGroupVpcAssociation").SecurityGroupVpcAssociation = null as any;
utilities.lazyLoad(exports, ["SecurityGroupVpcAssociation"], () => require("./securityGroupVpcAssociation"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws:vpc/endpointPrivateDns:EndpointPrivateDns":
                return new EndpointPrivateDns(name, <any>undefined, { urn })
            case "aws:vpc/endpointServicePrivateDnsVerification:EndpointServicePrivateDnsVerification":
                return new EndpointServicePrivateDnsVerification(name, <any>undefined, { urn })
            case "aws:vpc/routeServer:RouteServer":
                return new RouteServer(name, <any>undefined, { urn })
            case "aws:vpc/routeServerEndpoint:RouteServerEndpoint":
                return new RouteServerEndpoint(name, <any>undefined, { urn })
            case "aws:vpc/routeServerPeer:RouteServerPeer":
                return new RouteServerPeer(name, <any>undefined, { urn })
            case "aws:vpc/routeServerPropagation:RouteServerPropagation":
                return new RouteServerPropagation(name, <any>undefined, { urn })
            case "aws:vpc/routeServerVpcAssociation:RouteServerVpcAssociation":
                return new RouteServerVpcAssociation(name, <any>undefined, { urn })
            case "aws:vpc/securityGroupEgressRule:SecurityGroupEgressRule":
                return new SecurityGroupEgressRule(name, <any>undefined, { urn })
            case "aws:vpc/securityGroupIngressRule:SecurityGroupIngressRule":
                return new SecurityGroupIngressRule(name, <any>undefined, { urn })
            case "aws:vpc/securityGroupVpcAssociation:SecurityGroupVpcAssociation":
                return new SecurityGroupVpcAssociation(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "vpc/endpointPrivateDns", _module)
pulumi.runtime.registerResourceModule("aws", "vpc/endpointServicePrivateDnsVerification", _module)
pulumi.runtime.registerResourceModule("aws", "vpc/routeServer", _module)
pulumi.runtime.registerResourceModule("aws", "vpc/routeServerEndpoint", _module)
pulumi.runtime.registerResourceModule("aws", "vpc/routeServerPeer", _module)
pulumi.runtime.registerResourceModule("aws", "vpc/routeServerPropagation", _module)
pulumi.runtime.registerResourceModule("aws", "vpc/routeServerVpcAssociation", _module)
pulumi.runtime.registerResourceModule("aws", "vpc/securityGroupEgressRule", _module)
pulumi.runtime.registerResourceModule("aws", "vpc/securityGroupIngressRule", _module)
pulumi.runtime.registerResourceModule("aws", "vpc/securityGroupVpcAssociation", _module)
