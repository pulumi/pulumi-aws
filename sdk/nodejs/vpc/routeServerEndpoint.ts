// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Provides a resource for managing a VPC (Virtual Private Cloud) Route Server Endpoint.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.vpc.RouteServerEndpoint("test", {
 *     routeServerId: example.routeServerId,
 *     subnetId: main.id,
 *     tags: {
 *         Name: "Endpoint A",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import VPC (Virtual Private Cloud) Route Server Endpoint using the `route_server_endpoint_id`. For example:
 *
 * ```sh
 * $ pulumi import aws:vpc/routeServerEndpoint:RouteServerEndpoint example rse-12345678
 * ```
 */
export class RouteServerEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing RouteServerEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouteServerEndpointState, opts?: pulumi.CustomResourceOptions): RouteServerEndpoint {
        return new RouteServerEndpoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:vpc/routeServerEndpoint:RouteServerEndpoint';

    /**
     * Returns true if the given object is an instance of RouteServerEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RouteServerEndpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RouteServerEndpoint.__pulumiType;
    }

    /**
     * The ARN of the route server endpoint.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The IP address of the Elastic network interface for the endpoint.
     */
    public /*out*/ readonly eniAddress!: pulumi.Output<string>;
    /**
     * The ID of the Elastic network interface for the endpoint.
     */
    public /*out*/ readonly eniId!: pulumi.Output<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * The unique identifier of the route server endpoint.
     */
    public /*out*/ readonly routeServerEndpointId!: pulumi.Output<string>;
    /**
     * The ID of the route server for which to create an endpoint.
     */
    public readonly routeServerId!: pulumi.Output<string>;
    /**
     * The ID of the subnet in which to create the route server endpoint.
     *
     * The following arguments are optional:
     */
    public readonly subnetId!: pulumi.Output<string>;
    /**
     * A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.vpc.RouteServerEndpointTimeouts | undefined>;
    /**
     * The ID of the VPC containing the endpoint.
     */
    public /*out*/ readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a RouteServerEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RouteServerEndpointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RouteServerEndpointArgs | RouteServerEndpointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RouteServerEndpointState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["eniAddress"] = state ? state.eniAddress : undefined;
            resourceInputs["eniId"] = state ? state.eniId : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["routeServerEndpointId"] = state ? state.routeServerEndpointId : undefined;
            resourceInputs["routeServerId"] = state ? state.routeServerId : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as RouteServerEndpointArgs | undefined;
            if ((!args || args.routeServerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'routeServerId'");
            }
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["routeServerId"] = args ? args.routeServerId : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["eniAddress"] = undefined /*out*/;
            resourceInputs["eniId"] = undefined /*out*/;
            resourceInputs["routeServerEndpointId"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
            resourceInputs["vpcId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RouteServerEndpoint.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RouteServerEndpoint resources.
 */
export interface RouteServerEndpointState {
    /**
     * The ARN of the route server endpoint.
     */
    arn?: pulumi.Input<string>;
    /**
     * The IP address of the Elastic network interface for the endpoint.
     */
    eniAddress?: pulumi.Input<string>;
    /**
     * The ID of the Elastic network interface for the endpoint.
     */
    eniId?: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * The unique identifier of the route server endpoint.
     */
    routeServerEndpointId?: pulumi.Input<string>;
    /**
     * The ID of the route server for which to create an endpoint.
     */
    routeServerId?: pulumi.Input<string>;
    /**
     * The ID of the subnet in which to create the route server endpoint.
     *
     * The following arguments are optional:
     */
    subnetId?: pulumi.Input<string>;
    /**
     * A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.vpc.RouteServerEndpointTimeouts>;
    /**
     * The ID of the VPC containing the endpoint.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RouteServerEndpoint resource.
 */
export interface RouteServerEndpointArgs {
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * The ID of the route server for which to create an endpoint.
     */
    routeServerId: pulumi.Input<string>;
    /**
     * The ID of the subnet in which to create the route server endpoint.
     *
     * The following arguments are optional:
     */
    subnetId: pulumi.Input<string>;
    /**
     * A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.vpc.RouteServerEndpointTimeouts>;
}
