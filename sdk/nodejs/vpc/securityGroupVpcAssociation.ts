// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource for managing Security Group VPC Associations.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.vpc.SecurityGroupVpcAssociation("example", {
 *     securityGroupId: "sg-05f1f54ab49bb39a3",
 *     vpcId: "vpc-01df9d105095412ba",
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import a Security Group VPC Association using the `security_group_id` and `vpc_id` arguments, separated by a comma (`,`). For example:
 *
 * ```sh
 * $ pulumi import aws:vpc/securityGroupVpcAssociation:SecurityGroupVpcAssociation example sg-12345,vpc-67890
 * ```
 */
export class SecurityGroupVpcAssociation extends pulumi.CustomResource {
    /**
     * Get an existing SecurityGroupVpcAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SecurityGroupVpcAssociationState, opts?: pulumi.CustomResourceOptions): SecurityGroupVpcAssociation {
        return new SecurityGroupVpcAssociation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:vpc/securityGroupVpcAssociation:SecurityGroupVpcAssociation';

    /**
     * Returns true if the given object is an instance of SecurityGroupVpcAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SecurityGroupVpcAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SecurityGroupVpcAssociation.__pulumiType;
    }

    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * The ID of the security group.
     */
    declare public readonly securityGroupId: pulumi.Output<string>;
    /**
     * State of the VPC association. See the [AWS documentation](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SecurityGroupVpcAssociation.html) for possible values.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    declare public readonly timeouts: pulumi.Output<outputs.vpc.SecurityGroupVpcAssociationTimeouts | undefined>;
    /**
     * The ID of the VPC to make the association with.
     */
    declare public readonly vpcId: pulumi.Output<string>;

    /**
     * Create a SecurityGroupVpcAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SecurityGroupVpcAssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SecurityGroupVpcAssociationArgs | SecurityGroupVpcAssociationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SecurityGroupVpcAssociationState | undefined;
            resourceInputs["region"] = state?.region;
            resourceInputs["securityGroupId"] = state?.securityGroupId;
            resourceInputs["state"] = state?.state;
            resourceInputs["timeouts"] = state?.timeouts;
            resourceInputs["vpcId"] = state?.vpcId;
        } else {
            const args = argsOrState as SecurityGroupVpcAssociationArgs | undefined;
            if (args?.securityGroupId === undefined && !opts.urn) {
                throw new Error("Missing required property 'securityGroupId'");
            }
            if (args?.vpcId === undefined && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["region"] = args?.region;
            resourceInputs["securityGroupId"] = args?.securityGroupId;
            resourceInputs["timeouts"] = args?.timeouts;
            resourceInputs["vpcId"] = args?.vpcId;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SecurityGroupVpcAssociation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SecurityGroupVpcAssociation resources.
 */
export interface SecurityGroupVpcAssociationState {
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * The ID of the security group.
     */
    securityGroupId?: pulumi.Input<string>;
    /**
     * State of the VPC association. See the [AWS documentation](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SecurityGroupVpcAssociation.html) for possible values.
     */
    state?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.vpc.SecurityGroupVpcAssociationTimeouts>;
    /**
     * The ID of the VPC to make the association with.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SecurityGroupVpcAssociation resource.
 */
export interface SecurityGroupVpcAssociationArgs {
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * The ID of the security group.
     */
    securityGroupId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.vpc.SecurityGroupVpcAssociationTimeouts>;
    /**
     * The ID of the VPC to make the association with.
     */
    vpcId: pulumi.Input<string>;
}
