// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Provides a resource for managing a VPC (Virtual Private Cloud) Route Server.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.vpc.RouteServer("test", {
 *     amazonSideAsn: 65534,
 *     tags: {
 *         Name: "Test",
 *     },
 * });
 * ```
 *
 * ### Persist Route and SNS Notification
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.vpc.RouteServer("test", {
 *     amazonSideAsn: 65534,
 *     persistRoutes: "enable",
 *     persistRoutesDuration: 2,
 *     snsNotificationsEnabled: true,
 *     tags: {
 *         Name: "Main Route Server",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import VPC (Virtual Private Cloud) Route Server using the `route_server_id`. For example:
 *
 * ```sh
 * $ pulumi import aws:vpc/routeServer:RouteServer example rs-12345678
 * ```
 */
export class RouteServer extends pulumi.CustomResource {
    /**
     * Get an existing RouteServer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouteServerState, opts?: pulumi.CustomResourceOptions): RouteServer {
        return new RouteServer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:vpc/routeServer:RouteServer';

    /**
     * Returns true if the given object is an instance of RouteServer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RouteServer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RouteServer.__pulumiType;
    }

    /**
     * The Border Gateway Protocol (BGP) Autonomous System Number (ASN) for the appliance. Valid values are from 1 to 4294967295.
     *
     * The following arguments are optional:
     */
    declare public readonly amazonSideAsn: pulumi.Output<number>;
    /**
     * The ARN of the route server.
     */
    declare public /*out*/ readonly arn: pulumi.Output<string>;
    /**
     * Indicates whether routes should be persisted after all BGP sessions are terminated. Valid values are `enable`, `disable`, `reset`
     */
    declare public readonly persistRoutes: pulumi.Output<string>;
    /**
     * The number of minutes a route server will wait after BGP is re-established to unpersist the routes in the FIB and RIB. Value must be in the range of 1-5. Required if `persistRoutes` is enabled.
     */
    declare public readonly persistRoutesDuration: pulumi.Output<number | undefined>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * The unique identifier of the route server.
     */
    declare public /*out*/ readonly routeServerId: pulumi.Output<string>;
    /**
     * Indicates whether SNS notifications should be enabled for route server events. Enabling SNS notifications persists BGP status changes to an SNS topic provisioned by AWS`.
     */
    declare public readonly snsNotificationsEnabled: pulumi.Output<boolean>;
    /**
     * The ARN of the SNS topic where notifications are published.
     */
    declare public /*out*/ readonly snsTopicArn: pulumi.Output<string>;
    /**
     * A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    declare public /*out*/ readonly tagsAll: pulumi.Output<{[key: string]: string}>;
    declare public readonly timeouts: pulumi.Output<outputs.vpc.RouteServerTimeouts | undefined>;

    /**
     * Create a RouteServer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RouteServerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RouteServerArgs | RouteServerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RouteServerState | undefined;
            resourceInputs["amazonSideAsn"] = state?.amazonSideAsn;
            resourceInputs["arn"] = state?.arn;
            resourceInputs["persistRoutes"] = state?.persistRoutes;
            resourceInputs["persistRoutesDuration"] = state?.persistRoutesDuration;
            resourceInputs["region"] = state?.region;
            resourceInputs["routeServerId"] = state?.routeServerId;
            resourceInputs["snsNotificationsEnabled"] = state?.snsNotificationsEnabled;
            resourceInputs["snsTopicArn"] = state?.snsTopicArn;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tagsAll"] = state?.tagsAll;
            resourceInputs["timeouts"] = state?.timeouts;
        } else {
            const args = argsOrState as RouteServerArgs | undefined;
            if (args?.amazonSideAsn === undefined && !opts.urn) {
                throw new Error("Missing required property 'amazonSideAsn'");
            }
            resourceInputs["amazonSideAsn"] = args?.amazonSideAsn;
            resourceInputs["persistRoutes"] = args?.persistRoutes;
            resourceInputs["persistRoutesDuration"] = args?.persistRoutesDuration;
            resourceInputs["region"] = args?.region;
            resourceInputs["snsNotificationsEnabled"] = args?.snsNotificationsEnabled;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["timeouts"] = args?.timeouts;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["routeServerId"] = undefined /*out*/;
            resourceInputs["snsTopicArn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RouteServer.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RouteServer resources.
 */
export interface RouteServerState {
    /**
     * The Border Gateway Protocol (BGP) Autonomous System Number (ASN) for the appliance. Valid values are from 1 to 4294967295.
     *
     * The following arguments are optional:
     */
    amazonSideAsn?: pulumi.Input<number>;
    /**
     * The ARN of the route server.
     */
    arn?: pulumi.Input<string>;
    /**
     * Indicates whether routes should be persisted after all BGP sessions are terminated. Valid values are `enable`, `disable`, `reset`
     */
    persistRoutes?: pulumi.Input<string>;
    /**
     * The number of minutes a route server will wait after BGP is re-established to unpersist the routes in the FIB and RIB. Value must be in the range of 1-5. Required if `persistRoutes` is enabled.
     */
    persistRoutesDuration?: pulumi.Input<number>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * The unique identifier of the route server.
     */
    routeServerId?: pulumi.Input<string>;
    /**
     * Indicates whether SNS notifications should be enabled for route server events. Enabling SNS notifications persists BGP status changes to an SNS topic provisioned by AWS`.
     */
    snsNotificationsEnabled?: pulumi.Input<boolean>;
    /**
     * The ARN of the SNS topic where notifications are published.
     */
    snsTopicArn?: pulumi.Input<string>;
    /**
     * A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.vpc.RouteServerTimeouts>;
}

/**
 * The set of arguments for constructing a RouteServer resource.
 */
export interface RouteServerArgs {
    /**
     * The Border Gateway Protocol (BGP) Autonomous System Number (ASN) for the appliance. Valid values are from 1 to 4294967295.
     *
     * The following arguments are optional:
     */
    amazonSideAsn: pulumi.Input<number>;
    /**
     * Indicates whether routes should be persisted after all BGP sessions are terminated. Valid values are `enable`, `disable`, `reset`
     */
    persistRoutes?: pulumi.Input<string>;
    /**
     * The number of minutes a route server will wait after BGP is re-established to unpersist the routes in the FIB and RIB. Value must be in the range of 1-5. Required if `persistRoutes` is enabled.
     */
    persistRoutesDuration?: pulumi.Input<number>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * Indicates whether SNS notifications should be enabled for route server events. Enabling SNS notifications persists BGP status changes to an SNS topic provisioned by AWS`.
     */
    snsNotificationsEnabled?: pulumi.Input<boolean>;
    /**
     * A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.vpc.RouteServerTimeouts>;
}
