// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AnomalyMonitorArgs, AnomalyMonitorState } from "./anomalyMonitor";
export type AnomalyMonitor = import("./anomalyMonitor").AnomalyMonitor;
export const AnomalyMonitor: typeof import("./anomalyMonitor").AnomalyMonitor = null as any;

export { AnomalySubscriptionArgs, AnomalySubscriptionState } from "./anomalySubscription";
export type AnomalySubscription = import("./anomalySubscription").AnomalySubscription;
export const AnomalySubscription: typeof import("./anomalySubscription").AnomalySubscription = null as any;

export { CostAllocationTagArgs, CostAllocationTagState } from "./costAllocationTag";
export type CostAllocationTag = import("./costAllocationTag").CostAllocationTag;
export const CostAllocationTag: typeof import("./costAllocationTag").CostAllocationTag = null as any;

export { CostCategoryArgs, CostCategoryState } from "./costCategory";
export type CostCategory = import("./costCategory").CostCategory;
export const CostCategory: typeof import("./costCategory").CostCategory = null as any;

export { GetCostCategoryArgs, GetCostCategoryResult, GetCostCategoryOutputArgs } from "./getCostCategory";
export const getCostCategory: typeof import("./getCostCategory").getCostCategory = null as any;
export const getCostCategoryOutput: typeof import("./getCostCategory").getCostCategoryOutput = null as any;

export { GetTagsArgs, GetTagsResult, GetTagsOutputArgs } from "./getTags";
export const getTags: typeof import("./getTags").getTags = null as any;
export const getTagsOutput: typeof import("./getTags").getTagsOutput = null as any;

utilities.lazyLoad(exports, ["AnomalyMonitor"], () => require("./anomalyMonitor"));
utilities.lazyLoad(exports, ["AnomalySubscription"], () => require("./anomalySubscription"));
utilities.lazyLoad(exports, ["CostAllocationTag"], () => require("./costAllocationTag"));
utilities.lazyLoad(exports, ["CostCategory"], () => require("./costCategory"));
utilities.lazyLoad(exports, ["getCostCategory","getCostCategoryOutput"], () => require("./getCostCategory"));
utilities.lazyLoad(exports, ["getTags","getTagsOutput"], () => require("./getTags"));

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws:costexplorer/anomalyMonitor:AnomalyMonitor":
                return new AnomalyMonitor(name, <any>undefined, { urn })
            case "aws:costexplorer/anomalySubscription:AnomalySubscription":
                return new AnomalySubscription(name, <any>undefined, { urn })
            case "aws:costexplorer/costAllocationTag:CostAllocationTag":
                return new CostAllocationTag(name, <any>undefined, { urn })
            case "aws:costexplorer/costCategory:CostCategory":
                return new CostCategory(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "costexplorer/anomalyMonitor", _module)
pulumi.runtime.registerResourceModule("aws", "costexplorer/anomalySubscription", _module)
pulumi.runtime.registerResourceModule("aws", "costexplorer/costAllocationTag", _module)
pulumi.runtime.registerResourceModule("aws", "costexplorer/costCategory", _module)
