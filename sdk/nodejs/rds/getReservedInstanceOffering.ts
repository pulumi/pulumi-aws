// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getReservedInstanceOffering(args: GetReservedInstanceOfferingArgs, opts?: pulumi.InvokeOptions): Promise<GetReservedInstanceOfferingResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:rds/getReservedInstanceOffering:getReservedInstanceOffering", {
        "dbInstanceClass": args.dbInstanceClass,
        "duration": args.duration,
        "multiAz": args.multiAz,
        "offeringType": args.offeringType,
        "productDescription": args.productDescription,
    }, opts);
}

/**
 * A collection of arguments for invoking getReservedInstanceOffering.
 */
export interface GetReservedInstanceOfferingArgs {
    dbInstanceClass: string;
    duration: number;
    multiAz: boolean;
    offeringType: string;
    productDescription: string;
}

/**
 * A collection of values returned by getReservedInstanceOffering.
 */
export interface GetReservedInstanceOfferingResult {
    readonly currencyCode: string;
    readonly dbInstanceClass: string;
    readonly duration: number;
    readonly fixedPrice: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly multiAz: boolean;
    readonly offeringId: string;
    readonly offeringType: string;
    readonly productDescription: string;
}
export function getReservedInstanceOfferingOutput(args: GetReservedInstanceOfferingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetReservedInstanceOfferingResult> {
    return pulumi.output(args).apply((a: any) => getReservedInstanceOffering(a, opts))
}

/**
 * A collection of arguments for invoking getReservedInstanceOffering.
 */
export interface GetReservedInstanceOfferingOutputArgs {
    dbInstanceClass: pulumi.Input<string>;
    duration: pulumi.Input<number>;
    multiAz: pulumi.Input<boolean>;
    offeringType: pulumi.Input<string>;
    productDescription: pulumi.Input<string>;
}
