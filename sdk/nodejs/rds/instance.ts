// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceState, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:rds/instance:Instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }

    public /*out*/ readonly address!: pulumi.Output<string>;
    public readonly allocatedStorage!: pulumi.Output<number>;
    public readonly allowMajorVersionUpgrade!: pulumi.Output<boolean | undefined>;
    public readonly applyImmediately!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly autoMinorVersionUpgrade!: pulumi.Output<boolean | undefined>;
    public readonly availabilityZone!: pulumi.Output<string>;
    public readonly backupRetentionPeriod!: pulumi.Output<number>;
    public readonly backupWindow!: pulumi.Output<string>;
    public readonly blueGreenUpdate!: pulumi.Output<outputs.rds.InstanceBlueGreenUpdate | undefined>;
    public readonly caCertIdentifier!: pulumi.Output<string>;
    public readonly characterSetName!: pulumi.Output<string>;
    public readonly copyTagsToSnapshot!: pulumi.Output<boolean | undefined>;
    public readonly customIamInstanceProfile!: pulumi.Output<string | undefined>;
    public readonly customerOwnedIpEnabled!: pulumi.Output<boolean | undefined>;
    public readonly dbName!: pulumi.Output<string>;
    public readonly dbSubnetGroupName!: pulumi.Output<string>;
    public readonly deleteAutomatedBackups!: pulumi.Output<boolean | undefined>;
    public readonly deletionProtection!: pulumi.Output<boolean | undefined>;
    public readonly domain!: pulumi.Output<string | undefined>;
    public readonly domainIamRoleName!: pulumi.Output<string | undefined>;
    public readonly enabledCloudwatchLogsExports!: pulumi.Output<string[] | undefined>;
    public /*out*/ readonly endpoint!: pulumi.Output<string>;
    public readonly engine!: pulumi.Output<string>;
    public readonly engineVersion!: pulumi.Output<string>;
    public /*out*/ readonly engineVersionActual!: pulumi.Output<string>;
    public readonly finalSnapshotIdentifier!: pulumi.Output<string | undefined>;
    public /*out*/ readonly hostedZoneId!: pulumi.Output<string>;
    public readonly iamDatabaseAuthenticationEnabled!: pulumi.Output<boolean | undefined>;
    public readonly identifier!: pulumi.Output<string>;
    public readonly identifierPrefix!: pulumi.Output<string>;
    public readonly instanceClass!: pulumi.Output<string>;
    public readonly iops!: pulumi.Output<number>;
    public readonly kmsKeyId!: pulumi.Output<string>;
    public /*out*/ readonly latestRestorableTime!: pulumi.Output<string>;
    public readonly licenseModel!: pulumi.Output<string>;
    public readonly maintenanceWindow!: pulumi.Output<string>;
    public readonly maxAllocatedStorage!: pulumi.Output<number | undefined>;
    public readonly monitoringInterval!: pulumi.Output<number | undefined>;
    public readonly monitoringRoleArn!: pulumi.Output<string>;
    public readonly multiAz!: pulumi.Output<boolean>;
    public readonly name!: pulumi.Output<string>;
    public readonly ncharCharacterSetName!: pulumi.Output<string>;
    public readonly networkType!: pulumi.Output<string>;
    public readonly optionGroupName!: pulumi.Output<string>;
    public readonly parameterGroupName!: pulumi.Output<string>;
    public readonly password!: pulumi.Output<string | undefined>;
    public readonly performanceInsightsEnabled!: pulumi.Output<boolean | undefined>;
    public readonly performanceInsightsKmsKeyId!: pulumi.Output<string>;
    public readonly performanceInsightsRetentionPeriod!: pulumi.Output<number>;
    public readonly port!: pulumi.Output<number>;
    public readonly publiclyAccessible!: pulumi.Output<boolean | undefined>;
    public readonly replicaMode!: pulumi.Output<string>;
    public /*out*/ readonly replicas!: pulumi.Output<string[]>;
    public readonly replicateSourceDb!: pulumi.Output<string | undefined>;
    public /*out*/ readonly resourceId!: pulumi.Output<string>;
    public readonly restoreToPointInTime!: pulumi.Output<outputs.rds.InstanceRestoreToPointInTime | undefined>;
    public readonly s3Import!: pulumi.Output<outputs.rds.InstanceS3Import | undefined>;
    /**
     * @deprecated With the retirement of EC2-Classic the security_group_names attribute has been deprecated and will be removed in a future version.
     */
    public readonly securityGroupNames!: pulumi.Output<string[] | undefined>;
    public readonly skipFinalSnapshot!: pulumi.Output<boolean | undefined>;
    public readonly snapshotIdentifier!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly storageEncrypted!: pulumi.Output<boolean | undefined>;
    public readonly storageThroughput!: pulumi.Output<number>;
    public readonly storageType!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    public readonly timezone!: pulumi.Output<string>;
    public readonly username!: pulumi.Output<string>;
    public readonly vpcSecurityGroupIds!: pulumi.Output<string[]>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceArgs | InstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceState | undefined;
            resourceInputs["address"] = state ? state.address : undefined;
            resourceInputs["allocatedStorage"] = state ? state.allocatedStorage : undefined;
            resourceInputs["allowMajorVersionUpgrade"] = state ? state.allowMajorVersionUpgrade : undefined;
            resourceInputs["applyImmediately"] = state ? state.applyImmediately : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["autoMinorVersionUpgrade"] = state ? state.autoMinorVersionUpgrade : undefined;
            resourceInputs["availabilityZone"] = state ? state.availabilityZone : undefined;
            resourceInputs["backupRetentionPeriod"] = state ? state.backupRetentionPeriod : undefined;
            resourceInputs["backupWindow"] = state ? state.backupWindow : undefined;
            resourceInputs["blueGreenUpdate"] = state ? state.blueGreenUpdate : undefined;
            resourceInputs["caCertIdentifier"] = state ? state.caCertIdentifier : undefined;
            resourceInputs["characterSetName"] = state ? state.characterSetName : undefined;
            resourceInputs["copyTagsToSnapshot"] = state ? state.copyTagsToSnapshot : undefined;
            resourceInputs["customIamInstanceProfile"] = state ? state.customIamInstanceProfile : undefined;
            resourceInputs["customerOwnedIpEnabled"] = state ? state.customerOwnedIpEnabled : undefined;
            resourceInputs["dbName"] = state ? state.dbName : undefined;
            resourceInputs["dbSubnetGroupName"] = state ? state.dbSubnetGroupName : undefined;
            resourceInputs["deleteAutomatedBackups"] = state ? state.deleteAutomatedBackups : undefined;
            resourceInputs["deletionProtection"] = state ? state.deletionProtection : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["domainIamRoleName"] = state ? state.domainIamRoleName : undefined;
            resourceInputs["enabledCloudwatchLogsExports"] = state ? state.enabledCloudwatchLogsExports : undefined;
            resourceInputs["endpoint"] = state ? state.endpoint : undefined;
            resourceInputs["engine"] = state ? state.engine : undefined;
            resourceInputs["engineVersion"] = state ? state.engineVersion : undefined;
            resourceInputs["engineVersionActual"] = state ? state.engineVersionActual : undefined;
            resourceInputs["finalSnapshotIdentifier"] = state ? state.finalSnapshotIdentifier : undefined;
            resourceInputs["hostedZoneId"] = state ? state.hostedZoneId : undefined;
            resourceInputs["iamDatabaseAuthenticationEnabled"] = state ? state.iamDatabaseAuthenticationEnabled : undefined;
            resourceInputs["identifier"] = state ? state.identifier : undefined;
            resourceInputs["identifierPrefix"] = state ? state.identifierPrefix : undefined;
            resourceInputs["instanceClass"] = state ? state.instanceClass : undefined;
            resourceInputs["iops"] = state ? state.iops : undefined;
            resourceInputs["kmsKeyId"] = state ? state.kmsKeyId : undefined;
            resourceInputs["latestRestorableTime"] = state ? state.latestRestorableTime : undefined;
            resourceInputs["licenseModel"] = state ? state.licenseModel : undefined;
            resourceInputs["maintenanceWindow"] = state ? state.maintenanceWindow : undefined;
            resourceInputs["maxAllocatedStorage"] = state ? state.maxAllocatedStorage : undefined;
            resourceInputs["monitoringInterval"] = state ? state.monitoringInterval : undefined;
            resourceInputs["monitoringRoleArn"] = state ? state.monitoringRoleArn : undefined;
            resourceInputs["multiAz"] = state ? state.multiAz : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["ncharCharacterSetName"] = state ? state.ncharCharacterSetName : undefined;
            resourceInputs["networkType"] = state ? state.networkType : undefined;
            resourceInputs["optionGroupName"] = state ? state.optionGroupName : undefined;
            resourceInputs["parameterGroupName"] = state ? state.parameterGroupName : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["performanceInsightsEnabled"] = state ? state.performanceInsightsEnabled : undefined;
            resourceInputs["performanceInsightsKmsKeyId"] = state ? state.performanceInsightsKmsKeyId : undefined;
            resourceInputs["performanceInsightsRetentionPeriod"] = state ? state.performanceInsightsRetentionPeriod : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["publiclyAccessible"] = state ? state.publiclyAccessible : undefined;
            resourceInputs["replicaMode"] = state ? state.replicaMode : undefined;
            resourceInputs["replicas"] = state ? state.replicas : undefined;
            resourceInputs["replicateSourceDb"] = state ? state.replicateSourceDb : undefined;
            resourceInputs["resourceId"] = state ? state.resourceId : undefined;
            resourceInputs["restoreToPointInTime"] = state ? state.restoreToPointInTime : undefined;
            resourceInputs["s3Import"] = state ? state.s3Import : undefined;
            resourceInputs["securityGroupNames"] = state ? state.securityGroupNames : undefined;
            resourceInputs["skipFinalSnapshot"] = state ? state.skipFinalSnapshot : undefined;
            resourceInputs["snapshotIdentifier"] = state ? state.snapshotIdentifier : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["storageEncrypted"] = state ? state.storageEncrypted : undefined;
            resourceInputs["storageThroughput"] = state ? state.storageThroughput : undefined;
            resourceInputs["storageType"] = state ? state.storageType : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["timezone"] = state ? state.timezone : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
            resourceInputs["vpcSecurityGroupIds"] = state ? state.vpcSecurityGroupIds : undefined;
        } else {
            const args = argsOrState as InstanceArgs | undefined;
            if ((!args || args.instanceClass === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceClass'");
            }
            resourceInputs["allocatedStorage"] = args ? args.allocatedStorage : undefined;
            resourceInputs["allowMajorVersionUpgrade"] = args ? args.allowMajorVersionUpgrade : undefined;
            resourceInputs["applyImmediately"] = args ? args.applyImmediately : undefined;
            resourceInputs["autoMinorVersionUpgrade"] = args ? args.autoMinorVersionUpgrade : undefined;
            resourceInputs["availabilityZone"] = args ? args.availabilityZone : undefined;
            resourceInputs["backupRetentionPeriod"] = args ? args.backupRetentionPeriod : undefined;
            resourceInputs["backupWindow"] = args ? args.backupWindow : undefined;
            resourceInputs["blueGreenUpdate"] = args ? args.blueGreenUpdate : undefined;
            resourceInputs["caCertIdentifier"] = args ? args.caCertIdentifier : undefined;
            resourceInputs["characterSetName"] = args ? args.characterSetName : undefined;
            resourceInputs["copyTagsToSnapshot"] = args ? args.copyTagsToSnapshot : undefined;
            resourceInputs["customIamInstanceProfile"] = args ? args.customIamInstanceProfile : undefined;
            resourceInputs["customerOwnedIpEnabled"] = args ? args.customerOwnedIpEnabled : undefined;
            resourceInputs["dbName"] = args ? args.dbName : undefined;
            resourceInputs["dbSubnetGroupName"] = args ? args.dbSubnetGroupName : undefined;
            resourceInputs["deleteAutomatedBackups"] = args ? args.deleteAutomatedBackups : undefined;
            resourceInputs["deletionProtection"] = args ? args.deletionProtection : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["domainIamRoleName"] = args ? args.domainIamRoleName : undefined;
            resourceInputs["enabledCloudwatchLogsExports"] = args ? args.enabledCloudwatchLogsExports : undefined;
            resourceInputs["engine"] = args ? args.engine : undefined;
            resourceInputs["engineVersion"] = args ? args.engineVersion : undefined;
            resourceInputs["finalSnapshotIdentifier"] = args ? args.finalSnapshotIdentifier : undefined;
            resourceInputs["iamDatabaseAuthenticationEnabled"] = args ? args.iamDatabaseAuthenticationEnabled : undefined;
            resourceInputs["identifier"] = args ? args.identifier : undefined;
            resourceInputs["identifierPrefix"] = args ? args.identifierPrefix : undefined;
            resourceInputs["instanceClass"] = args ? args.instanceClass : undefined;
            resourceInputs["iops"] = args ? args.iops : undefined;
            resourceInputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            resourceInputs["licenseModel"] = args ? args.licenseModel : undefined;
            resourceInputs["maintenanceWindow"] = args ? args.maintenanceWindow : undefined;
            resourceInputs["maxAllocatedStorage"] = args ? args.maxAllocatedStorage : undefined;
            resourceInputs["monitoringInterval"] = args ? args.monitoringInterval : undefined;
            resourceInputs["monitoringRoleArn"] = args ? args.monitoringRoleArn : undefined;
            resourceInputs["multiAz"] = args ? args.multiAz : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["ncharCharacterSetName"] = args ? args.ncharCharacterSetName : undefined;
            resourceInputs["networkType"] = args ? args.networkType : undefined;
            resourceInputs["optionGroupName"] = args ? args.optionGroupName : undefined;
            resourceInputs["parameterGroupName"] = args ? args.parameterGroupName : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["performanceInsightsEnabled"] = args ? args.performanceInsightsEnabled : undefined;
            resourceInputs["performanceInsightsKmsKeyId"] = args ? args.performanceInsightsKmsKeyId : undefined;
            resourceInputs["performanceInsightsRetentionPeriod"] = args ? args.performanceInsightsRetentionPeriod : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["publiclyAccessible"] = args ? args.publiclyAccessible : undefined;
            resourceInputs["replicaMode"] = args ? args.replicaMode : undefined;
            resourceInputs["replicateSourceDb"] = args ? args.replicateSourceDb : undefined;
            resourceInputs["restoreToPointInTime"] = args ? args.restoreToPointInTime : undefined;
            resourceInputs["s3Import"] = args ? args.s3Import : undefined;
            resourceInputs["securityGroupNames"] = args ? args.securityGroupNames : undefined;
            resourceInputs["skipFinalSnapshot"] = args ? args.skipFinalSnapshot : undefined;
            resourceInputs["snapshotIdentifier"] = args ? args.snapshotIdentifier : undefined;
            resourceInputs["storageEncrypted"] = args ? args.storageEncrypted : undefined;
            resourceInputs["storageThroughput"] = args ? args.storageThroughput : undefined;
            resourceInputs["storageType"] = args ? args.storageType : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timezone"] = args ? args.timezone : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["vpcSecurityGroupIds"] = args ? args.vpcSecurityGroupIds : undefined;
            resourceInputs["address"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["endpoint"] = undefined /*out*/;
            resourceInputs["engineVersionActual"] = undefined /*out*/;
            resourceInputs["hostedZoneId"] = undefined /*out*/;
            resourceInputs["latestRestorableTime"] = undefined /*out*/;
            resourceInputs["replicas"] = undefined /*out*/;
            resourceInputs["resourceId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Instance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Instance resources.
 */
export interface InstanceState {
    address?: pulumi.Input<string>;
    allocatedStorage?: pulumi.Input<number>;
    allowMajorVersionUpgrade?: pulumi.Input<boolean>;
    applyImmediately?: pulumi.Input<boolean>;
    arn?: pulumi.Input<string>;
    autoMinorVersionUpgrade?: pulumi.Input<boolean>;
    availabilityZone?: pulumi.Input<string>;
    backupRetentionPeriod?: pulumi.Input<number>;
    backupWindow?: pulumi.Input<string>;
    blueGreenUpdate?: pulumi.Input<inputs.rds.InstanceBlueGreenUpdate>;
    caCertIdentifier?: pulumi.Input<string>;
    characterSetName?: pulumi.Input<string>;
    copyTagsToSnapshot?: pulumi.Input<boolean>;
    customIamInstanceProfile?: pulumi.Input<string>;
    customerOwnedIpEnabled?: pulumi.Input<boolean>;
    dbName?: pulumi.Input<string>;
    dbSubnetGroupName?: pulumi.Input<string>;
    deleteAutomatedBackups?: pulumi.Input<boolean>;
    deletionProtection?: pulumi.Input<boolean>;
    domain?: pulumi.Input<string>;
    domainIamRoleName?: pulumi.Input<string>;
    enabledCloudwatchLogsExports?: pulumi.Input<pulumi.Input<string>[]>;
    endpoint?: pulumi.Input<string>;
    engine?: pulumi.Input<string>;
    engineVersion?: pulumi.Input<string>;
    engineVersionActual?: pulumi.Input<string>;
    finalSnapshotIdentifier?: pulumi.Input<string>;
    hostedZoneId?: pulumi.Input<string>;
    iamDatabaseAuthenticationEnabled?: pulumi.Input<boolean>;
    identifier?: pulumi.Input<string>;
    identifierPrefix?: pulumi.Input<string>;
    instanceClass?: pulumi.Input<string | enums.rds.InstanceType>;
    iops?: pulumi.Input<number>;
    kmsKeyId?: pulumi.Input<string>;
    latestRestorableTime?: pulumi.Input<string>;
    licenseModel?: pulumi.Input<string>;
    maintenanceWindow?: pulumi.Input<string>;
    maxAllocatedStorage?: pulumi.Input<number>;
    monitoringInterval?: pulumi.Input<number>;
    monitoringRoleArn?: pulumi.Input<string>;
    multiAz?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    ncharCharacterSetName?: pulumi.Input<string>;
    networkType?: pulumi.Input<string>;
    optionGroupName?: pulumi.Input<string>;
    parameterGroupName?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    performanceInsightsEnabled?: pulumi.Input<boolean>;
    performanceInsightsKmsKeyId?: pulumi.Input<string>;
    performanceInsightsRetentionPeriod?: pulumi.Input<number>;
    port?: pulumi.Input<number>;
    publiclyAccessible?: pulumi.Input<boolean>;
    replicaMode?: pulumi.Input<string>;
    replicas?: pulumi.Input<pulumi.Input<string>[]>;
    replicateSourceDb?: pulumi.Input<string>;
    resourceId?: pulumi.Input<string>;
    restoreToPointInTime?: pulumi.Input<inputs.rds.InstanceRestoreToPointInTime>;
    s3Import?: pulumi.Input<inputs.rds.InstanceS3Import>;
    /**
     * @deprecated With the retirement of EC2-Classic the security_group_names attribute has been deprecated and will be removed in a future version.
     */
    securityGroupNames?: pulumi.Input<pulumi.Input<string>[]>;
    skipFinalSnapshot?: pulumi.Input<boolean>;
    snapshotIdentifier?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    storageEncrypted?: pulumi.Input<boolean>;
    storageThroughput?: pulumi.Input<number>;
    storageType?: pulumi.Input<string | enums.rds.StorageType>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timezone?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
    vpcSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    allocatedStorage?: pulumi.Input<number>;
    allowMajorVersionUpgrade?: pulumi.Input<boolean>;
    applyImmediately?: pulumi.Input<boolean>;
    autoMinorVersionUpgrade?: pulumi.Input<boolean>;
    availabilityZone?: pulumi.Input<string>;
    backupRetentionPeriod?: pulumi.Input<number>;
    backupWindow?: pulumi.Input<string>;
    blueGreenUpdate?: pulumi.Input<inputs.rds.InstanceBlueGreenUpdate>;
    caCertIdentifier?: pulumi.Input<string>;
    characterSetName?: pulumi.Input<string>;
    copyTagsToSnapshot?: pulumi.Input<boolean>;
    customIamInstanceProfile?: pulumi.Input<string>;
    customerOwnedIpEnabled?: pulumi.Input<boolean>;
    dbName?: pulumi.Input<string>;
    dbSubnetGroupName?: pulumi.Input<string>;
    deleteAutomatedBackups?: pulumi.Input<boolean>;
    deletionProtection?: pulumi.Input<boolean>;
    domain?: pulumi.Input<string>;
    domainIamRoleName?: pulumi.Input<string>;
    enabledCloudwatchLogsExports?: pulumi.Input<pulumi.Input<string>[]>;
    engine?: pulumi.Input<string>;
    engineVersion?: pulumi.Input<string>;
    finalSnapshotIdentifier?: pulumi.Input<string>;
    iamDatabaseAuthenticationEnabled?: pulumi.Input<boolean>;
    identifier?: pulumi.Input<string>;
    identifierPrefix?: pulumi.Input<string>;
    instanceClass: pulumi.Input<string | enums.rds.InstanceType>;
    iops?: pulumi.Input<number>;
    kmsKeyId?: pulumi.Input<string>;
    licenseModel?: pulumi.Input<string>;
    maintenanceWindow?: pulumi.Input<string>;
    maxAllocatedStorage?: pulumi.Input<number>;
    monitoringInterval?: pulumi.Input<number>;
    monitoringRoleArn?: pulumi.Input<string>;
    multiAz?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    ncharCharacterSetName?: pulumi.Input<string>;
    networkType?: pulumi.Input<string>;
    optionGroupName?: pulumi.Input<string>;
    parameterGroupName?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    performanceInsightsEnabled?: pulumi.Input<boolean>;
    performanceInsightsKmsKeyId?: pulumi.Input<string>;
    performanceInsightsRetentionPeriod?: pulumi.Input<number>;
    port?: pulumi.Input<number>;
    publiclyAccessible?: pulumi.Input<boolean>;
    replicaMode?: pulumi.Input<string>;
    replicateSourceDb?: pulumi.Input<string>;
    restoreToPointInTime?: pulumi.Input<inputs.rds.InstanceRestoreToPointInTime>;
    s3Import?: pulumi.Input<inputs.rds.InstanceS3Import>;
    /**
     * @deprecated With the retirement of EC2-Classic the security_group_names attribute has been deprecated and will be removed in a future version.
     */
    securityGroupNames?: pulumi.Input<pulumi.Input<string>[]>;
    skipFinalSnapshot?: pulumi.Input<boolean>;
    snapshotIdentifier?: pulumi.Input<string>;
    storageEncrypted?: pulumi.Input<boolean>;
    storageThroughput?: pulumi.Input<number>;
    storageType?: pulumi.Input<string | enums.rds.StorageType>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timezone?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
    vpcSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}
