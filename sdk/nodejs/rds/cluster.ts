// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Manages a [RDS Aurora Cluster](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html). To manage cluster instances that inherit configuration from the cluster (when not running the cluster in `serverless` engine mode), see the `aws.rds.ClusterInstance` resource. To manage non-Aurora databases (e.g. MySQL, PostgreSQL, SQL Server, etc.), see the `aws.rds.Instance` resource.
 *
 * For information on the difference between the available Aurora MySQL engines
 * see [Comparison between Aurora MySQL 1 and Aurora MySQL 2](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AuroraMySQL.Updates.20180206.html)
 * in the Amazon RDS User Guide.
 *
 * Changes to an RDS Cluster can occur when you manually change a
 * parameter, such as `port`, and are reflected in the next maintenance
 * window. Because of this, this provider may report a difference in its planning
 * phase because a modification has not yet taken place. You can use the
 * `applyImmediately` flag to instruct the service to apply the change immediately
 * (see documentation below).
 *
 * > **Note:** using `applyImmediately` can result in a
 * brief downtime as the server reboots. See the AWS Docs on [RDS Maintenance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html)
 * for more information.
 *
 * > **Note:** All arguments including the username and password will be stored in the raw state as plain-text.
 *
 * ## Example Usage
 * ### Aurora MySQL 2.x (MySQL 5.7)
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const defaultCluster = new aws.rds.Cluster("default", {
 *     availabilityZones: [
 *         "us-west-2a",
 *         "us-west-2b",
 *         "us-west-2c",
 *     ],
 *     backupRetentionPeriod: 5,
 *     databaseName: "mydb",
 *     engine: "aurora-mysql",
 *     engineVersion: "5.7.mysql_aurora.2.03.2",
 *     masterPassword: "bar",
 *     masterUsername: "foo",
 *     preferredBackupWindow: "07:00-09:00",
 * });
 * ```
 * ### Aurora MySQL 1.x (MySQL 5.6)
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const defaultCluster = new aws.rds.Cluster("default", {
 *     availabilityZones: [
 *         "us-west-2a",
 *         "us-west-2b",
 *         "us-west-2c",
 *     ],
 *     backupRetentionPeriod: 5,
 *     databaseName: "mydb",
 *     masterPassword: "bar",
 *     masterUsername: "foo",
 *     preferredBackupWindow: "07:00-09:00",
 * });
 * ```
 * ### Aurora with PostgreSQL engine
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const postgresql = new aws.rds.Cluster("postgresql", {
 *     availabilityZones: [
 *         "us-west-2a",
 *         "us-west-2b",
 *         "us-west-2c",
 *     ],
 *     backupRetentionPeriod: 5,
 *     databaseName: "mydb",
 *     engine: "aurora-postgresql",
 *     masterPassword: "bar",
 *     masterUsername: "foo",
 *     preferredBackupWindow: "07:00-09:00",
 * });
 * ```
 * ### Aurora Multi-Master Cluster
 *
 * > More information about Aurora Multi-Master Clusters can be found in the [RDS User Guide](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-multi-master.html).
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.rds.Cluster("example", {
 *     dbSubnetGroupName: aws_db_subnet_group.example.name,
 *     engineMode: "multimaster",
 *     masterPassword: "barbarbarbar",
 *     masterUsername: "foo",
 *     skipFinalSnapshot: true,
 * });
 * ```
 *
 * ## Import
 *
 * RDS Clusters can be imported using the `cluster_identifier`, e.g.
 *
 * ```sh
 *  $ pulumi import aws:rds/cluster:Cluster aurora_cluster aurora-prod-cluster
 * ```
 */
export class Cluster extends pulumi.CustomResource {
    /**
     * Get an existing Cluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterState, opts?: pulumi.CustomResourceOptions): Cluster {
        return new Cluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:rds/cluster:Cluster';

    /**
     * Returns true if the given object is an instance of Cluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Cluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Cluster.__pulumiType;
    }

    /**
     * Enable to allow major engine version upgrades when changing engine versions. Defaults to `false`.
     */
    public readonly allowMajorVersionUpgrade!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is `false`. See [Amazon RDS Documentation for more information.](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html)
     */
    public readonly applyImmediately!: pulumi.Output<boolean>;
    /**
     * Amazon Resource Name (ARN) of cluster
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * A list of EC2 Availability Zones for the DB cluster storage where DB cluster instances can be created. RDS automatically assigns 3 AZs if less than 3 AZs are configured, which will show as a difference requiring resource recreation next provider update. It is recommended to specify 3 AZs or use [the `ignoreChanges` argument](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) if necessary.
     */
    public readonly availabilityZones!: pulumi.Output<string[]>;
    /**
     * The target backtrack window, in seconds. Only available for `aurora` engine currently. To disable backtracking, set this value to `0`. Defaults to `0`. Must be between `0` and `259200` (72 hours)
     */
    public readonly backtrackWindow!: pulumi.Output<number | undefined>;
    /**
     * The days to retain backups for. Default `1`
     */
    public readonly backupRetentionPeriod!: pulumi.Output<number | undefined>;
    /**
     * The cluster identifier. If omitted, this provider will assign a random, unique identifier.
     */
    public readonly clusterIdentifier!: pulumi.Output<string>;
    /**
     * Creates a unique cluster identifier beginning with the specified prefix. Conflicts with `clusterIdentifier`.
     */
    public readonly clusterIdentifierPrefix!: pulumi.Output<string>;
    /**
     * List of RDS Instances that are a part of this cluster
     */
    public readonly clusterMembers!: pulumi.Output<string[]>;
    /**
     * The RDS Cluster Resource ID
     */
    public /*out*/ readonly clusterResourceId!: pulumi.Output<string>;
    /**
     * Copy all Cluster `tags` to snapshots. Default is `false`.
     */
    public readonly copyTagsToSnapshot!: pulumi.Output<boolean | undefined>;
    /**
     * Name for an automatically created database on cluster creation. There are different naming restrictions per database engine: [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints)
     */
    public readonly databaseName!: pulumi.Output<string>;
    /**
     * A cluster parameter group to associate with the cluster.
     */
    public readonly dbClusterParameterGroupName!: pulumi.Output<string>;
    /**
     * A DB subnet group to associate with this DB instance. **NOTE:** This must match the `dbSubnetGroupName` specified on every `aws.rds.ClusterInstance` in the cluster.
     */
    public readonly dbSubnetGroupName!: pulumi.Output<string>;
    /**
     * If the DB instance should have deletion protection enabled. The database can't be deleted when this value is set to `true`. The default is `false`.
     */
    public readonly deletionProtection!: pulumi.Output<boolean | undefined>;
    /**
     * Enable HTTP endpoint (data API). Only valid when `engineMode` is set to `serverless`.
     */
    public readonly enableHttpEndpoint!: pulumi.Output<boolean | undefined>;
    /**
     * Set of log types to export to cloudwatch. If omitted, no logs will be exported. The following log types are supported: `audit`, `error`, `general`, `slowquery`, `postgresql` (PostgreSQL).
     */
    public readonly enabledCloudwatchLogsExports!: pulumi.Output<string[] | undefined>;
    /**
     * The DNS address of the RDS instance
     */
    public /*out*/ readonly endpoint!: pulumi.Output<string>;
    /**
     * The name of the database engine to be used for this DB cluster. Defaults to `aurora`. Valid Values: `aurora`, `aurora-mysql`, `aurora-postgresql`
     */
    public readonly engine!: pulumi.Output<string | undefined>;
    /**
     * The database engine mode. Valid values: `global` (only valid for Aurora MySQL 1.21 and earlier), `multimaster`, `parallelquery`, `provisioned`, `serverless`. Defaults to: `provisioned`. See the [RDS User Guide](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/aurora-serverless.html) for limitations when using `serverless`.
     */
    public readonly engineMode!: pulumi.Output<string | undefined>;
    /**
     * The database engine version. Updating this argument results in an outage. See the [Aurora MySQL](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Updates.html) and [Aurora Postgres](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraPostgreSQL.Updates.html) documentation for your configured engine to determine this value. For example with Aurora MySQL 2, a potential value for this argument is `5.7.mysql_aurora.2.03.2`.
     */
    public readonly engineVersion!: pulumi.Output<string>;
    /**
     * The name of your final DB snapshot when this DB cluster is deleted. If omitted, no final snapshot will be made.
     */
    public readonly finalSnapshotIdentifier!: pulumi.Output<string | undefined>;
    /**
     * The global cluster identifier specified on `aws.rds.GlobalCluster`.
     */
    public readonly globalClusterIdentifier!: pulumi.Output<string | undefined>;
    /**
     * The Route53 Hosted Zone ID of the endpoint
     */
    public /*out*/ readonly hostedZoneId!: pulumi.Output<string>;
    /**
     * Specifies whether or mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled. Please see [AWS Documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html) for availability and limitations.
     */
    public readonly iamDatabaseAuthenticationEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * A List of ARNs for the IAM roles to associate to the RDS Cluster.
     */
    public readonly iamRoles!: pulumi.Output<string[] | undefined>;
    /**
     * The ARN for the KMS encryption key. When specifying `kmsKeyId`, `storageEncrypted` needs to be set to true.
     */
    public readonly kmsKeyId!: pulumi.Output<string>;
    /**
     * Password for the master DB user. Note that this may show up in logs, and it will be stored in the state file. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints)
     */
    public readonly masterPassword!: pulumi.Output<string | undefined>;
    /**
     * Username for the master DB user. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints). This argument does not support in-place updates and cannot be changed during a restore from snapshot.
     */
    public readonly masterUsername!: pulumi.Output<string>;
    /**
     * The port on which the DB accepts connections
     */
    public readonly port!: pulumi.Output<number>;
    /**
     * The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per region. e.g. 04:00-09:00
     */
    public readonly preferredBackupWindow!: pulumi.Output<string>;
    /**
     * The weekly time range during which system maintenance can occur, in (UTC) e.g. wed:04:00-wed:04:30
     */
    public readonly preferredMaintenanceWindow!: pulumi.Output<string>;
    /**
     * A read-only endpoint for the Aurora cluster, automatically
     * load-balanced across replicas
     */
    public /*out*/ readonly readerEndpoint!: pulumi.Output<string>;
    /**
     * ARN of the source DB cluster or DB instance if this DB cluster is created as a Read Replica.
     */
    public readonly replicationSourceIdentifier!: pulumi.Output<string | undefined>;
    /**
     * Nested attribute for [point in time restore](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PIT.html). More details below.
     */
    public readonly restoreToPointInTime!: pulumi.Output<outputs.rds.ClusterRestoreToPointInTime | undefined>;
    public readonly s3Import!: pulumi.Output<outputs.rds.ClusterS3Import | undefined>;
    /**
     * Nested attribute with scaling properties. Only valid when `engineMode` is set to `serverless`. More details below.
     */
    public readonly scalingConfiguration!: pulumi.Output<outputs.rds.ClusterScalingConfiguration | undefined>;
    /**
     * Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created. If false is specified, a DB snapshot is created before the DB cluster is deleted, using the value from `finalSnapshotIdentifier`. Default is `false`.
     */
    public readonly skipFinalSnapshot!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a DB cluster snapshot, or the ARN when specifying a DB snapshot.
     */
    public readonly snapshotIdentifier!: pulumi.Output<string | undefined>;
    /**
     * The source region for an encrypted replica DB cluster.
     */
    public readonly sourceRegion!: pulumi.Output<string | undefined>;
    /**
     * Specifies whether the DB cluster is encrypted
     */
    public readonly storageEncrypted!: pulumi.Output<boolean>;
    /**
     * A map of tags to assign to the DB cluster.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * List of VPC security groups to associate with the Cluster
     */
    public readonly vpcSecurityGroupIds!: pulumi.Output<string[]>;

    /**
     * Create a Cluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClusterArgs | ClusterState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as ClusterState | undefined;
            inputs["allowMajorVersionUpgrade"] = state ? state.allowMajorVersionUpgrade : undefined;
            inputs["applyImmediately"] = state ? state.applyImmediately : undefined;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["availabilityZones"] = state ? state.availabilityZones : undefined;
            inputs["backtrackWindow"] = state ? state.backtrackWindow : undefined;
            inputs["backupRetentionPeriod"] = state ? state.backupRetentionPeriod : undefined;
            inputs["clusterIdentifier"] = state ? state.clusterIdentifier : undefined;
            inputs["clusterIdentifierPrefix"] = state ? state.clusterIdentifierPrefix : undefined;
            inputs["clusterMembers"] = state ? state.clusterMembers : undefined;
            inputs["clusterResourceId"] = state ? state.clusterResourceId : undefined;
            inputs["copyTagsToSnapshot"] = state ? state.copyTagsToSnapshot : undefined;
            inputs["databaseName"] = state ? state.databaseName : undefined;
            inputs["dbClusterParameterGroupName"] = state ? state.dbClusterParameterGroupName : undefined;
            inputs["dbSubnetGroupName"] = state ? state.dbSubnetGroupName : undefined;
            inputs["deletionProtection"] = state ? state.deletionProtection : undefined;
            inputs["enableHttpEndpoint"] = state ? state.enableHttpEndpoint : undefined;
            inputs["enabledCloudwatchLogsExports"] = state ? state.enabledCloudwatchLogsExports : undefined;
            inputs["endpoint"] = state ? state.endpoint : undefined;
            inputs["engine"] = state ? state.engine : undefined;
            inputs["engineMode"] = state ? state.engineMode : undefined;
            inputs["engineVersion"] = state ? state.engineVersion : undefined;
            inputs["finalSnapshotIdentifier"] = state ? state.finalSnapshotIdentifier : undefined;
            inputs["globalClusterIdentifier"] = state ? state.globalClusterIdentifier : undefined;
            inputs["hostedZoneId"] = state ? state.hostedZoneId : undefined;
            inputs["iamDatabaseAuthenticationEnabled"] = state ? state.iamDatabaseAuthenticationEnabled : undefined;
            inputs["iamRoles"] = state ? state.iamRoles : undefined;
            inputs["kmsKeyId"] = state ? state.kmsKeyId : undefined;
            inputs["masterPassword"] = state ? state.masterPassword : undefined;
            inputs["masterUsername"] = state ? state.masterUsername : undefined;
            inputs["port"] = state ? state.port : undefined;
            inputs["preferredBackupWindow"] = state ? state.preferredBackupWindow : undefined;
            inputs["preferredMaintenanceWindow"] = state ? state.preferredMaintenanceWindow : undefined;
            inputs["readerEndpoint"] = state ? state.readerEndpoint : undefined;
            inputs["replicationSourceIdentifier"] = state ? state.replicationSourceIdentifier : undefined;
            inputs["restoreToPointInTime"] = state ? state.restoreToPointInTime : undefined;
            inputs["s3Import"] = state ? state.s3Import : undefined;
            inputs["scalingConfiguration"] = state ? state.scalingConfiguration : undefined;
            inputs["skipFinalSnapshot"] = state ? state.skipFinalSnapshot : undefined;
            inputs["snapshotIdentifier"] = state ? state.snapshotIdentifier : undefined;
            inputs["sourceRegion"] = state ? state.sourceRegion : undefined;
            inputs["storageEncrypted"] = state ? state.storageEncrypted : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["vpcSecurityGroupIds"] = state ? state.vpcSecurityGroupIds : undefined;
        } else {
            const args = argsOrState as ClusterArgs | undefined;
            inputs["allowMajorVersionUpgrade"] = args ? args.allowMajorVersionUpgrade : undefined;
            inputs["applyImmediately"] = args ? args.applyImmediately : undefined;
            inputs["availabilityZones"] = args ? args.availabilityZones : undefined;
            inputs["backtrackWindow"] = args ? args.backtrackWindow : undefined;
            inputs["backupRetentionPeriod"] = args ? args.backupRetentionPeriod : undefined;
            inputs["clusterIdentifier"] = args ? args.clusterIdentifier : undefined;
            inputs["clusterIdentifierPrefix"] = args ? args.clusterIdentifierPrefix : undefined;
            inputs["clusterMembers"] = args ? args.clusterMembers : undefined;
            inputs["copyTagsToSnapshot"] = args ? args.copyTagsToSnapshot : undefined;
            inputs["databaseName"] = args ? args.databaseName : undefined;
            inputs["dbClusterParameterGroupName"] = args ? args.dbClusterParameterGroupName : undefined;
            inputs["dbSubnetGroupName"] = args ? args.dbSubnetGroupName : undefined;
            inputs["deletionProtection"] = args ? args.deletionProtection : undefined;
            inputs["enableHttpEndpoint"] = args ? args.enableHttpEndpoint : undefined;
            inputs["enabledCloudwatchLogsExports"] = args ? args.enabledCloudwatchLogsExports : undefined;
            inputs["engine"] = args ? args.engine : undefined;
            inputs["engineMode"] = args ? args.engineMode : undefined;
            inputs["engineVersion"] = args ? args.engineVersion : undefined;
            inputs["finalSnapshotIdentifier"] = args ? args.finalSnapshotIdentifier : undefined;
            inputs["globalClusterIdentifier"] = args ? args.globalClusterIdentifier : undefined;
            inputs["iamDatabaseAuthenticationEnabled"] = args ? args.iamDatabaseAuthenticationEnabled : undefined;
            inputs["iamRoles"] = args ? args.iamRoles : undefined;
            inputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            inputs["masterPassword"] = args ? args.masterPassword : undefined;
            inputs["masterUsername"] = args ? args.masterUsername : undefined;
            inputs["port"] = args ? args.port : undefined;
            inputs["preferredBackupWindow"] = args ? args.preferredBackupWindow : undefined;
            inputs["preferredMaintenanceWindow"] = args ? args.preferredMaintenanceWindow : undefined;
            inputs["replicationSourceIdentifier"] = args ? args.replicationSourceIdentifier : undefined;
            inputs["restoreToPointInTime"] = args ? args.restoreToPointInTime : undefined;
            inputs["s3Import"] = args ? args.s3Import : undefined;
            inputs["scalingConfiguration"] = args ? args.scalingConfiguration : undefined;
            inputs["skipFinalSnapshot"] = args ? args.skipFinalSnapshot : undefined;
            inputs["snapshotIdentifier"] = args ? args.snapshotIdentifier : undefined;
            inputs["sourceRegion"] = args ? args.sourceRegion : undefined;
            inputs["storageEncrypted"] = args ? args.storageEncrypted : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["vpcSecurityGroupIds"] = args ? args.vpcSecurityGroupIds : undefined;
            inputs["arn"] = undefined /*out*/;
            inputs["clusterResourceId"] = undefined /*out*/;
            inputs["endpoint"] = undefined /*out*/;
            inputs["hostedZoneId"] = undefined /*out*/;
            inputs["readerEndpoint"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Cluster.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Cluster resources.
 */
export interface ClusterState {
    /**
     * Enable to allow major engine version upgrades when changing engine versions. Defaults to `false`.
     */
    readonly allowMajorVersionUpgrade?: pulumi.Input<boolean>;
    /**
     * Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is `false`. See [Amazon RDS Documentation for more information.](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html)
     */
    readonly applyImmediately?: pulumi.Input<boolean>;
    /**
     * Amazon Resource Name (ARN) of cluster
     */
    readonly arn?: pulumi.Input<string>;
    /**
     * A list of EC2 Availability Zones for the DB cluster storage where DB cluster instances can be created. RDS automatically assigns 3 AZs if less than 3 AZs are configured, which will show as a difference requiring resource recreation next provider update. It is recommended to specify 3 AZs or use [the `ignoreChanges` argument](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) if necessary.
     */
    readonly availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The target backtrack window, in seconds. Only available for `aurora` engine currently. To disable backtracking, set this value to `0`. Defaults to `0`. Must be between `0` and `259200` (72 hours)
     */
    readonly backtrackWindow?: pulumi.Input<number>;
    /**
     * The days to retain backups for. Default `1`
     */
    readonly backupRetentionPeriod?: pulumi.Input<number>;
    /**
     * The cluster identifier. If omitted, this provider will assign a random, unique identifier.
     */
    readonly clusterIdentifier?: pulumi.Input<string>;
    /**
     * Creates a unique cluster identifier beginning with the specified prefix. Conflicts with `clusterIdentifier`.
     */
    readonly clusterIdentifierPrefix?: pulumi.Input<string>;
    /**
     * List of RDS Instances that are a part of this cluster
     */
    readonly clusterMembers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The RDS Cluster Resource ID
     */
    readonly clusterResourceId?: pulumi.Input<string>;
    /**
     * Copy all Cluster `tags` to snapshots. Default is `false`.
     */
    readonly copyTagsToSnapshot?: pulumi.Input<boolean>;
    /**
     * Name for an automatically created database on cluster creation. There are different naming restrictions per database engine: [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints)
     */
    readonly databaseName?: pulumi.Input<string>;
    /**
     * A cluster parameter group to associate with the cluster.
     */
    readonly dbClusterParameterGroupName?: pulumi.Input<string>;
    /**
     * A DB subnet group to associate with this DB instance. **NOTE:** This must match the `dbSubnetGroupName` specified on every `aws.rds.ClusterInstance` in the cluster.
     */
    readonly dbSubnetGroupName?: pulumi.Input<string>;
    /**
     * If the DB instance should have deletion protection enabled. The database can't be deleted when this value is set to `true`. The default is `false`.
     */
    readonly deletionProtection?: pulumi.Input<boolean>;
    /**
     * Enable HTTP endpoint (data API). Only valid when `engineMode` is set to `serverless`.
     */
    readonly enableHttpEndpoint?: pulumi.Input<boolean>;
    /**
     * Set of log types to export to cloudwatch. If omitted, no logs will be exported. The following log types are supported: `audit`, `error`, `general`, `slowquery`, `postgresql` (PostgreSQL).
     */
    readonly enabledCloudwatchLogsExports?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The DNS address of the RDS instance
     */
    readonly endpoint?: pulumi.Input<string>;
    /**
     * The name of the database engine to be used for this DB cluster. Defaults to `aurora`. Valid Values: `aurora`, `aurora-mysql`, `aurora-postgresql`
     */
    readonly engine?: pulumi.Input<string | enums.rds.EngineType>;
    /**
     * The database engine mode. Valid values: `global` (only valid for Aurora MySQL 1.21 and earlier), `multimaster`, `parallelquery`, `provisioned`, `serverless`. Defaults to: `provisioned`. See the [RDS User Guide](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/aurora-serverless.html) for limitations when using `serverless`.
     */
    readonly engineMode?: pulumi.Input<string | enums.rds.EngineMode>;
    /**
     * The database engine version. Updating this argument results in an outage. See the [Aurora MySQL](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Updates.html) and [Aurora Postgres](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraPostgreSQL.Updates.html) documentation for your configured engine to determine this value. For example with Aurora MySQL 2, a potential value for this argument is `5.7.mysql_aurora.2.03.2`.
     */
    readonly engineVersion?: pulumi.Input<string>;
    /**
     * The name of your final DB snapshot when this DB cluster is deleted. If omitted, no final snapshot will be made.
     */
    readonly finalSnapshotIdentifier?: pulumi.Input<string>;
    /**
     * The global cluster identifier specified on `aws.rds.GlobalCluster`.
     */
    readonly globalClusterIdentifier?: pulumi.Input<string>;
    /**
     * The Route53 Hosted Zone ID of the endpoint
     */
    readonly hostedZoneId?: pulumi.Input<string>;
    /**
     * Specifies whether or mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled. Please see [AWS Documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html) for availability and limitations.
     */
    readonly iamDatabaseAuthenticationEnabled?: pulumi.Input<boolean>;
    /**
     * A List of ARNs for the IAM roles to associate to the RDS Cluster.
     */
    readonly iamRoles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ARN for the KMS encryption key. When specifying `kmsKeyId`, `storageEncrypted` needs to be set to true.
     */
    readonly kmsKeyId?: pulumi.Input<string>;
    /**
     * Password for the master DB user. Note that this may show up in logs, and it will be stored in the state file. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints)
     */
    readonly masterPassword?: pulumi.Input<string>;
    /**
     * Username for the master DB user. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints). This argument does not support in-place updates and cannot be changed during a restore from snapshot.
     */
    readonly masterUsername?: pulumi.Input<string>;
    /**
     * The port on which the DB accepts connections
     */
    readonly port?: pulumi.Input<number>;
    /**
     * The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per region. e.g. 04:00-09:00
     */
    readonly preferredBackupWindow?: pulumi.Input<string>;
    /**
     * The weekly time range during which system maintenance can occur, in (UTC) e.g. wed:04:00-wed:04:30
     */
    readonly preferredMaintenanceWindow?: pulumi.Input<string>;
    /**
     * A read-only endpoint for the Aurora cluster, automatically
     * load-balanced across replicas
     */
    readonly readerEndpoint?: pulumi.Input<string>;
    /**
     * ARN of the source DB cluster or DB instance if this DB cluster is created as a Read Replica.
     */
    readonly replicationSourceIdentifier?: pulumi.Input<string>;
    /**
     * Nested attribute for [point in time restore](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PIT.html). More details below.
     */
    readonly restoreToPointInTime?: pulumi.Input<inputs.rds.ClusterRestoreToPointInTime>;
    readonly s3Import?: pulumi.Input<inputs.rds.ClusterS3Import>;
    /**
     * Nested attribute with scaling properties. Only valid when `engineMode` is set to `serverless`. More details below.
     */
    readonly scalingConfiguration?: pulumi.Input<inputs.rds.ClusterScalingConfiguration>;
    /**
     * Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created. If false is specified, a DB snapshot is created before the DB cluster is deleted, using the value from `finalSnapshotIdentifier`. Default is `false`.
     */
    readonly skipFinalSnapshot?: pulumi.Input<boolean>;
    /**
     * Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a DB cluster snapshot, or the ARN when specifying a DB snapshot.
     */
    readonly snapshotIdentifier?: pulumi.Input<string>;
    /**
     * The source region for an encrypted replica DB cluster.
     */
    readonly sourceRegion?: pulumi.Input<string>;
    /**
     * Specifies whether the DB cluster is encrypted
     */
    readonly storageEncrypted?: pulumi.Input<boolean>;
    /**
     * A map of tags to assign to the DB cluster.
     */
    readonly tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * List of VPC security groups to associate with the Cluster
     */
    readonly vpcSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a Cluster resource.
 */
export interface ClusterArgs {
    /**
     * Enable to allow major engine version upgrades when changing engine versions. Defaults to `false`.
     */
    readonly allowMajorVersionUpgrade?: pulumi.Input<boolean>;
    /**
     * Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is `false`. See [Amazon RDS Documentation for more information.](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html)
     */
    readonly applyImmediately?: pulumi.Input<boolean>;
    /**
     * A list of EC2 Availability Zones for the DB cluster storage where DB cluster instances can be created. RDS automatically assigns 3 AZs if less than 3 AZs are configured, which will show as a difference requiring resource recreation next provider update. It is recommended to specify 3 AZs or use [the `ignoreChanges` argument](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) if necessary.
     */
    readonly availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The target backtrack window, in seconds. Only available for `aurora` engine currently. To disable backtracking, set this value to `0`. Defaults to `0`. Must be between `0` and `259200` (72 hours)
     */
    readonly backtrackWindow?: pulumi.Input<number>;
    /**
     * The days to retain backups for. Default `1`
     */
    readonly backupRetentionPeriod?: pulumi.Input<number>;
    /**
     * The cluster identifier. If omitted, this provider will assign a random, unique identifier.
     */
    readonly clusterIdentifier?: pulumi.Input<string>;
    /**
     * Creates a unique cluster identifier beginning with the specified prefix. Conflicts with `clusterIdentifier`.
     */
    readonly clusterIdentifierPrefix?: pulumi.Input<string>;
    /**
     * List of RDS Instances that are a part of this cluster
     */
    readonly clusterMembers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Copy all Cluster `tags` to snapshots. Default is `false`.
     */
    readonly copyTagsToSnapshot?: pulumi.Input<boolean>;
    /**
     * Name for an automatically created database on cluster creation. There are different naming restrictions per database engine: [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints)
     */
    readonly databaseName?: pulumi.Input<string>;
    /**
     * A cluster parameter group to associate with the cluster.
     */
    readonly dbClusterParameterGroupName?: pulumi.Input<string>;
    /**
     * A DB subnet group to associate with this DB instance. **NOTE:** This must match the `dbSubnetGroupName` specified on every `aws.rds.ClusterInstance` in the cluster.
     */
    readonly dbSubnetGroupName?: pulumi.Input<string>;
    /**
     * If the DB instance should have deletion protection enabled. The database can't be deleted when this value is set to `true`. The default is `false`.
     */
    readonly deletionProtection?: pulumi.Input<boolean>;
    /**
     * Enable HTTP endpoint (data API). Only valid when `engineMode` is set to `serverless`.
     */
    readonly enableHttpEndpoint?: pulumi.Input<boolean>;
    /**
     * Set of log types to export to cloudwatch. If omitted, no logs will be exported. The following log types are supported: `audit`, `error`, `general`, `slowquery`, `postgresql` (PostgreSQL).
     */
    readonly enabledCloudwatchLogsExports?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the database engine to be used for this DB cluster. Defaults to `aurora`. Valid Values: `aurora`, `aurora-mysql`, `aurora-postgresql`
     */
    readonly engine?: pulumi.Input<string | enums.rds.EngineType>;
    /**
     * The database engine mode. Valid values: `global` (only valid for Aurora MySQL 1.21 and earlier), `multimaster`, `parallelquery`, `provisioned`, `serverless`. Defaults to: `provisioned`. See the [RDS User Guide](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/aurora-serverless.html) for limitations when using `serverless`.
     */
    readonly engineMode?: pulumi.Input<string | enums.rds.EngineMode>;
    /**
     * The database engine version. Updating this argument results in an outage. See the [Aurora MySQL](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Updates.html) and [Aurora Postgres](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraPostgreSQL.Updates.html) documentation for your configured engine to determine this value. For example with Aurora MySQL 2, a potential value for this argument is `5.7.mysql_aurora.2.03.2`.
     */
    readonly engineVersion?: pulumi.Input<string>;
    /**
     * The name of your final DB snapshot when this DB cluster is deleted. If omitted, no final snapshot will be made.
     */
    readonly finalSnapshotIdentifier?: pulumi.Input<string>;
    /**
     * The global cluster identifier specified on `aws.rds.GlobalCluster`.
     */
    readonly globalClusterIdentifier?: pulumi.Input<string>;
    /**
     * Specifies whether or mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled. Please see [AWS Documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html) for availability and limitations.
     */
    readonly iamDatabaseAuthenticationEnabled?: pulumi.Input<boolean>;
    /**
     * A List of ARNs for the IAM roles to associate to the RDS Cluster.
     */
    readonly iamRoles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ARN for the KMS encryption key. When specifying `kmsKeyId`, `storageEncrypted` needs to be set to true.
     */
    readonly kmsKeyId?: pulumi.Input<string>;
    /**
     * Password for the master DB user. Note that this may show up in logs, and it will be stored in the state file. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints)
     */
    readonly masterPassword?: pulumi.Input<string>;
    /**
     * Username for the master DB user. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints). This argument does not support in-place updates and cannot be changed during a restore from snapshot.
     */
    readonly masterUsername?: pulumi.Input<string>;
    /**
     * The port on which the DB accepts connections
     */
    readonly port?: pulumi.Input<number>;
    /**
     * The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per region. e.g. 04:00-09:00
     */
    readonly preferredBackupWindow?: pulumi.Input<string>;
    /**
     * The weekly time range during which system maintenance can occur, in (UTC) e.g. wed:04:00-wed:04:30
     */
    readonly preferredMaintenanceWindow?: pulumi.Input<string>;
    /**
     * ARN of the source DB cluster or DB instance if this DB cluster is created as a Read Replica.
     */
    readonly replicationSourceIdentifier?: pulumi.Input<string>;
    /**
     * Nested attribute for [point in time restore](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PIT.html). More details below.
     */
    readonly restoreToPointInTime?: pulumi.Input<inputs.rds.ClusterRestoreToPointInTime>;
    readonly s3Import?: pulumi.Input<inputs.rds.ClusterS3Import>;
    /**
     * Nested attribute with scaling properties. Only valid when `engineMode` is set to `serverless`. More details below.
     */
    readonly scalingConfiguration?: pulumi.Input<inputs.rds.ClusterScalingConfiguration>;
    /**
     * Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created. If false is specified, a DB snapshot is created before the DB cluster is deleted, using the value from `finalSnapshotIdentifier`. Default is `false`.
     */
    readonly skipFinalSnapshot?: pulumi.Input<boolean>;
    /**
     * Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a DB cluster snapshot, or the ARN when specifying a DB snapshot.
     */
    readonly snapshotIdentifier?: pulumi.Input<string>;
    /**
     * The source region for an encrypted replica DB cluster.
     */
    readonly sourceRegion?: pulumi.Input<string>;
    /**
     * Specifies whether the DB cluster is encrypted
     */
    readonly storageEncrypted?: pulumi.Input<boolean>;
    /**
     * A map of tags to assign to the DB cluster.
     */
    readonly tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * List of VPC security groups to associate with the Cluster
     */
    readonly vpcSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}
