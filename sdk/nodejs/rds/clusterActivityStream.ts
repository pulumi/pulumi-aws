// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class ClusterActivityStream extends pulumi.CustomResource {
    /**
     * Get an existing ClusterActivityStream resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterActivityStreamState, opts?: pulumi.CustomResourceOptions): ClusterActivityStream {
        return new ClusterActivityStream(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:rds/clusterActivityStream:ClusterActivityStream';

    /**
     * Returns true if the given object is an instance of ClusterActivityStream.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ClusterActivityStream {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ClusterActivityStream.__pulumiType;
    }

    public readonly engineNativeAuditFieldsIncluded!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly kinesisStreamName!: pulumi.Output<string>;
    public readonly kmsKeyId!: pulumi.Output<string>;
    public readonly mode!: pulumi.Output<string>;
    public readonly resourceArn!: pulumi.Output<string>;

    /**
     * Create a ClusterActivityStream resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterActivityStreamArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClusterActivityStreamArgs | ClusterActivityStreamState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClusterActivityStreamState | undefined;
            resourceInputs["engineNativeAuditFieldsIncluded"] = state ? state.engineNativeAuditFieldsIncluded : undefined;
            resourceInputs["kinesisStreamName"] = state ? state.kinesisStreamName : undefined;
            resourceInputs["kmsKeyId"] = state ? state.kmsKeyId : undefined;
            resourceInputs["mode"] = state ? state.mode : undefined;
            resourceInputs["resourceArn"] = state ? state.resourceArn : undefined;
        } else {
            const args = argsOrState as ClusterActivityStreamArgs | undefined;
            if ((!args || args.kmsKeyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'kmsKeyId'");
            }
            if ((!args || args.mode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'mode'");
            }
            if ((!args || args.resourceArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceArn'");
            }
            resourceInputs["engineNativeAuditFieldsIncluded"] = args ? args.engineNativeAuditFieldsIncluded : undefined;
            resourceInputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            resourceInputs["mode"] = args ? args.mode : undefined;
            resourceInputs["resourceArn"] = args ? args.resourceArn : undefined;
            resourceInputs["kinesisStreamName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ClusterActivityStream.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ClusterActivityStream resources.
 */
export interface ClusterActivityStreamState {
    engineNativeAuditFieldsIncluded?: pulumi.Input<boolean>;
    kinesisStreamName?: pulumi.Input<string>;
    kmsKeyId?: pulumi.Input<string>;
    mode?: pulumi.Input<string>;
    resourceArn?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ClusterActivityStream resource.
 */
export interface ClusterActivityStreamArgs {
    engineNativeAuditFieldsIncluded?: pulumi.Input<boolean>;
    kmsKeyId: pulumi.Input<string>;
    mode: pulumi.Input<string>;
    resourceArn: pulumi.Input<string>;
}
