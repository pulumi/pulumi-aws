// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class ReportDefinition extends pulumi.CustomResource {
    /**
     * Get an existing ReportDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ReportDefinitionState, opts?: pulumi.CustomResourceOptions): ReportDefinition {
        return new ReportDefinition(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:cur/reportDefinition:ReportDefinition';

    /**
     * Returns true if the given object is an instance of ReportDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ReportDefinition {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ReportDefinition.__pulumiType;
    }

    public readonly additionalArtifacts!: pulumi.Output<string[] | undefined>;
    public readonly additionalSchemaElements!: pulumi.Output<string[]>;
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly compression!: pulumi.Output<string>;
    public readonly format!: pulumi.Output<string>;
    public readonly refreshClosedReports!: pulumi.Output<boolean | undefined>;
    public readonly reportName!: pulumi.Output<string>;
    public readonly reportVersioning!: pulumi.Output<string | undefined>;
    public readonly s3Bucket!: pulumi.Output<string>;
    public readonly s3Prefix!: pulumi.Output<string | undefined>;
    public readonly s3Region!: pulumi.Output<string>;
    public readonly timeUnit!: pulumi.Output<string>;

    /**
     * Create a ReportDefinition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ReportDefinitionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ReportDefinitionArgs | ReportDefinitionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ReportDefinitionState | undefined;
            resourceInputs["additionalArtifacts"] = state ? state.additionalArtifacts : undefined;
            resourceInputs["additionalSchemaElements"] = state ? state.additionalSchemaElements : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["compression"] = state ? state.compression : undefined;
            resourceInputs["format"] = state ? state.format : undefined;
            resourceInputs["refreshClosedReports"] = state ? state.refreshClosedReports : undefined;
            resourceInputs["reportName"] = state ? state.reportName : undefined;
            resourceInputs["reportVersioning"] = state ? state.reportVersioning : undefined;
            resourceInputs["s3Bucket"] = state ? state.s3Bucket : undefined;
            resourceInputs["s3Prefix"] = state ? state.s3Prefix : undefined;
            resourceInputs["s3Region"] = state ? state.s3Region : undefined;
            resourceInputs["timeUnit"] = state ? state.timeUnit : undefined;
        } else {
            const args = argsOrState as ReportDefinitionArgs | undefined;
            if ((!args || args.additionalSchemaElements === undefined) && !opts.urn) {
                throw new Error("Missing required property 'additionalSchemaElements'");
            }
            if ((!args || args.compression === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compression'");
            }
            if ((!args || args.format === undefined) && !opts.urn) {
                throw new Error("Missing required property 'format'");
            }
            if ((!args || args.reportName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'reportName'");
            }
            if ((!args || args.s3Bucket === undefined) && !opts.urn) {
                throw new Error("Missing required property 's3Bucket'");
            }
            if ((!args || args.s3Region === undefined) && !opts.urn) {
                throw new Error("Missing required property 's3Region'");
            }
            if ((!args || args.timeUnit === undefined) && !opts.urn) {
                throw new Error("Missing required property 'timeUnit'");
            }
            resourceInputs["additionalArtifacts"] = args ? args.additionalArtifacts : undefined;
            resourceInputs["additionalSchemaElements"] = args ? args.additionalSchemaElements : undefined;
            resourceInputs["compression"] = args ? args.compression : undefined;
            resourceInputs["format"] = args ? args.format : undefined;
            resourceInputs["refreshClosedReports"] = args ? args.refreshClosedReports : undefined;
            resourceInputs["reportName"] = args ? args.reportName : undefined;
            resourceInputs["reportVersioning"] = args ? args.reportVersioning : undefined;
            resourceInputs["s3Bucket"] = args ? args.s3Bucket : undefined;
            resourceInputs["s3Prefix"] = args ? args.s3Prefix : undefined;
            resourceInputs["s3Region"] = args ? args.s3Region : undefined;
            resourceInputs["timeUnit"] = args ? args.timeUnit : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ReportDefinition.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ReportDefinition resources.
 */
export interface ReportDefinitionState {
    additionalArtifacts?: pulumi.Input<pulumi.Input<string>[]>;
    additionalSchemaElements?: pulumi.Input<pulumi.Input<string>[]>;
    arn?: pulumi.Input<string>;
    compression?: pulumi.Input<string>;
    format?: pulumi.Input<string>;
    refreshClosedReports?: pulumi.Input<boolean>;
    reportName?: pulumi.Input<string>;
    reportVersioning?: pulumi.Input<string>;
    s3Bucket?: pulumi.Input<string>;
    s3Prefix?: pulumi.Input<string>;
    s3Region?: pulumi.Input<string>;
    timeUnit?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ReportDefinition resource.
 */
export interface ReportDefinitionArgs {
    additionalArtifacts?: pulumi.Input<pulumi.Input<string>[]>;
    additionalSchemaElements: pulumi.Input<pulumi.Input<string>[]>;
    compression: pulumi.Input<string>;
    format: pulumi.Input<string>;
    refreshClosedReports?: pulumi.Input<boolean>;
    reportName: pulumi.Input<string>;
    reportVersioning?: pulumi.Input<string>;
    s3Bucket: pulumi.Input<string>;
    s3Prefix?: pulumi.Input<string>;
    s3Region: pulumi.Input<string>;
    timeUnit: pulumi.Input<string>;
}
