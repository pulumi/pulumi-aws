// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS MediaLive Input.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.medialive.InputSecurityGroup("example", {
 *     whitelistRules: [{
 *         cidr: "10.0.0.8/32",
 *     }],
 *     tags: {
 *         ENVIRONMENT: "prod",
 *     },
 * });
 * const exampleInput = new aws.medialive.Input("example", {
 *     name: "example-input",
 *     inputSecurityGroups: [example.id],
 *     type: "UDP_PUSH",
 *     tags: {
 *         ENVIRONMENT: "prod",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import MediaLive Input using the `id`. For example:
 *
 * ```sh
 * $ pulumi import aws:medialive/input:Input example 12345678
 * ```
 */
export class Input extends pulumi.CustomResource {
    /**
     * Get an existing Input resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InputState, opts?: pulumi.CustomResourceOptions): Input {
        return new Input(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:medialive/input:Input';

    /**
     * Returns true if the given object is an instance of Input.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Input {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Input.__pulumiType;
    }

    /**
     * ARN of the Input.
     */
    declare public /*out*/ readonly arn: pulumi.Output<string>;
    /**
     * Channels attached to Input.
     */
    declare public /*out*/ readonly attachedChannels: pulumi.Output<string[]>;
    /**
     * Destination settings for PUSH type inputs. See Destinations for more details.
     */
    declare public readonly destinations: pulumi.Output<outputs.medialive.InputDestination[] | undefined>;
    /**
     * The input class.
     */
    declare public /*out*/ readonly inputClass: pulumi.Output<string>;
    /**
     * Settings for the devices. See Input Devices for more details.
     */
    declare public readonly inputDevices: pulumi.Output<outputs.medialive.InputInputDevice[]>;
    /**
     * A list of IDs for all Inputs which are partners of this one.
     */
    declare public /*out*/ readonly inputPartnerIds: pulumi.Output<string[]>;
    /**
     * List of input security groups.
     */
    declare public readonly inputSecurityGroups: pulumi.Output<string[] | undefined>;
    /**
     * Source type of the input.
     */
    declare public /*out*/ readonly inputSourceType: pulumi.Output<string>;
    /**
     * A list of the MediaConnect Flows. See Media Connect Flows for more details.
     */
    declare public readonly mediaConnectFlows: pulumi.Output<outputs.medialive.InputMediaConnectFlow[]>;
    /**
     * Name of the input.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * The ARN of the role this input assumes during and after creation.
     */
    declare public readonly roleArn: pulumi.Output<string>;
    /**
     * The source URLs for a PULL-type input. See Sources for more details.
     */
    declare public readonly sources: pulumi.Output<outputs.medialive.InputSource[]>;
    /**
     * A map of tags to assign to the Input. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    declare public /*out*/ readonly tagsAll: pulumi.Output<{[key: string]: string}>;
    /**
     * The different types of inputs that AWS Elemental MediaLive supports.
     *
     * The following arguments are optional:
     */
    declare public readonly type: pulumi.Output<string>;
    /**
     * Settings for a private VPC Input. See VPC for more details.
     */
    declare public readonly vpc: pulumi.Output<outputs.medialive.InputVpc | undefined>;

    /**
     * Create a Input resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InputArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InputArgs | InputState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InputState | undefined;
            resourceInputs["arn"] = state?.arn;
            resourceInputs["attachedChannels"] = state?.attachedChannels;
            resourceInputs["destinations"] = state?.destinations;
            resourceInputs["inputClass"] = state?.inputClass;
            resourceInputs["inputDevices"] = state?.inputDevices;
            resourceInputs["inputPartnerIds"] = state?.inputPartnerIds;
            resourceInputs["inputSecurityGroups"] = state?.inputSecurityGroups;
            resourceInputs["inputSourceType"] = state?.inputSourceType;
            resourceInputs["mediaConnectFlows"] = state?.mediaConnectFlows;
            resourceInputs["name"] = state?.name;
            resourceInputs["region"] = state?.region;
            resourceInputs["roleArn"] = state?.roleArn;
            resourceInputs["sources"] = state?.sources;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tagsAll"] = state?.tagsAll;
            resourceInputs["type"] = state?.type;
            resourceInputs["vpc"] = state?.vpc;
        } else {
            const args = argsOrState as InputArgs | undefined;
            if (args?.type === undefined && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["destinations"] = args?.destinations;
            resourceInputs["inputDevices"] = args?.inputDevices;
            resourceInputs["inputSecurityGroups"] = args?.inputSecurityGroups;
            resourceInputs["mediaConnectFlows"] = args?.mediaConnectFlows;
            resourceInputs["name"] = args?.name;
            resourceInputs["region"] = args?.region;
            resourceInputs["roleArn"] = args?.roleArn;
            resourceInputs["sources"] = args?.sources;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["type"] = args?.type;
            resourceInputs["vpc"] = args?.vpc;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["attachedChannels"] = undefined /*out*/;
            resourceInputs["inputClass"] = undefined /*out*/;
            resourceInputs["inputPartnerIds"] = undefined /*out*/;
            resourceInputs["inputSourceType"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Input.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Input resources.
 */
export interface InputState {
    /**
     * ARN of the Input.
     */
    arn?: pulumi.Input<string>;
    /**
     * Channels attached to Input.
     */
    attachedChannels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Destination settings for PUSH type inputs. See Destinations for more details.
     */
    destinations?: pulumi.Input<pulumi.Input<inputs.medialive.InputDestination>[]>;
    /**
     * The input class.
     */
    inputClass?: pulumi.Input<string>;
    /**
     * Settings for the devices. See Input Devices for more details.
     */
    inputDevices?: pulumi.Input<pulumi.Input<inputs.medialive.InputInputDevice>[]>;
    /**
     * A list of IDs for all Inputs which are partners of this one.
     */
    inputPartnerIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of input security groups.
     */
    inputSecurityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Source type of the input.
     */
    inputSourceType?: pulumi.Input<string>;
    /**
     * A list of the MediaConnect Flows. See Media Connect Flows for more details.
     */
    mediaConnectFlows?: pulumi.Input<pulumi.Input<inputs.medialive.InputMediaConnectFlow>[]>;
    /**
     * Name of the input.
     */
    name?: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * The ARN of the role this input assumes during and after creation.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * The source URLs for a PULL-type input. See Sources for more details.
     */
    sources?: pulumi.Input<pulumi.Input<inputs.medialive.InputSource>[]>;
    /**
     * A map of tags to assign to the Input. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The different types of inputs that AWS Elemental MediaLive supports.
     *
     * The following arguments are optional:
     */
    type?: pulumi.Input<string>;
    /**
     * Settings for a private VPC Input. See VPC for more details.
     */
    vpc?: pulumi.Input<inputs.medialive.InputVpc>;
}

/**
 * The set of arguments for constructing a Input resource.
 */
export interface InputArgs {
    /**
     * Destination settings for PUSH type inputs. See Destinations for more details.
     */
    destinations?: pulumi.Input<pulumi.Input<inputs.medialive.InputDestination>[]>;
    /**
     * Settings for the devices. See Input Devices for more details.
     */
    inputDevices?: pulumi.Input<pulumi.Input<inputs.medialive.InputInputDevice>[]>;
    /**
     * List of input security groups.
     */
    inputSecurityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of the MediaConnect Flows. See Media Connect Flows for more details.
     */
    mediaConnectFlows?: pulumi.Input<pulumi.Input<inputs.medialive.InputMediaConnectFlow>[]>;
    /**
     * Name of the input.
     */
    name?: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * The ARN of the role this input assumes during and after creation.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * The source URLs for a PULL-type input. See Sources for more details.
     */
    sources?: pulumi.Input<pulumi.Input<inputs.medialive.InputSource>[]>;
    /**
     * A map of tags to assign to the Input. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The different types of inputs that AWS Elemental MediaLive supports.
     *
     * The following arguments are optional:
     */
    type: pulumi.Input<string>;
    /**
     * Settings for a private VPC Input. See VPC for more details.
     */
    vpc?: pulumi.Input<inputs.medialive.InputVpc>;
}
