// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS Backup Restore Testing Plan.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.backup.RestoreTestingPlan("example", {
 *     name: "example_restore_testing_plan",
 *     recoveryPointSelection: {
 *         algorithm: "LATEST_WITHIN_WINDOW",
 *         includeVaults: ["*"],
 *         recoveryPointTypes: ["CONTINUOUS"],
 *     },
 *     scheduleExpression: "cron(0 12 ? * * *)",
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Backup Restore Testing Plan using the `name`. For example:
 *
 * ```sh
 * $ pulumi import aws:backup/restoreTestingPlan:RestoreTestingPlan example my_testing_plan
 * ```
 */
export class RestoreTestingPlan extends pulumi.CustomResource {
    /**
     * Get an existing RestoreTestingPlan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RestoreTestingPlanState, opts?: pulumi.CustomResourceOptions): RestoreTestingPlan {
        return new RestoreTestingPlan(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:backup/restoreTestingPlan:RestoreTestingPlan';

    /**
     * Returns true if the given object is an instance of RestoreTestingPlan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RestoreTestingPlan {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RestoreTestingPlan.__pulumiType;
    }

    /**
     * ARN of the Restore Testing Plan.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The name of the restore testing plan. Must be between 1 and 50 characters long and contain only alphanumeric characters and underscores.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the recovery point selection configuration. See RecoveryPointSelection section for more details.
     */
    public readonly recoveryPointSelection!: pulumi.Output<outputs.backup.RestoreTestingPlanRecoveryPointSelection | undefined>;
    /**
     * The schedule expression for the restore testing plan.
     */
    public readonly scheduleExpression!: pulumi.Output<string>;
    /**
     * The timezone for the schedule expression. If not provided, the state value will be used.
     */
    public readonly scheduleExpressionTimezone!: pulumi.Output<string>;
    /**
     * The number of hours in the start window for the restore testing plan. Must be between 1 and 168.
     */
    public readonly startWindowHours!: pulumi.Output<number>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     *
     * @deprecated Please use `tags` instead.
     */
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a RestoreTestingPlan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RestoreTestingPlanArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RestoreTestingPlanArgs | RestoreTestingPlanState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RestoreTestingPlanState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["recoveryPointSelection"] = state ? state.recoveryPointSelection : undefined;
            resourceInputs["scheduleExpression"] = state ? state.scheduleExpression : undefined;
            resourceInputs["scheduleExpressionTimezone"] = state ? state.scheduleExpressionTimezone : undefined;
            resourceInputs["startWindowHours"] = state ? state.startWindowHours : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
        } else {
            const args = argsOrState as RestoreTestingPlanArgs | undefined;
            if ((!args || args.scheduleExpression === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scheduleExpression'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["recoveryPointSelection"] = args ? args.recoveryPointSelection : undefined;
            resourceInputs["scheduleExpression"] = args ? args.scheduleExpression : undefined;
            resourceInputs["scheduleExpressionTimezone"] = args ? args.scheduleExpressionTimezone : undefined;
            resourceInputs["startWindowHours"] = args ? args.startWindowHours : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RestoreTestingPlan.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RestoreTestingPlan resources.
 */
export interface RestoreTestingPlanState {
    /**
     * ARN of the Restore Testing Plan.
     */
    arn?: pulumi.Input<string>;
    /**
     * The name of the restore testing plan. Must be between 1 and 50 characters long and contain only alphanumeric characters and underscores.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the recovery point selection configuration. See RecoveryPointSelection section for more details.
     */
    recoveryPointSelection?: pulumi.Input<inputs.backup.RestoreTestingPlanRecoveryPointSelection>;
    /**
     * The schedule expression for the restore testing plan.
     */
    scheduleExpression?: pulumi.Input<string>;
    /**
     * The timezone for the schedule expression. If not provided, the state value will be used.
     */
    scheduleExpressionTimezone?: pulumi.Input<string>;
    /**
     * The number of hours in the start window for the restore testing plan. Must be between 1 and 168.
     */
    startWindowHours?: pulumi.Input<number>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     *
     * @deprecated Please use `tags` instead.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a RestoreTestingPlan resource.
 */
export interface RestoreTestingPlanArgs {
    /**
     * The name of the restore testing plan. Must be between 1 and 50 characters long and contain only alphanumeric characters and underscores.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the recovery point selection configuration. See RecoveryPointSelection section for more details.
     */
    recoveryPointSelection?: pulumi.Input<inputs.backup.RestoreTestingPlanRecoveryPointSelection>;
    /**
     * The schedule expression for the restore testing plan.
     */
    scheduleExpression: pulumi.Input<string>;
    /**
     * The timezone for the schedule expression. If not provided, the state value will be used.
     */
    scheduleExpressionTimezone?: pulumi.Input<string>;
    /**
     * The number of hours in the start window for the restore testing plan. Must be between 1 and 168.
     */
    startWindowHours?: pulumi.Input<number>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
