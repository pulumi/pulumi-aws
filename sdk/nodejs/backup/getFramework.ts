// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Use this data source to get information on an existing backup framework.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = pulumi.output(aws.backup.getFramework({
 *     name: "tf_example_backup_framework_name",
 * }));
 * ```
 */
export function getFramework(args: GetFrameworkArgs, opts?: pulumi.InvokeOptions): Promise<GetFrameworkResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws:backup/getFramework:getFramework", {
        "name": args.name,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getFramework.
 */
export interface GetFrameworkArgs {
    /**
     * Backup framework name.
     */
    name: string;
    /**
     * Tag key-value pair applied to those AWS resources that you want to trigger an evaluation for a rule. A maximum of one key-value pair can be provided.
     */
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getFramework.
 */
export interface GetFrameworkResult {
    /**
     * ARN of the backup framework.
     */
    readonly arn: string;
    /**
     * One or more control blocks that make up the framework. Each control in the list has a name, input parameters, and scope. Detailed below.
     */
    readonly controls: outputs.backup.GetFrameworkControl[];
    /**
     * Date and time that a framework is created, in Unix format and Coordinated Universal Time (UTC).
     */
    readonly creationTime: string;
    /**
     * Deployment status of a framework. The statuses are: `CREATE_IN_PROGRESS` | `UPDATE_IN_PROGRESS` | `DELETE_IN_PROGRESS` | `COMPLETED`| `FAILED`.
     */
    readonly deploymentStatus: string;
    /**
     * Description of the framework.
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Name of a parameter, for example, BackupPlanFrequency.
     */
    readonly name: string;
    /**
     * Framework consists of one or more controls. Each control governs a resource, such as backup plans, backup selections, backup vaults, or recovery points. You can also turn AWS Config recording on or off for each resource. The statuses are: `ACTIVE`, `PARTIALLY_ACTIVE`, `INACTIVE`, `UNAVAILABLE`. For more information refer to the [AWS documentation for Framework Status](https://docs.aws.amazon.com/aws-backup/latest/devguide/API_DescribeFramework.html#Backup-DescribeFramework-response-FrameworkStatus)
     */
    readonly status: string;
    /**
     * Tag key-value pair applied to those AWS resources that you want to trigger an evaluation for a rule. A maximum of one key-value pair can be provided.
     */
    readonly tags: {[key: string]: string};
}

export function getFrameworkOutput(args: GetFrameworkOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFrameworkResult> {
    return pulumi.output(args).apply(a => getFramework(a, opts))
}

/**
 * A collection of arguments for invoking getFramework.
 */
export interface GetFrameworkOutputArgs {
    /**
     * Backup framework name.
     */
    name: pulumi.Input<string>;
    /**
     * Tag key-value pair applied to those AWS resources that you want to trigger an evaluation for a rule. A maximum of one key-value pair can be provided.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
