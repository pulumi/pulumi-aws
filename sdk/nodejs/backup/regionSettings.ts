// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides an AWS Backup Region Settings resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.backup.RegionSettings("test", {
 *     resourceTypeOptInPreference: {
 *         Aurora: true,
 *         DynamoDB: true,
 *         EBS: true,
 *         EC2: true,
 *         EFS: true,
 *         FSx: true,
 *         RDS: true,
 *         "Storage Gateway": true,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Backup Region Settings can be imported using the `region`, e.g.
 *
 * ```sh
 *  $ pulumi import aws:backup/regionSettings:RegionSettings test us-west-2
 * ```
 */
export class RegionSettings extends pulumi.CustomResource {
    /**
     * Get an existing RegionSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RegionSettingsState, opts?: pulumi.CustomResourceOptions): RegionSettings {
        return new RegionSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:backup/regionSettings:RegionSettings';

    /**
     * Returns true if the given object is an instance of RegionSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RegionSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RegionSettings.__pulumiType;
    }

    /**
     * A map of services along with the opt-in preferences for the Region.
     */
    public readonly resourceTypeOptInPreference!: pulumi.Output<{[key: string]: boolean}>;

    /**
     * Create a RegionSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RegionSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RegionSettingsArgs | RegionSettingsState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as RegionSettingsState | undefined;
            inputs["resourceTypeOptInPreference"] = state ? state.resourceTypeOptInPreference : undefined;
        } else {
            const args = argsOrState as RegionSettingsArgs | undefined;
            if ((!args || args.resourceTypeOptInPreference === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'resourceTypeOptInPreference'");
            }
            inputs["resourceTypeOptInPreference"] = args ? args.resourceTypeOptInPreference : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(RegionSettings.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RegionSettings resources.
 */
export interface RegionSettingsState {
    /**
     * A map of services along with the opt-in preferences for the Region.
     */
    readonly resourceTypeOptInPreference?: pulumi.Input<{[key: string]: pulumi.Input<boolean>}>;
}

/**
 * The set of arguments for constructing a RegionSettings resource.
 */
export interface RegionSettingsArgs {
    /**
     * A map of services along with the opt-in preferences for the Region.
     */
    readonly resourceTypeOptInPreference: pulumi.Input<{[key: string]: pulumi.Input<boolean>}>;
}
