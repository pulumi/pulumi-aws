// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class VaultNotifications extends pulumi.CustomResource {
    /**
     * Get an existing VaultNotifications resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VaultNotificationsState, opts?: pulumi.CustomResourceOptions): VaultNotifications {
        return new VaultNotifications(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:backup/vaultNotifications:VaultNotifications';

    /**
     * Returns true if the given object is an instance of VaultNotifications.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VaultNotifications {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VaultNotifications.__pulumiType;
    }

    public /*out*/ readonly backupVaultArn!: pulumi.Output<string>;
    public readonly backupVaultEvents!: pulumi.Output<string[]>;
    public readonly backupVaultName!: pulumi.Output<string>;
    public readonly snsTopicArn!: pulumi.Output<string>;

    /**
     * Create a VaultNotifications resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VaultNotificationsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VaultNotificationsArgs | VaultNotificationsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VaultNotificationsState | undefined;
            resourceInputs["backupVaultArn"] = state ? state.backupVaultArn : undefined;
            resourceInputs["backupVaultEvents"] = state ? state.backupVaultEvents : undefined;
            resourceInputs["backupVaultName"] = state ? state.backupVaultName : undefined;
            resourceInputs["snsTopicArn"] = state ? state.snsTopicArn : undefined;
        } else {
            const args = argsOrState as VaultNotificationsArgs | undefined;
            if ((!args || args.backupVaultEvents === undefined) && !opts.urn) {
                throw new Error("Missing required property 'backupVaultEvents'");
            }
            if ((!args || args.backupVaultName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'backupVaultName'");
            }
            if ((!args || args.snsTopicArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'snsTopicArn'");
            }
            resourceInputs["backupVaultEvents"] = args ? args.backupVaultEvents : undefined;
            resourceInputs["backupVaultName"] = args ? args.backupVaultName : undefined;
            resourceInputs["snsTopicArn"] = args ? args.snsTopicArn : undefined;
            resourceInputs["backupVaultArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VaultNotifications.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VaultNotifications resources.
 */
export interface VaultNotificationsState {
    backupVaultArn?: pulumi.Input<string>;
    backupVaultEvents?: pulumi.Input<pulumi.Input<string>[]>;
    backupVaultName?: pulumi.Input<string>;
    snsTopicArn?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VaultNotifications resource.
 */
export interface VaultNotificationsArgs {
    backupVaultEvents: pulumi.Input<pulumi.Input<string>[]>;
    backupVaultName: pulumi.Input<string>;
    snsTopicArn: pulumi.Input<string>;
}
