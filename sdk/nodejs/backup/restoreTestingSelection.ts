// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS Backup Restore Testing Selection.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.backup.RestoreTestingSelection("example", {
 *     name: "ec2_selection",
 *     restoreTestingPlanName: exampleAwsBackupRestoreTestingPlan.name,
 *     protectedResourceType: "EC2",
 *     iamRoleArn: exampleAwsIamRole.arn,
 *     protectedResourceArns: ["*"],
 * });
 * ```
 *
 * ### Advanced Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.backup.RestoreTestingSelection("example", {
 *     name: "ec2_selection",
 *     restoreTestingPlanName: exampleAwsBackupRestoreTestingPlan.name,
 *     protectedResourceType: "EC2",
 *     iamRoleArn: exampleAwsIamRole.arn,
 *     protectedResourceConditions: {
 *         stringEquals: [{
 *             key: "aws:ResourceTag/backup",
 *             value: "true",
 *         }],
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Backup Restore Testing Selection using `name:restore_testing_plan_name`. For example:
 *
 * ```sh
 * $ pulumi import aws:backup/restoreTestingSelection:RestoreTestingSelection example restore_testing_selection_12345678:restore_testing_plan_12345678
 * ```
 */
export class RestoreTestingSelection extends pulumi.CustomResource {
    /**
     * Get an existing RestoreTestingSelection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RestoreTestingSelectionState, opts?: pulumi.CustomResourceOptions): RestoreTestingSelection {
        return new RestoreTestingSelection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:backup/restoreTestingSelection:RestoreTestingSelection';

    /**
     * Returns true if the given object is an instance of RestoreTestingSelection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RestoreTestingSelection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RestoreTestingSelection.__pulumiType;
    }

    /**
     * The ARN of the IAM role.
     */
    public readonly iamRoleArn!: pulumi.Output<string>;
    /**
     * The name of the backup restore testing selection.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ARNs for the protected resources.
     */
    public readonly protectedResourceArns!: pulumi.Output<string[]>;
    /**
     * The conditions for the protected resource.
     */
    public readonly protectedResourceConditions!: pulumi.Output<outputs.backup.RestoreTestingSelectionProtectedResourceConditions | undefined>;
    /**
     * The type of the protected resource.
     */
    public readonly protectedResourceType!: pulumi.Output<string>;
    /**
     * Override certain restore metadata keys. See the complete list of [restore testing inferred metadata](https://docs.aws.amazon.com/aws-backup/latest/devguide/restore-testing-inferred-metadata.html) .
     */
    public readonly restoreMetadataOverrides!: pulumi.Output<{[key: string]: string}>;
    /**
     * The name of the restore testing plan.
     */
    public readonly restoreTestingPlanName!: pulumi.Output<string>;
    /**
     * The amount of hours available to run a validation script on the data. Valid range is `1` to `168`.
     */
    public readonly validationWindowHours!: pulumi.Output<number>;

    /**
     * Create a RestoreTestingSelection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RestoreTestingSelectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RestoreTestingSelectionArgs | RestoreTestingSelectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RestoreTestingSelectionState | undefined;
            resourceInputs["iamRoleArn"] = state ? state.iamRoleArn : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["protectedResourceArns"] = state ? state.protectedResourceArns : undefined;
            resourceInputs["protectedResourceConditions"] = state ? state.protectedResourceConditions : undefined;
            resourceInputs["protectedResourceType"] = state ? state.protectedResourceType : undefined;
            resourceInputs["restoreMetadataOverrides"] = state ? state.restoreMetadataOverrides : undefined;
            resourceInputs["restoreTestingPlanName"] = state ? state.restoreTestingPlanName : undefined;
            resourceInputs["validationWindowHours"] = state ? state.validationWindowHours : undefined;
        } else {
            const args = argsOrState as RestoreTestingSelectionArgs | undefined;
            if ((!args || args.iamRoleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'iamRoleArn'");
            }
            if ((!args || args.protectedResourceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protectedResourceType'");
            }
            if ((!args || args.restoreTestingPlanName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'restoreTestingPlanName'");
            }
            resourceInputs["iamRoleArn"] = args ? args.iamRoleArn : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["protectedResourceArns"] = args ? args.protectedResourceArns : undefined;
            resourceInputs["protectedResourceConditions"] = args ? args.protectedResourceConditions : undefined;
            resourceInputs["protectedResourceType"] = args ? args.protectedResourceType : undefined;
            resourceInputs["restoreMetadataOverrides"] = args ? args.restoreMetadataOverrides : undefined;
            resourceInputs["restoreTestingPlanName"] = args ? args.restoreTestingPlanName : undefined;
            resourceInputs["validationWindowHours"] = args ? args.validationWindowHours : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RestoreTestingSelection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RestoreTestingSelection resources.
 */
export interface RestoreTestingSelectionState {
    /**
     * The ARN of the IAM role.
     */
    iamRoleArn?: pulumi.Input<string>;
    /**
     * The name of the backup restore testing selection.
     */
    name?: pulumi.Input<string>;
    /**
     * The ARNs for the protected resources.
     */
    protectedResourceArns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The conditions for the protected resource.
     */
    protectedResourceConditions?: pulumi.Input<inputs.backup.RestoreTestingSelectionProtectedResourceConditions>;
    /**
     * The type of the protected resource.
     */
    protectedResourceType?: pulumi.Input<string>;
    /**
     * Override certain restore metadata keys. See the complete list of [restore testing inferred metadata](https://docs.aws.amazon.com/aws-backup/latest/devguide/restore-testing-inferred-metadata.html) .
     */
    restoreMetadataOverrides?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the restore testing plan.
     */
    restoreTestingPlanName?: pulumi.Input<string>;
    /**
     * The amount of hours available to run a validation script on the data. Valid range is `1` to `168`.
     */
    validationWindowHours?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a RestoreTestingSelection resource.
 */
export interface RestoreTestingSelectionArgs {
    /**
     * The ARN of the IAM role.
     */
    iamRoleArn: pulumi.Input<string>;
    /**
     * The name of the backup restore testing selection.
     */
    name?: pulumi.Input<string>;
    /**
     * The ARNs for the protected resources.
     */
    protectedResourceArns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The conditions for the protected resource.
     */
    protectedResourceConditions?: pulumi.Input<inputs.backup.RestoreTestingSelectionProtectedResourceConditions>;
    /**
     * The type of the protected resource.
     */
    protectedResourceType: pulumi.Input<string>;
    /**
     * Override certain restore metadata keys. See the complete list of [restore testing inferred metadata](https://docs.aws.amazon.com/aws-backup/latest/devguide/restore-testing-inferred-metadata.html) .
     */
    restoreMetadataOverrides?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the restore testing plan.
     */
    restoreTestingPlanName: pulumi.Input<string>;
    /**
     * The amount of hours available to run a validation script on the data. Valid range is `1` to `168`.
     */
    validationWindowHours?: pulumi.Input<number>;
}
