// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides an Elastic MapReduce Cluster, a web service that makes it easy to
 * process large amounts of data efficiently. See [Amazon Elastic MapReduce Documentation](https://aws.amazon.com/documentation/elastic-mapreduce/)
 * for more information.
 * 
 * To configure [Instance Groups](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for [task nodes](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-task), see the [`aws.emr.InstanceGroup` resource](https://www.terraform.io/docs/providers/aws/r/emr_instance_group.html).
 * 
 * > Support for [Instance Fleets](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-fleets) will be made available in an upcoming release.
 * 
 * ## Example Usage
 * 
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const cluster = new aws.emr.Cluster("cluster", {
 *     additionalInfo: `{
 *   "instanceAwsClientConfiguration": {
 *     "proxyPort": 8099,
 *     "proxyHost": "myproxy.example.com"
 *   }
 * }
 * `,
 *     applications: ["Spark"],
 *     bootstrapActions: [{
 *         args: [
 *             "instance.isMaster=true",
 *             "echo running on master node",
 *         ],
 *         name: "runif",
 *         path: "s3://elasticmapreduce/bootstrap-actions/run-if",
 *     }],
 *     configurationsJson: `  [
 *     {
 *       "Classification": "hadoop-env",
 *       "Configurations": [
 *         {
 *           "Classification": "export",
 *           "Properties": {
 *             "JAVA_HOME": "/usr/lib/jvm/java-1.8.0"
 *           }
 *         }
 *       ],
 *       "Properties": {}
 *     },
 *     {
 *       "Classification": "spark-env",
 *       "Configurations": [
 *         {
 *           "Classification": "export",
 *           "Properties": {
 *             "JAVA_HOME": "/usr/lib/jvm/java-1.8.0"
 *           }
 *         }
 *       ],
 *       "Properties": {}
 *     }
 *   ]
 * `,
 *     coreInstanceGroup: {
 *         autoscalingPolicy: `{
 * "Constraints": {
 *   "MinCapacity": 1,
 *   "MaxCapacity": 2
 * },
 * "Rules": [
 *   {
 *     "Name": "ScaleOutMemoryPercentage",
 *     "Description": "Scale out if YARNMemoryAvailablePercentage is less than 15",
 *     "Action": {
 *       "SimpleScalingPolicyConfiguration": {
 *         "AdjustmentType": "CHANGE_IN_CAPACITY",
 *         "ScalingAdjustment": 1,
 *         "CoolDown": 300
 *       }
 *     },
 *     "Trigger": {
 *       "CloudWatchAlarmDefinition": {
 *         "ComparisonOperator": "LESS_THAN",
 *         "EvaluationPeriods": 1,
 *         "MetricName": "YARNMemoryAvailablePercentage",
 *         "Namespace": "AWS/ElasticMapReduce",
 *         "Period": 300,
 *         "Statistic": "AVERAGE",
 *         "Threshold": 15.0,
 *         "Unit": "PERCENT"
 *       }
 *     }
 *   }
 * ]
 * }
 * `,
 *         bidPrice: "0.30",
 *         ebsConfigs: [{
 *             size: 40,
 *             type: "gp2",
 *             volumesPerInstance: 1,
 *         }],
 *         instanceCount: 1,
 *         instanceType: "c4.large",
 *     },
 *     ebsRootVolumeSize: 100,
 *     ec2Attributes: {
 *         emrManagedMasterSecurityGroup: aws_security_group_sg.id,
 *         emrManagedSlaveSecurityGroup: aws_security_group_sg.id,
 *         instanceProfile: aws_iam_instance_profile_emr_profile.arn,
 *         subnetId: aws_subnet_main.id,
 *     },
 *     keepJobFlowAliveWhenNoSteps: true,
 *     masterInstanceGroup: {
 *         instanceType: "m4.large",
 *     },
 *     releaseLabel: "emr-4.6.0",
 *     serviceRole: aws_iam_role_iam_emr_service_role.arn,
 *     tags: {
 *         env: "env",
 *         role: "rolename",
 *     },
 *     terminationProtection: false,
 * });
 * ```
 * 
 * ### Enable Debug Logging
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const example = new aws.emr.Cluster("example", {
 *     steps: [{
 *         actionOnFailure: "TERMINATE_CLUSTER",
 *         hadoopJarStep: {
 *             args: ["state-pusher-script"],
 *             jar: "command-runner.jar",
 *         },
 *         name: "Setup Hadoop Debugging",
 *     }],
 * }, {ignoreChanges: ["stepConcurrencyLevel", "steps"]});
 * ```
 * 
 * ### Multiple Node Master Instance Group
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * // Map public IP on launch must be enabled for public (Internet accessible) subnets
 * const exampleSubnet = new aws.ec2.Subnet("example", {
 *     mapPublicIpOnLaunch: true,
 * });
 * const exampleCluster = new aws.emr.Cluster("example", {
 *     // coreInstanceGroup must be configured
 *     coreInstanceGroup: {},
 *     ec2Attributes: {
 *         subnetId: exampleSubnet.id,
 *     },
 *     masterInstanceGroup: {
 *         // Master instance count must be set to 3
 *         instanceCount: 3,
 *     },
 *     // EMR version must be 5.23.0 or later
 *     releaseLabel: "emr-5.24.1",
 *     // Termination protection is automatically enabled for multiple masters
 *     // To destroy the cluster, this must be configured to false and applied first
 *     terminationProtection: true,
 * });
 * ```
 * 
 * ## coreInstanceGroup Configuration Block
 * 
 * Supported arguments for the `coreInstanceGroup` configuration block:
 * 
 * * `instanceType` - (Required) EC2 instance type for all instances in the instance group.
 * * `autoscalingPolicy` - (Optional) String containing the [EMR Auto Scaling Policy](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-automatic-scaling.html) JSON.
 * * `bidPrice` - (Optional) Bid price for each EC2 instance in the instance group, expressed in USD. By setting this attribute, the instance group is being declared as a Spot Instance, and will implicitly create a Spot request. Leave this blank to use On-Demand Instances.
 * * `ebsConfig` - (Optional) Configuration block(s) for EBS volumes attached to each instance in the instance group. Detailed below.
 * * `instanceCount` - (Optional) Target number of instances for the instance group. Must be at least 1. Defaults to 1.
 * * `name` - (Optional) Friendly name given to the instance group.
 * 
 * ## ec2Attributes
 * 
 * Attributes for the Amazon EC2 instances running the job flow
 * 
 * * `keyName` - (Optional) Amazon EC2 key pair that can be used to ssh to the master node as the user called `hadoop`
 * * `subnetId` - (Optional) VPC subnet id where you want the job flow to launch. Cannot specify the `cc1.4xlarge` instance type for nodes of a job flow launched in a Amazon VPC
 * * `additionalMasterSecurityGroups` - (Optional) String containing a comma separated list of additional Amazon EC2 security group IDs for the master node
 * * `additionalSlaveSecurityGroups` - (Optional) String containing a comma separated list of additional Amazon EC2 security group IDs for the slave nodes as a comma separated string
 * * `emrManagedMasterSecurityGroup` - (Optional) Identifier of the Amazon EC2 EMR-Managed security group for the master node
 * * `emrManagedSlaveSecurityGroup` - (Optional) Identifier of the Amazon EC2 EMR-Managed security group for the slave nodes
 * * `serviceAccessSecurityGroup` - (Optional) Identifier of the Amazon EC2 service-access security group - required when the cluster runs on a private subnet
 * * `instanceProfile` - (Required) Instance Profile for EC2 instances of the cluster assume this role
 * 
 * > **NOTE on EMR-Managed security groups:** These security groups will have any
 * missing inbound or outbound access rules added and maintained by AWS, to ensure
 * proper communication between instances in a cluster. The EMR service will
 * maintain these rules for groups provided in `emrManagedMasterSecurityGroup`
 * and `emrManagedSlaveSecurityGroup`; attempts to remove the required rules
 * may succeed, only for the EMR service to re-add them in a matter of minutes.
 * This may cause this provider to fail to destroy an environment that contains an EMR
 * cluster, because the EMR service does not revoke rules added on deletion,
 * leaving a cyclic dependency between the security groups that prevents their
 * deletion. To avoid this, use the `revokeRulesOnDelete` optional attribute for
 * any Security Group used in `emrManagedMasterSecurityGroup` and
 * `emrManagedSlaveSecurityGroup`. See [Amazon EMR-Managed Security
 * Groups](http://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-man-sec-groups.html)
 * for more information about the EMR-managed security group rules.
 * 
 * ## kerberosAttributes
 * 
 * Attributes for Kerberos configuration
 * 
 * * `adDomainJoinPassword` - (Optional) The Active Directory password for `adDomainJoinUser`. This provider cannot perform drift detection of this configuration.
 * * `adDomainJoinUser` - (Optional) Required only when establishing a cross-realm trust with an Active Directory domain. A user with sufficient privileges to join resources to the domain. This provider cannot perform drift detection of this configuration.
 * * `crossRealmTrustPrincipalPassword` - (Optional) Required only when establishing a cross-realm trust with a KDC in a different realm. The cross-realm principal password, which must be identical across realms. This provider cannot perform drift detection of this configuration.
 * * `kdcAdminPassword` - (Required) The password used within the cluster for the kadmin service on the cluster-dedicated KDC, which maintains Kerberos principals, password policies, and keytabs for the cluster. This provider cannot perform drift detection of this configuration.
 * * `realm` - (Required) The name of the Kerberos realm to which all nodes in a cluster belong. For example, `EC2.INTERNAL`
 * 
 * ## instanceGroup
 * 
 * Attributes for each task instance group in the cluster
 * 
 * * `instanceRole` - (Required) The role of the instance group in the cluster. Valid values are: `MASTER`, `CORE`, and `TASK`.
 * * `instanceType` - (Required) The EC2 instance type for all instances in the instance group
 * * `instanceCount` - (Optional) Target number of instances for the instance group
 * * `name` - (Optional) Friendly name given to the instance group
 * * `bidPrice` - (Optional) If set, the bid price for each EC2 instance in the instance group, expressed in USD. By setting this attribute, the instance group is being declared as a Spot Instance, and will implicitly create a Spot request. Leave this blank to use On-Demand Instances.
 * * `ebsConfig` - (Optional) A list of attributes for the EBS volumes attached to each instance in the instance group. Each `ebsConfig` defined will result in additional EBS volumes being attached to _each_ instance in the instance group. Defined below
 * * `autoscalingPolicy` - (Optional) The autoscaling policy document. This is a JSON formatted string. See [EMR Auto Scaling](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-automatic-scaling.html)
 * 
 * ## masterInstanceGroup Configuration Block
 * 
 * Supported nested arguments for the `masterInstanceGroup` configuration block:
 * 
 * * `instanceType` - (Required) EC2 instance type for all instances in the instance group.
 * * `bidPrice` - (Optional) Bid price for each EC2 instance in the instance group, expressed in USD. By setting this attribute, the instance group is being declared as a Spot Instance, and will implicitly create a Spot request. Leave this blank to use On-Demand Instances.
 * * `ebsConfig` - (Optional) Configuration block(s) for EBS volumes attached to each instance in the instance group. Detailed below.
 * * `instanceCount` - (Optional) Target number of instances for the instance group. Must be 1 or 3. Defaults to 1. Launching with multiple master nodes is only supported in EMR version 5.23.0+, and requires this resource's `coreInstanceGroup` to be configured. Public (Internet accessible) instances must be created in VPC subnets that have [map public IP on launch](https://www.terraform.io/docs/providers/aws/r/subnet.html#map_public_ip_on_launch) enabled. Termination protection is automatically enabled when launched with multiple master nodes and this provider must have the `terminationProtection = false` configuration applied before destroying this resource.
 * * `name` - (Optional) Friendly name given to the instance group.
 * 
 * ## ebsConfig
 * 
 * Attributes for the EBS volumes attached to each EC2 instance in the `instanceGroup`
 * 
 * * `size` - (Required) The volume size, in gibibytes (GiB).
 * * `type` - (Required) The volume type. Valid options are `gp2`, `io1`, `standard` and `st1`. See [EBS Volume Types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html).
 * * `iops` - (Optional) The number of I/O operations per second (IOPS) that the volume supports
 * * `volumesPerInstance` - (Optional) The number of EBS volumes with this configuration to attach to each EC2 instance in the instance group (default is 1)
 * 
 * ## bootstrapAction
 * 
 * * `name` - (Required) Name of the bootstrap action
 * * `path` - (Required) Location of the script to run during a bootstrap action. Can be either a location in Amazon S3 or on a local file system
 * * `args` - (Optional) List of command line arguments to pass to the bootstrap action script
 * 
 * ## step
 * 
 * Attributes for step configuration
 * 
 * * `actionOnFailure` - (Required) The action to take if the step fails. Valid values: `TERMINATE_JOB_FLOW`, `TERMINATE_CLUSTER`, `CANCEL_AND_WAIT`, and `CONTINUE`
 * * `hadoopJarStep` - (Required) The JAR file used for the step. Defined below.
 * * `name` - (Required) The name of the step.
 * 
 * ### hadoopJarStep
 * 
 * Attributes for Hadoop job step configuration
 * 
 * * `args` - (Optional) List of command line arguments passed to the JAR file's main function when executed.
 * * `jar` - (Required) Path to a JAR file run during the step.
 * * `mainClass` - (Optional) Name of the main class in the specified Java file. If not specified, the JAR file should specify a Main-Class in its manifest file.
 * * `properties` - (Optional) Key-Value map of Java properties that are set when the step runs. You can use these properties to pass key value pairs to your main function.
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/emr_cluster.html.markdown.
 */
export class Cluster extends pulumi.CustomResource {
    /**
     * Get an existing Cluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterState, opts?: pulumi.CustomResourceOptions): Cluster {
        return new Cluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:emr/cluster:Cluster';

    /**
     * Returns true if the given object is an instance of Cluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Cluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Cluster.__pulumiType;
    }

    /**
     * A JSON string for selecting additional features such as adding proxy information. Note: Currently there is no API to retrieve the value of this argument after EMR cluster creation from provider, therefore this provider cannot detect drift from the actual EMR cluster if its value is changed outside this provider.
     */
    public readonly additionalInfo!: pulumi.Output<string | undefined>;
    /**
     * A list of applications for the cluster. Valid values are: `Flink`, `Hadoop`, `Hive`, `Mahout`, `Pig`, `Spark`, and `JupyterHub` (as of EMR 5.14.0). Case insensitive
     */
    public readonly applications!: pulumi.Output<string[] | undefined>;
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * An IAM role for automatic scaling policies. The IAM role provides permissions that the automatic scaling feature requires to launch and terminate EC2 instances in an instance group.
     */
    public readonly autoscalingRole!: pulumi.Output<string | undefined>;
    /**
     * Ordered list of bootstrap actions that will be run before Hadoop is started on the cluster nodes. Defined below.
     */
    public readonly bootstrapActions!: pulumi.Output<outputs.emr.ClusterBootstrapAction[] | undefined>;
    public /*out*/ readonly clusterState!: pulumi.Output<string>;
    /**
     * List of configurations supplied for the EMR cluster you are creating
     */
    public readonly configurations!: pulumi.Output<string | undefined>;
    /**
     * A JSON string for supplying list of configurations for the EMR cluster.
     */
    public readonly configurationsJson!: pulumi.Output<string | undefined>;
    /**
     * Use the `coreInstanceGroup` configuration block `instanceCount` argument instead. Number of Amazon EC2 instances used to execute the job flow. EMR will use one node as the cluster's master node and use the remainder of the nodes (`coreInstanceCount`-1) as core nodes. Cannot be specified if `coreInstanceGroup` or `instanceGroup` configuration blocks are set. Default `1`
     */
    public readonly coreInstanceCount!: pulumi.Output<number>;
    /**
     * Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [core node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-core). Cannot be specified if `coreInstanceCount` argument, `coreInstanceType` argument, or `instanceGroup` configuration blocks are set. Detailed below.
     */
    public readonly coreInstanceGroup!: pulumi.Output<outputs.emr.ClusterCoreInstanceGroup>;
    /**
     * Use the `coreInstanceGroup` configuration block `instanceType` argument instead. The EC2 instance type of the slave nodes. Cannot be specified if `coreInstanceGroup` or `instanceGroup` configuration blocks are set.
     */
    public readonly coreInstanceType!: pulumi.Output<string>;
    /**
     * A custom Amazon Linux AMI for the cluster (instead of an EMR-owned AMI). Available in Amazon EMR version 5.7.0 and later.
     */
    public readonly customAmiId!: pulumi.Output<string | undefined>;
    /**
     * Size in GiB of the EBS root device volume of the Linux AMI that is used for each EC2 instance. Available in Amazon EMR version 4.x and later.
     */
    public readonly ebsRootVolumeSize!: pulumi.Output<number | undefined>;
    /**
     * Attributes for the EC2 instances running the job flow. Defined below
     */
    public readonly ec2Attributes!: pulumi.Output<outputs.emr.ClusterEc2Attributes | undefined>;
    /**
     * Use the `masterInstanceGroup` configuration block, `coreInstanceGroup` configuration block and [`aws.emr.InstanceGroup` resource(s)](https://www.terraform.io/docs/providers/aws/r/emr_instance_group.html) instead. A list of `instanceGroup` objects for each instance group in the cluster. Exactly one of `masterInstanceType` and `instanceGroup` must be specified. If `instanceGroup` is set, then it must contain a configuration block for at least the `MASTER` instance group type (as well as any additional instance groups). Cannot be specified if `masterInstanceGroup` or `coreInstanceGroup` configuration blocks are set. Defined below
     */
    public readonly instanceGroups!: pulumi.Output<outputs.emr.ClusterInstanceGroup[]>;
    /**
     * Switch on/off run cluster with no steps or when all steps are complete (default is on)
     */
    public readonly keepJobFlowAliveWhenNoSteps!: pulumi.Output<boolean>;
    /**
     * Kerberos configuration for the cluster. Defined below
     */
    public readonly kerberosAttributes!: pulumi.Output<outputs.emr.ClusterKerberosAttributes | undefined>;
    /**
     * S3 bucket to write the log files of the job flow. If a value is not provided, logs are not created
     */
    public readonly logUri!: pulumi.Output<string | undefined>;
    /**
     * Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [master node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-master). Cannot be specified if `masterInstanceType` argument or `instanceGroup` configuration blocks are set. Detailed below.
     */
    public readonly masterInstanceGroup!: pulumi.Output<outputs.emr.ClusterMasterInstanceGroup>;
    /**
     * Use the `masterInstanceGroup` configuration block `instanceType` argument instead. The EC2 instance type of the master node. Cannot be specified if `masterInstanceGroup` or `instanceGroup` configuration blocks are set.
     */
    public readonly masterInstanceType!: pulumi.Output<string>;
    /**
     * The public DNS name of the master EC2 instance.
     * * `core_instance_group.0.id` - Core node type Instance Group ID, if using Instance Group for this node type.
     */
    public /*out*/ readonly masterPublicDns!: pulumi.Output<string>;
    /**
     * The name of the job flow
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The release label for the Amazon EMR release
     */
    public readonly releaseLabel!: pulumi.Output<string>;
    /**
     * The way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an `instance group` is resized.
     */
    public readonly scaleDownBehavior!: pulumi.Output<string>;
    /**
     * The security configuration name to attach to the EMR cluster. Only valid for EMR clusters with `releaseLabel` 4.8.0 or greater
     */
    public readonly securityConfiguration!: pulumi.Output<string | undefined>;
    /**
     * IAM role that will be assumed by the Amazon EMR service to access AWS resources
     */
    public readonly serviceRole!: pulumi.Output<string>;
    /**
     * List of steps to run when creating the cluster. Defined below. It is highly recommended to utilize [`ignoreChanges`](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) if other steps are being managed outside of this provider.
     */
    public readonly steps!: pulumi.Output<outputs.emr.ClusterStep[]>;
    /**
     * The number of steps that can be executed concurrently. You can specify a maximum of 256 steps. Only valid for EMR clusters with `releaseLabel` 5.28.0 or greater. (default is 1)
     */
    public readonly stepConcurrencyLevel!: pulumi.Output<number | undefined>;
    /**
     * list of tags to apply to the EMR Cluster
     */
    public readonly tags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * Switch on/off termination protection (default is `false`, except when using multiple master nodes). Before attempting to destroy the resource when termination protection is enabled, this configuration must be applied with its value set to `false`.
     */
    public readonly terminationProtection!: pulumi.Output<boolean>;
    /**
     * Whether the job flow is visible to all IAM users of the AWS account associated with the job flow. Default `true`
     */
    public readonly visibleToAllUsers!: pulumi.Output<boolean | undefined>;

    /**
     * Create a Cluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClusterArgs | ClusterState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as ClusterState | undefined;
            inputs["additionalInfo"] = state ? state.additionalInfo : undefined;
            inputs["applications"] = state ? state.applications : undefined;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["autoscalingRole"] = state ? state.autoscalingRole : undefined;
            inputs["bootstrapActions"] = state ? state.bootstrapActions : undefined;
            inputs["clusterState"] = state ? state.clusterState : undefined;
            inputs["configurations"] = state ? state.configurations : undefined;
            inputs["configurationsJson"] = state ? state.configurationsJson : undefined;
            inputs["coreInstanceCount"] = state ? state.coreInstanceCount : undefined;
            inputs["coreInstanceGroup"] = state ? state.coreInstanceGroup : undefined;
            inputs["coreInstanceType"] = state ? state.coreInstanceType : undefined;
            inputs["customAmiId"] = state ? state.customAmiId : undefined;
            inputs["ebsRootVolumeSize"] = state ? state.ebsRootVolumeSize : undefined;
            inputs["ec2Attributes"] = state ? state.ec2Attributes : undefined;
            inputs["instanceGroups"] = state ? state.instanceGroups : undefined;
            inputs["keepJobFlowAliveWhenNoSteps"] = state ? state.keepJobFlowAliveWhenNoSteps : undefined;
            inputs["kerberosAttributes"] = state ? state.kerberosAttributes : undefined;
            inputs["logUri"] = state ? state.logUri : undefined;
            inputs["masterInstanceGroup"] = state ? state.masterInstanceGroup : undefined;
            inputs["masterInstanceType"] = state ? state.masterInstanceType : undefined;
            inputs["masterPublicDns"] = state ? state.masterPublicDns : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["releaseLabel"] = state ? state.releaseLabel : undefined;
            inputs["scaleDownBehavior"] = state ? state.scaleDownBehavior : undefined;
            inputs["securityConfiguration"] = state ? state.securityConfiguration : undefined;
            inputs["serviceRole"] = state ? state.serviceRole : undefined;
            inputs["steps"] = state ? state.steps : undefined;
            inputs["stepConcurrencyLevel"] = state ? state.stepConcurrencyLevel : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["terminationProtection"] = state ? state.terminationProtection : undefined;
            inputs["visibleToAllUsers"] = state ? state.visibleToAllUsers : undefined;
        } else {
            const args = argsOrState as ClusterArgs | undefined;
            if (!args || args.releaseLabel === undefined) {
                throw new Error("Missing required property 'releaseLabel'");
            }
            if (!args || args.serviceRole === undefined) {
                throw new Error("Missing required property 'serviceRole'");
            }
            inputs["additionalInfo"] = args ? args.additionalInfo : undefined;
            inputs["applications"] = args ? args.applications : undefined;
            inputs["autoscalingRole"] = args ? args.autoscalingRole : undefined;
            inputs["bootstrapActions"] = args ? args.bootstrapActions : undefined;
            inputs["configurations"] = args ? args.configurations : undefined;
            inputs["configurationsJson"] = args ? args.configurationsJson : undefined;
            inputs["coreInstanceCount"] = args ? args.coreInstanceCount : undefined;
            inputs["coreInstanceGroup"] = args ? args.coreInstanceGroup : undefined;
            inputs["coreInstanceType"] = args ? args.coreInstanceType : undefined;
            inputs["customAmiId"] = args ? args.customAmiId : undefined;
            inputs["ebsRootVolumeSize"] = args ? args.ebsRootVolumeSize : undefined;
            inputs["ec2Attributes"] = args ? args.ec2Attributes : undefined;
            inputs["instanceGroups"] = args ? args.instanceGroups : undefined;
            inputs["keepJobFlowAliveWhenNoSteps"] = args ? args.keepJobFlowAliveWhenNoSteps : undefined;
            inputs["kerberosAttributes"] = args ? args.kerberosAttributes : undefined;
            inputs["logUri"] = args ? args.logUri : undefined;
            inputs["masterInstanceGroup"] = args ? args.masterInstanceGroup : undefined;
            inputs["masterInstanceType"] = args ? args.masterInstanceType : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["releaseLabel"] = args ? args.releaseLabel : undefined;
            inputs["scaleDownBehavior"] = args ? args.scaleDownBehavior : undefined;
            inputs["securityConfiguration"] = args ? args.securityConfiguration : undefined;
            inputs["serviceRole"] = args ? args.serviceRole : undefined;
            inputs["steps"] = args ? args.steps : undefined;
            inputs["stepConcurrencyLevel"] = args ? args.stepConcurrencyLevel : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["terminationProtection"] = args ? args.terminationProtection : undefined;
            inputs["visibleToAllUsers"] = args ? args.visibleToAllUsers : undefined;
            inputs["arn"] = undefined /*out*/;
            inputs["clusterState"] = undefined /*out*/;
            inputs["masterPublicDns"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Cluster.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Cluster resources.
 */
export interface ClusterState {
    /**
     * A JSON string for selecting additional features such as adding proxy information. Note: Currently there is no API to retrieve the value of this argument after EMR cluster creation from provider, therefore this provider cannot detect drift from the actual EMR cluster if its value is changed outside this provider.
     */
    readonly additionalInfo?: pulumi.Input<string>;
    /**
     * A list of applications for the cluster. Valid values are: `Flink`, `Hadoop`, `Hive`, `Mahout`, `Pig`, `Spark`, and `JupyterHub` (as of EMR 5.14.0). Case insensitive
     */
    readonly applications?: pulumi.Input<pulumi.Input<string>[]>;
    readonly arn?: pulumi.Input<string>;
    /**
     * An IAM role for automatic scaling policies. The IAM role provides permissions that the automatic scaling feature requires to launch and terminate EC2 instances in an instance group.
     */
    readonly autoscalingRole?: pulumi.Input<string>;
    /**
     * Ordered list of bootstrap actions that will be run before Hadoop is started on the cluster nodes. Defined below.
     */
    readonly bootstrapActions?: pulumi.Input<pulumi.Input<inputs.emr.ClusterBootstrapAction>[]>;
    readonly clusterState?: pulumi.Input<string>;
    /**
     * List of configurations supplied for the EMR cluster you are creating
     */
    readonly configurations?: pulumi.Input<string>;
    /**
     * A JSON string for supplying list of configurations for the EMR cluster.
     */
    readonly configurationsJson?: pulumi.Input<string>;
    /**
     * Use the `coreInstanceGroup` configuration block `instanceCount` argument instead. Number of Amazon EC2 instances used to execute the job flow. EMR will use one node as the cluster's master node and use the remainder of the nodes (`coreInstanceCount`-1) as core nodes. Cannot be specified if `coreInstanceGroup` or `instanceGroup` configuration blocks are set. Default `1`
     * 
     * @deprecated use `core_instance_group` configuration block `instance_count` argument instead
     */
    readonly coreInstanceCount?: pulumi.Input<number>;
    /**
     * Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [core node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-core). Cannot be specified if `coreInstanceCount` argument, `coreInstanceType` argument, or `instanceGroup` configuration blocks are set. Detailed below.
     */
    readonly coreInstanceGroup?: pulumi.Input<inputs.emr.ClusterCoreInstanceGroup>;
    /**
     * Use the `coreInstanceGroup` configuration block `instanceType` argument instead. The EC2 instance type of the slave nodes. Cannot be specified if `coreInstanceGroup` or `instanceGroup` configuration blocks are set.
     * 
     * @deprecated use `core_instance_group` configuration block `instance_type` argument instead
     */
    readonly coreInstanceType?: pulumi.Input<string>;
    /**
     * A custom Amazon Linux AMI for the cluster (instead of an EMR-owned AMI). Available in Amazon EMR version 5.7.0 and later.
     */
    readonly customAmiId?: pulumi.Input<string>;
    /**
     * Size in GiB of the EBS root device volume of the Linux AMI that is used for each EC2 instance. Available in Amazon EMR version 4.x and later.
     */
    readonly ebsRootVolumeSize?: pulumi.Input<number>;
    /**
     * Attributes for the EC2 instances running the job flow. Defined below
     */
    readonly ec2Attributes?: pulumi.Input<inputs.emr.ClusterEc2Attributes>;
    /**
     * Use the `masterInstanceGroup` configuration block, `coreInstanceGroup` configuration block and [`aws.emr.InstanceGroup` resource(s)](https://www.terraform.io/docs/providers/aws/r/emr_instance_group.html) instead. A list of `instanceGroup` objects for each instance group in the cluster. Exactly one of `masterInstanceType` and `instanceGroup` must be specified. If `instanceGroup` is set, then it must contain a configuration block for at least the `MASTER` instance group type (as well as any additional instance groups). Cannot be specified if `masterInstanceGroup` or `coreInstanceGroup` configuration blocks are set. Defined below
     * 
     * @deprecated use `master_instance_group` configuration block, `core_instance_group` configuration block, and `aws_emr_instance_group` resource(s) instead
     */
    readonly instanceGroups?: pulumi.Input<pulumi.Input<inputs.emr.ClusterInstanceGroup>[]>;
    /**
     * Switch on/off run cluster with no steps or when all steps are complete (default is on)
     */
    readonly keepJobFlowAliveWhenNoSteps?: pulumi.Input<boolean>;
    /**
     * Kerberos configuration for the cluster. Defined below
     */
    readonly kerberosAttributes?: pulumi.Input<inputs.emr.ClusterKerberosAttributes>;
    /**
     * S3 bucket to write the log files of the job flow. If a value is not provided, logs are not created
     */
    readonly logUri?: pulumi.Input<string>;
    /**
     * Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [master node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-master). Cannot be specified if `masterInstanceType` argument or `instanceGroup` configuration blocks are set. Detailed below.
     */
    readonly masterInstanceGroup?: pulumi.Input<inputs.emr.ClusterMasterInstanceGroup>;
    /**
     * Use the `masterInstanceGroup` configuration block `instanceType` argument instead. The EC2 instance type of the master node. Cannot be specified if `masterInstanceGroup` or `instanceGroup` configuration blocks are set.
     * 
     * @deprecated use `master_instance_group` configuration block `instance_type` argument instead
     */
    readonly masterInstanceType?: pulumi.Input<string>;
    /**
     * The public DNS name of the master EC2 instance.
     * * `core_instance_group.0.id` - Core node type Instance Group ID, if using Instance Group for this node type.
     */
    readonly masterPublicDns?: pulumi.Input<string>;
    /**
     * The name of the job flow
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The release label for the Amazon EMR release
     */
    readonly releaseLabel?: pulumi.Input<string>;
    /**
     * The way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an `instance group` is resized.
     */
    readonly scaleDownBehavior?: pulumi.Input<string>;
    /**
     * The security configuration name to attach to the EMR cluster. Only valid for EMR clusters with `releaseLabel` 4.8.0 or greater
     */
    readonly securityConfiguration?: pulumi.Input<string>;
    /**
     * IAM role that will be assumed by the Amazon EMR service to access AWS resources
     */
    readonly serviceRole?: pulumi.Input<string>;
    /**
     * List of steps to run when creating the cluster. Defined below. It is highly recommended to utilize [`ignoreChanges`](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) if other steps are being managed outside of this provider.
     */
    readonly steps?: pulumi.Input<pulumi.Input<inputs.emr.ClusterStep>[]>;
    /**
     * The number of steps that can be executed concurrently. You can specify a maximum of 256 steps. Only valid for EMR clusters with `releaseLabel` 5.28.0 or greater. (default is 1)
     */
    readonly stepConcurrencyLevel?: pulumi.Input<number>;
    /**
     * list of tags to apply to the EMR Cluster
     */
    readonly tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Switch on/off termination protection (default is `false`, except when using multiple master nodes). Before attempting to destroy the resource when termination protection is enabled, this configuration must be applied with its value set to `false`.
     */
    readonly terminationProtection?: pulumi.Input<boolean>;
    /**
     * Whether the job flow is visible to all IAM users of the AWS account associated with the job flow. Default `true`
     */
    readonly visibleToAllUsers?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a Cluster resource.
 */
export interface ClusterArgs {
    /**
     * A JSON string for selecting additional features such as adding proxy information. Note: Currently there is no API to retrieve the value of this argument after EMR cluster creation from provider, therefore this provider cannot detect drift from the actual EMR cluster if its value is changed outside this provider.
     */
    readonly additionalInfo?: pulumi.Input<string>;
    /**
     * A list of applications for the cluster. Valid values are: `Flink`, `Hadoop`, `Hive`, `Mahout`, `Pig`, `Spark`, and `JupyterHub` (as of EMR 5.14.0). Case insensitive
     */
    readonly applications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An IAM role for automatic scaling policies. The IAM role provides permissions that the automatic scaling feature requires to launch and terminate EC2 instances in an instance group.
     */
    readonly autoscalingRole?: pulumi.Input<string>;
    /**
     * Ordered list of bootstrap actions that will be run before Hadoop is started on the cluster nodes. Defined below.
     */
    readonly bootstrapActions?: pulumi.Input<pulumi.Input<inputs.emr.ClusterBootstrapAction>[]>;
    /**
     * List of configurations supplied for the EMR cluster you are creating
     */
    readonly configurations?: pulumi.Input<string>;
    /**
     * A JSON string for supplying list of configurations for the EMR cluster.
     */
    readonly configurationsJson?: pulumi.Input<string>;
    /**
     * Use the `coreInstanceGroup` configuration block `instanceCount` argument instead. Number of Amazon EC2 instances used to execute the job flow. EMR will use one node as the cluster's master node and use the remainder of the nodes (`coreInstanceCount`-1) as core nodes. Cannot be specified if `coreInstanceGroup` or `instanceGroup` configuration blocks are set. Default `1`
     * 
     * @deprecated use `core_instance_group` configuration block `instance_count` argument instead
     */
    readonly coreInstanceCount?: pulumi.Input<number>;
    /**
     * Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [core node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-core). Cannot be specified if `coreInstanceCount` argument, `coreInstanceType` argument, or `instanceGroup` configuration blocks are set. Detailed below.
     */
    readonly coreInstanceGroup?: pulumi.Input<inputs.emr.ClusterCoreInstanceGroup>;
    /**
     * Use the `coreInstanceGroup` configuration block `instanceType` argument instead. The EC2 instance type of the slave nodes. Cannot be specified if `coreInstanceGroup` or `instanceGroup` configuration blocks are set.
     * 
     * @deprecated use `core_instance_group` configuration block `instance_type` argument instead
     */
    readonly coreInstanceType?: pulumi.Input<string>;
    /**
     * A custom Amazon Linux AMI for the cluster (instead of an EMR-owned AMI). Available in Amazon EMR version 5.7.0 and later.
     */
    readonly customAmiId?: pulumi.Input<string>;
    /**
     * Size in GiB of the EBS root device volume of the Linux AMI that is used for each EC2 instance. Available in Amazon EMR version 4.x and later.
     */
    readonly ebsRootVolumeSize?: pulumi.Input<number>;
    /**
     * Attributes for the EC2 instances running the job flow. Defined below
     */
    readonly ec2Attributes?: pulumi.Input<inputs.emr.ClusterEc2Attributes>;
    /**
     * Use the `masterInstanceGroup` configuration block, `coreInstanceGroup` configuration block and [`aws.emr.InstanceGroup` resource(s)](https://www.terraform.io/docs/providers/aws/r/emr_instance_group.html) instead. A list of `instanceGroup` objects for each instance group in the cluster. Exactly one of `masterInstanceType` and `instanceGroup` must be specified. If `instanceGroup` is set, then it must contain a configuration block for at least the `MASTER` instance group type (as well as any additional instance groups). Cannot be specified if `masterInstanceGroup` or `coreInstanceGroup` configuration blocks are set. Defined below
     * 
     * @deprecated use `master_instance_group` configuration block, `core_instance_group` configuration block, and `aws_emr_instance_group` resource(s) instead
     */
    readonly instanceGroups?: pulumi.Input<pulumi.Input<inputs.emr.ClusterInstanceGroup>[]>;
    /**
     * Switch on/off run cluster with no steps or when all steps are complete (default is on)
     */
    readonly keepJobFlowAliveWhenNoSteps?: pulumi.Input<boolean>;
    /**
     * Kerberos configuration for the cluster. Defined below
     */
    readonly kerberosAttributes?: pulumi.Input<inputs.emr.ClusterKerberosAttributes>;
    /**
     * S3 bucket to write the log files of the job flow. If a value is not provided, logs are not created
     */
    readonly logUri?: pulumi.Input<string>;
    /**
     * Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [master node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-master). Cannot be specified if `masterInstanceType` argument or `instanceGroup` configuration blocks are set. Detailed below.
     */
    readonly masterInstanceGroup?: pulumi.Input<inputs.emr.ClusterMasterInstanceGroup>;
    /**
     * Use the `masterInstanceGroup` configuration block `instanceType` argument instead. The EC2 instance type of the master node. Cannot be specified if `masterInstanceGroup` or `instanceGroup` configuration blocks are set.
     * 
     * @deprecated use `master_instance_group` configuration block `instance_type` argument instead
     */
    readonly masterInstanceType?: pulumi.Input<string>;
    /**
     * The name of the job flow
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The release label for the Amazon EMR release
     */
    readonly releaseLabel: pulumi.Input<string>;
    /**
     * The way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an `instance group` is resized.
     */
    readonly scaleDownBehavior?: pulumi.Input<string>;
    /**
     * The security configuration name to attach to the EMR cluster. Only valid for EMR clusters with `releaseLabel` 4.8.0 or greater
     */
    readonly securityConfiguration?: pulumi.Input<string>;
    /**
     * IAM role that will be assumed by the Amazon EMR service to access AWS resources
     */
    readonly serviceRole: pulumi.Input<string>;
    /**
     * List of steps to run when creating the cluster. Defined below. It is highly recommended to utilize [`ignoreChanges`](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) if other steps are being managed outside of this provider.
     */
    readonly steps?: pulumi.Input<pulumi.Input<inputs.emr.ClusterStep>[]>;
    /**
     * The number of steps that can be executed concurrently. You can specify a maximum of 256 steps. Only valid for EMR clusters with `releaseLabel` 5.28.0 or greater. (default is 1)
     */
    readonly stepConcurrencyLevel?: pulumi.Input<number>;
    /**
     * list of tags to apply to the EMR Cluster
     */
    readonly tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Switch on/off termination protection (default is `false`, except when using multiple master nodes). Before attempting to destroy the resource when termination protection is enabled, this configuration must be applied with its value set to `false`.
     */
    readonly terminationProtection?: pulumi.Input<boolean>;
    /**
     * Whether the job flow is visible to all IAM users of the AWS account associated with the job flow. Default `true`
     */
    readonly visibleToAllUsers?: pulumi.Input<boolean>;
}
