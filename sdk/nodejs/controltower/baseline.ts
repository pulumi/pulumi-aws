// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS Control Tower Baseline.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.controltower.Baseline("example", {
 *     baselineIdentifier: "arn:aws:controltower:us-east-1::baseline/17BSJV3IGJ2QSGA2",
 *     baselineVersion: "4.0",
 *     targetIdentifier: test.arn,
 *     parameters: {
 *         key: "IdentityCenterEnabledBaselineArn",
 *         value: "arn:aws:controltower:us-east-1:664418989480:enabledbaseline/XALULM96QHI525UOC",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Control Tower Baseline using the `arn`. For example:
 *
 * ```sh
 * $ pulumi import aws:controltower/baseline:Baseline example arn:aws:controltower:us-east-1:012345678912:enabledbaseline/XALULM96QHI525UOC
 * ```
 */
export class Baseline extends pulumi.CustomResource {
    /**
     * Get an existing Baseline resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BaselineState, opts?: pulumi.CustomResourceOptions): Baseline {
        return new Baseline(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:controltower/baseline:Baseline';

    /**
     * Returns true if the given object is an instance of Baseline.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Baseline {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Baseline.__pulumiType;
    }

    /**
     * ARN of the Baseline.
     */
    declare public /*out*/ readonly arn: pulumi.Output<string>;
    /**
     * The ARN of the baseline to be enabled.
     */
    declare public readonly baselineIdentifier: pulumi.Output<string>;
    /**
     * The version of the baseline to be enabled.
     */
    declare public readonly baselineVersion: pulumi.Output<string>;
    declare public /*out*/ readonly operationIdentifier: pulumi.Output<string>;
    /**
     * A list of key-value objects that specify enablement parameters, where key is a string and value is a document of any type. See Parameter below for details.
     */
    declare public readonly parameters: pulumi.Output<outputs.controltower.BaselineParameters | undefined>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * Tags to apply to the landing zone. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A map of tags assigned to the landing zone, including those inherited from the provider `defaultTags` configuration block.
     */
    declare public /*out*/ readonly tagsAll: pulumi.Output<{[key: string]: string}>;
    /**
     * The ARN of the target on which the baseline will be enabled. Only OUs are supported as targets.
     *
     * The following arguments are optional:
     */
    declare public readonly targetIdentifier: pulumi.Output<string>;
    declare public readonly timeouts: pulumi.Output<outputs.controltower.BaselineTimeouts | undefined>;

    /**
     * Create a Baseline resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BaselineArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BaselineArgs | BaselineState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BaselineState | undefined;
            resourceInputs["arn"] = state?.arn;
            resourceInputs["baselineIdentifier"] = state?.baselineIdentifier;
            resourceInputs["baselineVersion"] = state?.baselineVersion;
            resourceInputs["operationIdentifier"] = state?.operationIdentifier;
            resourceInputs["parameters"] = state?.parameters;
            resourceInputs["region"] = state?.region;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tagsAll"] = state?.tagsAll;
            resourceInputs["targetIdentifier"] = state?.targetIdentifier;
            resourceInputs["timeouts"] = state?.timeouts;
        } else {
            const args = argsOrState as BaselineArgs | undefined;
            if (args?.baselineIdentifier === undefined && !opts.urn) {
                throw new Error("Missing required property 'baselineIdentifier'");
            }
            if (args?.baselineVersion === undefined && !opts.urn) {
                throw new Error("Missing required property 'baselineVersion'");
            }
            if (args?.targetIdentifier === undefined && !opts.urn) {
                throw new Error("Missing required property 'targetIdentifier'");
            }
            resourceInputs["baselineIdentifier"] = args?.baselineIdentifier;
            resourceInputs["baselineVersion"] = args?.baselineVersion;
            resourceInputs["parameters"] = args?.parameters;
            resourceInputs["region"] = args?.region;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["targetIdentifier"] = args?.targetIdentifier;
            resourceInputs["timeouts"] = args?.timeouts;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["operationIdentifier"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Baseline.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Baseline resources.
 */
export interface BaselineState {
    /**
     * ARN of the Baseline.
     */
    arn?: pulumi.Input<string>;
    /**
     * The ARN of the baseline to be enabled.
     */
    baselineIdentifier?: pulumi.Input<string>;
    /**
     * The version of the baseline to be enabled.
     */
    baselineVersion?: pulumi.Input<string>;
    operationIdentifier?: pulumi.Input<string>;
    /**
     * A list of key-value objects that specify enablement parameters, where key is a string and value is a document of any type. See Parameter below for details.
     */
    parameters?: pulumi.Input<inputs.controltower.BaselineParameters>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * Tags to apply to the landing zone. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A map of tags assigned to the landing zone, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The ARN of the target on which the baseline will be enabled. Only OUs are supported as targets.
     *
     * The following arguments are optional:
     */
    targetIdentifier?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.controltower.BaselineTimeouts>;
}

/**
 * The set of arguments for constructing a Baseline resource.
 */
export interface BaselineArgs {
    /**
     * The ARN of the baseline to be enabled.
     */
    baselineIdentifier: pulumi.Input<string>;
    /**
     * The version of the baseline to be enabled.
     */
    baselineVersion: pulumi.Input<string>;
    /**
     * A list of key-value objects that specify enablement parameters, where key is a string and value is a document of any type. See Parameter below for details.
     */
    parameters?: pulumi.Input<inputs.controltower.BaselineParameters>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * Tags to apply to the landing zone. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The ARN of the target on which the baseline will be enabled. Only OUs are supported as targets.
     *
     * The following arguments are optional:
     */
    targetIdentifier: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.controltower.BaselineTimeouts>;
}
