// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Allows the application of pre-defined controls to organizational units. For more information on usage, please see the
 * [AWS Control Tower User Guide](https://docs.aws.amazon.com/controltower/latest/userguide/enable-guardrails.html).
 */
export class ControlTowerControl extends pulumi.CustomResource {
    /**
     * Get an existing ControlTowerControl resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ControlTowerControlState, opts?: pulumi.CustomResourceOptions): ControlTowerControl {
        return new ControlTowerControl(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:controltower/controlTowerControl:ControlTowerControl';

    /**
     * Returns true if the given object is an instance of ControlTowerControl.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ControlTowerControl {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ControlTowerControl.__pulumiType;
    }

    /**
     * The ARN of the control. Only Strongly recommended and Elective controls are permitted, with the exception of the Region deny guardrail.
     */
    public readonly controlIdentifier!: pulumi.Output<string>;
    /**
     * The ARN of the organizational unit.
     */
    public readonly targetIdentifier!: pulumi.Output<string>;

    /**
     * Create a ControlTowerControl resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ControlTowerControlArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ControlTowerControlArgs | ControlTowerControlState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ControlTowerControlState | undefined;
            resourceInputs["controlIdentifier"] = state ? state.controlIdentifier : undefined;
            resourceInputs["targetIdentifier"] = state ? state.targetIdentifier : undefined;
        } else {
            const args = argsOrState as ControlTowerControlArgs | undefined;
            if ((!args || args.controlIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'controlIdentifier'");
            }
            if ((!args || args.targetIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetIdentifier'");
            }
            resourceInputs["controlIdentifier"] = args ? args.controlIdentifier : undefined;
            resourceInputs["targetIdentifier"] = args ? args.targetIdentifier : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ControlTowerControl.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ControlTowerControl resources.
 */
export interface ControlTowerControlState {
    /**
     * The ARN of the control. Only Strongly recommended and Elective controls are permitted, with the exception of the Region deny guardrail.
     */
    controlIdentifier?: pulumi.Input<string>;
    /**
     * The ARN of the organizational unit.
     */
    targetIdentifier?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ControlTowerControl resource.
 */
export interface ControlTowerControlArgs {
    /**
     * The ARN of the control. Only Strongly recommended and Elective controls are permitted, with the exception of the Region deny guardrail.
     */
    controlIdentifier: pulumi.Input<string>;
    /**
     * The ARN of the organizational unit.
     */
    targetIdentifier: pulumi.Input<string>;
}
