// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { KeyArgs, KeyState } from "./key";
export type Key = import("./key").Key;
export const Key: typeof import("./key").Key = null as any;
utilities.lazyLoad(exports, ["Key"], () => require("./key"));

export { KeyAliasArgs, KeyAliasState } from "./keyAlias";
export type KeyAlias = import("./keyAlias").KeyAlias;
export const KeyAlias: typeof import("./keyAlias").KeyAlias = null as any;
utilities.lazyLoad(exports, ["KeyAlias"], () => require("./keyAlias"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws:paymentcryptography/key:Key":
                return new Key(name, <any>undefined, { urn })
            case "aws:paymentcryptography/keyAlias:KeyAlias":
                return new KeyAlias(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "paymentcryptography/key", _module)
pulumi.runtime.registerResourceModule("aws", "paymentcryptography/keyAlias", _module)
