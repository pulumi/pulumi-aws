// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS RBin Rule.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.rbin.Rule("example", {
 *     description: "Example tag-level retention rule",
 *     resourceType: "EBS_SNAPSHOT",
 *     resourceTags: [{
 *         resourceTagKey: "tag_key",
 *         resourceTagValue: "tag_value",
 *     }],
 *     retentionPeriod: {
 *         retentionPeriodValue: 10,
 *         retentionPeriodUnit: "DAYS",
 *     },
 *     tags: {
 *         test_tag_key: "test_tag_value",
 *     },
 * });
 * ```
 *
 * ### Region-Level Retention Rule
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.rbin.Rule("example", {
 *     description: "Example region-level retention rule with exclusion tags",
 *     resourceType: "EC2_IMAGE",
 *     excludeResourceTags: [{
 *         resourceTagKey: "tag_key",
 *         resourceTagValue: "tag_value",
 *     }],
 *     retentionPeriod: {
 *         retentionPeriodValue: 10,
 *         retentionPeriodUnit: "DAYS",
 *     },
 *     tags: {
 *         test_tag_key: "test_tag_value",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import RBin Rule using the `id`. For example:
 *
 * ```sh
 * $ pulumi import aws:rbin/rule:Rule example examplerule
 * ```
 */
export class Rule extends pulumi.CustomResource {
    /**
     * Get an existing Rule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RuleState, opts?: pulumi.CustomResourceOptions): Rule {
        return new Rule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:rbin/rule:Rule';

    /**
     * Returns true if the given object is an instance of Rule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Rule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Rule.__pulumiType;
    }

    declare public /*out*/ readonly arn: pulumi.Output<string>;
    /**
     * Retention rule description.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * Exclusion tags to use to identify resources that are to be excluded, or ignored, by a Region-level retention rule. See `excludeResourceTags` below.
     */
    declare public readonly excludeResourceTags: pulumi.Output<outputs.rbin.RuleExcludeResourceTag[] | undefined>;
    /**
     * Information about the retention rule lock configuration. See `lockConfiguration` below.
     */
    declare public readonly lockConfiguration: pulumi.Output<outputs.rbin.RuleLockConfiguration | undefined>;
    /**
     * (Timestamp) Date and time at which the unlock delay is set to expire. Only returned for retention rules that have been unlocked and that are still within the unlock delay period.
     */
    declare public /*out*/ readonly lockEndTime: pulumi.Output<string>;
    /**
     * (Optional) Lock state of the retention rules to list. Only retention rules with the specified lock state are returned. Valid values are `locked`, `pendingUnlock`, `unlocked`.
     */
    declare public /*out*/ readonly lockState: pulumi.Output<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * Resource tags to use to identify resources that are to be retained by a tag-level retention rule. See `resourceTags` below.
     */
    declare public readonly resourceTags: pulumi.Output<outputs.rbin.RuleResourceTag[] | undefined>;
    /**
     * Resource type to be retained by the retention rule. Valid values are `EBS_SNAPSHOT` and `EC2_IMAGE`.
     */
    declare public readonly resourceType: pulumi.Output<string>;
    /**
     * Information about the retention period for which the retention rule is to retain resources. See `retentionPeriod` below.
     *
     * The following arguments are optional:
     */
    declare public readonly retentionPeriod: pulumi.Output<outputs.rbin.RuleRetentionPeriod>;
    /**
     * (String) State of the retention rule. Only retention rules that are in the `available` state retain resources. Valid values include `pending` and `available`.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    declare public /*out*/ readonly tagsAll: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a Rule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RuleArgs | RuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RuleState | undefined;
            resourceInputs["arn"] = state?.arn;
            resourceInputs["description"] = state?.description;
            resourceInputs["excludeResourceTags"] = state?.excludeResourceTags;
            resourceInputs["lockConfiguration"] = state?.lockConfiguration;
            resourceInputs["lockEndTime"] = state?.lockEndTime;
            resourceInputs["lockState"] = state?.lockState;
            resourceInputs["region"] = state?.region;
            resourceInputs["resourceTags"] = state?.resourceTags;
            resourceInputs["resourceType"] = state?.resourceType;
            resourceInputs["retentionPeriod"] = state?.retentionPeriod;
            resourceInputs["status"] = state?.status;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tagsAll"] = state?.tagsAll;
        } else {
            const args = argsOrState as RuleArgs | undefined;
            if (args?.resourceType === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceType'");
            }
            if (args?.retentionPeriod === undefined && !opts.urn) {
                throw new Error("Missing required property 'retentionPeriod'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["excludeResourceTags"] = args?.excludeResourceTags;
            resourceInputs["lockConfiguration"] = args?.lockConfiguration;
            resourceInputs["region"] = args?.region;
            resourceInputs["resourceTags"] = args?.resourceTags;
            resourceInputs["resourceType"] = args?.resourceType;
            resourceInputs["retentionPeriod"] = args?.retentionPeriod;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["lockEndTime"] = undefined /*out*/;
            resourceInputs["lockState"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Rule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Rule resources.
 */
export interface RuleState {
    arn?: pulumi.Input<string>;
    /**
     * Retention rule description.
     */
    description?: pulumi.Input<string>;
    /**
     * Exclusion tags to use to identify resources that are to be excluded, or ignored, by a Region-level retention rule. See `excludeResourceTags` below.
     */
    excludeResourceTags?: pulumi.Input<pulumi.Input<inputs.rbin.RuleExcludeResourceTag>[]>;
    /**
     * Information about the retention rule lock configuration. See `lockConfiguration` below.
     */
    lockConfiguration?: pulumi.Input<inputs.rbin.RuleLockConfiguration>;
    /**
     * (Timestamp) Date and time at which the unlock delay is set to expire. Only returned for retention rules that have been unlocked and that are still within the unlock delay period.
     */
    lockEndTime?: pulumi.Input<string>;
    /**
     * (Optional) Lock state of the retention rules to list. Only retention rules with the specified lock state are returned. Valid values are `locked`, `pendingUnlock`, `unlocked`.
     */
    lockState?: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * Resource tags to use to identify resources that are to be retained by a tag-level retention rule. See `resourceTags` below.
     */
    resourceTags?: pulumi.Input<pulumi.Input<inputs.rbin.RuleResourceTag>[]>;
    /**
     * Resource type to be retained by the retention rule. Valid values are `EBS_SNAPSHOT` and `EC2_IMAGE`.
     */
    resourceType?: pulumi.Input<string>;
    /**
     * Information about the retention period for which the retention rule is to retain resources. See `retentionPeriod` below.
     *
     * The following arguments are optional:
     */
    retentionPeriod?: pulumi.Input<inputs.rbin.RuleRetentionPeriod>;
    /**
     * (String) State of the retention rule. Only retention rules that are in the `available` state retain resources. Valid values include `pending` and `available`.
     */
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a Rule resource.
 */
export interface RuleArgs {
    /**
     * Retention rule description.
     */
    description?: pulumi.Input<string>;
    /**
     * Exclusion tags to use to identify resources that are to be excluded, or ignored, by a Region-level retention rule. See `excludeResourceTags` below.
     */
    excludeResourceTags?: pulumi.Input<pulumi.Input<inputs.rbin.RuleExcludeResourceTag>[]>;
    /**
     * Information about the retention rule lock configuration. See `lockConfiguration` below.
     */
    lockConfiguration?: pulumi.Input<inputs.rbin.RuleLockConfiguration>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * Resource tags to use to identify resources that are to be retained by a tag-level retention rule. See `resourceTags` below.
     */
    resourceTags?: pulumi.Input<pulumi.Input<inputs.rbin.RuleResourceTag>[]>;
    /**
     * Resource type to be retained by the retention rule. Valid values are `EBS_SNAPSHOT` and `EC2_IMAGE`.
     */
    resourceType: pulumi.Input<string>;
    /**
     * Information about the retention period for which the retention rule is to retain resources. See `retentionPeriod` below.
     *
     * The following arguments are optional:
     */
    retentionPeriod: pulumi.Input<inputs.rbin.RuleRetentionPeriod>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
