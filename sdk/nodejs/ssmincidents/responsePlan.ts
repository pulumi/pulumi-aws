// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage response plans in AWS Systems Manager Incident Manager.
 *
 * ## Example Usage
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.ssmincidents.ResponsePlan("example", {
 *     incidentTemplate: {
 *         title: "title",
 *         impact: 3,
 *     },
 *     tags: {
 *         key: "value",
 *     },
 * }, {
 *     dependsOn: [aws_ssmincidents_replication_set.example],
 * });
 * ```
 * ### Usage With All Fields
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.ssmincidents.ResponsePlan("example", {
 *     incidentTemplate: {
 *         title: "title",
 *         impact: 3,
 *         dedupeString: "dedupe",
 *         incidentTags: {
 *             key: "value",
 *         },
 *         notificationTargets: [
 *             {
 *                 snsTopicArn: aws_sns_topic.example1.arn,
 *             },
 *             {
 *                 snsTopicArn: aws_sns_topic.example2.arn,
 *             },
 *         ],
 *         summary: "summary",
 *     },
 *     displayName: "display name",
 *     chatChannels: [aws_sns_topic.topic.arn],
 *     engagements: ["arn:aws:ssm-contacts:us-east-2:111122223333:contact/test1"],
 *     action: {
 *         ssmAutomations: [{
 *             documentName: aws_ssm_document.document1.name,
 *             roleArn: aws_iam_role.role1.arn,
 *             documentVersion: "version1",
 *             targetAccount: "RESPONSE_PLAN_OWNER_ACCOUNT",
 *             parameters: [
 *                 {
 *                     name: "key",
 *                     values: [
 *                         "value1",
 *                         "value2",
 *                     ],
 *                 },
 *                 {
 *                     name: "foo",
 *                     values: ["bar"],
 *                 },
 *             ],
 *             dynamicParameters: {
 *                 someKey: "INVOLVED_RESOURCES",
 *                 anotherKey: "INCIDENT_RECORD_ARN",
 *             },
 *         }],
 *     },
 *     integration: {
 *         pagerduties: [{
 *             name: "pagerdutyIntergration",
 *             serviceId: "example",
 *             secretId: "example",
 *         }],
 *     },
 *     tags: {
 *         key: "value",
 *     },
 * }, {
 *     dependsOn: [aws_ssmincidents_replication_set.example],
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import an Incident Manager response plan using the response plan ARN. You can find the response plan ARN in the AWS Management Console. For example:
 *
 * ```sh
 *  $ pulumi import aws:ssmincidents/responsePlan:ResponsePlan responsePlanName ARNValue
 * ```
 */
export class ResponsePlan extends pulumi.CustomResource {
    /**
     * Get an existing ResponsePlan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResponsePlanState, opts?: pulumi.CustomResourceOptions): ResponsePlan {
        return new ResponsePlan(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:ssmincidents/responsePlan:ResponsePlan';

    /**
     * Returns true if the given object is an instance of ResponsePlan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ResponsePlan {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ResponsePlan.__pulumiType;
    }

    /**
     * The actions that the response plan starts at the beginning of an incident.
     */
    public readonly action!: pulumi.Output<outputs.ssmincidents.ResponsePlanAction | undefined>;
    /**
     * The ARN of the response plan.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The Chatbot chat channel used for collaboration during an incident.
     */
    public readonly chatChannels!: pulumi.Output<string[] | undefined>;
    /**
     * The long format of the response plan name. This field can contain spaces.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * The Amazon Resource Name (ARN) for the contacts and escalation plans that the response plan engages during an incident.
     */
    public readonly engagements!: pulumi.Output<string[] | undefined>;
    public readonly incidentTemplate!: pulumi.Output<outputs.ssmincidents.ResponsePlanIncidentTemplate>;
    /**
     * Information about third-party services integrated into the response plan. The following values are supported:
     */
    public readonly integration!: pulumi.Output<outputs.ssmincidents.ResponsePlanIntegration | undefined>;
    /**
     * The name of the response plan.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The tags applied to the response plan.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a ResponsePlan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResponsePlanArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ResponsePlanArgs | ResponsePlanState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ResponsePlanState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["chatChannels"] = state ? state.chatChannels : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["engagements"] = state ? state.engagements : undefined;
            resourceInputs["incidentTemplate"] = state ? state.incidentTemplate : undefined;
            resourceInputs["integration"] = state ? state.integration : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
        } else {
            const args = argsOrState as ResponsePlanArgs | undefined;
            if ((!args || args.incidentTemplate === undefined) && !opts.urn) {
                throw new Error("Missing required property 'incidentTemplate'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["chatChannels"] = args ? args.chatChannels : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["engagements"] = args ? args.engagements : undefined;
            resourceInputs["incidentTemplate"] = args ? args.incidentTemplate : undefined;
            resourceInputs["integration"] = args ? args.integration : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ResponsePlan.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ResponsePlan resources.
 */
export interface ResponsePlanState {
    /**
     * The actions that the response plan starts at the beginning of an incident.
     */
    action?: pulumi.Input<inputs.ssmincidents.ResponsePlanAction>;
    /**
     * The ARN of the response plan.
     */
    arn?: pulumi.Input<string>;
    /**
     * The Chatbot chat channel used for collaboration during an incident.
     */
    chatChannels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The long format of the response plan name. This field can contain spaces.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) for the contacts and escalation plans that the response plan engages during an incident.
     */
    engagements?: pulumi.Input<pulumi.Input<string>[]>;
    incidentTemplate?: pulumi.Input<inputs.ssmincidents.ResponsePlanIncidentTemplate>;
    /**
     * Information about third-party services integrated into the response plan. The following values are supported:
     */
    integration?: pulumi.Input<inputs.ssmincidents.ResponsePlanIntegration>;
    /**
     * The name of the response plan.
     */
    name?: pulumi.Input<string>;
    /**
     * The tags applied to the response plan.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a ResponsePlan resource.
 */
export interface ResponsePlanArgs {
    /**
     * The actions that the response plan starts at the beginning of an incident.
     */
    action?: pulumi.Input<inputs.ssmincidents.ResponsePlanAction>;
    /**
     * The Chatbot chat channel used for collaboration during an incident.
     */
    chatChannels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The long format of the response plan name. This field can contain spaces.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) for the contacts and escalation plans that the response plan engages during an incident.
     */
    engagements?: pulumi.Input<pulumi.Input<string>[]>;
    incidentTemplate: pulumi.Input<inputs.ssmincidents.ResponsePlanIncidentTemplate>;
    /**
     * Information about third-party services integrated into the response plan. The following values are supported:
     */
    integration?: pulumi.Input<inputs.ssmincidents.ResponsePlanIntegration>;
    /**
     * The name of the response plan.
     */
    name?: pulumi.Input<string>;
    /**
     * The tags applied to the response plan.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
