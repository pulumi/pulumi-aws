// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./input";
import * as outputs from "./output";

export interface ReplicationSetRegion {
    /**
     * The Amazon Resource name (ARN) of the customer managed key. If omitted, AWS manages the AWS KMS keys for you, using an AWS owned key, as indicated by a default value of `DefaultKey`.
     *
     * The following arguments are optional:
     */
    kmsKeyArn?: string;
    /**
     * The name of the Region, such as `ap-southeast-2`.
     */
    name: string;
    /**
     * The current status of the Region.
     * * Valid Values: `ACTIVE` | `CREATING` | `UPDATING` | `DELETING` | `FAILED`
     */
    status: string;
    /**
     * More information about the status of a Region.
     */
    statusMessage: string;
}
export interface ResponsePlanAction {
    ssmAutomations?: outputs.ResponsePlanActionSsmAutomation[];
}
export interface ResponsePlanActionSsmAutomation {
    documentName: string;
    documentVersion?: string;
    dynamicParameters?: {[key: string]: string};
    parameters?: outputs.ResponsePlanActionSsmAutomationParameter[];
    roleArn: string;
    targetAccount?: string;
}
export interface ResponsePlanActionSsmAutomationParameter {
    /**
     * The name of the response plan.
     */
    name: string;
    values: string[];
}
export interface ResponsePlanIncidentTemplate {
    /**
     * A string used to stop Incident Manager from creating multiple incident records for the same incident.
     */
    dedupeString?: string;
    /**
     * The impact value of a generated incident. The following values are supported:
     */
    impact: number;
    /**
     * The tags assigned to an incident template. When an incident starts, Incident Manager assigns the tags specified in the template to the incident.
     */
    incidentTags?: {[key: string]: string};
    /**
     * The Amazon Simple Notification Service (Amazon SNS) targets that this incident notifies when it is updated. The `notificationTarget` configuration block supports the following argument:
     */
    notificationTargets?: outputs.ResponsePlanIncidentTemplateNotificationTarget[];
    /**
     * The summary of an incident.
     */
    summary?: string;
    /**
     * The title of a generated incident.
     */
    title: string;
}
export interface ResponsePlanIncidentTemplateNotificationTarget {
    /**
     * The ARN of the Amazon SNS topic.
     *
     * The following arguments are optional:
     */
    snsTopicArn: string;
}
export interface ResponsePlanIntegration {
    pagerduties?: outputs.ResponsePlanIntegrationPagerduty[];
}
export interface ResponsePlanIntegrationPagerduty {
    /**
     * The name of the response plan.
     */
    name: string;
    secretId: string;
    serviceId: string;
}
export interface GetReplicationSetRegion {
    /**
     * The ARN of the AWS Key Management Service (AWS KMS) encryption key.
     */
    kmsKeyArn: string;
    /**
     * The name of the Region.
     */
    name: string;
    /**
     * The current status of the Region.
     * * Valid Values: `ACTIVE` | `CREATING` | `UPDATING` | `DELETING` | `FAILED`
     */
    status: string;
    /**
     * More information about the status of a Region.
     */
    statusMessage: string;
}
export interface GetResponsePlanAction {
    /**
     * The Systems Manager automation document to start as the runbook at the beginning of the incident. The following values are supported:
     */
    ssmAutomations: outputs.GetResponsePlanActionSsmAutomation[];
}
export interface GetResponsePlanActionSsmAutomation {
    /**
     * The automation document's name.
     */
    documentName: string;
    /**
     * The version of the automation document to use at runtime.
     */
    documentVersion: string;
    /**
     * The key-value pair used to resolve dynamic parameter values when processing a Systems Manager Automation runbook.
     */
    dynamicParameters: {[key: string]: string};
    /**
     * The key-value pair parameters used when the automation document runs. The following values are supported:
     */
    parameters: outputs.GetResponsePlanActionSsmAutomationParameter[];
    /**
     * The Amazon Resource Name (ARN) of the role that the automation document assumes when it runs commands.
     */
    roleArn: string;
    /**
     * The account that runs the automation document. This can be in either the management account or an application account.
     */
    targetAccount: string;
}
export interface GetResponsePlanActionSsmAutomationParameter {
    /**
     * The name of the PagerDuty configuration.
     */
    name: string;
    /**
     * The values for the associated parameter name.
     */
    values: string[];
}
export interface GetResponsePlanIncidentTemplate {
    /**
     * A string used to stop Incident Manager from creating multiple incident records for the same incident.
     */
    dedupeString: string;
    /**
     * The impact value of a generated incident. The following values are supported:
     */
    impact: number;
    /**
     * The tags assigned to an incident template. When an incident starts, Incident Manager assigns the tags specified in the template to the incident.
     */
    incidentTags: {[key: string]: string};
    /**
     * The Amazon Simple Notification Service (Amazon SNS) targets that this incident notifies when it is updated. The `notificationTarget` configuration block supports the following argument:
     */
    notificationTargets: outputs.GetResponsePlanIncidentTemplateNotificationTarget[];
    /**
     * The summary of an incident.
     */
    summary: string;
    /**
     * The title of a generated incident.
     */
    title: string;
}
export interface GetResponsePlanIncidentTemplateNotificationTarget {
    /**
     * The ARN of the Amazon SNS topic.
     */
    snsTopicArn: string;
}
export interface GetResponsePlanIntegration {
    /**
     * Details about the PagerDuty configuration for a response plan. The following values are supported:
     */
    pagerduties: outputs.GetResponsePlanIntegrationPagerduty[];
}
export interface GetResponsePlanIntegrationPagerduty {
    /**
     * The name of the PagerDuty configuration.
     */
    name: string;
    /**
     * The ID of the AWS Secrets Manager secret that stores your PagerDuty key &mdash; either a General Access REST API Key or User Token REST API Key &mdash; and other user credentials.
     */
    secretId: string;
    /**
     * The ID of the PagerDuty service that the response plan associates with an incident when it launches.
     */
    serviceId: string;
}
