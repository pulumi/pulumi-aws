// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./input";
import * as outputs from "./output";

export interface AutomationRuleAction {
    /**
     * A block that specifies that the automation rule action is an update to a finding field.  Documented below.
     */
    findingFieldsUpdate?: outputs.AutomationRuleActionFindingFieldsUpdate;
    /**
     * Specifies that the rule action should update the `Types` finding field. The `Types` finding field classifies findings in the format of namespace/category/classifier.
     */
    type?: string;
}
export interface AutomationRuleActionFindingFieldsUpdate {
    /**
     * The rule action updates the `Confidence` field of a finding.
     */
    confidence?: number;
    /**
     * The rule action updates the `Criticality` field of a finding.
     */
    criticality?: number;
    /**
     * A resource block that updates the note. Documented below.
     */
    note?: outputs.AutomationRuleActionFindingFieldsUpdateNote;
    /**
     * A resource block that the rule action updates the `RelatedFindings` field of a finding. Documented below.
     */
    relatedFindings?: outputs.AutomationRuleActionFindingFieldsUpdateRelatedFinding[];
    /**
     * A resource block that updates to the severity information for a finding. Documented below.
     */
    severity?: outputs.AutomationRuleActionFindingFieldsUpdateSeverity;
    /**
     * The rule action updates the `Types` field of a finding.
     */
    types?: string[];
    /**
     * The rule action updates the `UserDefinedFields` field of a finding.
     */
    userDefinedFields?: {[key: string]: string};
    /**
     * The rule action updates the `VerificationState` field of a finding. The allowed values are the following `UNKNOWN`, `TRUE_POSITIVE`, `FALSE_POSITIVE` and `BENIGN_POSITIVE`.
     */
    verificationState?: string;
    /**
     * A resource block that is used to update information about the investigation into the finding. Documented below.
     */
    workflow?: outputs.AutomationRuleActionFindingFieldsUpdateWorkflow;
}
export interface AutomationRuleActionFindingFieldsUpdateNote {
    /**
     * The updated note text.
     */
    text: string;
    /**
     * The principal that updated the note.
     */
    updatedBy: string;
}
export interface AutomationRuleActionFindingFieldsUpdateRelatedFinding {
    /**
     * The product-generated identifier for a related finding.
     */
    id: string;
    /**
     * The ARN of the product that generated a related finding.
     */
    productArn: string;
}
export interface AutomationRuleActionFindingFieldsUpdateSeverity {
    /**
     * The severity value of the finding. The allowed values are the following `INFORMATIONAL`, `LOW`, `MEDIUM`, `HIGH` and `CRITICAL`.
     */
    label: string;
    /**
     * The native severity as defined by the AWS service or integrated partner product that generated the finding.
     */
    product?: number;
}
export interface AutomationRuleActionFindingFieldsUpdateWorkflow {
    /**
     * The status of the investigation into the finding. The allowed values are the following `NEW`, `NOTIFIED`, `RESOLVED` and `SUPPRESSED`.
     */
    status?: string;
}
export interface AutomationRuleCriteria {
    /**
     * The AWS account ID in which a finding was generated. Documented below.
     */
    awsAccountIds?: outputs.AutomationRuleCriteriaAwsAccountId[];
    /**
     * The name of the AWS account in which a finding was generated. Documented below.
     */
    awsAccountNames?: outputs.AutomationRuleCriteriaAwsAccountName[];
    /**
     * The name of the company for the product that generated the finding. For control-based findings, the company is AWS. Documented below.
     */
    companyNames?: outputs.AutomationRuleCriteriaCompanyName[];
    /**
     * The unique identifier of a standard in which a control is enabled. Documented below.
     */
    complianceAssociatedStandardsIds?: outputs.AutomationRuleCriteriaComplianceAssociatedStandardsId[];
    /**
     * The security control ID for which a finding was generated. Security control IDs are the same across standards. Documented below.
     */
    complianceSecurityControlIds?: outputs.AutomationRuleCriteriaComplianceSecurityControlId[];
    /**
     * The result of a security check. This field is only used for findings generated from controls. Documented below.
     */
    complianceStatuses?: outputs.AutomationRuleCriteriaComplianceStatus[];
    /**
     * The likelihood that a finding accurately identifies the behavior or issue that it was intended to identify. `Confidence` is scored on a 0â€“100 basis using a ratio scale. A value of `0` means 0 percent confidence, and a value of `100` means 100 percent confidence. Documented below.
     */
    confidences?: outputs.AutomationRuleCriteriaConfidence[];
    /**
     * A timestamp that indicates when this finding record was created. Documented below.
     */
    createdAts?: outputs.AutomationRuleCriteriaCreatedAt[];
    /**
     * The level of importance that is assigned to the resources that are associated with a finding. Documented below.
     */
    criticalities?: outputs.AutomationRuleCriteriaCriticality[];
    /**
     * A finding's description. Documented below.
     */
    descriptions?: outputs.AutomationRuleCriteriaDescription[];
    /**
     * A timestamp that indicates when the potential security issue captured by a finding was first observed by the security findings product. Documented below.
     */
    firstObservedAts?: outputs.AutomationRuleCriteriaFirstObservedAt[];
    /**
     * The identifier for the solution-specific component that generated a finding. Documented below.
     */
    generatorIds?: outputs.AutomationRuleCriteriaGeneratorId[];
    /**
     * The product-specific identifier for a finding. Documented below.
     */
    ids?: outputs.AutomationRuleCriteriaId[];
    /**
     * A timestamp that indicates when the potential security issue captured by a finding was most recently observed by the security findings product. Documented below.
     */
    lastObservedAts?: outputs.AutomationRuleCriteriaLastObservedAt[];
    /**
     * The text of a user-defined note that's added to a finding. Documented below.
     */
    noteTexts?: outputs.AutomationRuleCriteriaNoteText[];
    /**
     * The timestamp of when the note was updated. Documented below.
     */
    noteUpdatedAts?: outputs.AutomationRuleCriteriaNoteUpdatedAt[];
    /**
     * The principal that created a note. Documented below.
     */
    noteUpdatedBies?: outputs.AutomationRuleCriteriaNoteUpdatedBy[];
    /**
     * The Amazon Resource Name (ARN) for a third-party product that generated a finding in Security Hub. Documented below.
     */
    productArns?: outputs.AutomationRuleCriteriaProductArn[];
    /**
     * Provides the name of the product that generated the finding. For control-based findings, the product name is Security Hub. Documented below.
     */
    productNames?: outputs.AutomationRuleCriteriaProductName[];
    /**
     * Provides the current state of a finding. Documented below.
     */
    recordStates?: outputs.AutomationRuleCriteriaRecordState[];
    /**
     * The product-generated identifier for a related finding.  Documented below.
     */
    relatedFindingsIds?: outputs.AutomationRuleCriteriaRelatedFindingsId[];
    /**
     * The ARN for the product that generated a related finding. Documented below.
     */
    relatedFindingsProductArns?: outputs.AutomationRuleCriteriaRelatedFindingsProductArn[];
    /**
     * The Amazon Resource Name (ARN) of the application that is related to a finding. Documented below.
     */
    resourceApplicationArns?: outputs.AutomationRuleCriteriaResourceApplicationArn[];
    /**
     * The name of the application that is related to a finding. Documented below.
     */
    resourceApplicationNames?: outputs.AutomationRuleCriteriaResourceApplicationName[];
    /**
     * Custom fields and values about the resource that a finding pertains to. Documented below.
     */
    resourceDetailsOthers?: outputs.AutomationRuleCriteriaResourceDetailsOther[];
    /**
     * The identifier for the given resource type. For AWS resources that are identified by Amazon Resource Names (ARNs), this is the ARN. For AWS resources that lack ARNs, this is the identifier as defined by the AWS service that created the resource. For non-AWS resources, this is a unique identifier that is associated with the resource. Documented below.
     */
    resourceIds?: outputs.AutomationRuleCriteriaResourceId[];
    /**
     * The partition in which the resource that the finding pertains to is located. A partition is a group of AWS Regions. Each AWS account is scoped to one partition. Documented below.
     */
    resourcePartitions?: outputs.AutomationRuleCriteriaResourcePartition[];
    /**
     * The AWS Region where the resource that a finding pertains to is located. Documented below.
     */
    resourceRegions?: outputs.AutomationRuleCriteriaResourceRegion[];
    /**
     * A list of AWS tags associated with a resource at the time the finding was processed. Documented below.
     */
    resourceTags?: outputs.AutomationRuleCriteriaResourceTag[];
    /**
     * The type of resource that the finding pertains to. Documented below.
     */
    resourceTypes?: outputs.AutomationRuleCriteriaResourceType[];
    /**
     * The severity value of the finding. Documented below.
     */
    severityLabels?: outputs.AutomationRuleCriteriaSeverityLabel[];
    /**
     * Provides a URL that links to a page about the current finding in the finding product. Documented below.
     */
    sourceUrls?: outputs.AutomationRuleCriteriaSourceUrl[];
    /**
     * A finding's title. Documented below.
     */
    titles?: outputs.AutomationRuleCriteriaTitle[];
    /**
     * One or more finding types in the format of namespace/category/classifier that classify a finding. Documented below.
     */
    types?: outputs.AutomationRuleCriteriaType[];
    /**
     * A timestamp that indicates when the finding record was most recently updated. Documented below.
     */
    updatedAts?: outputs.AutomationRuleCriteriaUpdatedAt[];
    /**
     * A list of user-defined name and value string pairs added to a finding. Documented below.
     */
    userDefinedFields?: outputs.AutomationRuleCriteriaUserDefinedField[];
    /**
     * Provides the veracity of a finding. Documented below.
     */
    verificationStates?: outputs.AutomationRuleCriteriaVerificationState[];
    /**
     * Provides information about the status of the investigation into a finding. Documented below.
     */
    workflowStatuses?: outputs.AutomationRuleCriteriaWorkflowStatus[];
}
export interface AutomationRuleCriteriaAwsAccountId {
    comparison: string;
    value: string;
}
export interface AutomationRuleCriteriaAwsAccountName {
    comparison: string;
    value: string;
}
export interface AutomationRuleCriteriaCompanyName {
    comparison: string;
    value: string;
}
export interface AutomationRuleCriteriaComplianceAssociatedStandardsId {
    comparison: string;
    value: string;
}
export interface AutomationRuleCriteriaComplianceSecurityControlId {
    comparison: string;
    value: string;
}
export interface AutomationRuleCriteriaComplianceStatus {
    comparison: string;
    value: string;
}
export interface AutomationRuleCriteriaConfidence {
    eq?: number;
    gt?: number;
    gte?: number;
    lt?: number;
    lte?: number;
}
export interface AutomationRuleCriteriaCreatedAt {
    dateRange?: outputs.AutomationRuleCriteriaCreatedAtDateRange;
    end?: string;
    start?: string;
}
export interface AutomationRuleCriteriaCreatedAtDateRange {
    /**
     * A date range unit for the date filter. Valid values: `DAYS`.
     */
    unit: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: number;
}
export interface AutomationRuleCriteriaCriticality {
    eq?: number;
    gt?: number;
    gte?: number;
    lt?: number;
    lte?: number;
}
export interface AutomationRuleCriteriaDescription {
    comparison: string;
    value: string;
}
export interface AutomationRuleCriteriaFirstObservedAt {
    dateRange?: outputs.AutomationRuleCriteriaFirstObservedAtDateRange;
    end?: string;
    start?: string;
}
export interface AutomationRuleCriteriaFirstObservedAtDateRange {
    /**
     * A date range unit for the date filter. Valid values: `DAYS`.
     */
    unit: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: number;
}
export interface AutomationRuleCriteriaGeneratorId {
    comparison: string;
    value: string;
}
export interface AutomationRuleCriteriaId {
    comparison: string;
    value: string;
}
export interface AutomationRuleCriteriaLastObservedAt {
    dateRange?: outputs.AutomationRuleCriteriaLastObservedAtDateRange;
    end?: string;
    start?: string;
}
export interface AutomationRuleCriteriaLastObservedAtDateRange {
    /**
     * A date range unit for the date filter. Valid values: `DAYS`.
     */
    unit: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: number;
}
export interface AutomationRuleCriteriaNoteText {
    comparison: string;
    value: string;
}
export interface AutomationRuleCriteriaNoteUpdatedAt {
    dateRange?: outputs.AutomationRuleCriteriaNoteUpdatedAtDateRange;
    end?: string;
    start?: string;
}
export interface AutomationRuleCriteriaNoteUpdatedAtDateRange {
    /**
     * A date range unit for the date filter. Valid values: `DAYS`.
     */
    unit: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: number;
}
export interface AutomationRuleCriteriaNoteUpdatedBy {
    comparison: string;
    value: string;
}
export interface AutomationRuleCriteriaProductArn {
    comparison: string;
    value: string;
}
export interface AutomationRuleCriteriaProductName {
    comparison: string;
    value: string;
}
export interface AutomationRuleCriteriaRecordState {
    comparison: string;
    value: string;
}
export interface AutomationRuleCriteriaRelatedFindingsId {
    comparison: string;
    value: string;
}
export interface AutomationRuleCriteriaRelatedFindingsProductArn {
    comparison: string;
    value: string;
}
export interface AutomationRuleCriteriaResourceApplicationArn {
    comparison: string;
    value: string;
}
export interface AutomationRuleCriteriaResourceApplicationName {
    comparison: string;
    value: string;
}
export interface AutomationRuleCriteriaResourceDetailsOther {
    comparison: string;
    key: string;
    value: string;
}
export interface AutomationRuleCriteriaResourceId {
    comparison: string;
    value: string;
}
export interface AutomationRuleCriteriaResourcePartition {
    comparison: string;
    value: string;
}
export interface AutomationRuleCriteriaResourceRegion {
    comparison: string;
    value: string;
}
export interface AutomationRuleCriteriaResourceTag {
    comparison: string;
    key: string;
    value: string;
}
export interface AutomationRuleCriteriaResourceType {
    comparison: string;
    value: string;
}
export interface AutomationRuleCriteriaSeverityLabel {
    comparison: string;
    value: string;
}
export interface AutomationRuleCriteriaSourceUrl {
    comparison: string;
    value: string;
}
export interface AutomationRuleCriteriaTitle {
    comparison: string;
    value: string;
}
export interface AutomationRuleCriteriaType {
    comparison: string;
    value: string;
}
export interface AutomationRuleCriteriaUpdatedAt {
    dateRange?: outputs.AutomationRuleCriteriaUpdatedAtDateRange;
    end?: string;
    start?: string;
}
export interface AutomationRuleCriteriaUpdatedAtDateRange {
    /**
     * A date range unit for the date filter. Valid values: `DAYS`.
     */
    unit: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: number;
}
export interface AutomationRuleCriteriaUserDefinedField {
    comparison: string;
    key: string;
    value: string;
}
export interface AutomationRuleCriteriaVerificationState {
    comparison: string;
    value: string;
}
export interface AutomationRuleCriteriaWorkflowStatus {
    comparison: string;
    value: string;
}
export interface ConfigurationPolicyConfigurationPolicy {
    /**
     * A list that defines which security standards are enabled in the configuration policy. It must be defined if `serviceEnabled` is set to true.
     */
    enabledStandardArns?: string[];
    /**
     * Defines which security controls are enabled in the configuration policy and any customizations to parameters affecting them. See below.
     */
    securityControlsConfiguration?: outputs.ConfigurationPolicyConfigurationPolicySecurityControlsConfiguration;
    /**
     * Indicates whether Security Hub is enabled in the policy.
     */
    serviceEnabled: boolean;
}
export interface ConfigurationPolicyConfigurationPolicySecurityControlsConfiguration {
    /**
     * A list of security controls that are disabled in the configuration policy Security Hub enables all other controls (including newly released controls) other than the listed controls. Conflicts with `enabledControlIdentifiers`.
     */
    disabledControlIdentifiers?: string[];
    /**
     * A list of security controls that are enabled in the configuration policy. Security Hub disables all other controls (including newly released controls) other than the listed controls. Conflicts with `disabledControlIdentifiers`.
     */
    enabledControlIdentifiers?: string[];
    /**
     * A list of control parameter customizations that are included in a configuration policy. Include multiple blocks to define multiple control custom parameters. See below.
     */
    securityControlCustomParameters?: outputs.ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationSecurityControlCustomParameter[];
}
export interface ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationSecurityControlCustomParameter {
    /**
     * An object that specifies parameter values for a control in a configuration policy. See below.
     */
    parameters: outputs.ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationSecurityControlCustomParameterParameter[];
    /**
     * The ID of the security control. For more information see the [Security Hub controls reference] documentation.
     */
    securityControlId: string;
}
export interface ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationSecurityControlCustomParameterParameter {
    /**
     * The bool `value` for a Boolean-typed Security Hub Control Parameter.
     */
    bool?: outputs.ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationSecurityControlCustomParameterParameterBool;
    /**
     * The float `value` for a Double-typed Security Hub Control Parameter.
     */
    double?: outputs.ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationSecurityControlCustomParameterParameterDouble;
    /**
     * The string `value` for a Enum-typed Security Hub Control Parameter.
     */
    enum?: outputs.ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationSecurityControlCustomParameterParameterEnum;
    /**
     * The string list `value` for a EnumList-typed Security Hub Control Parameter.
     */
    enumList?: outputs.ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationSecurityControlCustomParameterParameterEnumList;
    /**
     * The int `value` for a Int-typed Security Hub Control Parameter.
     */
    int?: outputs.ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationSecurityControlCustomParameterParameterInt;
    /**
     * The int list `value` for a IntList-typed Security Hub Control Parameter.
     */
    intList?: outputs.ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationSecurityControlCustomParameterParameterIntList;
    /**
     * The name of the control parameter. For more information see the [Security Hub controls reference] documentation.
     */
    name: string;
    /**
     * The string `value` for a String-typed Security Hub Control Parameter.
     */
    string?: outputs.ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationSecurityControlCustomParameterParameterString;
    /**
     * The string list `value` for a StringList-typed Security Hub Control Parameter.
     */
    stringList?: outputs.ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationSecurityControlCustomParameterParameterStringList;
    /**
     * Identifies whether a control parameter uses a custom user-defined value or subscribes to the default Security Hub behavior. Valid values: `DEFAULT`, `CUSTOM`.
     */
    valueType: string;
}
export interface ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationSecurityControlCustomParameterParameterBool {
    value: boolean;
}
export interface ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationSecurityControlCustomParameterParameterDouble {
    value: number;
}
export interface ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationSecurityControlCustomParameterParameterEnum {
    value: string;
}
export interface ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationSecurityControlCustomParameterParameterEnumList {
    values: string[];
}
export interface ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationSecurityControlCustomParameterParameterInt {
    value: number;
}
export interface ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationSecurityControlCustomParameterParameterIntList {
    values: number[];
}
export interface ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationSecurityControlCustomParameterParameterString {
    value: string;
}
export interface ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationSecurityControlCustomParameterParameterStringList {
    values: string[];
}
export interface InsightFilters {
    /**
     * AWS account ID that a finding is generated in. See String_Filter below for more details.
     */
    awsAccountIds?: outputs.InsightFiltersAwsAccountId[];
    /**
     * The name of the findings provider (company) that owns the solution (product) that generates findings. See String_Filter below for more details.
     */
    companyNames?: outputs.InsightFiltersCompanyName[];
    /**
     * Exclusive to findings that are generated as the result of a check run against a specific rule in a supported standard, such as CIS AWS Foundations. Contains security standard-related finding details. See String Filter below for more details.
     */
    complianceStatuses?: outputs.InsightFiltersComplianceStatus[];
    /**
     * A finding's confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify. Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence. See Number Filter below for more details.
     */
    confidences?: outputs.InsightFiltersConfidence[];
    /**
     * An ISO8601-formatted timestamp that indicates when the security-findings provider captured the potential security issue that a finding captured. See Date Filter below for more details.
     */
    createdAts?: outputs.InsightFiltersCreatedAt[];
    /**
     * The level of importance assigned to the resources associated with the finding. A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources. See Number Filter below for more details.
     */
    criticalities?: outputs.InsightFiltersCriticality[];
    /**
     * A finding's description. See String Filter below for more details.
     */
    descriptions?: outputs.InsightFiltersDescription[];
    /**
     * The finding provider value for the finding confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify. Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence. See Number Filter below for more details.
     */
    findingProviderFieldsConfidences?: outputs.InsightFiltersFindingProviderFieldsConfidence[];
    /**
     * The finding provider value for the level of importance assigned to the resources associated with the findings. A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources. See Number Filter below for more details.
     */
    findingProviderFieldsCriticalities?: outputs.InsightFiltersFindingProviderFieldsCriticality[];
    /**
     * The finding identifier of a related finding that is identified by the finding provider. See String Filter below for more details.
     */
    findingProviderFieldsRelatedFindingsIds?: outputs.InsightFiltersFindingProviderFieldsRelatedFindingsId[];
    /**
     * The ARN of the solution that generated a related finding that is identified by the finding provider. See String Filter below for more details.
     */
    findingProviderFieldsRelatedFindingsProductArns?: outputs.InsightFiltersFindingProviderFieldsRelatedFindingsProductArn[];
    /**
     * The finding provider value for the severity label. See String Filter below for more details.
     */
    findingProviderFieldsSeverityLabels?: outputs.InsightFiltersFindingProviderFieldsSeverityLabel[];
    /**
     * The finding provider's original value for the severity. See String Filter below for more details.
     */
    findingProviderFieldsSeverityOriginals?: outputs.InsightFiltersFindingProviderFieldsSeverityOriginal[];
    /**
     * One or more finding types that the finding provider assigned to the finding. Uses the format of `namespace/category/classifier` that classify a finding. Valid namespace values include: `Software and Configuration Checks`, `TTPs`, `Effects`, `Unusual Behaviors`, and `Sensitive Data Identifications`. See String Filter below for more details.
     */
    findingProviderFieldsTypes?: outputs.InsightFiltersFindingProviderFieldsType[];
    /**
     * An ISO8601-formatted timestamp that indicates when the security-findings provider first observed the potential security issue that a finding captured. See Date Filter below for more details.
     */
    firstObservedAts?: outputs.InsightFiltersFirstObservedAt[];
    /**
     * The identifier for the solution-specific component (a discrete unit of logic) that generated a finding. See String Filter below for more details.
     */
    generatorIds?: outputs.InsightFiltersGeneratorId[];
    /**
     * The security findings provider-specific identifier for a finding. See String Filter below for more details.
     */
    ids?: outputs.InsightFiltersId[];
    /**
     * A keyword for a finding. See Keyword Filter below for more details.
     */
    keywords?: outputs.InsightFiltersKeyword[];
    /**
     * An ISO8601-formatted timestamp that indicates when the security-findings provider most recently observed the potential security issue that a finding captured. See Date Filter below for more details.
     */
    lastObservedAts?: outputs.InsightFiltersLastObservedAt[];
    /**
     * The name of the malware that was observed. See String Filter below for more details.
     */
    malwareNames?: outputs.InsightFiltersMalwareName[];
    /**
     * The filesystem path of the malware that was observed. See String Filter below for more details.
     */
    malwarePaths?: outputs.InsightFiltersMalwarePath[];
    /**
     * The state of the malware that was observed. See String Filter below for more details.
     */
    malwareStates?: outputs.InsightFiltersMalwareState[];
    /**
     * The type of the malware that was observed. See String Filter below for more details.
     */
    malwareTypes?: outputs.InsightFiltersMalwareType[];
    /**
     * The destination domain of network-related information about a finding. See String Filter below for more details.
     */
    networkDestinationDomains?: outputs.InsightFiltersNetworkDestinationDomain[];
    /**
     * The destination IPv4 address of network-related information about a finding. See Ip Filter below for more details.
     */
    networkDestinationIpv4s?: outputs.InsightFiltersNetworkDestinationIpv4[];
    /**
     * The destination IPv6 address of network-related information about a finding. See Ip Filter below for more details.
     */
    networkDestinationIpv6s?: outputs.InsightFiltersNetworkDestinationIpv6[];
    /**
     * The destination port of network-related information about a finding. See Number Filter below for more details.
     */
    networkDestinationPorts?: outputs.InsightFiltersNetworkDestinationPort[];
    /**
     * Indicates the direction of network traffic associated with a finding. See String Filter below for more details.
     */
    networkDirections?: outputs.InsightFiltersNetworkDirection[];
    /**
     * The protocol of network-related information about a finding. See String Filter below for more details.
     */
    networkProtocols?: outputs.InsightFiltersNetworkProtocol[];
    /**
     * The source domain of network-related information about a finding. See String Filter below for more details.
     */
    networkSourceDomains?: outputs.InsightFiltersNetworkSourceDomain[];
    /**
     * The source IPv4 address of network-related information about a finding. See Ip Filter below for more details.
     */
    networkSourceIpv4s?: outputs.InsightFiltersNetworkSourceIpv4[];
    /**
     * The source IPv6 address of network-related information about a finding. See Ip Filter below for more details.
     */
    networkSourceIpv6s?: outputs.InsightFiltersNetworkSourceIpv6[];
    /**
     * The source media access control (MAC) address of network-related information about a finding. See String Filter below for more details.
     */
    networkSourceMacs?: outputs.InsightFiltersNetworkSourceMac[];
    /**
     * The source port of network-related information about a finding. See Number Filter below for more details.
     */
    networkSourcePorts?: outputs.InsightFiltersNetworkSourcePort[];
    /**
     * The text of a note. See String Filter below for more details.
     */
    noteTexts?: outputs.InsightFiltersNoteText[];
    /**
     * The timestamp of when the note was updated. See Date Filter below for more details.
     */
    noteUpdatedAts?: outputs.InsightFiltersNoteUpdatedAt[];
    /**
     * The principal that created a note. See String Filter below for more details.
     */
    noteUpdatedBies?: outputs.InsightFiltersNoteUpdatedBy[];
    /**
     * The date/time that the process was launched. See Date Filter below for more details.
     */
    processLaunchedAts?: outputs.InsightFiltersProcessLaunchedAt[];
    /**
     * The name of the process. See String Filter below for more details.
     */
    processNames?: outputs.InsightFiltersProcessName[];
    /**
     * The parent process ID. See Number Filter below for more details.
     */
    processParentPids?: outputs.InsightFiltersProcessParentPid[];
    /**
     * The path to the process executable. See String Filter below for more details.
     */
    processPaths?: outputs.InsightFiltersProcessPath[];
    /**
     * The process ID. See Number Filter below for more details.
     */
    processPids?: outputs.InsightFiltersProcessPid[];
    /**
     * The date/time that the process was terminated. See Date Filter below for more details.
     */
    processTerminatedAts?: outputs.InsightFiltersProcessTerminatedAt[];
    /**
     * The ARN generated by Security Hub that uniquely identifies a third-party company (security findings provider) after this provider's product (solution that generates findings) is registered with Security Hub. See String Filter below for more details.
     */
    productArns?: outputs.InsightFiltersProductArn[];
    /**
     * A data type where security-findings providers can include additional solution-specific details that aren't part of the defined `AwsSecurityFinding` format. See Map Filter below for more details.
     */
    productFields?: outputs.InsightFiltersProductField[];
    /**
     * The name of the solution (product) that generates findings. See String Filter below for more details.
     */
    productNames?: outputs.InsightFiltersProductName[];
    /**
     * The recommendation of what to do about the issue described in a finding. See String Filter below for more details.
     */
    recommendationTexts?: outputs.InsightFiltersRecommendationText[];
    /**
     * The updated record state for the finding. See String Filter below for more details.
     */
    recordStates?: outputs.InsightFiltersRecordState[];
    /**
     * The solution-generated identifier for a related finding. See String Filter below for more details.
     */
    relatedFindingsIds?: outputs.InsightFiltersRelatedFindingsId[];
    /**
     * The ARN of the solution that generated a related finding. See String Filter below for more details.
     */
    relatedFindingsProductArns?: outputs.InsightFiltersRelatedFindingsProductArn[];
    /**
     * The IAM profile ARN of the instance. See String Filter below for more details.
     */
    resourceAwsEc2InstanceIamInstanceProfileArns?: outputs.InsightFiltersResourceAwsEc2InstanceIamInstanceProfileArn[];
    /**
     * The Amazon Machine Image (AMI) ID of the instance. See String Filter below for more details.
     */
    resourceAwsEc2InstanceImageIds?: outputs.InsightFiltersResourceAwsEc2InstanceImageId[];
    /**
     * The IPv4 addresses associated with the instance. See Ip Filter below for more details.
     */
    resourceAwsEc2InstanceIpv4Addresses?: outputs.InsightFiltersResourceAwsEc2InstanceIpv4Address[];
    /**
     * The IPv6 addresses associated with the instance. See Ip Filter below for more details.
     */
    resourceAwsEc2InstanceIpv6Addresses?: outputs.InsightFiltersResourceAwsEc2InstanceIpv6Address[];
    /**
     * The key name associated with the instance. See String Filter below for more details.
     */
    resourceAwsEc2InstanceKeyNames?: outputs.InsightFiltersResourceAwsEc2InstanceKeyName[];
    /**
     * The date and time the instance was launched. See Date Filter below for more details.
     */
    resourceAwsEc2InstanceLaunchedAts?: outputs.InsightFiltersResourceAwsEc2InstanceLaunchedAt[];
    /**
     * The identifier of the subnet that the instance was launched in. See String Filter below for more details.
     */
    resourceAwsEc2InstanceSubnetIds?: outputs.InsightFiltersResourceAwsEc2InstanceSubnetId[];
    /**
     * The instance type of the instance. See String Filter below for more details.
     */
    resourceAwsEc2InstanceTypes?: outputs.InsightFiltersResourceAwsEc2InstanceType[];
    /**
     * The identifier of the VPC that the instance was launched in. See String Filter below for more details.
     */
    resourceAwsEc2InstanceVpcIds?: outputs.InsightFiltersResourceAwsEc2InstanceVpcId[];
    /**
     * The creation date/time of the IAM access key related to a finding. See Date Filter below for more details.
     */
    resourceAwsIamAccessKeyCreatedAts?: outputs.InsightFiltersResourceAwsIamAccessKeyCreatedAt[];
    /**
     * The status of the IAM access key related to a finding. See String Filter below for more details.
     */
    resourceAwsIamAccessKeyStatuses?: outputs.InsightFiltersResourceAwsIamAccessKeyStatus[];
    /**
     * The user associated with the IAM access key related to a finding. See String Filter below for more details.
     */
    resourceAwsIamAccessKeyUserNames?: outputs.InsightFiltersResourceAwsIamAccessKeyUserName[];
    /**
     * The canonical user ID of the owner of the S3 bucket. See String Filter below for more details.
     */
    resourceAwsS3BucketOwnerIds?: outputs.InsightFiltersResourceAwsS3BucketOwnerId[];
    /**
     * The display name of the owner of the S3 bucket. See String Filter below for more details.
     */
    resourceAwsS3BucketOwnerNames?: outputs.InsightFiltersResourceAwsS3BucketOwnerName[];
    /**
     * The identifier of the image related to a finding. See String Filter below for more details.
     */
    resourceContainerImageIds?: outputs.InsightFiltersResourceContainerImageId[];
    /**
     * The name of the image related to a finding. See String Filter below for more details.
     */
    resourceContainerImageNames?: outputs.InsightFiltersResourceContainerImageName[];
    /**
     * The date/time that the container was started. See Date Filter below for more details.
     */
    resourceContainerLaunchedAts?: outputs.InsightFiltersResourceContainerLaunchedAt[];
    /**
     * The name of the container related to a finding. See String Filter below for more details.
     */
    resourceContainerNames?: outputs.InsightFiltersResourceContainerName[];
    /**
     * The details of a resource that doesn't have a specific subfield for the resource type defined. See Map Filter below for more details.
     */
    resourceDetailsOthers?: outputs.InsightFiltersResourceDetailsOther[];
    /**
     * The canonical identifier for the given resource type. See String Filter below for more details.
     */
    resourceIds?: outputs.InsightFiltersResourceId[];
    /**
     * The canonical AWS partition name that the Region is assigned to. See String Filter below for more details.
     */
    resourcePartitions?: outputs.InsightFiltersResourcePartition[];
    /**
     * The canonical AWS external Region name where this resource is located. See String Filter below for more details.
     */
    resourceRegions?: outputs.InsightFiltersResourceRegion[];
    /**
     * A list of AWS tags associated with a resource at the time the finding was processed. See Map Filter below for more details.
     */
    resourceTags?: outputs.InsightFiltersResourceTag[];
    /**
     * Specifies the type of the resource that details are provided for. See String Filter below for more details.
     */
    resourceTypes?: outputs.InsightFiltersResourceType[];
    /**
     * The label of a finding's severity. See String Filter below for more details.
     */
    severityLabels?: outputs.InsightFiltersSeverityLabel[];
    /**
     * A URL that links to a page about the current finding in the security-findings provider's solution. See String Filter below for more details.
     */
    sourceUrls?: outputs.InsightFiltersSourceUrl[];
    /**
     * The category of a threat intelligence indicator. See String Filter below for more details.
     */
    threatIntelIndicatorCategories?: outputs.InsightFiltersThreatIntelIndicatorCategory[];
    /**
     * The date/time of the last observation of a threat intelligence indicator. See Date Filter below for more details.
     */
    threatIntelIndicatorLastObservedAts?: outputs.InsightFiltersThreatIntelIndicatorLastObservedAt[];
    /**
     * The URL for more details from the source of the threat intelligence. See String Filter below for more details.
     */
    threatIntelIndicatorSourceUrls?: outputs.InsightFiltersThreatIntelIndicatorSourceUrl[];
    /**
     * The source of the threat intelligence. See String Filter below for more details.
     */
    threatIntelIndicatorSources?: outputs.InsightFiltersThreatIntelIndicatorSource[];
    /**
     * The type of a threat intelligence indicator. See String Filter below for more details.
     */
    threatIntelIndicatorTypes?: outputs.InsightFiltersThreatIntelIndicatorType[];
    /**
     * The value of a threat intelligence indicator. See String Filter below for more details.
     */
    threatIntelIndicatorValues?: outputs.InsightFiltersThreatIntelIndicatorValue[];
    /**
     * A finding's title. See String Filter below for more details.
     */
    titles?: outputs.InsightFiltersTitle[];
    /**
     * A finding type in the format of `namespace/category/classifier` that classifies a finding. See String Filter below for more details.
     */
    types?: outputs.InsightFiltersType[];
    /**
     * An ISO8601-formatted timestamp that indicates when the security-findings provider last updated the finding record. See Date Filter below for more details.
     */
    updatedAts?: outputs.InsightFiltersUpdatedAt[];
    /**
     * A list of name/value string pairs associated with the finding. These are custom, user-defined fields added to a finding. See Map Filter below for more details.
     */
    userDefinedValues?: outputs.InsightFiltersUserDefinedValue[];
    /**
     * The veracity of a finding. See String Filter below for more details.
     */
    verificationStates?: outputs.InsightFiltersVerificationState[];
    /**
     * The status of the investigation into a finding. See Workflow Status Filter below for more details.
     */
    workflowStatuses?: outputs.InsightFiltersWorkflowStatus[];
}
export interface InsightFiltersAwsAccountId {
    comparison: string;
    value: string;
}
export interface InsightFiltersCompanyName {
    comparison: string;
    value: string;
}
export interface InsightFiltersComplianceStatus {
    comparison: string;
    value: string;
}
export interface InsightFiltersConfidence {
    eq?: string;
    gte?: string;
    lte?: string;
}
export interface InsightFiltersCreatedAt {
    dateRange?: outputs.InsightFiltersCreatedAtDateRange;
    end?: string;
    start?: string;
}
export interface InsightFiltersCreatedAtDateRange {
    /**
     * A date range unit for the date filter. Valid values: `DAYS`.
     */
    unit: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: number;
}
export interface InsightFiltersCriticality {
    eq?: string;
    gte?: string;
    lte?: string;
}
export interface InsightFiltersDescription {
    comparison: string;
    value: string;
}
export interface InsightFiltersFindingProviderFieldsConfidence {
    eq?: string;
    gte?: string;
    lte?: string;
}
export interface InsightFiltersFindingProviderFieldsCriticality {
    eq?: string;
    gte?: string;
    lte?: string;
}
export interface InsightFiltersFindingProviderFieldsRelatedFindingsId {
    comparison: string;
    value: string;
}
export interface InsightFiltersFindingProviderFieldsRelatedFindingsProductArn {
    comparison: string;
    value: string;
}
export interface InsightFiltersFindingProviderFieldsSeverityLabel {
    comparison: string;
    value: string;
}
export interface InsightFiltersFindingProviderFieldsSeverityOriginal {
    comparison: string;
    value: string;
}
export interface InsightFiltersFindingProviderFieldsType {
    comparison: string;
    value: string;
}
export interface InsightFiltersFirstObservedAt {
    dateRange?: outputs.InsightFiltersFirstObservedAtDateRange;
    end?: string;
    start?: string;
}
export interface InsightFiltersFirstObservedAtDateRange {
    /**
     * A date range unit for the date filter. Valid values: `DAYS`.
     */
    unit: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: number;
}
export interface InsightFiltersGeneratorId {
    comparison: string;
    value: string;
}
export interface InsightFiltersId {
    comparison: string;
    value: string;
}
export interface InsightFiltersKeyword {
    /**
     * A value for the keyword.
     */
    value: string;
}
export interface InsightFiltersLastObservedAt {
    dateRange?: outputs.InsightFiltersLastObservedAtDateRange;
    end?: string;
    start?: string;
}
export interface InsightFiltersLastObservedAtDateRange {
    /**
     * A date range unit for the date filter. Valid values: `DAYS`.
     */
    unit: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: number;
}
export interface InsightFiltersMalwareName {
    comparison: string;
    value: string;
}
export interface InsightFiltersMalwarePath {
    comparison: string;
    value: string;
}
export interface InsightFiltersMalwareState {
    comparison: string;
    value: string;
}
export interface InsightFiltersMalwareType {
    comparison: string;
    value: string;
}
export interface InsightFiltersNetworkDestinationDomain {
    comparison: string;
    value: string;
}
export interface InsightFiltersNetworkDestinationIpv4 {
    cidr: string;
}
export interface InsightFiltersNetworkDestinationIpv6 {
    cidr: string;
}
export interface InsightFiltersNetworkDestinationPort {
    eq?: string;
    gte?: string;
    lte?: string;
}
export interface InsightFiltersNetworkDirection {
    comparison: string;
    value: string;
}
export interface InsightFiltersNetworkProtocol {
    comparison: string;
    value: string;
}
export interface InsightFiltersNetworkSourceDomain {
    comparison: string;
    value: string;
}
export interface InsightFiltersNetworkSourceIpv4 {
    cidr: string;
}
export interface InsightFiltersNetworkSourceIpv6 {
    cidr: string;
}
export interface InsightFiltersNetworkSourceMac {
    comparison: string;
    value: string;
}
export interface InsightFiltersNetworkSourcePort {
    eq?: string;
    gte?: string;
    lte?: string;
}
export interface InsightFiltersNoteText {
    comparison: string;
    value: string;
}
export interface InsightFiltersNoteUpdatedAt {
    dateRange?: outputs.InsightFiltersNoteUpdatedAtDateRange;
    end?: string;
    start?: string;
}
export interface InsightFiltersNoteUpdatedAtDateRange {
    /**
     * A date range unit for the date filter. Valid values: `DAYS`.
     */
    unit: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: number;
}
export interface InsightFiltersNoteUpdatedBy {
    comparison: string;
    value: string;
}
export interface InsightFiltersProcessLaunchedAt {
    dateRange?: outputs.InsightFiltersProcessLaunchedAtDateRange;
    end?: string;
    start?: string;
}
export interface InsightFiltersProcessLaunchedAtDateRange {
    /**
     * A date range unit for the date filter. Valid values: `DAYS`.
     */
    unit: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: number;
}
export interface InsightFiltersProcessName {
    comparison: string;
    value: string;
}
export interface InsightFiltersProcessParentPid {
    eq?: string;
    gte?: string;
    lte?: string;
}
export interface InsightFiltersProcessPath {
    comparison: string;
    value: string;
}
export interface InsightFiltersProcessPid {
    eq?: string;
    gte?: string;
    lte?: string;
}
export interface InsightFiltersProcessTerminatedAt {
    dateRange?: outputs.InsightFiltersProcessTerminatedAtDateRange;
    end?: string;
    start?: string;
}
export interface InsightFiltersProcessTerminatedAtDateRange {
    /**
     * A date range unit for the date filter. Valid values: `DAYS`.
     */
    unit: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: number;
}
export interface InsightFiltersProductArn {
    comparison: string;
    value: string;
}
export interface InsightFiltersProductField {
    comparison: string;
    key: string;
    value: string;
}
export interface InsightFiltersProductName {
    comparison: string;
    value: string;
}
export interface InsightFiltersRecommendationText {
    comparison: string;
    value: string;
}
export interface InsightFiltersRecordState {
    comparison: string;
    value: string;
}
export interface InsightFiltersRelatedFindingsId {
    comparison: string;
    value: string;
}
export interface InsightFiltersRelatedFindingsProductArn {
    comparison: string;
    value: string;
}
export interface InsightFiltersResourceAwsEc2InstanceIamInstanceProfileArn {
    comparison: string;
    value: string;
}
export interface InsightFiltersResourceAwsEc2InstanceImageId {
    comparison: string;
    value: string;
}
export interface InsightFiltersResourceAwsEc2InstanceIpv4Address {
    cidr: string;
}
export interface InsightFiltersResourceAwsEc2InstanceIpv6Address {
    cidr: string;
}
export interface InsightFiltersResourceAwsEc2InstanceKeyName {
    comparison: string;
    value: string;
}
export interface InsightFiltersResourceAwsEc2InstanceLaunchedAt {
    dateRange?: outputs.InsightFiltersResourceAwsEc2InstanceLaunchedAtDateRange;
    end?: string;
    start?: string;
}
export interface InsightFiltersResourceAwsEc2InstanceLaunchedAtDateRange {
    /**
     * A date range unit for the date filter. Valid values: `DAYS`.
     */
    unit: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: number;
}
export interface InsightFiltersResourceAwsEc2InstanceSubnetId {
    comparison: string;
    value: string;
}
export interface InsightFiltersResourceAwsEc2InstanceType {
    comparison: string;
    value: string;
}
export interface InsightFiltersResourceAwsEc2InstanceVpcId {
    comparison: string;
    value: string;
}
export interface InsightFiltersResourceAwsIamAccessKeyCreatedAt {
    dateRange?: outputs.InsightFiltersResourceAwsIamAccessKeyCreatedAtDateRange;
    end?: string;
    start?: string;
}
export interface InsightFiltersResourceAwsIamAccessKeyCreatedAtDateRange {
    /**
     * A date range unit for the date filter. Valid values: `DAYS`.
     */
    unit: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: number;
}
export interface InsightFiltersResourceAwsIamAccessKeyStatus {
    comparison: string;
    value: string;
}
export interface InsightFiltersResourceAwsIamAccessKeyUserName {
    comparison: string;
    value: string;
}
export interface InsightFiltersResourceAwsS3BucketOwnerId {
    comparison: string;
    value: string;
}
export interface InsightFiltersResourceAwsS3BucketOwnerName {
    comparison: string;
    value: string;
}
export interface InsightFiltersResourceContainerImageId {
    comparison: string;
    value: string;
}
export interface InsightFiltersResourceContainerImageName {
    comparison: string;
    value: string;
}
export interface InsightFiltersResourceContainerLaunchedAt {
    dateRange?: outputs.InsightFiltersResourceContainerLaunchedAtDateRange;
    end?: string;
    start?: string;
}
export interface InsightFiltersResourceContainerLaunchedAtDateRange {
    /**
     * A date range unit for the date filter. Valid values: `DAYS`.
     */
    unit: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: number;
}
export interface InsightFiltersResourceContainerName {
    comparison: string;
    value: string;
}
export interface InsightFiltersResourceDetailsOther {
    comparison: string;
    key: string;
    value: string;
}
export interface InsightFiltersResourceId {
    comparison: string;
    value: string;
}
export interface InsightFiltersResourcePartition {
    comparison: string;
    value: string;
}
export interface InsightFiltersResourceRegion {
    comparison: string;
    value: string;
}
export interface InsightFiltersResourceTag {
    comparison: string;
    key: string;
    value: string;
}
export interface InsightFiltersResourceType {
    comparison: string;
    value: string;
}
export interface InsightFiltersSeverityLabel {
    comparison: string;
    value: string;
}
export interface InsightFiltersSourceUrl {
    comparison: string;
    value: string;
}
export interface InsightFiltersThreatIntelIndicatorCategory {
    comparison: string;
    value: string;
}
export interface InsightFiltersThreatIntelIndicatorLastObservedAt {
    dateRange?: outputs.InsightFiltersThreatIntelIndicatorLastObservedAtDateRange;
    end?: string;
    start?: string;
}
export interface InsightFiltersThreatIntelIndicatorLastObservedAtDateRange {
    /**
     * A date range unit for the date filter. Valid values: `DAYS`.
     */
    unit: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: number;
}
export interface InsightFiltersThreatIntelIndicatorSource {
    comparison: string;
    value: string;
}
export interface InsightFiltersThreatIntelIndicatorSourceUrl {
    comparison: string;
    value: string;
}
export interface InsightFiltersThreatIntelIndicatorType {
    comparison: string;
    value: string;
}
export interface InsightFiltersThreatIntelIndicatorValue {
    comparison: string;
    value: string;
}
export interface InsightFiltersTitle {
    comparison: string;
    value: string;
}
export interface InsightFiltersType {
    comparison: string;
    value: string;
}
export interface InsightFiltersUpdatedAt {
    dateRange?: outputs.InsightFiltersUpdatedAtDateRange;
    end?: string;
    start?: string;
}
export interface InsightFiltersUpdatedAtDateRange {
    /**
     * A date range unit for the date filter. Valid values: `DAYS`.
     */
    unit: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: number;
}
export interface InsightFiltersUserDefinedValue {
    comparison: string;
    key: string;
    value: string;
}
export interface InsightFiltersVerificationState {
    comparison: string;
    value: string;
}
export interface InsightFiltersWorkflowStatus {
    comparison: string;
    value: string;
}
export interface OrganizationConfigurationOrganizationConfiguration {
    /**
     * Indicates whether the organization uses local or central configuration. If using central configuration, `autoEnable` must be set to `false` and `autoEnableStandards` set to `NONE`. More information can be found in the [documentation for central configuration](https://docs.aws.amazon.com/securityhub/latest/userguide/central-configuration-intro.html). Valid values: `LOCAL`, `CENTRAL`.
     */
    configurationType: string;
}
