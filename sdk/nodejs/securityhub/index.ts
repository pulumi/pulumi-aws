// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AccountArgs, AccountState } from "./account";
export type Account = import("./account").Account;
export const Account: typeof import("./account").Account = null as any;

export { ActionTargetArgs, ActionTargetState } from "./actionTarget";
export type ActionTarget = import("./actionTarget").ActionTarget;
export const ActionTarget: typeof import("./actionTarget").ActionTarget = null as any;

export { FindingAggregatorArgs, FindingAggregatorState } from "./findingAggregator";
export type FindingAggregator = import("./findingAggregator").FindingAggregator;
export const FindingAggregator: typeof import("./findingAggregator").FindingAggregator = null as any;

export { InsightArgs, InsightState } from "./insight";
export type Insight = import("./insight").Insight;
export const Insight: typeof import("./insight").Insight = null as any;

export { InviteAccepterArgs, InviteAccepterState } from "./inviteAccepter";
export type InviteAccepter = import("./inviteAccepter").InviteAccepter;
export const InviteAccepter: typeof import("./inviteAccepter").InviteAccepter = null as any;

export { MemberArgs, MemberState } from "./member";
export type Member = import("./member").Member;
export const Member: typeof import("./member").Member = null as any;

export { OrganizationAdminAccountArgs, OrganizationAdminAccountState } from "./organizationAdminAccount";
export type OrganizationAdminAccount = import("./organizationAdminAccount").OrganizationAdminAccount;
export const OrganizationAdminAccount: typeof import("./organizationAdminAccount").OrganizationAdminAccount = null as any;

export { OrganizationConfigurationArgs, OrganizationConfigurationState } from "./organizationConfiguration";
export type OrganizationConfiguration = import("./organizationConfiguration").OrganizationConfiguration;
export const OrganizationConfiguration: typeof import("./organizationConfiguration").OrganizationConfiguration = null as any;

export { ProductSubscriptionArgs, ProductSubscriptionState } from "./productSubscription";
export type ProductSubscription = import("./productSubscription").ProductSubscription;
export const ProductSubscription: typeof import("./productSubscription").ProductSubscription = null as any;

export { StandardsControlArgs, StandardsControlState } from "./standardsControl";
export type StandardsControl = import("./standardsControl").StandardsControl;
export const StandardsControl: typeof import("./standardsControl").StandardsControl = null as any;

export { StandardsSubscriptionArgs, StandardsSubscriptionState } from "./standardsSubscription";
export type StandardsSubscription = import("./standardsSubscription").StandardsSubscription;
export const StandardsSubscription: typeof import("./standardsSubscription").StandardsSubscription = null as any;

utilities.lazyLoad(exports, ["Account"], () => require("./account"));
utilities.lazyLoad(exports, ["ActionTarget"], () => require("./actionTarget"));
utilities.lazyLoad(exports, ["FindingAggregator"], () => require("./findingAggregator"));
utilities.lazyLoad(exports, ["Insight"], () => require("./insight"));
utilities.lazyLoad(exports, ["InviteAccepter"], () => require("./inviteAccepter"));
utilities.lazyLoad(exports, ["Member"], () => require("./member"));
utilities.lazyLoad(exports, ["OrganizationAdminAccount"], () => require("./organizationAdminAccount"));
utilities.lazyLoad(exports, ["OrganizationConfiguration"], () => require("./organizationConfiguration"));
utilities.lazyLoad(exports, ["ProductSubscription"], () => require("./productSubscription"));
utilities.lazyLoad(exports, ["StandardsControl"], () => require("./standardsControl"));
utilities.lazyLoad(exports, ["StandardsSubscription"], () => require("./standardsSubscription"));

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws:securityhub/account:Account":
                return new Account(name, <any>undefined, { urn })
            case "aws:securityhub/actionTarget:ActionTarget":
                return new ActionTarget(name, <any>undefined, { urn })
            case "aws:securityhub/findingAggregator:FindingAggregator":
                return new FindingAggregator(name, <any>undefined, { urn })
            case "aws:securityhub/insight:Insight":
                return new Insight(name, <any>undefined, { urn })
            case "aws:securityhub/inviteAccepter:InviteAccepter":
                return new InviteAccepter(name, <any>undefined, { urn })
            case "aws:securityhub/member:Member":
                return new Member(name, <any>undefined, { urn })
            case "aws:securityhub/organizationAdminAccount:OrganizationAdminAccount":
                return new OrganizationAdminAccount(name, <any>undefined, { urn })
            case "aws:securityhub/organizationConfiguration:OrganizationConfiguration":
                return new OrganizationConfiguration(name, <any>undefined, { urn })
            case "aws:securityhub/productSubscription:ProductSubscription":
                return new ProductSubscription(name, <any>undefined, { urn })
            case "aws:securityhub/standardsControl:StandardsControl":
                return new StandardsControl(name, <any>undefined, { urn })
            case "aws:securityhub/standardsSubscription:StandardsSubscription":
                return new StandardsSubscription(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "securityhub/account", _module)
pulumi.runtime.registerResourceModule("aws", "securityhub/actionTarget", _module)
pulumi.runtime.registerResourceModule("aws", "securityhub/findingAggregator", _module)
pulumi.runtime.registerResourceModule("aws", "securityhub/insight", _module)
pulumi.runtime.registerResourceModule("aws", "securityhub/inviteAccepter", _module)
pulumi.runtime.registerResourceModule("aws", "securityhub/member", _module)
pulumi.runtime.registerResourceModule("aws", "securityhub/organizationAdminAccount", _module)
pulumi.runtime.registerResourceModule("aws", "securityhub/organizationConfiguration", _module)
pulumi.runtime.registerResourceModule("aws", "securityhub/productSubscription", _module)
pulumi.runtime.registerResourceModule("aws", "securityhub/standardsControl", _module)
pulumi.runtime.registerResourceModule("aws", "securityhub/standardsSubscription", _module)
