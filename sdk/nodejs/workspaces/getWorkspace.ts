// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getWorkspace(args?: GetWorkspaceArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkspaceResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:workspaces/getWorkspace:getWorkspace", {
        "directoryId": args.directoryId,
        "tags": args.tags,
        "userName": args.userName,
        "workspaceId": args.workspaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getWorkspace.
 */
export interface GetWorkspaceArgs {
    directoryId?: string;
    tags?: {[key: string]: string};
    userName?: string;
    workspaceId?: string;
}

/**
 * A collection of values returned by getWorkspace.
 */
export interface GetWorkspaceResult {
    readonly bundleId: string;
    readonly computerName: string;
    readonly directoryId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ipAddress: string;
    readonly rootVolumeEncryptionEnabled: boolean;
    readonly state: string;
    readonly tags: {[key: string]: string};
    readonly userName: string;
    readonly userVolumeEncryptionEnabled: boolean;
    readonly volumeEncryptionKey: string;
    readonly workspaceId: string;
    readonly workspaceProperties: outputs.workspaces.GetWorkspaceWorkspaceProperty[];
}
export function getWorkspaceOutput(args?: GetWorkspaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkspaceResult> {
    return pulumi.output(args).apply((a: any) => getWorkspace(a, opts))
}

/**
 * A collection of arguments for invoking getWorkspace.
 */
export interface GetWorkspaceOutputArgs {
    directoryId?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    userName?: pulumi.Input<string>;
    workspaceId?: pulumi.Input<string>;
}
