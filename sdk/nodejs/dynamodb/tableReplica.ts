// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a DynamoDB table replica resource for [DynamoDB Global Tables V2 (version 2019.11.21)](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V2.html).
 *
 * > **Note:** Use `lifecycle` `ignoreChanges` for `replica` in the associated aws.dynamodb.Table configuration.
 *
 * > **Note:** Do not use the `replica` configuration block of aws.dynamodb.Table together with this resource as the two configuration options are mutually exclusive.
 *
 * ## Example Usage
 * ### Basic Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const main = new aws.Provider("main", {region: "us-west-2"});
 * const alt = new aws.Provider("alt", {region: "us-east-2"});
 * const exampleTable = new aws.dynamodb.Table("exampleTable", {
 *     hashKey: "BrodoBaggins",
 *     billingMode: "PAY_PER_REQUEST",
 *     streamEnabled: true,
 *     streamViewType: "NEW_AND_OLD_IMAGES",
 *     attributes: [{
 *         name: "BrodoBaggins",
 *         type: "S",
 *     }],
 * }, {
 *     provider: aws.main,
 * });
 * const exampleTableReplica = new aws.dynamodb.TableReplica("exampleTableReplica", {
 *     globalTableArn: exampleTable.arn,
 *     tags: {
 *         Name: "IZPAWS",
 *         Pozo: "Amargo",
 *     },
 * }, {
 *     provider: aws.alt,
 * });
 * ```
 *
 * ## Import
 *
 * terraform import {
 *
 *  to = aws_dynamodb_table_replica.example
 *
 *  id = "TestTable:us-west-2" } Using `pulumi import`, import DynamoDB table replicas using the `table-name:main-region`. For exampleconsole % pulumi import aws_dynamodb_table_replica.example TestTable:us-west-2
 */
export class TableReplica extends pulumi.CustomResource {
    /**
     * Get an existing TableReplica resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TableReplicaState, opts?: pulumi.CustomResourceOptions): TableReplica {
        return new TableReplica(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:dynamodb/tableReplica:TableReplica';

    /**
     * Returns true if the given object is an instance of TableReplica.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TableReplica {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TableReplica.__pulumiType;
    }

    /**
     * ARN of the table replica.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * ARN of the _main_ or global table which this resource will replicate.
     *
     * Optional arguments:
     */
    public readonly globalTableArn!: pulumi.Output<string>;
    /**
     * ARN of the CMK that should be used for the AWS KMS encryption. This argument should only be used if the key is different from the default KMS-managed DynamoDB key, `alias/aws/dynamodb`. **Note:** This attribute will _not_ be populated with the ARN of _default_ keys.
     */
    public readonly kmsKeyArn!: pulumi.Output<string>;
    /**
     * Whether to enable Point In Time Recovery for the replica. Default is `false`.
     */
    public readonly pointInTimeRecovery!: pulumi.Output<boolean | undefined>;
    /**
     * Storage class of the table replica. Valid values are `STANDARD` and `STANDARD_INFREQUENT_ACCESS`. If not used, the table replica will use the same class as the global table.
     */
    public readonly tableClassOverride!: pulumi.Output<string | undefined>;
    /**
     * Map of tags to populate on the created table. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a TableReplica resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TableReplicaArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TableReplicaArgs | TableReplicaState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TableReplicaState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["globalTableArn"] = state ? state.globalTableArn : undefined;
            resourceInputs["kmsKeyArn"] = state ? state.kmsKeyArn : undefined;
            resourceInputs["pointInTimeRecovery"] = state ? state.pointInTimeRecovery : undefined;
            resourceInputs["tableClassOverride"] = state ? state.tableClassOverride : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
        } else {
            const args = argsOrState as TableReplicaArgs | undefined;
            if ((!args || args.globalTableArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'globalTableArn'");
            }
            resourceInputs["globalTableArn"] = args ? args.globalTableArn : undefined;
            resourceInputs["kmsKeyArn"] = args ? args.kmsKeyArn : undefined;
            resourceInputs["pointInTimeRecovery"] = args ? args.pointInTimeRecovery : undefined;
            resourceInputs["tableClassOverride"] = args ? args.tableClassOverride : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TableReplica.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TableReplica resources.
 */
export interface TableReplicaState {
    /**
     * ARN of the table replica.
     */
    arn?: pulumi.Input<string>;
    /**
     * ARN of the _main_ or global table which this resource will replicate.
     *
     * Optional arguments:
     */
    globalTableArn?: pulumi.Input<string>;
    /**
     * ARN of the CMK that should be used for the AWS KMS encryption. This argument should only be used if the key is different from the default KMS-managed DynamoDB key, `alias/aws/dynamodb`. **Note:** This attribute will _not_ be populated with the ARN of _default_ keys.
     */
    kmsKeyArn?: pulumi.Input<string>;
    /**
     * Whether to enable Point In Time Recovery for the replica. Default is `false`.
     */
    pointInTimeRecovery?: pulumi.Input<boolean>;
    /**
     * Storage class of the table replica. Valid values are `STANDARD` and `STANDARD_INFREQUENT_ACCESS`. If not used, the table replica will use the same class as the global table.
     */
    tableClassOverride?: pulumi.Input<string>;
    /**
     * Map of tags to populate on the created table. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a TableReplica resource.
 */
export interface TableReplicaArgs {
    /**
     * ARN of the _main_ or global table which this resource will replicate.
     *
     * Optional arguments:
     */
    globalTableArn: pulumi.Input<string>;
    /**
     * ARN of the CMK that should be used for the AWS KMS encryption. This argument should only be used if the key is different from the default KMS-managed DynamoDB key, `alias/aws/dynamodb`. **Note:** This attribute will _not_ be populated with the ARN of _default_ keys.
     */
    kmsKeyArn?: pulumi.Input<string>;
    /**
     * Whether to enable Point In Time Recovery for the replica. Default is `false`.
     */
    pointInTimeRecovery?: pulumi.Input<boolean>;
    /**
     * Storage class of the table replica. Valid values are `STANDARD` and `STANDARD_INFREQUENT_ACCESS`. If not used, the table replica will use the same class as the global table.
     */
    tableClassOverride?: pulumi.Input<string>;
    /**
     * Map of tags to populate on the created table. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
