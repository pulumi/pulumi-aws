// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Enables a [Kinesis streaming destination](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/kds.html) for data replication of a DynamoDB table.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleTable = new aws.dynamodb.Table("exampleTable", {
 *     hashKey: "id",
 *     attributes: [{
 *         name: "id",
 *         type: "S",
 *     }],
 * });
 * const exampleStream = new aws.kinesis.Stream("exampleStream", {shardCount: 1});
 * const exampleKinesisStreamingDestination = new aws.dynamodb.KinesisStreamingDestination("exampleKinesisStreamingDestination", {
 *     streamArn: exampleStream.arn,
 *     tableName: exampleTable.name,
 * });
 * ```
 *
 * ## Import
 *
 * DynamoDB Kinesis Streaming Destinations can be imported using the `table_name` and `stream_arn` separated by `,`, e.g.
 *
 * ```sh
 *  $ pulumi import aws:dynamodb/kinesisStreamingDestination:KinesisStreamingDestination example example,arn:aws:kinesis:us-east-1:111122223333:exampleStreamName
 * ```
 */
export class KinesisStreamingDestination extends pulumi.CustomResource {
    /**
     * Get an existing KinesisStreamingDestination resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KinesisStreamingDestinationState, opts?: pulumi.CustomResourceOptions): KinesisStreamingDestination {
        return new KinesisStreamingDestination(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:dynamodb/kinesisStreamingDestination:KinesisStreamingDestination';

    /**
     * Returns true if the given object is an instance of KinesisStreamingDestination.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KinesisStreamingDestination {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KinesisStreamingDestination.__pulumiType;
    }

    /**
     * The ARN for a Kinesis data stream. This must exist in the same account and region as the DynamoDB table.
     */
    public readonly streamArn!: pulumi.Output<string>;
    /**
     * The name of the DynamoDB table. There
     * can only be one Kinesis streaming destination for a given DynamoDB table.
     */
    public readonly tableName!: pulumi.Output<string>;

    /**
     * Create a KinesisStreamingDestination resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KinesisStreamingDestinationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KinesisStreamingDestinationArgs | KinesisStreamingDestinationState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as KinesisStreamingDestinationState | undefined;
            inputs["streamArn"] = state ? state.streamArn : undefined;
            inputs["tableName"] = state ? state.tableName : undefined;
        } else {
            const args = argsOrState as KinesisStreamingDestinationArgs | undefined;
            if ((!args || args.streamArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'streamArn'");
            }
            if ((!args || args.tableName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tableName'");
            }
            inputs["streamArn"] = args ? args.streamArn : undefined;
            inputs["tableName"] = args ? args.tableName : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(KinesisStreamingDestination.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering KinesisStreamingDestination resources.
 */
export interface KinesisStreamingDestinationState {
    /**
     * The ARN for a Kinesis data stream. This must exist in the same account and region as the DynamoDB table.
     */
    streamArn?: pulumi.Input<string>;
    /**
     * The name of the DynamoDB table. There
     * can only be one Kinesis streaming destination for a given DynamoDB table.
     */
    tableName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a KinesisStreamingDestination resource.
 */
export interface KinesisStreamingDestinationArgs {
    /**
     * The ARN for a Kinesis data stream. This must exist in the same account and region as the DynamoDB table.
     */
    streamArn: pulumi.Input<string>;
    /**
     * The name of the DynamoDB table. There
     * can only be one Kinesis streaming destination for a given DynamoDB table.
     */
    tableName: pulumi.Input<string>;
}
