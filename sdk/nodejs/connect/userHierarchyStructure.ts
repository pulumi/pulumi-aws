// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Provides an Amazon Connect User Hierarchy Structure resource. For more information see
 * [Amazon Connect: Getting Started](https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-get-started.html)
 *
 * ## Example Usage
 * ### Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.connect.UserHierarchyStructure("example", {
 *     hierarchyStructure: {
 *         levelOne: {
 *             name: "levelone",
 *         },
 *     },
 *     instanceId: "aaaaaaaa-bbbb-cccc-dddd-111111111111",
 * });
 * ```
 * ### With Five Levels
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.connect.UserHierarchyStructure("example", {
 *     hierarchyStructure: {
 *         levelFive: {
 *             name: "levelfive",
 *         },
 *         levelFour: {
 *             name: "levelfour",
 *         },
 *         levelOne: {
 *             name: "levelone",
 *         },
 *         levelThree: {
 *             name: "levelthree",
 *         },
 *         levelTwo: {
 *             name: "leveltwo",
 *         },
 *     },
 *     instanceId: "aaaaaaaa-bbbb-cccc-dddd-111111111111",
 * });
 * ```
 *
 * ## Import
 *
 * terraform import {
 *
 *  to = aws_connect_user_hierarchy_structure.example
 *
 *  id = "f1288a1f-6193-445a-b47e-af739b2" } Using `pulumi import`, import Amazon Connect User Hierarchy Structures using the `instance_id`. For exampleconsole % pulumi import aws_connect_user_hierarchy_structure.example f1288a1f-6193-445a-b47e-af739b2
 */
export class UserHierarchyStructure extends pulumi.CustomResource {
    /**
     * Get an existing UserHierarchyStructure resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserHierarchyStructureState, opts?: pulumi.CustomResourceOptions): UserHierarchyStructure {
        return new UserHierarchyStructure(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:connect/userHierarchyStructure:UserHierarchyStructure';

    /**
     * Returns true if the given object is an instance of UserHierarchyStructure.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is UserHierarchyStructure {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UserHierarchyStructure.__pulumiType;
    }

    /**
     * A block that defines the hierarchy structure's levels. The `hierarchyStructure` block is documented below.
     */
    public readonly hierarchyStructure!: pulumi.Output<outputs.connect.UserHierarchyStructureHierarchyStructure>;
    /**
     * Specifies the identifier of the hosting Amazon Connect Instance.
     */
    public readonly instanceId!: pulumi.Output<string>;

    /**
     * Create a UserHierarchyStructure resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserHierarchyStructureArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UserHierarchyStructureArgs | UserHierarchyStructureState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UserHierarchyStructureState | undefined;
            resourceInputs["hierarchyStructure"] = state ? state.hierarchyStructure : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
        } else {
            const args = argsOrState as UserHierarchyStructureArgs | undefined;
            if ((!args || args.hierarchyStructure === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hierarchyStructure'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            resourceInputs["hierarchyStructure"] = args ? args.hierarchyStructure : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(UserHierarchyStructure.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering UserHierarchyStructure resources.
 */
export interface UserHierarchyStructureState {
    /**
     * A block that defines the hierarchy structure's levels. The `hierarchyStructure` block is documented below.
     */
    hierarchyStructure?: pulumi.Input<inputs.connect.UserHierarchyStructureHierarchyStructure>;
    /**
     * Specifies the identifier of the hosting Amazon Connect Instance.
     */
    instanceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a UserHierarchyStructure resource.
 */
export interface UserHierarchyStructureArgs {
    /**
     * A block that defines the hierarchy structure's levels. The `hierarchyStructure` block is documented below.
     */
    hierarchyStructure: pulumi.Input<inputs.connect.UserHierarchyStructureHierarchyStructure>;
    /**
     * Specifies the identifier of the hosting Amazon Connect Instance.
     */
    instanceId: pulumi.Input<string>;
}
