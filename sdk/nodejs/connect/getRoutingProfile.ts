// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getRoutingProfile(args: GetRoutingProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetRoutingProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:connect/getRoutingProfile:getRoutingProfile", {
        "instanceId": args.instanceId,
        "name": args.name,
        "routingProfileId": args.routingProfileId,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getRoutingProfile.
 */
export interface GetRoutingProfileArgs {
    instanceId: string;
    name?: string;
    routingProfileId?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getRoutingProfile.
 */
export interface GetRoutingProfileResult {
    readonly arn: string;
    readonly defaultOutboundQueueId: string;
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId: string;
    readonly mediaConcurrencies: outputs.connect.GetRoutingProfileMediaConcurrency[];
    readonly name: string;
    readonly queueConfigs: outputs.connect.GetRoutingProfileQueueConfig[];
    readonly routingProfileId: string;
    readonly tags: {[key: string]: string};
}
export function getRoutingProfileOutput(args: GetRoutingProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRoutingProfileResult> {
    return pulumi.output(args).apply((a: any) => getRoutingProfile(a, opts))
}

/**
 * A collection of arguments for invoking getRoutingProfile.
 */
export interface GetRoutingProfileOutputArgs {
    instanceId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    routingProfileId?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
