// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Provides details about a specific Amazon Connect Routing Profile.
 *
 * ## Example Usage
 *
 * By `name`
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = pulumi.output(aws.connect.getRoutingProfile({
 *     instanceId: "aaaaaaaa-bbbb-cccc-dddd-111111111111",
 *     name: "Example",
 * }));
 * ```
 *
 * By `routingProfileId`
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = pulumi.output(aws.connect.getRoutingProfile({
 *     instanceId: "aaaaaaaa-bbbb-cccc-dddd-111111111111",
 *     routingProfileId: "cccccccc-bbbb-cccc-dddd-111111111111",
 * }));
 * ```
 */
export function getRoutingProfile(args: GetRoutingProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetRoutingProfileResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws:connect/getRoutingProfile:getRoutingProfile", {
        "instanceId": args.instanceId,
        "name": args.name,
        "routingProfileId": args.routingProfileId,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getRoutingProfile.
 */
export interface GetRoutingProfileArgs {
    /**
     * Reference to the hosting Amazon Connect Instance
     */
    instanceId: string;
    /**
     * Returns information on a specific Routing Profile by name
     */
    name?: string;
    /**
     * Returns information on a specific Routing Profile by Routing Profile id
     */
    routingProfileId?: string;
    /**
     * A map of tags to assign to the Routing Profile.
     */
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getRoutingProfile.
 */
export interface GetRoutingProfileResult {
    /**
     * The Amazon Resource Name (ARN) of the Routing Profile.
     */
    readonly arn: string;
    /**
     * Specifies the default outbound queue for the Routing Profile.
     */
    readonly defaultOutboundQueueId: string;
    /**
     * Specifies the description of the Routing Profile.
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId: string;
    /**
     * One or more `mediaConcurrencies` blocks that specify the channels that agents can handle in the Contact Control Panel (CCP) for this Routing Profile. The `mediaConcurrencies` block is documented below.
     */
    readonly mediaConcurrencies: outputs.connect.GetRoutingProfileMediaConcurrency[];
    readonly name: string;
    /**
     * One or more `queueConfigs` blocks that specify the inbound queues associated with the routing profile. If no queue is added, the agent only can make outbound calls. The `queueConfigs` block is documented below.
     */
    readonly queueConfigs: outputs.connect.GetRoutingProfileQueueConfig[];
    readonly routingProfileId: string;
    /**
     * A map of tags to assign to the Routing Profile.
     */
    readonly tags: {[key: string]: string};
}

export function getRoutingProfileOutput(args: GetRoutingProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRoutingProfileResult> {
    return pulumi.output(args).apply(a => getRoutingProfile(a, opts))
}

/**
 * A collection of arguments for invoking getRoutingProfile.
 */
export interface GetRoutingProfileOutputArgs {
    /**
     * Reference to the hosting Amazon Connect Instance
     */
    instanceId: pulumi.Input<string>;
    /**
     * Returns information on a specific Routing Profile by name
     */
    name?: pulumi.Input<string>;
    /**
     * Returns information on a specific Routing Profile by Routing Profile id
     */
    routingProfileId?: pulumi.Input<string>;
    /**
     * A map of tags to assign to the Routing Profile.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
