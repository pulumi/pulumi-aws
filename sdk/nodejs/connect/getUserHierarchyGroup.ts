// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Provides details about a specific Amazon Connect User Hierarchy Group.
 *
 * ## Example Usage
 *
 * By `name`
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = pulumi.output(aws.connect.getUserHierarchyGroup({
 *     instanceId: "aaaaaaaa-bbbb-cccc-dddd-111111111111",
 *     name: "Example",
 * }));
 * ```
 *
 * By `hierarchyGroupId`
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = pulumi.output(aws.connect.getUserHierarchyGroup({
 *     hierarchyGroupId: "cccccccc-bbbb-cccc-dddd-111111111111",
 *     instanceId: "aaaaaaaa-bbbb-cccc-dddd-111111111111",
 * }));
 * ```
 */
export function getUserHierarchyGroup(args: GetUserHierarchyGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetUserHierarchyGroupResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws:connect/getUserHierarchyGroup:getUserHierarchyGroup", {
        "hierarchyGroupId": args.hierarchyGroupId,
        "instanceId": args.instanceId,
        "name": args.name,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getUserHierarchyGroup.
 */
export interface GetUserHierarchyGroupArgs {
    /**
     * Returns information on a specific hierarchy group by hierarchy group id
     */
    hierarchyGroupId?: string;
    /**
     * Reference to the hosting Amazon Connect Instance
     */
    instanceId: string;
    /**
     * Returns information on a specific hierarchy group by name
     */
    name?: string;
    /**
     * A map of tags to assign to the hierarchy group.
     */
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getUserHierarchyGroup.
 */
export interface GetUserHierarchyGroupResult {
    /**
     * The Amazon Resource Name (ARN) of the hierarchy group.
     */
    readonly arn: string;
    readonly hierarchyGroupId: string;
    /**
     * A block that contains information about the levels in the hierarchy group. The `hierarchyPath` block is documented below.
     */
    readonly hierarchyPaths: outputs.connect.GetUserHierarchyGroupHierarchyPath[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId: string;
    /**
     * The identifier of the level in the hierarchy group.
     */
    readonly levelId: string;
    /**
     * The name of the hierarchy group.
     */
    readonly name: string;
    /**
     * A map of tags to assign to the hierarchy group.
     */
    readonly tags: {[key: string]: string};
}

export function getUserHierarchyGroupOutput(args: GetUserHierarchyGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserHierarchyGroupResult> {
    return pulumi.output(args).apply(a => getUserHierarchyGroup(a, opts))
}

/**
 * A collection of arguments for invoking getUserHierarchyGroup.
 */
export interface GetUserHierarchyGroupOutputArgs {
    /**
     * Returns information on a specific hierarchy group by hierarchy group id
     */
    hierarchyGroupId?: pulumi.Input<string>;
    /**
     * Reference to the hosting Amazon Connect Instance
     */
    instanceId: pulumi.Input<string>;
    /**
     * Returns information on a specific hierarchy group by name
     */
    name?: pulumi.Input<string>;
    /**
     * A map of tags to assign to the hierarchy group.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
