// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { BotAssociationArgs, BotAssociationState } from "./botAssociation";
export type BotAssociation = import("./botAssociation").BotAssociation;
export const BotAssociation: typeof import("./botAssociation").BotAssociation = null as any;
utilities.lazyLoad(exports, ["BotAssociation"], () => require("./botAssociation"));

export { ContactFlowArgs, ContactFlowState } from "./contactFlow";
export type ContactFlow = import("./contactFlow").ContactFlow;
export const ContactFlow: typeof import("./contactFlow").ContactFlow = null as any;
utilities.lazyLoad(exports, ["ContactFlow"], () => require("./contactFlow"));

export { ContactFlowModuleArgs, ContactFlowModuleState } from "./contactFlowModule";
export type ContactFlowModule = import("./contactFlowModule").ContactFlowModule;
export const ContactFlowModule: typeof import("./contactFlowModule").ContactFlowModule = null as any;
utilities.lazyLoad(exports, ["ContactFlowModule"], () => require("./contactFlowModule"));

export { GetBotAssociationArgs, GetBotAssociationResult, GetBotAssociationOutputArgs } from "./getBotAssociation";
export const getBotAssociation: typeof import("./getBotAssociation").getBotAssociation = null as any;
export const getBotAssociationOutput: typeof import("./getBotAssociation").getBotAssociationOutput = null as any;
utilities.lazyLoad(exports, ["getBotAssociation","getBotAssociationOutput"], () => require("./getBotAssociation"));

export { GetContactFlowArgs, GetContactFlowResult, GetContactFlowOutputArgs } from "./getContactFlow";
export const getContactFlow: typeof import("./getContactFlow").getContactFlow = null as any;
export const getContactFlowOutput: typeof import("./getContactFlow").getContactFlowOutput = null as any;
utilities.lazyLoad(exports, ["getContactFlow","getContactFlowOutput"], () => require("./getContactFlow"));

export { GetContactFlowModuleArgs, GetContactFlowModuleResult, GetContactFlowModuleOutputArgs } from "./getContactFlowModule";
export const getContactFlowModule: typeof import("./getContactFlowModule").getContactFlowModule = null as any;
export const getContactFlowModuleOutput: typeof import("./getContactFlowModule").getContactFlowModuleOutput = null as any;
utilities.lazyLoad(exports, ["getContactFlowModule","getContactFlowModuleOutput"], () => require("./getContactFlowModule"));

export { GetHoursOfOperationArgs, GetHoursOfOperationResult, GetHoursOfOperationOutputArgs } from "./getHoursOfOperation";
export const getHoursOfOperation: typeof import("./getHoursOfOperation").getHoursOfOperation = null as any;
export const getHoursOfOperationOutput: typeof import("./getHoursOfOperation").getHoursOfOperationOutput = null as any;
utilities.lazyLoad(exports, ["getHoursOfOperation","getHoursOfOperationOutput"], () => require("./getHoursOfOperation"));

export { GetInstanceArgs, GetInstanceResult, GetInstanceOutputArgs } from "./getInstance";
export const getInstance: typeof import("./getInstance").getInstance = null as any;
export const getInstanceOutput: typeof import("./getInstance").getInstanceOutput = null as any;
utilities.lazyLoad(exports, ["getInstance","getInstanceOutput"], () => require("./getInstance"));

export { GetInstanceStorageConfigArgs, GetInstanceStorageConfigResult, GetInstanceStorageConfigOutputArgs } from "./getInstanceStorageConfig";
export const getInstanceStorageConfig: typeof import("./getInstanceStorageConfig").getInstanceStorageConfig = null as any;
export const getInstanceStorageConfigOutput: typeof import("./getInstanceStorageConfig").getInstanceStorageConfigOutput = null as any;
utilities.lazyLoad(exports, ["getInstanceStorageConfig","getInstanceStorageConfigOutput"], () => require("./getInstanceStorageConfig"));

export { GetLambdaFunctionAssociationArgs, GetLambdaFunctionAssociationResult, GetLambdaFunctionAssociationOutputArgs } from "./getLambdaFunctionAssociation";
export const getLambdaFunctionAssociation: typeof import("./getLambdaFunctionAssociation").getLambdaFunctionAssociation = null as any;
export const getLambdaFunctionAssociationOutput: typeof import("./getLambdaFunctionAssociation").getLambdaFunctionAssociationOutput = null as any;
utilities.lazyLoad(exports, ["getLambdaFunctionAssociation","getLambdaFunctionAssociationOutput"], () => require("./getLambdaFunctionAssociation"));

export { GetPromptArgs, GetPromptResult, GetPromptOutputArgs } from "./getPrompt";
export const getPrompt: typeof import("./getPrompt").getPrompt = null as any;
export const getPromptOutput: typeof import("./getPrompt").getPromptOutput = null as any;
utilities.lazyLoad(exports, ["getPrompt","getPromptOutput"], () => require("./getPrompt"));

export { GetQueueArgs, GetQueueResult, GetQueueOutputArgs } from "./getQueue";
export const getQueue: typeof import("./getQueue").getQueue = null as any;
export const getQueueOutput: typeof import("./getQueue").getQueueOutput = null as any;
utilities.lazyLoad(exports, ["getQueue","getQueueOutput"], () => require("./getQueue"));

export { GetQuickConnectArgs, GetQuickConnectResult, GetQuickConnectOutputArgs } from "./getQuickConnect";
export const getQuickConnect: typeof import("./getQuickConnect").getQuickConnect = null as any;
export const getQuickConnectOutput: typeof import("./getQuickConnect").getQuickConnectOutput = null as any;
utilities.lazyLoad(exports, ["getQuickConnect","getQuickConnectOutput"], () => require("./getQuickConnect"));

export { GetRoutingProfileArgs, GetRoutingProfileResult, GetRoutingProfileOutputArgs } from "./getRoutingProfile";
export const getRoutingProfile: typeof import("./getRoutingProfile").getRoutingProfile = null as any;
export const getRoutingProfileOutput: typeof import("./getRoutingProfile").getRoutingProfileOutput = null as any;
utilities.lazyLoad(exports, ["getRoutingProfile","getRoutingProfileOutput"], () => require("./getRoutingProfile"));

export { GetSecurityProfileArgs, GetSecurityProfileResult, GetSecurityProfileOutputArgs } from "./getSecurityProfile";
export const getSecurityProfile: typeof import("./getSecurityProfile").getSecurityProfile = null as any;
export const getSecurityProfileOutput: typeof import("./getSecurityProfile").getSecurityProfileOutput = null as any;
utilities.lazyLoad(exports, ["getSecurityProfile","getSecurityProfileOutput"], () => require("./getSecurityProfile"));

export { GetUserArgs, GetUserResult, GetUserOutputArgs } from "./getUser";
export const getUser: typeof import("./getUser").getUser = null as any;
export const getUserOutput: typeof import("./getUser").getUserOutput = null as any;
utilities.lazyLoad(exports, ["getUser","getUserOutput"], () => require("./getUser"));

export { GetUserHierarchyGroupArgs, GetUserHierarchyGroupResult, GetUserHierarchyGroupOutputArgs } from "./getUserHierarchyGroup";
export const getUserHierarchyGroup: typeof import("./getUserHierarchyGroup").getUserHierarchyGroup = null as any;
export const getUserHierarchyGroupOutput: typeof import("./getUserHierarchyGroup").getUserHierarchyGroupOutput = null as any;
utilities.lazyLoad(exports, ["getUserHierarchyGroup","getUserHierarchyGroupOutput"], () => require("./getUserHierarchyGroup"));

export { GetUserHierarchyStructureArgs, GetUserHierarchyStructureResult, GetUserHierarchyStructureOutputArgs } from "./getUserHierarchyStructure";
export const getUserHierarchyStructure: typeof import("./getUserHierarchyStructure").getUserHierarchyStructure = null as any;
export const getUserHierarchyStructureOutput: typeof import("./getUserHierarchyStructure").getUserHierarchyStructureOutput = null as any;
utilities.lazyLoad(exports, ["getUserHierarchyStructure","getUserHierarchyStructureOutput"], () => require("./getUserHierarchyStructure"));

export { GetVocabularyArgs, GetVocabularyResult, GetVocabularyOutputArgs } from "./getVocabulary";
export const getVocabulary: typeof import("./getVocabulary").getVocabulary = null as any;
export const getVocabularyOutput: typeof import("./getVocabulary").getVocabularyOutput = null as any;
utilities.lazyLoad(exports, ["getVocabulary","getVocabularyOutput"], () => require("./getVocabulary"));

export { HoursOfOperationArgs, HoursOfOperationState } from "./hoursOfOperation";
export type HoursOfOperation = import("./hoursOfOperation").HoursOfOperation;
export const HoursOfOperation: typeof import("./hoursOfOperation").HoursOfOperation = null as any;
utilities.lazyLoad(exports, ["HoursOfOperation"], () => require("./hoursOfOperation"));

export { InstanceArgs, InstanceState } from "./instance";
export type Instance = import("./instance").Instance;
export const Instance: typeof import("./instance").Instance = null as any;
utilities.lazyLoad(exports, ["Instance"], () => require("./instance"));

export { InstanceStorageConfigArgs, InstanceStorageConfigState } from "./instanceStorageConfig";
export type InstanceStorageConfig = import("./instanceStorageConfig").InstanceStorageConfig;
export const InstanceStorageConfig: typeof import("./instanceStorageConfig").InstanceStorageConfig = null as any;
utilities.lazyLoad(exports, ["InstanceStorageConfig"], () => require("./instanceStorageConfig"));

export { LambdaFunctionAssociationArgs, LambdaFunctionAssociationState } from "./lambdaFunctionAssociation";
export type LambdaFunctionAssociation = import("./lambdaFunctionAssociation").LambdaFunctionAssociation;
export const LambdaFunctionAssociation: typeof import("./lambdaFunctionAssociation").LambdaFunctionAssociation = null as any;
utilities.lazyLoad(exports, ["LambdaFunctionAssociation"], () => require("./lambdaFunctionAssociation"));

export { PhoneNumberArgs, PhoneNumberState } from "./phoneNumber";
export type PhoneNumber = import("./phoneNumber").PhoneNumber;
export const PhoneNumber: typeof import("./phoneNumber").PhoneNumber = null as any;
utilities.lazyLoad(exports, ["PhoneNumber"], () => require("./phoneNumber"));

export { QueueArgs, QueueState } from "./queue";
export type Queue = import("./queue").Queue;
export const Queue: typeof import("./queue").Queue = null as any;
utilities.lazyLoad(exports, ["Queue"], () => require("./queue"));

export { QuickConnectArgs, QuickConnectState } from "./quickConnect";
export type QuickConnect = import("./quickConnect").QuickConnect;
export const QuickConnect: typeof import("./quickConnect").QuickConnect = null as any;
utilities.lazyLoad(exports, ["QuickConnect"], () => require("./quickConnect"));

export { RoutingProfileArgs, RoutingProfileState } from "./routingProfile";
export type RoutingProfile = import("./routingProfile").RoutingProfile;
export const RoutingProfile: typeof import("./routingProfile").RoutingProfile = null as any;
utilities.lazyLoad(exports, ["RoutingProfile"], () => require("./routingProfile"));

export { SecurityProfileArgs, SecurityProfileState } from "./securityProfile";
export type SecurityProfile = import("./securityProfile").SecurityProfile;
export const SecurityProfile: typeof import("./securityProfile").SecurityProfile = null as any;
utilities.lazyLoad(exports, ["SecurityProfile"], () => require("./securityProfile"));

export { UserArgs, UserState } from "./user";
export type User = import("./user").User;
export const User: typeof import("./user").User = null as any;
utilities.lazyLoad(exports, ["User"], () => require("./user"));

export { UserHierarchyGroupArgs, UserHierarchyGroupState } from "./userHierarchyGroup";
export type UserHierarchyGroup = import("./userHierarchyGroup").UserHierarchyGroup;
export const UserHierarchyGroup: typeof import("./userHierarchyGroup").UserHierarchyGroup = null as any;
utilities.lazyLoad(exports, ["UserHierarchyGroup"], () => require("./userHierarchyGroup"));

export { UserHierarchyStructureArgs, UserHierarchyStructureState } from "./userHierarchyStructure";
export type UserHierarchyStructure = import("./userHierarchyStructure").UserHierarchyStructure;
export const UserHierarchyStructure: typeof import("./userHierarchyStructure").UserHierarchyStructure = null as any;
utilities.lazyLoad(exports, ["UserHierarchyStructure"], () => require("./userHierarchyStructure"));

export { VocabularyArgs, VocabularyState } from "./vocabulary";
export type Vocabulary = import("./vocabulary").Vocabulary;
export const Vocabulary: typeof import("./vocabulary").Vocabulary = null as any;
utilities.lazyLoad(exports, ["Vocabulary"], () => require("./vocabulary"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws:connect/botAssociation:BotAssociation":
                return new BotAssociation(name, <any>undefined, { urn })
            case "aws:connect/contactFlow:ContactFlow":
                return new ContactFlow(name, <any>undefined, { urn })
            case "aws:connect/contactFlowModule:ContactFlowModule":
                return new ContactFlowModule(name, <any>undefined, { urn })
            case "aws:connect/hoursOfOperation:HoursOfOperation":
                return new HoursOfOperation(name, <any>undefined, { urn })
            case "aws:connect/instance:Instance":
                return new Instance(name, <any>undefined, { urn })
            case "aws:connect/instanceStorageConfig:InstanceStorageConfig":
                return new InstanceStorageConfig(name, <any>undefined, { urn })
            case "aws:connect/lambdaFunctionAssociation:LambdaFunctionAssociation":
                return new LambdaFunctionAssociation(name, <any>undefined, { urn })
            case "aws:connect/phoneNumber:PhoneNumber":
                return new PhoneNumber(name, <any>undefined, { urn })
            case "aws:connect/queue:Queue":
                return new Queue(name, <any>undefined, { urn })
            case "aws:connect/quickConnect:QuickConnect":
                return new QuickConnect(name, <any>undefined, { urn })
            case "aws:connect/routingProfile:RoutingProfile":
                return new RoutingProfile(name, <any>undefined, { urn })
            case "aws:connect/securityProfile:SecurityProfile":
                return new SecurityProfile(name, <any>undefined, { urn })
            case "aws:connect/user:User":
                return new User(name, <any>undefined, { urn })
            case "aws:connect/userHierarchyGroup:UserHierarchyGroup":
                return new UserHierarchyGroup(name, <any>undefined, { urn })
            case "aws:connect/userHierarchyStructure:UserHierarchyStructure":
                return new UserHierarchyStructure(name, <any>undefined, { urn })
            case "aws:connect/vocabulary:Vocabulary":
                return new Vocabulary(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "connect/botAssociation", _module)
pulumi.runtime.registerResourceModule("aws", "connect/contactFlow", _module)
pulumi.runtime.registerResourceModule("aws", "connect/contactFlowModule", _module)
pulumi.runtime.registerResourceModule("aws", "connect/hoursOfOperation", _module)
pulumi.runtime.registerResourceModule("aws", "connect/instance", _module)
pulumi.runtime.registerResourceModule("aws", "connect/instanceStorageConfig", _module)
pulumi.runtime.registerResourceModule("aws", "connect/lambdaFunctionAssociation", _module)
pulumi.runtime.registerResourceModule("aws", "connect/phoneNumber", _module)
pulumi.runtime.registerResourceModule("aws", "connect/queue", _module)
pulumi.runtime.registerResourceModule("aws", "connect/quickConnect", _module)
pulumi.runtime.registerResourceModule("aws", "connect/routingProfile", _module)
pulumi.runtime.registerResourceModule("aws", "connect/securityProfile", _module)
pulumi.runtime.registerResourceModule("aws", "connect/user", _module)
pulumi.runtime.registerResourceModule("aws", "connect/userHierarchyGroup", _module)
pulumi.runtime.registerResourceModule("aws", "connect/userHierarchyStructure", _module)
pulumi.runtime.registerResourceModule("aws", "connect/vocabulary", _module)
