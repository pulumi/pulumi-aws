// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Provides details about a specific Amazon Connect Hours of Operation.
 *
 * ## Example Usage
 *
 * By `name`
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = aws.connect.getHoursOfOperation({
 *     instanceId: "aaaaaaaa-bbbb-cccc-dddd-111111111111",
 *     name: "Test",
 * });
 * ```
 *
 * By `hoursOfOperationId`
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = aws.connect.getHoursOfOperation({
 *     hoursOfOperationId: "cccccccc-bbbb-cccc-dddd-111111111111",
 *     instanceId: "aaaaaaaa-bbbb-cccc-dddd-111111111111",
 * });
 * ```
 */
export function getHoursOfOperation(args: GetHoursOfOperationArgs, opts?: pulumi.InvokeOptions): Promise<GetHoursOfOperationResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws:connect/getHoursOfOperation:getHoursOfOperation", {
        "hoursOfOperationId": args.hoursOfOperationId,
        "instanceId": args.instanceId,
        "name": args.name,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getHoursOfOperation.
 */
export interface GetHoursOfOperationArgs {
    /**
     * Returns information on a specific Hours of Operation by hours of operation id
     */
    hoursOfOperationId?: string;
    /**
     * Reference to the hosting Amazon Connect Instance
     */
    instanceId: string;
    /**
     * Returns information on a specific Hours of Operation by name
     */
    name?: string;
    /**
     * Map of tags to assign to the Hours of Operation.
     */
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getHoursOfOperation.
 */
export interface GetHoursOfOperationResult {
    /**
     * ARN of the Hours of Operation.
     */
    readonly arn: string;
    /**
     * Configuration information for the hours of operation: day, start time, and end time . Config blocks are documented below. Config blocks are documented below.
     */
    readonly configs: outputs.connect.GetHoursOfOperationConfig[];
    /**
     * Description of the Hours of Operation.
     */
    readonly description: string;
    /**
     * (**Deprecated**) ARN of the Hours of Operation.
     *
     * @deprecated use 'arn' attribute instead
     */
    readonly hoursOfOperationArn: string;
    /**
     * The identifier for the hours of operation.
     */
    readonly hoursOfOperationId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Identifier of the hosting Amazon Connect Instance.
     */
    readonly instanceId: string;
    /**
     * Name of the Hours of Operation.
     */
    readonly name: string;
    /**
     * Map of tags to assign to the Hours of Operation.
     */
    readonly tags: {[key: string]: string};
    /**
     * Time zone of the Hours of Operation.
     */
    readonly timeZone: string;
}

export function getHoursOfOperationOutput(args: GetHoursOfOperationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHoursOfOperationResult> {
    return pulumi.output(args).apply(a => getHoursOfOperation(a, opts))
}

/**
 * A collection of arguments for invoking getHoursOfOperation.
 */
export interface GetHoursOfOperationOutputArgs {
    /**
     * Returns information on a specific Hours of Operation by hours of operation id
     */
    hoursOfOperationId?: pulumi.Input<string>;
    /**
     * Reference to the hosting Amazon Connect Instance
     */
    instanceId: pulumi.Input<string>;
    /**
     * Returns information on a specific Hours of Operation by name
     */
    name?: pulumi.Input<string>;
    /**
     * Map of tags to assign to the Hours of Operation.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
