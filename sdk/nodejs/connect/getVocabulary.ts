// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides details about a specific Amazon Connect Vocabulary.
 *
 * ## Example Usage
 *
 * By `name`
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.connect.getVocabulary({
 *     instanceId: "aaaaaaaa-bbbb-cccc-dddd-111111111111",
 *     name: "Example",
 * });
 * ```
 *
 * By `vocabularyId`
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.connect.getVocabulary({
 *     instanceId: "aaaaaaaa-bbbb-cccc-dddd-111111111111",
 *     vocabularyId: "cccccccc-bbbb-cccc-dddd-111111111111",
 * });
 * ```
 */
export function getVocabulary(args: GetVocabularyArgs, opts?: pulumi.InvokeOptions): Promise<GetVocabularyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:connect/getVocabulary:getVocabulary", {
        "instanceId": args.instanceId,
        "name": args.name,
        "tags": args.tags,
        "vocabularyId": args.vocabularyId,
    }, opts);
}

/**
 * A collection of arguments for invoking getVocabulary.
 */
export interface GetVocabularyArgs {
    /**
     * Reference to the hosting Amazon Connect Instance
     */
    instanceId: string;
    /**
     * Returns information on a specific Vocabulary by name
     */
    name?: string;
    /**
     * A map of tags to assign to the Vocabulary.
     */
    tags?: {[key: string]: string};
    /**
     * Returns information on a specific Vocabulary by Vocabulary id
     */
    vocabularyId?: string;
}

/**
 * A collection of values returned by getVocabulary.
 */
export interface GetVocabularyResult {
    /**
     * The Amazon Resource Name (ARN) of the Vocabulary.
     */
    readonly arn: string;
    /**
     * The content of the custom vocabulary in plain-text format with a table of values. Each row in the table represents a word or a phrase, described with Phrase, IPA, SoundsLike, and DisplayAs fields. Separate the fields with TAB characters. For more information, see [Create a custom vocabulary using a table](https://docs.aws.amazon.com/transcribe/latest/dg/custom-vocabulary.html#create-vocabulary-table).
     */
    readonly content: string;
    /**
     * The reason why the custom vocabulary was not created.
     */
    readonly failureReason: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId: string;
    /**
     * The language code of the vocabulary entries. For a list of languages and their corresponding language codes, see [What is Amazon Transcribe?](https://docs.aws.amazon.com/transcribe/latest/dg/transcribe-whatis.html). Valid Values are `ar-AE`, `de-CH`, `de-DE`, `en-AB`, `en-AU`, `en-GB`, `en-IE`, `en-IN`, `en-US`, `en-WL`, `es-ES`, `es-US`, `fr-CA`, `fr-FR`, `hi-IN`, `it-IT`, `ja-JP`, `ko-KR`, `pt-BR`, `pt-PT`, `zh-CN`.
     */
    readonly languageCode: string;
    /**
     * The timestamp when the custom vocabulary was last modified.
     */
    readonly lastModifiedTime: string;
    readonly name: string;
    /**
     * The current state of the custom vocabulary. Valid values are `CREATION_IN_PROGRESS`, `ACTIVE`, `CREATION_FAILED`, `DELETE_IN_PROGRESS`.
     */
    readonly state: string;
    /**
     * A map of tags to assign to the Vocabulary.
     */
    readonly tags: {[key: string]: string};
    /**
     * The identifier of the custom vocabulary.
     */
    readonly vocabularyId: string;
}
/**
 * Provides details about a specific Amazon Connect Vocabulary.
 *
 * ## Example Usage
 *
 * By `name`
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.connect.getVocabulary({
 *     instanceId: "aaaaaaaa-bbbb-cccc-dddd-111111111111",
 *     name: "Example",
 * });
 * ```
 *
 * By `vocabularyId`
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.connect.getVocabulary({
 *     instanceId: "aaaaaaaa-bbbb-cccc-dddd-111111111111",
 *     vocabularyId: "cccccccc-bbbb-cccc-dddd-111111111111",
 * });
 * ```
 */
export function getVocabularyOutput(args: GetVocabularyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVocabularyResult> {
    return pulumi.output(args).apply((a: any) => getVocabulary(a, opts))
}

/**
 * A collection of arguments for invoking getVocabulary.
 */
export interface GetVocabularyOutputArgs {
    /**
     * Reference to the hosting Amazon Connect Instance
     */
    instanceId: pulumi.Input<string>;
    /**
     * Returns information on a specific Vocabulary by name
     */
    name?: pulumi.Input<string>;
    /**
     * A map of tags to assign to the Vocabulary.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Returns information on a specific Vocabulary by Vocabulary id
     */
    vocabularyId?: pulumi.Input<string>;
}
