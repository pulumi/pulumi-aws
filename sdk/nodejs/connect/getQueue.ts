// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Provides details about a specific Amazon Connect Queue.
 *
 * ## Example Usage
 *
 * By `name`
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = pulumi.output(aws.connect.getQueue({
 *     instanceId: "aaaaaaaa-bbbb-cccc-dddd-111111111111",
 *     name: "Example",
 * }));
 * ```
 *
 * By `queueId`
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = pulumi.output(aws.connect.getQueue({
 *     instanceId: "aaaaaaaa-bbbb-cccc-dddd-111111111111",
 *     queueId: "cccccccc-bbbb-cccc-dddd-111111111111",
 * }));
 * ```
 */
export function getQueue(args: GetQueueArgs, opts?: pulumi.InvokeOptions): Promise<GetQueueResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws:connect/getQueue:getQueue", {
        "instanceId": args.instanceId,
        "name": args.name,
        "queueId": args.queueId,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getQueue.
 */
export interface GetQueueArgs {
    /**
     * Reference to the hosting Amazon Connect Instance
     */
    instanceId: string;
    /**
     * Returns information on a specific Queue by name
     */
    name?: string;
    /**
     * Returns information on a specific Queue by Queue id
     */
    queueId?: string;
    /**
     * A map of tags assigned to the Queue.
     */
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getQueue.
 */
export interface GetQueueResult {
    /**
     * The Amazon Resource Name (ARN) of the Queue.
     */
    readonly arn: string;
    /**
     * Specifies the description of the Queue.
     */
    readonly description: string;
    /**
     * Specifies the identifier of the Hours of Operation.
     */
    readonly hoursOfOperationId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId: string;
    /**
     * Specifies the maximum number of contacts that can be in the queue before it is considered full. Minimum value of 0.
     */
    readonly maxContacts: number;
    readonly name: string;
    /**
     * A block that defines the outbound caller ID name, number, and outbound whisper flow. The Outbound Caller Config block is documented below.
     */
    readonly outboundCallerConfigs: outputs.connect.GetQueueOutboundCallerConfig[];
    /**
     * The identifier for the Queue.
     */
    readonly queueId: string;
    /**
     * Specifies the description of the Queue. Values are `ENABLED` or `DISABLED`.
     */
    readonly status: string;
    /**
     * A map of tags assigned to the Queue.
     */
    readonly tags: {[key: string]: string};
}

export function getQueueOutput(args: GetQueueOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetQueueResult> {
    return pulumi.output(args).apply(a => getQueue(a, opts))
}

/**
 * A collection of arguments for invoking getQueue.
 */
export interface GetQueueOutputArgs {
    /**
     * Reference to the hosting Amazon Connect Instance
     */
    instanceId: pulumi.Input<string>;
    /**
     * Returns information on a specific Queue by name
     */
    name?: pulumi.Input<string>;
    /**
     * Returns information on a specific Queue by Queue id
     */
    queueId?: pulumi.Input<string>;
    /**
     * A map of tags assigned to the Queue.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
