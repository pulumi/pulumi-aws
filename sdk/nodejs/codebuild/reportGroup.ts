// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Provides a CodeBuild Report Groups Resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleKey = new aws.kms.Key("exampleKey", {
 *     description: "my test kms key",
 *     deletionWindowInDays: 7,
 *     policy: `{
 *   "Version": "2012-10-17",
 *   "Id": "kms-tf-1",
 *   "Statement": [
 *     {
 *       "Sid": "Enable IAM User Permissions",
 *       "Effect": "Allow",
 *       "Principal": {
 *         "AWS": "*"
 *       },
 *       "Action": "kms:*",
 *       "Resource": "*"
 *     }
 *   ]
 * }
 * `,
 * });
 * const exampleBucket = new aws.s3.Bucket("exampleBucket", {});
 * const exampleReportGroup = new aws.codebuild.ReportGroup("exampleReportGroup", {
 *     type: "TEST",
 *     exportConfig: {
 *         type: "S3",
 *         s3Destination: {
 *             bucket: exampleBucket.id,
 *             encryptionDisabled: false,
 *             encryptionKey: exampleKey.arn,
 *             packaging: "NONE",
 *             path: "/some",
 *         },
 *     },
 * });
 * ```
 */
export class ReportGroup extends pulumi.CustomResource {
    /**
     * Get an existing ReportGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ReportGroupState, opts?: pulumi.CustomResourceOptions): ReportGroup {
        return new ReportGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:codebuild/reportGroup:ReportGroup';

    /**
     * Returns true if the given object is an instance of ReportGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ReportGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ReportGroup.__pulumiType;
    }

    /**
     * The ARN of Report Group.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The date and time this Report Group was created.
     */
    public /*out*/ readonly created!: pulumi.Output<string>;
    /**
     * Information about the destination where the raw data of this Report Group is exported. see Export Config documented below.
     */
    public readonly exportConfig!: pulumi.Output<outputs.codebuild.ReportGroupExportConfig>;
    /**
     * The name of a Report Group.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Key-value mapping of resource tags
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The export configuration type. Valid values are `S3` and `NO_EXPORT`.
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a ReportGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ReportGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ReportGroupArgs | ReportGroupState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as ReportGroupState | undefined;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["created"] = state ? state.created : undefined;
            inputs["exportConfig"] = state ? state.exportConfig : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as ReportGroupArgs | undefined;
            if (!args || args.exportConfig === undefined) {
                throw new Error("Missing required property 'exportConfig'");
            }
            if (!args || args.type === undefined) {
                throw new Error("Missing required property 'type'");
            }
            inputs["exportConfig"] = args ? args.exportConfig : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["type"] = args ? args.type : undefined;
            inputs["arn"] = undefined /*out*/;
            inputs["created"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(ReportGroup.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ReportGroup resources.
 */
export interface ReportGroupState {
    /**
     * The ARN of Report Group.
     */
    readonly arn?: pulumi.Input<string>;
    /**
     * The date and time this Report Group was created.
     */
    readonly created?: pulumi.Input<string>;
    /**
     * Information about the destination where the raw data of this Report Group is exported. see Export Config documented below.
     */
    readonly exportConfig?: pulumi.Input<inputs.codebuild.ReportGroupExportConfig>;
    /**
     * The name of a Report Group.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Key-value mapping of resource tags
     */
    readonly tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The export configuration type. Valid values are `S3` and `NO_EXPORT`.
     */
    readonly type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ReportGroup resource.
 */
export interface ReportGroupArgs {
    /**
     * Information about the destination where the raw data of this Report Group is exported. see Export Config documented below.
     */
    readonly exportConfig: pulumi.Input<inputs.codebuild.ReportGroupExportConfig>;
    /**
     * The name of a Report Group.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Key-value mapping of resource tags
     */
    readonly tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The export configuration type. Valid values are `S3` and `NO_EXPORT`.
     */
    readonly type: pulumi.Input<string>;
}
