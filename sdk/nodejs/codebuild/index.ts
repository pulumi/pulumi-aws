// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ProjectArgs, ProjectState } from "./project";
export type Project = import("./project").Project;
export const Project: typeof import("./project").Project = null as any;
utilities.lazyLoad(exports, ["Project"], () => require("./project"));

export { ReportGroupArgs, ReportGroupState } from "./reportGroup";
export type ReportGroup = import("./reportGroup").ReportGroup;
export const ReportGroup: typeof import("./reportGroup").ReportGroup = null as any;
utilities.lazyLoad(exports, ["ReportGroup"], () => require("./reportGroup"));

export { ResourcePolicyArgs, ResourcePolicyState } from "./resourcePolicy";
export type ResourcePolicy = import("./resourcePolicy").ResourcePolicy;
export const ResourcePolicy: typeof import("./resourcePolicy").ResourcePolicy = null as any;
utilities.lazyLoad(exports, ["ResourcePolicy"], () => require("./resourcePolicy"));

export { SourceCredentialArgs, SourceCredentialState } from "./sourceCredential";
export type SourceCredential = import("./sourceCredential").SourceCredential;
export const SourceCredential: typeof import("./sourceCredential").SourceCredential = null as any;
utilities.lazyLoad(exports, ["SourceCredential"], () => require("./sourceCredential"));

export { WebhookArgs, WebhookState } from "./webhook";
export type Webhook = import("./webhook").Webhook;
export const Webhook: typeof import("./webhook").Webhook = null as any;
utilities.lazyLoad(exports, ["Webhook"], () => require("./webhook"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws:codebuild/project:Project":
                return new Project(name, <any>undefined, { urn })
            case "aws:codebuild/reportGroup:ReportGroup":
                return new ReportGroup(name, <any>undefined, { urn })
            case "aws:codebuild/resourcePolicy:ResourcePolicy":
                return new ResourcePolicy(name, <any>undefined, { urn })
            case "aws:codebuild/sourceCredential:SourceCredential":
                return new SourceCredential(name, <any>undefined, { urn })
            case "aws:codebuild/webhook:Webhook":
                return new Webhook(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "codebuild/project", _module)
pulumi.runtime.registerResourceModule("aws", "codebuild/reportGroup", _module)
pulumi.runtime.registerResourceModule("aws", "codebuild/resourcePolicy", _module)
pulumi.runtime.registerResourceModule("aws", "codebuild/sourceCredential", _module)
pulumi.runtime.registerResourceModule("aws", "codebuild/webhook", _module)
