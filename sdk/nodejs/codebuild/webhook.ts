// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/codebuild_webhook.html.markdown.
 */
export class Webhook extends pulumi.CustomResource {
    /**
     * Get an existing Webhook resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WebhookState, opts?: pulumi.CustomResourceOptions): Webhook {
        return new Webhook(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:codebuild/webhook:Webhook';

    /**
     * Returns true if the given object is an instance of Webhook.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Webhook {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Webhook.__pulumiType;
    }

    /**
     * A regular expression used to determine which branches get built. Default is all branches are built. It is recommended to use `filter_group` over `branch_filter`.
     */
    public readonly branchFilter!: pulumi.Output<string | undefined>;
    /**
     * Information about the webhook's trigger. Filter group blocks are documented below.
     */
    public readonly filterGroups!: pulumi.Output<{ filters?: { excludeMatchedPattern?: boolean, pattern: string, type: string }[] }[] | undefined>;
    /**
     * The CodeBuild endpoint where webhook events are sent.
     */
    public /*out*/ readonly payloadUrl!: pulumi.Output<string>;
    /**
     * The name of the build project.
     */
    public readonly projectName!: pulumi.Output<string>;
    /**
     * The secret token of the associated repository. Not returned by the CodeBuild API for all source types.
     */
    public /*out*/ readonly secret!: pulumi.Output<string>;
    /**
     * The URL to the webhook.
     */
    public /*out*/ readonly url!: pulumi.Output<string>;

    /**
     * Create a Webhook resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WebhookArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WebhookArgs | WebhookState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as WebhookState | undefined;
            inputs["branchFilter"] = state ? state.branchFilter : undefined;
            inputs["filterGroups"] = state ? state.filterGroups : undefined;
            inputs["payloadUrl"] = state ? state.payloadUrl : undefined;
            inputs["projectName"] = state ? state.projectName : undefined;
            inputs["secret"] = state ? state.secret : undefined;
            inputs["url"] = state ? state.url : undefined;
        } else {
            const args = argsOrState as WebhookArgs | undefined;
            if (!args || args.projectName === undefined) {
                throw new Error("Missing required property 'projectName'");
            }
            inputs["branchFilter"] = args ? args.branchFilter : undefined;
            inputs["filterGroups"] = args ? args.filterGroups : undefined;
            inputs["projectName"] = args ? args.projectName : undefined;
            inputs["payloadUrl"] = undefined /*out*/;
            inputs["secret"] = undefined /*out*/;
            inputs["url"] = undefined /*out*/;
        }
        super(Webhook.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Webhook resources.
 */
export interface WebhookState {
    /**
     * A regular expression used to determine which branches get built. Default is all branches are built. It is recommended to use `filter_group` over `branch_filter`.
     */
    readonly branchFilter?: pulumi.Input<string>;
    /**
     * Information about the webhook's trigger. Filter group blocks are documented below.
     */
    readonly filterGroups?: pulumi.Input<pulumi.Input<{ filters?: pulumi.Input<pulumi.Input<{ excludeMatchedPattern?: pulumi.Input<boolean>, pattern: pulumi.Input<string>, type: pulumi.Input<string> }>[]> }>[]>;
    /**
     * The CodeBuild endpoint where webhook events are sent.
     */
    readonly payloadUrl?: pulumi.Input<string>;
    /**
     * The name of the build project.
     */
    readonly projectName?: pulumi.Input<string>;
    /**
     * The secret token of the associated repository. Not returned by the CodeBuild API for all source types.
     */
    readonly secret?: pulumi.Input<string>;
    /**
     * The URL to the webhook.
     */
    readonly url?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Webhook resource.
 */
export interface WebhookArgs {
    /**
     * A regular expression used to determine which branches get built. Default is all branches are built. It is recommended to use `filter_group` over `branch_filter`.
     */
    readonly branchFilter?: pulumi.Input<string>;
    /**
     * Information about the webhook's trigger. Filter group blocks are documented below.
     */
    readonly filterGroups?: pulumi.Input<pulumi.Input<{ filters?: pulumi.Input<pulumi.Input<{ excludeMatchedPattern?: pulumi.Input<boolean>, pattern: pulumi.Input<string>, type: pulumi.Input<string> }>[]> }>[]>;
    /**
     * The name of the build project.
     */
    readonly projectName: pulumi.Input<string>;
}
