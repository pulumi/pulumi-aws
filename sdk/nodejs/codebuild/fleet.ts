// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Provides a CodeBuild Fleet Resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.codebuild.Fleet("test", {
 *     baseCapacity: 2,
 *     computeType: "BUILD_GENERAL1_SMALL",
 *     environmentType: "LINUX_CONTAINER",
 *     name: "full-example-codebuild-fleet",
 *     overflowBehavior: "QUEUE",
 *     scalingConfiguration: {
 *         maxCapacity: 5,
 *         scalingType: "TARGET_TRACKING_SCALING",
 *         targetTrackingScalingConfigs: [{
 *             metricType: "FLEET_UTILIZATION_RATE",
 *             targetValue: 97.5,
 *         }],
 *     },
 * });
 * ```
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.codebuild.Fleet("example", {name: "example-codebuild-fleet"});
 * ```
 *
 * ## Import
 *
 * ### Identity Schema
 *
 * #### Required
 *
 * - `arn` (String) Amazon Resource Name (ARN) of the CodeBuild fleet.
 *
 * Using `pulumi import`, import CodeBuild Fleet using the `name`. For example:
 *
 * console
 *
 * % pulumi import aws_codebuild_fleet.name fleet-name
 */
export class Fleet extends pulumi.CustomResource {
    /**
     * Get an existing Fleet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FleetState, opts?: pulumi.CustomResourceOptions): Fleet {
        return new Fleet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:codebuild/fleet:Fleet';

    /**
     * Returns true if the given object is an instance of Fleet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Fleet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Fleet.__pulumiType;
    }

    /**
     * ARN of the Fleet.
     */
    declare public /*out*/ readonly arn: pulumi.Output<string>;
    /**
     * Number of machines allocated to the ﬂeet.
     */
    declare public readonly baseCapacity: pulumi.Output<number>;
    /**
     * The compute configuration of the compute fleet. This is only required if `computeType` is set to `ATTRIBUTE_BASED_COMPUTE` or `CUSTOM_INSTANCE_TYPE`. See `computeConfiguration` below.
     */
    declare public readonly computeConfiguration: pulumi.Output<outputs.codebuild.FleetComputeConfiguration | undefined>;
    /**
     * Compute resources the compute fleet uses. See [compute types](https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html#environment.types) for more information and valid values.
     */
    declare public readonly computeType: pulumi.Output<string>;
    /**
     * Creation time of the fleet.
     */
    declare public /*out*/ readonly created: pulumi.Output<string>;
    /**
     * Environment type of the compute fleet. See [environment types](https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html#environment.types) for more information and valid values.
     *
     * The following arguments are optional:
     */
    declare public readonly environmentType: pulumi.Output<string>;
    /**
     * The service role associated with the compute fleet.
     */
    declare public readonly fleetServiceRole: pulumi.Output<string | undefined>;
    /**
     * The Amazon Machine Image (AMI) of the compute fleet.
     */
    declare public readonly imageId: pulumi.Output<string | undefined>;
    /**
     * Last modification time of the fleet.
     */
    declare public /*out*/ readonly lastModified: pulumi.Output<string>;
    /**
     * Fleet name.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Overflow behavior for compute fleet. Valid values: `ON_DEMAND`, `QUEUE`.
     */
    declare public readonly overflowBehavior: pulumi.Output<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * Configuration block. This option is only valid when your overflow behavior is `QUEUE`. See `scalingConfiguration` below.
     */
    declare public readonly scalingConfiguration: pulumi.Output<outputs.codebuild.FleetScalingConfiguration | undefined>;
    /**
     * Nested attribute containing information about the current status of the fleet.
     */
    declare public /*out*/ readonly statuses: pulumi.Output<outputs.codebuild.FleetStatus[]>;
    /**
     * Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    declare public /*out*/ readonly tagsAll: pulumi.Output<{[key: string]: string}>;
    /**
     * Configuration block. See `vpcConfig` below.
     */
    declare public readonly vpcConfigs: pulumi.Output<outputs.codebuild.FleetVpcConfig[] | undefined>;

    /**
     * Create a Fleet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FleetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FleetArgs | FleetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FleetState | undefined;
            resourceInputs["arn"] = state?.arn;
            resourceInputs["baseCapacity"] = state?.baseCapacity;
            resourceInputs["computeConfiguration"] = state?.computeConfiguration;
            resourceInputs["computeType"] = state?.computeType;
            resourceInputs["created"] = state?.created;
            resourceInputs["environmentType"] = state?.environmentType;
            resourceInputs["fleetServiceRole"] = state?.fleetServiceRole;
            resourceInputs["imageId"] = state?.imageId;
            resourceInputs["lastModified"] = state?.lastModified;
            resourceInputs["name"] = state?.name;
            resourceInputs["overflowBehavior"] = state?.overflowBehavior;
            resourceInputs["region"] = state?.region;
            resourceInputs["scalingConfiguration"] = state?.scalingConfiguration;
            resourceInputs["statuses"] = state?.statuses;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tagsAll"] = state?.tagsAll;
            resourceInputs["vpcConfigs"] = state?.vpcConfigs;
        } else {
            const args = argsOrState as FleetArgs | undefined;
            if (args?.baseCapacity === undefined && !opts.urn) {
                throw new Error("Missing required property 'baseCapacity'");
            }
            if (args?.computeType === undefined && !opts.urn) {
                throw new Error("Missing required property 'computeType'");
            }
            if (args?.environmentType === undefined && !opts.urn) {
                throw new Error("Missing required property 'environmentType'");
            }
            resourceInputs["baseCapacity"] = args?.baseCapacity;
            resourceInputs["computeConfiguration"] = args?.computeConfiguration;
            resourceInputs["computeType"] = args?.computeType;
            resourceInputs["environmentType"] = args?.environmentType;
            resourceInputs["fleetServiceRole"] = args?.fleetServiceRole;
            resourceInputs["imageId"] = args?.imageId;
            resourceInputs["name"] = args?.name;
            resourceInputs["overflowBehavior"] = args?.overflowBehavior;
            resourceInputs["region"] = args?.region;
            resourceInputs["scalingConfiguration"] = args?.scalingConfiguration;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["vpcConfigs"] = args?.vpcConfigs;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["created"] = undefined /*out*/;
            resourceInputs["lastModified"] = undefined /*out*/;
            resourceInputs["statuses"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Fleet.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Fleet resources.
 */
export interface FleetState {
    /**
     * ARN of the Fleet.
     */
    arn?: pulumi.Input<string>;
    /**
     * Number of machines allocated to the ﬂeet.
     */
    baseCapacity?: pulumi.Input<number>;
    /**
     * The compute configuration of the compute fleet. This is only required if `computeType` is set to `ATTRIBUTE_BASED_COMPUTE` or `CUSTOM_INSTANCE_TYPE`. See `computeConfiguration` below.
     */
    computeConfiguration?: pulumi.Input<inputs.codebuild.FleetComputeConfiguration>;
    /**
     * Compute resources the compute fleet uses. See [compute types](https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html#environment.types) for more information and valid values.
     */
    computeType?: pulumi.Input<string>;
    /**
     * Creation time of the fleet.
     */
    created?: pulumi.Input<string>;
    /**
     * Environment type of the compute fleet. See [environment types](https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html#environment.types) for more information and valid values.
     *
     * The following arguments are optional:
     */
    environmentType?: pulumi.Input<string>;
    /**
     * The service role associated with the compute fleet.
     */
    fleetServiceRole?: pulumi.Input<string>;
    /**
     * The Amazon Machine Image (AMI) of the compute fleet.
     */
    imageId?: pulumi.Input<string>;
    /**
     * Last modification time of the fleet.
     */
    lastModified?: pulumi.Input<string>;
    /**
     * Fleet name.
     */
    name?: pulumi.Input<string>;
    /**
     * Overflow behavior for compute fleet. Valid values: `ON_DEMAND`, `QUEUE`.
     */
    overflowBehavior?: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * Configuration block. This option is only valid when your overflow behavior is `QUEUE`. See `scalingConfiguration` below.
     */
    scalingConfiguration?: pulumi.Input<inputs.codebuild.FleetScalingConfiguration>;
    /**
     * Nested attribute containing information about the current status of the fleet.
     */
    statuses?: pulumi.Input<pulumi.Input<inputs.codebuild.FleetStatus>[]>;
    /**
     * Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Configuration block. See `vpcConfig` below.
     */
    vpcConfigs?: pulumi.Input<pulumi.Input<inputs.codebuild.FleetVpcConfig>[]>;
}

/**
 * The set of arguments for constructing a Fleet resource.
 */
export interface FleetArgs {
    /**
     * Number of machines allocated to the ﬂeet.
     */
    baseCapacity: pulumi.Input<number>;
    /**
     * The compute configuration of the compute fleet. This is only required if `computeType` is set to `ATTRIBUTE_BASED_COMPUTE` or `CUSTOM_INSTANCE_TYPE`. See `computeConfiguration` below.
     */
    computeConfiguration?: pulumi.Input<inputs.codebuild.FleetComputeConfiguration>;
    /**
     * Compute resources the compute fleet uses. See [compute types](https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html#environment.types) for more information and valid values.
     */
    computeType: pulumi.Input<string>;
    /**
     * Environment type of the compute fleet. See [environment types](https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html#environment.types) for more information and valid values.
     *
     * The following arguments are optional:
     */
    environmentType: pulumi.Input<string>;
    /**
     * The service role associated with the compute fleet.
     */
    fleetServiceRole?: pulumi.Input<string>;
    /**
     * The Amazon Machine Image (AMI) of the compute fleet.
     */
    imageId?: pulumi.Input<string>;
    /**
     * Fleet name.
     */
    name?: pulumi.Input<string>;
    /**
     * Overflow behavior for compute fleet. Valid values: `ON_DEMAND`, `QUEUE`.
     */
    overflowBehavior?: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * Configuration block. This option is only valid when your overflow behavior is `QUEUE`. See `scalingConfiguration` below.
     */
    scalingConfiguration?: pulumi.Input<inputs.codebuild.FleetScalingConfiguration>;
    /**
     * Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Configuration block. See `vpcConfig` below.
     */
    vpcConfigs?: pulumi.Input<pulumi.Input<inputs.codebuild.FleetVpcConfig>[]>;
}
