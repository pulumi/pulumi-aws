// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS VPC Lattice Service Network VPC Association.
 *
 * ## Example Usage
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.vpclattice.ServiceNetworkVpcAssociation("example", {
 *     vpcIdentifier: aws_vpc.example.id,
 *     serviceNetworkIdentifier: aws_vpclattice_service_network.example.id,
 *     securityGroupIds: [aws_security_group.example.id],
 * });
 * ```
 *
 * ## Import
 *
 * VPC Lattice Service Network VPC Association can be imported using the `id`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:vpclattice/serviceNetworkVpcAssociation:ServiceNetworkVpcAssociation example snsa-05e2474658a88f6ba
 * ```
 */
export class ServiceNetworkVpcAssociation extends pulumi.CustomResource {
    /**
     * Get an existing ServiceNetworkVpcAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceNetworkVpcAssociationState, opts?: pulumi.CustomResourceOptions): ServiceNetworkVpcAssociation {
        return new ServiceNetworkVpcAssociation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:vpclattice/serviceNetworkVpcAssociation:ServiceNetworkVpcAssociation';

    /**
     * Returns true if the given object is an instance of ServiceNetworkVpcAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceNetworkVpcAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceNetworkVpcAssociation.__pulumiType;
    }

    /**
     * The ARN of the Association.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The account that created the association.
     */
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    /**
     * The IDs of the security groups.
     */
    public readonly securityGroupIds!: pulumi.Output<string[] | undefined>;
    /**
     * The ID or Amazon Resource Identifier (ARN) of the service network. You must use the ARN if the resources specified in the operation are in different accounts.
     * The following arguments are optional:
     */
    public readonly serviceNetworkIdentifier!: pulumi.Output<string>;
    /**
     * The operations status. Valid Values are CREATE_IN_PROGRESS | ACTIVE | DELETE_IN_PROGRESS | CREATE_FAILED | DELETE_FAILED
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    /**
     * The ID of the VPC.
     */
    public readonly vpcIdentifier!: pulumi.Output<string>;

    /**
     * Create a ServiceNetworkVpcAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceNetworkVpcAssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceNetworkVpcAssociationArgs | ServiceNetworkVpcAssociationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceNetworkVpcAssociationState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["securityGroupIds"] = state ? state.securityGroupIds : undefined;
            resourceInputs["serviceNetworkIdentifier"] = state ? state.serviceNetworkIdentifier : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["vpcIdentifier"] = state ? state.vpcIdentifier : undefined;
        } else {
            const args = argsOrState as ServiceNetworkVpcAssociationArgs | undefined;
            if ((!args || args.serviceNetworkIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceNetworkIdentifier'");
            }
            if ((!args || args.vpcIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcIdentifier'");
            }
            resourceInputs["securityGroupIds"] = args ? args.securityGroupIds : undefined;
            resourceInputs["serviceNetworkIdentifier"] = args ? args.serviceNetworkIdentifier : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vpcIdentifier"] = args ? args.vpcIdentifier : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServiceNetworkVpcAssociation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServiceNetworkVpcAssociation resources.
 */
export interface ServiceNetworkVpcAssociationState {
    /**
     * The ARN of the Association.
     */
    arn?: pulumi.Input<string>;
    /**
     * The account that created the association.
     */
    createdBy?: pulumi.Input<string>;
    /**
     * The IDs of the security groups.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID or Amazon Resource Identifier (ARN) of the service network. You must use the ARN if the resources specified in the operation are in different accounts.
     * The following arguments are optional:
     */
    serviceNetworkIdentifier?: pulumi.Input<string>;
    /**
     * The operations status. Valid Values are CREATE_IN_PROGRESS | ACTIVE | DELETE_IN_PROGRESS | CREATE_FAILED | DELETE_FAILED
     */
    status?: pulumi.Input<string>;
    /**
     * Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The ID of the VPC.
     */
    vpcIdentifier?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ServiceNetworkVpcAssociation resource.
 */
export interface ServiceNetworkVpcAssociationArgs {
    /**
     * The IDs of the security groups.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID or Amazon Resource Identifier (ARN) of the service network. You must use the ARN if the resources specified in the operation are in different accounts.
     * The following arguments are optional:
     */
    serviceNetworkIdentifier: pulumi.Input<string>;
    /**
     * Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The ID of the VPC.
     */
    vpcIdentifier: pulumi.Input<string>;
}
