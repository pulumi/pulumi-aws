// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS VPC Lattice Listener.
 *
 * ## Example Usage
 * ### Forward action
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.vpclattice.Service("test", {});
 * const exampleTargetGroup = new aws.vpclattice.TargetGroup("exampleTargetGroup", {
 *     type: "INSTANCE",
 *     config: {
 *         port: 80,
 *         protocol: "HTTP",
 *         vpcIdentifier: aws_vpc.test.id,
 *     },
 * });
 * const exampleListener = new aws.vpclattice.Listener("exampleListener", {
 *     protocol: "HTTP",
 *     serviceIdentifier: aws_vpclattice_service.example.id,
 *     defaultAction: {
 *         forwards: [{
 *             targetGroups: [{
 *                 targetGroupIdentifier: exampleTargetGroup.id,
 *             }],
 *         }],
 *     },
 * });
 * ```
 * ### Forward action with weighted target groups
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.vpclattice.Service("test", {});
 * const example1 = new aws.vpclattice.TargetGroup("example1", {
 *     type: "INSTANCE",
 *     config: {
 *         port: 80,
 *         protocol: "HTTP",
 *         vpcIdentifier: aws_vpc.test.id,
 *     },
 * });
 * const example2 = new aws.vpclattice.TargetGroup("example2", {
 *     type: "INSTANCE",
 *     config: {
 *         port: 8080,
 *         protocol: "HTTP",
 *         vpcIdentifier: aws_vpc.test.id,
 *     },
 * });
 * const example = new aws.vpclattice.Listener("example", {
 *     protocol: "HTTP",
 *     serviceIdentifier: aws_vpclattice_service.example.id,
 *     defaultAction: {
 *         forwards: [{
 *             targetGroups: [
 *                 {
 *                     targetGroupIdentifier: example1.id,
 *                     weight: 80,
 *                 },
 *                 {
 *                     targetGroupIdentifier: example2.id,
 *                     weight: 20,
 *                 },
 *             ],
 *         }],
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * VPC Lattice Listener can be imported by using the `listener_id` of the listener and the `id` of the VPC Lattice service combined with a `/` character, e.g.
 *
 * ```sh
 *  $ pulumi import aws:vpclattice/listener:Listener example svc-1a2b3c4d/listener-987654321
 * ```
 */
export class Listener extends pulumi.CustomResource {
    /**
     * Get an existing Listener resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ListenerState, opts?: pulumi.CustomResourceOptions): Listener {
        return new Listener(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:vpclattice/listener:Listener';

    /**
     * Returns true if the given object is an instance of Listener.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Listener {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Listener.__pulumiType;
    }

    /**
     * ARN of the listener.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Date and time that the listener was created, specified in ISO-8601 format.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Default action block for the default listener rule. Default action blocks are defined below.
     */
    public readonly defaultAction!: pulumi.Output<outputs.vpclattice.ListenerDefaultAction>;
    public /*out*/ readonly lastUpdatedAt!: pulumi.Output<string>;
    /**
     * Standalone ID of the listener, e.g. `listener-0a1b2c3d4e5f6g`.
     */
    public /*out*/ readonly listenerId!: pulumi.Output<string>;
    /**
     * Name of the listener. A listener name must be unique within a service. Valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Listener port. You can specify a value from 1 to 65535. If `port` is not specified and `protocol` is HTTP, the value will default to 80. If `port` is not specified and `protocol` is HTTPS, the value will default to 443.
     */
    public readonly port!: pulumi.Output<number>;
    /**
     * Protocol for the listener. Supported values are `HTTP` or `HTTPS`
     */
    public readonly protocol!: pulumi.Output<string>;
    /**
     * Amazon Resource Name (ARN) of the VPC Lattice service. You must include either the `serviceArn` or `serviceIdentifier` arguments.
     */
    public readonly serviceArn!: pulumi.Output<string>;
    /**
     * ID of the VPC Lattice service. You must include either the `serviceArn` or `serviceIdentifier` arguments.
     * > **NOTE:** You must specify one of the following arguments: `serviceArn` or `serviceIdentifier`.
     */
    public readonly serviceIdentifier!: pulumi.Output<string>;
    /**
     * A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly tagsAll!: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a Listener resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ListenerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ListenerArgs | ListenerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ListenerState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["defaultAction"] = state ? state.defaultAction : undefined;
            resourceInputs["lastUpdatedAt"] = state ? state.lastUpdatedAt : undefined;
            resourceInputs["listenerId"] = state ? state.listenerId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["serviceArn"] = state ? state.serviceArn : undefined;
            resourceInputs["serviceIdentifier"] = state ? state.serviceIdentifier : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
        } else {
            const args = argsOrState as ListenerArgs | undefined;
            if ((!args || args.defaultAction === undefined) && !opts.urn) {
                throw new Error("Missing required property 'defaultAction'");
            }
            if ((!args || args.protocol === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            resourceInputs["defaultAction"] = args ? args.defaultAction : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["serviceArn"] = args ? args.serviceArn : undefined;
            resourceInputs["serviceIdentifier"] = args ? args.serviceIdentifier : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tagsAll"] = args ? args.tagsAll : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["lastUpdatedAt"] = undefined /*out*/;
            resourceInputs["listenerId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Listener.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Listener resources.
 */
export interface ListenerState {
    /**
     * ARN of the listener.
     */
    arn?: pulumi.Input<string>;
    /**
     * Date and time that the listener was created, specified in ISO-8601 format.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Default action block for the default listener rule. Default action blocks are defined below.
     */
    defaultAction?: pulumi.Input<inputs.vpclattice.ListenerDefaultAction>;
    lastUpdatedAt?: pulumi.Input<string>;
    /**
     * Standalone ID of the listener, e.g. `listener-0a1b2c3d4e5f6g`.
     */
    listenerId?: pulumi.Input<string>;
    /**
     * Name of the listener. A listener name must be unique within a service. Valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.
     */
    name?: pulumi.Input<string>;
    /**
     * Listener port. You can specify a value from 1 to 65535. If `port` is not specified and `protocol` is HTTP, the value will default to 80. If `port` is not specified and `protocol` is HTTPS, the value will default to 443.
     */
    port?: pulumi.Input<number>;
    /**
     * Protocol for the listener. Supported values are `HTTP` or `HTTPS`
     */
    protocol?: pulumi.Input<string>;
    /**
     * Amazon Resource Name (ARN) of the VPC Lattice service. You must include either the `serviceArn` or `serviceIdentifier` arguments.
     */
    serviceArn?: pulumi.Input<string>;
    /**
     * ID of the VPC Lattice service. You must include either the `serviceArn` or `serviceIdentifier` arguments.
     * > **NOTE:** You must specify one of the following arguments: `serviceArn` or `serviceIdentifier`.
     */
    serviceIdentifier?: pulumi.Input<string>;
    /**
     * A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a Listener resource.
 */
export interface ListenerArgs {
    /**
     * Default action block for the default listener rule. Default action blocks are defined below.
     */
    defaultAction: pulumi.Input<inputs.vpclattice.ListenerDefaultAction>;
    /**
     * Name of the listener. A listener name must be unique within a service. Valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.
     */
    name?: pulumi.Input<string>;
    /**
     * Listener port. You can specify a value from 1 to 65535. If `port` is not specified and `protocol` is HTTP, the value will default to 80. If `port` is not specified and `protocol` is HTTPS, the value will default to 443.
     */
    port?: pulumi.Input<number>;
    /**
     * Protocol for the listener. Supported values are `HTTP` or `HTTPS`
     */
    protocol: pulumi.Input<string>;
    /**
     * Amazon Resource Name (ARN) of the VPC Lattice service. You must include either the `serviceArn` or `serviceIdentifier` arguments.
     */
    serviceArn?: pulumi.Input<string>;
    /**
     * ID of the VPC Lattice service. You must include either the `serviceArn` or `serviceIdentifier` arguments.
     * > **NOTE:** You must specify one of the following arguments: `serviceArn` or `serviceIdentifier`.
     */
    serviceIdentifier?: pulumi.Input<string>;
    /**
     * A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
