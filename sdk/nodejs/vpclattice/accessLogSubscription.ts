// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS VPC Lattice Service Network or Service Access log subscription.
 *
 * ## Example Usage
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.vpclattice.AccessLogSubscription("example", {
 *     resourceIdentifier: aws_vpclattice_service_network.example.id,
 *     destinationArn: aws_s3.bucket.arn,
 * });
 * ```
 *
 * ## Import
 *
 * terraform import {
 *
 *  to = aws_vpclattice_access_log_subscription.example
 *
 *  id = "rft-8012925589" } Using `pulumi import`, import VPC Lattice Access Log Subscription using the access log subscription ID. For exampleconsole % pulumi import aws_vpclattice_access_log_subscription.example rft-8012925589
 */
export class AccessLogSubscription extends pulumi.CustomResource {
    /**
     * Get an existing AccessLogSubscription resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccessLogSubscriptionState, opts?: pulumi.CustomResourceOptions): AccessLogSubscription {
        return new AccessLogSubscription(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:vpclattice/accessLogSubscription:AccessLogSubscription';

    /**
     * Returns true if the given object is an instance of AccessLogSubscription.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccessLogSubscription {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccessLogSubscription.__pulumiType;
    }

    /**
     * Amazon Resource Name (ARN) of the access log subscription.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Amazon Resource Name (ARN) of the log destination.
     */
    public readonly destinationArn!: pulumi.Output<string>;
    /**
     * Amazon Resource Name (ARN) of the service network or service.
     */
    public /*out*/ readonly resourceArn!: pulumi.Output<string>;
    /**
     * The ID or Amazon Resource Identifier (ARN) of the service network or service. You must use the ARN if the resources specified in the operation are in different accounts.
     */
    public readonly resourceIdentifier!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a AccessLogSubscription resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccessLogSubscriptionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccessLogSubscriptionArgs | AccessLogSubscriptionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccessLogSubscriptionState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["destinationArn"] = state ? state.destinationArn : undefined;
            resourceInputs["resourceArn"] = state ? state.resourceArn : undefined;
            resourceInputs["resourceIdentifier"] = state ? state.resourceIdentifier : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
        } else {
            const args = argsOrState as AccessLogSubscriptionArgs | undefined;
            if ((!args || args.destinationArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destinationArn'");
            }
            if ((!args || args.resourceIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceIdentifier'");
            }
            resourceInputs["destinationArn"] = args ? args.destinationArn : undefined;
            resourceInputs["resourceIdentifier"] = args ? args.resourceIdentifier : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["resourceArn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AccessLogSubscription.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AccessLogSubscription resources.
 */
export interface AccessLogSubscriptionState {
    /**
     * Amazon Resource Name (ARN) of the access log subscription.
     */
    arn?: pulumi.Input<string>;
    /**
     * Amazon Resource Name (ARN) of the log destination.
     */
    destinationArn?: pulumi.Input<string>;
    /**
     * Amazon Resource Name (ARN) of the service network or service.
     */
    resourceArn?: pulumi.Input<string>;
    /**
     * The ID or Amazon Resource Identifier (ARN) of the service network or service. You must use the ARN if the resources specified in the operation are in different accounts.
     */
    resourceIdentifier?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a AccessLogSubscription resource.
 */
export interface AccessLogSubscriptionArgs {
    /**
     * Amazon Resource Name (ARN) of the log destination.
     */
    destinationArn: pulumi.Input<string>;
    /**
     * The ID or Amazon Resource Identifier (ARN) of the service network or service. You must use the ARN if the resources specified in the operation are in different accounts.
     */
    resourceIdentifier: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
