// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getAddon(args: GetAddonArgs, opts?: pulumi.InvokeOptions): Promise<GetAddonResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:eks/getAddon:getAddon", {
        "addonName": args.addonName,
        "clusterName": args.clusterName,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getAddon.
 */
export interface GetAddonArgs {
    addonName: string;
    clusterName: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getAddon.
 */
export interface GetAddonResult {
    readonly addonName: string;
    readonly addonVersion: string;
    readonly arn: string;
    readonly clusterName: string;
    readonly configurationValues: string;
    readonly createdAt: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly modifiedAt: string;
    readonly serviceAccountRoleArn: string;
    readonly tags: {[key: string]: string};
}
export function getAddonOutput(args: GetAddonOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAddonResult> {
    return pulumi.output(args).apply((a: any) => getAddon(a, opts))
}

/**
 * A collection of arguments for invoking getAddon.
 */
export interface GetAddonOutputArgs {
    addonName: pulumi.Input<string>;
    clusterName: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
