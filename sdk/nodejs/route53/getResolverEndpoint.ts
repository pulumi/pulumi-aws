// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getResolverEndpoint(args?: GetResolverEndpointArgs, opts?: pulumi.InvokeOptions): Promise<GetResolverEndpointResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:route53/getResolverEndpoint:getResolverEndpoint", {
        "filters": args.filters,
        "resolverEndpointId": args.resolverEndpointId,
    }, opts);
}

/**
 * A collection of arguments for invoking getResolverEndpoint.
 */
export interface GetResolverEndpointArgs {
    filters?: inputs.route53.GetResolverEndpointFilter[];
    resolverEndpointId?: string;
}

/**
 * A collection of values returned by getResolverEndpoint.
 */
export interface GetResolverEndpointResult {
    readonly arn: string;
    readonly direction: string;
    readonly filters?: outputs.route53.GetResolverEndpointFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ipAddresses: string[];
    readonly name: string;
    readonly resolverEndpointId?: string;
    readonly status: string;
    readonly vpcId: string;
}
export function getResolverEndpointOutput(args?: GetResolverEndpointOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetResolverEndpointResult> {
    return pulumi.output(args).apply((a: any) => getResolverEndpoint(a, opts))
}

/**
 * A collection of arguments for invoking getResolverEndpoint.
 */
export interface GetResolverEndpointOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.route53.GetResolverEndpointFilterArgs>[]>;
    resolverEndpointId?: pulumi.Input<string>;
}
