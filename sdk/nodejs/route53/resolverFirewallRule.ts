// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class ResolverFirewallRule extends pulumi.CustomResource {
    /**
     * Get an existing ResolverFirewallRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResolverFirewallRuleState, opts?: pulumi.CustomResourceOptions): ResolverFirewallRule {
        return new ResolverFirewallRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:route53/resolverFirewallRule:ResolverFirewallRule';

    /**
     * Returns true if the given object is an instance of ResolverFirewallRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ResolverFirewallRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ResolverFirewallRule.__pulumiType;
    }

    public readonly action!: pulumi.Output<string>;
    public readonly blockOverrideDnsType!: pulumi.Output<string | undefined>;
    public readonly blockOverrideDomain!: pulumi.Output<string | undefined>;
    public readonly blockOverrideTtl!: pulumi.Output<number | undefined>;
    public readonly blockResponse!: pulumi.Output<string | undefined>;
    public readonly firewallDomainListId!: pulumi.Output<string>;
    public readonly firewallRuleGroupId!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly priority!: pulumi.Output<number>;

    /**
     * Create a ResolverFirewallRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResolverFirewallRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ResolverFirewallRuleArgs | ResolverFirewallRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ResolverFirewallRuleState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["blockOverrideDnsType"] = state ? state.blockOverrideDnsType : undefined;
            resourceInputs["blockOverrideDomain"] = state ? state.blockOverrideDomain : undefined;
            resourceInputs["blockOverrideTtl"] = state ? state.blockOverrideTtl : undefined;
            resourceInputs["blockResponse"] = state ? state.blockResponse : undefined;
            resourceInputs["firewallDomainListId"] = state ? state.firewallDomainListId : undefined;
            resourceInputs["firewallRuleGroupId"] = state ? state.firewallRuleGroupId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
        } else {
            const args = argsOrState as ResolverFirewallRuleArgs | undefined;
            if ((!args || args.action === undefined) && !opts.urn) {
                throw new Error("Missing required property 'action'");
            }
            if ((!args || args.firewallDomainListId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'firewallDomainListId'");
            }
            if ((!args || args.firewallRuleGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'firewallRuleGroupId'");
            }
            if ((!args || args.priority === undefined) && !opts.urn) {
                throw new Error("Missing required property 'priority'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["blockOverrideDnsType"] = args ? args.blockOverrideDnsType : undefined;
            resourceInputs["blockOverrideDomain"] = args ? args.blockOverrideDomain : undefined;
            resourceInputs["blockOverrideTtl"] = args ? args.blockOverrideTtl : undefined;
            resourceInputs["blockResponse"] = args ? args.blockResponse : undefined;
            resourceInputs["firewallDomainListId"] = args ? args.firewallDomainListId : undefined;
            resourceInputs["firewallRuleGroupId"] = args ? args.firewallRuleGroupId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ResolverFirewallRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ResolverFirewallRule resources.
 */
export interface ResolverFirewallRuleState {
    action?: pulumi.Input<string>;
    blockOverrideDnsType?: pulumi.Input<string>;
    blockOverrideDomain?: pulumi.Input<string>;
    blockOverrideTtl?: pulumi.Input<number>;
    blockResponse?: pulumi.Input<string>;
    firewallDomainListId?: pulumi.Input<string>;
    firewallRuleGroupId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    priority?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ResolverFirewallRule resource.
 */
export interface ResolverFirewallRuleArgs {
    action: pulumi.Input<string>;
    blockOverrideDnsType?: pulumi.Input<string>;
    blockOverrideDomain?: pulumi.Input<string>;
    blockOverrideTtl?: pulumi.Input<number>;
    blockResponse?: pulumi.Input<string>;
    firewallDomainListId: pulumi.Input<string>;
    firewallRuleGroupId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    priority: pulumi.Input<number>;
}
