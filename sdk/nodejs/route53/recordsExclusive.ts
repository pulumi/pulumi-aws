// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * Using `pulumi import`, import Route 53 Records Exclusive using the `zone_id`. For example:
 *
 * ```sh
 * $ pulumi import aws:route53/recordsExclusive:RecordsExclusive example ABCD1234
 * ```
 */
export class RecordsExclusive extends pulumi.CustomResource {
    /**
     * Get an existing RecordsExclusive resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RecordsExclusiveState, opts?: pulumi.CustomResourceOptions): RecordsExclusive {
        return new RecordsExclusive(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:route53/recordsExclusive:RecordsExclusive';

    /**
     * Returns true if the given object is an instance of RecordsExclusive.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RecordsExclusive {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RecordsExclusive.__pulumiType;
    }

    /**
     * A list of all resource record sets associated with the hosted zone.
     * See `resourceRecordSet` below.
     */
    public readonly resourceRecordSets!: pulumi.Output<outputs.route53.RecordsExclusiveResourceRecordSet[] | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.route53.RecordsExclusiveTimeouts | undefined>;
    /**
     * ID of the hosted zone containing the resource record sets.
     *
     * The following arguments are optional:
     */
    public readonly zoneId!: pulumi.Output<string>;

    /**
     * Create a RecordsExclusive resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RecordsExclusiveArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RecordsExclusiveArgs | RecordsExclusiveState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RecordsExclusiveState | undefined;
            resourceInputs["resourceRecordSets"] = state ? state.resourceRecordSets : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as RecordsExclusiveArgs | undefined;
            if ((!args || args.zoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["resourceRecordSets"] = args ? args.resourceRecordSets : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RecordsExclusive.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RecordsExclusive resources.
 */
export interface RecordsExclusiveState {
    /**
     * A list of all resource record sets associated with the hosted zone.
     * See `resourceRecordSet` below.
     */
    resourceRecordSets?: pulumi.Input<pulumi.Input<inputs.route53.RecordsExclusiveResourceRecordSet>[]>;
    timeouts?: pulumi.Input<inputs.route53.RecordsExclusiveTimeouts>;
    /**
     * ID of the hosted zone containing the resource record sets.
     *
     * The following arguments are optional:
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RecordsExclusive resource.
 */
export interface RecordsExclusiveArgs {
    /**
     * A list of all resource record sets associated with the hosted zone.
     * See `resourceRecordSet` below.
     */
    resourceRecordSets?: pulumi.Input<pulumi.Input<inputs.route53.RecordsExclusiveResourceRecordSet>[]>;
    timeouts?: pulumi.Input<inputs.route53.RecordsExclusiveTimeouts>;
    /**
     * ID of the hosted zone containing the resource record sets.
     *
     * The following arguments are optional:
     */
    zoneId: pulumi.Input<string>;
}
