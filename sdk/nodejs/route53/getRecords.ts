// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Use this data source to get the details of resource records in a Route 53 hosted zone.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * Return all records in the zone.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const selected = aws.route53.getZone({
 *     name: "test.com.",
 *     privateZone: true,
 * });
 * const example = selected.then(selected => aws.route53.getRecords({
 *     zoneId: selected.zoneId,
 * }));
 * ```
 *
 * ### Basic Usage with filter
 *
 * Return the records that starts with `www`.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const selected = aws.route53.getZone({
 *     name: "test.com.",
 *     privateZone: true,
 * });
 * const example = selected.then(selected => aws.route53.getRecords({
 *     zoneId: selected.zoneId,
 *     nameRegex: "^www",
 * }));
 * ```
 */
export function getRecords(args: GetRecordsArgs, opts?: pulumi.InvokeOptions): Promise<GetRecordsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:route53/getRecords:getRecords", {
        "nameRegex": args.nameRegex,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRecords.
 */
export interface GetRecordsArgs {
    /**
     * Regex string to apply to the resource record names returned by AWS.
     */
    nameRegex?: string;
    /**
     * The ID of the hosted zone that contains the resource record sets that you want to list.
     */
    zoneId: string;
}

/**
 * A collection of values returned by getRecords.
 */
export interface GetRecordsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly nameRegex?: string;
    /**
     * The resource records sets.
     */
    readonly resourceRecordSets: outputs.route53.GetRecordsResourceRecordSet[];
    readonly zoneId: string;
}
/**
 * Use this data source to get the details of resource records in a Route 53 hosted zone.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * Return all records in the zone.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const selected = aws.route53.getZone({
 *     name: "test.com.",
 *     privateZone: true,
 * });
 * const example = selected.then(selected => aws.route53.getRecords({
 *     zoneId: selected.zoneId,
 * }));
 * ```
 *
 * ### Basic Usage with filter
 *
 * Return the records that starts with `www`.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const selected = aws.route53.getZone({
 *     name: "test.com.",
 *     privateZone: true,
 * });
 * const example = selected.then(selected => aws.route53.getRecords({
 *     zoneId: selected.zoneId,
 *     nameRegex: "^www",
 * }));
 * ```
 */
export function getRecordsOutput(args: GetRecordsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRecordsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws:route53/getRecords:getRecords", {
        "nameRegex": args.nameRegex,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRecords.
 */
export interface GetRecordsOutputArgs {
    /**
     * Regex string to apply to the resource record names returned by AWS.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * The ID of the hosted zone that contains the resource record sets that you want to list.
     */
    zoneId: pulumi.Input<string>;
}
