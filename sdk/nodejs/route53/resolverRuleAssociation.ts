// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Route53 Resolver rule association.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.route53.ResolverRuleAssociation("example", {
 *     resolverRuleId: sys.id,
 *     vpcId: foo.id,
 * });
 * ```
 *
 * ## Import
 *
 * ### Identity Schema
 *
 * #### Required
 *
 * * `id` - (String) ID of the Route53 Resolver rule association.
 *
 * #### Optional
 *
 * - `account_id` (String) AWS Account where this resource is managed.
 *
 * - `region` (String) Region where this resource is managed.
 *
 * Using `pulumi import`, import Route53 Resolver rule associations using the `id`. For example:
 *
 * console
 *
 * % pulumi import aws_route53_resolver_rule_association.example rslvr-rrassoc-97242eaf88example
 */
export class ResolverRuleAssociation extends pulumi.CustomResource {
    /**
     * Get an existing ResolverRuleAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResolverRuleAssociationState, opts?: pulumi.CustomResourceOptions): ResolverRuleAssociation {
        return new ResolverRuleAssociation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:route53/resolverRuleAssociation:ResolverRuleAssociation';

    /**
     * Returns true if the given object is an instance of ResolverRuleAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ResolverRuleAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ResolverRuleAssociation.__pulumiType;
    }

    /**
     * A name for the association that you're creating between a resolver rule and a VPC.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * The ID of the resolver rule that you want to associate with the VPC.
     */
    declare public readonly resolverRuleId: pulumi.Output<string>;
    /**
     * The ID of the VPC that you want to associate the resolver rule with.
     */
    declare public readonly vpcId: pulumi.Output<string>;

    /**
     * Create a ResolverRuleAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResolverRuleAssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ResolverRuleAssociationArgs | ResolverRuleAssociationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ResolverRuleAssociationState | undefined;
            resourceInputs["name"] = state?.name;
            resourceInputs["region"] = state?.region;
            resourceInputs["resolverRuleId"] = state?.resolverRuleId;
            resourceInputs["vpcId"] = state?.vpcId;
        } else {
            const args = argsOrState as ResolverRuleAssociationArgs | undefined;
            if (args?.resolverRuleId === undefined && !opts.urn) {
                throw new Error("Missing required property 'resolverRuleId'");
            }
            if (args?.vpcId === undefined && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["name"] = args?.name;
            resourceInputs["region"] = args?.region;
            resourceInputs["resolverRuleId"] = args?.resolverRuleId;
            resourceInputs["vpcId"] = args?.vpcId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ResolverRuleAssociation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ResolverRuleAssociation resources.
 */
export interface ResolverRuleAssociationState {
    /**
     * A name for the association that you're creating between a resolver rule and a VPC.
     */
    name?: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * The ID of the resolver rule that you want to associate with the VPC.
     */
    resolverRuleId?: pulumi.Input<string>;
    /**
     * The ID of the VPC that you want to associate the resolver rule with.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ResolverRuleAssociation resource.
 */
export interface ResolverRuleAssociationArgs {
    /**
     * A name for the association that you're creating between a resolver rule and a VPC.
     */
    name?: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * The ID of the resolver rule that you want to associate with the VPC.
     */
    resolverRuleId: pulumi.Input<string>;
    /**
     * The ID of the VPC that you want to associate the resolver rule with.
     */
    vpcId: pulumi.Input<string>;
}
