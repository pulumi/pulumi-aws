// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Route53 CIDR collection resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.route53.CidrCollection("example", {});
 * ```
 *
 * ## Import
 *
 * terraform import {
 *
 *  to = aws_route53_cidr_collection.example
 *
 *  id = "9ac32814-3e67-0932-6048-8d779cc6f511" } Using `pulumi import`, import CIDR collections using their ID. For exampleconsole % pulumi import aws_route53_cidr_collection.example 9ac32814-3e67-0932-6048-8d779cc6f511
 */
export class CidrCollection extends pulumi.CustomResource {
    /**
     * Get an existing CidrCollection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CidrCollectionState, opts?: pulumi.CustomResourceOptions): CidrCollection {
        return new CidrCollection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:route53/cidrCollection:CidrCollection';

    /**
     * Returns true if the given object is an instance of CidrCollection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CidrCollection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CidrCollection.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the CIDR collection.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Unique name for the CIDR collection.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The lastest version of the CIDR collection.
     */
    public /*out*/ readonly version!: pulumi.Output<number>;

    /**
     * Create a CidrCollection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: CidrCollectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CidrCollectionArgs | CidrCollectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CidrCollectionState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as CidrCollectionArgs | undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CidrCollection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CidrCollection resources.
 */
export interface CidrCollectionState {
    /**
     * The Amazon Resource Name (ARN) of the CIDR collection.
     */
    arn?: pulumi.Input<string>;
    /**
     * Unique name for the CIDR collection.
     */
    name?: pulumi.Input<string>;
    /**
     * The lastest version of the CIDR collection.
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a CidrCollection resource.
 */
export interface CidrCollectionArgs {
    /**
     * Unique name for the CIDR collection.
     */
    name?: pulumi.Input<string>;
}
