// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ByteMatchSetArgs, ByteMatchSetState } from "./byteMatchSet";
export type ByteMatchSet = import("./byteMatchSet").ByteMatchSet;
export const ByteMatchSet: typeof import("./byteMatchSet").ByteMatchSet = null as any;
utilities.lazyLoad(exports, ["ByteMatchSet"], () => require("./byteMatchSet"));

export { GeoMatchSetArgs, GeoMatchSetState } from "./geoMatchSet";
export type GeoMatchSet = import("./geoMatchSet").GeoMatchSet;
export const GeoMatchSet: typeof import("./geoMatchSet").GeoMatchSet = null as any;
utilities.lazyLoad(exports, ["GeoMatchSet"], () => require("./geoMatchSet"));

export { GetIpsetArgs, GetIpsetResult, GetIpsetOutputArgs } from "./getIpset";
export const getIpset: typeof import("./getIpset").getIpset = null as any;
export const getIpsetOutput: typeof import("./getIpset").getIpsetOutput = null as any;
utilities.lazyLoad(exports, ["getIpset","getIpsetOutput"], () => require("./getIpset"));

export { GetRateBasedModArgs, GetRateBasedModResult, GetRateBasedModOutputArgs } from "./getRateBasedMod";
export const getRateBasedMod: typeof import("./getRateBasedMod").getRateBasedMod = null as any;
export const getRateBasedModOutput: typeof import("./getRateBasedMod").getRateBasedModOutput = null as any;
utilities.lazyLoad(exports, ["getRateBasedMod","getRateBasedModOutput"], () => require("./getRateBasedMod"));

export { GetRuleArgs, GetRuleResult, GetRuleOutputArgs } from "./getRule";
export const getRule: typeof import("./getRule").getRule = null as any;
export const getRuleOutput: typeof import("./getRule").getRuleOutput = null as any;
utilities.lazyLoad(exports, ["getRule","getRuleOutput"], () => require("./getRule"));

export { GetSubscribedRuleGroupArgs, GetSubscribedRuleGroupResult, GetSubscribedRuleGroupOutputArgs } from "./getSubscribedRuleGroup";
export const getSubscribedRuleGroup: typeof import("./getSubscribedRuleGroup").getSubscribedRuleGroup = null as any;
export const getSubscribedRuleGroupOutput: typeof import("./getSubscribedRuleGroup").getSubscribedRuleGroupOutput = null as any;
utilities.lazyLoad(exports, ["getSubscribedRuleGroup","getSubscribedRuleGroupOutput"], () => require("./getSubscribedRuleGroup"));

export { GetWebAclArgs, GetWebAclResult, GetWebAclOutputArgs } from "./getWebAcl";
export const getWebAcl: typeof import("./getWebAcl").getWebAcl = null as any;
export const getWebAclOutput: typeof import("./getWebAcl").getWebAclOutput = null as any;
utilities.lazyLoad(exports, ["getWebAcl","getWebAclOutput"], () => require("./getWebAcl"));

export { IpSetArgs, IpSetState } from "./ipSet";
export type IpSet = import("./ipSet").IpSet;
export const IpSet: typeof import("./ipSet").IpSet = null as any;
utilities.lazyLoad(exports, ["IpSet"], () => require("./ipSet"));

export { RateBasedRuleArgs, RateBasedRuleState } from "./rateBasedRule";
export type RateBasedRule = import("./rateBasedRule").RateBasedRule;
export const RateBasedRule: typeof import("./rateBasedRule").RateBasedRule = null as any;
utilities.lazyLoad(exports, ["RateBasedRule"], () => require("./rateBasedRule"));

export { RegexMatchSetArgs, RegexMatchSetState } from "./regexMatchSet";
export type RegexMatchSet = import("./regexMatchSet").RegexMatchSet;
export const RegexMatchSet: typeof import("./regexMatchSet").RegexMatchSet = null as any;
utilities.lazyLoad(exports, ["RegexMatchSet"], () => require("./regexMatchSet"));

export { RegexPatternSetArgs, RegexPatternSetState } from "./regexPatternSet";
export type RegexPatternSet = import("./regexPatternSet").RegexPatternSet;
export const RegexPatternSet: typeof import("./regexPatternSet").RegexPatternSet = null as any;
utilities.lazyLoad(exports, ["RegexPatternSet"], () => require("./regexPatternSet"));

export { RuleArgs, RuleState } from "./rule";
export type Rule = import("./rule").Rule;
export const Rule: typeof import("./rule").Rule = null as any;
utilities.lazyLoad(exports, ["Rule"], () => require("./rule"));

export { RuleGroupArgs, RuleGroupState } from "./ruleGroup";
export type RuleGroup = import("./ruleGroup").RuleGroup;
export const RuleGroup: typeof import("./ruleGroup").RuleGroup = null as any;
utilities.lazyLoad(exports, ["RuleGroup"], () => require("./ruleGroup"));

export { SizeConstraintSetArgs, SizeConstraintSetState } from "./sizeConstraintSet";
export type SizeConstraintSet = import("./sizeConstraintSet").SizeConstraintSet;
export const SizeConstraintSet: typeof import("./sizeConstraintSet").SizeConstraintSet = null as any;
utilities.lazyLoad(exports, ["SizeConstraintSet"], () => require("./sizeConstraintSet"));

export { SqlInjectionMatchSetArgs, SqlInjectionMatchSetState } from "./sqlInjectionMatchSet";
export type SqlInjectionMatchSet = import("./sqlInjectionMatchSet").SqlInjectionMatchSet;
export const SqlInjectionMatchSet: typeof import("./sqlInjectionMatchSet").SqlInjectionMatchSet = null as any;
utilities.lazyLoad(exports, ["SqlInjectionMatchSet"], () => require("./sqlInjectionMatchSet"));

export { WebAclArgs, WebAclState } from "./webAcl";
export type WebAcl = import("./webAcl").WebAcl;
export const WebAcl: typeof import("./webAcl").WebAcl = null as any;
utilities.lazyLoad(exports, ["WebAcl"], () => require("./webAcl"));

export { WebAclAssociationArgs, WebAclAssociationState } from "./webAclAssociation";
export type WebAclAssociation = import("./webAclAssociation").WebAclAssociation;
export const WebAclAssociation: typeof import("./webAclAssociation").WebAclAssociation = null as any;
utilities.lazyLoad(exports, ["WebAclAssociation"], () => require("./webAclAssociation"));

export { XssMatchSetArgs, XssMatchSetState } from "./xssMatchSet";
export type XssMatchSet = import("./xssMatchSet").XssMatchSet;
export const XssMatchSet: typeof import("./xssMatchSet").XssMatchSet = null as any;
utilities.lazyLoad(exports, ["XssMatchSet"], () => require("./xssMatchSet"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws:wafregional/byteMatchSet:ByteMatchSet":
                return new ByteMatchSet(name, <any>undefined, { urn })
            case "aws:wafregional/geoMatchSet:GeoMatchSet":
                return new GeoMatchSet(name, <any>undefined, { urn })
            case "aws:wafregional/ipSet:IpSet":
                return new IpSet(name, <any>undefined, { urn })
            case "aws:wafregional/rateBasedRule:RateBasedRule":
                return new RateBasedRule(name, <any>undefined, { urn })
            case "aws:wafregional/regexMatchSet:RegexMatchSet":
                return new RegexMatchSet(name, <any>undefined, { urn })
            case "aws:wafregional/regexPatternSet:RegexPatternSet":
                return new RegexPatternSet(name, <any>undefined, { urn })
            case "aws:wafregional/rule:Rule":
                return new Rule(name, <any>undefined, { urn })
            case "aws:wafregional/ruleGroup:RuleGroup":
                return new RuleGroup(name, <any>undefined, { urn })
            case "aws:wafregional/sizeConstraintSet:SizeConstraintSet":
                return new SizeConstraintSet(name, <any>undefined, { urn })
            case "aws:wafregional/sqlInjectionMatchSet:SqlInjectionMatchSet":
                return new SqlInjectionMatchSet(name, <any>undefined, { urn })
            case "aws:wafregional/webAcl:WebAcl":
                return new WebAcl(name, <any>undefined, { urn })
            case "aws:wafregional/webAclAssociation:WebAclAssociation":
                return new WebAclAssociation(name, <any>undefined, { urn })
            case "aws:wafregional/xssMatchSet:XssMatchSet":
                return new XssMatchSet(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "wafregional/byteMatchSet", _module)
pulumi.runtime.registerResourceModule("aws", "wafregional/geoMatchSet", _module)
pulumi.runtime.registerResourceModule("aws", "wafregional/ipSet", _module)
pulumi.runtime.registerResourceModule("aws", "wafregional/rateBasedRule", _module)
pulumi.runtime.registerResourceModule("aws", "wafregional/regexMatchSet", _module)
pulumi.runtime.registerResourceModule("aws", "wafregional/regexPatternSet", _module)
pulumi.runtime.registerResourceModule("aws", "wafregional/rule", _module)
pulumi.runtime.registerResourceModule("aws", "wafregional/ruleGroup", _module)
pulumi.runtime.registerResourceModule("aws", "wafregional/sizeConstraintSet", _module)
pulumi.runtime.registerResourceModule("aws", "wafregional/sqlInjectionMatchSet", _module)
pulumi.runtime.registerResourceModule("aws", "wafregional/webAcl", _module)
pulumi.runtime.registerResourceModule("aws", "wafregional/webAclAssociation", _module)
pulumi.runtime.registerResourceModule("aws", "wafregional/xssMatchSet", _module)
