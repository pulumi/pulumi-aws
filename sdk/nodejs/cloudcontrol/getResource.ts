// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides details for a Cloud Control API Resource. The reading of these resources is proxied through Cloud Control API handlers to the backend service.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = pulumi.output(aws.cloudcontrol.getResource({
 *     identifier: "example",
 *     typeName: "AWS::ECS::Cluster",
 * }));
 * ```
 */
export function getResource(args: GetResourceArgs, opts?: pulumi.InvokeOptions): Promise<GetResourceResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("aws:cloudcontrol/getResource:getResource", {
        "identifier": args.identifier,
        "roleArn": args.roleArn,
        "typeName": args.typeName,
        "typeVersionId": args.typeVersionId,
    }, opts);
}

/**
 * A collection of arguments for invoking getResource.
 */
export interface GetResourceArgs {
    /**
     * Identifier of the CloudFormation resource type. For example, `vpc-12345678`.
     */
    identifier: string;
    /**
     * Amazon Resource Name (ARN) of the IAM Role to assume for operations.
     */
    roleArn?: string;
    /**
     * CloudFormation resource type name. For example, `AWS::EC2::VPC`.
     */
    typeName: string;
    /**
     * Identifier of the CloudFormation resource type version.
     */
    typeVersionId?: string;
}

/**
 * A collection of values returned by getResource.
 */
export interface GetResourceResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly identifier: string;
    /**
     * JSON string matching the CloudFormation resource type schema with current configuration.
     */
    readonly properties: string;
    readonly roleArn?: string;
    readonly typeName: string;
    readonly typeVersionId?: string;
}

export function getResourceOutput(args: GetResourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetResourceResult> {
    return pulumi.output(args).apply(a => getResource(a, opts))
}

/**
 * A collection of arguments for invoking getResource.
 */
export interface GetResourceOutputArgs {
    /**
     * Identifier of the CloudFormation resource type. For example, `vpc-12345678`.
     */
    identifier: pulumi.Input<string>;
    /**
     * Amazon Resource Name (ARN) of the IAM Role to assume for operations.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * CloudFormation resource type name. For example, `AWS::EC2::VPC`.
     */
    typeName: pulumi.Input<string>;
    /**
     * Identifier of the CloudFormation resource type version.
     */
    typeVersionId?: pulumi.Input<string>;
}
