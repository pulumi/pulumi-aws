// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS Security Lake Subscriber.
 *
 * ## Import
 *
 * Using `pulumi import`, import Security Lake subscriber using the subscriber ID. For example:
 *
 * ```sh
 * $ pulumi import aws:securitylake/subscriber:Subscriber example 9f3bfe79-d543-474d-a93c-f3846805d208
 * ```
 */
export class Subscriber extends pulumi.CustomResource {
    /**
     * Get an existing Subscriber resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SubscriberState, opts?: pulumi.CustomResourceOptions): Subscriber {
        return new Subscriber(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:securitylake/subscriber:Subscriber';

    /**
     * Returns true if the given object is an instance of Subscriber.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Subscriber {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Subscriber.__pulumiType;
    }

    public readonly accessType!: pulumi.Output<string>;
    /**
     * ARN of the Data Lake.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) which uniquely defines the AWS RAM resource share. Before accepting the RAM resource share invitation, you can view details related to the RAM resource share.
     */
    public /*out*/ readonly resourceShareArn!: pulumi.Output<string>;
    /**
     * The name of the resource share.
     */
    public /*out*/ readonly resourceShareName!: pulumi.Output<string>;
    /**
     * The ARN of the IAM role to be used by the entity putting logs into your custom source partition.
     */
    public /*out*/ readonly roleArn!: pulumi.Output<string>;
    /**
     * The ARN for the Amazon Security Lake Amazon S3 bucket.
     */
    public /*out*/ readonly s3BucketArn!: pulumi.Output<string>;
    /**
     * The supported AWS services from which logs and events are collected. Security Lake supports log and event collection for natively supported AWS services.
     */
    public readonly source!: pulumi.Output<outputs.securitylake.SubscriberSource | undefined>;
    /**
     * The description for your subscriber account in Security Lake.
     */
    public readonly subscriberDescription!: pulumi.Output<string | undefined>;
    /**
     * The subscriber endpoint to which exception messages are posted.
     */
    public /*out*/ readonly subscriberEndpoint!: pulumi.Output<string>;
    /**
     * The AWS identity used to access your data.
     */
    public readonly subscriberIdentity!: pulumi.Output<outputs.securitylake.SubscriberSubscriberIdentity | undefined>;
    /**
     * The name of your Security Lake subscriber account.
     */
    public readonly subscriberName!: pulumi.Output<string | undefined>;
    /**
     * The subscriber status of the Amazon Security Lake subscriber account.
     */
    public /*out*/ readonly subscriberStatus!: pulumi.Output<string>;
    /**
     * Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     *
     * @deprecated Please use `tags` instead.
     */
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.securitylake.SubscriberTimeouts | undefined>;

    /**
     * Create a Subscriber resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SubscriberArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SubscriberArgs | SubscriberState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SubscriberState | undefined;
            resourceInputs["accessType"] = state ? state.accessType : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["resourceShareArn"] = state ? state.resourceShareArn : undefined;
            resourceInputs["resourceShareName"] = state ? state.resourceShareName : undefined;
            resourceInputs["roleArn"] = state ? state.roleArn : undefined;
            resourceInputs["s3BucketArn"] = state ? state.s3BucketArn : undefined;
            resourceInputs["source"] = state ? state.source : undefined;
            resourceInputs["subscriberDescription"] = state ? state.subscriberDescription : undefined;
            resourceInputs["subscriberEndpoint"] = state ? state.subscriberEndpoint : undefined;
            resourceInputs["subscriberIdentity"] = state ? state.subscriberIdentity : undefined;
            resourceInputs["subscriberName"] = state ? state.subscriberName : undefined;
            resourceInputs["subscriberStatus"] = state ? state.subscriberStatus : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as SubscriberArgs | undefined;
            resourceInputs["accessType"] = args ? args.accessType : undefined;
            resourceInputs["source"] = args ? args.source : undefined;
            resourceInputs["subscriberDescription"] = args ? args.subscriberDescription : undefined;
            resourceInputs["subscriberIdentity"] = args ? args.subscriberIdentity : undefined;
            resourceInputs["subscriberName"] = args ? args.subscriberName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["resourceShareArn"] = undefined /*out*/;
            resourceInputs["resourceShareName"] = undefined /*out*/;
            resourceInputs["roleArn"] = undefined /*out*/;
            resourceInputs["s3BucketArn"] = undefined /*out*/;
            resourceInputs["subscriberEndpoint"] = undefined /*out*/;
            resourceInputs["subscriberStatus"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Subscriber.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Subscriber resources.
 */
export interface SubscriberState {
    accessType?: pulumi.Input<string>;
    /**
     * ARN of the Data Lake.
     */
    arn?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) which uniquely defines the AWS RAM resource share. Before accepting the RAM resource share invitation, you can view details related to the RAM resource share.
     */
    resourceShareArn?: pulumi.Input<string>;
    /**
     * The name of the resource share.
     */
    resourceShareName?: pulumi.Input<string>;
    /**
     * The ARN of the IAM role to be used by the entity putting logs into your custom source partition.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * The ARN for the Amazon Security Lake Amazon S3 bucket.
     */
    s3BucketArn?: pulumi.Input<string>;
    /**
     * The supported AWS services from which logs and events are collected. Security Lake supports log and event collection for natively supported AWS services.
     */
    source?: pulumi.Input<inputs.securitylake.SubscriberSource>;
    /**
     * The description for your subscriber account in Security Lake.
     */
    subscriberDescription?: pulumi.Input<string>;
    /**
     * The subscriber endpoint to which exception messages are posted.
     */
    subscriberEndpoint?: pulumi.Input<string>;
    /**
     * The AWS identity used to access your data.
     */
    subscriberIdentity?: pulumi.Input<inputs.securitylake.SubscriberSubscriberIdentity>;
    /**
     * The name of your Security Lake subscriber account.
     */
    subscriberName?: pulumi.Input<string>;
    /**
     * The subscriber status of the Amazon Security Lake subscriber account.
     */
    subscriberStatus?: pulumi.Input<string>;
    /**
     * Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     *
     * @deprecated Please use `tags` instead.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.securitylake.SubscriberTimeouts>;
}

/**
 * The set of arguments for constructing a Subscriber resource.
 */
export interface SubscriberArgs {
    accessType?: pulumi.Input<string>;
    /**
     * The supported AWS services from which logs and events are collected. Security Lake supports log and event collection for natively supported AWS services.
     */
    source?: pulumi.Input<inputs.securitylake.SubscriberSource>;
    /**
     * The description for your subscriber account in Security Lake.
     */
    subscriberDescription?: pulumi.Input<string>;
    /**
     * The AWS identity used to access your data.
     */
    subscriberIdentity?: pulumi.Input<inputs.securitylake.SubscriberSubscriberIdentity>;
    /**
     * The name of your Security Lake subscriber account.
     */
    subscriberName?: pulumi.Input<string>;
    /**
     * Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.securitylake.SubscriberTimeouts>;
}
