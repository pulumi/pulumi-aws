// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getMountTarget(args?: GetMountTargetArgs, opts?: pulumi.InvokeOptions): Promise<GetMountTargetResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:efs/getMountTarget:getMountTarget", {
        "accessPointId": args.accessPointId,
        "fileSystemId": args.fileSystemId,
        "mountTargetId": args.mountTargetId,
    }, opts);
}

/**
 * A collection of arguments for invoking getMountTarget.
 */
export interface GetMountTargetArgs {
    accessPointId?: string;
    fileSystemId?: string;
    mountTargetId?: string;
}

/**
 * A collection of values returned by getMountTarget.
 */
export interface GetMountTargetResult {
    readonly accessPointId?: string;
    readonly availabilityZoneId: string;
    readonly availabilityZoneName: string;
    readonly dnsName: string;
    readonly fileSystemArn: string;
    readonly fileSystemId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ipAddress: string;
    readonly mountTargetDnsName: string;
    readonly mountTargetId: string;
    readonly networkInterfaceId: string;
    readonly ownerId: string;
    readonly securityGroups: string[];
    readonly subnetId: string;
}
export function getMountTargetOutput(args?: GetMountTargetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMountTargetResult> {
    return pulumi.output(args).apply((a: any) => getMountTarget(a, opts))
}

/**
 * A collection of arguments for invoking getMountTarget.
 */
export interface GetMountTargetOutputArgs {
    accessPointId?: pulumi.Input<string>;
    fileSystemId?: pulumi.Input<string>;
    mountTargetId?: pulumi.Input<string>;
}
