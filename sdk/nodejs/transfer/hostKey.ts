// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a host key for a server. This is an [_additional server host key_](https://docs.aws.amazon.com/transfer/latest/userguide/server-host-key-add.html).
 *
 * ## Example Usage
 *
 * ## Import
 *
 * Using `pulumi import`, import host keys using the `server_id` and `host_key_id` separated by `,`. For example:
 *
 * ```sh
 * $ pulumi import aws:transfer/hostKey:HostKey example s-12345678,key-12345
 * ```
 */
export class HostKey extends pulumi.CustomResource {
    /**
     * Get an existing HostKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HostKeyState, opts?: pulumi.CustomResourceOptions): HostKey {
        return new HostKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:transfer/hostKey:HostKey';

    /**
     * Returns true if the given object is an instance of HostKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HostKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HostKey.__pulumiType;
    }

    /**
     * Amazon Resource Name (ARN) of host key.
     */
    declare public /*out*/ readonly arn: pulumi.Output<string>;
    /**
     * Text description.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Private key portion of an SSH key pair.
     */
    declare public readonly hostKeyBody: pulumi.Output<string | undefined>;
    /**
     * Public key fingerprint.
     */
    declare public /*out*/ readonly hostKeyFingerprint: pulumi.Output<string>;
    /**
     * ID of the host key.
     */
    declare public /*out*/ readonly hostKeyId: pulumi.Output<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * Server ID.
     */
    declare public readonly serverId: pulumi.Output<string>;
    /**
     * A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    declare public /*out*/ readonly tagsAll: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a HostKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HostKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HostKeyArgs | HostKeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HostKeyState | undefined;
            resourceInputs["arn"] = state?.arn;
            resourceInputs["description"] = state?.description;
            resourceInputs["hostKeyBody"] = state?.hostKeyBody;
            resourceInputs["hostKeyFingerprint"] = state?.hostKeyFingerprint;
            resourceInputs["hostKeyId"] = state?.hostKeyId;
            resourceInputs["region"] = state?.region;
            resourceInputs["serverId"] = state?.serverId;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tagsAll"] = state?.tagsAll;
        } else {
            const args = argsOrState as HostKeyArgs | undefined;
            if (args?.serverId === undefined && !opts.urn) {
                throw new Error("Missing required property 'serverId'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["hostKeyBody"] = args?.hostKeyBody ? pulumi.secret(args.hostKeyBody) : undefined;
            resourceInputs["region"] = args?.region;
            resourceInputs["serverId"] = args?.serverId;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["hostKeyFingerprint"] = undefined /*out*/;
            resourceInputs["hostKeyId"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["hostKeyBody"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(HostKey.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering HostKey resources.
 */
export interface HostKeyState {
    /**
     * Amazon Resource Name (ARN) of host key.
     */
    arn?: pulumi.Input<string>;
    /**
     * Text description.
     */
    description?: pulumi.Input<string>;
    /**
     * Private key portion of an SSH key pair.
     */
    hostKeyBody?: pulumi.Input<string>;
    /**
     * Public key fingerprint.
     */
    hostKeyFingerprint?: pulumi.Input<string>;
    /**
     * ID of the host key.
     */
    hostKeyId?: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * Server ID.
     */
    serverId?: pulumi.Input<string>;
    /**
     * A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a HostKey resource.
 */
export interface HostKeyArgs {
    /**
     * Text description.
     */
    description?: pulumi.Input<string>;
    /**
     * Private key portion of an SSH key pair.
     */
    hostKeyBody?: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * Server ID.
     */
    serverId: pulumi.Input<string>;
    /**
     * A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
