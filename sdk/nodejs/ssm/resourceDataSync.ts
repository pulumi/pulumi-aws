// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a SSM resource data sync.
 * 
 * ## Example Usage
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const aws_s3_bucket_hoge = new aws.s3.Bucket("hoge", {
 *     bucket: "tf-test-bucket-1234",
 *     region: "us-east-1",
 * });
 * const aws_s3_bucket_policy_hoge = new aws.s3.BucketPolicy("hoge", {
 *     bucket: aws_s3_bucket_hoge.bucket,
 *     policy: "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"SSMBucketPermissionsCheck\",\n            \"Effect\": \"Allow\",\n            \"Principal\": {\n                \"Service\": \"ssm.amazonaws.com\"\n            },\n            \"Action\": \"s3:GetBucketAcl\",\n            \"Resource\": \"arn:aws:s3:::tf-test-bucket-1234\"\n        },\n        {\n            \"Sid\": \" SSMBucketDelivery\",\n            \"Effect\": \"Allow\",\n            \"Principal\": {\n                \"Service\": \"ssm.amazonaws.com\"\n            },\n            \"Action\": \"s3:PutObject\",\n            \"Resource\": [\"arn:aws:s3:::tf-test-bucket-1234/*\"],\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"s3:x-amz-acl\": \"bucket-owner-full-control\"\n                }\n            }\n        }\n    ]\n}\n",
 * });
 * const aws_ssm_resource_data_sync_foo = new aws.ssm.ResourceDataSync("foo", {
 *     name: "foo",
 *     s3Destination: {
 *         bucketName: aws_s3_bucket_hoge.bucket,
 *         region: aws_s3_bucket_hoge.region,
 *     },
 * });
 * ```
 */
export class ResourceDataSync extends pulumi.CustomResource {
    /**
     * Get an existing ResourceDataSync resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResourceDataSyncState, opts?: pulumi.CustomResourceOptions): ResourceDataSync {
        return new ResourceDataSync(name, <any>state, { ...opts, id: id });
    }

    /**
     * Name for the configuration.
     */
    public readonly name: pulumi.Output<string>;
    /**
     * Amazon S3 configuration details for the sync.
     */
    public readonly s3Destination: pulumi.Output<{ bucketName: string, kmsKeyArn?: string, prefix?: string, region: string, syncFormat?: string }>;

    /**
     * Create a ResourceDataSync resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResourceDataSyncArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ResourceDataSyncArgs | ResourceDataSyncState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: ResourceDataSyncState = argsOrState as ResourceDataSyncState | undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["s3Destination"] = state ? state.s3Destination : undefined;
        } else {
            const args = argsOrState as ResourceDataSyncArgs | undefined;
            if (!args || args.s3Destination === undefined) {
                throw new Error("Missing required property 's3Destination'");
            }
            inputs["name"] = args ? args.name : undefined;
            inputs["s3Destination"] = args ? args.s3Destination : undefined;
        }
        super("aws:ssm/resourceDataSync:ResourceDataSync", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ResourceDataSync resources.
 */
export interface ResourceDataSyncState {
    /**
     * Name for the configuration.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Amazon S3 configuration details for the sync.
     */
    readonly s3Destination?: pulumi.Input<{ bucketName: pulumi.Input<string>, kmsKeyArn?: pulumi.Input<string>, prefix?: pulumi.Input<string>, region: pulumi.Input<string>, syncFormat?: pulumi.Input<string> }>;
}

/**
 * The set of arguments for constructing a ResourceDataSync resource.
 */
export interface ResourceDataSyncArgs {
    /**
     * Name for the configuration.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Amazon S3 configuration details for the sync.
     */
    readonly s3Destination: pulumi.Input<{ bucketName: pulumi.Input<string>, kmsKeyArn?: pulumi.Input<string>, prefix?: pulumi.Input<string>, region: pulumi.Input<string>, syncFormat?: pulumi.Input<string> }>;
}
