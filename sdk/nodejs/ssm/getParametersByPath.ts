// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getParametersByPath(args: GetParametersByPathArgs, opts?: pulumi.InvokeOptions): Promise<GetParametersByPathResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:ssm/getParametersByPath:getParametersByPath", {
        "path": args.path,
        "recursive": args.recursive,
        "withDecryption": args.withDecryption,
    }, opts);
}

/**
 * A collection of arguments for invoking getParametersByPath.
 */
export interface GetParametersByPathArgs {
    /**
     * The hierarchy for the parameter. Hierarchies start with a forward slash (/). The hierarchy is the parameter name except the last part of the parameter. The last part of the parameter name can't be in the path. A parameter name hierarchy can have a maximum of 15 levels. **Note:** If the parameter name (e.g., `/my-app/my-param`) is specified, the data source will not retrieve any value as designed, unless there are other parameters that happen to use the former path in their hierarchy (e.g., `/my-app/my-param/my-actual-param`).
     */
    path: string;
    /**
     * Whether to retrieve all parameters within the hirerachy. Defaults to `false`.
     */
    recursive?: boolean;
    /**
     * Whether to retrieve all parameters in the hierarchy, particularly those of `SecureString` type, with their value decrypted. Defaults to `true`.
     */
    withDecryption?: boolean;
}

/**
 * A collection of values returned by getParametersByPath.
 */
export interface GetParametersByPathResult {
    /**
     * A list that contains the Amazon Resource Names (ARNs) of the retrieved parameters.
     */
    readonly arns: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list that contains the names of the retrieved parameters.
     */
    readonly names: string[];
    readonly path: string;
    readonly recursive?: boolean;
    /**
     * A list that contains the types (`String`, `StringList`, or `SecureString`) of retrieved parameters.
     */
    readonly types: string[];
    /**
     * A list that contains the retrieved parameter values. **Note:** This value is always marked as sensitive in the pulumi preview output, regardless of whether any retrieved parameters are of `SecureString` type. Use the `nonsensitive` function to override the behavior at your own risk and discretion, if you are certain that there are no sensitive values being retrieved.
     */
    readonly values: string[];
    readonly withDecryption?: boolean;
}
export function getParametersByPathOutput(args: GetParametersByPathOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetParametersByPathResult> {
    return pulumi.output(args).apply((a: any) => getParametersByPath(a, opts))
}

/**
 * A collection of arguments for invoking getParametersByPath.
 */
export interface GetParametersByPathOutputArgs {
    /**
     * The hierarchy for the parameter. Hierarchies start with a forward slash (/). The hierarchy is the parameter name except the last part of the parameter. The last part of the parameter name can't be in the path. A parameter name hierarchy can have a maximum of 15 levels. **Note:** If the parameter name (e.g., `/my-app/my-param`) is specified, the data source will not retrieve any value as designed, unless there are other parameters that happen to use the former path in their hierarchy (e.g., `/my-app/my-param/my-actual-param`).
     */
    path: pulumi.Input<string>;
    /**
     * Whether to retrieve all parameters within the hirerachy. Defaults to `false`.
     */
    recursive?: pulumi.Input<boolean>;
    /**
     * Whether to retrieve all parameters in the hierarchy, particularly those of `SecureString` type, with their value decrypted. Defaults to `true`.
     */
    withDecryption?: pulumi.Input<boolean>;
}
