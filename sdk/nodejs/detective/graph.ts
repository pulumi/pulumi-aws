// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage an [AWS Detective Graph](https://docs.aws.amazon.com/detective/latest/APIReference/API_CreateGraph.html). As an AWS account may own only one Detective graph per region, provisioning multiple Detective graphs requires a separate provider configuration for each graph.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.detective.Graph("example", {tags: {
 *     Name: "example-detective-graph",
 * }});
 * ```
 *
 * ## Import
 *
 * terraform import {
 *
 *  to = aws_detective_graph.example
 *
 *  id = "arn:aws:detective:us-east-1:123456789101:graph:231684d34gh74g4bae1dbc7bd807d02d" } Using `pulumi import`, import `aws_detective_graph` using the ARN. For exampleconsole % pulumi import aws_detective_graph.example arn:aws:detective:us-east-1:123456789101:graph:231684d34gh74g4bae1dbc7bd807d02d
 */
export class Graph extends pulumi.CustomResource {
    /**
     * Get an existing Graph resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GraphState, opts?: pulumi.CustomResourceOptions): Graph {
        return new Graph(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:detective/graph:Graph';

    /**
     * Returns true if the given object is an instance of Graph.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Graph {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Graph.__pulumiType;
    }

    /**
     * Date and time, in UTC and extended RFC 3339 format, when the Amazon Detective Graph was created.
     */
    public /*out*/ readonly createdTime!: pulumi.Output<string>;
    /**
     * ARN of the Detective Graph.
     */
    public /*out*/ readonly graphArn!: pulumi.Output<string>;
    /**
     * A map of tags to assign to the instance. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a Graph resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: GraphArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GraphArgs | GraphState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GraphState | undefined;
            resourceInputs["createdTime"] = state ? state.createdTime : undefined;
            resourceInputs["graphArn"] = state ? state.graphArn : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
        } else {
            const args = argsOrState as GraphArgs | undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["createdTime"] = undefined /*out*/;
            resourceInputs["graphArn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Graph.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Graph resources.
 */
export interface GraphState {
    /**
     * Date and time, in UTC and extended RFC 3339 format, when the Amazon Detective Graph was created.
     */
    createdTime?: pulumi.Input<string>;
    /**
     * ARN of the Detective Graph.
     */
    graphArn?: pulumi.Input<string>;
    /**
     * A map of tags to assign to the instance. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a Graph resource.
 */
export interface GraphArgs {
    /**
     * A map of tags to assign to the instance. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
