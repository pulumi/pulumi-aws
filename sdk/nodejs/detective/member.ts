// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage an [Amazon Detective Member](https://docs.aws.amazon.com/detective/latest/APIReference/API_CreateMembers.html).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleGraph = new aws.detective.Graph("exampleGraph", {});
 * const exampleMember = new aws.detective.Member("exampleMember", {
 *     accountId: "AWS ACCOUNT ID",
 *     emailAddress: "EMAIL",
 *     graphArn: exampleGraph.id,
 *     message: "Message of the invitation",
 *     disableEmailNotification: true,
 * });
 * ```
 *
 * ## Import
 *
 * `aws_detective_member` can be imported using the ARN of the graph followed by the account ID of the member account, e.g.
 *
 * ```sh
 *  $ pulumi import aws:detective/member:Member example arn:aws:detective:us-east-1:123456789101:graph:231684d34gh74g4bae1dbc7bd807d02d/123456789012
 * ```
 */
export class Member extends pulumi.CustomResource {
    /**
     * Get an existing Member resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MemberState, opts?: pulumi.CustomResourceOptions): Member {
        return new Member(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:detective/member:Member';

    /**
     * Returns true if the given object is an instance of Member.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Member {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Member.__pulumiType;
    }

    /**
     * AWS account ID for the account.
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * AWS account ID for the administrator account.
     */
    public /*out*/ readonly administratorId!: pulumi.Output<string>;
    /**
     * If set to true, then the root user of the invited account will _not_ receive an email notification. This notification is in addition to an alert that the root user receives in AWS Personal Health Dashboard. By default, this is set to `false`.
     */
    public readonly disableEmailNotification!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly disabledReason!: pulumi.Output<string>;
    /**
     * Email address for the account.
     */
    public readonly emailAddress!: pulumi.Output<string>;
    /**
     * ARN of the behavior graph to invite the member accounts to contribute their data to.
     */
    public readonly graphArn!: pulumi.Output<string>;
    /**
     * Date and time, in UTC and extended RFC 3339 format, when an Amazon Detective membership invitation was last sent to the account.
     */
    public /*out*/ readonly invitedTime!: pulumi.Output<string>;
    /**
     * A custom message to include in the invitation. Amazon Detective adds this message to the standard content that it sends for an invitation.
     */
    public readonly message!: pulumi.Output<string | undefined>;
    /**
     * Current membership status of the member account.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Date and time, in UTC and extended RFC 3339 format, of the most recent change to the member account's status.
     */
    public /*out*/ readonly updatedTime!: pulumi.Output<string>;
    /**
     * Data volume in bytes per day for the member account.
     */
    public /*out*/ readonly volumeUsageInBytes!: pulumi.Output<string>;

    /**
     * Create a Member resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MemberArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MemberArgs | MemberState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MemberState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["administratorId"] = state ? state.administratorId : undefined;
            resourceInputs["disableEmailNotification"] = state ? state.disableEmailNotification : undefined;
            resourceInputs["disabledReason"] = state ? state.disabledReason : undefined;
            resourceInputs["emailAddress"] = state ? state.emailAddress : undefined;
            resourceInputs["graphArn"] = state ? state.graphArn : undefined;
            resourceInputs["invitedTime"] = state ? state.invitedTime : undefined;
            resourceInputs["message"] = state ? state.message : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["updatedTime"] = state ? state.updatedTime : undefined;
            resourceInputs["volumeUsageInBytes"] = state ? state.volumeUsageInBytes : undefined;
        } else {
            const args = argsOrState as MemberArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.emailAddress === undefined) && !opts.urn) {
                throw new Error("Missing required property 'emailAddress'");
            }
            if ((!args || args.graphArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'graphArn'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["disableEmailNotification"] = args ? args.disableEmailNotification : undefined;
            resourceInputs["emailAddress"] = args ? args.emailAddress : undefined;
            resourceInputs["graphArn"] = args ? args.graphArn : undefined;
            resourceInputs["message"] = args ? args.message : undefined;
            resourceInputs["administratorId"] = undefined /*out*/;
            resourceInputs["disabledReason"] = undefined /*out*/;
            resourceInputs["invitedTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["updatedTime"] = undefined /*out*/;
            resourceInputs["volumeUsageInBytes"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Member.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Member resources.
 */
export interface MemberState {
    /**
     * AWS account ID for the account.
     */
    accountId?: pulumi.Input<string>;
    /**
     * AWS account ID for the administrator account.
     */
    administratorId?: pulumi.Input<string>;
    /**
     * If set to true, then the root user of the invited account will _not_ receive an email notification. This notification is in addition to an alert that the root user receives in AWS Personal Health Dashboard. By default, this is set to `false`.
     */
    disableEmailNotification?: pulumi.Input<boolean>;
    disabledReason?: pulumi.Input<string>;
    /**
     * Email address for the account.
     */
    emailAddress?: pulumi.Input<string>;
    /**
     * ARN of the behavior graph to invite the member accounts to contribute their data to.
     */
    graphArn?: pulumi.Input<string>;
    /**
     * Date and time, in UTC and extended RFC 3339 format, when an Amazon Detective membership invitation was last sent to the account.
     */
    invitedTime?: pulumi.Input<string>;
    /**
     * A custom message to include in the invitation. Amazon Detective adds this message to the standard content that it sends for an invitation.
     */
    message?: pulumi.Input<string>;
    /**
     * Current membership status of the member account.
     */
    status?: pulumi.Input<string>;
    /**
     * Date and time, in UTC and extended RFC 3339 format, of the most recent change to the member account's status.
     */
    updatedTime?: pulumi.Input<string>;
    /**
     * Data volume in bytes per day for the member account.
     */
    volumeUsageInBytes?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Member resource.
 */
export interface MemberArgs {
    /**
     * AWS account ID for the account.
     */
    accountId: pulumi.Input<string>;
    /**
     * If set to true, then the root user of the invited account will _not_ receive an email notification. This notification is in addition to an alert that the root user receives in AWS Personal Health Dashboard. By default, this is set to `false`.
     */
    disableEmailNotification?: pulumi.Input<boolean>;
    /**
     * Email address for the account.
     */
    emailAddress: pulumi.Input<string>;
    /**
     * ARN of the behavior graph to invite the member accounts to contribute their data to.
     */
    graphArn: pulumi.Input<string>;
    /**
     * A custom message to include in the invitation. Amazon Detective adds this message to the standard content that it sends for an invitation.
     */
    message?: pulumi.Input<string>;
}
