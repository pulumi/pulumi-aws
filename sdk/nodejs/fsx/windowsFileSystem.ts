// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export class WindowsFileSystem extends pulumi.CustomResource {
    /**
     * Get an existing WindowsFileSystem resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WindowsFileSystemState, opts?: pulumi.CustomResourceOptions): WindowsFileSystem {
        return new WindowsFileSystem(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:fsx/windowsFileSystem:WindowsFileSystem';

    /**
     * Returns true if the given object is an instance of WindowsFileSystem.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WindowsFileSystem {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WindowsFileSystem.__pulumiType;
    }

    public readonly activeDirectoryId!: pulumi.Output<string | undefined>;
    public readonly aliases!: pulumi.Output<string[] | undefined>;
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly auditLogConfiguration!: pulumi.Output<outputs.fsx.WindowsFileSystemAuditLogConfiguration>;
    public readonly automaticBackupRetentionDays!: pulumi.Output<number | undefined>;
    public readonly backupId!: pulumi.Output<string | undefined>;
    public readonly copyTagsToBackups!: pulumi.Output<boolean | undefined>;
    public readonly dailyAutomaticBackupStartTime!: pulumi.Output<string>;
    public readonly deploymentType!: pulumi.Output<string | undefined>;
    public /*out*/ readonly dnsName!: pulumi.Output<string>;
    public readonly kmsKeyId!: pulumi.Output<string>;
    public /*out*/ readonly networkInterfaceIds!: pulumi.Output<string[]>;
    public /*out*/ readonly ownerId!: pulumi.Output<string>;
    public /*out*/ readonly preferredFileServerIp!: pulumi.Output<string>;
    public readonly preferredSubnetId!: pulumi.Output<string>;
    public /*out*/ readonly remoteAdministrationEndpoint!: pulumi.Output<string>;
    public readonly securityGroupIds!: pulumi.Output<string[] | undefined>;
    public readonly selfManagedActiveDirectory!: pulumi.Output<outputs.fsx.WindowsFileSystemSelfManagedActiveDirectory | undefined>;
    public readonly skipFinalBackup!: pulumi.Output<boolean | undefined>;
    public readonly storageCapacity!: pulumi.Output<number>;
    public readonly storageType!: pulumi.Output<string | undefined>;
    public readonly subnetIds!: pulumi.Output<string[]>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    public readonly throughputCapacity!: pulumi.Output<number>;
    public /*out*/ readonly vpcId!: pulumi.Output<string>;
    public readonly weeklyMaintenanceStartTime!: pulumi.Output<string>;

    /**
     * Create a WindowsFileSystem resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WindowsFileSystemArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WindowsFileSystemArgs | WindowsFileSystemState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WindowsFileSystemState | undefined;
            resourceInputs["activeDirectoryId"] = state ? state.activeDirectoryId : undefined;
            resourceInputs["aliases"] = state ? state.aliases : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["auditLogConfiguration"] = state ? state.auditLogConfiguration : undefined;
            resourceInputs["automaticBackupRetentionDays"] = state ? state.automaticBackupRetentionDays : undefined;
            resourceInputs["backupId"] = state ? state.backupId : undefined;
            resourceInputs["copyTagsToBackups"] = state ? state.copyTagsToBackups : undefined;
            resourceInputs["dailyAutomaticBackupStartTime"] = state ? state.dailyAutomaticBackupStartTime : undefined;
            resourceInputs["deploymentType"] = state ? state.deploymentType : undefined;
            resourceInputs["dnsName"] = state ? state.dnsName : undefined;
            resourceInputs["kmsKeyId"] = state ? state.kmsKeyId : undefined;
            resourceInputs["networkInterfaceIds"] = state ? state.networkInterfaceIds : undefined;
            resourceInputs["ownerId"] = state ? state.ownerId : undefined;
            resourceInputs["preferredFileServerIp"] = state ? state.preferredFileServerIp : undefined;
            resourceInputs["preferredSubnetId"] = state ? state.preferredSubnetId : undefined;
            resourceInputs["remoteAdministrationEndpoint"] = state ? state.remoteAdministrationEndpoint : undefined;
            resourceInputs["securityGroupIds"] = state ? state.securityGroupIds : undefined;
            resourceInputs["selfManagedActiveDirectory"] = state ? state.selfManagedActiveDirectory : undefined;
            resourceInputs["skipFinalBackup"] = state ? state.skipFinalBackup : undefined;
            resourceInputs["storageCapacity"] = state ? state.storageCapacity : undefined;
            resourceInputs["storageType"] = state ? state.storageType : undefined;
            resourceInputs["subnetIds"] = state ? state.subnetIds : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["throughputCapacity"] = state ? state.throughputCapacity : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["weeklyMaintenanceStartTime"] = state ? state.weeklyMaintenanceStartTime : undefined;
        } else {
            const args = argsOrState as WindowsFileSystemArgs | undefined;
            if ((!args || args.subnetIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetIds'");
            }
            if ((!args || args.throughputCapacity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'throughputCapacity'");
            }
            resourceInputs["activeDirectoryId"] = args ? args.activeDirectoryId : undefined;
            resourceInputs["aliases"] = args ? args.aliases : undefined;
            resourceInputs["auditLogConfiguration"] = args ? args.auditLogConfiguration : undefined;
            resourceInputs["automaticBackupRetentionDays"] = args ? args.automaticBackupRetentionDays : undefined;
            resourceInputs["backupId"] = args ? args.backupId : undefined;
            resourceInputs["copyTagsToBackups"] = args ? args.copyTagsToBackups : undefined;
            resourceInputs["dailyAutomaticBackupStartTime"] = args ? args.dailyAutomaticBackupStartTime : undefined;
            resourceInputs["deploymentType"] = args ? args.deploymentType : undefined;
            resourceInputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            resourceInputs["preferredSubnetId"] = args ? args.preferredSubnetId : undefined;
            resourceInputs["securityGroupIds"] = args ? args.securityGroupIds : undefined;
            resourceInputs["selfManagedActiveDirectory"] = args ? args.selfManagedActiveDirectory : undefined;
            resourceInputs["skipFinalBackup"] = args ? args.skipFinalBackup : undefined;
            resourceInputs["storageCapacity"] = args ? args.storageCapacity : undefined;
            resourceInputs["storageType"] = args ? args.storageType : undefined;
            resourceInputs["subnetIds"] = args ? args.subnetIds : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["throughputCapacity"] = args ? args.throughputCapacity : undefined;
            resourceInputs["weeklyMaintenanceStartTime"] = args ? args.weeklyMaintenanceStartTime : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["dnsName"] = undefined /*out*/;
            resourceInputs["networkInterfaceIds"] = undefined /*out*/;
            resourceInputs["ownerId"] = undefined /*out*/;
            resourceInputs["preferredFileServerIp"] = undefined /*out*/;
            resourceInputs["remoteAdministrationEndpoint"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
            resourceInputs["vpcId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WindowsFileSystem.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WindowsFileSystem resources.
 */
export interface WindowsFileSystemState {
    activeDirectoryId?: pulumi.Input<string>;
    aliases?: pulumi.Input<pulumi.Input<string>[]>;
    arn?: pulumi.Input<string>;
    auditLogConfiguration?: pulumi.Input<inputs.fsx.WindowsFileSystemAuditLogConfiguration>;
    automaticBackupRetentionDays?: pulumi.Input<number>;
    backupId?: pulumi.Input<string>;
    copyTagsToBackups?: pulumi.Input<boolean>;
    dailyAutomaticBackupStartTime?: pulumi.Input<string>;
    deploymentType?: pulumi.Input<string>;
    dnsName?: pulumi.Input<string>;
    kmsKeyId?: pulumi.Input<string>;
    networkInterfaceIds?: pulumi.Input<pulumi.Input<string>[]>;
    ownerId?: pulumi.Input<string>;
    preferredFileServerIp?: pulumi.Input<string>;
    preferredSubnetId?: pulumi.Input<string>;
    remoteAdministrationEndpoint?: pulumi.Input<string>;
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    selfManagedActiveDirectory?: pulumi.Input<inputs.fsx.WindowsFileSystemSelfManagedActiveDirectory>;
    skipFinalBackup?: pulumi.Input<boolean>;
    storageCapacity?: pulumi.Input<number>;
    storageType?: pulumi.Input<string>;
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    throughputCapacity?: pulumi.Input<number>;
    vpcId?: pulumi.Input<string>;
    weeklyMaintenanceStartTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WindowsFileSystem resource.
 */
export interface WindowsFileSystemArgs {
    activeDirectoryId?: pulumi.Input<string>;
    aliases?: pulumi.Input<pulumi.Input<string>[]>;
    auditLogConfiguration?: pulumi.Input<inputs.fsx.WindowsFileSystemAuditLogConfiguration>;
    automaticBackupRetentionDays?: pulumi.Input<number>;
    backupId?: pulumi.Input<string>;
    copyTagsToBackups?: pulumi.Input<boolean>;
    dailyAutomaticBackupStartTime?: pulumi.Input<string>;
    deploymentType?: pulumi.Input<string>;
    kmsKeyId?: pulumi.Input<string>;
    preferredSubnetId?: pulumi.Input<string>;
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    selfManagedActiveDirectory?: pulumi.Input<inputs.fsx.WindowsFileSystemSelfManagedActiveDirectory>;
    skipFinalBackup?: pulumi.Input<boolean>;
    storageCapacity?: pulumi.Input<number>;
    storageType?: pulumi.Input<string>;
    subnetIds: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    throughputCapacity: pulumi.Input<number>;
    weeklyMaintenanceStartTime?: pulumi.Input<string>;
}
