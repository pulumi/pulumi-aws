// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export class OntapStorageVirtualMachine extends pulumi.CustomResource {
    /**
     * Get an existing OntapStorageVirtualMachine resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OntapStorageVirtualMachineState, opts?: pulumi.CustomResourceOptions): OntapStorageVirtualMachine {
        return new OntapStorageVirtualMachine(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:fsx/ontapStorageVirtualMachine:OntapStorageVirtualMachine';

    /**
     * Returns true if the given object is an instance of OntapStorageVirtualMachine.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OntapStorageVirtualMachine {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OntapStorageVirtualMachine.__pulumiType;
    }

    public readonly activeDirectoryConfiguration!: pulumi.Output<outputs.fsx.OntapStorageVirtualMachineActiveDirectoryConfiguration | undefined>;
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public /*out*/ readonly endpoints!: pulumi.Output<outputs.fsx.OntapStorageVirtualMachineEndpoint[]>;
    public readonly fileSystemId!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly rootVolumeSecurityStyle!: pulumi.Output<string | undefined>;
    public /*out*/ readonly subtype!: pulumi.Output<string>;
    public readonly svmAdminPassword!: pulumi.Output<string | undefined>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly uuid!: pulumi.Output<string>;

    /**
     * Create a OntapStorageVirtualMachine resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OntapStorageVirtualMachineArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OntapStorageVirtualMachineArgs | OntapStorageVirtualMachineState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OntapStorageVirtualMachineState | undefined;
            resourceInputs["activeDirectoryConfiguration"] = state ? state.activeDirectoryConfiguration : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["endpoints"] = state ? state.endpoints : undefined;
            resourceInputs["fileSystemId"] = state ? state.fileSystemId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["rootVolumeSecurityStyle"] = state ? state.rootVolumeSecurityStyle : undefined;
            resourceInputs["subtype"] = state ? state.subtype : undefined;
            resourceInputs["svmAdminPassword"] = state ? state.svmAdminPassword : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as OntapStorageVirtualMachineArgs | undefined;
            if ((!args || args.fileSystemId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fileSystemId'");
            }
            resourceInputs["activeDirectoryConfiguration"] = args ? args.activeDirectoryConfiguration : undefined;
            resourceInputs["fileSystemId"] = args ? args.fileSystemId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["rootVolumeSecurityStyle"] = args ? args.rootVolumeSecurityStyle : undefined;
            resourceInputs["svmAdminPassword"] = args?.svmAdminPassword ? pulumi.secret(args.svmAdminPassword) : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["endpoints"] = undefined /*out*/;
            resourceInputs["subtype"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
            resourceInputs["uuid"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["svmAdminPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(OntapStorageVirtualMachine.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OntapStorageVirtualMachine resources.
 */
export interface OntapStorageVirtualMachineState {
    activeDirectoryConfiguration?: pulumi.Input<inputs.fsx.OntapStorageVirtualMachineActiveDirectoryConfiguration>;
    arn?: pulumi.Input<string>;
    endpoints?: pulumi.Input<pulumi.Input<inputs.fsx.OntapStorageVirtualMachineEndpoint>[]>;
    fileSystemId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    rootVolumeSecurityStyle?: pulumi.Input<string>;
    subtype?: pulumi.Input<string>;
    svmAdminPassword?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OntapStorageVirtualMachine resource.
 */
export interface OntapStorageVirtualMachineArgs {
    activeDirectoryConfiguration?: pulumi.Input<inputs.fsx.OntapStorageVirtualMachineActiveDirectoryConfiguration>;
    fileSystemId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    rootVolumeSecurityStyle?: pulumi.Input<string>;
    svmAdminPassword?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
