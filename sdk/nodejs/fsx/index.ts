// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./backup";
export * from "./dataRepositoryAssociation";
export * from "./lustreFileSystem";
export * from "./ontapFileSystem";
export * from "./ontapStorageVirtualMachine";
export * from "./ontapVolume";
export * from "./openZfsFileSystem";
export * from "./openZfsSnapshot";
export * from "./openZfsVolume";
export * from "./windowsFileSystem";

// Import resources to register:
import { Backup } from "./backup";
import { DataRepositoryAssociation } from "./dataRepositoryAssociation";
import { LustreFileSystem } from "./lustreFileSystem";
import { OntapFileSystem } from "./ontapFileSystem";
import { OntapStorageVirtualMachine } from "./ontapStorageVirtualMachine";
import { OntapVolume } from "./ontapVolume";
import { OpenZfsFileSystem } from "./openZfsFileSystem";
import { OpenZfsSnapshot } from "./openZfsSnapshot";
import { OpenZfsVolume } from "./openZfsVolume";
import { WindowsFileSystem } from "./windowsFileSystem";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws:fsx/backup:Backup":
                return new Backup(name, <any>undefined, { urn })
            case "aws:fsx/dataRepositoryAssociation:DataRepositoryAssociation":
                return new DataRepositoryAssociation(name, <any>undefined, { urn })
            case "aws:fsx/lustreFileSystem:LustreFileSystem":
                return new LustreFileSystem(name, <any>undefined, { urn })
            case "aws:fsx/ontapFileSystem:OntapFileSystem":
                return new OntapFileSystem(name, <any>undefined, { urn })
            case "aws:fsx/ontapStorageVirtualMachine:OntapStorageVirtualMachine":
                return new OntapStorageVirtualMachine(name, <any>undefined, { urn })
            case "aws:fsx/ontapVolume:OntapVolume":
                return new OntapVolume(name, <any>undefined, { urn })
            case "aws:fsx/openZfsFileSystem:OpenZfsFileSystem":
                return new OpenZfsFileSystem(name, <any>undefined, { urn })
            case "aws:fsx/openZfsSnapshot:OpenZfsSnapshot":
                return new OpenZfsSnapshot(name, <any>undefined, { urn })
            case "aws:fsx/openZfsVolume:OpenZfsVolume":
                return new OpenZfsVolume(name, <any>undefined, { urn })
            case "aws:fsx/windowsFileSystem:WindowsFileSystem":
                return new WindowsFileSystem(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "fsx/backup", _module)
pulumi.runtime.registerResourceModule("aws", "fsx/dataRepositoryAssociation", _module)
pulumi.runtime.registerResourceModule("aws", "fsx/lustreFileSystem", _module)
pulumi.runtime.registerResourceModule("aws", "fsx/ontapFileSystem", _module)
pulumi.runtime.registerResourceModule("aws", "fsx/ontapStorageVirtualMachine", _module)
pulumi.runtime.registerResourceModule("aws", "fsx/ontapVolume", _module)
pulumi.runtime.registerResourceModule("aws", "fsx/openZfsFileSystem", _module)
pulumi.runtime.registerResourceModule("aws", "fsx/openZfsSnapshot", _module)
pulumi.runtime.registerResourceModule("aws", "fsx/openZfsVolume", _module)
pulumi.runtime.registerResourceModule("aws", "fsx/windowsFileSystem", _module)
