// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Provides a Synthetics Canary resource.
 *
 * > **NOTE:** When you create a canary, AWS creates supporting implicit resources. See the Amazon CloudWatch Synthetics documentation on [DeleteCanary](https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_DeleteCanary.html) for a full list. Neither AWS nor this provider deletes these implicit resources automatically when the canary is deleted. Before deleting a canary, ensure you have all the information about the canary that you need to delete the implicit resources using the AWS Console, or AWS CLI.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const some = new aws.synthetics.Canary("some", {
 *     name: "some-canary",
 *     artifactS3Location: "s3://some-bucket/",
 *     executionRoleArn: "some-role",
 *     handler: "exports.handler",
 *     zipFile: "test-fixtures/lambdatest.zip",
 *     runtimeVersion: "syn-1.0",
 *     schedule: {
 *         expression: "rate(0 minute)",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Synthetics Canaries using the `name`. For example:
 *
 * ```sh
 * $ pulumi import aws:synthetics/canary:Canary some some-canary
 * ```
 */
export class Canary extends pulumi.CustomResource {
    /**
     * Get an existing Canary resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CanaryState, opts?: pulumi.CustomResourceOptions): Canary {
        return new Canary(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:synthetics/canary:Canary';

    /**
     * Returns true if the given object is an instance of Canary.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Canary {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Canary.__pulumiType;
    }

    /**
     * Amazon Resource Name (ARN) of the Canary.
     */
    declare public /*out*/ readonly arn: pulumi.Output<string>;
    /**
     * configuration for canary artifacts, including the encryption-at-rest settings for artifacts that the canary uploads to Amazon S3. See Artifact Config.
     */
    declare public readonly artifactConfig: pulumi.Output<outputs.synthetics.CanaryArtifactConfig | undefined>;
    /**
     * Location in Amazon S3 where Synthetics stores artifacts from the test runs of this canary.
     */
    declare public readonly artifactS3Location: pulumi.Output<string>;
    /**
     * Specifies whether to also delete the Lambda functions and layers used by this canary. The default is `false`.
     */
    declare public readonly deleteLambda: pulumi.Output<boolean | undefined>;
    /**
     * ARN of the Lambda function that is used as your canary's engine.
     */
    declare public /*out*/ readonly engineArn: pulumi.Output<string>;
    /**
     * ARN of the IAM role to be used to run the canary. see [AWS Docs](https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_CreateCanary.html#API_CreateCanary_RequestSyntax) for permissions needs for IAM Role.
     */
    declare public readonly executionRoleArn: pulumi.Output<string>;
    /**
     * Number of days to retain data about failed runs of this canary. If you omit this field, the default of 31 days is used. The valid range is 1 to 455 days.
     */
    declare public readonly failureRetentionPeriod: pulumi.Output<number | undefined>;
    /**
     * Entry point to use for the source code when running the canary. This value must end with the string `.handler` .
     */
    declare public readonly handler: pulumi.Output<string>;
    /**
     * Name for this canary. Has a maximum length of 255 characters. Valid characters are lowercase alphanumeric, hyphen, or underscore.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * Configuration block for individual canary runs. Detailed below.
     */
    declare public readonly runConfig: pulumi.Output<outputs.synthetics.CanaryRunConfig>;
    /**
     * Runtime version to use for the canary. Versions change often so consult the [Amazon CloudWatch documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html) for the latest valid versions. Values include `syn-python-selenium-1.0`, `syn-nodejs-puppeteer-3.0`, `syn-nodejs-2.2`, `syn-nodejs-2.1`, `syn-nodejs-2.0`, and `syn-1.0`.
     */
    declare public readonly runtimeVersion: pulumi.Output<string>;
    /**
     * Full bucket name which is used if your canary script is located in S3. The bucket must already exist. **Conflicts with `zipFile`.**
     */
    declare public readonly s3Bucket: pulumi.Output<string | undefined>;
    /**
     * S3 key of your script. **Conflicts with `zipFile`.**
     */
    declare public readonly s3Key: pulumi.Output<string | undefined>;
    /**
     * S3 version ID of your script. **Conflicts with `zipFile`.**
     */
    declare public readonly s3Version: pulumi.Output<string | undefined>;
    /**
     * Configuration block providing how often the canary is to run and when these test runs are to stop. Detailed below.
     *
     * The following arguments are optional:
     */
    declare public readonly schedule: pulumi.Output<outputs.synthetics.CanarySchedule>;
    /**
     * ARN of the Lambda layer where Synthetics stores the canary script code.
     */
    declare public /*out*/ readonly sourceLocationArn: pulumi.Output<string>;
    /**
     * Whether to run or stop the canary.
     */
    declare public readonly startCanary: pulumi.Output<boolean | undefined>;
    /**
     * Canary status.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * Number of days to retain data about successful runs of this canary. If you omit this field, the default of 31 days is used. The valid range is 1 to 455 days.
     */
    declare public readonly successRetentionPeriod: pulumi.Output<number | undefined>;
    /**
     * Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    declare public /*out*/ readonly tagsAll: pulumi.Output<{[key: string]: string}>;
    /**
     * Structure that contains information about when the canary was created, modified, and most recently run. see Timeline.
     */
    declare public /*out*/ readonly timelines: pulumi.Output<outputs.synthetics.CanaryTimeline[]>;
    /**
     * Configuration block. Detailed below.
     */
    declare public readonly vpcConfig: pulumi.Output<outputs.synthetics.CanaryVpcConfig | undefined>;
    /**
     * ZIP file that contains the script, if you input your canary script directly into the canary instead of referring to an S3 location. It can be up to 225KB. **Conflicts with `s3Bucket`, `s3Key`, and `s3Version`.**
     */
    declare public readonly zipFile: pulumi.Output<string | undefined>;

    /**
     * Create a Canary resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CanaryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CanaryArgs | CanaryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CanaryState | undefined;
            resourceInputs["arn"] = state?.arn;
            resourceInputs["artifactConfig"] = state?.artifactConfig;
            resourceInputs["artifactS3Location"] = state?.artifactS3Location;
            resourceInputs["deleteLambda"] = state?.deleteLambda;
            resourceInputs["engineArn"] = state?.engineArn;
            resourceInputs["executionRoleArn"] = state?.executionRoleArn;
            resourceInputs["failureRetentionPeriod"] = state?.failureRetentionPeriod;
            resourceInputs["handler"] = state?.handler;
            resourceInputs["name"] = state?.name;
            resourceInputs["region"] = state?.region;
            resourceInputs["runConfig"] = state?.runConfig;
            resourceInputs["runtimeVersion"] = state?.runtimeVersion;
            resourceInputs["s3Bucket"] = state?.s3Bucket;
            resourceInputs["s3Key"] = state?.s3Key;
            resourceInputs["s3Version"] = state?.s3Version;
            resourceInputs["schedule"] = state?.schedule;
            resourceInputs["sourceLocationArn"] = state?.sourceLocationArn;
            resourceInputs["startCanary"] = state?.startCanary;
            resourceInputs["status"] = state?.status;
            resourceInputs["successRetentionPeriod"] = state?.successRetentionPeriod;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tagsAll"] = state?.tagsAll;
            resourceInputs["timelines"] = state?.timelines;
            resourceInputs["vpcConfig"] = state?.vpcConfig;
            resourceInputs["zipFile"] = state?.zipFile;
        } else {
            const args = argsOrState as CanaryArgs | undefined;
            if (args?.artifactS3Location === undefined && !opts.urn) {
                throw new Error("Missing required property 'artifactS3Location'");
            }
            if (args?.executionRoleArn === undefined && !opts.urn) {
                throw new Error("Missing required property 'executionRoleArn'");
            }
            if (args?.handler === undefined && !opts.urn) {
                throw new Error("Missing required property 'handler'");
            }
            if (args?.runtimeVersion === undefined && !opts.urn) {
                throw new Error("Missing required property 'runtimeVersion'");
            }
            if (args?.schedule === undefined && !opts.urn) {
                throw new Error("Missing required property 'schedule'");
            }
            resourceInputs["artifactConfig"] = args?.artifactConfig;
            resourceInputs["artifactS3Location"] = args?.artifactS3Location;
            resourceInputs["deleteLambda"] = args?.deleteLambda;
            resourceInputs["executionRoleArn"] = args?.executionRoleArn;
            resourceInputs["failureRetentionPeriod"] = args?.failureRetentionPeriod;
            resourceInputs["handler"] = args?.handler;
            resourceInputs["name"] = args?.name;
            resourceInputs["region"] = args?.region;
            resourceInputs["runConfig"] = args?.runConfig;
            resourceInputs["runtimeVersion"] = args?.runtimeVersion;
            resourceInputs["s3Bucket"] = args?.s3Bucket;
            resourceInputs["s3Key"] = args?.s3Key;
            resourceInputs["s3Version"] = args?.s3Version;
            resourceInputs["schedule"] = args?.schedule;
            resourceInputs["startCanary"] = args?.startCanary;
            resourceInputs["successRetentionPeriod"] = args?.successRetentionPeriod;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["vpcConfig"] = args?.vpcConfig;
            resourceInputs["zipFile"] = args?.zipFile;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["engineArn"] = undefined /*out*/;
            resourceInputs["sourceLocationArn"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
            resourceInputs["timelines"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Canary.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Canary resources.
 */
export interface CanaryState {
    /**
     * Amazon Resource Name (ARN) of the Canary.
     */
    arn?: pulumi.Input<string>;
    /**
     * configuration for canary artifacts, including the encryption-at-rest settings for artifacts that the canary uploads to Amazon S3. See Artifact Config.
     */
    artifactConfig?: pulumi.Input<inputs.synthetics.CanaryArtifactConfig>;
    /**
     * Location in Amazon S3 where Synthetics stores artifacts from the test runs of this canary.
     */
    artifactS3Location?: pulumi.Input<string>;
    /**
     * Specifies whether to also delete the Lambda functions and layers used by this canary. The default is `false`.
     */
    deleteLambda?: pulumi.Input<boolean>;
    /**
     * ARN of the Lambda function that is used as your canary's engine.
     */
    engineArn?: pulumi.Input<string>;
    /**
     * ARN of the IAM role to be used to run the canary. see [AWS Docs](https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_CreateCanary.html#API_CreateCanary_RequestSyntax) for permissions needs for IAM Role.
     */
    executionRoleArn?: pulumi.Input<string>;
    /**
     * Number of days to retain data about failed runs of this canary. If you omit this field, the default of 31 days is used. The valid range is 1 to 455 days.
     */
    failureRetentionPeriod?: pulumi.Input<number>;
    /**
     * Entry point to use for the source code when running the canary. This value must end with the string `.handler` .
     */
    handler?: pulumi.Input<string>;
    /**
     * Name for this canary. Has a maximum length of 255 characters. Valid characters are lowercase alphanumeric, hyphen, or underscore.
     */
    name?: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * Configuration block for individual canary runs. Detailed below.
     */
    runConfig?: pulumi.Input<inputs.synthetics.CanaryRunConfig>;
    /**
     * Runtime version to use for the canary. Versions change often so consult the [Amazon CloudWatch documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html) for the latest valid versions. Values include `syn-python-selenium-1.0`, `syn-nodejs-puppeteer-3.0`, `syn-nodejs-2.2`, `syn-nodejs-2.1`, `syn-nodejs-2.0`, and `syn-1.0`.
     */
    runtimeVersion?: pulumi.Input<string>;
    /**
     * Full bucket name which is used if your canary script is located in S3. The bucket must already exist. **Conflicts with `zipFile`.**
     */
    s3Bucket?: pulumi.Input<string>;
    /**
     * S3 key of your script. **Conflicts with `zipFile`.**
     */
    s3Key?: pulumi.Input<string>;
    /**
     * S3 version ID of your script. **Conflicts with `zipFile`.**
     */
    s3Version?: pulumi.Input<string>;
    /**
     * Configuration block providing how often the canary is to run and when these test runs are to stop. Detailed below.
     *
     * The following arguments are optional:
     */
    schedule?: pulumi.Input<inputs.synthetics.CanarySchedule>;
    /**
     * ARN of the Lambda layer where Synthetics stores the canary script code.
     */
    sourceLocationArn?: pulumi.Input<string>;
    /**
     * Whether to run or stop the canary.
     */
    startCanary?: pulumi.Input<boolean>;
    /**
     * Canary status.
     */
    status?: pulumi.Input<string>;
    /**
     * Number of days to retain data about successful runs of this canary. If you omit this field, the default of 31 days is used. The valid range is 1 to 455 days.
     */
    successRetentionPeriod?: pulumi.Input<number>;
    /**
     * Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Structure that contains information about when the canary was created, modified, and most recently run. see Timeline.
     */
    timelines?: pulumi.Input<pulumi.Input<inputs.synthetics.CanaryTimeline>[]>;
    /**
     * Configuration block. Detailed below.
     */
    vpcConfig?: pulumi.Input<inputs.synthetics.CanaryVpcConfig>;
    /**
     * ZIP file that contains the script, if you input your canary script directly into the canary instead of referring to an S3 location. It can be up to 225KB. **Conflicts with `s3Bucket`, `s3Key`, and `s3Version`.**
     */
    zipFile?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Canary resource.
 */
export interface CanaryArgs {
    /**
     * configuration for canary artifacts, including the encryption-at-rest settings for artifacts that the canary uploads to Amazon S3. See Artifact Config.
     */
    artifactConfig?: pulumi.Input<inputs.synthetics.CanaryArtifactConfig>;
    /**
     * Location in Amazon S3 where Synthetics stores artifacts from the test runs of this canary.
     */
    artifactS3Location: pulumi.Input<string>;
    /**
     * Specifies whether to also delete the Lambda functions and layers used by this canary. The default is `false`.
     */
    deleteLambda?: pulumi.Input<boolean>;
    /**
     * ARN of the IAM role to be used to run the canary. see [AWS Docs](https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_CreateCanary.html#API_CreateCanary_RequestSyntax) for permissions needs for IAM Role.
     */
    executionRoleArn: pulumi.Input<string>;
    /**
     * Number of days to retain data about failed runs of this canary. If you omit this field, the default of 31 days is used. The valid range is 1 to 455 days.
     */
    failureRetentionPeriod?: pulumi.Input<number>;
    /**
     * Entry point to use for the source code when running the canary. This value must end with the string `.handler` .
     */
    handler: pulumi.Input<string>;
    /**
     * Name for this canary. Has a maximum length of 255 characters. Valid characters are lowercase alphanumeric, hyphen, or underscore.
     */
    name?: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * Configuration block for individual canary runs. Detailed below.
     */
    runConfig?: pulumi.Input<inputs.synthetics.CanaryRunConfig>;
    /**
     * Runtime version to use for the canary. Versions change often so consult the [Amazon CloudWatch documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html) for the latest valid versions. Values include `syn-python-selenium-1.0`, `syn-nodejs-puppeteer-3.0`, `syn-nodejs-2.2`, `syn-nodejs-2.1`, `syn-nodejs-2.0`, and `syn-1.0`.
     */
    runtimeVersion: pulumi.Input<string>;
    /**
     * Full bucket name which is used if your canary script is located in S3. The bucket must already exist. **Conflicts with `zipFile`.**
     */
    s3Bucket?: pulumi.Input<string>;
    /**
     * S3 key of your script. **Conflicts with `zipFile`.**
     */
    s3Key?: pulumi.Input<string>;
    /**
     * S3 version ID of your script. **Conflicts with `zipFile`.**
     */
    s3Version?: pulumi.Input<string>;
    /**
     * Configuration block providing how often the canary is to run and when these test runs are to stop. Detailed below.
     *
     * The following arguments are optional:
     */
    schedule: pulumi.Input<inputs.synthetics.CanarySchedule>;
    /**
     * Whether to run or stop the canary.
     */
    startCanary?: pulumi.Input<boolean>;
    /**
     * Number of days to retain data about successful runs of this canary. If you omit this field, the default of 31 days is used. The valid range is 1 to 455 days.
     */
    successRetentionPeriod?: pulumi.Input<number>;
    /**
     * Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Configuration block. Detailed below.
     */
    vpcConfig?: pulumi.Input<inputs.synthetics.CanaryVpcConfig>;
    /**
     * ZIP file that contains the script, if you input your canary script directly into the canary instead of referring to an S3 location. It can be up to 225KB. **Conflicts with `s3Bucket`, `s3Key`, and `s3Version`.**
     */
    zipFile?: pulumi.Input<string>;
}
