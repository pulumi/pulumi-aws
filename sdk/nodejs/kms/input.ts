// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./input";
import * as outputs from "./output";

export interface GrantConstraint {
    /**
     * A list of key-value pairs that must match the encryption context in subsequent cryptographic operation requests. The grant allows the operation only when the encryption context in the request is the same as the encryption context specified in this constraint. Conflicts with `encryptionContextSubset`.
     */
    encryptionContextEquals?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A list of key-value pairs that must be included in the encryption context of subsequent cryptographic operation requests. The grant allows the cryptographic operation only when the encryption context in the request includes the key-value pairs specified in this constraint, although it can include additional key-value pairs. Conflicts with `encryptionContextEquals`.
     */
    encryptionContextSubset?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
export interface GetSecretSecret {
    context?: {[key: string]: string};
    grantTokens?: string[];
    name: string;
    payload: string;
}
export interface GetSecretSecretArgs {
    context?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    grantTokens?: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
    payload: pulumi.Input<string>;
}
export interface GetSecretsSecret {
    /**
     * An optional mapping that makes up the Encryption Context for the secret.
     */
    context?: {[key: string]: string};
    /**
     * The encryption algorithm that will be used to decrypt the ciphertext. This parameter is required only when the ciphertext was encrypted under an asymmetric KMS key. Valid Values: SYMMETRIC_DEFAULT | RSAES_OAEP_SHA_1 | RSAES_OAEP_SHA_256 | SM2PKE
     */
    encryptionAlgorithm?: string;
    /**
     * An optional list of Grant Tokens for the secret.
     */
    grantTokens?: string[];
    /**
     * Specifies the KMS key that AWS KMS uses to decrypt the ciphertext. This parameter is required only when the ciphertext was encrypted under an asymmetric KMS key.
     *
     * For more information on `context` and `grantTokens` see the [KMS
     * Concepts](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html)
     */
    keyId?: string;
    /**
     * Name to export this secret under in the attributes.
     */
    name: string;
    /**
     * Base64 encoded payload, as returned from a KMS encrypt operation.
     */
    payload: string;
}
export interface GetSecretsSecretArgs {
    /**
     * An optional mapping that makes up the Encryption Context for the secret.
     */
    context?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The encryption algorithm that will be used to decrypt the ciphertext. This parameter is required only when the ciphertext was encrypted under an asymmetric KMS key. Valid Values: SYMMETRIC_DEFAULT | RSAES_OAEP_SHA_1 | RSAES_OAEP_SHA_256 | SM2PKE
     */
    encryptionAlgorithm?: pulumi.Input<string>;
    /**
     * An optional list of Grant Tokens for the secret.
     */
    grantTokens?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the KMS key that AWS KMS uses to decrypt the ciphertext. This parameter is required only when the ciphertext was encrypted under an asymmetric KMS key.
     *
     * For more information on `context` and `grantTokens` see the [KMS
     * Concepts](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html)
     */
    keyId?: pulumi.Input<string>;
    /**
     * Name to export this secret under in the attributes.
     */
    name: pulumi.Input<string>;
    /**
     * Base64 encoded payload, as returned from a KMS encrypt operation.
     */
    payload: pulumi.Input<string>;
}
