// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getCloudFormationType(args?: GetCloudFormationTypeArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudFormationTypeResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:cloudformation/getCloudFormationType:getCloudFormationType", {
        "arn": args.arn,
        "type": args.type,
        "typeName": args.typeName,
        "versionId": args.versionId,
    }, opts);
}

/**
 * A collection of arguments for invoking getCloudFormationType.
 */
export interface GetCloudFormationTypeArgs {
    arn?: string;
    type?: string;
    typeName?: string;
    versionId?: string;
}

/**
 * A collection of values returned by getCloudFormationType.
 */
export interface GetCloudFormationTypeResult {
    readonly arn: string;
    readonly defaultVersionId: string;
    readonly deprecatedStatus: string;
    readonly description: string;
    readonly documentationUrl: string;
    readonly executionRoleArn: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly isDefaultVersion: boolean;
    readonly loggingConfigs: outputs.cloudformation.GetCloudFormationTypeLoggingConfig[];
    readonly provisioningType: string;
    readonly schema: string;
    readonly sourceUrl: string;
    readonly type: string;
    readonly typeArn: string;
    readonly typeName: string;
    readonly versionId?: string;
    readonly visibility: string;
}
export function getCloudFormationTypeOutput(args?: GetCloudFormationTypeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudFormationTypeResult> {
    return pulumi.output(args).apply((a: any) => getCloudFormationType(a, opts))
}

/**
 * A collection of arguments for invoking getCloudFormationType.
 */
export interface GetCloudFormationTypeOutputArgs {
    arn?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    typeName?: pulumi.Input<string>;
    versionId?: pulumi.Input<string>;
}
