// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS DataZone Domain.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const domainExecutionRole = new aws.iam.Role("domain_execution_role", {
 *     name: "my_domain_execution_role",
 *     assumeRolePolicy: JSON.stringify({
 *         Version: "2012-10-17",
 *         Statement: [
 *             {
 *                 Action: [
 *                     "sts:AssumeRole",
 *                     "sts:TagSession",
 *                 ],
 *                 Effect: "Allow",
 *                 Principal: {
 *                     Service: "datazone.amazonaws.com",
 *                 },
 *             },
 *             {
 *                 Action: [
 *                     "sts:AssumeRole",
 *                     "sts:TagSession",
 *                 ],
 *                 Effect: "Allow",
 *                 Principal: {
 *                     Service: "cloudformation.amazonaws.com",
 *                 },
 *             },
 *         ],
 *     }),
 *     inlinePolicies: [{
 *         name: "domain_execution_policy",
 *         policy: JSON.stringify({
 *             Version: "2012-10-17",
 *             Statement: [{
 *                 Action: [
 *                     "datazone:*",
 *                     "ram:*",
 *                     "sso:*",
 *                     "kms:*",
 *                 ],
 *                 Effect: "Allow",
 *                 Resource: "*",
 *             }],
 *         }),
 *     }],
 * });
 * const example = new aws.datazone.Domain("example", {
 *     name: "example",
 *     domainExecutionRole: domainExecutionRole.arn,
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import DataZone Domain using the `domain_id`. For example:
 *
 * ```sh
 * $ pulumi import aws:datazone/domain:Domain example domain-id-12345678
 * ```
 */
export class Domain extends pulumi.CustomResource {
    /**
     * Get an existing Domain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DomainState, opts?: pulumi.CustomResourceOptions): Domain {
        return new Domain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:datazone/domain:Domain';

    /**
     * Returns true if the given object is an instance of Domain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Domain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Domain.__pulumiType;
    }

    /**
     * ARN of the Domain.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Description of the Domain.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * ARN of the role used by DataZone to configure the Domain.
     *
     * The following arguments are optional:
     */
    public readonly domainExecutionRole!: pulumi.Output<string>;
    /**
     * ARN of the KMS key used to encrypt the Amazon DataZone domain, metadata and reporting data.
     */
    public readonly kmsKeyIdentifier!: pulumi.Output<string | undefined>;
    /**
     * Name of the Domain.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * URL of the data portal for the Domain.
     */
    public /*out*/ readonly portalUrl!: pulumi.Output<string>;
    /**
     * Single sign on options, used to [enable AWS IAM Identity Center](https://docs.aws.amazon.com/datazone/latest/userguide/enable-IAM-identity-center-for-datazone.html) for DataZone.
     */
    public readonly singleSignOn!: pulumi.Output<outputs.datazone.DomainSingleSignOn | undefined>;
    /**
     * Whether to skip the deletion check for the Domain.
     */
    public readonly skipDeletionCheck!: pulumi.Output<boolean | undefined>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     *
     * @deprecated Please use `tags` instead.
     */
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.datazone.DomainTimeouts | undefined>;

    /**
     * Create a Domain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DomainArgs | DomainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DomainState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["domainExecutionRole"] = state ? state.domainExecutionRole : undefined;
            resourceInputs["kmsKeyIdentifier"] = state ? state.kmsKeyIdentifier : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["portalUrl"] = state ? state.portalUrl : undefined;
            resourceInputs["singleSignOn"] = state ? state.singleSignOn : undefined;
            resourceInputs["skipDeletionCheck"] = state ? state.skipDeletionCheck : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as DomainArgs | undefined;
            if ((!args || args.domainExecutionRole === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainExecutionRole'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["domainExecutionRole"] = args ? args.domainExecutionRole : undefined;
            resourceInputs["kmsKeyIdentifier"] = args ? args.kmsKeyIdentifier : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["singleSignOn"] = args ? args.singleSignOn : undefined;
            resourceInputs["skipDeletionCheck"] = args ? args.skipDeletionCheck : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["portalUrl"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Domain.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Domain resources.
 */
export interface DomainState {
    /**
     * ARN of the Domain.
     */
    arn?: pulumi.Input<string>;
    /**
     * Description of the Domain.
     */
    description?: pulumi.Input<string>;
    /**
     * ARN of the role used by DataZone to configure the Domain.
     *
     * The following arguments are optional:
     */
    domainExecutionRole?: pulumi.Input<string>;
    /**
     * ARN of the KMS key used to encrypt the Amazon DataZone domain, metadata and reporting data.
     */
    kmsKeyIdentifier?: pulumi.Input<string>;
    /**
     * Name of the Domain.
     */
    name?: pulumi.Input<string>;
    /**
     * URL of the data portal for the Domain.
     */
    portalUrl?: pulumi.Input<string>;
    /**
     * Single sign on options, used to [enable AWS IAM Identity Center](https://docs.aws.amazon.com/datazone/latest/userguide/enable-IAM-identity-center-for-datazone.html) for DataZone.
     */
    singleSignOn?: pulumi.Input<inputs.datazone.DomainSingleSignOn>;
    /**
     * Whether to skip the deletion check for the Domain.
     */
    skipDeletionCheck?: pulumi.Input<boolean>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     *
     * @deprecated Please use `tags` instead.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.datazone.DomainTimeouts>;
}

/**
 * The set of arguments for constructing a Domain resource.
 */
export interface DomainArgs {
    /**
     * Description of the Domain.
     */
    description?: pulumi.Input<string>;
    /**
     * ARN of the role used by DataZone to configure the Domain.
     *
     * The following arguments are optional:
     */
    domainExecutionRole: pulumi.Input<string>;
    /**
     * ARN of the KMS key used to encrypt the Amazon DataZone domain, metadata and reporting data.
     */
    kmsKeyIdentifier?: pulumi.Input<string>;
    /**
     * Name of the Domain.
     */
    name?: pulumi.Input<string>;
    /**
     * Single sign on options, used to [enable AWS IAM Identity Center](https://docs.aws.amazon.com/datazone/latest/userguide/enable-IAM-identity-center-for-datazone.html) for DataZone.
     */
    singleSignOn?: pulumi.Input<inputs.datazone.DomainSingleSignOn>;
    /**
     * Whether to skip the deletion check for the Domain.
     */
    skipDeletionCheck?: pulumi.Input<boolean>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.datazone.DomainTimeouts>;
}
