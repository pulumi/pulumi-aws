// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS DataZone Environment.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.datazone.Environment("example", {
 *     name: "example",
 *     accountIdentifier: test.accountId,
 *     accountRegion: testAwsRegion.name,
 *     blueprintIdentifier: testAwsDatazoneEnvironmentBlueprintConfiguration.environmentBlueprintId,
 *     profileIdentifier: testAwsDatazoneEnvironmentProfile.id,
 *     projectIdentifier: testAwsDatazoneProject.id,
 *     domainIdentifier: testAwsDatazoneDomain.id,
 *     userParameters: [
 *         {
 *             name: "consumerGlueDbName",
 *             value: "consumer",
 *         },
 *         {
 *             name: "producerGlueDbName",
 *             value: "producer",
 *         },
 *         {
 *             name: "workgroupName",
 *             value: "workgroup",
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import DataZone Environment using the `domain_idntifier,id`. For example:
 *
 * ```sh
 * $ pulumi import aws:datazone/environment:Environment example dzd_d2i7tzk3tnjjf4,5vpywijpwryec0
 * ```
 */
export class Environment extends pulumi.CustomResource {
    /**
     * Get an existing Environment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EnvironmentState, opts?: pulumi.CustomResourceOptions): Environment {
        return new Environment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:datazone/environment:Environment';

    /**
     * Returns true if the given object is an instance of Environment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Environment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Environment.__pulumiType;
    }

    /**
     * The ID of the Amazon Web Services account where the environment exists
     */
    public readonly accountIdentifier!: pulumi.Output<string>;
    /**
     * The Amazon Web Services region where the environment exists.
     */
    public readonly accountRegion!: pulumi.Output<string>;
    /**
     * The blueprint with which the environment is created.
     */
    public readonly blueprintIdentifier!: pulumi.Output<string>;
    /**
     * The time the environment was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The user who created the environment.
     */
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    /**
     * The description of the environment.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The ID of the domain where the environment exists.
     */
    public readonly domainIdentifier!: pulumi.Output<string>;
    /**
     * The business glossary terms that can be used in this environment.
     */
    public readonly glossaryTerms!: pulumi.Output<string[] | undefined>;
    /**
     * The details of the last deployment of the environment.
     */
    public /*out*/ readonly lastDeployments!: pulumi.Output<outputs.datazone.EnvironmentLastDeployment[]>;
    /**
     * The name of the environment.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the profile with which the environment is created.
     */
    public readonly profileIdentifier!: pulumi.Output<string>;
    /**
     * The ID of the project where the environment exists.
     *
     * The following arguments are optional:
     */
    public readonly projectIdentifier!: pulumi.Output<string>;
    /**
     * The provider of the environment.
     */
    public /*out*/ readonly providerEnvironment!: pulumi.Output<string>;
    public /*out*/ readonly provisionedResources!: pulumi.Output<outputs.datazone.EnvironmentProvisionedResource[]>;
    public readonly timeouts!: pulumi.Output<outputs.datazone.EnvironmentTimeouts | undefined>;
    /**
     * The user parameters that are used in the environment. See User Parameters for more information.
     */
    public readonly userParameters!: pulumi.Output<outputs.datazone.EnvironmentUserParameter[] | undefined>;

    /**
     * Create a Environment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EnvironmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EnvironmentArgs | EnvironmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EnvironmentState | undefined;
            resourceInputs["accountIdentifier"] = state ? state.accountIdentifier : undefined;
            resourceInputs["accountRegion"] = state ? state.accountRegion : undefined;
            resourceInputs["blueprintIdentifier"] = state ? state.blueprintIdentifier : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["domainIdentifier"] = state ? state.domainIdentifier : undefined;
            resourceInputs["glossaryTerms"] = state ? state.glossaryTerms : undefined;
            resourceInputs["lastDeployments"] = state ? state.lastDeployments : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["profileIdentifier"] = state ? state.profileIdentifier : undefined;
            resourceInputs["projectIdentifier"] = state ? state.projectIdentifier : undefined;
            resourceInputs["providerEnvironment"] = state ? state.providerEnvironment : undefined;
            resourceInputs["provisionedResources"] = state ? state.provisionedResources : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["userParameters"] = state ? state.userParameters : undefined;
        } else {
            const args = argsOrState as EnvironmentArgs | undefined;
            if ((!args || args.domainIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainIdentifier'");
            }
            if ((!args || args.profileIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'profileIdentifier'");
            }
            if ((!args || args.projectIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectIdentifier'");
            }
            resourceInputs["accountIdentifier"] = args ? args.accountIdentifier : undefined;
            resourceInputs["accountRegion"] = args ? args.accountRegion : undefined;
            resourceInputs["blueprintIdentifier"] = args ? args.blueprintIdentifier : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["domainIdentifier"] = args ? args.domainIdentifier : undefined;
            resourceInputs["glossaryTerms"] = args ? args.glossaryTerms : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["profileIdentifier"] = args ? args.profileIdentifier : undefined;
            resourceInputs["projectIdentifier"] = args ? args.projectIdentifier : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["userParameters"] = args ? args.userParameters : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["lastDeployments"] = undefined /*out*/;
            resourceInputs["providerEnvironment"] = undefined /*out*/;
            resourceInputs["provisionedResources"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Environment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Environment resources.
 */
export interface EnvironmentState {
    /**
     * The ID of the Amazon Web Services account where the environment exists
     */
    accountIdentifier?: pulumi.Input<string>;
    /**
     * The Amazon Web Services region where the environment exists.
     */
    accountRegion?: pulumi.Input<string>;
    /**
     * The blueprint with which the environment is created.
     */
    blueprintIdentifier?: pulumi.Input<string>;
    /**
     * The time the environment was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The user who created the environment.
     */
    createdBy?: pulumi.Input<string>;
    /**
     * The description of the environment.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the domain where the environment exists.
     */
    domainIdentifier?: pulumi.Input<string>;
    /**
     * The business glossary terms that can be used in this environment.
     */
    glossaryTerms?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The details of the last deployment of the environment.
     */
    lastDeployments?: pulumi.Input<pulumi.Input<inputs.datazone.EnvironmentLastDeployment>[]>;
    /**
     * The name of the environment.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the profile with which the environment is created.
     */
    profileIdentifier?: pulumi.Input<string>;
    /**
     * The ID of the project where the environment exists.
     *
     * The following arguments are optional:
     */
    projectIdentifier?: pulumi.Input<string>;
    /**
     * The provider of the environment.
     */
    providerEnvironment?: pulumi.Input<string>;
    provisionedResources?: pulumi.Input<pulumi.Input<inputs.datazone.EnvironmentProvisionedResource>[]>;
    timeouts?: pulumi.Input<inputs.datazone.EnvironmentTimeouts>;
    /**
     * The user parameters that are used in the environment. See User Parameters for more information.
     */
    userParameters?: pulumi.Input<pulumi.Input<inputs.datazone.EnvironmentUserParameter>[]>;
}

/**
 * The set of arguments for constructing a Environment resource.
 */
export interface EnvironmentArgs {
    /**
     * The ID of the Amazon Web Services account where the environment exists
     */
    accountIdentifier?: pulumi.Input<string>;
    /**
     * The Amazon Web Services region where the environment exists.
     */
    accountRegion?: pulumi.Input<string>;
    /**
     * The blueprint with which the environment is created.
     */
    blueprintIdentifier?: pulumi.Input<string>;
    /**
     * The description of the environment.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the domain where the environment exists.
     */
    domainIdentifier: pulumi.Input<string>;
    /**
     * The business glossary terms that can be used in this environment.
     */
    glossaryTerms?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the environment.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the profile with which the environment is created.
     */
    profileIdentifier: pulumi.Input<string>;
    /**
     * The ID of the project where the environment exists.
     *
     * The following arguments are optional:
     */
    projectIdentifier: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.datazone.EnvironmentTimeouts>;
    /**
     * The user parameters that are used in the environment. See User Parameters for more information.
     */
    userParameters?: pulumi.Input<pulumi.Input<inputs.datazone.EnvironmentUserParameter>[]>;
}
