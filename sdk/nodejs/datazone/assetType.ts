// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS DataZone Asset Type.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.datazone.AssetType("test", {
 *     description: "example",
 *     domainIdentifier: testAwsDatazoneDomain.id,
 *     name: "example",
 *     owningProjectIdentifier: testAwsDatazoneProject.id,
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import DataZone Asset Type using the `domain_identifier,name`. For example:
 *
 * ```sh
 * $ pulumi import aws:datazone/assetType:AssetType example domain-id-12345678,example
 * ```
 */
export class AssetType extends pulumi.CustomResource {
    /**
     * Get an existing AssetType resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AssetTypeState, opts?: pulumi.CustomResourceOptions): AssetType {
        return new AssetType(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:datazone/assetType:AssetType';

    /**
     * Returns true if the given object is an instance of AssetType.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AssetType {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AssetType.__pulumiType;
    }

    /**
     * The timestamp when the custom asset type was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The user who created the custom asset type.
     */
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    /**
     * The description of the custom asset type.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The unique identifier of the Amazon DataZone domain where the custom asset type is being created.
     */
    public readonly domainIdentifier!: pulumi.Output<string>;
    /**
     * The metadata forms that are to be attached to the custom asset type.
     */
    public readonly formsInputs!: pulumi.Output<outputs.datazone.AssetTypeFormsInput[] | undefined>;
    /**
     * The name of the custom asset type.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The unique identifier of the Amazon DataZone project that owns the custom asset type.
     *
     * The following arguments are optional:
     */
    public readonly owningProjectIdentifier!: pulumi.Output<string>;
    /**
     * The revision of the asset type.
     */
    public /*out*/ readonly revision!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.datazone.AssetTypeTimeouts | undefined>;

    /**
     * Create a AssetType resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AssetTypeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AssetTypeArgs | AssetTypeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AssetTypeState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["domainIdentifier"] = state ? state.domainIdentifier : undefined;
            resourceInputs["formsInputs"] = state ? state.formsInputs : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["owningProjectIdentifier"] = state ? state.owningProjectIdentifier : undefined;
            resourceInputs["revision"] = state ? state.revision : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as AssetTypeArgs | undefined;
            if ((!args || args.domainIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainIdentifier'");
            }
            if ((!args || args.owningProjectIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'owningProjectIdentifier'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["domainIdentifier"] = args ? args.domainIdentifier : undefined;
            resourceInputs["formsInputs"] = args ? args.formsInputs : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["owningProjectIdentifier"] = args ? args.owningProjectIdentifier : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["revision"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AssetType.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AssetType resources.
 */
export interface AssetTypeState {
    /**
     * The timestamp when the custom asset type was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The user who created the custom asset type.
     */
    createdBy?: pulumi.Input<string>;
    /**
     * The description of the custom asset type.
     */
    description?: pulumi.Input<string>;
    /**
     * The unique identifier of the Amazon DataZone domain where the custom asset type is being created.
     */
    domainIdentifier?: pulumi.Input<string>;
    /**
     * The metadata forms that are to be attached to the custom asset type.
     */
    formsInputs?: pulumi.Input<pulumi.Input<inputs.datazone.AssetTypeFormsInput>[]>;
    /**
     * The name of the custom asset type.
     */
    name?: pulumi.Input<string>;
    /**
     * The unique identifier of the Amazon DataZone project that owns the custom asset type.
     *
     * The following arguments are optional:
     */
    owningProjectIdentifier?: pulumi.Input<string>;
    /**
     * The revision of the asset type.
     */
    revision?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.datazone.AssetTypeTimeouts>;
}

/**
 * The set of arguments for constructing a AssetType resource.
 */
export interface AssetTypeArgs {
    /**
     * The description of the custom asset type.
     */
    description?: pulumi.Input<string>;
    /**
     * The unique identifier of the Amazon DataZone domain where the custom asset type is being created.
     */
    domainIdentifier: pulumi.Input<string>;
    /**
     * The metadata forms that are to be attached to the custom asset type.
     */
    formsInputs?: pulumi.Input<pulumi.Input<inputs.datazone.AssetTypeFormsInput>[]>;
    /**
     * The name of the custom asset type.
     */
    name?: pulumi.Input<string>;
    /**
     * The unique identifier of the Amazon DataZone project that owns the custom asset type.
     *
     * The following arguments are optional:
     */
    owningProjectIdentifier: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.datazone.AssetTypeTimeouts>;
}
