// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./input";
import * as outputs from "./output";

export interface EfsLocationEc2Config {
    /**
     * List of Amazon Resource Names (ARNs) of the EC2 Security Groups that are associated with the EFS Mount Target.
     */
    securityGroupArns: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Amazon Resource Name (ARN) of the EC2 Subnet that is associated with the EFS Mount Target.
     */
    subnetArn: pulumi.Input<string>;
}
export interface FsxOpenZfsFileSystemProtocol {
    /**
     * Represents the Network File System (NFS) protocol that DataSync uses to access your FSx for OpenZFS file system. See below.
     */
    nfs: pulumi.Input<inputs.FsxOpenZfsFileSystemProtocolNfs>;
}
export interface FsxOpenZfsFileSystemProtocolNfs {
    /**
     * Represents the mount options that are available for DataSync to access an NFS location. See below.
     */
    mountOptions: pulumi.Input<inputs.FsxOpenZfsFileSystemProtocolNfsMountOptions>;
}
export interface FsxOpenZfsFileSystemProtocolNfsMountOptions {
    /**
     * The specific NFS version that you want DataSync to use for mounting your NFS share. Valid values: `AUTOMATIC`, `NFS3`, `NFS4_0` and `NFS4_1`. Default: `AUTOMATIC`
     */
    version?: pulumi.Input<string>;
}
export interface LocationAzureBlobSasConfiguration {
    /**
     * A SAS token that provides permissions to access your Azure Blob Storage.
     */
    token: pulumi.Input<string>;
}
export interface LocationFsxOntapFileSystemProtocol {
    /**
     * Network File System (NFS) protocol that DataSync uses to access your FSx ONTAP file system. See NFS below.
     */
    nfs?: pulumi.Input<inputs.LocationFsxOntapFileSystemProtocolNfs>;
    /**
     * Server Message Block (SMB) protocol that DataSync uses to access your FSx ONTAP file system. See [SMB] (#smb) below.
     */
    smb?: pulumi.Input<inputs.LocationFsxOntapFileSystemProtocolSmb>;
}
export interface LocationFsxOntapFileSystemProtocolNfs {
    /**
     * Mount options that are available for DataSync to access an NFS location. See NFS Mount Options below.
     */
    mountOptions: pulumi.Input<inputs.LocationFsxOntapFileSystemProtocolNfsMountOptions>;
}
export interface LocationFsxOntapFileSystemProtocolNfsMountOptions {
    version?: pulumi.Input<string>;
}
export interface LocationFsxOntapFileSystemProtocolSmb {
    /**
     * Fully qualified domain name of the Microsoft Active Directory (AD) that your storage virtual machine belongs to.
     */
    domain?: pulumi.Input<string>;
    /**
     * Mount options that are available for DataSync to access an SMB location. See SMB Mount Options below.
     */
    mountOptions: pulumi.Input<inputs.LocationFsxOntapFileSystemProtocolSmbMountOptions>;
    /**
     * Password of a user who has permission to access your SVM.
     */
    password: pulumi.Input<string>;
    /**
     * Username that can mount the location and access the files, folders, and metadata that you need in the SVM.
     */
    user: pulumi.Input<string>;
}
export interface LocationFsxOntapFileSystemProtocolSmbMountOptions {
    version?: pulumi.Input<string>;
}
export interface LocationHdfsNameNode {
    /**
     * The hostname of the NameNode in the HDFS cluster. This value is the IP address or Domain Name Service (DNS) name of the NameNode. An agent that's installed on-premises uses this hostname to communicate with the NameNode in the network.
     */
    hostname: pulumi.Input<string>;
    /**
     * The port that the NameNode uses to listen to client requests.
     */
    port: pulumi.Input<number>;
}
export interface LocationHdfsQopConfiguration {
    /**
     * The data transfer protection setting configured on the HDFS cluster. This setting corresponds to your dfs.data.transfer.protection setting in the hdfs-site.xml file on your Hadoop cluster. Valid values are `DISABLED`, `AUTHENTICATION`, `INTEGRITY` and `PRIVACY`.
     */
    dataTransferProtection?: pulumi.Input<string>;
    /**
     * The RPC protection setting configured on the HDFS cluster. This setting corresponds to your hadoop.rpc.protection setting in your core-site.xml file on your Hadoop cluster. Valid values are `DISABLED`, `AUTHENTICATION`, `INTEGRITY` and `PRIVACY`.
     */
    rpcProtection?: pulumi.Input<string>;
}
export interface LocationSmbMountOptions {
    /**
     * The specific SMB version that you want DataSync to use for mounting your SMB share. Valid values: `AUTOMATIC`, `SMB2`, and `SMB3`. Default: `AUTOMATIC`
     */
    version?: pulumi.Input<string>;
}
export interface NfsLocationMountOptions {
    /**
     * The specific NFS version that you want DataSync to use for mounting your NFS share. Valid values: `AUTOMATIC`, `NFS3`, `NFS4_0` and `NFS4_1`. Default: `AUTOMATIC`
     */
    version?: pulumi.Input<string>;
}
export interface NfsLocationOnPremConfig {
    /**
     * List of Amazon Resource Names (ARNs) of the DataSync Agents used to connect to the NFS server.
     */
    agentArns: pulumi.Input<pulumi.Input<string>[]>;
}
export interface S3LocationS3Config {
    /**
     * ARN of the IAM Role used to connect to the S3 Bucket.
     */
    bucketAccessRoleArn: pulumi.Input<string>;
}
export interface TaskExcludes {
    /**
     * The type of filter rule to apply. Valid values: `SIMPLE_PATTERN`.
     */
    filterType?: pulumi.Input<string>;
    /**
     * A single filter string that consists of the patterns to exclude. The patterns are delimited by "|" (that is, a pipe), for example: `/folder1|/folder2`
     */
    value?: pulumi.Input<string>;
}
export interface TaskIncludes {
    /**
     * The type of filter rule to apply. Valid values: `SIMPLE_PATTERN`.
     */
    filterType?: pulumi.Input<string>;
    /**
     * A single filter string that consists of the patterns to include. The patterns are delimited by "|" (that is, a pipe), for example: `/folder1|/folder2`
     */
    value?: pulumi.Input<string>;
}
export interface TaskOptions {
    /**
     * A file metadata that shows the last time a file was accessed (that is when the file was read or written to). If set to `BEST_EFFORT`, the DataSync Task attempts to preserve the original (that is, the version before sync `PREPARING` phase) `atime` attribute on all source files. Valid values: `BEST_EFFORT`, `NONE`. Default: `BEST_EFFORT`.
     */
    atime?: pulumi.Input<string>;
    /**
     * Limits the bandwidth utilized. For example, to set a maximum of 1 MB, set this value to `1048576`. Value values: `-1` or greater. Default: `-1` (unlimited).
     */
    bytesPerSecond?: pulumi.Input<number>;
    /**
     * Group identifier of the file's owners. Valid values: `BOTH`, `INT_VALUE`, `NAME`, `NONE`. Default: `INT_VALUE` (preserve integer value of the ID).
     */
    gid?: pulumi.Input<string>;
    /**
     * Determines the type of logs that DataSync publishes to a log stream in the Amazon CloudWatch log group that you provide. Valid values: `OFF`, `BASIC`, `TRANSFER`. Default: `OFF`.
     */
    logLevel?: pulumi.Input<string>;
    /**
     * A file metadata that indicates the last time a file was modified (written to) before the sync `PREPARING` phase. Value values: `NONE`, `PRESERVE`. Default: `PRESERVE`.
     */
    mtime?: pulumi.Input<string>;
    /**
     * Specifies whether object tags are maintained when transferring between object storage systems. If you want your DataSync task to ignore object tags, specify the NONE value. Valid values: `PRESERVE`, `NONE`. Default value: `PRESERVE`.
     */
    objectTags?: pulumi.Input<string>;
    /**
     * Determines whether files at the destination should be overwritten or preserved when copying files. Valid values: `ALWAYS`, `NEVER`. Default: `ALWAYS`.
     */
    overwriteMode?: pulumi.Input<string>;
    /**
     * Determines which users or groups can access a file for a specific purpose such as reading, writing, or execution of the file. Valid values: `NONE`, `PRESERVE`. Default: `PRESERVE`.
     */
    posixPermissions?: pulumi.Input<string>;
    /**
     * Whether files deleted in the source should be removed or preserved in the destination file system. Valid values: `PRESERVE`, `REMOVE`. Default: `PRESERVE`.
     */
    preserveDeletedFiles?: pulumi.Input<string>;
    /**
     * Whether the DataSync Task should preserve the metadata of block and character devices in the source files system, and recreate the files with that device name and metadata on the destination. The DataSync Task can’t sync the actual contents of such devices, because many of the devices are non-terminal and don’t return an end of file (EOF) marker. Valid values: `NONE`, `PRESERVE`. Default: `NONE` (ignore special devices).
     */
    preserveDevices?: pulumi.Input<string>;
    /**
     * Determines which components of the SMB security descriptor are copied from source to destination objects. This value is only used for transfers between SMB and Amazon FSx for Windows File Server locations, or between two Amazon FSx for Windows File Server locations. Valid values: `NONE`, `OWNER_DACL`, `OWNER_DACL_SACL`. Default: `OWNER_DACL`.
     */
    securityDescriptorCopyFlags?: pulumi.Input<string>;
    /**
     * Determines whether tasks should be queued before executing the tasks. Valid values: `ENABLED`, `DISABLED`. Default `ENABLED`.
     */
    taskQueueing?: pulumi.Input<string>;
    /**
     * Determines whether DataSync transfers only the data and metadata that differ between the source and the destination location, or whether DataSync transfers all the content from the source, without comparing to the destination location. Valid values: `CHANGED`, `ALL`. Default: `CHANGED`
     */
    transferMode?: pulumi.Input<string>;
    /**
     * User identifier of the file's owners. Valid values: `BOTH`, `INT_VALUE`, `NAME`, `NONE`. Default: `INT_VALUE` (preserve integer value of the ID).
     */
    uid?: pulumi.Input<string>;
    /**
     * Whether a data integrity verification should be performed at the end of a task execution after all data and metadata have been transferred. Valid values: `NONE`, `POINT_IN_TIME_CONSISTENT`, `ONLY_FILES_TRANSFERRED`. Default: `POINT_IN_TIME_CONSISTENT`.
     */
    verifyMode?: pulumi.Input<string>;
}
export interface TaskSchedule {
    /**
     * Specifies the schedule you want your task to use for repeated executions. For more information, see [Schedule Expressions for Rules](https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html).
     */
    scheduleExpression: pulumi.Input<string>;
}
export interface TaskTaskReportConfig {
    /**
     * Specifies the type of task report you'd like. Valid values: `SUMMARY_ONLY` and `STANDARD`.
     */
    outputType?: pulumi.Input<string>;
    /**
     * Specifies whether you want your task report to include only what went wrong with your transfer or a list of what succeeded and didn't. Valid values: `ERRORS_ONLY` and `SUCCESSES_AND_ERRORS`.
     */
    reportLevel?: pulumi.Input<string>;
    /**
     * Configuration block containing the configuration of the reporting level for aspects of your task report. See `reportOverrides` below.
     */
    reportOverrides?: pulumi.Input<inputs.TaskTaskReportConfigReportOverrides>;
    /**
     * Configuration block containing the configuration for the Amazon S3 bucket where DataSync uploads your task report. See `s3Destination` below.
     */
    s3Destination: pulumi.Input<inputs.TaskTaskReportConfigS3Destination>;
    /**
     * Specifies whether your task report includes the new version of each object transferred into an S3 bucket. This only applies if you enable versioning on your bucket. Keep in mind that setting this to INCLUDE can increase the duration of your task execution. Valid values: `INCLUDE` and `NONE`.
     */
    s3ObjectVersioning?: pulumi.Input<string>;
}
export interface TaskTaskReportConfigReportOverrides {
    /**
     * Specifies the level of reporting for the files, objects, and directories that DataSync attempted to delete in your destination location. This only applies if you configure your task to delete data in the destination that isn't in the source. Valid values: `ERRORS_ONLY` and `SUCCESSES_AND_ERRORS`.
     */
    deletedOverride?: pulumi.Input<string>;
    /**
     * Specifies the level of reporting for the files, objects, and directories that DataSync attempted to skip during your transfer. Valid values: `ERRORS_ONLY` and `SUCCESSES_AND_ERRORS`.
     */
    skippedOverride?: pulumi.Input<string>;
    /**
     * Specifies the level of reporting for the files, objects, and directories that DataSync attempted to transfer. Valid values: `ERRORS_ONLY` and `SUCCESSES_AND_ERRORS`.
     */
    transferredOverride?: pulumi.Input<string>;
    /**
     * Specifies the level of reporting for the files, objects, and directories that DataSync attempted to verify at the end of your transfer. Valid values: `ERRORS_ONLY` and `SUCCESSES_AND_ERRORS`.
     *
     * > **NOTE:** If any `reportOverrides` are set to the same value as `task_report_config.report_level`, they will always be flagged as changed. Only set overrides to a value that differs from `task_report_config.report_level`.
     */
    verifiedOverride?: pulumi.Input<string>;
}
export interface TaskTaskReportConfigS3Destination {
    /**
     * Specifies the Amazon Resource Name (ARN) of the IAM policy that allows DataSync to upload a task report to your S3 bucket.
     */
    bucketAccessRoleArn: pulumi.Input<string>;
    /**
     * Specifies the ARN of the S3 bucket where DataSync uploads your report.
     */
    s3BucketArn: pulumi.Input<string>;
    /**
     * Specifies a bucket prefix for your report.
     */
    subdirectory?: pulumi.Input<string>;
}
