// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS DataSync Location FSx Ontap File System.
 *
 * ## Example Usage
 *
 * ## Import
 *
 * Using `pulumi import`, import `aws_datasync_location_fsx_ontap_file_system` using the `DataSync-ARN#FSx-ontap-svm-ARN`. For example:
 *
 * ```sh
 *  $ pulumi import aws:datasync/locationFsxOntapFileSystem:LocationFsxOntapFileSystem example arn:aws:datasync:us-west-2:123456789012:location/loc-12345678901234567#arn:aws:fsx:us-west-2:123456789012:storage-virtual-machine/svm-12345678abcdef123
 * ```
 */
export class LocationFsxOntapFileSystem extends pulumi.CustomResource {
    /**
     * Get an existing LocationFsxOntapFileSystem resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LocationFsxOntapFileSystemState, opts?: pulumi.CustomResourceOptions): LocationFsxOntapFileSystem {
        return new LocationFsxOntapFileSystem(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:datasync/locationFsxOntapFileSystem:LocationFsxOntapFileSystem';

    /**
     * Returns true if the given object is an instance of LocationFsxOntapFileSystem.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LocationFsxOntapFileSystem {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LocationFsxOntapFileSystem.__pulumiType;
    }

    /**
     * ARN of the DataSync Location for the FSx Ontap File System.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public /*out*/ readonly creationTime!: pulumi.Output<string>;
    /**
     * ARN of the FSx Ontap File System.
     */
    public /*out*/ readonly fsxFilesystemArn!: pulumi.Output<string>;
    /**
     * The data transfer protocol that DataSync uses to access your Amazon FSx file system. See Protocol below.
     */
    public readonly protocol!: pulumi.Output<outputs.datasync.LocationFsxOntapFileSystemProtocol>;
    /**
     * The security groups that provide access to your file system's preferred subnet. The security groups must allow outbbound traffic on the following ports (depending on the protocol you use):
     * * Network File System (NFS): TCP ports 111, 635, and 2049
     * * Server Message Block (SMB): TCP port 445
     */
    public readonly securityGroupArns!: pulumi.Output<string[]>;
    /**
     * The ARN of the SVM in your file system where you want to copy data to of from.
     *
     * The following arguments are optional:
     */
    public readonly storageVirtualMachineArn!: pulumi.Output<string>;
    /**
     * Path to the file share in the SVM where you'll copy your data. You can specify a junction path (also known as a mount point), qtree path (for NFS file shares), or share name (for SMB file shares) (e.g. `/vol1`, `/vol1/tree1`, `share1`).
     */
    public readonly subdirectory!: pulumi.Output<string>;
    /**
     * Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * @deprecated Please use `tags` instead.
     */
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    /**
     * URI of the FSx ONTAP file system location
     */
    public /*out*/ readonly uri!: pulumi.Output<string>;

    /**
     * Create a LocationFsxOntapFileSystem resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LocationFsxOntapFileSystemArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LocationFsxOntapFileSystemArgs | LocationFsxOntapFileSystemState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LocationFsxOntapFileSystemState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["creationTime"] = state ? state.creationTime : undefined;
            resourceInputs["fsxFilesystemArn"] = state ? state.fsxFilesystemArn : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["securityGroupArns"] = state ? state.securityGroupArns : undefined;
            resourceInputs["storageVirtualMachineArn"] = state ? state.storageVirtualMachineArn : undefined;
            resourceInputs["subdirectory"] = state ? state.subdirectory : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["uri"] = state ? state.uri : undefined;
        } else {
            const args = argsOrState as LocationFsxOntapFileSystemArgs | undefined;
            if ((!args || args.protocol === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            if ((!args || args.securityGroupArns === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityGroupArns'");
            }
            if ((!args || args.storageVirtualMachineArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storageVirtualMachineArn'");
            }
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["securityGroupArns"] = args ? args.securityGroupArns : undefined;
            resourceInputs["storageVirtualMachineArn"] = args ? args.storageVirtualMachineArn : undefined;
            resourceInputs["subdirectory"] = args ? args.subdirectory : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["fsxFilesystemArn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
            resourceInputs["uri"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["tagsAll"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(LocationFsxOntapFileSystem.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LocationFsxOntapFileSystem resources.
 */
export interface LocationFsxOntapFileSystemState {
    /**
     * ARN of the DataSync Location for the FSx Ontap File System.
     */
    arn?: pulumi.Input<string>;
    creationTime?: pulumi.Input<string>;
    /**
     * ARN of the FSx Ontap File System.
     */
    fsxFilesystemArn?: pulumi.Input<string>;
    /**
     * The data transfer protocol that DataSync uses to access your Amazon FSx file system. See Protocol below.
     */
    protocol?: pulumi.Input<inputs.datasync.LocationFsxOntapFileSystemProtocol>;
    /**
     * The security groups that provide access to your file system's preferred subnet. The security groups must allow outbbound traffic on the following ports (depending on the protocol you use):
     * * Network File System (NFS): TCP ports 111, 635, and 2049
     * * Server Message Block (SMB): TCP port 445
     */
    securityGroupArns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ARN of the SVM in your file system where you want to copy data to of from.
     *
     * The following arguments are optional:
     */
    storageVirtualMachineArn?: pulumi.Input<string>;
    /**
     * Path to the file share in the SVM where you'll copy your data. You can specify a junction path (also known as a mount point), qtree path (for NFS file shares), or share name (for SMB file shares) (e.g. `/vol1`, `/vol1/tree1`, `share1`).
     */
    subdirectory?: pulumi.Input<string>;
    /**
     * Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * @deprecated Please use `tags` instead.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * URI of the FSx ONTAP file system location
     */
    uri?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LocationFsxOntapFileSystem resource.
 */
export interface LocationFsxOntapFileSystemArgs {
    /**
     * The data transfer protocol that DataSync uses to access your Amazon FSx file system. See Protocol below.
     */
    protocol: pulumi.Input<inputs.datasync.LocationFsxOntapFileSystemProtocol>;
    /**
     * The security groups that provide access to your file system's preferred subnet. The security groups must allow outbbound traffic on the following ports (depending on the protocol you use):
     * * Network File System (NFS): TCP ports 111, 635, and 2049
     * * Server Message Block (SMB): TCP port 445
     */
    securityGroupArns: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ARN of the SVM in your file system where you want to copy data to of from.
     *
     * The following arguments are optional:
     */
    storageVirtualMachineArn: pulumi.Input<string>;
    /**
     * Path to the file share in the SVM where you'll copy your data. You can specify a junction path (also known as a mount point), qtree path (for NFS file shares), or share name (for SMB file shares) (e.g. `/vol1`, `/vol1/tree1`, `share1`).
     */
    subdirectory?: pulumi.Input<string>;
    /**
     * Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
