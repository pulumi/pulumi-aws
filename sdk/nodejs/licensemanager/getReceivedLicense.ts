// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * This resource can be used to get data on a received license using an ARN. This can be helpful for pulling in data on a license from the AWS marketplace and sharing that license with another account.
 *
 * ## Example Usage
 *
 * The following shows getting the received license data using and ARN.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = aws.licensemanager.getReceivedLicense({
 *     licenseArn: "arn:aws:license-manager::111111111111:license:l-ecbaa94eb71a4830b6d7e49268fecaa0",
 * });
 * ```
 */
export function getReceivedLicense(args: GetReceivedLicenseArgs, opts?: pulumi.InvokeOptions): Promise<GetReceivedLicenseResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:licensemanager/getReceivedLicense:getReceivedLicense", {
        "licenseArn": args.licenseArn,
    }, opts);
}

/**
 * A collection of arguments for invoking getReceivedLicense.
 */
export interface GetReceivedLicenseArgs {
    /**
     * The ARN of the received license you want data for.
     */
    licenseArn: string;
}

/**
 * A collection of values returned by getReceivedLicense.
 */
export interface GetReceivedLicenseResult {
    /**
     * Granted license beneficiary. This is in the form of the ARN of the root user of the account.
     */
    readonly beneficiary: string;
    /**
     * Configuration for consumption of the license. Detailed below
     */
    readonly consumptionConfigurations: outputs.licensemanager.GetReceivedLicenseConsumptionConfiguration[];
    /**
     * Creation time of the granted license in RFC 3339 format.
     */
    readonly createTime: string;
    /**
     * License entitlements. Detailed below
     */
    readonly entitlements: outputs.licensemanager.GetReceivedLicenseEntitlement[];
    /**
     * Home Region of the granted license.
     */
    readonly homeRegion: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Granted license issuer. Detailed below
     */
    readonly issuers: outputs.licensemanager.GetReceivedLicenseIssuer[];
    /**
     * Amazon Resource Name (ARN) of the license.
     */
    readonly licenseArn: string;
    /**
     * Granted license metadata. This is in the form of a set of all meta data. Detailed below
     */
    readonly licenseMetadatas: outputs.licensemanager.GetReceivedLicenseLicenseMetadata[];
    /**
     * License name.
     */
    readonly licenseName: string;
    /**
     * Product name.
     * * `productSku ` - Product SKU.
     */
    readonly productName: string;
    readonly productSku: string;
    /**
     * Granted license received metadata. Detailed below
     */
    readonly receivedMetadatas: outputs.licensemanager.GetReceivedLicenseReceivedMetadata[];
    /**
     * Granted license status.
     */
    readonly status: string;
    /**
     * Date and time range during which the granted license is valid, in ISO8601-UTC format. Detailed below
     */
    readonly validities: outputs.licensemanager.GetReceivedLicenseValidity[];
    /**
     * Version of the granted license.
     */
    readonly version: string;
}
/**
 * This resource can be used to get data on a received license using an ARN. This can be helpful for pulling in data on a license from the AWS marketplace and sharing that license with another account.
 *
 * ## Example Usage
 *
 * The following shows getting the received license data using and ARN.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = aws.licensemanager.getReceivedLicense({
 *     licenseArn: "arn:aws:license-manager::111111111111:license:l-ecbaa94eb71a4830b6d7e49268fecaa0",
 * });
 * ```
 */
export function getReceivedLicenseOutput(args: GetReceivedLicenseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetReceivedLicenseResult> {
    return pulumi.output(args).apply((a: any) => getReceivedLicense(a, opts))
}

/**
 * A collection of arguments for invoking getReceivedLicense.
 */
export interface GetReceivedLicenseOutputArgs {
    /**
     * The ARN of the received license you want data for.
     */
    licenseArn: pulumi.Input<string>;
}
