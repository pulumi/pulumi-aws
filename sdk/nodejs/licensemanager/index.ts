// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AssociationArgs, AssociationState } from "./association";
export type Association = import("./association").Association;
export const Association: typeof import("./association").Association = null as any;
utilities.lazyLoad(exports, ["Association"], () => require("./association"));

export { LicenseConfigurationArgs, LicenseConfigurationState } from "./licenseConfiguration";
export type LicenseConfiguration = import("./licenseConfiguration").LicenseConfiguration;
export const LicenseConfiguration: typeof import("./licenseConfiguration").LicenseConfiguration = null as any;
utilities.lazyLoad(exports, ["LicenseConfiguration"], () => require("./licenseConfiguration"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws:licensemanager/association:Association":
                return new Association(name, <any>undefined, { urn })
            case "aws:licensemanager/licenseConfiguration:LicenseConfiguration":
                return new LicenseConfiguration(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "licensemanager/association", _module)
pulumi.runtime.registerResourceModule("aws", "licensemanager/licenseConfiguration", _module)
