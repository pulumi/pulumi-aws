// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetAuthorizationTokenResult } from "./getAuthorizationToken";
export const getAuthorizationToken: typeof import("./getAuthorizationToken").getAuthorizationToken = null as any;

export { RepositoryArgs, RepositoryState } from "./repository";
export type Repository = import("./repository").Repository;
export const Repository: typeof import("./repository").Repository = null as any;

export { RepositoryPolicyArgs, RepositoryPolicyState } from "./repositoryPolicy";
export type RepositoryPolicy = import("./repositoryPolicy").RepositoryPolicy;
export const RepositoryPolicy: typeof import("./repositoryPolicy").RepositoryPolicy = null as any;

utilities.lazyLoad(exports, ["getAuthorizationToken"], () => require("./getAuthorizationToken"));
utilities.lazyLoad(exports, ["Repository"], () => require("./repository"));
utilities.lazyLoad(exports, ["RepositoryPolicy"], () => require("./repositoryPolicy"));

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws:ecrpublic/repository:Repository":
                return new Repository(name, <any>undefined, { urn })
            case "aws:ecrpublic/repositoryPolicy:RepositoryPolicy":
                return new RepositoryPolicy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "ecrpublic/repository", _module)
pulumi.runtime.registerResourceModule("aws", "ecrpublic/repositoryPolicy", _module)
