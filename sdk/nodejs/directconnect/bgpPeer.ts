// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class BgpPeer extends pulumi.CustomResource {
    /**
     * Get an existing BgpPeer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BgpPeerState, opts?: pulumi.CustomResourceOptions): BgpPeer {
        return new BgpPeer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:directconnect/bgpPeer:BgpPeer';

    /**
     * Returns true if the given object is an instance of BgpPeer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BgpPeer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BgpPeer.__pulumiType;
    }

    public readonly addressFamily!: pulumi.Output<string>;
    public readonly amazonAddress!: pulumi.Output<string>;
    public /*out*/ readonly awsDevice!: pulumi.Output<string>;
    public readonly bgpAsn!: pulumi.Output<number>;
    public readonly bgpAuthKey!: pulumi.Output<string>;
    public /*out*/ readonly bgpPeerId!: pulumi.Output<string>;
    public /*out*/ readonly bgpStatus!: pulumi.Output<string>;
    public readonly customerAddress!: pulumi.Output<string>;
    public readonly virtualInterfaceId!: pulumi.Output<string>;

    /**
     * Create a BgpPeer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BgpPeerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BgpPeerArgs | BgpPeerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BgpPeerState | undefined;
            resourceInputs["addressFamily"] = state ? state.addressFamily : undefined;
            resourceInputs["amazonAddress"] = state ? state.amazonAddress : undefined;
            resourceInputs["awsDevice"] = state ? state.awsDevice : undefined;
            resourceInputs["bgpAsn"] = state ? state.bgpAsn : undefined;
            resourceInputs["bgpAuthKey"] = state ? state.bgpAuthKey : undefined;
            resourceInputs["bgpPeerId"] = state ? state.bgpPeerId : undefined;
            resourceInputs["bgpStatus"] = state ? state.bgpStatus : undefined;
            resourceInputs["customerAddress"] = state ? state.customerAddress : undefined;
            resourceInputs["virtualInterfaceId"] = state ? state.virtualInterfaceId : undefined;
        } else {
            const args = argsOrState as BgpPeerArgs | undefined;
            if ((!args || args.addressFamily === undefined) && !opts.urn) {
                throw new Error("Missing required property 'addressFamily'");
            }
            if ((!args || args.bgpAsn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bgpAsn'");
            }
            if ((!args || args.virtualInterfaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'virtualInterfaceId'");
            }
            resourceInputs["addressFamily"] = args ? args.addressFamily : undefined;
            resourceInputs["amazonAddress"] = args ? args.amazonAddress : undefined;
            resourceInputs["bgpAsn"] = args ? args.bgpAsn : undefined;
            resourceInputs["bgpAuthKey"] = args ? args.bgpAuthKey : undefined;
            resourceInputs["customerAddress"] = args ? args.customerAddress : undefined;
            resourceInputs["virtualInterfaceId"] = args ? args.virtualInterfaceId : undefined;
            resourceInputs["awsDevice"] = undefined /*out*/;
            resourceInputs["bgpPeerId"] = undefined /*out*/;
            resourceInputs["bgpStatus"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BgpPeer.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BgpPeer resources.
 */
export interface BgpPeerState {
    addressFamily?: pulumi.Input<string>;
    amazonAddress?: pulumi.Input<string>;
    awsDevice?: pulumi.Input<string>;
    bgpAsn?: pulumi.Input<number>;
    bgpAuthKey?: pulumi.Input<string>;
    bgpPeerId?: pulumi.Input<string>;
    bgpStatus?: pulumi.Input<string>;
    customerAddress?: pulumi.Input<string>;
    virtualInterfaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BgpPeer resource.
 */
export interface BgpPeerArgs {
    addressFamily: pulumi.Input<string>;
    amazonAddress?: pulumi.Input<string>;
    bgpAsn: pulumi.Input<number>;
    bgpAuthKey?: pulumi.Input<string>;
    customerAddress?: pulumi.Input<string>;
    virtualInterfaceId: pulumi.Input<string>;
}
