// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class HostedConnection extends pulumi.CustomResource {
    /**
     * Get an existing HostedConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HostedConnectionState, opts?: pulumi.CustomResourceOptions): HostedConnection {
        return new HostedConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:directconnect/hostedConnection:HostedConnection';

    /**
     * Returns true if the given object is an instance of HostedConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HostedConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HostedConnection.__pulumiType;
    }

    public /*out*/ readonly awsDevice!: pulumi.Output<string>;
    public readonly bandwidth!: pulumi.Output<string>;
    public readonly connectionId!: pulumi.Output<string>;
    public /*out*/ readonly hasLogicalRedundancy!: pulumi.Output<string>;
    public /*out*/ readonly jumboFrameCapable!: pulumi.Output<boolean>;
    public /*out*/ readonly lagId!: pulumi.Output<string>;
    public /*out*/ readonly loaIssueTime!: pulumi.Output<string>;
    public /*out*/ readonly location!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly ownerAccountId!: pulumi.Output<string>;
    public /*out*/ readonly partnerName!: pulumi.Output<string>;
    public /*out*/ readonly providerName!: pulumi.Output<string>;
    public /*out*/ readonly region!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public readonly vlan!: pulumi.Output<number>;

    /**
     * Create a HostedConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HostedConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HostedConnectionArgs | HostedConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HostedConnectionState | undefined;
            resourceInputs["awsDevice"] = state ? state.awsDevice : undefined;
            resourceInputs["bandwidth"] = state ? state.bandwidth : undefined;
            resourceInputs["connectionId"] = state ? state.connectionId : undefined;
            resourceInputs["hasLogicalRedundancy"] = state ? state.hasLogicalRedundancy : undefined;
            resourceInputs["jumboFrameCapable"] = state ? state.jumboFrameCapable : undefined;
            resourceInputs["lagId"] = state ? state.lagId : undefined;
            resourceInputs["loaIssueTime"] = state ? state.loaIssueTime : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["ownerAccountId"] = state ? state.ownerAccountId : undefined;
            resourceInputs["partnerName"] = state ? state.partnerName : undefined;
            resourceInputs["providerName"] = state ? state.providerName : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["vlan"] = state ? state.vlan : undefined;
        } else {
            const args = argsOrState as HostedConnectionArgs | undefined;
            if ((!args || args.bandwidth === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bandwidth'");
            }
            if ((!args || args.connectionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectionId'");
            }
            if ((!args || args.ownerAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ownerAccountId'");
            }
            if ((!args || args.vlan === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vlan'");
            }
            resourceInputs["bandwidth"] = args ? args.bandwidth : undefined;
            resourceInputs["connectionId"] = args ? args.connectionId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["ownerAccountId"] = args ? args.ownerAccountId : undefined;
            resourceInputs["vlan"] = args ? args.vlan : undefined;
            resourceInputs["awsDevice"] = undefined /*out*/;
            resourceInputs["hasLogicalRedundancy"] = undefined /*out*/;
            resourceInputs["jumboFrameCapable"] = undefined /*out*/;
            resourceInputs["lagId"] = undefined /*out*/;
            resourceInputs["loaIssueTime"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["partnerName"] = undefined /*out*/;
            resourceInputs["providerName"] = undefined /*out*/;
            resourceInputs["region"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(HostedConnection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering HostedConnection resources.
 */
export interface HostedConnectionState {
    awsDevice?: pulumi.Input<string>;
    bandwidth?: pulumi.Input<string>;
    connectionId?: pulumi.Input<string>;
    hasLogicalRedundancy?: pulumi.Input<string>;
    jumboFrameCapable?: pulumi.Input<boolean>;
    lagId?: pulumi.Input<string>;
    loaIssueTime?: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    ownerAccountId?: pulumi.Input<string>;
    partnerName?: pulumi.Input<string>;
    providerName?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    vlan?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a HostedConnection resource.
 */
export interface HostedConnectionArgs {
    bandwidth: pulumi.Input<string>;
    connectionId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    ownerAccountId: pulumi.Input<string>;
    vlan: pulumi.Input<number>;
}
