// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a MAC Security (MACSec) secret key resource for use with Direct Connect. See [MACsec prerequisites](https://docs.aws.amazon.com/directconnect/latest/UserGuide/direct-connect-mac-sec-getting-started.html#mac-sec-prerequisites) for information about MAC Security (MACsec) prerequisites.
 *
 * Creating this resource will also create a resource of type `aws.secretsmanager.Secret` which is managed by Direct Connect. While you can import this resource into your state, because this secret is managed by Direct Connect, you will not be able to make any modifications to it. See [How AWS Direct Connect uses AWS Secrets Manager](https://docs.aws.amazon.com/secretsmanager/latest/userguide/integrating_how-services-use-secrets_directconnect.html) for details.
 *
 * > **Note:** All arguments including `ckn` and `cak` will be stored in the raw state as plain-text.
 * **Note:** The `secretArn` argument can only be used to reference a previously created MACSec key. You cannot associate a Secrets Manager secret created outside of the `aws.directconnect.MacsecKeyAssociation` resource.
 *
 * ## Example Usage
 * ### Create MACSec key with CKN and CAK
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.directconnect.getConnection({
 *     name: "tf-dx-connection",
 * });
 * const test = new aws.directconnect.MacsecKeyAssociation("test", {
 *     connectionId: example.then(example => example.id),
 *     ckn: "0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef",
 *     cak: "abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789",
 * });
 * ```
 * ### Create MACSec key with existing Secrets Manager secret
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleConnection = aws.directconnect.getConnection({
 *     name: "tf-dx-connection",
 * });
 * const exampleSecret = aws.secretsmanager.getSecret({
 *     name: "directconnect!prod/us-east-1/directconnect/0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef",
 * });
 * const test = new aws.directconnect.MacsecKeyAssociation("test", {
 *     connectionId: exampleConnection.then(exampleConnection => exampleConnection.id),
 *     secretArn: exampleSecret.then(exampleSecret => exampleSecret.arn),
 * });
 * ```
 */
export class MacsecKeyAssociation extends pulumi.CustomResource {
    /**
     * Get an existing MacsecKeyAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MacsecKeyAssociationState, opts?: pulumi.CustomResourceOptions): MacsecKeyAssociation {
        return new MacsecKeyAssociation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:directconnect/macsecKeyAssociation:MacsecKeyAssociation';

    /**
     * Returns true if the given object is an instance of MacsecKeyAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MacsecKeyAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MacsecKeyAssociation.__pulumiType;
    }

    /**
     * The MAC Security (MACsec) CAK to associate with the dedicated connection. The valid values are 64 hexadecimal characters (0-9, A-E). Required if using `ckn`.
     */
    public readonly cak!: pulumi.Output<string | undefined>;
    /**
     * The MAC Security (MACsec) CKN to associate with the dedicated connection. The valid values are 64 hexadecimal characters (0-9, A-E). Required if using `cak`.
     */
    public readonly ckn!: pulumi.Output<string>;
    /**
     * The ID of the dedicated Direct Connect connection. The connection must be a dedicated connection in the `AVAILABLE` state.
     */
    public readonly connectionId!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the MAC Security (MACsec) secret key to associate with the dedicated connection.
     */
    public readonly secretArn!: pulumi.Output<string>;
    /**
     * The date in UTC format that the MAC Security (MACsec) secret key takes effect.
     */
    public /*out*/ readonly startOn!: pulumi.Output<string>;
    /**
     * The state of the MAC Security (MACsec) secret key. The possible values are: associating, associated, disassociating, disassociated. See [MacSecKey](https://docs.aws.amazon.com/directconnect/latest/APIReference/API_MacSecKey.html#DX-Type-MacSecKey-state) for descriptions of each state.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;

    /**
     * Create a MacsecKeyAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MacsecKeyAssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MacsecKeyAssociationArgs | MacsecKeyAssociationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MacsecKeyAssociationState | undefined;
            resourceInputs["cak"] = state ? state.cak : undefined;
            resourceInputs["ckn"] = state ? state.ckn : undefined;
            resourceInputs["connectionId"] = state ? state.connectionId : undefined;
            resourceInputs["secretArn"] = state ? state.secretArn : undefined;
            resourceInputs["startOn"] = state ? state.startOn : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
        } else {
            const args = argsOrState as MacsecKeyAssociationArgs | undefined;
            if ((!args || args.connectionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectionId'");
            }
            resourceInputs["cak"] = args ? args.cak : undefined;
            resourceInputs["ckn"] = args ? args.ckn : undefined;
            resourceInputs["connectionId"] = args ? args.connectionId : undefined;
            resourceInputs["secretArn"] = args ? args.secretArn : undefined;
            resourceInputs["startOn"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MacsecKeyAssociation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MacsecKeyAssociation resources.
 */
export interface MacsecKeyAssociationState {
    /**
     * The MAC Security (MACsec) CAK to associate with the dedicated connection. The valid values are 64 hexadecimal characters (0-9, A-E). Required if using `ckn`.
     */
    cak?: pulumi.Input<string>;
    /**
     * The MAC Security (MACsec) CKN to associate with the dedicated connection. The valid values are 64 hexadecimal characters (0-9, A-E). Required if using `cak`.
     */
    ckn?: pulumi.Input<string>;
    /**
     * The ID of the dedicated Direct Connect connection. The connection must be a dedicated connection in the `AVAILABLE` state.
     */
    connectionId?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the MAC Security (MACsec) secret key to associate with the dedicated connection.
     */
    secretArn?: pulumi.Input<string>;
    /**
     * The date in UTC format that the MAC Security (MACsec) secret key takes effect.
     */
    startOn?: pulumi.Input<string>;
    /**
     * The state of the MAC Security (MACsec) secret key. The possible values are: associating, associated, disassociating, disassociated. See [MacSecKey](https://docs.aws.amazon.com/directconnect/latest/APIReference/API_MacSecKey.html#DX-Type-MacSecKey-state) for descriptions of each state.
     */
    state?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MacsecKeyAssociation resource.
 */
export interface MacsecKeyAssociationArgs {
    /**
     * The MAC Security (MACsec) CAK to associate with the dedicated connection. The valid values are 64 hexadecimal characters (0-9, A-E). Required if using `ckn`.
     */
    cak?: pulumi.Input<string>;
    /**
     * The MAC Security (MACsec) CKN to associate with the dedicated connection. The valid values are 64 hexadecimal characters (0-9, A-E). Required if using `cak`.
     */
    ckn?: pulumi.Input<string>;
    /**
     * The ID of the dedicated Direct Connect connection. The connection must be a dedicated connection in the `AVAILABLE` state.
     */
    connectionId: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the MAC Security (MACsec) secret key to associate with the dedicated connection.
     */
    secretArn?: pulumi.Input<string>;
}
