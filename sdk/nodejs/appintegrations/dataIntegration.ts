// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Provides an Amazon AppIntegrations Data Integration resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.appintegrations.DataIntegration("example", {
 *     description: "example",
 *     kmsKey: aws_kms_key.test.arn,
 *     sourceUri: "Salesforce://AppFlow/example",
 *     scheduleConfig: {
 *         firstExecutionFrom: "1439788442681",
 *         object: "Account",
 *         scheduleExpression: "rate(1 hour)",
 *     },
 *     tags: {
 *         Key1: "Value1",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Amazon AppIntegrations Data Integrations can be imported using the `id` e.g.,
 *
 * ```sh
 *  $ pulumi import aws:appintegrations/dataIntegration:DataIntegration example 12345678-1234-1234-1234-123456789123
 * ```
 */
export class DataIntegration extends pulumi.CustomResource {
    /**
     * Get an existing DataIntegration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DataIntegrationState, opts?: pulumi.CustomResourceOptions): DataIntegration {
        return new DataIntegration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:appintegrations/dataIntegration:DataIntegration';

    /**
     * Returns true if the given object is an instance of DataIntegration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataIntegration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataIntegration.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the Data Integration.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Specifies the description of the Data Integration.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Specifies the KMS key Amazon Resource Name (ARN) for the Data Integration.
     */
    public readonly kmsKey!: pulumi.Output<string>;
    /**
     * Specifies the name of the Data Integration.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A block that defines the name of the data and how often it should be pulled from the source. The Schedule Config block is documented below.
     */
    public readonly scheduleConfig!: pulumi.Output<outputs.appintegrations.DataIntegrationScheduleConfig>;
    /**
     * Specifies the URI of the data source. Create an AppFlow Connector Profile and reference the name of the profile in the URL. An example of this value for Salesforce is `Salesforce://AppFlow/example` where `example` is the name of the AppFlow Connector Profile.
     */
    public readonly sourceUri!: pulumi.Output<string>;
    /**
     * Tags to apply to the Data Integration. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a DataIntegration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataIntegrationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DataIntegrationArgs | DataIntegrationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DataIntegrationState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["kmsKey"] = state ? state.kmsKey : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["scheduleConfig"] = state ? state.scheduleConfig : undefined;
            resourceInputs["sourceUri"] = state ? state.sourceUri : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
        } else {
            const args = argsOrState as DataIntegrationArgs | undefined;
            if ((!args || args.kmsKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'kmsKey'");
            }
            if ((!args || args.scheduleConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scheduleConfig'");
            }
            if ((!args || args.sourceUri === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceUri'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["kmsKey"] = args ? args.kmsKey : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["scheduleConfig"] = args ? args.scheduleConfig : undefined;
            resourceInputs["sourceUri"] = args ? args.sourceUri : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DataIntegration.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DataIntegration resources.
 */
export interface DataIntegrationState {
    /**
     * The Amazon Resource Name (ARN) of the Data Integration.
     */
    arn?: pulumi.Input<string>;
    /**
     * Specifies the description of the Data Integration.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the KMS key Amazon Resource Name (ARN) for the Data Integration.
     */
    kmsKey?: pulumi.Input<string>;
    /**
     * Specifies the name of the Data Integration.
     */
    name?: pulumi.Input<string>;
    /**
     * A block that defines the name of the data and how often it should be pulled from the source. The Schedule Config block is documented below.
     */
    scheduleConfig?: pulumi.Input<inputs.appintegrations.DataIntegrationScheduleConfig>;
    /**
     * Specifies the URI of the data source. Create an AppFlow Connector Profile and reference the name of the profile in the URL. An example of this value for Salesforce is `Salesforce://AppFlow/example` where `example` is the name of the AppFlow Connector Profile.
     */
    sourceUri?: pulumi.Input<string>;
    /**
     * Tags to apply to the Data Integration. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a DataIntegration resource.
 */
export interface DataIntegrationArgs {
    /**
     * Specifies the description of the Data Integration.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the KMS key Amazon Resource Name (ARN) for the Data Integration.
     */
    kmsKey: pulumi.Input<string>;
    /**
     * Specifies the name of the Data Integration.
     */
    name?: pulumi.Input<string>;
    /**
     * A block that defines the name of the data and how often it should be pulled from the source. The Schedule Config block is documented below.
     */
    scheduleConfig: pulumi.Input<inputs.appintegrations.DataIntegrationScheduleConfig>;
    /**
     * Specifies the URI of the data source. Create an AppFlow Connector Profile and reference the name of the profile in the URL. An example of this value for Salesforce is `Salesforce://AppFlow/example` where `example` is the name of the AppFlow Connector Profile.
     */
    sourceUri: pulumi.Input<string>;
    /**
     * Tags to apply to the Data Integration. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
