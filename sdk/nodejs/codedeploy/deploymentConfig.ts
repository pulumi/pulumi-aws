// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export class DeploymentConfig extends pulumi.CustomResource {
    /**
     * Get an existing DeploymentConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DeploymentConfigState, opts?: pulumi.CustomResourceOptions): DeploymentConfig {
        return new DeploymentConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:codedeploy/deploymentConfig:DeploymentConfig';

    /**
     * Returns true if the given object is an instance of DeploymentConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DeploymentConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DeploymentConfig.__pulumiType;
    }

    public readonly computePlatform!: pulumi.Output<string | undefined>;
    public /*out*/ readonly deploymentConfigId!: pulumi.Output<string>;
    public readonly deploymentConfigName!: pulumi.Output<string>;
    public readonly minimumHealthyHosts!: pulumi.Output<outputs.codedeploy.DeploymentConfigMinimumHealthyHosts | undefined>;
    public readonly trafficRoutingConfig!: pulumi.Output<outputs.codedeploy.DeploymentConfigTrafficRoutingConfig | undefined>;

    /**
     * Create a DeploymentConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DeploymentConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DeploymentConfigArgs | DeploymentConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DeploymentConfigState | undefined;
            resourceInputs["computePlatform"] = state ? state.computePlatform : undefined;
            resourceInputs["deploymentConfigId"] = state ? state.deploymentConfigId : undefined;
            resourceInputs["deploymentConfigName"] = state ? state.deploymentConfigName : undefined;
            resourceInputs["minimumHealthyHosts"] = state ? state.minimumHealthyHosts : undefined;
            resourceInputs["trafficRoutingConfig"] = state ? state.trafficRoutingConfig : undefined;
        } else {
            const args = argsOrState as DeploymentConfigArgs | undefined;
            resourceInputs["computePlatform"] = args ? args.computePlatform : undefined;
            resourceInputs["deploymentConfigName"] = args ? args.deploymentConfigName : undefined;
            resourceInputs["minimumHealthyHosts"] = args ? args.minimumHealthyHosts : undefined;
            resourceInputs["trafficRoutingConfig"] = args ? args.trafficRoutingConfig : undefined;
            resourceInputs["deploymentConfigId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DeploymentConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DeploymentConfig resources.
 */
export interface DeploymentConfigState {
    computePlatform?: pulumi.Input<string>;
    deploymentConfigId?: pulumi.Input<string>;
    deploymentConfigName?: pulumi.Input<string>;
    minimumHealthyHosts?: pulumi.Input<inputs.codedeploy.DeploymentConfigMinimumHealthyHosts>;
    trafficRoutingConfig?: pulumi.Input<inputs.codedeploy.DeploymentConfigTrafficRoutingConfig>;
}

/**
 * The set of arguments for constructing a DeploymentConfig resource.
 */
export interface DeploymentConfigArgs {
    computePlatform?: pulumi.Input<string>;
    deploymentConfigName?: pulumi.Input<string>;
    minimumHealthyHosts?: pulumi.Input<inputs.codedeploy.DeploymentConfigMinimumHealthyHosts>;
    trafficRoutingConfig?: pulumi.Input<inputs.codedeploy.DeploymentConfigTrafficRoutingConfig>;
}
