// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";

/**
 * Provides a CodeDeploy deployment config for an application
 */
export class DeploymentConfig extends pulumi.CustomResource {
    /**
     * Get an existing DeploymentConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DeploymentConfigState): DeploymentConfig {
        return new DeploymentConfig(name, <any>state, { id });
    }

    /**
     * The AWS Assigned deployment config id
     */
    public /*out*/ readonly deploymentConfigId: pulumi.Output<string>;
    /**
     * The name of the deployment config.
     */
    public readonly deploymentConfigName: pulumi.Output<string>;
    /**
     * A minimum_healthy_hosts block. Minimum Healthy Hosts are documented below.
     */
    public readonly minimumHealthyHosts: pulumi.Output<{ type: string, value?: number }>;

    /**
     * Create a DeploymentConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DeploymentConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DeploymentConfigArgs | DeploymentConfigState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: DeploymentConfigState = argsOrState as DeploymentConfigState | undefined;
            inputs["deploymentConfigId"] = state ? state.deploymentConfigId : undefined;
            inputs["deploymentConfigName"] = state ? state.deploymentConfigName : undefined;
            inputs["minimumHealthyHosts"] = state ? state.minimumHealthyHosts : undefined;
        } else {
            const args = argsOrState as DeploymentConfigArgs | undefined;
            if (!args || args.deploymentConfigName === undefined) {
                throw new Error("Missing required property 'deploymentConfigName'");
            }
            if (!args || args.minimumHealthyHosts === undefined) {
                throw new Error("Missing required property 'minimumHealthyHosts'");
            }
            inputs["deploymentConfigName"] = args ? args.deploymentConfigName : undefined;
            inputs["minimumHealthyHosts"] = args ? args.minimumHealthyHosts : undefined;
            inputs["deploymentConfigId"] = undefined /*out*/;
        }
        super("aws:codedeploy/deploymentConfig:DeploymentConfig", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DeploymentConfig resources.
 */
export interface DeploymentConfigState {
    /**
     * The AWS Assigned deployment config id
     */
    readonly deploymentConfigId?: pulumi.Input<string>;
    /**
     * The name of the deployment config.
     */
    readonly deploymentConfigName?: pulumi.Input<string>;
    /**
     * A minimum_healthy_hosts block. Minimum Healthy Hosts are documented below.
     */
    readonly minimumHealthyHosts?: pulumi.Input<{ type: pulumi.Input<string>, value?: pulumi.Input<number> }>;
}

/**
 * The set of arguments for constructing a DeploymentConfig resource.
 */
export interface DeploymentConfigArgs {
    /**
     * The name of the deployment config.
     */
    readonly deploymentConfigName: pulumi.Input<string>;
    /**
     * A minimum_healthy_hosts block. Minimum Healthy Hosts are documented below.
     */
    readonly minimumHealthyHosts: pulumi.Input<{ type: pulumi.Input<string>, value?: pulumi.Input<number> }>;
}
