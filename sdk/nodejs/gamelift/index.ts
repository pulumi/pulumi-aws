// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AliasArgs, AliasState } from "./alias";
export type Alias = import("./alias").Alias;
export const Alias: typeof import("./alias").Alias = null as any;

export { BuildArgs, BuildState } from "./build";
export type Build = import("./build").Build;
export const Build: typeof import("./build").Build = null as any;

export { FleetArgs, FleetState } from "./fleet";
export type Fleet = import("./fleet").Fleet;
export const Fleet: typeof import("./fleet").Fleet = null as any;

export { GameServerGroupArgs, GameServerGroupState } from "./gameServerGroup";
export type GameServerGroup = import("./gameServerGroup").GameServerGroup;
export const GameServerGroup: typeof import("./gameServerGroup").GameServerGroup = null as any;

export { GameSessionQueueArgs, GameSessionQueueState } from "./gameSessionQueue";
export type GameSessionQueue = import("./gameSessionQueue").GameSessionQueue;
export const GameSessionQueue: typeof import("./gameSessionQueue").GameSessionQueue = null as any;

export { ScriptArgs, ScriptState } from "./script";
export type Script = import("./script").Script;
export const Script: typeof import("./script").Script = null as any;

utilities.lazyLoad(exports, ["Alias"], () => require("./alias"));
utilities.lazyLoad(exports, ["Build"], () => require("./build"));
utilities.lazyLoad(exports, ["Fleet"], () => require("./fleet"));
utilities.lazyLoad(exports, ["GameServerGroup"], () => require("./gameServerGroup"));
utilities.lazyLoad(exports, ["GameSessionQueue"], () => require("./gameSessionQueue"));
utilities.lazyLoad(exports, ["Script"], () => require("./script"));

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws:gamelift/alias:Alias":
                return new Alias(name, <any>undefined, { urn })
            case "aws:gamelift/build:Build":
                return new Build(name, <any>undefined, { urn })
            case "aws:gamelift/fleet:Fleet":
                return new Fleet(name, <any>undefined, { urn })
            case "aws:gamelift/gameServerGroup:GameServerGroup":
                return new GameServerGroup(name, <any>undefined, { urn })
            case "aws:gamelift/gameSessionQueue:GameSessionQueue":
                return new GameSessionQueue(name, <any>undefined, { urn })
            case "aws:gamelift/script:Script":
                return new Script(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "gamelift/alias", _module)
pulumi.runtime.registerResourceModule("aws", "gamelift/build", _module)
pulumi.runtime.registerResourceModule("aws", "gamelift/fleet", _module)
pulumi.runtime.registerResourceModule("aws", "gamelift/gameServerGroup", _module)
pulumi.runtime.registerResourceModule("aws", "gamelift/gameSessionQueue", _module)
pulumi.runtime.registerResourceModule("aws", "gamelift/script", _module)
