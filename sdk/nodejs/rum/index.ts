// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AppMonitorArgs, AppMonitorState } from "./appMonitor";
export type AppMonitor = import("./appMonitor").AppMonitor;
export const AppMonitor: typeof import("./appMonitor").AppMonitor = null as any;
utilities.lazyLoad(exports, ["AppMonitor"], () => require("./appMonitor"));

export { MetricsDestinationArgs, MetricsDestinationState } from "./metricsDestination";
export type MetricsDestination = import("./metricsDestination").MetricsDestination;
export const MetricsDestination: typeof import("./metricsDestination").MetricsDestination = null as any;
utilities.lazyLoad(exports, ["MetricsDestination"], () => require("./metricsDestination"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws:rum/appMonitor:AppMonitor":
                return new AppMonitor(name, <any>undefined, { urn })
            case "aws:rum/metricsDestination:MetricsDestination":
                return new MetricsDestination(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "rum/appMonitor", _module)
pulumi.runtime.registerResourceModule("aws", "rum/metricsDestination", _module)
