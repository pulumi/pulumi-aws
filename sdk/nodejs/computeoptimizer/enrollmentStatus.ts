// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Manages AWS Compute Optimizer enrollment status.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.computeoptimizer.EnrollmentStatus("example", {status: "Active"});
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import enrollment status using the account ID. For example:
 *
 * ```sh
 * $ pulumi import aws:computeoptimizer/enrollmentStatus:EnrollmentStatus example 123456789012
 * ```
 */
export class EnrollmentStatus extends pulumi.CustomResource {
    /**
     * Get an existing EnrollmentStatus resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EnrollmentStatusState, opts?: pulumi.CustomResourceOptions): EnrollmentStatus {
        return new EnrollmentStatus(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:computeoptimizer/enrollmentStatus:EnrollmentStatus';

    /**
     * Returns true if the given object is an instance of EnrollmentStatus.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EnrollmentStatus {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EnrollmentStatus.__pulumiType;
    }

    /**
     * Whether to enroll member accounts of the organization if the account is the management account of an organization. Default is `false`.
     */
    public readonly includeMemberAccounts!: pulumi.Output<boolean>;
    /**
     * The count of organization member accounts that are opted in to the service, if your account is an organization management account.
     */
    public /*out*/ readonly numberOfMemberAccountsOptedIn!: pulumi.Output<number>;
    /**
     * The enrollment status of the account. Valid values: `Active`, `Inactive`.
     */
    public readonly status!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.computeoptimizer.EnrollmentStatusTimeouts | undefined>;

    /**
     * Create a EnrollmentStatus resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EnrollmentStatusArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EnrollmentStatusArgs | EnrollmentStatusState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EnrollmentStatusState | undefined;
            resourceInputs["includeMemberAccounts"] = state ? state.includeMemberAccounts : undefined;
            resourceInputs["numberOfMemberAccountsOptedIn"] = state ? state.numberOfMemberAccountsOptedIn : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as EnrollmentStatusArgs | undefined;
            if ((!args || args.status === undefined) && !opts.urn) {
                throw new Error("Missing required property 'status'");
            }
            resourceInputs["includeMemberAccounts"] = args ? args.includeMemberAccounts : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["numberOfMemberAccountsOptedIn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EnrollmentStatus.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EnrollmentStatus resources.
 */
export interface EnrollmentStatusState {
    /**
     * Whether to enroll member accounts of the organization if the account is the management account of an organization. Default is `false`.
     */
    includeMemberAccounts?: pulumi.Input<boolean>;
    /**
     * The count of organization member accounts that are opted in to the service, if your account is an organization management account.
     */
    numberOfMemberAccountsOptedIn?: pulumi.Input<number>;
    /**
     * The enrollment status of the account. Valid values: `Active`, `Inactive`.
     */
    status?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.computeoptimizer.EnrollmentStatusTimeouts>;
}

/**
 * The set of arguments for constructing a EnrollmentStatus resource.
 */
export interface EnrollmentStatusArgs {
    /**
     * Whether to enroll member accounts of the organization if the account is the management account of an organization. Default is `false`.
     */
    includeMemberAccounts?: pulumi.Input<boolean>;
    /**
     * The enrollment status of the account. Valid values: `Active`, `Inactive`.
     */
    status: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.computeoptimizer.EnrollmentStatusTimeouts>;
}
