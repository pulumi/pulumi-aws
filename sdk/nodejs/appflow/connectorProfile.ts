// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export class ConnectorProfile extends pulumi.CustomResource {
    /**
     * Get an existing ConnectorProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConnectorProfileState, opts?: pulumi.CustomResourceOptions): ConnectorProfile {
        return new ConnectorProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:appflow/connectorProfile:ConnectorProfile';

    /**
     * Returns true if the given object is an instance of ConnectorProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ConnectorProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ConnectorProfile.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly connectionMode!: pulumi.Output<string>;
    public readonly connectorLabel!: pulumi.Output<string | undefined>;
    public readonly connectorProfileConfig!: pulumi.Output<outputs.appflow.ConnectorProfileConnectorProfileConfig>;
    public readonly connectorType!: pulumi.Output<string>;
    public /*out*/ readonly credentialsArn!: pulumi.Output<string>;
    public readonly kmsArn!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a ConnectorProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConnectorProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ConnectorProfileArgs | ConnectorProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ConnectorProfileState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["connectionMode"] = state ? state.connectionMode : undefined;
            resourceInputs["connectorLabel"] = state ? state.connectorLabel : undefined;
            resourceInputs["connectorProfileConfig"] = state ? state.connectorProfileConfig : undefined;
            resourceInputs["connectorType"] = state ? state.connectorType : undefined;
            resourceInputs["credentialsArn"] = state ? state.credentialsArn : undefined;
            resourceInputs["kmsArn"] = state ? state.kmsArn : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as ConnectorProfileArgs | undefined;
            if ((!args || args.connectionMode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectionMode'");
            }
            if ((!args || args.connectorProfileConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectorProfileConfig'");
            }
            if ((!args || args.connectorType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectorType'");
            }
            resourceInputs["connectionMode"] = args ? args.connectionMode : undefined;
            resourceInputs["connectorLabel"] = args ? args.connectorLabel : undefined;
            resourceInputs["connectorProfileConfig"] = args ? args.connectorProfileConfig : undefined;
            resourceInputs["connectorType"] = args ? args.connectorType : undefined;
            resourceInputs["kmsArn"] = args ? args.kmsArn : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["credentialsArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ConnectorProfile.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ConnectorProfile resources.
 */
export interface ConnectorProfileState {
    arn?: pulumi.Input<string>;
    connectionMode?: pulumi.Input<string>;
    connectorLabel?: pulumi.Input<string>;
    connectorProfileConfig?: pulumi.Input<inputs.appflow.ConnectorProfileConnectorProfileConfig>;
    connectorType?: pulumi.Input<string>;
    credentialsArn?: pulumi.Input<string>;
    kmsArn?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ConnectorProfile resource.
 */
export interface ConnectorProfileArgs {
    connectionMode: pulumi.Input<string>;
    connectorLabel?: pulumi.Input<string>;
    connectorProfileConfig: pulumi.Input<inputs.appflow.ConnectorProfileConnectorProfileConfig>;
    connectorType: pulumi.Input<string>;
    kmsArn?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
