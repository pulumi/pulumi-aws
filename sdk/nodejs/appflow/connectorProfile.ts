// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Provides an AppFlow connector profile resource.
 *
 * For information about AppFlow flows, see the [Amazon AppFlow API Reference](https://docs.aws.amazon.com/appflow/1.0/APIReference/Welcome.html).
 * For specific information about creating an AppFlow connector profile, see the
 * [CreateConnectorProfile](https://docs.aws.amazon.com/appflow/1.0/APIReference/API_CreateConnectorProfile.html) page in the Amazon AppFlow API Reference.
 *
 * ## Import
 *
 * AppFlow Connector Profile can be imported using the connector profile `arn`, e.g.
 *
 * ```sh
 *  $ pulumi import aws:appflow/connectorProfile:ConnectorProfile profile arn:aws:appflow:us-west-2:123456789012:connectorprofile/example-profile
 * ```
 *
 *  [1]https://docs.aws.amazon.com/appflow/1.0/APIReference/Welcome.html [2]https://docs.aws.amazon.com/appflow/1.0/APIReference/API_CreateConnectorProfile.html
 */
export class ConnectorProfile extends pulumi.CustomResource {
    /**
     * Get an existing ConnectorProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConnectorProfileState, opts?: pulumi.CustomResourceOptions): ConnectorProfile {
        return new ConnectorProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:appflow/connectorProfile:ConnectorProfile';

    /**
     * Returns true if the given object is an instance of ConnectorProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ConnectorProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ConnectorProfile.__pulumiType;
    }

    /**
     * ARN of the connector profile.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Indicates the connection mode and specifies whether it is public or private. Private flows use AWS PrivateLink to route data over AWS infrastructure without exposing it to the public internet. One of: `Public`, `Private`.
     */
    public readonly connectionMode!: pulumi.Output<string>;
    /**
     * The label of the connector. The label is unique for each ConnectorRegistration in your AWS account. Only needed if calling for `CustomConnector` connector type.
     */
    public readonly connectorLabel!: pulumi.Output<string | undefined>;
    /**
     * Defines the connector-specific configuration and credentials. See Connector Profile Config for more details.
     */
    public readonly connectorProfileConfig!: pulumi.Output<outputs.appflow.ConnectorProfileConnectorProfileConfig>;
    /**
     * The type of connector. One of: `Amplitude`, `CustomConnector`, `CustomerProfiles`, `Datadog`, `Dynatrace`, `EventBridge`, `Googleanalytics`, `Honeycode`, `Infornexus`, `LookoutMetrics`, `Marketo`, `Redshift`, `S3`, `Salesforce`, `SAPOData`, `Servicenow`, `Singular`, `Slack`, `Snowflake`, `Trendmicro`, `Upsolver`, `Veeva`, `Zendesk`.
     */
    public readonly connectorType!: pulumi.Output<string>;
    /**
     * ARN of the connector profile credentials.
     */
    public /*out*/ readonly credentialsArn!: pulumi.Output<string>;
    /**
     * ARN (Amazon Resource Name) of the Key Management Service (KMS) key you provide for encryption. This is required if you do not want to use the Amazon AppFlow-managed KMS key. If you don't provide anything here, Amazon AppFlow uses the Amazon AppFlow-managed KMS key.
     */
    public readonly kmsArn!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a ConnectorProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConnectorProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ConnectorProfileArgs | ConnectorProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ConnectorProfileState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["connectionMode"] = state ? state.connectionMode : undefined;
            resourceInputs["connectorLabel"] = state ? state.connectorLabel : undefined;
            resourceInputs["connectorProfileConfig"] = state ? state.connectorProfileConfig : undefined;
            resourceInputs["connectorType"] = state ? state.connectorType : undefined;
            resourceInputs["credentialsArn"] = state ? state.credentialsArn : undefined;
            resourceInputs["kmsArn"] = state ? state.kmsArn : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as ConnectorProfileArgs | undefined;
            if ((!args || args.connectionMode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectionMode'");
            }
            if ((!args || args.connectorProfileConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectorProfileConfig'");
            }
            if ((!args || args.connectorType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectorType'");
            }
            resourceInputs["connectionMode"] = args ? args.connectionMode : undefined;
            resourceInputs["connectorLabel"] = args ? args.connectorLabel : undefined;
            resourceInputs["connectorProfileConfig"] = args ? args.connectorProfileConfig : undefined;
            resourceInputs["connectorType"] = args ? args.connectorType : undefined;
            resourceInputs["kmsArn"] = args ? args.kmsArn : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["credentialsArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ConnectorProfile.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ConnectorProfile resources.
 */
export interface ConnectorProfileState {
    /**
     * ARN of the connector profile.
     */
    arn?: pulumi.Input<string>;
    /**
     * Indicates the connection mode and specifies whether it is public or private. Private flows use AWS PrivateLink to route data over AWS infrastructure without exposing it to the public internet. One of: `Public`, `Private`.
     */
    connectionMode?: pulumi.Input<string>;
    /**
     * The label of the connector. The label is unique for each ConnectorRegistration in your AWS account. Only needed if calling for `CustomConnector` connector type.
     */
    connectorLabel?: pulumi.Input<string>;
    /**
     * Defines the connector-specific configuration and credentials. See Connector Profile Config for more details.
     */
    connectorProfileConfig?: pulumi.Input<inputs.appflow.ConnectorProfileConnectorProfileConfig>;
    /**
     * The type of connector. One of: `Amplitude`, `CustomConnector`, `CustomerProfiles`, `Datadog`, `Dynatrace`, `EventBridge`, `Googleanalytics`, `Honeycode`, `Infornexus`, `LookoutMetrics`, `Marketo`, `Redshift`, `S3`, `Salesforce`, `SAPOData`, `Servicenow`, `Singular`, `Slack`, `Snowflake`, `Trendmicro`, `Upsolver`, `Veeva`, `Zendesk`.
     */
    connectorType?: pulumi.Input<string>;
    /**
     * ARN of the connector profile credentials.
     */
    credentialsArn?: pulumi.Input<string>;
    /**
     * ARN (Amazon Resource Name) of the Key Management Service (KMS) key you provide for encryption. This is required if you do not want to use the Amazon AppFlow-managed KMS key. If you don't provide anything here, Amazon AppFlow uses the Amazon AppFlow-managed KMS key.
     */
    kmsArn?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ConnectorProfile resource.
 */
export interface ConnectorProfileArgs {
    /**
     * Indicates the connection mode and specifies whether it is public or private. Private flows use AWS PrivateLink to route data over AWS infrastructure without exposing it to the public internet. One of: `Public`, `Private`.
     */
    connectionMode: pulumi.Input<string>;
    /**
     * The label of the connector. The label is unique for each ConnectorRegistration in your AWS account. Only needed if calling for `CustomConnector` connector type.
     */
    connectorLabel?: pulumi.Input<string>;
    /**
     * Defines the connector-specific configuration and credentials. See Connector Profile Config for more details.
     */
    connectorProfileConfig: pulumi.Input<inputs.appflow.ConnectorProfileConnectorProfileConfig>;
    /**
     * The type of connector. One of: `Amplitude`, `CustomConnector`, `CustomerProfiles`, `Datadog`, `Dynatrace`, `EventBridge`, `Googleanalytics`, `Honeycode`, `Infornexus`, `LookoutMetrics`, `Marketo`, `Redshift`, `S3`, `Salesforce`, `SAPOData`, `Servicenow`, `Singular`, `Slack`, `Snowflake`, `Trendmicro`, `Upsolver`, `Veeva`, `Zendesk`.
     */
    connectorType: pulumi.Input<string>;
    /**
     * ARN (Amazon Resource Name) of the Key Management Service (KMS) key you provide for encryption. This is required if you do not want to use the Amazon AppFlow-managed KMS key. If you don't provide anything here, Amazon AppFlow uses the Amazon AppFlow-managed KMS key.
     */
    kmsArn?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
