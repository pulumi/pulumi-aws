// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./input";
import * as outputs from "./output";

export interface ConnectorProfileConnectorProfileConfig {
    /**
     * The connector-specific credentials required by each connector. See Connector Profile Credentials for more details.
     */
    connectorProfileCredentials: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentials>;
    /**
     * The connector-specific properties of the profile configuration. See Connector Profile Properties for more details.
     */
    connectorProfileProperties: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfileProperties>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfileCredentials {
    /**
     * The connector-specific credentials required when using Amplitude. See Amplitude Connector Profile Credentials for more details.
     */
    amplitude?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitude>;
    /**
     * The connector-specific profile credentials required when using the custom connector. See Custom Connector Profile Credentials for more details.
     */
    customConnector?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnector>;
    /**
     * Connector-specific credentials required when using Datadog. See Datadog Connector Profile Credentials for more details.
     */
    datadog?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadog>;
    /**
     * The connector-specific credentials required when using Dynatrace. See Dynatrace Connector Profile Credentials for more details.
     */
    dynatrace?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatrace>;
    /**
     * The connector-specific credentials required when using Google Analytics. See Google Analytics Connector Profile Credentials for more details.
     */
    googleAnalytics?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalytics>;
    /**
     * The connector-specific credentials required when using Amazon Honeycode. See Honeycode Connector Profile Credentials for more details.
     */
    honeycode?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycode>;
    /**
     * The connector-specific credentials required when using Infor Nexus. See Infor Nexus Connector Profile Credentials for more details.
     */
    inforNexus?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexus>;
    /**
     * Connector-specific credentials required when using Marketo. See Marketo Connector Profile Credentials for more details.
     */
    marketo?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketo>;
    /**
     * Connector-specific credentials required when using Amazon Redshift. See Redshift Connector Profile Credentials for more details.
     */
    redshift?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshift>;
    /**
     * The connector-specific credentials required when using Salesforce. See Salesforce Connector Profile Credentials for more details.
     */
    salesforce?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforce>;
    /**
     * The connector-specific credentials required when using SAPOData. See SAPOData Connector Profile Credentials for more details.
     */
    sapoData?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoData>;
    /**
     * The connector-specific credentials required when using ServiceNow. See ServiceNow Connector Profile Credentials for more details.
     */
    serviceNow?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNow>;
    /**
     * Connector-specific credentials required when using Singular. See Singular Connector Profile Credentials for more details.
     */
    singular?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingular>;
    /**
     * Connector-specific credentials required when using Slack. See Slack Connector Profile Credentials for more details.
     */
    slack?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlack>;
    /**
     * The connector-specific credentials required when using Snowflake. See Snowflake Connector Profile Credentials for more details.
     */
    snowflake?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflake>;
    /**
     * The connector-specific credentials required when using Trend Micro. See Trend Micro Connector Profile Credentials for more details.
     */
    trendmicro?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicro>;
    /**
     * Connector-specific credentials required when using Veeva. See Veeva Connector Profile Credentials for more details.
     */
    veeva?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeeva>;
    /**
     * Connector-specific credentials required when using Zendesk. See Zendesk Connector Profile Credentials for more details.
     */
    zendesk?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendesk>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitude {
    apiKey: pulumi.Input<string>;
    secretKey: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnector {
    apiKey?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKey>;
    authenticationType: pulumi.Input<string>;
    basic?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasic>;
    custom?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustom>;
    oauth2?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKey {
    apiKey: pulumi.Input<string>;
    apiSecretKey?: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasic {
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustom {
    credentialsMap?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    customAuthenticationType: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2 {
    accessToken?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    oauthRequest?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequest>;
    refreshToken?: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequest {
    /**
     * The code provided by the connector when it has been authenticated via the connected app.
     */
    authCode?: pulumi.Input<string>;
    /**
     * The URL to which the authentication server redirects the browser after authorization has been granted.
     */
    redirectUri?: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadog {
    apiKey: pulumi.Input<string>;
    applicationKey: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatrace {
    apiToken: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalytics {
    accessToken?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    oauthRequest?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequest>;
    refreshToken?: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequest {
    /**
     * The code provided by the connector when it has been authenticated via the connected app.
     */
    authCode?: pulumi.Input<string>;
    /**
     * The URL to which the authentication server redirects the browser after authorization has been granted.
     */
    redirectUri?: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycode {
    accessToken?: pulumi.Input<string>;
    oauthRequest?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequest>;
    refreshToken?: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequest {
    /**
     * The code provided by the connector when it has been authenticated via the connected app.
     */
    authCode?: pulumi.Input<string>;
    /**
     * The URL to which the authentication server redirects the browser after authorization has been granted.
     */
    redirectUri?: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexus {
    accessKeyId: pulumi.Input<string>;
    datakey: pulumi.Input<string>;
    secretAccessKey: pulumi.Input<string>;
    userId: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketo {
    accessToken?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    oauthRequest?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequest>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequest {
    /**
     * The code provided by the connector when it has been authenticated via the connected app.
     */
    authCode?: pulumi.Input<string>;
    /**
     * The URL to which the authentication server redirects the browser after authorization has been granted.
     */
    redirectUri?: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshift {
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforce {
    accessToken?: pulumi.Input<string>;
    clientCredentialsArn?: pulumi.Input<string>;
    jwtToken?: pulumi.Input<string>;
    oauth2GrantType?: pulumi.Input<string>;
    oauthRequest?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequest>;
    refreshToken?: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequest {
    /**
     * The code provided by the connector when it has been authenticated via the connected app.
     */
    authCode?: pulumi.Input<string>;
    /**
     * The URL to which the authentication server redirects the browser after authorization has been granted.
     */
    redirectUri?: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoData {
    basicAuthCredentials?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentials>;
    oauthCredentials?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentials>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentials {
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentials {
    accessToken?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    oauthRequest?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequest>;
    refreshToken?: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequest {
    /**
     * The code provided by the connector when it has been authenticated via the connected app.
     */
    authCode?: pulumi.Input<string>;
    /**
     * The URL to which the authentication server redirects the browser after authorization has been granted.
     */
    redirectUri?: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNow {
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingular {
    apiKey: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlack {
    accessToken?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    oauthRequest?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequest>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequest {
    /**
     * The code provided by the connector when it has been authenticated via the connected app.
     */
    authCode?: pulumi.Input<string>;
    /**
     * The URL to which the authentication server redirects the browser after authorization has been granted.
     */
    redirectUri?: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflake {
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicro {
    apiSecretKey: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeeva {
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendesk {
    accessToken?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    oauthRequest?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequest>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequest {
    /**
     * The code provided by the connector when it has been authenticated via the connected app.
     */
    authCode?: pulumi.Input<string>;
    /**
     * The URL to which the authentication server redirects the browser after authorization has been granted.
     */
    redirectUri?: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfileProperties {
    amplitude?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitude>;
    /**
     * The connector-specific profile properties required when using the custom connector. See Custom Connector Profile Properties for more details.
     */
    customConnector?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnector>;
    /**
     * Connector-specific properties required when using Datadog. See Generic Connector Profile Properties for more details.
     */
    datadog?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadog>;
    /**
     * The connector-specific properties required when using Dynatrace. See Generic Connector Profile Properties for more details.
     */
    dynatrace?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatrace>;
    googleAnalytics?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalytics>;
    honeycode?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycode>;
    /**
     * The connector-specific properties required when using Infor Nexus. See Generic Connector Profile Properties for more details.
     */
    inforNexus?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexus>;
    /**
     * Connector-specific properties required when using Marketo. See Generic Connector Profile Properties for more details.
     */
    marketo?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketo>;
    /**
     * Connector-specific properties required when using Amazon Redshift. See Redshift Connector Profile Properties for more details.
     */
    redshift?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshift>;
    /**
     * The connector-specific properties required when using Salesforce. See Salesforce Connector Profile Properties for more details.
     */
    salesforce?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforce>;
    /**
     * The connector-specific properties required when using SAPOData. See SAPOData Connector Profile Properties for more details.
     */
    sapoData?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData>;
    /**
     * The connector-specific properties required when using ServiceNow. See Generic Connector Profile Properties for more details.
     */
    serviceNow?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNow>;
    singular?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingular>;
    /**
     * Connector-specific properties required when using Slack. See Generic Connector Profile Properties for more details.
     */
    slack?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlack>;
    /**
     * The connector-specific properties required when using Snowflake. See Snowflake Connector Profile Properties for more details.
     */
    snowflake?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflake>;
    trendmicro?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicro>;
    /**
     * Connector-specific properties required when using Veeva. See Generic Connector Profile Properties for more details.
     */
    veeva?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeeva>;
    /**
     * Connector-specific properties required when using Zendesk. See Generic Connector Profile Properties for more details.
     */
    zendesk?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendesk>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitude {
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnector {
    oauth2Properties?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2Properties>;
    profileProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2Properties {
    oauth2GrantType: pulumi.Input<string>;
    tokenUrl: pulumi.Input<string>;
    tokenUrlCustomProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadog {
    instanceUrl: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatrace {
    instanceUrl: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalytics {
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycode {
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexus {
    instanceUrl: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketo {
    instanceUrl: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshift {
    bucketName: pulumi.Input<string>;
    bucketPrefix?: pulumi.Input<string>;
    clusterIdentifier?: pulumi.Input<string>;
    dataApiRoleArn?: pulumi.Input<string>;
    databaseName?: pulumi.Input<string>;
    databaseUrl?: pulumi.Input<string>;
    roleArn: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforce {
    instanceUrl?: pulumi.Input<string>;
    isSandboxEnvironment?: pulumi.Input<boolean>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData {
    applicationHostUrl: pulumi.Input<string>;
    applicationServicePath: pulumi.Input<string>;
    clientNumber: pulumi.Input<string>;
    logonLanguage?: pulumi.Input<string>;
    oauthProperties?: pulumi.Input<inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthProperties>;
    portNumber: pulumi.Input<number>;
    privateLinkServiceName?: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthProperties {
    authCodeUrl: pulumi.Input<string>;
    oauthScopes: pulumi.Input<pulumi.Input<string>[]>;
    tokenUrl: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNow {
    instanceUrl: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingular {
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlack {
    instanceUrl: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflake {
    accountName?: pulumi.Input<string>;
    bucketName: pulumi.Input<string>;
    bucketPrefix?: pulumi.Input<string>;
    privateLinkServiceName?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    stage: pulumi.Input<string>;
    warehouse: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicro {
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeeva {
    instanceUrl: pulumi.Input<string>;
}
export interface ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendesk {
    instanceUrl: pulumi.Input<string>;
}
export interface FlowDestinationFlowConfig {
    /**
     * API version that the destination connector uses.
     */
    apiVersion?: pulumi.Input<string>;
    /**
     * Name of the connector profile. This name must be unique for each connector profile in the AWS account.
     */
    connectorProfileName?: pulumi.Input<string>;
    /**
     * Type of connector, such as Salesforce, Amplitude, and so on. Valid values are `Salesforce`, `Singular`, `Slack`, `Redshift`, `S3`, `Marketo`, `Googleanalytics`, `Zendesk`, `Servicenow`, `Datadog`, `Trendmicro`, `Snowflake`, `Dynatrace`, `Infornexus`, `Amplitude`, `Veeva`, `EventBridge`, `LookoutMetrics`, `Upsolver`, `Honeycode`, `CustomerProfiles`, `SAPOData`, and `CustomConnector`.
     */
    connectorType: pulumi.Input<string>;
    /**
     * This stores the information that is required to query a particular connector. See Destination Connector Properties for more information.
     */
    destinationConnectorProperties: pulumi.Input<inputs.FlowDestinationFlowConfigDestinationConnectorProperties>;
}
export interface FlowDestinationFlowConfigDestinationConnectorProperties {
    /**
     * Properties that are required to query the custom Connector. See Custom Connector Destination Properties for more details.
     */
    customConnector?: pulumi.Input<inputs.FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector>;
    /**
     * Properties that are required to query Amazon Connect Customer Profiles. See Customer Profiles Destination Properties for more details.
     */
    customerProfiles?: pulumi.Input<inputs.FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles>;
    /**
     * Properties that are required to query Amazon EventBridge. See Generic Destination Properties for more details.
     */
    eventBridge?: pulumi.Input<inputs.FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridge>;
    /**
     * Properties that are required to query Amazon Honeycode. See Generic Destination Properties for more details.
     */
    honeycode?: pulumi.Input<inputs.FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycode>;
    lookoutMetrics?: pulumi.Input<inputs.FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetrics>;
    /**
     * Properties that are required to query Marketo. See Generic Destination Properties for more details.
     */
    marketo?: pulumi.Input<inputs.FlowDestinationFlowConfigDestinationConnectorPropertiesMarketo>;
    /**
     * Properties that are required to query Amazon Redshift. See Redshift Destination Properties for more details.
     */
    redshift?: pulumi.Input<inputs.FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift>;
    /**
     * Properties that are required to query Amazon S3. See S3 Destination Properties for more details.
     */
    s3?: pulumi.Input<inputs.FlowDestinationFlowConfigDestinationConnectorPropertiesS3>;
    /**
     * Properties that are required to query Salesforce. See Salesforce Destination Properties for more details.
     */
    salesforce?: pulumi.Input<inputs.FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce>;
    /**
     * Properties that are required to query SAPOData. See SAPOData Destination Properties for more details.
     */
    sapoData?: pulumi.Input<inputs.FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData>;
    /**
     * Properties that are required to query Snowflake. See Snowflake Destination Properties for more details.
     */
    snowflake?: pulumi.Input<inputs.FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake>;
    /**
     * Properties that are required to query Upsolver. See Upsolver Destination Properties for more details.
     */
    upsolver?: pulumi.Input<inputs.FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolver>;
    /**
     * Properties that are required to query Zendesk. See Zendesk Destination Properties for more details.
     */
    zendesk?: pulumi.Input<inputs.FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk>;
}
export interface FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector {
    customProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    entityName: pulumi.Input<string>;
    errorHandlingConfig?: pulumi.Input<inputs.FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfig>;
    idFieldNames?: pulumi.Input<pulumi.Input<string>[]>;
    writeOperationType?: pulumi.Input<string>;
}
export interface FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfig {
    /**
     * Name of the Amazon S3 bucket.
     */
    bucketName?: pulumi.Input<string>;
    /**
     * Amazon S3 bucket prefix.
     */
    bucketPrefix?: pulumi.Input<string>;
    /**
     * If the flow should fail after the first instance of a failure when attempting to place data in the destination.
     */
    failOnFirstDestinationError?: pulumi.Input<boolean>;
}
export interface FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles {
    domainName: pulumi.Input<string>;
    objectTypeName?: pulumi.Input<string>;
}
export interface FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridge {
    errorHandlingConfig?: pulumi.Input<inputs.FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfig>;
    object: pulumi.Input<string>;
}
export interface FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfig {
    /**
     * Name of the Amazon S3 bucket.
     */
    bucketName?: pulumi.Input<string>;
    /**
     * Amazon S3 bucket prefix.
     */
    bucketPrefix?: pulumi.Input<string>;
    /**
     * If the flow should fail after the first instance of a failure when attempting to place data in the destination.
     */
    failOnFirstDestinationError?: pulumi.Input<boolean>;
}
export interface FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycode {
    errorHandlingConfig?: pulumi.Input<inputs.FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfig>;
    object: pulumi.Input<string>;
}
export interface FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfig {
    /**
     * Name of the Amazon S3 bucket.
     */
    bucketName?: pulumi.Input<string>;
    /**
     * Amazon S3 bucket prefix.
     */
    bucketPrefix?: pulumi.Input<string>;
    /**
     * If the flow should fail after the first instance of a failure when attempting to place data in the destination.
     */
    failOnFirstDestinationError?: pulumi.Input<boolean>;
}
export interface FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetrics {
}
export interface FlowDestinationFlowConfigDestinationConnectorPropertiesMarketo {
    errorHandlingConfig?: pulumi.Input<inputs.FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfig>;
    object: pulumi.Input<string>;
}
export interface FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfig {
    /**
     * Name of the Amazon S3 bucket.
     */
    bucketName?: pulumi.Input<string>;
    /**
     * Amazon S3 bucket prefix.
     */
    bucketPrefix?: pulumi.Input<string>;
    /**
     * If the flow should fail after the first instance of a failure when attempting to place data in the destination.
     */
    failOnFirstDestinationError?: pulumi.Input<boolean>;
}
export interface FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift {
    bucketPrefix?: pulumi.Input<string>;
    errorHandlingConfig?: pulumi.Input<inputs.FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfig>;
    intermediateBucketName: pulumi.Input<string>;
    object: pulumi.Input<string>;
}
export interface FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfig {
    /**
     * Name of the Amazon S3 bucket.
     */
    bucketName?: pulumi.Input<string>;
    /**
     * Amazon S3 bucket prefix.
     */
    bucketPrefix?: pulumi.Input<string>;
    /**
     * If the flow should fail after the first instance of a failure when attempting to place data in the destination.
     */
    failOnFirstDestinationError?: pulumi.Input<boolean>;
}
export interface FlowDestinationFlowConfigDestinationConnectorPropertiesS3 {
    bucketName: pulumi.Input<string>;
    bucketPrefix?: pulumi.Input<string>;
    s3OutputFormatConfig?: pulumi.Input<inputs.FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfig>;
}
export interface FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfig {
    /**
     * Aggregation settings that you can use to customize the output format of your flow data. See Aggregation Config for more details.
     */
    aggregationConfig?: pulumi.Input<inputs.FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfig>;
    /**
     * File type that Amazon AppFlow places in the Amazon S3 bucket. Valid values are `CSV`, `JSON`, and `PARQUET`.
     */
    fileType?: pulumi.Input<string>;
    /**
     * Determines the prefix that Amazon AppFlow applies to the folder name in the Amazon S3 bucket. You can name folders according to the flow frequency and date. See Prefix Config for more details.
     */
    prefixConfig?: pulumi.Input<inputs.FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig>;
    /**
     * Whether the data types from the source system need to be preserved (Only valid for `Parquet` file type)
     */
    preserveSourceDataTyping?: pulumi.Input<boolean>;
}
export interface FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfig {
    /**
     * Whether Amazon AppFlow aggregates the flow records into a single file, or leave them unaggregated. Valid values are `None` and `SingleFile`.
     */
    aggregationType?: pulumi.Input<string>;
    /**
     * The desired file size, in MB, for each output file that Amazon AppFlow writes to the flow destination. Integer value.
     */
    targetFileSize?: pulumi.Input<number>;
}
export interface FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig {
    /**
     * Determines the level of granularity that's included in the prefix. Valid values are `YEAR`, `MONTH`, `DAY`, `HOUR`, and `MINUTE`.
     */
    prefixFormat?: pulumi.Input<string>;
    /**
     * Determines the format of the prefix, and whether it applies to the file name, file path, or both. Valid values are `FILENAME`, `PATH`, and `PATH_AND_FILENAME`.
     */
    prefixType?: pulumi.Input<string>;
}
export interface FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce {
    errorHandlingConfig?: pulumi.Input<inputs.FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfig>;
    idFieldNames?: pulumi.Input<pulumi.Input<string>[]>;
    object: pulumi.Input<string>;
    writeOperationType?: pulumi.Input<string>;
}
export interface FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfig {
    /**
     * Name of the Amazon S3 bucket.
     */
    bucketName?: pulumi.Input<string>;
    /**
     * Amazon S3 bucket prefix.
     */
    bucketPrefix?: pulumi.Input<string>;
    /**
     * If the flow should fail after the first instance of a failure when attempting to place data in the destination.
     */
    failOnFirstDestinationError?: pulumi.Input<boolean>;
}
export interface FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData {
    errorHandlingConfig?: pulumi.Input<inputs.FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfig>;
    idFieldNames?: pulumi.Input<pulumi.Input<string>[]>;
    objectPath: pulumi.Input<string>;
    successResponseHandlingConfig?: pulumi.Input<inputs.FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfig>;
    writeOperationType?: pulumi.Input<string>;
}
export interface FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfig {
    /**
     * Name of the Amazon S3 bucket.
     */
    bucketName?: pulumi.Input<string>;
    /**
     * Amazon S3 bucket prefix.
     */
    bucketPrefix?: pulumi.Input<string>;
    /**
     * If the flow should fail after the first instance of a failure when attempting to place data in the destination.
     */
    failOnFirstDestinationError?: pulumi.Input<boolean>;
}
export interface FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfig {
    /**
     * Name of the Amazon S3 bucket.
     */
    bucketName?: pulumi.Input<string>;
    /**
     * Amazon S3 bucket prefix.
     */
    bucketPrefix?: pulumi.Input<string>;
}
export interface FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake {
    bucketPrefix?: pulumi.Input<string>;
    errorHandlingConfig?: pulumi.Input<inputs.FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfig>;
    intermediateBucketName: pulumi.Input<string>;
    object: pulumi.Input<string>;
}
export interface FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfig {
    /**
     * Name of the Amazon S3 bucket.
     */
    bucketName?: pulumi.Input<string>;
    /**
     * Amazon S3 bucket prefix.
     */
    bucketPrefix?: pulumi.Input<string>;
    /**
     * If the flow should fail after the first instance of a failure when attempting to place data in the destination.
     */
    failOnFirstDestinationError?: pulumi.Input<boolean>;
}
export interface FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolver {
    bucketName: pulumi.Input<string>;
    bucketPrefix?: pulumi.Input<string>;
    s3OutputFormatConfig: pulumi.Input<inputs.FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfig>;
}
export interface FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfig {
    /**
     * Aggregation settings that you can use to customize the output format of your flow data. See Aggregation Config for more details.
     */
    aggregationConfig?: pulumi.Input<inputs.FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfig>;
    /**
     * File type that Amazon AppFlow places in the Amazon S3 bucket. Valid values are `CSV`, `JSON`, and `PARQUET`.
     */
    fileType?: pulumi.Input<string>;
    /**
     * Determines the prefix that Amazon AppFlow applies to the folder name in the Amazon S3 bucket. You can name folders according to the flow frequency and date. See Prefix Config for more details.
     */
    prefixConfig: pulumi.Input<inputs.FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfig>;
}
export interface FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfig {
    /**
     * Whether Amazon AppFlow aggregates the flow records into a single file, or leave them unaggregated. Valid values are `None` and `SingleFile`.
     */
    aggregationType?: pulumi.Input<string>;
}
export interface FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfig {
    /**
     * Determines the level of granularity that's included in the prefix. Valid values are `YEAR`, `MONTH`, `DAY`, `HOUR`, and `MINUTE`.
     */
    prefixFormat?: pulumi.Input<string>;
    /**
     * Determines the format of the prefix, and whether it applies to the file name, file path, or both. Valid values are `FILENAME`, `PATH`, and `PATH_AND_FILENAME`.
     */
    prefixType: pulumi.Input<string>;
}
export interface FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk {
    errorHandlingConfig?: pulumi.Input<inputs.FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfig>;
    idFieldNames?: pulumi.Input<pulumi.Input<string>[]>;
    object: pulumi.Input<string>;
    writeOperationType?: pulumi.Input<string>;
}
export interface FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfig {
    /**
     * Name of the Amazon S3 bucket.
     */
    bucketName?: pulumi.Input<string>;
    /**
     * Amazon S3 bucket prefix.
     */
    bucketPrefix?: pulumi.Input<string>;
    /**
     * If the flow should fail after the first instance of a failure when attempting to place data in the destination.
     */
    failOnFirstDestinationError?: pulumi.Input<boolean>;
}
export interface FlowSourceFlowConfig {
    /**
     * API version that the destination connector uses.
     */
    apiVersion?: pulumi.Input<string>;
    /**
     * Name of the connector profile. This name must be unique for each connector profile in the AWS account.
     */
    connectorProfileName?: pulumi.Input<string>;
    /**
     * Type of connector, such as Salesforce, Amplitude, and so on. Valid values are `Salesforce`, `Singular`, `Slack`, `Redshift`, `S3`, `Marketo`, `Googleanalytics`, `Zendesk`, `Servicenow`, `Datadog`, `Trendmicro`, `Snowflake`, `Dynatrace`, `Infornexus`, `Amplitude`, `Veeva`, `EventBridge`, `LookoutMetrics`, `Upsolver`, `Honeycode`, `CustomerProfiles`, `SAPOData`, and `CustomConnector`.
     */
    connectorType: pulumi.Input<string>;
    /**
     * Defines the configuration for a scheduled incremental data pull. If a valid configuration is provided, the fields specified in the configuration are used when querying for the incremental data pull. See Incremental Pull Config for more details.
     */
    incrementalPullConfig?: pulumi.Input<inputs.FlowSourceFlowConfigIncrementalPullConfig>;
    /**
     * Information that is required to query a particular source connector. See Source Connector Properties for details.
     */
    sourceConnectorProperties: pulumi.Input<inputs.FlowSourceFlowConfigSourceConnectorProperties>;
}
export interface FlowSourceFlowConfigIncrementalPullConfig {
    /**
     * Field that specifies the date time or timestamp field as the criteria to use when importing incremental records from the source.
     */
    datetimeTypeFieldName?: pulumi.Input<string>;
}
export interface FlowSourceFlowConfigSourceConnectorProperties {
    /**
     * Information that is required for querying Amplitude. See Generic Source Properties for more details.
     */
    amplitude?: pulumi.Input<inputs.FlowSourceFlowConfigSourceConnectorPropertiesAmplitude>;
    /**
     * Properties that are applied when the custom connector is being used as a source. See Custom Connector Source Properties.
     */
    customConnector?: pulumi.Input<inputs.FlowSourceFlowConfigSourceConnectorPropertiesCustomConnector>;
    /**
     * Information that is required for querying Datadog. See Generic Source Properties for more details.
     */
    datadog?: pulumi.Input<inputs.FlowSourceFlowConfigSourceConnectorPropertiesDatadog>;
    dynatrace?: pulumi.Input<inputs.FlowSourceFlowConfigSourceConnectorPropertiesDynatrace>;
    googleAnalytics?: pulumi.Input<inputs.FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalytics>;
    /**
     * Information that is required for querying Infor Nexus. See Generic Source Properties for more details.
     */
    inforNexus?: pulumi.Input<inputs.FlowSourceFlowConfigSourceConnectorPropertiesInforNexus>;
    /**
     * Information that is required for querying Marketo. See Generic Source Properties for more details.
     */
    marketo?: pulumi.Input<inputs.FlowSourceFlowConfigSourceConnectorPropertiesMarketo>;
    /**
     * Information that is required for querying Amazon S3. See S3 Source Properties for more details.
     */
    s3?: pulumi.Input<inputs.FlowSourceFlowConfigSourceConnectorPropertiesS3>;
    /**
     * Information that is required for querying Salesforce. See Salesforce Source Properties for more details.
     */
    salesforce?: pulumi.Input<inputs.FlowSourceFlowConfigSourceConnectorPropertiesSalesforce>;
    /**
     * Information that is required for querying SAPOData as a flow source. See SAPO Source Properties for more details.
     */
    sapoData?: pulumi.Input<inputs.FlowSourceFlowConfigSourceConnectorPropertiesSapoData>;
    /**
     * Information that is required for querying ServiceNow. See Generic Source Properties for more details.
     */
    serviceNow?: pulumi.Input<inputs.FlowSourceFlowConfigSourceConnectorPropertiesServiceNow>;
    /**
     * Information that is required for querying Singular. See Generic Source Properties for more details.
     */
    singular?: pulumi.Input<inputs.FlowSourceFlowConfigSourceConnectorPropertiesSingular>;
    /**
     * Information that is required for querying Slack. See Generic Source Properties for more details.
     */
    slack?: pulumi.Input<inputs.FlowSourceFlowConfigSourceConnectorPropertiesSlack>;
    trendmicro?: pulumi.Input<inputs.FlowSourceFlowConfigSourceConnectorPropertiesTrendmicro>;
    /**
     * Information that is required for querying Veeva. See Veeva Source Properties for more details.
     */
    veeva?: pulumi.Input<inputs.FlowSourceFlowConfigSourceConnectorPropertiesVeeva>;
    /**
     * Information that is required for querying Zendesk. See Generic Source Properties for more details.
     */
    zendesk?: pulumi.Input<inputs.FlowSourceFlowConfigSourceConnectorPropertiesZendesk>;
}
export interface FlowSourceFlowConfigSourceConnectorPropertiesAmplitude {
    object: pulumi.Input<string>;
}
export interface FlowSourceFlowConfigSourceConnectorPropertiesCustomConnector {
    customProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    entityName: pulumi.Input<string>;
}
export interface FlowSourceFlowConfigSourceConnectorPropertiesDatadog {
    object: pulumi.Input<string>;
}
export interface FlowSourceFlowConfigSourceConnectorPropertiesDynatrace {
    object: pulumi.Input<string>;
}
export interface FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalytics {
    object: pulumi.Input<string>;
}
export interface FlowSourceFlowConfigSourceConnectorPropertiesInforNexus {
    object: pulumi.Input<string>;
}
export interface FlowSourceFlowConfigSourceConnectorPropertiesMarketo {
    object: pulumi.Input<string>;
}
export interface FlowSourceFlowConfigSourceConnectorPropertiesS3 {
    bucketName: pulumi.Input<string>;
    bucketPrefix: pulumi.Input<string>;
    s3InputFormatConfig?: pulumi.Input<inputs.FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfig>;
}
export interface FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfig {
    /**
     * File type that Amazon AppFlow gets from your Amazon S3 bucket. Valid values are `CSV` and `JSON`.
     */
    s3InputFileType?: pulumi.Input<string>;
}
export interface FlowSourceFlowConfigSourceConnectorPropertiesSalesforce {
    enableDynamicFieldUpdate?: pulumi.Input<boolean>;
    includeDeletedRecords?: pulumi.Input<boolean>;
    object: pulumi.Input<string>;
}
export interface FlowSourceFlowConfigSourceConnectorPropertiesSapoData {
    objectPath: pulumi.Input<string>;
}
export interface FlowSourceFlowConfigSourceConnectorPropertiesServiceNow {
    object: pulumi.Input<string>;
}
export interface FlowSourceFlowConfigSourceConnectorPropertiesSingular {
    object: pulumi.Input<string>;
}
export interface FlowSourceFlowConfigSourceConnectorPropertiesSlack {
    object: pulumi.Input<string>;
}
export interface FlowSourceFlowConfigSourceConnectorPropertiesTrendmicro {
    object: pulumi.Input<string>;
}
export interface FlowSourceFlowConfigSourceConnectorPropertiesVeeva {
    documentType?: pulumi.Input<string>;
    includeAllVersions?: pulumi.Input<boolean>;
    includeRenditions?: pulumi.Input<boolean>;
    includeSourceFiles?: pulumi.Input<boolean>;
    object: pulumi.Input<string>;
}
export interface FlowSourceFlowConfigSourceConnectorPropertiesZendesk {
    object: pulumi.Input<string>;
}
export interface FlowTask {
    /**
     * Operation to be performed on the provided source fields. See Connector Operator for details.
     */
    connectorOperators?: pulumi.Input<pulumi.Input<inputs.FlowTaskConnectorOperator>[]>;
    /**
     * Field in a destination connector, or a field value against which Amazon AppFlow validates a source field.
     */
    destinationField?: pulumi.Input<string>;
    /**
     * Source fields to which a particular task is applied.
     */
    sourceFields?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Map used to store task-related information. The execution service looks for particular information based on the `TaskType`. Valid keys are `VALUE`, `VALUES`, `DATA_TYPE`, `UPPER_BOUND`, `LOWER_BOUND`, `SOURCE_DATA_TYPE`, `DESTINATION_DATA_TYPE`, `VALIDATION_ACTION`, `MASK_VALUE`, `MASK_LENGTH`, `TRUNCATE_LENGTH`, `MATH_OPERATION_FIELDS_ORDER`, `CONCAT_FORMAT`, `SUBFIELD_CATEGORY_MAP`, and `EXCLUDE_SOURCE_FIELDS_LIST`.
     */
    taskProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Particular task implementation that Amazon AppFlow performs. Valid values are `Arithmetic`, `Filter`, `Map`, `Map_all`, `Mask`, `Merge`, `Passthrough`, `Truncate`, and `Validate`.
     */
    taskType: pulumi.Input<string>;
}
export interface FlowTaskConnectorOperator {
    /**
     * Operation to be performed on the provided Amplitude source fields. The only valid value is `BETWEEN`.
     */
    amplitude?: pulumi.Input<string>;
    /**
     * Operators supported by the custom connector. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `CONTAINS`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `NOT_EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
     */
    customConnector?: pulumi.Input<string>;
    /**
     * Operation to be performed on the provided Datadog source fields. Valid values are `PROJECTION`, `BETWEEN`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
     */
    datadog?: pulumi.Input<string>;
    /**
     * Operation to be performed on the provided Dynatrace source fields. Valid values are `PROJECTION`, `BETWEEN`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
     */
    dynatrace?: pulumi.Input<string>;
    /**
     * Operation to be performed on the provided Google Analytics source fields. Valid values are `PROJECTION` and `BETWEEN`.
     */
    googleAnalytics?: pulumi.Input<string>;
    /**
     * Operation to be performed on the provided Infor Nexus source fields. Valid values are `PROJECTION`, `BETWEEN`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
     */
    inforNexus?: pulumi.Input<string>;
    /**
     * Operation to be performed on the provided Marketo source fields. Valid values are `PROJECTION`, `BETWEEN`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
     */
    marketo?: pulumi.Input<string>;
    /**
     * Operation to be performed on the provided Amazon S3 source fields. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `NOT_EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
     */
    s3?: pulumi.Input<string>;
    /**
     * Operation to be performed on the provided Salesforce source fields. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `CONTAINS`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `NOT_EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
     */
    salesforce?: pulumi.Input<string>;
    /**
     * Operation to be performed on the provided SAPOData source fields. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `CONTAINS`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `NOT_EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
     */
    sapoData?: pulumi.Input<string>;
    /**
     * Operation to be performed on the provided ServiceNow source fields. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `CONTAINS`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `NOT_EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
     */
    serviceNow?: pulumi.Input<string>;
    /**
     * Operation to be performed on the provided Singular source fields. Valid values are `PROJECTION`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
     */
    singular?: pulumi.Input<string>;
    /**
     * Operation to be performed on the provided Slack source fields. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
     */
    slack?: pulumi.Input<string>;
    /**
     * Operation to be performed on the provided Trend Micro source fields. Valid values are `PROJECTION`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
     */
    trendmicro?: pulumi.Input<string>;
    /**
     * Operation to be performed on the provided Veeva source fields. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `CONTAINS`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `NOT_EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
     */
    veeva?: pulumi.Input<string>;
    /**
     * Operation to be performed on the provided Zendesk source fields. Valid values are `PROJECTION`, `GREATER_THAN`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
     */
    zendesk?: pulumi.Input<string>;
}
export interface FlowTriggerConfig {
    /**
     * Configuration details of a schedule-triggered flow as defined by the user. Currently, these settings only apply to the `Scheduled` trigger type. See Scheduled Trigger Properties for details.
     */
    triggerProperties?: pulumi.Input<inputs.FlowTriggerConfigTriggerProperties>;
    /**
     * Type of flow trigger. Valid values are `Scheduled`, `Event`, and `OnDemand`.
     */
    triggerType: pulumi.Input<string>;
}
export interface FlowTriggerConfigTriggerProperties {
    scheduled?: pulumi.Input<inputs.FlowTriggerConfigTriggerPropertiesScheduled>;
}
export interface FlowTriggerConfigTriggerPropertiesScheduled {
    /**
     * Whether a scheduled flow has an incremental data transfer or a complete data transfer for each flow run. Valid values are `Incremental` and `Complete`.
     */
    dataPullMode?: pulumi.Input<string>;
    /**
     * Date range for the records to import from the connector in the first flow run. Must be a valid RFC3339 timestamp.
     */
    firstExecutionFrom?: pulumi.Input<string>;
    /**
     * Scheduled end time for a schedule-triggered flow. Must be a valid RFC3339 timestamp.
     */
    scheduleEndTime?: pulumi.Input<string>;
    /**
     * Scheduling expression that determines the rate at which the schedule will run, for example `rate(5minutes)`.
     */
    scheduleExpression: pulumi.Input<string>;
    /**
     * Optional offset that is added to the time interval for a schedule-triggered flow. Maximum value of 36000.
     */
    scheduleOffset?: pulumi.Input<number>;
    /**
     * Scheduled start time for a schedule-triggered flow. Must be a valid RFC3339 timestamp.
     */
    scheduleStartTime?: pulumi.Input<string>;
    /**
     * Time zone used when referring to the date and time of a scheduled-triggered flow, such as `America/New_York`.
     */
    timezone?: pulumi.Input<string>;
}
