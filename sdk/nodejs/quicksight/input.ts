// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./input";
import * as outputs from "./output";

export interface AnalysisParameters {
    /**
     * A list of parameters that have a data type of date-time. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_DateTimeParameter.html).
     */
    dateTimeParameters?: pulumi.Input<pulumi.Input<inputs.AnalysisParametersDateTimeParameter>[]>;
    /**
     * A list of parameters that have a data type of decimal. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_DecimalParameter.html).
     */
    decimalParameters?: pulumi.Input<pulumi.Input<inputs.AnalysisParametersDecimalParameter>[]>;
    /**
     * A list of parameters that have a data type of integer. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_IntegerParameter.html).
     */
    integerParameters?: pulumi.Input<pulumi.Input<inputs.AnalysisParametersIntegerParameter>[]>;
    /**
     * A list of parameters that have a data type of string. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_StringParameter.html).
     */
    stringParameters?: pulumi.Input<pulumi.Input<inputs.AnalysisParametersStringParameter>[]>;
}
export interface AnalysisParametersDateTimeParameter {
    /**
     * Display name for the analysis.
     *
     * The following arguments are optional:
     */
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}
export interface AnalysisParametersDecimalParameter {
    /**
     * Display name for the analysis.
     *
     * The following arguments are optional:
     */
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<number>[]>;
}
export interface AnalysisParametersIntegerParameter {
    /**
     * Display name for the analysis.
     *
     * The following arguments are optional:
     */
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<number>[]>;
}
export interface AnalysisParametersStringParameter {
    /**
     * Display name for the analysis.
     *
     * The following arguments are optional:
     */
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}
export interface AnalysisPermission {
    /**
     * List of IAM actions to grant or revoke permissions on.
     */
    actions: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * ARN of the principal. See the [ResourcePermission documentation](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ResourcePermission.html) for the applicable ARN values.
     */
    principal: pulumi.Input<string>;
}
export interface AnalysisSourceEntity {
    /**
     * The source template. See source_template.
     */
    sourceTemplate?: pulumi.Input<inputs.AnalysisSourceEntitySourceTemplate>;
}
export interface AnalysisSourceEntitySourceTemplate {
    /**
     * The Amazon Resource Name (ARN) of the resource.
     */
    arn: pulumi.Input<string>;
    /**
     * List of dataset references. See data_set_references.
     */
    dataSetReferences: pulumi.Input<pulumi.Input<inputs.AnalysisSourceEntitySourceTemplateDataSetReference>[]>;
}
export interface AnalysisSourceEntitySourceTemplateDataSetReference {
    /**
     * Dataset Amazon Resource Name (ARN).
     */
    dataSetArn: pulumi.Input<string>;
    /**
     * Dataset placeholder.
     */
    dataSetPlaceholder: pulumi.Input<string>;
}
export interface DashboardDashboardPublishOptions {
    /**
     * Ad hoc (one-time) filtering option. See ad_hoc_filtering_option.
     */
    adHocFilteringOption?: pulumi.Input<inputs.DashboardDashboardPublishOptionsAdHocFilteringOption>;
    /**
     * The drill-down options of data points in a dashboard. See data_point_drill_up_down_option.
     */
    dataPointDrillUpDownOption?: pulumi.Input<inputs.DashboardDashboardPublishOptionsDataPointDrillUpDownOption>;
    /**
     * The data point menu label options of a dashboard. See data_point_menu_label_option.
     */
    dataPointMenuLabelOption?: pulumi.Input<inputs.DashboardDashboardPublishOptionsDataPointMenuLabelOption>;
    /**
     * The data point tool tip options of a dashboard. See data_point_tooltip_option.
     */
    dataPointTooltipOption?: pulumi.Input<inputs.DashboardDashboardPublishOptionsDataPointTooltipOption>;
    /**
     * Export to .csv option. See export_to_csv_option.
     */
    exportToCsvOption?: pulumi.Input<inputs.DashboardDashboardPublishOptionsExportToCsvOption>;
    /**
     * Determines if hidden fields are exported with a dashboard. See export_with_hidden_fields_option.
     */
    exportWithHiddenFieldsOption?: pulumi.Input<inputs.DashboardDashboardPublishOptionsExportWithHiddenFieldsOption>;
    /**
     * Sheet controls option. See sheet_controls_option.
     */
    sheetControlsOption?: pulumi.Input<inputs.DashboardDashboardPublishOptionsSheetControlsOption>;
    /**
     * The sheet layout maximization options of a dashboard. See sheet_layout_element_maximization_option.
     */
    sheetLayoutElementMaximizationOption?: pulumi.Input<inputs.DashboardDashboardPublishOptionsSheetLayoutElementMaximizationOption>;
    /**
     * The axis sort options of a dashboard. See visual_axis_sort_option.
     */
    visualAxisSortOption?: pulumi.Input<inputs.DashboardDashboardPublishOptionsVisualAxisSortOption>;
    /**
     * The menu options of a visual in a dashboard. See visual_menu_option.
     */
    visualMenuOption?: pulumi.Input<inputs.DashboardDashboardPublishOptionsVisualMenuOption>;
}
export interface DashboardDashboardPublishOptionsAdHocFilteringOption {
    /**
     * Availability status. Possibles values: ENABLED, DISABLED.
     */
    availabilityStatus?: pulumi.Input<string>;
}
export interface DashboardDashboardPublishOptionsDataPointDrillUpDownOption {
    /**
     * Availability status. Possibles values: ENABLED, DISABLED.
     */
    availabilityStatus?: pulumi.Input<string>;
}
export interface DashboardDashboardPublishOptionsDataPointMenuLabelOption {
    /**
     * Availability status. Possibles values: ENABLED, DISABLED.
     */
    availabilityStatus?: pulumi.Input<string>;
}
export interface DashboardDashboardPublishOptionsDataPointTooltipOption {
    /**
     * Availability status. Possibles values: ENABLED, DISABLED.
     */
    availabilityStatus?: pulumi.Input<string>;
}
export interface DashboardDashboardPublishOptionsExportToCsvOption {
    /**
     * Availability status. Possibles values: ENABLED, DISABLED.
     */
    availabilityStatus?: pulumi.Input<string>;
}
export interface DashboardDashboardPublishOptionsExportWithHiddenFieldsOption {
    /**
     * Availability status. Possibles values: ENABLED, DISABLED.
     */
    availabilityStatus?: pulumi.Input<string>;
}
export interface DashboardDashboardPublishOptionsSheetControlsOption {
    /**
     * Visibility state. Possibles values: EXPANDED, COLLAPSED.
     */
    visibilityState?: pulumi.Input<string>;
}
export interface DashboardDashboardPublishOptionsSheetLayoutElementMaximizationOption {
    /**
     * Availability status. Possibles values: ENABLED, DISABLED.
     */
    availabilityStatus?: pulumi.Input<string>;
}
export interface DashboardDashboardPublishOptionsVisualAxisSortOption {
    /**
     * Availability status. Possibles values: ENABLED, DISABLED.
     */
    availabilityStatus?: pulumi.Input<string>;
}
export interface DashboardDashboardPublishOptionsVisualMenuOption {
    /**
     * Availability status. Possibles values: ENABLED, DISABLED.
     */
    availabilityStatus?: pulumi.Input<string>;
}
export interface DashboardParameters {
    /**
     * A list of parameters that have a data type of date-time. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_DateTimeParameter.html).
     */
    dateTimeParameters?: pulumi.Input<pulumi.Input<inputs.DashboardParametersDateTimeParameter>[]>;
    /**
     * A list of parameters that have a data type of decimal. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_DecimalParameter.html).
     */
    decimalParameters?: pulumi.Input<pulumi.Input<inputs.DashboardParametersDecimalParameter>[]>;
    /**
     * A list of parameters that have a data type of integer. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_IntegerParameter.html).
     */
    integerParameters?: pulumi.Input<pulumi.Input<inputs.DashboardParametersIntegerParameter>[]>;
    /**
     * A list of parameters that have a data type of string. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_StringParameter.html).
     */
    stringParameters?: pulumi.Input<pulumi.Input<inputs.DashboardParametersStringParameter>[]>;
}
export interface DashboardParametersDateTimeParameter {
    /**
     * Display name for the dashboard.
     */
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}
export interface DashboardParametersDecimalParameter {
    /**
     * Display name for the dashboard.
     */
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<number>[]>;
}
export interface DashboardParametersIntegerParameter {
    /**
     * Display name for the dashboard.
     */
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<number>[]>;
}
export interface DashboardParametersStringParameter {
    /**
     * Display name for the dashboard.
     */
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}
export interface DashboardPermission {
    /**
     * List of IAM actions to grant or revoke permissions on.
     */
    actions: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * ARN of the principal. See the [ResourcePermission documentation](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ResourcePermission.html) for the applicable ARN values.
     */
    principal: pulumi.Input<string>;
}
export interface DashboardSourceEntity {
    /**
     * The source template. See source_template.
     */
    sourceTemplate?: pulumi.Input<inputs.DashboardSourceEntitySourceTemplate>;
}
export interface DashboardSourceEntitySourceTemplate {
    /**
     * The Amazon Resource Name (ARN) of the resource.
     */
    arn: pulumi.Input<string>;
    /**
     * List of dataset references. See data_set_references.
     */
    dataSetReferences: pulumi.Input<pulumi.Input<inputs.DashboardSourceEntitySourceTemplateDataSetReference>[]>;
}
export interface DashboardSourceEntitySourceTemplateDataSetReference {
    /**
     * Dataset Amazon Resource Name (ARN).
     */
    dataSetArn: pulumi.Input<string>;
    /**
     * Dataset placeholder.
     */
    dataSetPlaceholder: pulumi.Input<string>;
}
export interface DataSetColumnGroup {
    /**
     * Geospatial column group that denotes a hierarchy. See geo_spatial_column_group.
     */
    geoSpatialColumnGroup?: pulumi.Input<inputs.DataSetColumnGroupGeoSpatialColumnGroup>;
}
export interface DataSetColumnGroupGeoSpatialColumnGroup {
    /**
     * Columns in this hierarchy.
     */
    columns: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Country code. Valid values are `US`.
     */
    countryCode: pulumi.Input<string>;
    /**
     * A display name for the hierarchy.
     */
    name: pulumi.Input<string>;
}
export interface DataSetColumnLevelPermissionRule {
    /**
     * An array of column names.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An array of ARNs for Amazon QuickSight users or groups.
     */
    principals?: pulumi.Input<pulumi.Input<string>[]>;
}
export interface DataSetDataSetUsageConfiguration {
    /**
     * Controls whether a child dataset of a direct query can use this dataset as a source.
     */
    disableUseAsDirectQuerySource?: pulumi.Input<boolean>;
    /**
     * Controls whether a child dataset that's stored in QuickSight can use this dataset as a source.
     */
    disableUseAsImportedSource?: pulumi.Input<boolean>;
}
export interface DataSetFieldFolder {
    /**
     * An array of column names to add to the folder. A column can only be in one folder.
     */
    columns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Field folder description.
     */
    description?: pulumi.Input<string>;
    /**
     * Key of the field folder map.
     */
    fieldFoldersId: pulumi.Input<string>;
}
export interface DataSetLogicalTableMap {
    /**
     * A display name for the logical table.
     */
    alias: pulumi.Input<string>;
    /**
     * Transform operations that act on this logical table. For this structure to be valid, only one of the attributes can be non-null. See data_transforms.
     */
    dataTransforms?: pulumi.Input<pulumi.Input<inputs.DataSetLogicalTableMapDataTransform>[]>;
    /**
     * Key of the logical table map.
     */
    logicalTableMapId: pulumi.Input<string>;
    /**
     * Source of this logical table. See source.
     */
    source: pulumi.Input<inputs.DataSetLogicalTableMapSource>;
}
export interface DataSetLogicalTableMapDataTransform {
    /**
     * A transform operation that casts a column to a different type. See cast_column_type_operation.
     */
    castColumnTypeOperation?: pulumi.Input<inputs.DataSetLogicalTableMapDataTransformCastColumnTypeOperation>;
    /**
     * An operation that creates calculated columns. Columns created in one such operation form a lexical closure. See create_columns_operation.
     */
    createColumnsOperation?: pulumi.Input<inputs.DataSetLogicalTableMapDataTransformCreateColumnsOperation>;
    /**
     * An operation that filters rows based on some condition. See filter_operation.
     */
    filterOperation?: pulumi.Input<inputs.DataSetLogicalTableMapDataTransformFilterOperation>;
    /**
     * An operation that projects columns. Operations that come after a projection can only refer to projected columns. See project_operation.
     */
    projectOperation?: pulumi.Input<inputs.DataSetLogicalTableMapDataTransformProjectOperation>;
    /**
     * An operation that renames a column. See rename_column_operation.
     */
    renameColumnOperation?: pulumi.Input<inputs.DataSetLogicalTableMapDataTransformRenameColumnOperation>;
    /**
     * An operation that tags a column with additional information. See tag_column_operation.
     */
    tagColumnOperation?: pulumi.Input<inputs.DataSetLogicalTableMapDataTransformTagColumnOperation>;
    /**
     * A transform operation that removes tags associated with a column. See untag_column_operation.
     */
    untagColumnOperation?: pulumi.Input<inputs.DataSetLogicalTableMapDataTransformUntagColumnOperation>;
}
export interface DataSetLogicalTableMapDataTransformCastColumnTypeOperation {
    /**
     * Column name.
     */
    columnName: pulumi.Input<string>;
    /**
     * When casting a column from string to datetime type, you can supply a string in a format supported by Amazon QuickSight to denote the source data format.
     */
    format?: pulumi.Input<string>;
    /**
     * New column data type. Valid values are `STRING`, `INTEGER`, `DECIMAL`, `DATETIME`.
     */
    newColumnType: pulumi.Input<string>;
}
export interface DataSetLogicalTableMapDataTransformCreateColumnsOperation {
    /**
     * Calculated columns to create. See columns.
     */
    columns: pulumi.Input<pulumi.Input<inputs.DataSetLogicalTableMapDataTransformCreateColumnsOperationColumn>[]>;
}
export interface DataSetLogicalTableMapDataTransformCreateColumnsOperationColumn {
    /**
     * A unique ID to identify a calculated column. During a dataset update, if the column ID of a calculated column matches that of an existing calculated column, Amazon QuickSight preserves the existing calculated column.
     */
    columnId: pulumi.Input<string>;
    /**
     * Column name.
     */
    columnName: pulumi.Input<string>;
    /**
     * An expression that defines the calculated column.
     */
    expression: pulumi.Input<string>;
}
export interface DataSetLogicalTableMapDataTransformFilterOperation {
    /**
     * An expression that must evaluate to a Boolean value. Rows for which the expression evaluates to true are kept in the dataset.
     */
    conditionExpression: pulumi.Input<string>;
}
export interface DataSetLogicalTableMapDataTransformProjectOperation {
    /**
     * Projected columns.
     */
    projectedColumns: pulumi.Input<pulumi.Input<string>[]>;
}
export interface DataSetLogicalTableMapDataTransformRenameColumnOperation {
    /**
     * Column to be renamed.
     */
    columnName: pulumi.Input<string>;
    /**
     * New name for the column.
     */
    newColumnName: pulumi.Input<string>;
}
export interface DataSetLogicalTableMapDataTransformTagColumnOperation {
    /**
     * Column name.
     */
    columnName: pulumi.Input<string>;
    /**
     * The dataset column tag, currently only used for geospatial type tagging. See tags.
     */
    tags: pulumi.Input<pulumi.Input<inputs.DataSetLogicalTableMapDataTransformTagColumnOperationTag>[]>;
}
export interface DataSetLogicalTableMapDataTransformTagColumnOperationTag {
    /**
     * A description for a column. See column_description.
     */
    columnDescription?: pulumi.Input<inputs.DataSetLogicalTableMapDataTransformTagColumnOperationTagColumnDescription>;
    /**
     * A geospatial role for a column. Valid values are `COUNTRY`, `STATE`, `COUNTY`, `CITY`, `POSTCODE`, `LONGITUDE`, and `LATITUDE`.
     */
    columnGeographicRole?: pulumi.Input<string>;
}
export interface DataSetLogicalTableMapDataTransformTagColumnOperationTagColumnDescription {
    /**
     * The text of a description for a column.
     */
    text?: pulumi.Input<string>;
}
export interface DataSetLogicalTableMapDataTransformUntagColumnOperation {
    /**
     * Column name.
     */
    columnName: pulumi.Input<string>;
    /**
     * The column tags to remove from this column.
     */
    tagNames: pulumi.Input<pulumi.Input<string>[]>;
}
export interface DataSetLogicalTableMapSource {
    /**
     * ARN of the parent data set.
     */
    dataSetArn?: pulumi.Input<string>;
    /**
     * Specifies the result of a join of two logical tables. See join_instruction.
     */
    joinInstruction?: pulumi.Input<inputs.DataSetLogicalTableMapSourceJoinInstruction>;
    /**
     * Physical table ID.
     */
    physicalTableId?: pulumi.Input<string>;
}
export interface DataSetLogicalTableMapSourceJoinInstruction {
    /**
     * Join key properties of the left operand. See left_join_key_properties.
     */
    leftJoinKeyProperties?: pulumi.Input<inputs.DataSetLogicalTableMapSourceJoinInstructionLeftJoinKeyProperties>;
    /**
     * Operand on the left side of a join.
     */
    leftOperand: pulumi.Input<string>;
    /**
     * Join instructions provided in the ON clause of a join.
     */
    onClause: pulumi.Input<string>;
    /**
     * Join key properties of the right operand. See right_join_key_properties.
     */
    rightJoinKeyProperties?: pulumi.Input<inputs.DataSetLogicalTableMapSourceJoinInstructionRightJoinKeyProperties>;
    /**
     * Operand on the right side of a join.
     */
    rightOperand: pulumi.Input<string>;
    /**
     * Type of join. Valid values are `INNER`, `OUTER`, `LEFT`, and `RIGHT`.
     */
    type: pulumi.Input<string>;
}
export interface DataSetLogicalTableMapSourceJoinInstructionLeftJoinKeyProperties {
    /**
     * A value that indicates that a row in a table is uniquely identified by the columns in a join key. This is used by Amazon QuickSight to optimize query performance.
     */
    uniqueKey?: pulumi.Input<boolean>;
}
export interface DataSetLogicalTableMapSourceJoinInstructionRightJoinKeyProperties {
    /**
     * A value that indicates that a row in a table is uniquely identified by the columns in a join key. This is used by Amazon QuickSight to optimize query performance.
     */
    uniqueKey?: pulumi.Input<boolean>;
}
export interface DataSetOutputColumn {
    description?: pulumi.Input<string>;
    /**
     * Display name for the dataset.
     */
    name?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}
export interface DataSetPermission {
    /**
     * List of IAM actions to grant or revoke permissions on.
     */
    actions: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * ARN of the principal. See the [ResourcePermission documentation](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ResourcePermission.html) for the applicable ARN values.
     */
    principal: pulumi.Input<string>;
}
export interface DataSetPhysicalTableMap {
    /**
     * A physical table type built from the results of the custom SQL query. See custom_sql.
     */
    customSql?: pulumi.Input<inputs.DataSetPhysicalTableMapCustomSql>;
    /**
     * Key of the physical table map.
     */
    physicalTableMapId: pulumi.Input<string>;
    /**
     * A physical table type for relational data sources. See relational_table.
     */
    relationalTable?: pulumi.Input<inputs.DataSetPhysicalTableMapRelationalTable>;
    /**
     * A physical table type for as S3 data source. See s3_source.
     */
    s3Source?: pulumi.Input<inputs.DataSetPhysicalTableMapS3Source>;
}
export interface DataSetPhysicalTableMapCustomSql {
    /**
     * Column schema from the SQL query result set. See columns.
     */
    columns?: pulumi.Input<pulumi.Input<inputs.DataSetPhysicalTableMapCustomSqlColumn>[]>;
    /**
     * ARN of the data source.
     */
    dataSourceArn: pulumi.Input<string>;
    /**
     * Display name for the SQL query result.
     */
    name: pulumi.Input<string>;
    /**
     * SQL query.
     */
    sqlQuery: pulumi.Input<string>;
}
export interface DataSetPhysicalTableMapCustomSqlColumn {
    /**
     * Name of this column in the underlying data source.
     */
    name: pulumi.Input<string>;
    /**
     * Data type of the column.
     */
    type: pulumi.Input<string>;
}
export interface DataSetPhysicalTableMapRelationalTable {
    /**
     * Catalog associated with the table.
     */
    catalog?: pulumi.Input<string>;
    /**
     * ARN of the data source.
     */
    dataSourceArn: pulumi.Input<string>;
    /**
     * Column schema of the table. See input_columns.
     */
    inputColumns: pulumi.Input<pulumi.Input<inputs.DataSetPhysicalTableMapRelationalTableInputColumn>[]>;
    /**
     * Name of the relational table.
     */
    name: pulumi.Input<string>;
    /**
     * Schema name. This name applies to certain relational database engines.
     */
    schema?: pulumi.Input<string>;
}
export interface DataSetPhysicalTableMapRelationalTableInputColumn {
    /**
     * Name of this column in the underlying data source.
     */
    name: pulumi.Input<string>;
    /**
     * Data type of the column.
     */
    type: pulumi.Input<string>;
}
export interface DataSetPhysicalTableMapS3Source {
    /**
     * ARN of the data source.
     */
    dataSourceArn: pulumi.Input<string>;
    /**
     * Column schema of the table. See input_columns.
     */
    inputColumns: pulumi.Input<pulumi.Input<inputs.DataSetPhysicalTableMapS3SourceInputColumn>[]>;
    /**
     * Information about the format for the S3 source file or files. See upload_settings.
     */
    uploadSettings: pulumi.Input<inputs.DataSetPhysicalTableMapS3SourceUploadSettings>;
}
export interface DataSetPhysicalTableMapS3SourceInputColumn {
    /**
     * Name of this column in the underlying data source.
     */
    name: pulumi.Input<string>;
    /**
     * Data type of the column.
     */
    type: pulumi.Input<string>;
}
export interface DataSetPhysicalTableMapS3SourceUploadSettings {
    /**
     * Whether the file has a header row, or the files each have a header row.
     */
    containsHeader?: pulumi.Input<boolean>;
    /**
     * Delimiter between values in the file.
     */
    delimiter?: pulumi.Input<string>;
    /**
     * File format. Valid values are `CSV`, `TSV`, `CLF`, `ELF`, `XLSX`, and `JSON`.
     */
    format?: pulumi.Input<string>;
    /**
     * A row number to start reading data from.
     */
    startFromRow?: pulumi.Input<number>;
    /**
     * Text qualifier. Valid values are `DOUBLE_QUOTE` and `SINGLE_QUOTE`.
     */
    textQualifier?: pulumi.Input<string>;
}
export interface DataSetRefreshProperties {
    /**
     * The refresh configuration for the data set. See refresh_configuration.
     */
    refreshConfiguration: pulumi.Input<inputs.DataSetRefreshPropertiesRefreshConfiguration>;
}
export interface DataSetRefreshPropertiesRefreshConfiguration {
    /**
     * The incremental refresh for the data set. See incremental_refresh.
     */
    incrementalRefresh: pulumi.Input<inputs.DataSetRefreshPropertiesRefreshConfigurationIncrementalRefresh>;
}
export interface DataSetRefreshPropertiesRefreshConfigurationIncrementalRefresh {
    /**
     * The lookback window setup for an incremental refresh configuration. See lookback_window.
     */
    lookbackWindow: pulumi.Input<inputs.DataSetRefreshPropertiesRefreshConfigurationIncrementalRefreshLookbackWindow>;
}
export interface DataSetRefreshPropertiesRefreshConfigurationIncrementalRefreshLookbackWindow {
    /**
     * The name of the lookback window column.
     */
    columnName: pulumi.Input<string>;
    /**
     * The lookback window column size.
     */
    size: pulumi.Input<number>;
    /**
     * The size unit that is used for the lookback window column. Valid values for this structure are `HOUR`, `DAY`, and `WEEK`.
     */
    sizeUnit: pulumi.Input<string>;
}
export interface DataSetRowLevelPermissionDataSet {
    /**
     * ARN of the dataset that contains permissions for RLS.
     */
    arn: pulumi.Input<string>;
    /**
     * User or group rules associated with the dataset that contains permissions for RLS.
     */
    formatVersion?: pulumi.Input<string>;
    /**
     * Namespace associated with the dataset that contains permissions for RLS.
     */
    namespace?: pulumi.Input<string>;
    /**
     * Type of permissions to use when interpreting the permissions for RLS. Valid values are `GRANT_ACCESS` and `DENY_ACCESS`.
     */
    permissionPolicy: pulumi.Input<string>;
    /**
     * Status of the row-level security permission dataset. If enabled, the status is `ENABLED`. If disabled, the status is `DISABLED`.
     */
    status?: pulumi.Input<string>;
}
export interface DataSetRowLevelPermissionTagConfiguration {
    /**
     * The status of row-level security tags. If enabled, the status is `ENABLED`. If disabled, the status is `DISABLED`.
     */
    status?: pulumi.Input<string>;
    /**
     * A set of rules associated with row-level security, such as the tag names and columns that they are assigned to. See tag_rules.
     */
    tagRules: pulumi.Input<pulumi.Input<inputs.DataSetRowLevelPermissionTagConfigurationTagRule>[]>;
}
export interface DataSetRowLevelPermissionTagConfigurationTagRule {
    /**
     * Column name that a tag key is assigned to.
     */
    columnName: pulumi.Input<string>;
    /**
     * A string that you want to use to filter by all the values in a column in the dataset and don’t want to list the values one by one.
     */
    matchAllValue?: pulumi.Input<string>;
    /**
     * Unique key for a tag.
     */
    tagKey: pulumi.Input<string>;
    /**
     * A string that you want to use to delimit the values when you pass the values at run time.
     */
    tagMultiValueDelimiter?: pulumi.Input<string>;
}
export interface DataSourceCredentials {
    /**
     * The Amazon Resource Name (ARN) of a data source that has the credential pair that you want to use.
     * When the value is not null, the `credentialPair` from the data source in the ARN is used.
     */
    copySourceArn?: pulumi.Input<string>;
    /**
     * Credential pair. See Credential Pair below for more details.
     */
    credentialPair?: pulumi.Input<inputs.DataSourceCredentialsCredentialPair>;
}
export interface DataSourceCredentialsCredentialPair {
    /**
     * Password, maximum length of 1024 characters.
     */
    password: pulumi.Input<string>;
    /**
     * User name, maximum length of 64 characters.
     */
    username: pulumi.Input<string>;
}
export interface DataSourceParameters {
    /**
     * Parameters for connecting to Amazon Elasticsearch.
     */
    amazonElasticsearch?: pulumi.Input<inputs.DataSourceParametersAmazonElasticsearch>;
    /**
     * Parameters for connecting to Athena.
     */
    athena?: pulumi.Input<inputs.DataSourceParametersAthena>;
    /**
     * Parameters for connecting to Aurora MySQL.
     */
    aurora?: pulumi.Input<inputs.DataSourceParametersAurora>;
    /**
     * Parameters for connecting to Aurora Postgresql.
     */
    auroraPostgresql?: pulumi.Input<inputs.DataSourceParametersAuroraPostgresql>;
    /**
     * Parameters for connecting to AWS IOT Analytics.
     */
    awsIotAnalytics?: pulumi.Input<inputs.DataSourceParametersAwsIotAnalytics>;
    /**
     * Parameters for connecting to Jira.
     */
    jira?: pulumi.Input<inputs.DataSourceParametersJira>;
    /**
     * Parameters for connecting to MariaDB.
     */
    mariaDb?: pulumi.Input<inputs.DataSourceParametersMariaDb>;
    /**
     * Parameters for connecting to MySQL.
     */
    mysql?: pulumi.Input<inputs.DataSourceParametersMysql>;
    /**
     * Parameters for connecting to Oracle.
     */
    oracle?: pulumi.Input<inputs.DataSourceParametersOracle>;
    /**
     * Parameters for connecting to Postgresql.
     */
    postgresql?: pulumi.Input<inputs.DataSourceParametersPostgresql>;
    /**
     * Parameters for connecting to Presto.
     */
    presto?: pulumi.Input<inputs.DataSourceParametersPresto>;
    /**
     * Parameters for connecting to RDS.
     */
    rds?: pulumi.Input<inputs.DataSourceParametersRds>;
    /**
     * Parameters for connecting to Redshift.
     */
    redshift?: pulumi.Input<inputs.DataSourceParametersRedshift>;
    /**
     * Parameters for connecting to S3.
     */
    s3?: pulumi.Input<inputs.DataSourceParametersS3>;
    /**
     * Parameters for connecting to ServiceNow.
     */
    serviceNow?: pulumi.Input<inputs.DataSourceParametersServiceNow>;
    /**
     * Parameters for connecting to Snowflake.
     */
    snowflake?: pulumi.Input<inputs.DataSourceParametersSnowflake>;
    /**
     * Parameters for connecting to Spark.
     */
    spark?: pulumi.Input<inputs.DataSourceParametersSpark>;
    /**
     * Parameters for connecting to SQL Server.
     */
    sqlServer?: pulumi.Input<inputs.DataSourceParametersSqlServer>;
    /**
     * Parameters for connecting to Teradata.
     */
    teradata?: pulumi.Input<inputs.DataSourceParametersTeradata>;
    /**
     * Parameters for connecting to Twitter.
     */
    twitter?: pulumi.Input<inputs.DataSourceParametersTwitter>;
}
export interface DataSourceParametersAmazonElasticsearch {
    /**
     * The OpenSearch domain.
     */
    domain: pulumi.Input<string>;
}
export interface DataSourceParametersAthena {
    /**
     * The work-group to which to connect.
     */
    workGroup?: pulumi.Input<string>;
}
export interface DataSourceParametersAurora {
    /**
     * The database to which to connect.
     */
    database: pulumi.Input<string>;
    /**
     * The host to which to connect.
     */
    host: pulumi.Input<string>;
    /**
     * The port to which to connect.
     */
    port: pulumi.Input<number>;
}
export interface DataSourceParametersAuroraPostgresql {
    /**
     * The database to which to connect.
     */
    database: pulumi.Input<string>;
    /**
     * The host to which to connect.
     */
    host: pulumi.Input<string>;
    /**
     * The port to which to connect.
     */
    port: pulumi.Input<number>;
}
export interface DataSourceParametersAwsIotAnalytics {
    /**
     * The name of the data set to which to connect.
     */
    dataSetName: pulumi.Input<string>;
}
export interface DataSourceParametersJira {
    /**
     * The base URL of the Jira instance's site to which to connect.
     */
    siteBaseUrl: pulumi.Input<string>;
}
export interface DataSourceParametersMariaDb {
    /**
     * The database to which to connect.
     */
    database: pulumi.Input<string>;
    /**
     * The host to which to connect.
     */
    host: pulumi.Input<string>;
    /**
     * The port to which to connect.
     */
    port: pulumi.Input<number>;
}
export interface DataSourceParametersMysql {
    /**
     * The database to which to connect.
     */
    database: pulumi.Input<string>;
    /**
     * The host to which to connect.
     */
    host: pulumi.Input<string>;
    /**
     * The port to which to connect.
     */
    port: pulumi.Input<number>;
}
export interface DataSourceParametersOracle {
    /**
     * The database to which to connect.
     */
    database: pulumi.Input<string>;
    /**
     * The host to which to connect.
     */
    host: pulumi.Input<string>;
    /**
     * The port to which to connect.
     */
    port: pulumi.Input<number>;
}
export interface DataSourceParametersPostgresql {
    /**
     * The database to which to connect.
     */
    database: pulumi.Input<string>;
    /**
     * The host to which to connect.
     */
    host: pulumi.Input<string>;
    /**
     * The port to which to connect.
     */
    port: pulumi.Input<number>;
}
export interface DataSourceParametersPresto {
    /**
     * The catalog to which to connect.
     */
    catalog: pulumi.Input<string>;
    /**
     * The host to which to connect.
     */
    host: pulumi.Input<string>;
    /**
     * The port to which to connect.
     */
    port: pulumi.Input<number>;
}
export interface DataSourceParametersRds {
    /**
     * The database to which to connect.
     */
    database: pulumi.Input<string>;
    /**
     * The instance ID to which to connect.
     */
    instanceId: pulumi.Input<string>;
}
export interface DataSourceParametersRedshift {
    /**
     * The ID of the cluster to which to connect.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * The database to which to connect.
     */
    database: pulumi.Input<string>;
    /**
     * The host to which to connect.
     */
    host?: pulumi.Input<string>;
    /**
     * The port to which to connect.
     */
    port?: pulumi.Input<number>;
}
export interface DataSourceParametersS3 {
    /**
     * An object containing the S3 location of the S3 manifest file.
     */
    manifestFileLocation: pulumi.Input<inputs.DataSourceParametersS3ManifestFileLocation>;
}
export interface DataSourceParametersS3ManifestFileLocation {
    /**
     * The name of the bucket that contains the manifest file.
     */
    bucket: pulumi.Input<string>;
    /**
     * The key of the manifest file within the bucket.
     */
    key: pulumi.Input<string>;
}
export interface DataSourceParametersServiceNow {
    /**
     * The base URL of the Jira instance's site to which to connect.
     */
    siteBaseUrl: pulumi.Input<string>;
}
export interface DataSourceParametersSnowflake {
    /**
     * The database to which to connect.
     */
    database: pulumi.Input<string>;
    /**
     * The host to which to connect.
     */
    host: pulumi.Input<string>;
    /**
     * The warehouse to which to connect.
     */
    warehouse: pulumi.Input<string>;
}
export interface DataSourceParametersSpark {
    /**
     * The host to which to connect.
     */
    host: pulumi.Input<string>;
    /**
     * The warehouse to which to connect.
     */
    port: pulumi.Input<number>;
}
export interface DataSourceParametersSqlServer {
    /**
     * The database to which to connect.
     */
    database: pulumi.Input<string>;
    /**
     * The host to which to connect.
     */
    host: pulumi.Input<string>;
    /**
     * The warehouse to which to connect.
     */
    port: pulumi.Input<number>;
}
export interface DataSourceParametersTeradata {
    /**
     * The database to which to connect.
     */
    database: pulumi.Input<string>;
    /**
     * The host to which to connect.
     */
    host: pulumi.Input<string>;
    /**
     * The warehouse to which to connect.
     */
    port: pulumi.Input<number>;
}
export interface DataSourceParametersTwitter {
    /**
     * The maximum number of rows to query.
     */
    maxRows: pulumi.Input<number>;
    /**
     * The Twitter query to retrieve the data.
     */
    query: pulumi.Input<string>;
}
export interface DataSourcePermission {
    /**
     * Set of IAM actions to grant or revoke permissions on. Max of 16 items.
     */
    actions: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Amazon Resource Name (ARN) of the principal.
     */
    principal: pulumi.Input<string>;
}
export interface DataSourceSslProperties {
    /**
     * A Boolean option to control whether SSL should be disabled.
     */
    disableSsl: pulumi.Input<boolean>;
}
export interface DataSourceVpcConnectionProperties {
    /**
     * The Amazon Resource Name (ARN) for the VPC connection.
     */
    vpcConnectionArn: pulumi.Input<string>;
}
export interface FolderPermission {
    /**
     * List of IAM actions to grant or revoke permissions on.
     */
    actions: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * ARN of the principal. See the [ResourcePermission documentation](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ResourcePermission.html) for the applicable ARN values.
     */
    principal: pulumi.Input<string>;
}
export interface IamPolicyAssignmentIdentities {
    /**
     * Array of Quicksight group names to assign the policy to.
     */
    groups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Array of Quicksight user names to assign the policy to.
     */
    users?: pulumi.Input<pulumi.Input<string>[]>;
}
export interface NamespaceTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: pulumi.Input<string>;
}
export interface RefreshScheduleSchedule {
    /**
     * The type of refresh that the dataset undergoes. Valid values are `INCREMENTAL_REFRESH` and `FULL_REFRESH`.
     */
    refreshType: pulumi.Input<string>;
    /**
     * The configuration of the [schedule frequency](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_RefreshFrequency.html). See schedule_frequency.
     */
    scheduleFrequency?: pulumi.Input<inputs.RefreshScheduleScheduleScheduleFrequency>;
    /**
     * Time after which the refresh schedule can be started, expressed in `YYYY-MM-DDTHH:MM:SS` format.
     */
    startAfterDateTime?: pulumi.Input<string>;
}
export interface RefreshScheduleScheduleScheduleFrequency {
    /**
     * The interval between scheduled refreshes. Valid values are `MINUTE15`, `MINUTE30`, `HOURLY`, `DAILY`, `WEEKLY` and `MONTHLY`.
     */
    interval: pulumi.Input<string>;
    /**
     * The [refresh on entity](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ScheduleRefreshOnEntity.html) configuration for weekly or monthly schedules. See refresh_on_day.
     */
    refreshOnDay?: pulumi.Input<inputs.RefreshScheduleScheduleScheduleFrequencyRefreshOnDay>;
    /**
     * The time of day that you want the dataset to refresh. This value is expressed in `HH:MM` format. This field is not required for schedules that refresh hourly.
     */
    timeOfTheDay?: pulumi.Input<string>;
    /**
     * The timezone that you want the refresh schedule to use.
     */
    timezone?: pulumi.Input<string>;
}
export interface RefreshScheduleScheduleScheduleFrequencyRefreshOnDay {
    /**
     * The day of the month that you want to schedule refresh on.
     */
    dayOfMonth?: pulumi.Input<string>;
    /**
     * The day of the week that you want to schedule a refresh on. Valid values are `SUNDAY`, `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY` and `SATURDAY`.
     */
    dayOfWeek?: pulumi.Input<string>;
}
export interface TemplatePermission {
    /**
     * List of IAM actions to grant or revoke permissions on.
     */
    actions: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * ARN of the principal. See the [ResourcePermission documentation](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ResourcePermission.html) for the applicable ARN values.
     */
    principal: pulumi.Input<string>;
}
export interface TemplateSourceEntity {
    /**
     * The source analysis, if it is based on an analysis.. Only one of `sourceAnalysis` or `sourceTemplate` should be configured. See source_analysis.
     */
    sourceAnalysis?: pulumi.Input<inputs.TemplateSourceEntitySourceAnalysis>;
    /**
     * The source template, if it is based on an template.. Only one of `sourceAnalysis` or `sourceTemplate` should be configured. See source_template.
     */
    sourceTemplate?: pulumi.Input<inputs.TemplateSourceEntitySourceTemplate>;
}
export interface TemplateSourceEntitySourceAnalysis {
    /**
     * The Amazon Resource Name (ARN) of the resource.
     */
    arn: pulumi.Input<string>;
    /**
     * A list of dataset references used as placeholders in the template. See data_set_references.
     */
    dataSetReferences: pulumi.Input<pulumi.Input<inputs.TemplateSourceEntitySourceAnalysisDataSetReference>[]>;
}
export interface TemplateSourceEntitySourceAnalysisDataSetReference {
    /**
     * Dataset Amazon Resource Name (ARN).
     */
    dataSetArn: pulumi.Input<string>;
    /**
     * Dataset placeholder.
     */
    dataSetPlaceholder: pulumi.Input<string>;
}
export interface TemplateSourceEntitySourceTemplate {
    /**
     * The Amazon Resource Name (ARN) of the resource.
     */
    arn: pulumi.Input<string>;
}
export interface ThemeConfiguration {
    /**
     * Color properties that apply to chart data colors. See data_color_palette.
     */
    dataColorPalette?: pulumi.Input<inputs.ThemeConfigurationDataColorPalette>;
    /**
     * Display options related to sheets. See sheet.
     */
    sheet?: pulumi.Input<inputs.ThemeConfigurationSheet>;
    /**
     * Determines the typography options. See typography.
     */
    typography?: pulumi.Input<inputs.ThemeConfigurationTypography>;
    /**
     * Color properties that apply to the UI and to charts, excluding the colors that apply to data. See ui_color_palette.
     */
    uiColorPalette?: pulumi.Input<inputs.ThemeConfigurationUiColorPalette>;
}
export interface ThemeConfigurationDataColorPalette {
    /**
     * List of hexadecimal codes for the colors. Minimum of 8 items and maximum of 20 items.
     */
    colors?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The hexadecimal code of a color that applies to charts where a lack of data is highlighted.
     */
    emptyFillColor?: pulumi.Input<string>;
    /**
     * The minimum and maximum hexadecimal codes that describe a color gradient. List of exactly 2 items.
     */
    minMaxGradients?: pulumi.Input<pulumi.Input<string>[]>;
}
export interface ThemeConfigurationSheet {
    /**
     * The display options for tiles. See tile.
     */
    tile?: pulumi.Input<inputs.ThemeConfigurationSheetTile>;
    /**
     * The layout options for tiles. See tile_layout.
     */
    tileLayout?: pulumi.Input<inputs.ThemeConfigurationSheetTileLayout>;
}
export interface ThemeConfigurationSheetTile {
    /**
     * The border around a tile. See border.
     */
    border?: pulumi.Input<inputs.ThemeConfigurationSheetTileBorder>;
}
export interface ThemeConfigurationSheetTileBorder {
    /**
     * The option to enable display of borders for visuals.
     */
    show?: pulumi.Input<boolean>;
}
export interface ThemeConfigurationSheetTileLayout {
    /**
     * The gutter settings that apply between tiles. See gutter.
     */
    gutter?: pulumi.Input<inputs.ThemeConfigurationSheetTileLayoutGutter>;
    /**
     * The margin settings that apply around the outside edge of sheets. See margin.
     */
    margin?: pulumi.Input<inputs.ThemeConfigurationSheetTileLayoutMargin>;
}
export interface ThemeConfigurationSheetTileLayoutGutter {
    /**
     * This Boolean value controls whether to display a gutter space between sheet tiles.
     */
    show?: pulumi.Input<boolean>;
}
export interface ThemeConfigurationSheetTileLayoutMargin {
    /**
     * This Boolean value controls whether to display sheet margins.
     */
    show?: pulumi.Input<boolean>;
}
export interface ThemeConfigurationTypography {
    /**
     * Determines the list of font families. Maximum number of 5 items. See font_families.
     */
    fontFamilies?: pulumi.Input<pulumi.Input<inputs.ThemeConfigurationTypographyFontFamily>[]>;
}
export interface ThemeConfigurationTypographyFontFamily {
    /**
     * Font family name.
     */
    fontFamily?: pulumi.Input<string>;
}
export interface ThemeConfigurationUiColorPalette {
    /**
     * Color (hexadecimal) that applies to selected states and buttons.
     */
    accent?: pulumi.Input<string>;
    /**
     * Color (hexadecimal) that applies to any text or other elements that appear over the accent color.
     */
    accentForeground?: pulumi.Input<string>;
    /**
     * Color (hexadecimal) that applies to error messages.
     */
    danger?: pulumi.Input<string>;
    /**
     * Color (hexadecimal) that applies to any text or other elements that appear over the error color.
     */
    dangerForeground?: pulumi.Input<string>;
    /**
     * Color (hexadecimal) that applies to the names of fields that are identified as dimensions.
     */
    dimension?: pulumi.Input<string>;
    /**
     * Color (hexadecimal) that applies to any text or other elements that appear over the dimension color.
     */
    dimensionForeground?: pulumi.Input<string>;
    /**
     * Color (hexadecimal) that applies to the names of fields that are identified as measures.
     */
    measure?: pulumi.Input<string>;
    /**
     * Color (hexadecimal) that applies to any text or other elements that appear over the measure color.
     */
    measureForeground?: pulumi.Input<string>;
    /**
     * Color (hexadecimal) that applies to visuals and other high emphasis UI.
     */
    primaryBackground?: pulumi.Input<string>;
    /**
     * Color (hexadecimal) of text and other foreground elements that appear over the primary background regions, such as grid lines, borders, table banding, icons, and so on.
     */
    primaryForeground?: pulumi.Input<string>;
    /**
     * Color (hexadecimal) that applies to the sheet background and sheet controls.
     */
    secondaryBackground?: pulumi.Input<string>;
    /**
     * Color (hexadecimal) that applies to any sheet title, sheet control text, or UI that appears over the secondary background.
     */
    secondaryForeground?: pulumi.Input<string>;
    /**
     * Color (hexadecimal) that applies to success messages, for example the check mark for a successful download.
     */
    success?: pulumi.Input<string>;
    /**
     * Color (hexadecimal) that applies to any text or other elements that appear over the success color.
     */
    successForeground?: pulumi.Input<string>;
    /**
     * Color (hexadecimal) that applies to warning and informational messages.
     */
    warning?: pulumi.Input<string>;
    /**
     * Color (hexadecimal) that applies to any text or other elements that appear over the warning color.
     */
    warningForeground?: pulumi.Input<string>;
}
export interface ThemePermission {
    /**
     * List of IAM actions to grant or revoke permissions on.
     */
    actions: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * ARN of the principal. See the [ResourcePermission documentation](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ResourcePermission.html) for the applicable ARN values.
     */
    principal: pulumi.Input<string>;
}
export interface VpcConnectionTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: pulumi.Input<string>;
}
export interface GetDataSetColumnLevelPermissionRule {
    columnNames?: string[];
    principals?: string[];
}
export interface GetDataSetColumnLevelPermissionRuleArgs {
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    principals?: pulumi.Input<pulumi.Input<string>[]>;
}
