// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages the custom permissions profile for a user.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.quicksight.UserCustomPermission("example", {
 *     userName: exampleAwsQuicksightUser.userName,
 *     customPermissionsName: exampleAwsQuicksightCustomPermissions.customPermissionsName,
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import QuickSight user custom permissions using a comma-delimited string combining the `aws_account_id`, `namespace`, and `user_name`. For example:
 *
 * ```sh
 * $ pulumi import aws:quicksight/userCustomPermission:UserCustomPermission example 012345678901,default,user1
 * ```
 */
export class UserCustomPermission extends pulumi.CustomResource {
    /**
     * Get an existing UserCustomPermission resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserCustomPermissionState, opts?: pulumi.CustomResourceOptions): UserCustomPermission {
        return new UserCustomPermission(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:quicksight/userCustomPermission:UserCustomPermission';

    /**
     * Returns true if the given object is an instance of UserCustomPermission.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is UserCustomPermission {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UserCustomPermission.__pulumiType;
    }

    declare public readonly awsAccountId: pulumi.Output<string>;
    /**
     * Custom permissions profile name.
     */
    declare public readonly customPermissionsName: pulumi.Output<string>;
    /**
     * Namespace that the user belongs to. Defaults to `default`.
     */
    declare public readonly namespace: pulumi.Output<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * Username of the user.
     *
     * The following arguments are optional:
     */
    declare public readonly userName: pulumi.Output<string>;

    /**
     * Create a UserCustomPermission resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserCustomPermissionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UserCustomPermissionArgs | UserCustomPermissionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UserCustomPermissionState | undefined;
            resourceInputs["awsAccountId"] = state?.awsAccountId;
            resourceInputs["customPermissionsName"] = state?.customPermissionsName;
            resourceInputs["namespace"] = state?.namespace;
            resourceInputs["region"] = state?.region;
            resourceInputs["userName"] = state?.userName;
        } else {
            const args = argsOrState as UserCustomPermissionArgs | undefined;
            if (args?.customPermissionsName === undefined && !opts.urn) {
                throw new Error("Missing required property 'customPermissionsName'");
            }
            if (args?.userName === undefined && !opts.urn) {
                throw new Error("Missing required property 'userName'");
            }
            resourceInputs["awsAccountId"] = args?.awsAccountId;
            resourceInputs["customPermissionsName"] = args?.customPermissionsName;
            resourceInputs["namespace"] = args?.namespace;
            resourceInputs["region"] = args?.region;
            resourceInputs["userName"] = args?.userName;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(UserCustomPermission.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering UserCustomPermission resources.
 */
export interface UserCustomPermissionState {
    awsAccountId?: pulumi.Input<string>;
    /**
     * Custom permissions profile name.
     */
    customPermissionsName?: pulumi.Input<string>;
    /**
     * Namespace that the user belongs to. Defaults to `default`.
     */
    namespace?: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * Username of the user.
     *
     * The following arguments are optional:
     */
    userName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a UserCustomPermission resource.
 */
export interface UserCustomPermissionArgs {
    awsAccountId?: pulumi.Input<string>;
    /**
     * Custom permissions profile name.
     */
    customPermissionsName: pulumi.Input<string>;
    /**
     * Namespace that the user belongs to. Defaults to `default`.
     */
    namespace?: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * Username of the user.
     *
     * The following arguments are optional:
     */
    userName: pulumi.Input<string>;
}
