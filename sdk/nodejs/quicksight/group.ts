// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource for managing QuickSight Group
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.quicksight.Group("example", {
 *     groupName: "tf-example",
 * });
 * ```
 *
 * ## Import
 *
 * QuickSight Group can be imported using the aws account id, namespace and group name separated by `/`.
 *
 * ```sh
 *  $ pulumi import aws:quicksight/group:Group example 123456789123/default/tf-example
 * ```
 */
export class Group extends pulumi.CustomResource {
    /**
     * Get an existing Group resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GroupState, opts?: pulumi.CustomResourceOptions): Group {
        return new Group(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:quicksight/group:Group';

    /**
     * Returns true if the given object is an instance of Group.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Group {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Group.__pulumiType;
    }

    /**
     * Amazon Resource Name (ARN) of group
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
     */
    public readonly awsAccountId!: pulumi.Output<string>;
    /**
     * A description for the group.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * A name for the group.
     */
    public readonly groupName!: pulumi.Output<string>;
    /**
     * The namespace. Currently, you should set this to `default`.
     */
    public readonly namespace!: pulumi.Output<string | undefined>;

    /**
     * Create a Group resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GroupArgs | GroupState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as GroupState | undefined;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["awsAccountId"] = state ? state.awsAccountId : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["groupName"] = state ? state.groupName : undefined;
            inputs["namespace"] = state ? state.namespace : undefined;
        } else {
            const args = argsOrState as GroupArgs | undefined;
            if ((!args || args.groupName === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'groupName'");
            }
            inputs["awsAccountId"] = args ? args.awsAccountId : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["groupName"] = args ? args.groupName : undefined;
            inputs["namespace"] = args ? args.namespace : undefined;
            inputs["arn"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Group.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Group resources.
 */
export interface GroupState {
    /**
     * Amazon Resource Name (ARN) of group
     */
    readonly arn?: pulumi.Input<string>;
    /**
     * The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
     */
    readonly awsAccountId?: pulumi.Input<string>;
    /**
     * A description for the group.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * A name for the group.
     */
    readonly groupName?: pulumi.Input<string>;
    /**
     * The namespace. Currently, you should set this to `default`.
     */
    readonly namespace?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Group resource.
 */
export interface GroupArgs {
    /**
     * The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
     */
    readonly awsAccountId?: pulumi.Input<string>;
    /**
     * A description for the group.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * A name for the group.
     */
    readonly groupName: pulumi.Input<string>;
    /**
     * The namespace. Currently, you should set this to `default`.
     */
    readonly namespace?: pulumi.Input<string>;
}
