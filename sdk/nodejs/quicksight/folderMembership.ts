// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS QuickSight Folder Membership.
 *
 * ## Example Usage
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.quicksight.FolderMembership("example", {
 *     folderId: aws_quicksight_folder.example.folder_id,
 *     memberType: "DATASET",
 *     memberId: aws_quicksight_data_set.example.data_set_id,
 * });
 * ```
 *
 * ## Import
 *
 * terraform import {
 *
 *  to = aws_quicksight_folder_membership.example
 *
 *  id = "123456789012,example-folder,DATASET,example-dataset" } Using `pulumi import`, import QuickSight Folder Membership using the AWS account ID, folder ID, member type, and member ID separated by commas (`,`). For exampleconsole % pulumi import aws_quicksight_folder_membership.example 123456789012,example-folder,DATASET,example-dataset
 */
export class FolderMembership extends pulumi.CustomResource {
    /**
     * Get an existing FolderMembership resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FolderMembershipState, opts?: pulumi.CustomResourceOptions): FolderMembership {
        return new FolderMembership(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:quicksight/folderMembership:FolderMembership';

    /**
     * Returns true if the given object is an instance of FolderMembership.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FolderMembership {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FolderMembership.__pulumiType;
    }

    /**
     * AWS account ID.
     */
    public readonly awsAccountId!: pulumi.Output<string>;
    /**
     * Identifier for the folder.
     */
    public readonly folderId!: pulumi.Output<string>;
    /**
     * ID of the asset (the dashboard, analysis, or dataset).
     */
    public readonly memberId!: pulumi.Output<string>;
    /**
     * Type of the member. Valid values are `ANALYSIS`, `DASHBOARD`, and `DATASET`.
     *
     * The following arguments are optional:
     */
    public readonly memberType!: pulumi.Output<string>;

    /**
     * Create a FolderMembership resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FolderMembershipArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FolderMembershipArgs | FolderMembershipState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FolderMembershipState | undefined;
            resourceInputs["awsAccountId"] = state ? state.awsAccountId : undefined;
            resourceInputs["folderId"] = state ? state.folderId : undefined;
            resourceInputs["memberId"] = state ? state.memberId : undefined;
            resourceInputs["memberType"] = state ? state.memberType : undefined;
        } else {
            const args = argsOrState as FolderMembershipArgs | undefined;
            if ((!args || args.folderId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'folderId'");
            }
            if ((!args || args.memberId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'memberId'");
            }
            if ((!args || args.memberType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'memberType'");
            }
            resourceInputs["awsAccountId"] = args ? args.awsAccountId : undefined;
            resourceInputs["folderId"] = args ? args.folderId : undefined;
            resourceInputs["memberId"] = args ? args.memberId : undefined;
            resourceInputs["memberType"] = args ? args.memberType : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FolderMembership.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FolderMembership resources.
 */
export interface FolderMembershipState {
    /**
     * AWS account ID.
     */
    awsAccountId?: pulumi.Input<string>;
    /**
     * Identifier for the folder.
     */
    folderId?: pulumi.Input<string>;
    /**
     * ID of the asset (the dashboard, analysis, or dataset).
     */
    memberId?: pulumi.Input<string>;
    /**
     * Type of the member. Valid values are `ANALYSIS`, `DASHBOARD`, and `DATASET`.
     *
     * The following arguments are optional:
     */
    memberType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FolderMembership resource.
 */
export interface FolderMembershipArgs {
    /**
     * AWS account ID.
     */
    awsAccountId?: pulumi.Input<string>;
    /**
     * Identifier for the folder.
     */
    folderId: pulumi.Input<string>;
    /**
     * ID of the asset (the dashboard, analysis, or dataset).
     */
    memberId: pulumi.Input<string>;
    /**
     * Type of the member. Valid values are `ANALYSIS`, `DASHBOARD`, and `DATASET`.
     *
     * The following arguments are optional:
     */
    memberType: pulumi.Input<string>;
}
