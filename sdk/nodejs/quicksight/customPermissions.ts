// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Manages a QuickSight custom permissions profile.
 *
 * ## Example Usage
 *
 * resource "aws.quicksight.CustomPermissions" "example" {
 *   customPermissionsName = "example-permissions"
 *
 *   capabilities {
 *     printReports    = "DENY"
 *     shareDashboards = "DENY"
 *   }
 * }
 *
 * ## Import
 *
 * Using `pulumi import`, import a QuickSight custom permissions profile using the AWS account ID and custom permissions profile name separated by a comma (`,`). For example:
 *
 * ```sh
 * $ pulumi import aws:quicksight/customPermissions:CustomPermissions example 123456789012,example-permissions
 * ```
 */
export class CustomPermissions extends pulumi.CustomResource {
    /**
     * Get an existing CustomPermissions resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomPermissionsState, opts?: pulumi.CustomResourceOptions): CustomPermissions {
        return new CustomPermissions(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:quicksight/customPermissions:CustomPermissions';

    /**
     * Returns true if the given object is an instance of CustomPermissions.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomPermissions {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomPermissions.__pulumiType;
    }

    /**
     * ARN of the custom permissions profile.
     */
    declare public /*out*/ readonly arn: pulumi.Output<string>;
    declare public readonly awsAccountId: pulumi.Output<string>;
    /**
     * Actions to include in the custom permissions profile. See capabilities.
     */
    declare public readonly capabilities: pulumi.Output<outputs.quicksight.CustomPermissionsCapabilities | undefined>;
    /**
     * Custom permissions profile name.
     *
     * The following arguments are optional:
     */
    declare public readonly customPermissionsName: pulumi.Output<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    declare public /*out*/ readonly tagsAll: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a CustomPermissions resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomPermissionsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CustomPermissionsArgs | CustomPermissionsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CustomPermissionsState | undefined;
            resourceInputs["arn"] = state?.arn;
            resourceInputs["awsAccountId"] = state?.awsAccountId;
            resourceInputs["capabilities"] = state?.capabilities;
            resourceInputs["customPermissionsName"] = state?.customPermissionsName;
            resourceInputs["region"] = state?.region;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tagsAll"] = state?.tagsAll;
        } else {
            const args = argsOrState as CustomPermissionsArgs | undefined;
            if (args?.customPermissionsName === undefined && !opts.urn) {
                throw new Error("Missing required property 'customPermissionsName'");
            }
            resourceInputs["awsAccountId"] = args?.awsAccountId;
            resourceInputs["capabilities"] = args?.capabilities;
            resourceInputs["customPermissionsName"] = args?.customPermissionsName;
            resourceInputs["region"] = args?.region;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CustomPermissions.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CustomPermissions resources.
 */
export interface CustomPermissionsState {
    /**
     * ARN of the custom permissions profile.
     */
    arn?: pulumi.Input<string>;
    awsAccountId?: pulumi.Input<string>;
    /**
     * Actions to include in the custom permissions profile. See capabilities.
     */
    capabilities?: pulumi.Input<inputs.quicksight.CustomPermissionsCapabilities>;
    /**
     * Custom permissions profile name.
     *
     * The following arguments are optional:
     */
    customPermissionsName?: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a CustomPermissions resource.
 */
export interface CustomPermissionsArgs {
    awsAccountId?: pulumi.Input<string>;
    /**
     * Actions to include in the custom permissions profile. See capabilities.
     */
    capabilities?: pulumi.Input<inputs.quicksight.CustomPermissionsCapabilities>;
    /**
     * Custom permissions profile name.
     *
     * The following arguments are optional:
     */
    customPermissionsName: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
