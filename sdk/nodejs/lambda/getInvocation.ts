// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to invoke custom lambda functions as data source.
 * The lambda function is invoked with [RequestResponse](https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html#API_Invoke_RequestSyntax)
 * invocation type.
 *
 * > **NOTE:** If you get a `KMSAccessDeniedException: Lambda was unable to decrypt the environment variables because KMS access was denied` error when invoking an `aws.lambda.Function` with environment variables, the IAM role associated with the function may have been deleted and recreated _after_ the function was created. You can fix the problem two ways: 1) updating the function's role to another role and then updating it back again to the recreated role, or 2) by using Pulumi to `taint` the function and `apply` your configuration again to recreate the function. (When you create a function, Lambda grants permissions on the KMS key to the function's IAM role. If the IAM role is recreated, the grant is no longer valid. Changing the function's role or recreating the function causes Lambda to update the grant.)
 */
export function getInvocation(args: GetInvocationArgs, opts?: pulumi.InvokeOptions): Promise<GetInvocationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:lambda/getInvocation:getInvocation", {
        "functionName": args.functionName,
        "input": args.input,
        "qualifier": args.qualifier,
    }, opts);
}

/**
 * A collection of arguments for invoking getInvocation.
 */
export interface GetInvocationArgs {
    /**
     * Name of the lambda function.
     */
    functionName: string;
    /**
     * String in JSON format that is passed as payload to the lambda function.
     */
    input: string;
    /**
     * Qualifier (a.k.a version) of the lambda function. Defaults
     * to `$LATEST`.
     */
    qualifier?: string;
}

/**
 * A collection of values returned by getInvocation.
 */
export interface GetInvocationResult {
    readonly functionName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly input: string;
    readonly qualifier?: string;
    /**
     * String result of the lambda function invocation.
     */
    readonly result: string;
}
/**
 * Use this data source to invoke custom lambda functions as data source.
 * The lambda function is invoked with [RequestResponse](https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html#API_Invoke_RequestSyntax)
 * invocation type.
 *
 * > **NOTE:** If you get a `KMSAccessDeniedException: Lambda was unable to decrypt the environment variables because KMS access was denied` error when invoking an `aws.lambda.Function` with environment variables, the IAM role associated with the function may have been deleted and recreated _after_ the function was created. You can fix the problem two ways: 1) updating the function's role to another role and then updating it back again to the recreated role, or 2) by using Pulumi to `taint` the function and `apply` your configuration again to recreate the function. (When you create a function, Lambda grants permissions on the KMS key to the function's IAM role. If the IAM role is recreated, the grant is no longer valid. Changing the function's role or recreating the function causes Lambda to update the grant.)
 */
export function getInvocationOutput(args: GetInvocationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInvocationResult> {
    return pulumi.output(args).apply((a: any) => getInvocation(a, opts))
}

/**
 * A collection of arguments for invoking getInvocation.
 */
export interface GetInvocationOutputArgs {
    /**
     * Name of the lambda function.
     */
    functionName: pulumi.Input<string>;
    /**
     * String in JSON format that is passed as payload to the lambda function.
     */
    input: pulumi.Input<string>;
    /**
     * Qualifier (a.k.a version) of the lambda function. Defaults
     * to `$LATEST`.
     */
    qualifier?: pulumi.Input<string>;
}
