// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getFunction(args: GetFunctionArgs, opts?: pulumi.InvokeOptions): Promise<GetFunctionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:lambda/getFunction:getFunction", {
        "functionName": args.functionName,
        "qualifier": args.qualifier,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getFunction.
 */
export interface GetFunctionArgs {
    functionName: string;
    qualifier?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getFunction.
 */
export interface GetFunctionResult {
    readonly architectures: string[];
    readonly arn: string;
    readonly codeSigningConfigArn: string;
    readonly deadLetterConfig: outputs.lambda.GetFunctionDeadLetterConfig;
    readonly description: string;
    readonly environment: outputs.lambda.GetFunctionEnvironment;
    readonly ephemeralStorages: outputs.lambda.GetFunctionEphemeralStorage[];
    readonly fileSystemConfigs: outputs.lambda.GetFunctionFileSystemConfig[];
    readonly functionName: string;
    readonly handler: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly imageUri: string;
    readonly invokeArn: string;
    readonly kmsKeyArn: string;
    readonly lastModified: string;
    readonly layers: string[];
    readonly memorySize: number;
    readonly qualifiedArn: string;
    readonly qualifiedInvokeArn: string;
    readonly qualifier?: string;
    readonly reservedConcurrentExecutions: number;
    readonly role: string;
    readonly runtime: string;
    readonly signingJobArn: string;
    readonly signingProfileVersionArn: string;
    readonly sourceCodeHash: string;
    readonly sourceCodeSize: number;
    readonly tags: {[key: string]: string};
    readonly timeout: number;
    readonly tracingConfig: outputs.lambda.GetFunctionTracingConfig;
    readonly version: string;
    readonly vpcConfig: outputs.lambda.GetFunctionVpcConfig;
}
export function getFunctionOutput(args: GetFunctionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFunctionResult> {
    return pulumi.output(args).apply((a: any) => getFunction(a, opts))
}

/**
 * A collection of arguments for invoking getFunction.
 */
export interface GetFunctionOutputArgs {
    functionName: pulumi.Input<string>;
    qualifier?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
