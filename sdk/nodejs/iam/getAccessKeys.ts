// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * This data source can be used to fetch information about IAM access keys of a
 * specific IAM user.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.iam.getAccessKeys({
 *     user: "an_example_user_name",
 * });
 * ```
 */
export function getAccessKeys(args: GetAccessKeysArgs, opts?: pulumi.InvokeOptions): Promise<GetAccessKeysResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:iam/getAccessKeys:getAccessKeys", {
        "user": args.user,
    }, opts);
}

/**
 * A collection of arguments for invoking getAccessKeys.
 */
export interface GetAccessKeysArgs {
    /**
     * Name of the IAM user associated with the access keys.
     */
    user: string;
}

/**
 * A collection of values returned by getAccessKeys.
 */
export interface GetAccessKeysResult {
    /**
     * List of the IAM access keys associated with the specified user. See below.
     */
    readonly accessKeys: outputs.iam.GetAccessKeysAccessKey[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly user: string;
}
/**
 * This data source can be used to fetch information about IAM access keys of a
 * specific IAM user.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.iam.getAccessKeys({
 *     user: "an_example_user_name",
 * });
 * ```
 */
export function getAccessKeysOutput(args: GetAccessKeysOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccessKeysResult> {
    return pulumi.output(args).apply((a: any) => getAccessKeys(a, opts))
}

/**
 * A collection of arguments for invoking getAccessKeys.
 */
export interface GetAccessKeysOutputArgs {
    /**
     * Name of the IAM user associated with the access keys.
     */
    user: pulumi.Input<string>;
}
