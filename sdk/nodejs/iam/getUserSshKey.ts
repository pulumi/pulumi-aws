// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to get information about a SSH public key associated with the specified IAM user.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = pulumi.output(aws.iam.getUserSshKey({
 *     encoding: "SSH",
 *     sshPublicKeyId: "APKARUZ32GUTKIGARLXE",
 *     username: "test-user",
 * }));
 * ```
 */
export function getUserSshKey(args: GetUserSshKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetUserSshKeyResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("aws:iam/getUserSshKey:getUserSshKey", {
        "encoding": args.encoding,
        "sshPublicKeyId": args.sshPublicKeyId,
        "username": args.username,
    }, opts);
}

/**
 * A collection of arguments for invoking getUserSshKey.
 */
export interface GetUserSshKeyArgs {
    /**
     * Specifies the public key encoding format to use in the response. To retrieve the public key in ssh-rsa format, use `SSH`. To retrieve the public key in PEM format, use `PEM`.
     */
    encoding: string;
    /**
     * The unique identifier for the SSH public key.
     */
    sshPublicKeyId: string;
    /**
     * The name of the IAM user associated with the SSH public key.
     */
    username: string;
}

/**
 * A collection of values returned by getUserSshKey.
 */
export interface GetUserSshKeyResult {
    readonly encoding: string;
    /**
     * The MD5 message digest of the SSH public key.
     */
    readonly fingerprint: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The SSH public key.
     */
    readonly publicKey: string;
    readonly sshPublicKeyId: string;
    /**
     * The status of the SSH public key. Active means that the key can be used for authentication with an CodeCommit repository. Inactive means that the key cannot be used.
     */
    readonly status: string;
    readonly username: string;
}

export function getUserSshKeyOutput(args: GetUserSshKeyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserSshKeyResult> {
    return pulumi.output(args).apply(a => getUserSshKey(a, opts))
}

/**
 * A collection of arguments for invoking getUserSshKey.
 */
export interface GetUserSshKeyOutputArgs {
    /**
     * Specifies the public key encoding format to use in the response. To retrieve the public key in ssh-rsa format, use `SSH`. To retrieve the public key in PEM format, use `PEM`.
     */
    encoding: pulumi.Input<string>;
    /**
     * The unique identifier for the SSH public key.
     */
    sshPublicKeyId: pulumi.Input<string>;
    /**
     * The name of the IAM user associated with the SSH public key.
     */
    username: pulumi.Input<string>;
}
