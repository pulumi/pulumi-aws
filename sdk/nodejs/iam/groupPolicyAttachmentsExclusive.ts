// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * Using `pulumi import`, import exclusive management of customer managed policy assignments using the `group_name`. For example:
 *
 * ```sh
 * $ pulumi import aws:iam/groupPolicyAttachmentsExclusive:GroupPolicyAttachmentsExclusive example MyGroup
 * ```
 */
export class GroupPolicyAttachmentsExclusive extends pulumi.CustomResource {
    /**
     * Get an existing GroupPolicyAttachmentsExclusive resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GroupPolicyAttachmentsExclusiveState, opts?: pulumi.CustomResourceOptions): GroupPolicyAttachmentsExclusive {
        return new GroupPolicyAttachmentsExclusive(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:iam/groupPolicyAttachmentsExclusive:GroupPolicyAttachmentsExclusive';

    /**
     * Returns true if the given object is an instance of GroupPolicyAttachmentsExclusive.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GroupPolicyAttachmentsExclusive {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GroupPolicyAttachmentsExclusive.__pulumiType;
    }

    /**
     * IAM group name.
     */
    public readonly groupName!: pulumi.Output<string>;
    /**
     * A list of customer managed policy ARNs to be attached to the group. Policies attached to this group but not configured in this argument will be removed.
     */
    public readonly policyArns!: pulumi.Output<string[]>;

    /**
     * Create a GroupPolicyAttachmentsExclusive resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GroupPolicyAttachmentsExclusiveArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GroupPolicyAttachmentsExclusiveArgs | GroupPolicyAttachmentsExclusiveState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GroupPolicyAttachmentsExclusiveState | undefined;
            resourceInputs["groupName"] = state ? state.groupName : undefined;
            resourceInputs["policyArns"] = state ? state.policyArns : undefined;
        } else {
            const args = argsOrState as GroupPolicyAttachmentsExclusiveArgs | undefined;
            if ((!args || args.groupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupName'");
            }
            if ((!args || args.policyArns === undefined) && !opts.urn) {
                throw new Error("Missing required property 'policyArns'");
            }
            resourceInputs["groupName"] = args ? args.groupName : undefined;
            resourceInputs["policyArns"] = args ? args.policyArns : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GroupPolicyAttachmentsExclusive.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering GroupPolicyAttachmentsExclusive resources.
 */
export interface GroupPolicyAttachmentsExclusiveState {
    /**
     * IAM group name.
     */
    groupName?: pulumi.Input<string>;
    /**
     * A list of customer managed policy ARNs to be attached to the group. Policies attached to this group but not configured in this argument will be removed.
     */
    policyArns?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a GroupPolicyAttachmentsExclusive resource.
 */
export interface GroupPolicyAttachmentsExclusiveArgs {
    /**
     * IAM group name.
     */
    groupName: pulumi.Input<string>;
    /**
     * A list of customer managed policy ARNs to be attached to the group. Policies attached to this group but not configured in this argument will be removed.
     */
    policyArns: pulumi.Input<pulumi.Input<string>[]>;
}
