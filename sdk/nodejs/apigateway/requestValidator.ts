// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

import {RestApi} from "./restApi";

/**
 * Manages an API Gateway Request Validator.
 */
export class RequestValidator extends pulumi.CustomResource {
    /**
     * Get an existing RequestValidator resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RequestValidatorState, opts?: pulumi.CustomResourceOptions): RequestValidator {
        return new RequestValidator(name, <any>state, { ...opts, id: id });
    }

    /**
     * The name of the request validator
     */
    public readonly name: pulumi.Output<string>;
    /**
     * The ID of the associated Rest API
     */
    public readonly restApi: pulumi.Output<RestApi>;
    /**
     * Boolean whether to validate request body. Defaults to `false`.
     */
    public readonly validateRequestBody: pulumi.Output<boolean | undefined>;
    /**
     * Boolean whether to validate request parameters. Defaults to `false`.
     */
    public readonly validateRequestParameters: pulumi.Output<boolean | undefined>;

    /**
     * Create a RequestValidator resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RequestValidatorArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RequestValidatorArgs | RequestValidatorState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: RequestValidatorState = argsOrState as RequestValidatorState | undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["restApi"] = state ? state.restApi : undefined;
            inputs["validateRequestBody"] = state ? state.validateRequestBody : undefined;
            inputs["validateRequestParameters"] = state ? state.validateRequestParameters : undefined;
        } else {
            const args = argsOrState as RequestValidatorArgs | undefined;
            if (!args || args.restApi === undefined) {
                throw new Error("Missing required property 'restApi'");
            }
            inputs["name"] = args ? args.name : undefined;
            inputs["restApi"] = args ? args.restApi : undefined;
            inputs["validateRequestBody"] = args ? args.validateRequestBody : undefined;
            inputs["validateRequestParameters"] = args ? args.validateRequestParameters : undefined;
        }
        super("aws:apigateway/requestValidator:RequestValidator", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RequestValidator resources.
 */
export interface RequestValidatorState {
    /**
     * The name of the request validator
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The ID of the associated Rest API
     */
    readonly restApi?: pulumi.Input<RestApi>;
    /**
     * Boolean whether to validate request body. Defaults to `false`.
     */
    readonly validateRequestBody?: pulumi.Input<boolean>;
    /**
     * Boolean whether to validate request parameters. Defaults to `false`.
     */
    readonly validateRequestParameters?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a RequestValidator resource.
 */
export interface RequestValidatorArgs {
    /**
     * The name of the request validator
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The ID of the associated Rest API
     */
    readonly restApi: pulumi.Input<RestApi>;
    /**
     * Boolean whether to validate request body. Defaults to `false`.
     */
    readonly validateRequestBody?: pulumi.Input<boolean>;
    /**
     * Boolean whether to validate request parameters. Defaults to `false`.
     */
    readonly validateRequestParameters?: pulumi.Input<boolean>;
}
