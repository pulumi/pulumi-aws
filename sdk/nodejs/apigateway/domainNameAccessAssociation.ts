// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Creates a domain name access association resource between an access association source and a private custom domain name.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.apigateway.DomainNameAccessAssociation("example", {
 *     accessAssociationSource: exampleAwsVpcEndpoint.id,
 *     accessAssociationSourceType: "VPCE",
 *     domainNameArn: exampleAwsApiGatewayDomainName.arn,
 * });
 * ```
 *
 * ## Import
 *
 * ### Identity Schema
 *
 * #### Required
 *
 * - `arn` (String) Amazon Resource Name (ARN) of the API Gateway domain name access association.
 *
 * Using `pulumi import`, import API Gateway domain name acces associations as using their `arn`. For example:
 *
 * console
 *
 * % pulumi import aws_api_gateway_domain_name_access_association.example arn:aws:apigateway:us-west-2:123456789012:/domainnameaccessassociations/domainname/12qmzgp2.9m7ilski.test+hykg7a12e7/vpcesource/vpce-05de3f8f82740a748
 */
export class DomainNameAccessAssociation extends pulumi.CustomResource {
    /**
     * Get an existing DomainNameAccessAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DomainNameAccessAssociationState, opts?: pulumi.CustomResourceOptions): DomainNameAccessAssociation {
        return new DomainNameAccessAssociation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:apigateway/domainNameAccessAssociation:DomainNameAccessAssociation';

    /**
     * Returns true if the given object is an instance of DomainNameAccessAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DomainNameAccessAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DomainNameAccessAssociation.__pulumiType;
    }

    /**
     * The identifier of the domain name access association source. For a `VPCE`, the value is the VPC endpoint ID.
     */
    declare public readonly accessAssociationSource: pulumi.Output<string>;
    /**
     * The type of the domain name access association source. Valid values are `VPCE`.
     */
    declare public readonly accessAssociationSourceType: pulumi.Output<string>;
    /**
     * ARN of the domain name access association.
     */
    declare public /*out*/ readonly arn: pulumi.Output<string>;
    /**
     * The ARN of the domain name.
     */
    declare public readonly domainNameArn: pulumi.Output<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    declare public /*out*/ readonly tagsAll: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a DomainNameAccessAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DomainNameAccessAssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DomainNameAccessAssociationArgs | DomainNameAccessAssociationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DomainNameAccessAssociationState | undefined;
            resourceInputs["accessAssociationSource"] = state?.accessAssociationSource;
            resourceInputs["accessAssociationSourceType"] = state?.accessAssociationSourceType;
            resourceInputs["arn"] = state?.arn;
            resourceInputs["domainNameArn"] = state?.domainNameArn;
            resourceInputs["region"] = state?.region;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tagsAll"] = state?.tagsAll;
        } else {
            const args = argsOrState as DomainNameAccessAssociationArgs | undefined;
            if (args?.accessAssociationSource === undefined && !opts.urn) {
                throw new Error("Missing required property 'accessAssociationSource'");
            }
            if (args?.accessAssociationSourceType === undefined && !opts.urn) {
                throw new Error("Missing required property 'accessAssociationSourceType'");
            }
            if (args?.domainNameArn === undefined && !opts.urn) {
                throw new Error("Missing required property 'domainNameArn'");
            }
            resourceInputs["accessAssociationSource"] = args?.accessAssociationSource;
            resourceInputs["accessAssociationSourceType"] = args?.accessAssociationSourceType;
            resourceInputs["domainNameArn"] = args?.domainNameArn;
            resourceInputs["region"] = args?.region;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DomainNameAccessAssociation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DomainNameAccessAssociation resources.
 */
export interface DomainNameAccessAssociationState {
    /**
     * The identifier of the domain name access association source. For a `VPCE`, the value is the VPC endpoint ID.
     */
    accessAssociationSource?: pulumi.Input<string>;
    /**
     * The type of the domain name access association source. Valid values are `VPCE`.
     */
    accessAssociationSourceType?: pulumi.Input<string>;
    /**
     * ARN of the domain name access association.
     */
    arn?: pulumi.Input<string>;
    /**
     * The ARN of the domain name.
     */
    domainNameArn?: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a DomainNameAccessAssociation resource.
 */
export interface DomainNameAccessAssociationArgs {
    /**
     * The identifier of the domain name access association source. For a `VPCE`, the value is the VPC endpoint ID.
     */
    accessAssociationSource: pulumi.Input<string>;
    /**
     * The type of the domain name access association source. Valid values are `VPCE`.
     */
    accessAssociationSourceType: pulumi.Input<string>;
    /**
     * The ARN of the domain name.
     */
    domainNameArn: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
