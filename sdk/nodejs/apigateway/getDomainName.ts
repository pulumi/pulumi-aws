// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getDomainName(args: GetDomainNameArgs, opts?: pulumi.InvokeOptions): Promise<GetDomainNameResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:apigateway/getDomainName:getDomainName", {
        "domainName": args.domainName,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getDomainName.
 */
export interface GetDomainNameArgs {
    domainName: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getDomainName.
 */
export interface GetDomainNameResult {
    readonly arn: string;
    readonly certificateArn: string;
    readonly certificateName: string;
    readonly certificateUploadDate: string;
    readonly cloudfrontDomainName: string;
    readonly cloudfrontZoneId: string;
    readonly domainName: string;
    readonly endpointConfigurations: outputs.apigateway.GetDomainNameEndpointConfiguration[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly regionalCertificateArn: string;
    readonly regionalCertificateName: string;
    readonly regionalDomainName: string;
    readonly regionalZoneId: string;
    readonly securityPolicy: string;
    readonly tags?: {[key: string]: string};
}
export function getDomainNameOutput(args: GetDomainNameOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDomainNameResult> {
    return pulumi.output(args).apply((a: any) => getDomainName(a, opts))
}

/**
 * A collection of arguments for invoking getDomainName.
 */
export interface GetDomainNameOutputArgs {
    domainName: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
