// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a settings of an API Gateway Documentation Part.
 * 
 * ## Example Usage
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const aws_api_gateway_rest_api_example = new aws.apigateway.RestApi("example", {
 *     name: "example_api",
 * });
 * const aws_api_gateway_documentation_part_example = new aws.apigateway.DocumentationPart("example", {
 *     location: {
 *         method: "GET",
 *         path: "/example",
 *         type: "METHOD",
 *     },
 *     properties: "{\"description\":\"Example description\"}",
 *     restApiId: aws_api_gateway_rest_api_example.id,
 * });
 * ```
 */
export class DocumentationPart extends pulumi.CustomResource {
    /**
     * Get an existing DocumentationPart resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DocumentationPartState, opts?: pulumi.CustomResourceOptions): DocumentationPart {
        return new DocumentationPart(name, <any>state, { ...opts, id: id });
    }

    /**
     * The location of the targeted API entity of the to-be-created documentation part. See below.
     */
    public readonly location: pulumi.Output<{ method?: string, name?: string, path?: string, statusCode?: string, type: string }>;
    /**
     * A content map of API-specific key-value pairs describing the targeted API entity. The map must be encoded as a JSON string, e.g., "{ \"description\": \"The API does ...\" }". Only Swagger-compliant key-value pairs can be exported and, hence, published.
     */
    public readonly properties: pulumi.Output<string>;
    /**
     * The ID of the associated Rest API
     */
    public readonly restApiId: pulumi.Output<string>;

    /**
     * Create a DocumentationPart resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DocumentationPartArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DocumentationPartArgs | DocumentationPartState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: DocumentationPartState = argsOrState as DocumentationPartState | undefined;
            inputs["location"] = state ? state.location : undefined;
            inputs["properties"] = state ? state.properties : undefined;
            inputs["restApiId"] = state ? state.restApiId : undefined;
        } else {
            const args = argsOrState as DocumentationPartArgs | undefined;
            if (!args || args.location === undefined) {
                throw new Error("Missing required property 'location'");
            }
            if (!args || args.properties === undefined) {
                throw new Error("Missing required property 'properties'");
            }
            if (!args || args.restApiId === undefined) {
                throw new Error("Missing required property 'restApiId'");
            }
            inputs["location"] = args ? args.location : undefined;
            inputs["properties"] = args ? args.properties : undefined;
            inputs["restApiId"] = args ? args.restApiId : undefined;
        }
        super("aws:apigateway/documentationPart:DocumentationPart", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DocumentationPart resources.
 */
export interface DocumentationPartState {
    /**
     * The location of the targeted API entity of the to-be-created documentation part. See below.
     */
    readonly location?: pulumi.Input<{ method?: pulumi.Input<string>, name?: pulumi.Input<string>, path?: pulumi.Input<string>, statusCode?: pulumi.Input<string>, type: pulumi.Input<string> }>;
    /**
     * A content map of API-specific key-value pairs describing the targeted API entity. The map must be encoded as a JSON string, e.g., "{ \"description\": \"The API does ...\" }". Only Swagger-compliant key-value pairs can be exported and, hence, published.
     */
    readonly properties?: pulumi.Input<string>;
    /**
     * The ID of the associated Rest API
     */
    readonly restApiId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DocumentationPart resource.
 */
export interface DocumentationPartArgs {
    /**
     * The location of the targeted API entity of the to-be-created documentation part. See below.
     */
    readonly location: pulumi.Input<{ method?: pulumi.Input<string>, name?: pulumi.Input<string>, path?: pulumi.Input<string>, statusCode?: pulumi.Input<string>, type: pulumi.Input<string> }>;
    /**
     * A content map of API-specific key-value pairs describing the targeted API entity. The map must be encoded as a JSON string, e.g., "{ \"description\": \"The API does ...\" }". Only Swagger-compliant key-value pairs can be exported and, hence, published.
     */
    readonly properties: pulumi.Input<string>;
    /**
     * The ID of the associated Rest API
     */
    readonly restApiId: pulumi.Input<string>;
}
