// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export class Stack extends pulumi.CustomResource {
    /**
     * Get an existing Stack resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StackState, opts?: pulumi.CustomResourceOptions): Stack {
        return new Stack(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:opsworks/stack:Stack';

    /**
     * Returns true if the given object is an instance of Stack.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Stack {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Stack.__pulumiType;
    }

    public readonly agentVersion!: pulumi.Output<string>;
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly berkshelfVersion!: pulumi.Output<string | undefined>;
    public readonly color!: pulumi.Output<string | undefined>;
    public readonly configurationManagerName!: pulumi.Output<string | undefined>;
    public readonly configurationManagerVersion!: pulumi.Output<string | undefined>;
    public readonly customCookbooksSources!: pulumi.Output<outputs.opsworks.StackCustomCookbooksSource[]>;
    public readonly customJson!: pulumi.Output<string | undefined>;
    public readonly defaultAvailabilityZone!: pulumi.Output<string>;
    public readonly defaultInstanceProfileArn!: pulumi.Output<string>;
    public readonly defaultOs!: pulumi.Output<string | undefined>;
    public readonly defaultRootDeviceType!: pulumi.Output<string | undefined>;
    public readonly defaultSshKeyName!: pulumi.Output<string | undefined>;
    public readonly defaultSubnetId!: pulumi.Output<string>;
    public readonly hostnameTheme!: pulumi.Output<string | undefined>;
    public readonly manageBerkshelf!: pulumi.Output<boolean | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly region!: pulumi.Output<string>;
    public readonly serviceRoleArn!: pulumi.Output<string>;
    public /*out*/ readonly stackEndpoint!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    public readonly useCustomCookbooks!: pulumi.Output<boolean | undefined>;
    public readonly useOpsworksSecurityGroups!: pulumi.Output<boolean | undefined>;
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a Stack resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StackArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StackArgs | StackState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StackState | undefined;
            resourceInputs["agentVersion"] = state ? state.agentVersion : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["berkshelfVersion"] = state ? state.berkshelfVersion : undefined;
            resourceInputs["color"] = state ? state.color : undefined;
            resourceInputs["configurationManagerName"] = state ? state.configurationManagerName : undefined;
            resourceInputs["configurationManagerVersion"] = state ? state.configurationManagerVersion : undefined;
            resourceInputs["customCookbooksSources"] = state ? state.customCookbooksSources : undefined;
            resourceInputs["customJson"] = state ? state.customJson : undefined;
            resourceInputs["defaultAvailabilityZone"] = state ? state.defaultAvailabilityZone : undefined;
            resourceInputs["defaultInstanceProfileArn"] = state ? state.defaultInstanceProfileArn : undefined;
            resourceInputs["defaultOs"] = state ? state.defaultOs : undefined;
            resourceInputs["defaultRootDeviceType"] = state ? state.defaultRootDeviceType : undefined;
            resourceInputs["defaultSshKeyName"] = state ? state.defaultSshKeyName : undefined;
            resourceInputs["defaultSubnetId"] = state ? state.defaultSubnetId : undefined;
            resourceInputs["hostnameTheme"] = state ? state.hostnameTheme : undefined;
            resourceInputs["manageBerkshelf"] = state ? state.manageBerkshelf : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["serviceRoleArn"] = state ? state.serviceRoleArn : undefined;
            resourceInputs["stackEndpoint"] = state ? state.stackEndpoint : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["useCustomCookbooks"] = state ? state.useCustomCookbooks : undefined;
            resourceInputs["useOpsworksSecurityGroups"] = state ? state.useOpsworksSecurityGroups : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as StackArgs | undefined;
            if ((!args || args.defaultInstanceProfileArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'defaultInstanceProfileArn'");
            }
            if ((!args || args.region === undefined) && !opts.urn) {
                throw new Error("Missing required property 'region'");
            }
            if ((!args || args.serviceRoleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceRoleArn'");
            }
            resourceInputs["agentVersion"] = args ? args.agentVersion : undefined;
            resourceInputs["berkshelfVersion"] = args ? args.berkshelfVersion : undefined;
            resourceInputs["color"] = args ? args.color : undefined;
            resourceInputs["configurationManagerName"] = args ? args.configurationManagerName : undefined;
            resourceInputs["configurationManagerVersion"] = args ? args.configurationManagerVersion : undefined;
            resourceInputs["customCookbooksSources"] = args ? args.customCookbooksSources : undefined;
            resourceInputs["customJson"] = args ? args.customJson : undefined;
            resourceInputs["defaultAvailabilityZone"] = args ? args.defaultAvailabilityZone : undefined;
            resourceInputs["defaultInstanceProfileArn"] = args ? args.defaultInstanceProfileArn : undefined;
            resourceInputs["defaultOs"] = args ? args.defaultOs : undefined;
            resourceInputs["defaultRootDeviceType"] = args ? args.defaultRootDeviceType : undefined;
            resourceInputs["defaultSshKeyName"] = args ? args.defaultSshKeyName : undefined;
            resourceInputs["defaultSubnetId"] = args ? args.defaultSubnetId : undefined;
            resourceInputs["hostnameTheme"] = args ? args.hostnameTheme : undefined;
            resourceInputs["manageBerkshelf"] = args ? args.manageBerkshelf : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["serviceRoleArn"] = args ? args.serviceRoleArn : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["useCustomCookbooks"] = args ? args.useCustomCookbooks : undefined;
            resourceInputs["useOpsworksSecurityGroups"] = args ? args.useOpsworksSecurityGroups : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["stackEndpoint"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Stack.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Stack resources.
 */
export interface StackState {
    agentVersion?: pulumi.Input<string>;
    arn?: pulumi.Input<string>;
    berkshelfVersion?: pulumi.Input<string>;
    color?: pulumi.Input<string>;
    configurationManagerName?: pulumi.Input<string>;
    configurationManagerVersion?: pulumi.Input<string>;
    customCookbooksSources?: pulumi.Input<pulumi.Input<inputs.opsworks.StackCustomCookbooksSource>[]>;
    customJson?: pulumi.Input<string>;
    defaultAvailabilityZone?: pulumi.Input<string>;
    defaultInstanceProfileArn?: pulumi.Input<string>;
    defaultOs?: pulumi.Input<string>;
    defaultRootDeviceType?: pulumi.Input<string>;
    defaultSshKeyName?: pulumi.Input<string>;
    defaultSubnetId?: pulumi.Input<string>;
    hostnameTheme?: pulumi.Input<string>;
    manageBerkshelf?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    serviceRoleArn?: pulumi.Input<string>;
    stackEndpoint?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    useCustomCookbooks?: pulumi.Input<boolean>;
    useOpsworksSecurityGroups?: pulumi.Input<boolean>;
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Stack resource.
 */
export interface StackArgs {
    agentVersion?: pulumi.Input<string>;
    berkshelfVersion?: pulumi.Input<string>;
    color?: pulumi.Input<string>;
    configurationManagerName?: pulumi.Input<string>;
    configurationManagerVersion?: pulumi.Input<string>;
    customCookbooksSources?: pulumi.Input<pulumi.Input<inputs.opsworks.StackCustomCookbooksSource>[]>;
    customJson?: pulumi.Input<string>;
    defaultAvailabilityZone?: pulumi.Input<string>;
    defaultInstanceProfileArn: pulumi.Input<string>;
    defaultOs?: pulumi.Input<string>;
    defaultRootDeviceType?: pulumi.Input<string>;
    defaultSshKeyName?: pulumi.Input<string>;
    defaultSubnetId?: pulumi.Input<string>;
    hostnameTheme?: pulumi.Input<string>;
    manageBerkshelf?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    region: pulumi.Input<string>;
    serviceRoleArn: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    useCustomCookbooks?: pulumi.Input<boolean>;
    useOpsworksSecurityGroups?: pulumi.Input<boolean>;
    vpcId?: pulumi.Input<string>;
}
