// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Gets a registration code used to register a CA certificate with AWS IoT.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * import * as tls from "@pulumi/tls";
 *
 * const example = aws.iot.getRegistrationCode({});
 * const verificationPrivateKey = new tls.PrivateKey("verificationPrivateKey", {algorithm: "RSA"});
 * const verificationCertRequest = new tls.CertRequest("verificationCertRequest", {
 *     keyAlgorithm: "RSA",
 *     privateKeyPem: verificationPrivateKey.privateKeyPem,
 *     subject: {
 *         commonName: example.then(example => example.registrationCode),
 *     },
 * });
 * ```
 */
export function getRegistrationCode(opts?: pulumi.InvokeOptions): Promise<GetRegistrationCodeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:iot/getRegistrationCode:getRegistrationCode", {
    }, opts);
}

/**
 * A collection of values returned by getRegistrationCode.
 */
export interface GetRegistrationCodeResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The CA certificate registration code.
     */
    readonly registrationCode: string;
}
/**
 * Gets a registration code used to register a CA certificate with AWS IoT.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * import * as tls from "@pulumi/tls";
 *
 * const example = aws.iot.getRegistrationCode({});
 * const verificationPrivateKey = new tls.PrivateKey("verificationPrivateKey", {algorithm: "RSA"});
 * const verificationCertRequest = new tls.CertRequest("verificationCertRequest", {
 *     keyAlgorithm: "RSA",
 *     privateKeyPem: verificationPrivateKey.privateKeyPem,
 *     subject: {
 *         commonName: example.then(example => example.registrationCode),
 *     },
 * });
 * ```
 */
export function getRegistrationCodeOutput(opts?: pulumi.InvokeOptions): pulumi.Output<GetRegistrationCodeResult> {
    return pulumi.output(getRegistrationCode(opts))
}
