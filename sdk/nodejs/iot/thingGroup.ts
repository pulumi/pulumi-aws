// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Manages an AWS IoT Thing Group.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const parent = new aws.iot.ThingGroup("parent", {});
 * const example = new aws.iot.ThingGroup("example", {
 *     parentGroupName: parent.name,
 *     properties: {
 *         attributePayload: {
 *             attributes: {
 *                 One: "11111",
 *                 Two: "TwoTwo",
 *             },
 *         },
 *         description: "This is my thing group",
 *     },
 *     tags: {
 *         managed: "true",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import IoT Things Groups using the name. For example:
 *
 * ```sh
 *  $ pulumi import aws:iot/thingGroup:ThingGroup example example
 * ```
 */
export class ThingGroup extends pulumi.CustomResource {
    /**
     * Get an existing ThingGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ThingGroupState, opts?: pulumi.CustomResourceOptions): ThingGroup {
        return new ThingGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:iot/thingGroup:ThingGroup';

    /**
     * Returns true if the given object is an instance of ThingGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ThingGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ThingGroup.__pulumiType;
    }

    /**
     * The ARN of the Thing Group.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public /*out*/ readonly metadatas!: pulumi.Output<outputs.iot.ThingGroupMetadata[]>;
    /**
     * The name of the Thing Group.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The name of the parent Thing Group.
     */
    public readonly parentGroupName!: pulumi.Output<string | undefined>;
    /**
     * The Thing Group properties. Defined below.
     */
    public readonly properties!: pulumi.Output<outputs.iot.ThingGroupProperties | undefined>;
    /**
     * Key-value mapping of resource tags
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * @deprecated Please use `tags` instead.
     */
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    /**
     * The current version of the Thing Group record in the registry.
     */
    public /*out*/ readonly version!: pulumi.Output<number>;

    /**
     * Create a ThingGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ThingGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ThingGroupArgs | ThingGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ThingGroupState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["metadatas"] = state ? state.metadatas : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["parentGroupName"] = state ? state.parentGroupName : undefined;
            resourceInputs["properties"] = state ? state.properties : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as ThingGroupArgs | undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["parentGroupName"] = args ? args.parentGroupName : undefined;
            resourceInputs["properties"] = args ? args.properties : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["metadatas"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["tagsAll"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ThingGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ThingGroup resources.
 */
export interface ThingGroupState {
    /**
     * The ARN of the Thing Group.
     */
    arn?: pulumi.Input<string>;
    metadatas?: pulumi.Input<pulumi.Input<inputs.iot.ThingGroupMetadata>[]>;
    /**
     * The name of the Thing Group.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the parent Thing Group.
     */
    parentGroupName?: pulumi.Input<string>;
    /**
     * The Thing Group properties. Defined below.
     */
    properties?: pulumi.Input<inputs.iot.ThingGroupProperties>;
    /**
     * Key-value mapping of resource tags
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * @deprecated Please use `tags` instead.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The current version of the Thing Group record in the registry.
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ThingGroup resource.
 */
export interface ThingGroupArgs {
    /**
     * The name of the Thing Group.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the parent Thing Group.
     */
    parentGroupName?: pulumi.Input<string>;
    /**
     * The Thing Group properties. Defined below.
     */
    properties?: pulumi.Input<inputs.iot.ThingGroupProperties>;
    /**
     * Key-value mapping of resource tags
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
