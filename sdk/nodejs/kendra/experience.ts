// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export class Experience extends pulumi.CustomResource {
    /**
     * Get an existing Experience resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ExperienceState, opts?: pulumi.CustomResourceOptions): Experience {
        return new Experience(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:kendra/experience:Experience';

    /**
     * Returns true if the given object is an instance of Experience.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Experience {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Experience.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly configuration!: pulumi.Output<outputs.kendra.ExperienceConfiguration>;
    public readonly description!: pulumi.Output<string | undefined>;
    public /*out*/ readonly endpoints!: pulumi.Output<outputs.kendra.ExperienceEndpoint[]>;
    public /*out*/ readonly experienceId!: pulumi.Output<string>;
    public readonly indexId!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly roleArn!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a Experience resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ExperienceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ExperienceArgs | ExperienceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ExperienceState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["configuration"] = state ? state.configuration : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["endpoints"] = state ? state.endpoints : undefined;
            resourceInputs["experienceId"] = state ? state.experienceId : undefined;
            resourceInputs["indexId"] = state ? state.indexId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["roleArn"] = state ? state.roleArn : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as ExperienceArgs | undefined;
            if ((!args || args.indexId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'indexId'");
            }
            if ((!args || args.roleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            resourceInputs["configuration"] = args ? args.configuration : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["indexId"] = args ? args.indexId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["endpoints"] = undefined /*out*/;
            resourceInputs["experienceId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Experience.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Experience resources.
 */
export interface ExperienceState {
    arn?: pulumi.Input<string>;
    configuration?: pulumi.Input<inputs.kendra.ExperienceConfiguration>;
    description?: pulumi.Input<string>;
    endpoints?: pulumi.Input<pulumi.Input<inputs.kendra.ExperienceEndpoint>[]>;
    experienceId?: pulumi.Input<string>;
    indexId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    roleArn?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Experience resource.
 */
export interface ExperienceArgs {
    configuration?: pulumi.Input<inputs.kendra.ExperienceConfiguration>;
    description?: pulumi.Input<string>;
    indexId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    roleArn: pulumi.Input<string>;
}
