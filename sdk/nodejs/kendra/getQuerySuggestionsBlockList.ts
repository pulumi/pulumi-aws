// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getQuerySuggestionsBlockList(args: GetQuerySuggestionsBlockListArgs, opts?: pulumi.InvokeOptions): Promise<GetQuerySuggestionsBlockListResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:kendra/getQuerySuggestionsBlockList:getQuerySuggestionsBlockList", {
        "indexId": args.indexId,
        "querySuggestionsBlockListId": args.querySuggestionsBlockListId,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getQuerySuggestionsBlockList.
 */
export interface GetQuerySuggestionsBlockListArgs {
    indexId: string;
    querySuggestionsBlockListId: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getQuerySuggestionsBlockList.
 */
export interface GetQuerySuggestionsBlockListResult {
    readonly arn: string;
    readonly createdAt: string;
    readonly description: string;
    readonly errorMessage: string;
    readonly fileSizeBytes: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly indexId: string;
    readonly itemCount: number;
    readonly name: string;
    readonly querySuggestionsBlockListId: string;
    readonly roleArn: string;
    readonly sourceS3Paths: outputs.kendra.GetQuerySuggestionsBlockListSourceS3Path[];
    readonly status: string;
    readonly tags: {[key: string]: string};
    readonly updatedAt: string;
}
export function getQuerySuggestionsBlockListOutput(args: GetQuerySuggestionsBlockListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetQuerySuggestionsBlockListResult> {
    return pulumi.output(args).apply((a: any) => getQuerySuggestionsBlockList(a, opts))
}

/**
 * A collection of arguments for invoking getQuerySuggestionsBlockList.
 */
export interface GetQuerySuggestionsBlockListOutputArgs {
    indexId: pulumi.Input<string>;
    querySuggestionsBlockListId: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
