// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS SESv2 (Simple Email V2) Configuration Set Event Destination.
 *
 * ## Example Usage
 * ### Cloud Watch Destination
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleConfigurationSet = new aws.sesv2.ConfigurationSet("exampleConfigurationSet", {configurationSetName: "example"});
 * const exampleConfigurationSetEventDestination = new aws.sesv2.ConfigurationSetEventDestination("exampleConfigurationSetEventDestination", {
 *     configurationSetName: exampleConfigurationSet.configurationSetName,
 *     eventDestinationName: "example",
 *     eventDestination: {
 *         cloudWatchDestination: {
 *             dimensionConfigurations: [{
 *                 defaultDimensionValue: "example",
 *                 dimensionName: "example",
 *                 dimensionValueSource: "MESSAGE_TAG",
 *             }],
 *         },
 *         enabled: true,
 *         matchingEventTypes: ["SEND"],
 *     },
 * });
 * ```
 * ### Kinesis Firehose Destination
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleConfigurationSet = new aws.sesv2.ConfigurationSet("exampleConfigurationSet", {configurationSetName: "example"});
 * const exampleConfigurationSetEventDestination = new aws.sesv2.ConfigurationSetEventDestination("exampleConfigurationSetEventDestination", {
 *     configurationSetName: exampleConfigurationSet.configurationSetName,
 *     eventDestinationName: "example",
 *     eventDestination: {
 *         kinesisFirehoseDestination: {
 *             deliveryStreamArn: aws_kinesis_firehose_delivery_stream.example.arn,
 *             iamRoleArn: aws_iam_role.example.arn,
 *         },
 *         enabled: true,
 *         matchingEventTypes: ["SEND"],
 *     },
 * });
 * ```
 * ### Pinpoint Destination
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleConfigurationSet = new aws.sesv2.ConfigurationSet("exampleConfigurationSet", {configurationSetName: "example"});
 * const exampleConfigurationSetEventDestination = new aws.sesv2.ConfigurationSetEventDestination("exampleConfigurationSetEventDestination", {
 *     configurationSetName: exampleConfigurationSet.configurationSetName,
 *     eventDestinationName: "example",
 *     eventDestination: {
 *         pinpointDestination: {
 *             applicationArn: aws_pinpoint_app.example.arn,
 *         },
 *         enabled: true,
 *         matchingEventTypes: ["SEND"],
 *     },
 * });
 * ```
 * ### SNS Destination
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleConfigurationSet = new aws.sesv2.ConfigurationSet("exampleConfigurationSet", {configurationSetName: "example"});
 * const exampleConfigurationSetEventDestination = new aws.sesv2.ConfigurationSetEventDestination("exampleConfigurationSetEventDestination", {
 *     configurationSetName: exampleConfigurationSet.configurationSetName,
 *     eventDestinationName: "example",
 *     eventDestination: {
 *         snsDestination: {
 *             topicArn: aws_sns_topic.example.arn,
 *         },
 *         enabled: true,
 *         matchingEventTypes: ["SEND"],
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * SESv2 (Simple Email V2) Configuration Set Event Destination can be imported using the `id` (`configuration_set_name|event_destination_name`), e.g.,
 *
 * ```sh
 *  $ pulumi import aws:sesv2/configurationSetEventDestination:ConfigurationSetEventDestination example example_configuration_set|example_event_destination
 * ```
 */
export class ConfigurationSetEventDestination extends pulumi.CustomResource {
    /**
     * Get an existing ConfigurationSetEventDestination resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConfigurationSetEventDestinationState, opts?: pulumi.CustomResourceOptions): ConfigurationSetEventDestination {
        return new ConfigurationSetEventDestination(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:sesv2/configurationSetEventDestination:ConfigurationSetEventDestination';

    /**
     * Returns true if the given object is an instance of ConfigurationSetEventDestination.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ConfigurationSetEventDestination {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ConfigurationSetEventDestination.__pulumiType;
    }

    /**
     * The name of the configuration set.
     */
    public readonly configurationSetName!: pulumi.Output<string>;
    /**
     * A name that identifies the event destination within the configuration set.
     */
    public readonly eventDestination!: pulumi.Output<outputs.sesv2.ConfigurationSetEventDestinationEventDestination>;
    /**
     * An object that defines the event destination. See eventDestination below.
     */
    public readonly eventDestinationName!: pulumi.Output<string>;

    /**
     * Create a ConfigurationSetEventDestination resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConfigurationSetEventDestinationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ConfigurationSetEventDestinationArgs | ConfigurationSetEventDestinationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ConfigurationSetEventDestinationState | undefined;
            resourceInputs["configurationSetName"] = state ? state.configurationSetName : undefined;
            resourceInputs["eventDestination"] = state ? state.eventDestination : undefined;
            resourceInputs["eventDestinationName"] = state ? state.eventDestinationName : undefined;
        } else {
            const args = argsOrState as ConfigurationSetEventDestinationArgs | undefined;
            if ((!args || args.configurationSetName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configurationSetName'");
            }
            if ((!args || args.eventDestination === undefined) && !opts.urn) {
                throw new Error("Missing required property 'eventDestination'");
            }
            if ((!args || args.eventDestinationName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'eventDestinationName'");
            }
            resourceInputs["configurationSetName"] = args ? args.configurationSetName : undefined;
            resourceInputs["eventDestination"] = args ? args.eventDestination : undefined;
            resourceInputs["eventDestinationName"] = args ? args.eventDestinationName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ConfigurationSetEventDestination.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ConfigurationSetEventDestination resources.
 */
export interface ConfigurationSetEventDestinationState {
    /**
     * The name of the configuration set.
     */
    configurationSetName?: pulumi.Input<string>;
    /**
     * A name that identifies the event destination within the configuration set.
     */
    eventDestination?: pulumi.Input<inputs.sesv2.ConfigurationSetEventDestinationEventDestination>;
    /**
     * An object that defines the event destination. See eventDestination below.
     */
    eventDestinationName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ConfigurationSetEventDestination resource.
 */
export interface ConfigurationSetEventDestinationArgs {
    /**
     * The name of the configuration set.
     */
    configurationSetName: pulumi.Input<string>;
    /**
     * A name that identifies the event destination within the configuration set.
     */
    eventDestination: pulumi.Input<inputs.sesv2.ConfigurationSetEventDestinationEventDestination>;
    /**
     * An object that defines the event destination. See eventDestination below.
     */
    eventDestinationName: pulumi.Input<string>;
}
