// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Manages an App Runner VPC Ingress Connection.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.apprunner.VpcIngressConnection("example", {
 *     serviceArn: aws_apprunner_service.example.arn,
 *     ingressVpcConfiguration: {
 *         vpcId: aws_default_vpc["default"].id,
 *         vpcEndpointId: aws_vpc_endpoint.apprunner.id,
 *     },
 *     tags: {
 *         foo: "bar",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import App Runner VPC Ingress Connection using the `arn`. For example:
 *
 * ```sh
 *  $ pulumi import aws:apprunner/vpcIngressConnection:VpcIngressConnection example "arn:aws:apprunner:us-west-2:837424938642:vpcingressconnection/example/b379f86381d74825832c2e82080342fa"
 * ```
 */
export class VpcIngressConnection extends pulumi.CustomResource {
    /**
     * Get an existing VpcIngressConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpcIngressConnectionState, opts?: pulumi.CustomResourceOptions): VpcIngressConnection {
        return new VpcIngressConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:apprunner/vpcIngressConnection:VpcIngressConnection';

    /**
     * Returns true if the given object is an instance of VpcIngressConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpcIngressConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpcIngressConnection.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the VPC Ingress Connection.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The domain name associated with the VPC Ingress Connection resource.
     */
    public /*out*/ readonly domainName!: pulumi.Output<string>;
    /**
     * Specifications for the customer’s Amazon VPC and the related AWS PrivateLink VPC endpoint that are used to create the VPC Ingress Connection resource. See Ingress VPC Configuration below for more details.
     */
    public readonly ingressVpcConfiguration!: pulumi.Output<outputs.apprunner.VpcIngressConnectionIngressVpcConfiguration>;
    /**
     * A name for the VPC Ingress Connection resource. It must be unique across all the active VPC Ingress Connections in your AWS account in the AWS Region.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) for this App Runner service that is used to create the VPC Ingress Connection resource.
     */
    public readonly serviceArn!: pulumi.Output<string>;
    /**
     * The current status of the VPC Ingress Connection.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a VpcIngressConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpcIngressConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpcIngressConnectionArgs | VpcIngressConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpcIngressConnectionState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["domainName"] = state ? state.domainName : undefined;
            resourceInputs["ingressVpcConfiguration"] = state ? state.ingressVpcConfiguration : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["serviceArn"] = state ? state.serviceArn : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
        } else {
            const args = argsOrState as VpcIngressConnectionArgs | undefined;
            if ((!args || args.ingressVpcConfiguration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ingressVpcConfiguration'");
            }
            if ((!args || args.serviceArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceArn'");
            }
            resourceInputs["ingressVpcConfiguration"] = args ? args.ingressVpcConfiguration : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["serviceArn"] = args ? args.serviceArn : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["domainName"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VpcIngressConnection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VpcIngressConnection resources.
 */
export interface VpcIngressConnectionState {
    /**
     * The Amazon Resource Name (ARN) of the VPC Ingress Connection.
     */
    arn?: pulumi.Input<string>;
    /**
     * The domain name associated with the VPC Ingress Connection resource.
     */
    domainName?: pulumi.Input<string>;
    /**
     * Specifications for the customer’s Amazon VPC and the related AWS PrivateLink VPC endpoint that are used to create the VPC Ingress Connection resource. See Ingress VPC Configuration below for more details.
     */
    ingressVpcConfiguration?: pulumi.Input<inputs.apprunner.VpcIngressConnectionIngressVpcConfiguration>;
    /**
     * A name for the VPC Ingress Connection resource. It must be unique across all the active VPC Ingress Connections in your AWS account in the AWS Region.
     */
    name?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) for this App Runner service that is used to create the VPC Ingress Connection resource.
     */
    serviceArn?: pulumi.Input<string>;
    /**
     * The current status of the VPC Ingress Connection.
     */
    status?: pulumi.Input<string>;
    /**
     * Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a VpcIngressConnection resource.
 */
export interface VpcIngressConnectionArgs {
    /**
     * Specifications for the customer’s Amazon VPC and the related AWS PrivateLink VPC endpoint that are used to create the VPC Ingress Connection resource. See Ingress VPC Configuration below for more details.
     */
    ingressVpcConfiguration: pulumi.Input<inputs.apprunner.VpcIngressConnectionIngressVpcConfiguration>;
    /**
     * A name for the VPC Ingress Connection resource. It must be unique across all the active VPC Ingress Connections in your AWS account in the AWS Region.
     */
    name?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) for this App Runner service that is used to create the VPC Ingress Connection resource.
     */
    serviceArn: pulumi.Input<string>;
    /**
     * Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
