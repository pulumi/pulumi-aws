// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./cluster";
export * from "./getCluster";
export * from "./getReplicationGroup";
export * from "./getUser";
export * from "./globalReplicationGroup";
export * from "./parameterGroup";
export * from "./replicationGroup";
export * from "./securityGroup";
export * from "./subnetGroup";
export * from "./user";
export * from "./userGroup";

// Import resources to register:
import { Cluster } from "./cluster";
import { GlobalReplicationGroup } from "./globalReplicationGroup";
import { ParameterGroup } from "./parameterGroup";
import { ReplicationGroup } from "./replicationGroup";
import { SecurityGroup } from "./securityGroup";
import { SubnetGroup } from "./subnetGroup";
import { User } from "./user";
import { UserGroup } from "./userGroup";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws:elasticache/cluster:Cluster":
                return new Cluster(name, <any>undefined, { urn })
            case "aws:elasticache/globalReplicationGroup:GlobalReplicationGroup":
                return new GlobalReplicationGroup(name, <any>undefined, { urn })
            case "aws:elasticache/parameterGroup:ParameterGroup":
                return new ParameterGroup(name, <any>undefined, { urn })
            case "aws:elasticache/replicationGroup:ReplicationGroup":
                return new ReplicationGroup(name, <any>undefined, { urn })
            case "aws:elasticache/securityGroup:SecurityGroup":
                return new SecurityGroup(name, <any>undefined, { urn })
            case "aws:elasticache/subnetGroup:SubnetGroup":
                return new SubnetGroup(name, <any>undefined, { urn })
            case "aws:elasticache/user:User":
                return new User(name, <any>undefined, { urn })
            case "aws:elasticache/userGroup:UserGroup":
                return new UserGroup(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "elasticache/cluster", _module)
pulumi.runtime.registerResourceModule("aws", "elasticache/globalReplicationGroup", _module)
pulumi.runtime.registerResourceModule("aws", "elasticache/parameterGroup", _module)
pulumi.runtime.registerResourceModule("aws", "elasticache/replicationGroup", _module)
pulumi.runtime.registerResourceModule("aws", "elasticache/securityGroup", _module)
pulumi.runtime.registerResourceModule("aws", "elasticache/subnetGroup", _module)
pulumi.runtime.registerResourceModule("aws", "elasticache/user", _module)
pulumi.runtime.registerResourceModule("aws", "elasticache/userGroup", _module)
