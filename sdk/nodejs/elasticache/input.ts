// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./input";
import * as outputs from "./output";

export interface ClusterCacheNode {
    address?: pulumi.Input<string>;
    /**
     * Availability Zone for the cache cluster. If you want to create cache nodes in multi-az, use `preferredAvailabilityZones` instead. Default: System chosen Availability Zone. Changing this value will re-create the resource.
     */
    availabilityZone?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    outpostArn?: pulumi.Input<string>;
    /**
     * The port number on which each of the cache nodes will accept connections. For Memcached the default is 11211, and for Redis the default port is 6379. Cannot be provided with `replicationGroupId`. Changing this value will re-create the resource.
     */
    port?: pulumi.Input<number>;
}
export interface ClusterLogDeliveryConfiguration {
    /**
     * Name of either the CloudWatch Logs LogGroup or Kinesis Data Firehose resource.
     */
    destination: pulumi.Input<string>;
    /**
     * For CloudWatch Logs use `cloudwatch-logs` or for Kinesis Data Firehose use `kinesis-firehose`.
     */
    destinationType: pulumi.Input<string>;
    /**
     * Valid values are `json` or `text`
     */
    logFormat: pulumi.Input<string>;
    /**
     * Valid values are  `slow-log` or `engine-log`. Max 1 of each.
     */
    logType: pulumi.Input<string>;
}
export interface GlobalReplicationGroupGlobalNodeGroup {
    /**
     * The ID of the global node group.
     */
    globalNodeGroupId?: pulumi.Input<string>;
    /**
     * The keyspace for this node group.
     */
    slots?: pulumi.Input<string>;
}
export interface ParameterGroupParameter {
    /**
     * The name of the ElastiCache parameter.
     */
    name: pulumi.Input<string>;
    /**
     * The value of the ElastiCache parameter.
     */
    value: pulumi.Input<string>;
}
export interface ReplicationGroupLogDeliveryConfiguration {
    /**
     * Name of either the CloudWatch Logs LogGroup or Kinesis Data Firehose resource.
     */
    destination: pulumi.Input<string>;
    /**
     * For CloudWatch Logs use `cloudwatch-logs` or for Kinesis Data Firehose use `kinesis-firehose`.
     */
    destinationType: pulumi.Input<string>;
    /**
     * Valid values are `json` or `text`
     */
    logFormat: pulumi.Input<string>;
    /**
     * Valid values are  `slow-log` or `engine-log`. Max 1 of each.
     */
    logType: pulumi.Input<string>;
}
export interface ServerlessCacheCacheUsageLimits {
    dataStorage?: pulumi.Input<inputs.ServerlessCacheCacheUsageLimitsDataStorage>;
    ecpuPerSeconds?: pulumi.Input<pulumi.Input<inputs.ServerlessCacheCacheUsageLimitsEcpuPerSecond>[]>;
}
export interface ServerlessCacheCacheUsageLimitsDataStorage {
    maximum?: pulumi.Input<number>;
    minimum?: pulumi.Input<number>;
    unit: pulumi.Input<string>;
}
export interface ServerlessCacheCacheUsageLimitsEcpuPerSecond {
    maximum?: pulumi.Input<number>;
    minimum?: pulumi.Input<number>;
}
export interface ServerlessCacheEndpoint {
    /**
     * The DNS hostname of the cache node.
     */
    address: pulumi.Input<string>;
    /**
     * The port number that the cache engine is listening on. Set as integer.
     */
    port: pulumi.Input<number>;
}
export interface ServerlessCacheReaderEndpoint {
    /**
     * The DNS hostname of the cache node.
     */
    address: pulumi.Input<string>;
    /**
     * The port number that the cache engine is listening on. Set as integer.
     */
    port: pulumi.Input<number>;
}
export interface ServerlessCacheTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: pulumi.Input<string>;
}
export interface UserAuthenticationMode {
    passwordCount?: pulumi.Input<number>;
    /**
     * Specifies the passwords to use for authentication if `type` is set to `password`.
     */
    passwords?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the authentication type. Possible options are: `password`, `no-password-required` or `iam`.
     */
    type: pulumi.Input<string>;
}
export interface GetUserAuthenticationMode {
    passwordCount?: number;
    type?: string;
}
export interface GetUserAuthenticationModeArgs {
    passwordCount?: pulumi.Input<number>;
    type?: pulumi.Input<string>;
}
