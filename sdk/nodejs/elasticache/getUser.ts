// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to get information about an Elasticache User.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const bar = pulumi.output(aws.elasticache.getUser({
 *     userId: "example",
 * }));
 * ```
 */
export function getUser(args: GetUserArgs, opts?: pulumi.InvokeOptions): Promise<GetUserResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws:elasticache/getUser:getUser", {
        "accessString": args.accessString,
        "engine": args.engine,
        "noPasswordRequired": args.noPasswordRequired,
        "passwords": args.passwords,
        "userId": args.userId,
        "userName": args.userName,
    }, opts);
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserArgs {
    /**
     * A string for what access a user possesses within the associated ElastiCache replication groups or clusters.
     */
    accessString?: string;
    engine?: string;
    noPasswordRequired?: boolean;
    passwords?: string[];
    /**
     * The identifier for the user.
     */
    userId: string;
    /**
     * The user name of the user.
     */
    userName?: string;
}

/**
 * A collection of values returned by getUser.
 */
export interface GetUserResult {
    /**
     * A string for what access a user possesses within the associated ElastiCache replication groups or clusters.
     */
    readonly accessString?: string;
    readonly engine?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly noPasswordRequired?: boolean;
    readonly passwords?: string[];
    /**
     * The identifier for the user.
     */
    readonly userId: string;
    /**
     * The user name of the user.
     */
    readonly userName?: string;
}

export function getUserOutput(args: GetUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserResult> {
    return pulumi.output(args).apply(a => getUser(a, opts))
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserOutputArgs {
    /**
     * A string for what access a user possesses within the associated ElastiCache replication groups or clusters.
     */
    accessString?: pulumi.Input<string>;
    engine?: pulumi.Input<string>;
    noPasswordRequired?: pulumi.Input<boolean>;
    passwords?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The identifier for the user.
     */
    userId: pulumi.Input<string>;
    /**
     * The user name of the user.
     */
    userName?: pulumi.Input<string>;
}
