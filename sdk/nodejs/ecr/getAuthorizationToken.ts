// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getAuthorizationToken(args?: GetAuthorizationTokenArgs, opts?: pulumi.InvokeOptions): Promise<GetAuthorizationTokenResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:ecr/getAuthorizationToken:getAuthorizationToken", {
        "registryId": args.registryId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAuthorizationToken.
 */
export interface GetAuthorizationTokenArgs {
    registryId?: string;
}

/**
 * A collection of values returned by getAuthorizationToken.
 */
export interface GetAuthorizationTokenResult {
    readonly authorizationToken: string;
    readonly expiresAt: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly password: string;
    readonly proxyEndpoint: string;
    readonly registryId?: string;
    readonly userName: string;
}
export function getAuthorizationTokenOutput(args?: GetAuthorizationTokenOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAuthorizationTokenResult> {
    return pulumi.output(args).apply((a: any) => getAuthorizationToken(a, opts))
}

/**
 * A collection of arguments for invoking getAuthorizationToken.
 */
export interface GetAuthorizationTokenOutputArgs {
    registryId?: pulumi.Input<string>;
}
