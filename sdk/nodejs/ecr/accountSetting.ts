// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage AWS ECR Basic Scan Type
 *
 * ## Example Usage
 *
 * ### Configuring Basic Scanning
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const basicScanTypeVersion = new aws.ecr.AccountSetting("basic_scan_type_version", {
 *     name: "BASIC_SCAN_TYPE_VERSION",
 *     value: "AWS_NATIVE",
 * });
 * ```
 *
 * ### Configuring Registry Policy Scope
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const registryPolicyScope = new aws.ecr.AccountSetting("registry_policy_scope", {
 *     name: "REGISTRY_POLICY_SCOPE",
 *     value: "V2",
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import EMR Security Configurations using the account setting name. For example:
 *
 * ```sh
 * $ pulumi import aws:ecr/accountSetting:AccountSetting foo BASIC_SCAN_TYPE_VERSION
 * ```
 */
export class AccountSetting extends pulumi.CustomResource {
    /**
     * Get an existing AccountSetting resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccountSettingState, opts?: pulumi.CustomResourceOptions): AccountSetting {
        return new AccountSetting(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:ecr/accountSetting:AccountSetting';

    /**
     * Returns true if the given object is an instance of AccountSetting.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccountSetting {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccountSetting.__pulumiType;
    }

    /**
     * Name of the account setting. One of: `BASIC_SCAN_TYPE_VERSION`, `REGISTRY_POLICY_SCOPE`.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Setting value that is specified. Valid values are:
     * * If `name` is specified as `BASIC_SCAN_TYPE_VERSION`, one of: `AWS_NATIVE`, `CLAIR`.
     * * If `name` is specified as `REGISTRY_POLICY_SCOPE`, one of: `V1`, `V2`.
     */
    public readonly value!: pulumi.Output<string>;

    /**
     * Create a AccountSetting resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountSettingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccountSettingArgs | AccountSettingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccountSettingState | undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["value"] = state ? state.value : undefined;
        } else {
            const args = argsOrState as AccountSettingArgs | undefined;
            if ((!args || args.value === undefined) && !opts.urn) {
                throw new Error("Missing required property 'value'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["value"] = args ? args.value : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AccountSetting.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AccountSetting resources.
 */
export interface AccountSettingState {
    /**
     * Name of the account setting. One of: `BASIC_SCAN_TYPE_VERSION`, `REGISTRY_POLICY_SCOPE`.
     */
    name?: pulumi.Input<string>;
    /**
     * Setting value that is specified. Valid values are:
     * * If `name` is specified as `BASIC_SCAN_TYPE_VERSION`, one of: `AWS_NATIVE`, `CLAIR`.
     * * If `name` is specified as `REGISTRY_POLICY_SCOPE`, one of: `V1`, `V2`.
     */
    value?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AccountSetting resource.
 */
export interface AccountSettingArgs {
    /**
     * Name of the account setting. One of: `BASIC_SCAN_TYPE_VERSION`, `REGISTRY_POLICY_SCOPE`.
     */
    name?: pulumi.Input<string>;
    /**
     * Setting value that is specified. Valid values are:
     * * If `name` is specified as `BASIC_SCAN_TYPE_VERSION`, one of: `AWS_NATIVE`, `CLAIR`.
     * * If `name` is specified as `REGISTRY_POLICY_SCOPE`, one of: `V1`, `V2`.
     */
    value: pulumi.Input<string>;
}
