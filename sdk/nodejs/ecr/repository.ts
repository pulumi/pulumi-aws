// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides an EC2 Container Registry Repository.
 * 
 * ~> **NOTE on ECR Availability**: The EC2 Container Registry is not yet rolled out
 * in all regions - available regions are listed
 * [the AWS Docs](https://docs.aws.amazon.com/general/latest/gr/rande.html#ecr_region).
 */
export class Repository extends pulumi.CustomResource {
    /**
     * Get an existing Repository resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RepositoryState, opts?: pulumi.CustomResourceOptions): Repository {
        return new Repository(name, <any>state, { ...opts, id: id });
    }

    /**
     * Full ARN of the repository.
     */
    public /*out*/ readonly arn: pulumi.Output<string>;
    /**
     * Name of the repository.
     */
    public readonly name: pulumi.Output<string>;
    /**
     * The registry ID where the repository was created.
     */
    public /*out*/ readonly registryId: pulumi.Output<string>;
    /**
     * The URL of the repository (in the form `aws_account_id.dkr.ecr.region.amazonaws.com/repositoryName`
     */
    public /*out*/ readonly repositoryUrl: pulumi.Output<string>;

    /**
     * Create a Repository resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RepositoryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RepositoryArgs | RepositoryState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: RepositoryState = argsOrState as RepositoryState | undefined;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["registryId"] = state ? state.registryId : undefined;
            inputs["repositoryUrl"] = state ? state.repositoryUrl : undefined;
        } else {
            const args = argsOrState as RepositoryArgs | undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["arn"] = undefined /*out*/;
            inputs["registryId"] = undefined /*out*/;
            inputs["repositoryUrl"] = undefined /*out*/;
        }
        super("aws:ecr/repository:Repository", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Repository resources.
 */
export interface RepositoryState {
    /**
     * Full ARN of the repository.
     */
    readonly arn?: pulumi.Input<string>;
    /**
     * Name of the repository.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The registry ID where the repository was created.
     */
    readonly registryId?: pulumi.Input<string>;
    /**
     * The URL of the repository (in the form `aws_account_id.dkr.ecr.region.amazonaws.com/repositoryName`
     */
    readonly repositoryUrl?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Repository resource.
 */
export interface RepositoryArgs {
    /**
     * Name of the repository.
     */
    readonly name?: pulumi.Input<string>;
}
