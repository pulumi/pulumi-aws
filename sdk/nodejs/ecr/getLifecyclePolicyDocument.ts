// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Generates an ECR lifecycle policy document in JSON format. Can be used with resources such as the `aws.ecr.LifecyclePolicy` resource.
 *
 * > For more information about building AWS ECR lifecycle policy documents, see the [AWS ECR Lifecycle Policy Document Guide](https://docs.aws.amazon.com/AmazonECR/latest/userguide/LifecyclePolicies.html).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.ecr.getLifecyclePolicyDocument({
 *     rules: [{
 *         priority: 1,
 *         description: "This is a test.",
 *         selection: {
 *             tagStatus: "tagged",
 *             tagPrefixLists: ["prod"],
 *             countType: "imageCountMoreThan",
 *             countNumber: 100,
 *         },
 *     }],
 * });
 * const exampleLifecyclePolicy = new aws.ecr.LifecyclePolicy("example", {
 *     repository: exampleAwsEcrRepository.name,
 *     policy: example.then(example => example.json),
 * });
 * ```
 */
export function getLifecyclePolicyDocument(args?: GetLifecyclePolicyDocumentArgs, opts?: pulumi.InvokeOptions): Promise<GetLifecyclePolicyDocumentResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:ecr/getLifecyclePolicyDocument:getLifecyclePolicyDocument", {
        "rules": args.rules,
    }, opts);
}

/**
 * A collection of arguments for invoking getLifecyclePolicyDocument.
 */
export interface GetLifecyclePolicyDocumentArgs {
    rules?: inputs.ecr.GetLifecyclePolicyDocumentRule[];
}

/**
 * A collection of values returned by getLifecyclePolicyDocument.
 */
export interface GetLifecyclePolicyDocumentResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The above arguments serialized as a standard JSON policy document.
     */
    readonly json: string;
    readonly rules?: outputs.ecr.GetLifecyclePolicyDocumentRule[];
}
/**
 * Generates an ECR lifecycle policy document in JSON format. Can be used with resources such as the `aws.ecr.LifecyclePolicy` resource.
 *
 * > For more information about building AWS ECR lifecycle policy documents, see the [AWS ECR Lifecycle Policy Document Guide](https://docs.aws.amazon.com/AmazonECR/latest/userguide/LifecyclePolicies.html).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.ecr.getLifecyclePolicyDocument({
 *     rules: [{
 *         priority: 1,
 *         description: "This is a test.",
 *         selection: {
 *             tagStatus: "tagged",
 *             tagPrefixLists: ["prod"],
 *             countType: "imageCountMoreThan",
 *             countNumber: 100,
 *         },
 *     }],
 * });
 * const exampleLifecyclePolicy = new aws.ecr.LifecyclePolicy("example", {
 *     repository: exampleAwsEcrRepository.name,
 *     policy: example.then(example => example.json),
 * });
 * ```
 */
export function getLifecyclePolicyDocumentOutput(args?: GetLifecyclePolicyDocumentOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetLifecyclePolicyDocumentResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws:ecr/getLifecyclePolicyDocument:getLifecyclePolicyDocument", {
        "rules": args.rules,
    }, opts);
}

/**
 * A collection of arguments for invoking getLifecyclePolicyDocument.
 */
export interface GetLifecyclePolicyDocumentOutputArgs {
    rules?: pulumi.Input<pulumi.Input<inputs.ecr.GetLifecyclePolicyDocumentRuleArgs>[]>;
}
