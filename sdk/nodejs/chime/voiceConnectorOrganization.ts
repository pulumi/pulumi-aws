// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export class VoiceConnectorOrganization extends pulumi.CustomResource {
    /**
     * Get an existing VoiceConnectorOrganization resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VoiceConnectorOrganizationState, opts?: pulumi.CustomResourceOptions): VoiceConnectorOrganization {
        return new VoiceConnectorOrganization(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:chime/voiceConnectorOrganization:VoiceConnectorOrganization';

    /**
     * Returns true if the given object is an instance of VoiceConnectorOrganization.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VoiceConnectorOrganization {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VoiceConnectorOrganization.__pulumiType;
    }

    public readonly disabled!: pulumi.Output<boolean | undefined>;
    public readonly routes!: pulumi.Output<outputs.chime.VoiceConnectorOrganizationRoute[]>;
    public readonly voiceConnectorId!: pulumi.Output<string>;

    /**
     * Create a VoiceConnectorOrganization resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VoiceConnectorOrganizationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VoiceConnectorOrganizationArgs | VoiceConnectorOrganizationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VoiceConnectorOrganizationState | undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["routes"] = state ? state.routes : undefined;
            resourceInputs["voiceConnectorId"] = state ? state.voiceConnectorId : undefined;
        } else {
            const args = argsOrState as VoiceConnectorOrganizationArgs | undefined;
            if ((!args || args.routes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'routes'");
            }
            if ((!args || args.voiceConnectorId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'voiceConnectorId'");
            }
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["routes"] = args ? args.routes : undefined;
            resourceInputs["voiceConnectorId"] = args ? args.voiceConnectorId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VoiceConnectorOrganization.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VoiceConnectorOrganization resources.
 */
export interface VoiceConnectorOrganizationState {
    disabled?: pulumi.Input<boolean>;
    routes?: pulumi.Input<pulumi.Input<inputs.chime.VoiceConnectorOrganizationRoute>[]>;
    voiceConnectorId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VoiceConnectorOrganization resource.
 */
export interface VoiceConnectorOrganizationArgs {
    disabled?: pulumi.Input<boolean>;
    routes: pulumi.Input<pulumi.Input<inputs.chime.VoiceConnectorOrganizationRoute>[]>;
    voiceConnectorId: pulumi.Input<string>;
}
