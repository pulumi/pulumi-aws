// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class AmiLaunchPermission extends pulumi.CustomResource {
    /**
     * Get an existing AmiLaunchPermission resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AmiLaunchPermissionState, opts?: pulumi.CustomResourceOptions): AmiLaunchPermission {
        return new AmiLaunchPermission(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:ec2/amiLaunchPermission:AmiLaunchPermission';

    /**
     * Returns true if the given object is an instance of AmiLaunchPermission.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AmiLaunchPermission {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AmiLaunchPermission.__pulumiType;
    }

    public readonly accountId!: pulumi.Output<string | undefined>;
    public readonly group!: pulumi.Output<string | undefined>;
    public readonly imageId!: pulumi.Output<string>;
    public readonly organizationArn!: pulumi.Output<string | undefined>;
    public readonly organizationalUnitArn!: pulumi.Output<string | undefined>;

    /**
     * Create a AmiLaunchPermission resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AmiLaunchPermissionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AmiLaunchPermissionArgs | AmiLaunchPermissionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AmiLaunchPermissionState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["group"] = state ? state.group : undefined;
            resourceInputs["imageId"] = state ? state.imageId : undefined;
            resourceInputs["organizationArn"] = state ? state.organizationArn : undefined;
            resourceInputs["organizationalUnitArn"] = state ? state.organizationalUnitArn : undefined;
        } else {
            const args = argsOrState as AmiLaunchPermissionArgs | undefined;
            if ((!args || args.imageId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'imageId'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["group"] = args ? args.group : undefined;
            resourceInputs["imageId"] = args ? args.imageId : undefined;
            resourceInputs["organizationArn"] = args ? args.organizationArn : undefined;
            resourceInputs["organizationalUnitArn"] = args ? args.organizationalUnitArn : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AmiLaunchPermission.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AmiLaunchPermission resources.
 */
export interface AmiLaunchPermissionState {
    accountId?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    imageId?: pulumi.Input<string>;
    organizationArn?: pulumi.Input<string>;
    organizationalUnitArn?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AmiLaunchPermission resource.
 */
export interface AmiLaunchPermissionArgs {
    accountId?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    imageId: pulumi.Input<string>;
    organizationArn?: pulumi.Input<string>;
    organizationalUnitArn?: pulumi.Input<string>;
}
