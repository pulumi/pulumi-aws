// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The AMI resource allows the creation and management of a completely-custom
 * *Amazon Machine Image* (AMI).
 *
 * If you just want to duplicate an existing AMI, possibly copying it to another
 * region, it's better to use `aws.ec2.AmiCopy` instead.
 *
 * If you just want to share an existing AMI with another AWS account,
 * it's better to use `aws.ec2.AmiLaunchPermission` instead.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * // Create an AMI that will start a machine whose root device is backed by
 * // an EBS volume populated from a snapshot. We assume that such a snapshot
 * // already exists with the id "snap-xxxxxxxx".
 * const example = new aws.ec2.Ami("example", {
 *     name: "example",
 *     virtualizationType: "hvm",
 *     rootDeviceName: "/dev/xvda",
 *     imdsSupport: "v2.0",
 *     ebsBlockDevices: [{
 *         deviceName: "/dev/xvda",
 *         snapshotId: "snap-xxxxxxxx",
 *         volumeSize: 8,
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import `aws_ami` using the ID of the AMI. For example:
 *
 * ```sh
 * $ pulumi import aws:ec2/ami:Ami example ami-12345678
 * ```
 */
export class Ami extends pulumi.CustomResource {
    /**
     * Get an existing Ami resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AmiState, opts?: pulumi.CustomResourceOptions): Ami {
        return new Ami(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:ec2/ami:Ami';

    /**
     * Returns true if the given object is an instance of Ami.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Ami {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ami.__pulumiType;
    }

    /**
     * Machine architecture for created instances. Defaults to `x8664`.
     */
    declare public readonly architecture: pulumi.Output<string | undefined>;
    /**
     * ARN of the AMI.
     */
    declare public /*out*/ readonly arn: pulumi.Output<string>;
    /**
     * Boot mode of the AMI. For more information, see [Boot modes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html) in the Amazon Elastic Compute Cloud User Guide.
     */
    declare public readonly bootMode: pulumi.Output<string | undefined>;
    /**
     * Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
     */
    declare public readonly deprecationTime: pulumi.Output<string | undefined>;
    /**
     * Longer, human-readable description for the AMI.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Nested block describing an EBS block device that should be
     * attached to created instances. The structure of this block is described below.
     */
    declare public readonly ebsBlockDevices: pulumi.Output<outputs.ec2.AmiEbsBlockDevice[]>;
    /**
     * Whether enhanced networking with ENA is enabled. Defaults to `false`.
     */
    declare public readonly enaSupport: pulumi.Output<boolean | undefined>;
    /**
     * Nested block describing an ephemeral block device that
     * should be attached to created instances. The structure of this block is described below.
     */
    declare public readonly ephemeralBlockDevices: pulumi.Output<outputs.ec2.AmiEphemeralBlockDevice[]>;
    /**
     * Hypervisor type of the image.
     */
    declare public /*out*/ readonly hypervisor: pulumi.Output<string>;
    declare public readonly imageLocation: pulumi.Output<string>;
    /**
     * AWS account alias (for example, amazon, self) or the AWS account ID of the AMI owner.
     */
    declare public /*out*/ readonly imageOwnerAlias: pulumi.Output<string>;
    /**
     * Type of image.
     */
    declare public /*out*/ readonly imageType: pulumi.Output<string>;
    /**
     * If EC2 instances started from this image should require the use of the Instance Metadata Service V2 (IMDSv2), set this argument to `v2.0`. For more information, see [Configure instance metadata options for new instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-IMDS-new-instances.html#configure-IMDS-new-instances-ami-configuration).
     */
    declare public readonly imdsSupport: pulumi.Output<string | undefined>;
    declare public readonly kernelId: pulumi.Output<string | undefined>;
    /**
     * Date and time, in ISO 8601 date-time format , when the AMI was last used to launch an EC2 instance. When the AMI is used to launch an instance, there is a 24-hour delay before that usage is reported. For more information, see the following [AWS document](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-last-launched-time.html).
     */
    declare public /*out*/ readonly lastLaunchedTime: pulumi.Output<string>;
    declare public /*out*/ readonly manageEbsSnapshots: pulumi.Output<boolean>;
    /**
     * Region-unique name for the AMI.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * AWS account ID of the image owner.
     */
    declare public /*out*/ readonly ownerId: pulumi.Output<string>;
    /**
     * This value is set to windows for Windows AMIs; otherwise, it is blank.
     */
    declare public /*out*/ readonly platform: pulumi.Output<string>;
    /**
     * Platform details associated with the billing code of the AMI.
     */
    declare public /*out*/ readonly platformDetails: pulumi.Output<string>;
    /**
     * Whether the image has public launch permissions.
     */
    declare public /*out*/ readonly public: pulumi.Output<boolean>;
    declare public readonly ramdiskId: pulumi.Output<string | undefined>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * Name of the root device (for example, `/dev/sda1`, or `/dev/xvda`).
     */
    declare public readonly rootDeviceName: pulumi.Output<string | undefined>;
    /**
     * Snapshot ID for the root volume (for EBS-backed AMIs)
     */
    declare public /*out*/ readonly rootSnapshotId: pulumi.Output<string>;
    declare public readonly sriovNetSupport: pulumi.Output<string | undefined>;
    /**
     * Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    declare public /*out*/ readonly tagsAll: pulumi.Output<{[key: string]: string}>;
    /**
     * If the image is configured for NitroTPM support, the value is `v2.0`. For more information, see [NitroTPM](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html) in the Amazon Elastic Compute Cloud User Guide.
     */
    declare public readonly tpmSupport: pulumi.Output<string | undefined>;
    /**
     * Base64 representation of the non-volatile UEFI variable store.
     */
    declare public readonly uefiData: pulumi.Output<string | undefined>;
    /**
     * Operation of the Amazon EC2 instance and the billing code that is associated with the AMI.
     */
    declare public /*out*/ readonly usageOperation: pulumi.Output<string>;
    /**
     * Keyword to choose what virtualization mode created instances
     * will use. Can be either "paravirtual" (the default) or "hvm". The choice of virtualization type
     * changes the set of further arguments that are required, as described below.
     */
    declare public readonly virtualizationType: pulumi.Output<string | undefined>;

    /**
     * Create a Ami resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AmiArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AmiArgs | AmiState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AmiState | undefined;
            resourceInputs["architecture"] = state?.architecture;
            resourceInputs["arn"] = state?.arn;
            resourceInputs["bootMode"] = state?.bootMode;
            resourceInputs["deprecationTime"] = state?.deprecationTime;
            resourceInputs["description"] = state?.description;
            resourceInputs["ebsBlockDevices"] = state?.ebsBlockDevices;
            resourceInputs["enaSupport"] = state?.enaSupport;
            resourceInputs["ephemeralBlockDevices"] = state?.ephemeralBlockDevices;
            resourceInputs["hypervisor"] = state?.hypervisor;
            resourceInputs["imageLocation"] = state?.imageLocation;
            resourceInputs["imageOwnerAlias"] = state?.imageOwnerAlias;
            resourceInputs["imageType"] = state?.imageType;
            resourceInputs["imdsSupport"] = state?.imdsSupport;
            resourceInputs["kernelId"] = state?.kernelId;
            resourceInputs["lastLaunchedTime"] = state?.lastLaunchedTime;
            resourceInputs["manageEbsSnapshots"] = state?.manageEbsSnapshots;
            resourceInputs["name"] = state?.name;
            resourceInputs["ownerId"] = state?.ownerId;
            resourceInputs["platform"] = state?.platform;
            resourceInputs["platformDetails"] = state?.platformDetails;
            resourceInputs["public"] = state?.public;
            resourceInputs["ramdiskId"] = state?.ramdiskId;
            resourceInputs["region"] = state?.region;
            resourceInputs["rootDeviceName"] = state?.rootDeviceName;
            resourceInputs["rootSnapshotId"] = state?.rootSnapshotId;
            resourceInputs["sriovNetSupport"] = state?.sriovNetSupport;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tagsAll"] = state?.tagsAll;
            resourceInputs["tpmSupport"] = state?.tpmSupport;
            resourceInputs["uefiData"] = state?.uefiData;
            resourceInputs["usageOperation"] = state?.usageOperation;
            resourceInputs["virtualizationType"] = state?.virtualizationType;
        } else {
            const args = argsOrState as AmiArgs | undefined;
            resourceInputs["architecture"] = args?.architecture;
            resourceInputs["bootMode"] = args?.bootMode;
            resourceInputs["deprecationTime"] = args?.deprecationTime;
            resourceInputs["description"] = args?.description;
            resourceInputs["ebsBlockDevices"] = args?.ebsBlockDevices;
            resourceInputs["enaSupport"] = args?.enaSupport;
            resourceInputs["ephemeralBlockDevices"] = args?.ephemeralBlockDevices;
            resourceInputs["imageLocation"] = args?.imageLocation;
            resourceInputs["imdsSupport"] = args?.imdsSupport;
            resourceInputs["kernelId"] = args?.kernelId;
            resourceInputs["name"] = args?.name;
            resourceInputs["ramdiskId"] = args?.ramdiskId;
            resourceInputs["region"] = args?.region;
            resourceInputs["rootDeviceName"] = args?.rootDeviceName;
            resourceInputs["sriovNetSupport"] = args?.sriovNetSupport;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["tpmSupport"] = args?.tpmSupport;
            resourceInputs["uefiData"] = args?.uefiData;
            resourceInputs["virtualizationType"] = args?.virtualizationType;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["hypervisor"] = undefined /*out*/;
            resourceInputs["imageOwnerAlias"] = undefined /*out*/;
            resourceInputs["imageType"] = undefined /*out*/;
            resourceInputs["lastLaunchedTime"] = undefined /*out*/;
            resourceInputs["manageEbsSnapshots"] = undefined /*out*/;
            resourceInputs["ownerId"] = undefined /*out*/;
            resourceInputs["platform"] = undefined /*out*/;
            resourceInputs["platformDetails"] = undefined /*out*/;
            resourceInputs["public"] = undefined /*out*/;
            resourceInputs["rootSnapshotId"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
            resourceInputs["usageOperation"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Ami.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Ami resources.
 */
export interface AmiState {
    /**
     * Machine architecture for created instances. Defaults to `x8664`.
     */
    architecture?: pulumi.Input<string>;
    /**
     * ARN of the AMI.
     */
    arn?: pulumi.Input<string>;
    /**
     * Boot mode of the AMI. For more information, see [Boot modes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html) in the Amazon Elastic Compute Cloud User Guide.
     */
    bootMode?: pulumi.Input<string>;
    /**
     * Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
     */
    deprecationTime?: pulumi.Input<string>;
    /**
     * Longer, human-readable description for the AMI.
     */
    description?: pulumi.Input<string>;
    /**
     * Nested block describing an EBS block device that should be
     * attached to created instances. The structure of this block is described below.
     */
    ebsBlockDevices?: pulumi.Input<pulumi.Input<inputs.ec2.AmiEbsBlockDevice>[]>;
    /**
     * Whether enhanced networking with ENA is enabled. Defaults to `false`.
     */
    enaSupport?: pulumi.Input<boolean>;
    /**
     * Nested block describing an ephemeral block device that
     * should be attached to created instances. The structure of this block is described below.
     */
    ephemeralBlockDevices?: pulumi.Input<pulumi.Input<inputs.ec2.AmiEphemeralBlockDevice>[]>;
    /**
     * Hypervisor type of the image.
     */
    hypervisor?: pulumi.Input<string>;
    imageLocation?: pulumi.Input<string>;
    /**
     * AWS account alias (for example, amazon, self) or the AWS account ID of the AMI owner.
     */
    imageOwnerAlias?: pulumi.Input<string>;
    /**
     * Type of image.
     */
    imageType?: pulumi.Input<string>;
    /**
     * If EC2 instances started from this image should require the use of the Instance Metadata Service V2 (IMDSv2), set this argument to `v2.0`. For more information, see [Configure instance metadata options for new instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-IMDS-new-instances.html#configure-IMDS-new-instances-ami-configuration).
     */
    imdsSupport?: pulumi.Input<string>;
    kernelId?: pulumi.Input<string>;
    /**
     * Date and time, in ISO 8601 date-time format , when the AMI was last used to launch an EC2 instance. When the AMI is used to launch an instance, there is a 24-hour delay before that usage is reported. For more information, see the following [AWS document](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-last-launched-time.html).
     */
    lastLaunchedTime?: pulumi.Input<string>;
    manageEbsSnapshots?: pulumi.Input<boolean>;
    /**
     * Region-unique name for the AMI.
     */
    name?: pulumi.Input<string>;
    /**
     * AWS account ID of the image owner.
     */
    ownerId?: pulumi.Input<string>;
    /**
     * This value is set to windows for Windows AMIs; otherwise, it is blank.
     */
    platform?: pulumi.Input<string>;
    /**
     * Platform details associated with the billing code of the AMI.
     */
    platformDetails?: pulumi.Input<string>;
    /**
     * Whether the image has public launch permissions.
     */
    public?: pulumi.Input<boolean>;
    ramdiskId?: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * Name of the root device (for example, `/dev/sda1`, or `/dev/xvda`).
     */
    rootDeviceName?: pulumi.Input<string>;
    /**
     * Snapshot ID for the root volume (for EBS-backed AMIs)
     */
    rootSnapshotId?: pulumi.Input<string>;
    sriovNetSupport?: pulumi.Input<string>;
    /**
     * Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * If the image is configured for NitroTPM support, the value is `v2.0`. For more information, see [NitroTPM](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html) in the Amazon Elastic Compute Cloud User Guide.
     */
    tpmSupport?: pulumi.Input<string>;
    /**
     * Base64 representation of the non-volatile UEFI variable store.
     */
    uefiData?: pulumi.Input<string>;
    /**
     * Operation of the Amazon EC2 instance and the billing code that is associated with the AMI.
     */
    usageOperation?: pulumi.Input<string>;
    /**
     * Keyword to choose what virtualization mode created instances
     * will use. Can be either "paravirtual" (the default) or "hvm". The choice of virtualization type
     * changes the set of further arguments that are required, as described below.
     */
    virtualizationType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Ami resource.
 */
export interface AmiArgs {
    /**
     * Machine architecture for created instances. Defaults to `x8664`.
     */
    architecture?: pulumi.Input<string>;
    /**
     * Boot mode of the AMI. For more information, see [Boot modes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html) in the Amazon Elastic Compute Cloud User Guide.
     */
    bootMode?: pulumi.Input<string>;
    /**
     * Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
     */
    deprecationTime?: pulumi.Input<string>;
    /**
     * Longer, human-readable description for the AMI.
     */
    description?: pulumi.Input<string>;
    /**
     * Nested block describing an EBS block device that should be
     * attached to created instances. The structure of this block is described below.
     */
    ebsBlockDevices?: pulumi.Input<pulumi.Input<inputs.ec2.AmiEbsBlockDevice>[]>;
    /**
     * Whether enhanced networking with ENA is enabled. Defaults to `false`.
     */
    enaSupport?: pulumi.Input<boolean>;
    /**
     * Nested block describing an ephemeral block device that
     * should be attached to created instances. The structure of this block is described below.
     */
    ephemeralBlockDevices?: pulumi.Input<pulumi.Input<inputs.ec2.AmiEphemeralBlockDevice>[]>;
    imageLocation?: pulumi.Input<string>;
    /**
     * If EC2 instances started from this image should require the use of the Instance Metadata Service V2 (IMDSv2), set this argument to `v2.0`. For more information, see [Configure instance metadata options for new instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-IMDS-new-instances.html#configure-IMDS-new-instances-ami-configuration).
     */
    imdsSupport?: pulumi.Input<string>;
    kernelId?: pulumi.Input<string>;
    /**
     * Region-unique name for the AMI.
     */
    name?: pulumi.Input<string>;
    ramdiskId?: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * Name of the root device (for example, `/dev/sda1`, or `/dev/xvda`).
     */
    rootDeviceName?: pulumi.Input<string>;
    sriovNetSupport?: pulumi.Input<string>;
    /**
     * Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * If the image is configured for NitroTPM support, the value is `v2.0`. For more information, see [NitroTPM](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html) in the Amazon Elastic Compute Cloud User Guide.
     */
    tpmSupport?: pulumi.Input<string>;
    /**
     * Base64 representation of the non-volatile UEFI variable store.
     */
    uefiData?: pulumi.Input<string>;
    /**
     * Keyword to choose what virtualization mode created instances
     * will use. Can be either "paravirtual" (the default) or "hvm". The choice of virtualization type
     * changes the set of further arguments that are required, as described below.
     */
    virtualizationType?: pulumi.Input<string>;
}
