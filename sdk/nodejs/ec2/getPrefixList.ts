// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * `aws.ec2.getPrefixList` provides details about a specific AWS prefix list (PL)
 * in the current region.
 *
 * This can be used both to validate a prefix list given in a variable
 * and to obtain the CIDR blocks (IP address ranges) for the associated
 * AWS service. The latter may be useful e.g., for adding network ACL
 * rules.
 *
 * The aws.ec2.ManagedPrefixList data source is normally more appropriate to use given it can return customer-managed prefix list info, as well as additional attributes.
 */
export function getPrefixList(args?: GetPrefixListArgs, opts?: pulumi.InvokeOptions): Promise<GetPrefixListResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:ec2/getPrefixList:getPrefixList", {
        "filters": args.filters,
        "name": args.name,
        "prefixListId": args.prefixListId,
    }, opts);
}

/**
 * A collection of arguments for invoking getPrefixList.
 */
export interface GetPrefixListArgs {
    /**
     * Configuration block(s) for filtering. Detailed below.
     */
    filters?: inputs.ec2.GetPrefixListFilter[];
    /**
     * Name of the prefix list to select.
     */
    name?: string;
    /**
     * ID of the prefix list to select.
     */
    prefixListId?: string;
}

/**
 * A collection of values returned by getPrefixList.
 */
export interface GetPrefixListResult {
    /**
     * List of CIDR blocks for the AWS service associated with the prefix list.
     */
    readonly cidrBlocks: string[];
    readonly filters?: outputs.ec2.GetPrefixListFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Name of the selected prefix list.
     */
    readonly name: string;
    readonly prefixListId?: string;
}
/**
 * `aws.ec2.getPrefixList` provides details about a specific AWS prefix list (PL)
 * in the current region.
 *
 * This can be used both to validate a prefix list given in a variable
 * and to obtain the CIDR blocks (IP address ranges) for the associated
 * AWS service. The latter may be useful e.g., for adding network ACL
 * rules.
 *
 * The aws.ec2.ManagedPrefixList data source is normally more appropriate to use given it can return customer-managed prefix list info, as well as additional attributes.
 */
export function getPrefixListOutput(args?: GetPrefixListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPrefixListResult> {
    return pulumi.output(args).apply((a: any) => getPrefixList(a, opts))
}

/**
 * A collection of arguments for invoking getPrefixList.
 */
export interface GetPrefixListOutputArgs {
    /**
     * Configuration block(s) for filtering. Detailed below.
     */
    filters?: pulumi.Input<pulumi.Input<inputs.ec2.GetPrefixListFilterArgs>[]>;
    /**
     * Name of the prefix list to select.
     */
    name?: pulumi.Input<string>;
    /**
     * ID of the prefix list to select.
     */
    prefixListId?: pulumi.Input<string>;
}
