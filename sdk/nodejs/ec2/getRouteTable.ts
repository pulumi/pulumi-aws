// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";

/**
 * `aws_route_table` provides details about a specific Route Table.
 * 
 * This resource can prove useful when a module accepts a Subnet id as
 * an input variable and needs to, for example, add a route in
 * the Route Table.
 */
export function getRouteTable(args?: GetRouteTableArgs): Promise<GetRouteTableResult> {
    args = args || {};
    return pulumi.runtime.invoke("aws:ec2/getRouteTable:getRouteTable", {
        "filters": args.filters,
        "routeTableId": args.routeTableId,
        "subnetId": args.subnetId,
        "tags": args.tags,
        "vpcId": args.vpcId,
    });
}

/**
 * A collection of arguments for invoking getRouteTable.
 */
export interface GetRouteTableArgs {
    /**
     * Custom filter block as described below.
     */
    readonly filters?: pulumi.Input<{ name: pulumi.Input<string>, values: pulumi.Input<pulumi.Input<string>[]> }[]>;
    /**
     * The id of the specific Route Table to retrieve.
     */
    readonly routeTableId?: pulumi.Input<string>;
    /**
     * The id of a Subnet which is connected to the Route Table (not be exported if not given in parameter).
     */
    readonly subnetId?: pulumi.Input<string>;
    /**
     * A mapping of tags, each pair of which must exactly match
     * a pair on the desired Route Table.
     */
    readonly tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The id of the VPC that the desired Route Table belongs to.
     */
    readonly vpcId?: pulumi.Input<string>;
}

/**
 * A collection of values returned by getRouteTable.
 */
export interface GetRouteTableResult {
    readonly associations: { main: boolean, routeTableAssociationId: string, routeTableId: string, subnetId: string }[];
    /**
     * The Route Table ID.
     */
    readonly routeTableId: string;
    readonly routes: { cidrBlock: string, egressOnlyGatewayId: string, gatewayId: string, instanceId: string, ipv6CidrBlock: string, natGatewayId: string, networkInterfaceId: string, vpcPeeringConnectionId: string }[];
    /**
     * The Subnet ID.
     */
    readonly subnetId: string;
    readonly tags: {[key: string]: any};
    readonly vpcId: string;
    /**
     * id is the provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
