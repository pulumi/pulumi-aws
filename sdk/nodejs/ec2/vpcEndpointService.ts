// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/vpc_endpoint_service.html.markdown.
 */
export class VpcEndpointService extends pulumi.CustomResource {
    /**
     * Get an existing VpcEndpointService resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpcEndpointServiceState, opts?: pulumi.CustomResourceOptions): VpcEndpointService {
        return new VpcEndpointService(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:ec2/vpcEndpointService:VpcEndpointService';

    /**
     * Returns true if the given object is an instance of VpcEndpointService.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpcEndpointService {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpcEndpointService.__pulumiType;
    }

    /**
     * Whether or not VPC endpoint connection requests to the service must be accepted by the service owner - `true` or `false`.
     */
    public readonly acceptanceRequired!: pulumi.Output<boolean>;
    /**
     * The ARNs of one or more principals allowed to discover the endpoint service.
     */
    public readonly allowedPrincipals!: pulumi.Output<string[]>;
    /**
     * The Availability Zones in which the service is available.
     */
    public /*out*/ readonly availabilityZones!: pulumi.Output<string[]>;
    /**
     * The DNS names for the service.
     */
    public /*out*/ readonly baseEndpointDnsNames!: pulumi.Output<string[]>;
    /**
     * Whether or not the service manages its VPC endpoints - `true` or `false`.
     */
    public /*out*/ readonly managesVpcEndpoints!: pulumi.Output<boolean>;
    /**
     * The ARNs of one or more Network Load Balancers for the endpoint service.
     */
    public readonly networkLoadBalancerArns!: pulumi.Output<string[]>;
    /**
     * The private DNS name for the service.
     */
    public /*out*/ readonly privateDnsName!: pulumi.Output<string>;
    /**
     * The service name.
     */
    public /*out*/ readonly serviceName!: pulumi.Output<string>;
    /**
     * The service type, `Gateway` or `Interface`.
     */
    public /*out*/ readonly serviceType!: pulumi.Output<string>;
    /**
     * The state of the VPC endpoint service.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    public readonly tags!: pulumi.Output<{[key: string]: any} | undefined>;

    /**
     * Create a VpcEndpointService resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpcEndpointServiceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpcEndpointServiceArgs | VpcEndpointServiceState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as VpcEndpointServiceState | undefined;
            inputs["acceptanceRequired"] = state ? state.acceptanceRequired : undefined;
            inputs["allowedPrincipals"] = state ? state.allowedPrincipals : undefined;
            inputs["availabilityZones"] = state ? state.availabilityZones : undefined;
            inputs["baseEndpointDnsNames"] = state ? state.baseEndpointDnsNames : undefined;
            inputs["managesVpcEndpoints"] = state ? state.managesVpcEndpoints : undefined;
            inputs["networkLoadBalancerArns"] = state ? state.networkLoadBalancerArns : undefined;
            inputs["privateDnsName"] = state ? state.privateDnsName : undefined;
            inputs["serviceName"] = state ? state.serviceName : undefined;
            inputs["serviceType"] = state ? state.serviceType : undefined;
            inputs["state"] = state ? state.state : undefined;
            inputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as VpcEndpointServiceArgs | undefined;
            if (!args || args.acceptanceRequired === undefined) {
                throw new Error("Missing required property 'acceptanceRequired'");
            }
            if (!args || args.networkLoadBalancerArns === undefined) {
                throw new Error("Missing required property 'networkLoadBalancerArns'");
            }
            inputs["acceptanceRequired"] = args ? args.acceptanceRequired : undefined;
            inputs["allowedPrincipals"] = args ? args.allowedPrincipals : undefined;
            inputs["networkLoadBalancerArns"] = args ? args.networkLoadBalancerArns : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["availabilityZones"] = undefined /*out*/;
            inputs["baseEndpointDnsNames"] = undefined /*out*/;
            inputs["managesVpcEndpoints"] = undefined /*out*/;
            inputs["privateDnsName"] = undefined /*out*/;
            inputs["serviceName"] = undefined /*out*/;
            inputs["serviceType"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
        }
        super(VpcEndpointService.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VpcEndpointService resources.
 */
export interface VpcEndpointServiceState {
    /**
     * Whether or not VPC endpoint connection requests to the service must be accepted by the service owner - `true` or `false`.
     */
    readonly acceptanceRequired?: pulumi.Input<boolean>;
    /**
     * The ARNs of one or more principals allowed to discover the endpoint service.
     */
    readonly allowedPrincipals?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Availability Zones in which the service is available.
     */
    readonly availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The DNS names for the service.
     */
    readonly baseEndpointDnsNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether or not the service manages its VPC endpoints - `true` or `false`.
     */
    readonly managesVpcEndpoints?: pulumi.Input<boolean>;
    /**
     * The ARNs of one or more Network Load Balancers for the endpoint service.
     */
    readonly networkLoadBalancerArns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The private DNS name for the service.
     */
    readonly privateDnsName?: pulumi.Input<string>;
    /**
     * The service name.
     */
    readonly serviceName?: pulumi.Input<string>;
    /**
     * The service type, `Gateway` or `Interface`.
     */
    readonly serviceType?: pulumi.Input<string>;
    /**
     * The state of the VPC endpoint service.
     */
    readonly state?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: pulumi.Input<{[key: string]: any}>;
}

/**
 * The set of arguments for constructing a VpcEndpointService resource.
 */
export interface VpcEndpointServiceArgs {
    /**
     * Whether or not VPC endpoint connection requests to the service must be accepted by the service owner - `true` or `false`.
     */
    readonly acceptanceRequired: pulumi.Input<boolean>;
    /**
     * The ARNs of one or more principals allowed to discover the endpoint service.
     */
    readonly allowedPrincipals?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ARNs of one or more Network Load Balancers for the endpoint service.
     */
    readonly networkLoadBalancerArns: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: pulumi.Input<{[key: string]: any}>;
}
