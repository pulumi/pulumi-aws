// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a regional public access block for AMIs. This prevents AMIs from being made publicly accessible.
 * If you already have public AMIs, they will remain publicly available.
 *
 * > **NOTE:** Deleting this resource does not change the block public access value, the resource in simply removed from state instead.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * // Prevent making AMIs publicly accessible in the region and account for which the provider is configured
 * const test = new aws.ec2.ImageBlockPublicAccess("test", {state: "block-new-sharing"});
 * ```
 *
 * ## Import
 *
 * You cannot import this resource.
 */
export class ImageBlockPublicAccess extends pulumi.CustomResource {
    /**
     * Get an existing ImageBlockPublicAccess resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ImageBlockPublicAccessState, opts?: pulumi.CustomResourceOptions): ImageBlockPublicAccess {
        return new ImageBlockPublicAccess(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:ec2/imageBlockPublicAccess:ImageBlockPublicAccess';

    /**
     * Returns true if the given object is an instance of ImageBlockPublicAccess.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ImageBlockPublicAccess {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ImageBlockPublicAccess.__pulumiType;
    }

    /**
     * The state of block public access for AMIs at the account level in the configured AWS Region. Valid values: `unblocked` and `block-new-sharing`.
     */
    public readonly state!: pulumi.Output<string>;

    /**
     * Create a ImageBlockPublicAccess resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ImageBlockPublicAccessArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ImageBlockPublicAccessArgs | ImageBlockPublicAccessState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ImageBlockPublicAccessState | undefined;
            resourceInputs["state"] = state ? state.state : undefined;
        } else {
            const args = argsOrState as ImageBlockPublicAccessArgs | undefined;
            if ((!args || args.state === undefined) && !opts.urn) {
                throw new Error("Missing required property 'state'");
            }
            resourceInputs["state"] = args ? args.state : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ImageBlockPublicAccess.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ImageBlockPublicAccess resources.
 */
export interface ImageBlockPublicAccessState {
    /**
     * The state of block public access for AMIs at the account level in the configured AWS Region. Valid values: `unblocked` and `block-new-sharing`.
     */
    state?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ImageBlockPublicAccess resource.
 */
export interface ImageBlockPublicAccessArgs {
    /**
     * The state of block public access for AMIs at the account level in the configured AWS Region. Valid values: `unblocked` and `block-new-sharing`.
     */
    state: pulumi.Input<string>;
}
