// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class VpcEndpointConnectionNotification extends pulumi.CustomResource {
    /**
     * Get an existing VpcEndpointConnectionNotification resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpcEndpointConnectionNotificationState, opts?: pulumi.CustomResourceOptions): VpcEndpointConnectionNotification {
        return new VpcEndpointConnectionNotification(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:ec2/vpcEndpointConnectionNotification:VpcEndpointConnectionNotification';

    /**
     * Returns true if the given object is an instance of VpcEndpointConnectionNotification.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpcEndpointConnectionNotification {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpcEndpointConnectionNotification.__pulumiType;
    }

    public readonly connectionEvents!: pulumi.Output<string[]>;
    public readonly connectionNotificationArn!: pulumi.Output<string>;
    public /*out*/ readonly notificationType!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public readonly vpcEndpointId!: pulumi.Output<string | undefined>;
    public readonly vpcEndpointServiceId!: pulumi.Output<string | undefined>;

    /**
     * Create a VpcEndpointConnectionNotification resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpcEndpointConnectionNotificationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpcEndpointConnectionNotificationArgs | VpcEndpointConnectionNotificationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpcEndpointConnectionNotificationState | undefined;
            resourceInputs["connectionEvents"] = state ? state.connectionEvents : undefined;
            resourceInputs["connectionNotificationArn"] = state ? state.connectionNotificationArn : undefined;
            resourceInputs["notificationType"] = state ? state.notificationType : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["vpcEndpointId"] = state ? state.vpcEndpointId : undefined;
            resourceInputs["vpcEndpointServiceId"] = state ? state.vpcEndpointServiceId : undefined;
        } else {
            const args = argsOrState as VpcEndpointConnectionNotificationArgs | undefined;
            if ((!args || args.connectionEvents === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectionEvents'");
            }
            if ((!args || args.connectionNotificationArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectionNotificationArn'");
            }
            resourceInputs["connectionEvents"] = args ? args.connectionEvents : undefined;
            resourceInputs["connectionNotificationArn"] = args ? args.connectionNotificationArn : undefined;
            resourceInputs["vpcEndpointId"] = args ? args.vpcEndpointId : undefined;
            resourceInputs["vpcEndpointServiceId"] = args ? args.vpcEndpointServiceId : undefined;
            resourceInputs["notificationType"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VpcEndpointConnectionNotification.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VpcEndpointConnectionNotification resources.
 */
export interface VpcEndpointConnectionNotificationState {
    connectionEvents?: pulumi.Input<pulumi.Input<string>[]>;
    connectionNotificationArn?: pulumi.Input<string>;
    notificationType?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    vpcEndpointId?: pulumi.Input<string>;
    vpcEndpointServiceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VpcEndpointConnectionNotification resource.
 */
export interface VpcEndpointConnectionNotificationArgs {
    connectionEvents: pulumi.Input<pulumi.Input<string>[]>;
    connectionNotificationArn: pulumi.Input<string>;
    vpcEndpointId?: pulumi.Input<string>;
    vpcEndpointServiceId?: pulumi.Input<string>;
}
