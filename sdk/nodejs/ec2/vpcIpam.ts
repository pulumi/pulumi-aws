// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Provides an IPAM resource.
 *
 * ## Example Usage
 *
 * Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const current = aws.getRegion({});
 * const main = new aws.ec2.VpcIpam("main", {
 *     description: "My IPAM",
 *     operatingRegions: [{
 *         regionName: current.then(current => current.region),
 *     }],
 *     tags: {
 *         Test: "Main",
 *     },
 * });
 * ```
 *
 * Shared with multiple operating_regions:
 *
 * ## Import
 *
 * Using `pulumi import`, import IPAMs using the IPAM `id`. For example:
 *
 * ```sh
 * $ pulumi import aws:ec2/vpcIpam:VpcIpam example ipam-0178368ad2146a492
 * ```
 */
export class VpcIpam extends pulumi.CustomResource {
    /**
     * Get an existing VpcIpam resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpcIpamState, opts?: pulumi.CustomResourceOptions): VpcIpam {
        return new VpcIpam(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:ec2/vpcIpam:VpcIpam';

    /**
     * Returns true if the given object is an instance of VpcIpam.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpcIpam {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpcIpam.__pulumiType;
    }

    /**
     * Amazon Resource Name (ARN) of IPAM
     */
    declare public /*out*/ readonly arn: pulumi.Output<string>;
    /**
     * Enables you to quickly delete an IPAM, private scopes, pools in private scopes, and any allocations in the pools in private scopes.
     */
    declare public readonly cascade: pulumi.Output<boolean | undefined>;
    /**
     * The IPAM's default resource discovery association ID.
     */
    declare public /*out*/ readonly defaultResourceDiscoveryAssociationId: pulumi.Output<string>;
    /**
     * The IPAM's default resource discovery ID.
     */
    declare public /*out*/ readonly defaultResourceDiscoveryId: pulumi.Output<string>;
    /**
     * A description for the IPAM.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Enable this option to use your own GUA ranges as private IPv6 addresses. Default: `false`.
     */
    declare public readonly enablePrivateGua: pulumi.Output<boolean | undefined>;
    /**
     * AWS account that is charged for active IP addresses managed in IPAM. Valid values are `ipam-owner` (default) and `resource-owner`.
     */
    declare public readonly meteredAccount: pulumi.Output<string>;
    /**
     * Determines which locales can be chosen when you create pools. Locale is the Region where you want to make an IPAM pool available for allocations. You can only create pools with locales that match the operating Regions of the IPAM. You can only create VPCs from a pool whose locale matches the VPC's Region. You specify a region using the regionName parameter. You **must** set your provider block region as an operating_region.
     */
    declare public readonly operatingRegions: pulumi.Output<outputs.ec2.VpcIpamOperatingRegion[]>;
    /**
     * The ID of the IPAM's private scope. A scope is a top-level container in IPAM. Each scope represents an IP-independent network. Scopes enable you to represent networks where you have overlapping IP space. When you create an IPAM, IPAM automatically creates two scopes: public and private. The private scope is intended for private IP space. The public scope is intended for all internet-routable IP space.
     */
    declare public /*out*/ readonly privateDefaultScopeId: pulumi.Output<string>;
    /**
     * The ID of the IPAM's public scope. A scope is a top-level container in IPAM. Each scope represents an IP-independent network. Scopes enable you to represent networks where you have overlapping IP space. When you create an IPAM, IPAM automatically creates two scopes: public and private. The private scope is intended for private
     * IP space. The public scope is intended for all internet-routable IP space.
     */
    declare public /*out*/ readonly publicDefaultScopeId: pulumi.Output<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * The number of scopes in the IPAM.
     */
    declare public /*out*/ readonly scopeCount: pulumi.Output<number>;
    /**
     * A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    declare public /*out*/ readonly tagsAll: pulumi.Output<{[key: string]: string}>;
    /**
     * specifies the IPAM tier. Valid options include `free` and `advanced`. Default is `advanced`.
     */
    declare public readonly tier: pulumi.Output<string | undefined>;

    /**
     * Create a VpcIpam resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpcIpamArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpcIpamArgs | VpcIpamState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpcIpamState | undefined;
            resourceInputs["arn"] = state?.arn;
            resourceInputs["cascade"] = state?.cascade;
            resourceInputs["defaultResourceDiscoveryAssociationId"] = state?.defaultResourceDiscoveryAssociationId;
            resourceInputs["defaultResourceDiscoveryId"] = state?.defaultResourceDiscoveryId;
            resourceInputs["description"] = state?.description;
            resourceInputs["enablePrivateGua"] = state?.enablePrivateGua;
            resourceInputs["meteredAccount"] = state?.meteredAccount;
            resourceInputs["operatingRegions"] = state?.operatingRegions;
            resourceInputs["privateDefaultScopeId"] = state?.privateDefaultScopeId;
            resourceInputs["publicDefaultScopeId"] = state?.publicDefaultScopeId;
            resourceInputs["region"] = state?.region;
            resourceInputs["scopeCount"] = state?.scopeCount;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tagsAll"] = state?.tagsAll;
            resourceInputs["tier"] = state?.tier;
        } else {
            const args = argsOrState as VpcIpamArgs | undefined;
            if (args?.operatingRegions === undefined && !opts.urn) {
                throw new Error("Missing required property 'operatingRegions'");
            }
            resourceInputs["cascade"] = args?.cascade;
            resourceInputs["description"] = args?.description;
            resourceInputs["enablePrivateGua"] = args?.enablePrivateGua;
            resourceInputs["meteredAccount"] = args?.meteredAccount;
            resourceInputs["operatingRegions"] = args?.operatingRegions;
            resourceInputs["region"] = args?.region;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["tier"] = args?.tier;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["defaultResourceDiscoveryAssociationId"] = undefined /*out*/;
            resourceInputs["defaultResourceDiscoveryId"] = undefined /*out*/;
            resourceInputs["privateDefaultScopeId"] = undefined /*out*/;
            resourceInputs["publicDefaultScopeId"] = undefined /*out*/;
            resourceInputs["scopeCount"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VpcIpam.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VpcIpam resources.
 */
export interface VpcIpamState {
    /**
     * Amazon Resource Name (ARN) of IPAM
     */
    arn?: pulumi.Input<string>;
    /**
     * Enables you to quickly delete an IPAM, private scopes, pools in private scopes, and any allocations in the pools in private scopes.
     */
    cascade?: pulumi.Input<boolean>;
    /**
     * The IPAM's default resource discovery association ID.
     */
    defaultResourceDiscoveryAssociationId?: pulumi.Input<string>;
    /**
     * The IPAM's default resource discovery ID.
     */
    defaultResourceDiscoveryId?: pulumi.Input<string>;
    /**
     * A description for the IPAM.
     */
    description?: pulumi.Input<string>;
    /**
     * Enable this option to use your own GUA ranges as private IPv6 addresses. Default: `false`.
     */
    enablePrivateGua?: pulumi.Input<boolean>;
    /**
     * AWS account that is charged for active IP addresses managed in IPAM. Valid values are `ipam-owner` (default) and `resource-owner`.
     */
    meteredAccount?: pulumi.Input<string>;
    /**
     * Determines which locales can be chosen when you create pools. Locale is the Region where you want to make an IPAM pool available for allocations. You can only create pools with locales that match the operating Regions of the IPAM. You can only create VPCs from a pool whose locale matches the VPC's Region. You specify a region using the regionName parameter. You **must** set your provider block region as an operating_region.
     */
    operatingRegions?: pulumi.Input<pulumi.Input<inputs.ec2.VpcIpamOperatingRegion>[]>;
    /**
     * The ID of the IPAM's private scope. A scope is a top-level container in IPAM. Each scope represents an IP-independent network. Scopes enable you to represent networks where you have overlapping IP space. When you create an IPAM, IPAM automatically creates two scopes: public and private. The private scope is intended for private IP space. The public scope is intended for all internet-routable IP space.
     */
    privateDefaultScopeId?: pulumi.Input<string>;
    /**
     * The ID of the IPAM's public scope. A scope is a top-level container in IPAM. Each scope represents an IP-independent network. Scopes enable you to represent networks where you have overlapping IP space. When you create an IPAM, IPAM automatically creates two scopes: public and private. The private scope is intended for private
     * IP space. The public scope is intended for all internet-routable IP space.
     */
    publicDefaultScopeId?: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * The number of scopes in the IPAM.
     */
    scopeCount?: pulumi.Input<number>;
    /**
     * A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * specifies the IPAM tier. Valid options include `free` and `advanced`. Default is `advanced`.
     */
    tier?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VpcIpam resource.
 */
export interface VpcIpamArgs {
    /**
     * Enables you to quickly delete an IPAM, private scopes, pools in private scopes, and any allocations in the pools in private scopes.
     */
    cascade?: pulumi.Input<boolean>;
    /**
     * A description for the IPAM.
     */
    description?: pulumi.Input<string>;
    /**
     * Enable this option to use your own GUA ranges as private IPv6 addresses. Default: `false`.
     */
    enablePrivateGua?: pulumi.Input<boolean>;
    /**
     * AWS account that is charged for active IP addresses managed in IPAM. Valid values are `ipam-owner` (default) and `resource-owner`.
     */
    meteredAccount?: pulumi.Input<string>;
    /**
     * Determines which locales can be chosen when you create pools. Locale is the Region where you want to make an IPAM pool available for allocations. You can only create pools with locales that match the operating Regions of the IPAM. You can only create VPCs from a pool whose locale matches the VPC's Region. You specify a region using the regionName parameter. You **must** set your provider block region as an operating_region.
     */
    operatingRegions: pulumi.Input<pulumi.Input<inputs.ec2.VpcIpamOperatingRegion>[]>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * specifies the IPAM tier. Valid options include `free` and `advanced`. Default is `advanced`.
     */
    tier?: pulumi.Input<string>;
}
