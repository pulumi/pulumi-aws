// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * This resource can be useful for getting back a list of managed prefix list ids to be referenced elsewhere.
 */
export function getManagedPrefixLists(args?: GetManagedPrefixListsArgs, opts?: pulumi.InvokeOptions): Promise<GetManagedPrefixListsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:ec2/getManagedPrefixLists:getManagedPrefixLists", {
        "filters": args.filters,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getManagedPrefixLists.
 */
export interface GetManagedPrefixListsArgs {
    /**
     * Custom filter block as described below.
     */
    filters?: inputs.ec2.GetManagedPrefixListsFilter[];
    /**
     * Map of tags, each pair of which must exactly match
     * a pair on the desired .
     *
     * More complex filters can be expressed using one or more `filter` sub-blocks,
     * which take the following arguments:
     */
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getManagedPrefixLists.
 */
export interface GetManagedPrefixListsResult {
    readonly filters?: outputs.ec2.GetManagedPrefixListsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * List of all the managed prefix list ids found.
     */
    readonly ids: string[];
    readonly tags: {[key: string]: string};
}
/**
 * This resource can be useful for getting back a list of managed prefix list ids to be referenced elsewhere.
 */
export function getManagedPrefixListsOutput(args?: GetManagedPrefixListsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagedPrefixListsResult> {
    return pulumi.output(args).apply((a: any) => getManagedPrefixLists(a, opts))
}

/**
 * A collection of arguments for invoking getManagedPrefixLists.
 */
export interface GetManagedPrefixListsOutputArgs {
    /**
     * Custom filter block as described below.
     */
    filters?: pulumi.Input<pulumi.Input<inputs.ec2.GetManagedPrefixListsFilterArgs>[]>;
    /**
     * Map of tags, each pair of which must exactly match
     * a pair on the desired .
     *
     * More complex filters can be expressed using one or more `filter` sub-blocks,
     * which take the following arguments:
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
