// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides an EC2 Spot Instance Request resource. This allows instances to be
 * requested on the spot market.
 * 
 * By default Terraform creates Spot Instance Requests with a `persistent` type,
 * which means that for the duration of their lifetime, AWS will launch an
 * instance with the configured details if and when the spot market will accept
 * the requested price.
 * 
 * On destruction, Terraform will make an attempt to terminate the associated Spot
 * Instance if there is one present.
 * 
 * Spot Instances requests with a `one-time` type will close the spot request
 * when the instance is terminated either by the request being below the current spot
 * price availability or by a user.
 * 
 * > **NOTE:** Because their behavior depends on the live status of the spot
 * market, Spot Instance Requests have a unique lifecycle that makes them behave
 * differently than other Terraform resources. Most importantly: there is __no
 * guarantee__ that a Spot Instance exists to fulfill the request at any given
 * point in time. See the [AWS Spot Instance
 * documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html)
 * for more information.
 * 
 * 
 * ## Example Usage
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * // Request a spot instance at $0.03
 * const cheapWorker = new aws.ec2.SpotInstanceRequest("cheap_worker", {
 *     ami: "ami-1234",
 *     instanceType: "c4.xlarge",
 *     spotPrice: "0.03",
 *     tags: {
 *         Name: "CheapWorker",
 *     },
 * });
 * ```
 */
export class SpotInstanceRequest extends pulumi.CustomResource {
    /**
     * Get an existing SpotInstanceRequest resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SpotInstanceRequestState, opts?: pulumi.CustomResourceOptions): SpotInstanceRequest {
        return new SpotInstanceRequest(name, <any>state, { ...opts, id: id });
    }

    /**
     * The AMI to use for the instance.
     */
    public readonly ami: pulumi.Output<string>;
    public /*out*/ readonly arn: pulumi.Output<string>;
    /**
     * Associate a public ip address with an instance in a VPC.  Boolean value.
     */
    public readonly associatePublicIpAddress: pulumi.Output<boolean>;
    /**
     * The AZ to start the instance in.
     */
    public readonly availabilityZone: pulumi.Output<string>;
    /**
     * The required duration for the Spot instances, in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).
     * The duration period starts as soon as your Spot instance receives its instance ID. At the end of the duration period, Amazon EC2 marks the Spot instance for termination and provides a Spot instance termination notice, which gives the instance a two-minute warning before it terminates.
     * Note that you can't specify an Availability Zone group or a launch group if you specify a duration.
     */
    public readonly blockDurationMinutes: pulumi.Output<number | undefined>;
    /**
     * Sets the number of CPU cores for an instance. This option is
     * only supported on creation of instance type that support CPU Options
     * [CPU Cores and Threads Per CPU Core Per Instance Type](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html#cpu-options-supported-instances-values) - specifying this option for unsupported instance types will return an error from the EC2 API.
     */
    public readonly cpuCoreCount: pulumi.Output<number>;
    /**
     * If set to to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See [Optimizing CPU Options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) for more information.
     */
    public readonly cpuThreadsPerCore: pulumi.Output<number>;
    /**
     * Customize the credit specification of the instance. See Credit Specification below for more details.
     */
    public readonly creditSpecification: pulumi.Output<{ cpuCredits?: string } | undefined>;
    /**
     * If true, enables [EC2 Instance
     * Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination)
     */
    public readonly disableApiTermination: pulumi.Output<boolean | undefined>;
    /**
     * Additional EBS block devices to attach to the
     * instance.  Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection.
     */
    public readonly ebsBlockDevices: pulumi.Output<{ deleteOnTermination?: boolean, deviceName: string, encrypted: boolean, iops: number, snapshotId: string, volumeId: string, volumeSize: number, volumeType: string }[]>;
    /**
     * If true, the launched EC2 instance will be EBS-optimized.
     * Note that if this is not set on an instance type that is optimized by default then
     * this will show as disabled but if the instance type is optimized by default then
     * there is no need to set this and there is no effect to disabling it.
     * See the [EBS Optimized section](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html) of the AWS User Guide for more information.
     */
    public readonly ebsOptimized: pulumi.Output<boolean | undefined>;
    /**
     * Customize Ephemeral (also known as
     * "Instance Store") volumes on the instance. See Block Devices below for details.
     */
    public readonly ephemeralBlockDevices: pulumi.Output<{ deviceName: string, noDevice?: boolean, virtualName?: string }[]>;
    /**
     * If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `password_data` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
     */
    public readonly getPasswordData: pulumi.Output<boolean | undefined>;
    /**
     * The Id of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host.
     */
    public readonly hostId: pulumi.Output<string>;
    /**
     * The IAM Instance Profile to
     * launch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the [EC2 documentation](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html#roles-usingrole-ec2instance-permissions), notably `iam:PassRole`.
     * * `ipv6_address_count`- (Optional) A number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
     */
    public readonly iamInstanceProfile: pulumi.Output<string | undefined>;
    /**
     * Shutdown behavior for the
     * instance. Amazon defaults this to `stop` for EBS-backed instances and
     * `terminate` for instance-store instances. Cannot be set on instance-store
     * instances. See [Shutdown Behavior](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingInstanceInitiatedShutdownBehavior) for more information.
     */
    public readonly instanceInitiatedShutdownBehavior: pulumi.Output<string | undefined>;
    /**
     * Indicates whether a Spot instance stops or terminates when it is interrupted. Default is `terminate` as this is the current AWS behaviour.
     */
    public readonly instanceInterruptionBehaviour: pulumi.Output<string | undefined>;
    public /*out*/ readonly instanceState: pulumi.Output<string>;
    /**
     * The type of instance to start. Updates to this field will trigger a stop/start of the EC2 instance.
     */
    public readonly instanceType: pulumi.Output<string>;
    public readonly ipv6AddressCount: pulumi.Output<number>;
    /**
     * Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
     */
    public readonly ipv6Addresses: pulumi.Output<string[]>;
    /**
     * The key name of the Key Pair to use for the instance; which can be managed using the `aws_key_pair` resource.
     */
    public readonly keyName: pulumi.Output<string>;
    /**
     * A launch group is a group of spot instances that launch together and terminate together.
     * If left empty instances are launched and terminated individually.
     */
    public readonly launchGroup: pulumi.Output<string | undefined>;
    /**
     * If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
     */
    public readonly monitoring: pulumi.Output<boolean | undefined>;
    /**
     * Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.
     */
    public readonly networkInterfaces: pulumi.Output<{ deleteOnTermination?: boolean, deviceIndex: number, networkInterfaceId: string }[]>;
    public /*out*/ readonly passwordData: pulumi.Output<string>;
    /**
     * The Placement Group to start the instance in.
     */
    public readonly placementGroup: pulumi.Output<string>;
    public /*out*/ readonly primaryNetworkInterfaceId: pulumi.Output<string>;
    /**
     * The private DNS name assigned to the instance. Can only be
     * used inside the Amazon EC2, and only available if you've enabled DNS hostnames
     * for your VPC
     */
    public /*out*/ readonly privateDns: pulumi.Output<string>;
    /**
     * Private IP address to associate with the
     * instance in a VPC.
     */
    public readonly privateIp: pulumi.Output<string>;
    /**
     * The public DNS name assigned to the instance. For EC2-VPC, this
     * is only available if you've enabled DNS hostnames for your VPC
     */
    public /*out*/ readonly publicDns: pulumi.Output<string>;
    /**
     * The public IP address assigned to the instance, if applicable.
     */
    public /*out*/ readonly publicIp: pulumi.Output<string>;
    /**
     * Customize details about the root block
     * device of the instance. See Block Devices below for details.
     */
    public readonly rootBlockDevice: pulumi.Output<{ deleteOnTermination?: boolean, iops: number, volumeId: string, volumeSize: number, volumeType: string }>;
    /**
     * A list of security group names (EC2-Classic) or IDs (default VPC) to associate with.
     */
    public readonly securityGroups: pulumi.Output<string[]>;
    /**
     * Controls if traffic is routed to the instance when
     * the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
     */
    public readonly sourceDestCheck: pulumi.Output<boolean | undefined>;
    /**
     * The current [bid
     * status](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html)
     * of the Spot Instance Request.
     * * `spot_request_state` The current [request
     * state](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html#creating-spot-request-status)
     * of the Spot Instance Request.
     */
    public /*out*/ readonly spotBidStatus: pulumi.Output<string>;
    /**
     * The Instance ID (if any) that is currently fulfilling
     * the Spot Instance request.
     */
    public /*out*/ readonly spotInstanceId: pulumi.Output<string>;
    /**
     * The maximum price to request on the spot market.
     */
    public readonly spotPrice: pulumi.Output<string | undefined>;
    public /*out*/ readonly spotRequestState: pulumi.Output<string>;
    /**
     * If set to `one-time`, after
     * the instance is terminated, the spot request will be closed.
     */
    public readonly spotType: pulumi.Output<string | undefined>;
    /**
     * The VPC Subnet ID to launch in.
     */
    public readonly subnetId: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    public readonly tags: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware. The host tenancy is not supported for the import-instance command.
     */
    public readonly tenancy: pulumi.Output<string>;
    /**
     * The user data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see `user_data_base64` instead.
     */
    public readonly userData: pulumi.Output<string | undefined>;
    /**
     * Can be used instead of `user_data` to pass base64-encoded binary data directly. Use this instead of `user_data` whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption.
     */
    public readonly userDataBase64: pulumi.Output<string | undefined>;
    /**
     * The start date and time of the request, in UTC [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.8) format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
     */
    public readonly validFrom: pulumi.Output<string>;
    /**
     * The end date and time of the request, in UTC [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.8) format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request. The default end date is 7 days from the current date.
     */
    public readonly validUntil: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the devices created by the instance at launch time.
     */
    public readonly volumeTags: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * A list of security group IDs to associate with.
     */
    public readonly vpcSecurityGroupIds: pulumi.Output<string[]>;
    /**
     * If set, Terraform will
     * wait for the Spot Request to be fulfilled, and will throw an error if the
     * timeout of 10m is reached.
     */
    public readonly waitForFulfillment: pulumi.Output<boolean | undefined>;

    /**
     * Create a SpotInstanceRequest resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SpotInstanceRequestArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SpotInstanceRequestArgs | SpotInstanceRequestState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: SpotInstanceRequestState = argsOrState as SpotInstanceRequestState | undefined;
            inputs["ami"] = state ? state.ami : undefined;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["associatePublicIpAddress"] = state ? state.associatePublicIpAddress : undefined;
            inputs["availabilityZone"] = state ? state.availabilityZone : undefined;
            inputs["blockDurationMinutes"] = state ? state.blockDurationMinutes : undefined;
            inputs["cpuCoreCount"] = state ? state.cpuCoreCount : undefined;
            inputs["cpuThreadsPerCore"] = state ? state.cpuThreadsPerCore : undefined;
            inputs["creditSpecification"] = state ? state.creditSpecification : undefined;
            inputs["disableApiTermination"] = state ? state.disableApiTermination : undefined;
            inputs["ebsBlockDevices"] = state ? state.ebsBlockDevices : undefined;
            inputs["ebsOptimized"] = state ? state.ebsOptimized : undefined;
            inputs["ephemeralBlockDevices"] = state ? state.ephemeralBlockDevices : undefined;
            inputs["getPasswordData"] = state ? state.getPasswordData : undefined;
            inputs["hostId"] = state ? state.hostId : undefined;
            inputs["iamInstanceProfile"] = state ? state.iamInstanceProfile : undefined;
            inputs["instanceInitiatedShutdownBehavior"] = state ? state.instanceInitiatedShutdownBehavior : undefined;
            inputs["instanceInterruptionBehaviour"] = state ? state.instanceInterruptionBehaviour : undefined;
            inputs["instanceState"] = state ? state.instanceState : undefined;
            inputs["instanceType"] = state ? state.instanceType : undefined;
            inputs["ipv6AddressCount"] = state ? state.ipv6AddressCount : undefined;
            inputs["ipv6Addresses"] = state ? state.ipv6Addresses : undefined;
            inputs["keyName"] = state ? state.keyName : undefined;
            inputs["launchGroup"] = state ? state.launchGroup : undefined;
            inputs["monitoring"] = state ? state.monitoring : undefined;
            inputs["networkInterfaces"] = state ? state.networkInterfaces : undefined;
            inputs["passwordData"] = state ? state.passwordData : undefined;
            inputs["placementGroup"] = state ? state.placementGroup : undefined;
            inputs["primaryNetworkInterfaceId"] = state ? state.primaryNetworkInterfaceId : undefined;
            inputs["privateDns"] = state ? state.privateDns : undefined;
            inputs["privateIp"] = state ? state.privateIp : undefined;
            inputs["publicDns"] = state ? state.publicDns : undefined;
            inputs["publicIp"] = state ? state.publicIp : undefined;
            inputs["rootBlockDevice"] = state ? state.rootBlockDevice : undefined;
            inputs["securityGroups"] = state ? state.securityGroups : undefined;
            inputs["sourceDestCheck"] = state ? state.sourceDestCheck : undefined;
            inputs["spotBidStatus"] = state ? state.spotBidStatus : undefined;
            inputs["spotInstanceId"] = state ? state.spotInstanceId : undefined;
            inputs["spotPrice"] = state ? state.spotPrice : undefined;
            inputs["spotRequestState"] = state ? state.spotRequestState : undefined;
            inputs["spotType"] = state ? state.spotType : undefined;
            inputs["subnetId"] = state ? state.subnetId : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["tenancy"] = state ? state.tenancy : undefined;
            inputs["userData"] = state ? state.userData : undefined;
            inputs["userDataBase64"] = state ? state.userDataBase64 : undefined;
            inputs["validFrom"] = state ? state.validFrom : undefined;
            inputs["validUntil"] = state ? state.validUntil : undefined;
            inputs["volumeTags"] = state ? state.volumeTags : undefined;
            inputs["vpcSecurityGroupIds"] = state ? state.vpcSecurityGroupIds : undefined;
            inputs["waitForFulfillment"] = state ? state.waitForFulfillment : undefined;
        } else {
            const args = argsOrState as SpotInstanceRequestArgs | undefined;
            if (!args || args.ami === undefined) {
                throw new Error("Missing required property 'ami'");
            }
            if (!args || args.instanceType === undefined) {
                throw new Error("Missing required property 'instanceType'");
            }
            inputs["ami"] = args ? args.ami : undefined;
            inputs["associatePublicIpAddress"] = args ? args.associatePublicIpAddress : undefined;
            inputs["availabilityZone"] = args ? args.availabilityZone : undefined;
            inputs["blockDurationMinutes"] = args ? args.blockDurationMinutes : undefined;
            inputs["cpuCoreCount"] = args ? args.cpuCoreCount : undefined;
            inputs["cpuThreadsPerCore"] = args ? args.cpuThreadsPerCore : undefined;
            inputs["creditSpecification"] = args ? args.creditSpecification : undefined;
            inputs["disableApiTermination"] = args ? args.disableApiTermination : undefined;
            inputs["ebsBlockDevices"] = args ? args.ebsBlockDevices : undefined;
            inputs["ebsOptimized"] = args ? args.ebsOptimized : undefined;
            inputs["ephemeralBlockDevices"] = args ? args.ephemeralBlockDevices : undefined;
            inputs["getPasswordData"] = args ? args.getPasswordData : undefined;
            inputs["hostId"] = args ? args.hostId : undefined;
            inputs["iamInstanceProfile"] = args ? args.iamInstanceProfile : undefined;
            inputs["instanceInitiatedShutdownBehavior"] = args ? args.instanceInitiatedShutdownBehavior : undefined;
            inputs["instanceInterruptionBehaviour"] = args ? args.instanceInterruptionBehaviour : undefined;
            inputs["instanceType"] = args ? args.instanceType : undefined;
            inputs["ipv6AddressCount"] = args ? args.ipv6AddressCount : undefined;
            inputs["ipv6Addresses"] = args ? args.ipv6Addresses : undefined;
            inputs["keyName"] = args ? args.keyName : undefined;
            inputs["launchGroup"] = args ? args.launchGroup : undefined;
            inputs["monitoring"] = args ? args.monitoring : undefined;
            inputs["networkInterfaces"] = args ? args.networkInterfaces : undefined;
            inputs["placementGroup"] = args ? args.placementGroup : undefined;
            inputs["privateIp"] = args ? args.privateIp : undefined;
            inputs["rootBlockDevice"] = args ? args.rootBlockDevice : undefined;
            inputs["securityGroups"] = args ? args.securityGroups : undefined;
            inputs["sourceDestCheck"] = args ? args.sourceDestCheck : undefined;
            inputs["spotPrice"] = args ? args.spotPrice : undefined;
            inputs["spotType"] = args ? args.spotType : undefined;
            inputs["subnetId"] = args ? args.subnetId : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["tenancy"] = args ? args.tenancy : undefined;
            inputs["userData"] = args ? args.userData : undefined;
            inputs["userDataBase64"] = args ? args.userDataBase64 : undefined;
            inputs["validFrom"] = args ? args.validFrom : undefined;
            inputs["validUntil"] = args ? args.validUntil : undefined;
            inputs["volumeTags"] = args ? args.volumeTags : undefined;
            inputs["vpcSecurityGroupIds"] = args ? args.vpcSecurityGroupIds : undefined;
            inputs["waitForFulfillment"] = args ? args.waitForFulfillment : undefined;
            inputs["arn"] = undefined /*out*/;
            inputs["instanceState"] = undefined /*out*/;
            inputs["passwordData"] = undefined /*out*/;
            inputs["primaryNetworkInterfaceId"] = undefined /*out*/;
            inputs["privateDns"] = undefined /*out*/;
            inputs["publicDns"] = undefined /*out*/;
            inputs["publicIp"] = undefined /*out*/;
            inputs["spotBidStatus"] = undefined /*out*/;
            inputs["spotInstanceId"] = undefined /*out*/;
            inputs["spotRequestState"] = undefined /*out*/;
        }
        super("aws:ec2/spotInstanceRequest:SpotInstanceRequest", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SpotInstanceRequest resources.
 */
export interface SpotInstanceRequestState {
    /**
     * The AMI to use for the instance.
     */
    readonly ami?: pulumi.Input<string>;
    readonly arn?: pulumi.Input<string>;
    /**
     * Associate a public ip address with an instance in a VPC.  Boolean value.
     */
    readonly associatePublicIpAddress?: pulumi.Input<boolean>;
    /**
     * The AZ to start the instance in.
     */
    readonly availabilityZone?: pulumi.Input<string>;
    /**
     * The required duration for the Spot instances, in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).
     * The duration period starts as soon as your Spot instance receives its instance ID. At the end of the duration period, Amazon EC2 marks the Spot instance for termination and provides a Spot instance termination notice, which gives the instance a two-minute warning before it terminates.
     * Note that you can't specify an Availability Zone group or a launch group if you specify a duration.
     */
    readonly blockDurationMinutes?: pulumi.Input<number>;
    /**
     * Sets the number of CPU cores for an instance. This option is
     * only supported on creation of instance type that support CPU Options
     * [CPU Cores and Threads Per CPU Core Per Instance Type](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html#cpu-options-supported-instances-values) - specifying this option for unsupported instance types will return an error from the EC2 API.
     */
    readonly cpuCoreCount?: pulumi.Input<number>;
    /**
     * If set to to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See [Optimizing CPU Options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) for more information.
     */
    readonly cpuThreadsPerCore?: pulumi.Input<number>;
    /**
     * Customize the credit specification of the instance. See Credit Specification below for more details.
     */
    readonly creditSpecification?: pulumi.Input<{ cpuCredits?: pulumi.Input<string> }>;
    /**
     * If true, enables [EC2 Instance
     * Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination)
     */
    readonly disableApiTermination?: pulumi.Input<boolean>;
    /**
     * Additional EBS block devices to attach to the
     * instance.  Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection.
     */
    readonly ebsBlockDevices?: pulumi.Input<pulumi.Input<{ deleteOnTermination?: pulumi.Input<boolean>, deviceName: pulumi.Input<string>, encrypted?: pulumi.Input<boolean>, iops?: pulumi.Input<number>, snapshotId?: pulumi.Input<string>, volumeId?: pulumi.Input<string>, volumeSize?: pulumi.Input<number>, volumeType?: pulumi.Input<string> }>[]>;
    /**
     * If true, the launched EC2 instance will be EBS-optimized.
     * Note that if this is not set on an instance type that is optimized by default then
     * this will show as disabled but if the instance type is optimized by default then
     * there is no need to set this and there is no effect to disabling it.
     * See the [EBS Optimized section](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html) of the AWS User Guide for more information.
     */
    readonly ebsOptimized?: pulumi.Input<boolean>;
    /**
     * Customize Ephemeral (also known as
     * "Instance Store") volumes on the instance. See Block Devices below for details.
     */
    readonly ephemeralBlockDevices?: pulumi.Input<pulumi.Input<{ deviceName: pulumi.Input<string>, noDevice?: pulumi.Input<boolean>, virtualName?: pulumi.Input<string> }>[]>;
    /**
     * If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `password_data` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
     */
    readonly getPasswordData?: pulumi.Input<boolean>;
    /**
     * The Id of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host.
     */
    readonly hostId?: pulumi.Input<string>;
    /**
     * The IAM Instance Profile to
     * launch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the [EC2 documentation](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html#roles-usingrole-ec2instance-permissions), notably `iam:PassRole`.
     * * `ipv6_address_count`- (Optional) A number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
     */
    readonly iamInstanceProfile?: pulumi.Input<string>;
    /**
     * Shutdown behavior for the
     * instance. Amazon defaults this to `stop` for EBS-backed instances and
     * `terminate` for instance-store instances. Cannot be set on instance-store
     * instances. See [Shutdown Behavior](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingInstanceInitiatedShutdownBehavior) for more information.
     */
    readonly instanceInitiatedShutdownBehavior?: pulumi.Input<string>;
    /**
     * Indicates whether a Spot instance stops or terminates when it is interrupted. Default is `terminate` as this is the current AWS behaviour.
     */
    readonly instanceInterruptionBehaviour?: pulumi.Input<string>;
    readonly instanceState?: pulumi.Input<string>;
    /**
     * The type of instance to start. Updates to this field will trigger a stop/start of the EC2 instance.
     */
    readonly instanceType?: pulumi.Input<string>;
    readonly ipv6AddressCount?: pulumi.Input<number>;
    /**
     * Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
     */
    readonly ipv6Addresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The key name of the Key Pair to use for the instance; which can be managed using the `aws_key_pair` resource.
     */
    readonly keyName?: pulumi.Input<string>;
    /**
     * A launch group is a group of spot instances that launch together and terminate together.
     * If left empty instances are launched and terminated individually.
     */
    readonly launchGroup?: pulumi.Input<string>;
    /**
     * If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
     */
    readonly monitoring?: pulumi.Input<boolean>;
    /**
     * Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.
     */
    readonly networkInterfaces?: pulumi.Input<pulumi.Input<{ deleteOnTermination?: pulumi.Input<boolean>, deviceIndex: pulumi.Input<number>, networkInterfaceId: pulumi.Input<string> }>[]>;
    readonly passwordData?: pulumi.Input<string>;
    /**
     * The Placement Group to start the instance in.
     */
    readonly placementGroup?: pulumi.Input<string>;
    readonly primaryNetworkInterfaceId?: pulumi.Input<string>;
    /**
     * The private DNS name assigned to the instance. Can only be
     * used inside the Amazon EC2, and only available if you've enabled DNS hostnames
     * for your VPC
     */
    readonly privateDns?: pulumi.Input<string>;
    /**
     * Private IP address to associate with the
     * instance in a VPC.
     */
    readonly privateIp?: pulumi.Input<string>;
    /**
     * The public DNS name assigned to the instance. For EC2-VPC, this
     * is only available if you've enabled DNS hostnames for your VPC
     */
    readonly publicDns?: pulumi.Input<string>;
    /**
     * The public IP address assigned to the instance, if applicable.
     */
    readonly publicIp?: pulumi.Input<string>;
    /**
     * Customize details about the root block
     * device of the instance. See Block Devices below for details.
     */
    readonly rootBlockDevice?: pulumi.Input<{ deleteOnTermination?: pulumi.Input<boolean>, iops?: pulumi.Input<number>, volumeId?: pulumi.Input<string>, volumeSize?: pulumi.Input<number>, volumeType?: pulumi.Input<string> }>;
    /**
     * A list of security group names (EC2-Classic) or IDs (default VPC) to associate with.
     */
    readonly securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Controls if traffic is routed to the instance when
     * the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
     */
    readonly sourceDestCheck?: pulumi.Input<boolean>;
    /**
     * The current [bid
     * status](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html)
     * of the Spot Instance Request.
     * * `spot_request_state` The current [request
     * state](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html#creating-spot-request-status)
     * of the Spot Instance Request.
     */
    readonly spotBidStatus?: pulumi.Input<string>;
    /**
     * The Instance ID (if any) that is currently fulfilling
     * the Spot Instance request.
     */
    readonly spotInstanceId?: pulumi.Input<string>;
    /**
     * The maximum price to request on the spot market.
     */
    readonly spotPrice?: pulumi.Input<string>;
    readonly spotRequestState?: pulumi.Input<string>;
    /**
     * If set to `one-time`, after
     * the instance is terminated, the spot request will be closed.
     */
    readonly spotType?: pulumi.Input<string>;
    /**
     * The VPC Subnet ID to launch in.
     */
    readonly subnetId?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware. The host tenancy is not supported for the import-instance command.
     */
    readonly tenancy?: pulumi.Input<string>;
    /**
     * The user data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see `user_data_base64` instead.
     */
    readonly userData?: pulumi.Input<string>;
    /**
     * Can be used instead of `user_data` to pass base64-encoded binary data directly. Use this instead of `user_data` whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption.
     */
    readonly userDataBase64?: pulumi.Input<string>;
    /**
     * The start date and time of the request, in UTC [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.8) format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
     */
    readonly validFrom?: pulumi.Input<string>;
    /**
     * The end date and time of the request, in UTC [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.8) format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request. The default end date is 7 days from the current date.
     */
    readonly validUntil?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the devices created by the instance at launch time.
     */
    readonly volumeTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * A list of security group IDs to associate with.
     */
    readonly vpcSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If set, Terraform will
     * wait for the Spot Request to be fulfilled, and will throw an error if the
     * timeout of 10m is reached.
     */
    readonly waitForFulfillment?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a SpotInstanceRequest resource.
 */
export interface SpotInstanceRequestArgs {
    /**
     * The AMI to use for the instance.
     */
    readonly ami: pulumi.Input<string>;
    /**
     * Associate a public ip address with an instance in a VPC.  Boolean value.
     */
    readonly associatePublicIpAddress?: pulumi.Input<boolean>;
    /**
     * The AZ to start the instance in.
     */
    readonly availabilityZone?: pulumi.Input<string>;
    /**
     * The required duration for the Spot instances, in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).
     * The duration period starts as soon as your Spot instance receives its instance ID. At the end of the duration period, Amazon EC2 marks the Spot instance for termination and provides a Spot instance termination notice, which gives the instance a two-minute warning before it terminates.
     * Note that you can't specify an Availability Zone group or a launch group if you specify a duration.
     */
    readonly blockDurationMinutes?: pulumi.Input<number>;
    /**
     * Sets the number of CPU cores for an instance. This option is
     * only supported on creation of instance type that support CPU Options
     * [CPU Cores and Threads Per CPU Core Per Instance Type](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html#cpu-options-supported-instances-values) - specifying this option for unsupported instance types will return an error from the EC2 API.
     */
    readonly cpuCoreCount?: pulumi.Input<number>;
    /**
     * If set to to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See [Optimizing CPU Options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) for more information.
     */
    readonly cpuThreadsPerCore?: pulumi.Input<number>;
    /**
     * Customize the credit specification of the instance. See Credit Specification below for more details.
     */
    readonly creditSpecification?: pulumi.Input<{ cpuCredits?: pulumi.Input<string> }>;
    /**
     * If true, enables [EC2 Instance
     * Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination)
     */
    readonly disableApiTermination?: pulumi.Input<boolean>;
    /**
     * Additional EBS block devices to attach to the
     * instance.  Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection.
     */
    readonly ebsBlockDevices?: pulumi.Input<pulumi.Input<{ deleteOnTermination?: pulumi.Input<boolean>, deviceName: pulumi.Input<string>, encrypted?: pulumi.Input<boolean>, iops?: pulumi.Input<number>, snapshotId?: pulumi.Input<string>, volumeId?: pulumi.Input<string>, volumeSize?: pulumi.Input<number>, volumeType?: pulumi.Input<string> }>[]>;
    /**
     * If true, the launched EC2 instance will be EBS-optimized.
     * Note that if this is not set on an instance type that is optimized by default then
     * this will show as disabled but if the instance type is optimized by default then
     * there is no need to set this and there is no effect to disabling it.
     * See the [EBS Optimized section](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html) of the AWS User Guide for more information.
     */
    readonly ebsOptimized?: pulumi.Input<boolean>;
    /**
     * Customize Ephemeral (also known as
     * "Instance Store") volumes on the instance. See Block Devices below for details.
     */
    readonly ephemeralBlockDevices?: pulumi.Input<pulumi.Input<{ deviceName: pulumi.Input<string>, noDevice?: pulumi.Input<boolean>, virtualName?: pulumi.Input<string> }>[]>;
    /**
     * If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `password_data` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
     */
    readonly getPasswordData?: pulumi.Input<boolean>;
    /**
     * The Id of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host.
     */
    readonly hostId?: pulumi.Input<string>;
    /**
     * The IAM Instance Profile to
     * launch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the [EC2 documentation](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html#roles-usingrole-ec2instance-permissions), notably `iam:PassRole`.
     * * `ipv6_address_count`- (Optional) A number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
     */
    readonly iamInstanceProfile?: pulumi.Input<string>;
    /**
     * Shutdown behavior for the
     * instance. Amazon defaults this to `stop` for EBS-backed instances and
     * `terminate` for instance-store instances. Cannot be set on instance-store
     * instances. See [Shutdown Behavior](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingInstanceInitiatedShutdownBehavior) for more information.
     */
    readonly instanceInitiatedShutdownBehavior?: pulumi.Input<string>;
    /**
     * Indicates whether a Spot instance stops or terminates when it is interrupted. Default is `terminate` as this is the current AWS behaviour.
     */
    readonly instanceInterruptionBehaviour?: pulumi.Input<string>;
    /**
     * The type of instance to start. Updates to this field will trigger a stop/start of the EC2 instance.
     */
    readonly instanceType: pulumi.Input<string>;
    readonly ipv6AddressCount?: pulumi.Input<number>;
    /**
     * Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
     */
    readonly ipv6Addresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The key name of the Key Pair to use for the instance; which can be managed using the `aws_key_pair` resource.
     */
    readonly keyName?: pulumi.Input<string>;
    /**
     * A launch group is a group of spot instances that launch together and terminate together.
     * If left empty instances are launched and terminated individually.
     */
    readonly launchGroup?: pulumi.Input<string>;
    /**
     * If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
     */
    readonly monitoring?: pulumi.Input<boolean>;
    /**
     * Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.
     */
    readonly networkInterfaces?: pulumi.Input<pulumi.Input<{ deleteOnTermination?: pulumi.Input<boolean>, deviceIndex: pulumi.Input<number>, networkInterfaceId: pulumi.Input<string> }>[]>;
    /**
     * The Placement Group to start the instance in.
     */
    readonly placementGroup?: pulumi.Input<string>;
    /**
     * Private IP address to associate with the
     * instance in a VPC.
     */
    readonly privateIp?: pulumi.Input<string>;
    /**
     * Customize details about the root block
     * device of the instance. See Block Devices below for details.
     */
    readonly rootBlockDevice?: pulumi.Input<{ deleteOnTermination?: pulumi.Input<boolean>, iops?: pulumi.Input<number>, volumeId?: pulumi.Input<string>, volumeSize?: pulumi.Input<number>, volumeType?: pulumi.Input<string> }>;
    /**
     * A list of security group names (EC2-Classic) or IDs (default VPC) to associate with.
     */
    readonly securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Controls if traffic is routed to the instance when
     * the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
     */
    readonly sourceDestCheck?: pulumi.Input<boolean>;
    /**
     * The maximum price to request on the spot market.
     */
    readonly spotPrice?: pulumi.Input<string>;
    /**
     * If set to `one-time`, after
     * the instance is terminated, the spot request will be closed.
     */
    readonly spotType?: pulumi.Input<string>;
    /**
     * The VPC Subnet ID to launch in.
     */
    readonly subnetId?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware. The host tenancy is not supported for the import-instance command.
     */
    readonly tenancy?: pulumi.Input<string>;
    /**
     * The user data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see `user_data_base64` instead.
     */
    readonly userData?: pulumi.Input<string>;
    /**
     * Can be used instead of `user_data` to pass base64-encoded binary data directly. Use this instead of `user_data` whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption.
     */
    readonly userDataBase64?: pulumi.Input<string>;
    /**
     * The start date and time of the request, in UTC [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.8) format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
     */
    readonly validFrom?: pulumi.Input<string>;
    /**
     * The end date and time of the request, in UTC [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.8) format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request. The default end date is 7 days from the current date.
     */
    readonly validUntil?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the devices created by the instance at launch time.
     */
    readonly volumeTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * A list of security group IDs to associate with.
     */
    readonly vpcSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If set, Terraform will
     * wait for the Spot Request to be fulfilled, and will throw an error if the
     * timeout of 10m is reached.
     */
    readonly waitForFulfillment?: pulumi.Input<boolean>;
}
