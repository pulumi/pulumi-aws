// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS VPC Block Public Access Options.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.ec2.VpcBlockPublicAccessOptions("example", {internetGatewayBlockMode: "block-bidirectional"});
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import VPC Block Public Access Options using the `aws_region`. For example:
 *
 * ```sh
 * $ pulumi import aws:ec2/vpcBlockPublicAccessOptions:VpcBlockPublicAccessOptions example us-east-1
 * ```
 */
export class VpcBlockPublicAccessOptions extends pulumi.CustomResource {
    /**
     * Get an existing VpcBlockPublicAccessOptions resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpcBlockPublicAccessOptionsState, opts?: pulumi.CustomResourceOptions): VpcBlockPublicAccessOptions {
        return new VpcBlockPublicAccessOptions(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:ec2/vpcBlockPublicAccessOptions:VpcBlockPublicAccessOptions';

    /**
     * Returns true if the given object is an instance of VpcBlockPublicAccessOptions.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpcBlockPublicAccessOptions {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpcBlockPublicAccessOptions.__pulumiType;
    }

    /**
     * The AWS account id to which these options apply.
     */
    public /*out*/ readonly awsAccountId!: pulumi.Output<string>;
    /**
     * The AWS region to which these options apply.
     */
    public /*out*/ readonly awsRegion!: pulumi.Output<string>;
    /**
     * Block mode. Needs to be one of `block-bidirectional`, `block-ingress`, `off`. If this resource is deleted, then this value will be set to `off` in the AWS account and region.
     */
    public readonly internetGatewayBlockMode!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.ec2.VpcBlockPublicAccessOptionsTimeouts | undefined>;

    /**
     * Create a VpcBlockPublicAccessOptions resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpcBlockPublicAccessOptionsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpcBlockPublicAccessOptionsArgs | VpcBlockPublicAccessOptionsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpcBlockPublicAccessOptionsState | undefined;
            resourceInputs["awsAccountId"] = state ? state.awsAccountId : undefined;
            resourceInputs["awsRegion"] = state ? state.awsRegion : undefined;
            resourceInputs["internetGatewayBlockMode"] = state ? state.internetGatewayBlockMode : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as VpcBlockPublicAccessOptionsArgs | undefined;
            if ((!args || args.internetGatewayBlockMode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'internetGatewayBlockMode'");
            }
            resourceInputs["internetGatewayBlockMode"] = args ? args.internetGatewayBlockMode : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["awsAccountId"] = undefined /*out*/;
            resourceInputs["awsRegion"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VpcBlockPublicAccessOptions.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VpcBlockPublicAccessOptions resources.
 */
export interface VpcBlockPublicAccessOptionsState {
    /**
     * The AWS account id to which these options apply.
     */
    awsAccountId?: pulumi.Input<string>;
    /**
     * The AWS region to which these options apply.
     */
    awsRegion?: pulumi.Input<string>;
    /**
     * Block mode. Needs to be one of `block-bidirectional`, `block-ingress`, `off`. If this resource is deleted, then this value will be set to `off` in the AWS account and region.
     */
    internetGatewayBlockMode?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ec2.VpcBlockPublicAccessOptionsTimeouts>;
}

/**
 * The set of arguments for constructing a VpcBlockPublicAccessOptions resource.
 */
export interface VpcBlockPublicAccessOptionsArgs {
    /**
     * Block mode. Needs to be one of `block-bidirectional`, `block-ingress`, `off`. If this resource is deleted, then this value will be set to `off` in the AWS account and region.
     */
    internetGatewayBlockMode: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ec2.VpcBlockPublicAccessOptionsTimeouts>;
}
