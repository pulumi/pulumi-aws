// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getManagedPrefixList(args?: GetManagedPrefixListArgs, opts?: pulumi.InvokeOptions): Promise<GetManagedPrefixListResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:ec2/getManagedPrefixList:getManagedPrefixList", {
        "filters": args.filters,
        "id": args.id,
        "name": args.name,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getManagedPrefixList.
 */
export interface GetManagedPrefixListArgs {
    filters?: inputs.ec2.GetManagedPrefixListFilter[];
    id?: string;
    name?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getManagedPrefixList.
 */
export interface GetManagedPrefixListResult {
    readonly addressFamily: string;
    readonly arn: string;
    readonly entries: outputs.ec2.GetManagedPrefixListEntry[];
    readonly filters?: outputs.ec2.GetManagedPrefixListFilter[];
    readonly id: string;
    readonly maxEntries: number;
    readonly name: string;
    readonly ownerId: string;
    readonly tags: {[key: string]: string};
    readonly version: number;
}
export function getManagedPrefixListOutput(args?: GetManagedPrefixListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagedPrefixListResult> {
    return pulumi.output(args).apply((a: any) => getManagedPrefixList(a, opts))
}

/**
 * A collection of arguments for invoking getManagedPrefixList.
 */
export interface GetManagedPrefixListOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.ec2.GetManagedPrefixListFilterArgs>[]>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
