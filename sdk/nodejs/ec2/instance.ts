// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

import {InstanceProfile} from "../iam";

export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceState, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:ec2/instance:Instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }

    public readonly ami!: pulumi.Output<string>;
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly associatePublicIpAddress!: pulumi.Output<boolean>;
    public readonly availabilityZone!: pulumi.Output<string>;
    public readonly capacityReservationSpecification!: pulumi.Output<outputs.ec2.InstanceCapacityReservationSpecification>;
    public readonly cpuCoreCount!: pulumi.Output<number>;
    public readonly cpuThreadsPerCore!: pulumi.Output<number>;
    public readonly creditSpecification!: pulumi.Output<outputs.ec2.InstanceCreditSpecification | undefined>;
    public readonly disableApiStop!: pulumi.Output<boolean>;
    public readonly disableApiTermination!: pulumi.Output<boolean>;
    public readonly ebsBlockDevices!: pulumi.Output<outputs.ec2.InstanceEbsBlockDevice[]>;
    public readonly ebsOptimized!: pulumi.Output<boolean>;
    public readonly enclaveOptions!: pulumi.Output<outputs.ec2.InstanceEnclaveOptions>;
    public readonly ephemeralBlockDevices!: pulumi.Output<outputs.ec2.InstanceEphemeralBlockDevice[]>;
    public readonly getPasswordData!: pulumi.Output<boolean | undefined>;
    public readonly hibernation!: pulumi.Output<boolean | undefined>;
    public readonly hostId!: pulumi.Output<string>;
    public readonly hostResourceGroupArn!: pulumi.Output<string>;
    public readonly iamInstanceProfile!: pulumi.Output<string>;
    public readonly instanceInitiatedShutdownBehavior!: pulumi.Output<string>;
    public /*out*/ readonly instanceState!: pulumi.Output<string>;
    public readonly instanceType!: pulumi.Output<string>;
    public readonly ipv6AddressCount!: pulumi.Output<number>;
    public readonly ipv6Addresses!: pulumi.Output<string[]>;
    public readonly keyName!: pulumi.Output<string>;
    public readonly launchTemplate!: pulumi.Output<outputs.ec2.InstanceLaunchTemplate | undefined>;
    public readonly maintenanceOptions!: pulumi.Output<outputs.ec2.InstanceMaintenanceOptions>;
    public readonly metadataOptions!: pulumi.Output<outputs.ec2.InstanceMetadataOptions>;
    public readonly monitoring!: pulumi.Output<boolean>;
    public readonly networkInterfaces!: pulumi.Output<outputs.ec2.InstanceNetworkInterface[]>;
    public /*out*/ readonly outpostArn!: pulumi.Output<string>;
    public /*out*/ readonly passwordData!: pulumi.Output<string>;
    public readonly placementGroup!: pulumi.Output<string>;
    public readonly placementPartitionNumber!: pulumi.Output<number>;
    public /*out*/ readonly primaryNetworkInterfaceId!: pulumi.Output<string>;
    public /*out*/ readonly privateDns!: pulumi.Output<string>;
    public readonly privateDnsNameOptions!: pulumi.Output<outputs.ec2.InstancePrivateDnsNameOptions>;
    public readonly privateIp!: pulumi.Output<string>;
    public /*out*/ readonly publicDns!: pulumi.Output<string>;
    public /*out*/ readonly publicIp!: pulumi.Output<string>;
    public readonly rootBlockDevice!: pulumi.Output<outputs.ec2.InstanceRootBlockDevice>;
    public readonly secondaryPrivateIps!: pulumi.Output<string[]>;
    /**
     * @deprecated Use of `securityGroups` is discouraged as it does not allow for changes and will force your instance to be replaced if changes are made. To avoid this, use `vpcSecurityGroupIds` which allows for updates.
     */
    public readonly securityGroups!: pulumi.Output<string[]>;
    public readonly sourceDestCheck!: pulumi.Output<boolean | undefined>;
    public readonly subnetId!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    public readonly tenancy!: pulumi.Output<string>;
    public readonly userData!: pulumi.Output<string>;
    public readonly userDataBase64!: pulumi.Output<string>;
    public readonly userDataReplaceOnChange!: pulumi.Output<boolean | undefined>;
    public readonly volumeTags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly vpcSecurityGroupIds!: pulumi.Output<string[]>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: InstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceArgs | InstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceState | undefined;
            resourceInputs["ami"] = state ? state.ami : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["associatePublicIpAddress"] = state ? state.associatePublicIpAddress : undefined;
            resourceInputs["availabilityZone"] = state ? state.availabilityZone : undefined;
            resourceInputs["capacityReservationSpecification"] = state ? state.capacityReservationSpecification : undefined;
            resourceInputs["cpuCoreCount"] = state ? state.cpuCoreCount : undefined;
            resourceInputs["cpuThreadsPerCore"] = state ? state.cpuThreadsPerCore : undefined;
            resourceInputs["creditSpecification"] = state ? state.creditSpecification : undefined;
            resourceInputs["disableApiStop"] = state ? state.disableApiStop : undefined;
            resourceInputs["disableApiTermination"] = state ? state.disableApiTermination : undefined;
            resourceInputs["ebsBlockDevices"] = state ? state.ebsBlockDevices : undefined;
            resourceInputs["ebsOptimized"] = state ? state.ebsOptimized : undefined;
            resourceInputs["enclaveOptions"] = state ? state.enclaveOptions : undefined;
            resourceInputs["ephemeralBlockDevices"] = state ? state.ephemeralBlockDevices : undefined;
            resourceInputs["getPasswordData"] = state ? state.getPasswordData : undefined;
            resourceInputs["hibernation"] = state ? state.hibernation : undefined;
            resourceInputs["hostId"] = state ? state.hostId : undefined;
            resourceInputs["hostResourceGroupArn"] = state ? state.hostResourceGroupArn : undefined;
            resourceInputs["iamInstanceProfile"] = state ? state.iamInstanceProfile : undefined;
            resourceInputs["instanceInitiatedShutdownBehavior"] = state ? state.instanceInitiatedShutdownBehavior : undefined;
            resourceInputs["instanceState"] = state ? state.instanceState : undefined;
            resourceInputs["instanceType"] = state ? state.instanceType : undefined;
            resourceInputs["ipv6AddressCount"] = state ? state.ipv6AddressCount : undefined;
            resourceInputs["ipv6Addresses"] = state ? state.ipv6Addresses : undefined;
            resourceInputs["keyName"] = state ? state.keyName : undefined;
            resourceInputs["launchTemplate"] = state ? state.launchTemplate : undefined;
            resourceInputs["maintenanceOptions"] = state ? state.maintenanceOptions : undefined;
            resourceInputs["metadataOptions"] = state ? state.metadataOptions : undefined;
            resourceInputs["monitoring"] = state ? state.monitoring : undefined;
            resourceInputs["networkInterfaces"] = state ? state.networkInterfaces : undefined;
            resourceInputs["outpostArn"] = state ? state.outpostArn : undefined;
            resourceInputs["passwordData"] = state ? state.passwordData : undefined;
            resourceInputs["placementGroup"] = state ? state.placementGroup : undefined;
            resourceInputs["placementPartitionNumber"] = state ? state.placementPartitionNumber : undefined;
            resourceInputs["primaryNetworkInterfaceId"] = state ? state.primaryNetworkInterfaceId : undefined;
            resourceInputs["privateDns"] = state ? state.privateDns : undefined;
            resourceInputs["privateDnsNameOptions"] = state ? state.privateDnsNameOptions : undefined;
            resourceInputs["privateIp"] = state ? state.privateIp : undefined;
            resourceInputs["publicDns"] = state ? state.publicDns : undefined;
            resourceInputs["publicIp"] = state ? state.publicIp : undefined;
            resourceInputs["rootBlockDevice"] = state ? state.rootBlockDevice : undefined;
            resourceInputs["secondaryPrivateIps"] = state ? state.secondaryPrivateIps : undefined;
            resourceInputs["securityGroups"] = state ? state.securityGroups : undefined;
            resourceInputs["sourceDestCheck"] = state ? state.sourceDestCheck : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["tenancy"] = state ? state.tenancy : undefined;
            resourceInputs["userData"] = state ? state.userData : undefined;
            resourceInputs["userDataBase64"] = state ? state.userDataBase64 : undefined;
            resourceInputs["userDataReplaceOnChange"] = state ? state.userDataReplaceOnChange : undefined;
            resourceInputs["volumeTags"] = state ? state.volumeTags : undefined;
            resourceInputs["vpcSecurityGroupIds"] = state ? state.vpcSecurityGroupIds : undefined;
        } else {
            const args = argsOrState as InstanceArgs | undefined;
            resourceInputs["ami"] = args ? args.ami : undefined;
            resourceInputs["associatePublicIpAddress"] = args ? args.associatePublicIpAddress : undefined;
            resourceInputs["availabilityZone"] = args ? args.availabilityZone : undefined;
            resourceInputs["capacityReservationSpecification"] = args ? args.capacityReservationSpecification : undefined;
            resourceInputs["cpuCoreCount"] = args ? args.cpuCoreCount : undefined;
            resourceInputs["cpuThreadsPerCore"] = args ? args.cpuThreadsPerCore : undefined;
            resourceInputs["creditSpecification"] = args ? args.creditSpecification : undefined;
            resourceInputs["disableApiStop"] = args ? args.disableApiStop : undefined;
            resourceInputs["disableApiTermination"] = args ? args.disableApiTermination : undefined;
            resourceInputs["ebsBlockDevices"] = args ? args.ebsBlockDevices : undefined;
            resourceInputs["ebsOptimized"] = args ? args.ebsOptimized : undefined;
            resourceInputs["enclaveOptions"] = args ? args.enclaveOptions : undefined;
            resourceInputs["ephemeralBlockDevices"] = args ? args.ephemeralBlockDevices : undefined;
            resourceInputs["getPasswordData"] = args ? args.getPasswordData : undefined;
            resourceInputs["hibernation"] = args ? args.hibernation : undefined;
            resourceInputs["hostId"] = args ? args.hostId : undefined;
            resourceInputs["hostResourceGroupArn"] = args ? args.hostResourceGroupArn : undefined;
            resourceInputs["iamInstanceProfile"] = args ? args.iamInstanceProfile : undefined;
            resourceInputs["instanceInitiatedShutdownBehavior"] = args ? args.instanceInitiatedShutdownBehavior : undefined;
            resourceInputs["instanceType"] = args ? args.instanceType : undefined;
            resourceInputs["ipv6AddressCount"] = args ? args.ipv6AddressCount : undefined;
            resourceInputs["ipv6Addresses"] = args ? args.ipv6Addresses : undefined;
            resourceInputs["keyName"] = args ? args.keyName : undefined;
            resourceInputs["launchTemplate"] = args ? args.launchTemplate : undefined;
            resourceInputs["maintenanceOptions"] = args ? args.maintenanceOptions : undefined;
            resourceInputs["metadataOptions"] = args ? args.metadataOptions : undefined;
            resourceInputs["monitoring"] = args ? args.monitoring : undefined;
            resourceInputs["networkInterfaces"] = args ? args.networkInterfaces : undefined;
            resourceInputs["placementGroup"] = args ? args.placementGroup : undefined;
            resourceInputs["placementPartitionNumber"] = args ? args.placementPartitionNumber : undefined;
            resourceInputs["privateDnsNameOptions"] = args ? args.privateDnsNameOptions : undefined;
            resourceInputs["privateIp"] = args ? args.privateIp : undefined;
            resourceInputs["rootBlockDevice"] = args ? args.rootBlockDevice : undefined;
            resourceInputs["secondaryPrivateIps"] = args ? args.secondaryPrivateIps : undefined;
            resourceInputs["securityGroups"] = args ? args.securityGroups : undefined;
            resourceInputs["sourceDestCheck"] = args ? args.sourceDestCheck : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tenancy"] = args ? args.tenancy : undefined;
            resourceInputs["userData"] = args ? args.userData : undefined;
            resourceInputs["userDataBase64"] = args ? args.userDataBase64 : undefined;
            resourceInputs["userDataReplaceOnChange"] = args ? args.userDataReplaceOnChange : undefined;
            resourceInputs["volumeTags"] = args ? args.volumeTags : undefined;
            resourceInputs["vpcSecurityGroupIds"] = args ? args.vpcSecurityGroupIds : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["instanceState"] = undefined /*out*/;
            resourceInputs["outpostArn"] = undefined /*out*/;
            resourceInputs["passwordData"] = undefined /*out*/;
            resourceInputs["primaryNetworkInterfaceId"] = undefined /*out*/;
            resourceInputs["privateDns"] = undefined /*out*/;
            resourceInputs["publicDns"] = undefined /*out*/;
            resourceInputs["publicIp"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Instance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Instance resources.
 */
export interface InstanceState {
    ami?: pulumi.Input<string>;
    arn?: pulumi.Input<string>;
    associatePublicIpAddress?: pulumi.Input<boolean>;
    availabilityZone?: pulumi.Input<string>;
    capacityReservationSpecification?: pulumi.Input<inputs.ec2.InstanceCapacityReservationSpecification>;
    cpuCoreCount?: pulumi.Input<number>;
    cpuThreadsPerCore?: pulumi.Input<number>;
    creditSpecification?: pulumi.Input<inputs.ec2.InstanceCreditSpecification>;
    disableApiStop?: pulumi.Input<boolean>;
    disableApiTermination?: pulumi.Input<boolean>;
    ebsBlockDevices?: pulumi.Input<pulumi.Input<inputs.ec2.InstanceEbsBlockDevice>[]>;
    ebsOptimized?: pulumi.Input<boolean>;
    enclaveOptions?: pulumi.Input<inputs.ec2.InstanceEnclaveOptions>;
    ephemeralBlockDevices?: pulumi.Input<pulumi.Input<inputs.ec2.InstanceEphemeralBlockDevice>[]>;
    getPasswordData?: pulumi.Input<boolean>;
    hibernation?: pulumi.Input<boolean>;
    hostId?: pulumi.Input<string>;
    hostResourceGroupArn?: pulumi.Input<string>;
    iamInstanceProfile?: pulumi.Input<string | InstanceProfile>;
    instanceInitiatedShutdownBehavior?: pulumi.Input<string>;
    instanceState?: pulumi.Input<string>;
    instanceType?: pulumi.Input<string | enums.ec2.InstanceType>;
    ipv6AddressCount?: pulumi.Input<number>;
    ipv6Addresses?: pulumi.Input<pulumi.Input<string>[]>;
    keyName?: pulumi.Input<string>;
    launchTemplate?: pulumi.Input<inputs.ec2.InstanceLaunchTemplate>;
    maintenanceOptions?: pulumi.Input<inputs.ec2.InstanceMaintenanceOptions>;
    metadataOptions?: pulumi.Input<inputs.ec2.InstanceMetadataOptions>;
    monitoring?: pulumi.Input<boolean>;
    networkInterfaces?: pulumi.Input<pulumi.Input<inputs.ec2.InstanceNetworkInterface>[]>;
    outpostArn?: pulumi.Input<string>;
    passwordData?: pulumi.Input<string>;
    placementGroup?: pulumi.Input<string>;
    placementPartitionNumber?: pulumi.Input<number>;
    primaryNetworkInterfaceId?: pulumi.Input<string>;
    privateDns?: pulumi.Input<string>;
    privateDnsNameOptions?: pulumi.Input<inputs.ec2.InstancePrivateDnsNameOptions>;
    privateIp?: pulumi.Input<string>;
    publicDns?: pulumi.Input<string>;
    publicIp?: pulumi.Input<string>;
    rootBlockDevice?: pulumi.Input<inputs.ec2.InstanceRootBlockDevice>;
    secondaryPrivateIps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated Use of `securityGroups` is discouraged as it does not allow for changes and will force your instance to be replaced if changes are made. To avoid this, use `vpcSecurityGroupIds` which allows for updates.
     */
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    sourceDestCheck?: pulumi.Input<boolean>;
    subnetId?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tenancy?: pulumi.Input<string | enums.ec2.Tenancy>;
    userData?: pulumi.Input<string>;
    userDataBase64?: pulumi.Input<string>;
    userDataReplaceOnChange?: pulumi.Input<boolean>;
    volumeTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    vpcSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    ami?: pulumi.Input<string>;
    associatePublicIpAddress?: pulumi.Input<boolean>;
    availabilityZone?: pulumi.Input<string>;
    capacityReservationSpecification?: pulumi.Input<inputs.ec2.InstanceCapacityReservationSpecification>;
    cpuCoreCount?: pulumi.Input<number>;
    cpuThreadsPerCore?: pulumi.Input<number>;
    creditSpecification?: pulumi.Input<inputs.ec2.InstanceCreditSpecification>;
    disableApiStop?: pulumi.Input<boolean>;
    disableApiTermination?: pulumi.Input<boolean>;
    ebsBlockDevices?: pulumi.Input<pulumi.Input<inputs.ec2.InstanceEbsBlockDevice>[]>;
    ebsOptimized?: pulumi.Input<boolean>;
    enclaveOptions?: pulumi.Input<inputs.ec2.InstanceEnclaveOptions>;
    ephemeralBlockDevices?: pulumi.Input<pulumi.Input<inputs.ec2.InstanceEphemeralBlockDevice>[]>;
    getPasswordData?: pulumi.Input<boolean>;
    hibernation?: pulumi.Input<boolean>;
    hostId?: pulumi.Input<string>;
    hostResourceGroupArn?: pulumi.Input<string>;
    iamInstanceProfile?: pulumi.Input<string | InstanceProfile>;
    instanceInitiatedShutdownBehavior?: pulumi.Input<string>;
    instanceType?: pulumi.Input<string | enums.ec2.InstanceType>;
    ipv6AddressCount?: pulumi.Input<number>;
    ipv6Addresses?: pulumi.Input<pulumi.Input<string>[]>;
    keyName?: pulumi.Input<string>;
    launchTemplate?: pulumi.Input<inputs.ec2.InstanceLaunchTemplate>;
    maintenanceOptions?: pulumi.Input<inputs.ec2.InstanceMaintenanceOptions>;
    metadataOptions?: pulumi.Input<inputs.ec2.InstanceMetadataOptions>;
    monitoring?: pulumi.Input<boolean>;
    networkInterfaces?: pulumi.Input<pulumi.Input<inputs.ec2.InstanceNetworkInterface>[]>;
    placementGroup?: pulumi.Input<string>;
    placementPartitionNumber?: pulumi.Input<number>;
    privateDnsNameOptions?: pulumi.Input<inputs.ec2.InstancePrivateDnsNameOptions>;
    privateIp?: pulumi.Input<string>;
    rootBlockDevice?: pulumi.Input<inputs.ec2.InstanceRootBlockDevice>;
    secondaryPrivateIps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated Use of `securityGroups` is discouraged as it does not allow for changes and will force your instance to be replaced if changes are made. To avoid this, use `vpcSecurityGroupIds` which allows for updates.
     */
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    sourceDestCheck?: pulumi.Input<boolean>;
    subnetId?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tenancy?: pulumi.Input<string | enums.ec2.Tenancy>;
    userData?: pulumi.Input<string>;
    userDataBase64?: pulumi.Input<string>;
    userDataReplaceOnChange?: pulumi.Input<boolean>;
    volumeTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    vpcSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}
