// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Enables the IPAM Service and promotes a delegated administrator.
 *
 * ## Example Usage
 *
 * Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const delegated = aws.getCallerIdentity({});
 * const example = new aws.ec2.VpcIpamOrganizationAdminAccount("example", {delegatedAdminAccountId: delegated.then(delegated => delegated.accountId)});
 * const ipamDelegateAccount = new aws.Provider("ipamDelegateAccount", {});
 * // authentication arguments omitted
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import IPAMs using the delegate account `id`. For example:
 *
 * ```sh
 *  $ pulumi import aws:ec2/vpcIpamOrganizationAdminAccount:VpcIpamOrganizationAdminAccount example 12345678901
 * ```
 */
export class VpcIpamOrganizationAdminAccount extends pulumi.CustomResource {
    /**
     * Get an existing VpcIpamOrganizationAdminAccount resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpcIpamOrganizationAdminAccountState, opts?: pulumi.CustomResourceOptions): VpcIpamOrganizationAdminAccount {
        return new VpcIpamOrganizationAdminAccount(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:ec2/vpcIpamOrganizationAdminAccount:VpcIpamOrganizationAdminAccount';

    /**
     * Returns true if the given object is an instance of VpcIpamOrganizationAdminAccount.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpcIpamOrganizationAdminAccount {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpcIpamOrganizationAdminAccount.__pulumiType;
    }

    /**
     * The Organizations ARN for the delegate account.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly delegatedAdminAccountId!: pulumi.Output<string>;
    /**
     * The Organizations email for the delegate account.
     */
    public /*out*/ readonly email!: pulumi.Output<string>;
    /**
     * The Organizations name for the delegate account.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The AWS service principal.
     */
    public /*out*/ readonly servicePrincipal!: pulumi.Output<string>;

    /**
     * Create a VpcIpamOrganizationAdminAccount resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpcIpamOrganizationAdminAccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpcIpamOrganizationAdminAccountArgs | VpcIpamOrganizationAdminAccountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpcIpamOrganizationAdminAccountState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["delegatedAdminAccountId"] = state ? state.delegatedAdminAccountId : undefined;
            resourceInputs["email"] = state ? state.email : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["servicePrincipal"] = state ? state.servicePrincipal : undefined;
        } else {
            const args = argsOrState as VpcIpamOrganizationAdminAccountArgs | undefined;
            if ((!args || args.delegatedAdminAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'delegatedAdminAccountId'");
            }
            resourceInputs["delegatedAdminAccountId"] = args ? args.delegatedAdminAccountId : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["email"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["servicePrincipal"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VpcIpamOrganizationAdminAccount.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VpcIpamOrganizationAdminAccount resources.
 */
export interface VpcIpamOrganizationAdminAccountState {
    /**
     * The Organizations ARN for the delegate account.
     */
    arn?: pulumi.Input<string>;
    delegatedAdminAccountId?: pulumi.Input<string>;
    /**
     * The Organizations email for the delegate account.
     */
    email?: pulumi.Input<string>;
    /**
     * The Organizations name for the delegate account.
     */
    name?: pulumi.Input<string>;
    /**
     * The AWS service principal.
     */
    servicePrincipal?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VpcIpamOrganizationAdminAccount resource.
 */
export interface VpcIpamOrganizationAdminAccountArgs {
    delegatedAdminAccountId: pulumi.Input<string>;
}
