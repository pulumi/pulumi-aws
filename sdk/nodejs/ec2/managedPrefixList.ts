// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Provides a managed prefix list resource.
 *
 * > **NOTE on `maxEntries`:** When you reference a Prefix List in a resource,
 * the maximum number of entries for the prefix lists counts as the same number of rules
 * or entries for the resource. For example, if you create a prefix list with a maximum
 * of 20 entries and you reference that prefix list in a security group rule, this counts
 * as 20 rules for the security group.
 *
 * ## Example Usage
 *
 * Basic usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.ec2.ManagedPrefixList("example", {
 *     addressFamily: "IPv4",
 *     maxEntries: 5,
 *     entries: [
 *         {
 *             cidr: aws_vpc.example.cidr_block,
 *             description: "Primary",
 *         },
 *         {
 *             cidr: aws_vpc_ipv4_cidr_block_association.example.cidr_block,
 *             description: "Secondary",
 *         },
 *     ],
 *     tags: {
 *         Env: "live",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Prefix Lists can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import aws:ec2/managedPrefixList:ManagedPrefixList default pl-0570a1d2d725c16be
 * ```
 */
export class ManagedPrefixList extends pulumi.CustomResource {
    /**
     * Get an existing ManagedPrefixList resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagedPrefixListState, opts?: pulumi.CustomResourceOptions): ManagedPrefixList {
        return new ManagedPrefixList(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:ec2/managedPrefixList:ManagedPrefixList';

    /**
     * Returns true if the given object is an instance of ManagedPrefixList.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagedPrefixList {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagedPrefixList.__pulumiType;
    }

    /**
     * The address family (`IPv4` or `IPv6`) of
     * this prefix list.
     */
    public readonly addressFamily!: pulumi.Output<string>;
    /**
     * The ARN of the prefix list.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Can be specified multiple times for each prefix list entry.
     * Each entry block supports fields documented below. Different entries may have
     * overlapping CIDR blocks, but a particular CIDR should not be duplicated.
     */
    public readonly entries!: pulumi.Output<outputs.ec2.ManagedPrefixListEntry[] | undefined>;
    /**
     * The maximum number of entries that
     * this prefix list can contain.
     */
    public readonly maxEntries!: pulumi.Output<number>;
    /**
     * The name of this resource. The name must not start with `com.amazonaws`.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the AWS account that owns this prefix list.
     */
    public /*out*/ readonly ownerId!: pulumi.Output<string>;
    /**
     * A map of tags to assign to this resource.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The latest version of this prefix list.
     */
    public /*out*/ readonly version!: pulumi.Output<number>;

    /**
     * Create a ManagedPrefixList resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagedPrefixListArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ManagedPrefixListArgs | ManagedPrefixListState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ManagedPrefixListState | undefined;
            inputs["addressFamily"] = state ? state.addressFamily : undefined;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["entries"] = state ? state.entries : undefined;
            inputs["maxEntries"] = state ? state.maxEntries : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["ownerId"] = state ? state.ownerId : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as ManagedPrefixListArgs | undefined;
            if ((!args || args.addressFamily === undefined) && !opts.urn) {
                throw new Error("Missing required property 'addressFamily'");
            }
            if ((!args || args.maxEntries === undefined) && !opts.urn) {
                throw new Error("Missing required property 'maxEntries'");
            }
            inputs["addressFamily"] = args ? args.addressFamily : undefined;
            inputs["entries"] = args ? args.entries : undefined;
            inputs["maxEntries"] = args ? args.maxEntries : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["arn"] = undefined /*out*/;
            inputs["ownerId"] = undefined /*out*/;
            inputs["version"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(ManagedPrefixList.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ManagedPrefixList resources.
 */
export interface ManagedPrefixListState {
    /**
     * The address family (`IPv4` or `IPv6`) of
     * this prefix list.
     */
    readonly addressFamily?: pulumi.Input<string>;
    /**
     * The ARN of the prefix list.
     */
    readonly arn?: pulumi.Input<string>;
    /**
     * Can be specified multiple times for each prefix list entry.
     * Each entry block supports fields documented below. Different entries may have
     * overlapping CIDR blocks, but a particular CIDR should not be duplicated.
     */
    readonly entries?: pulumi.Input<pulumi.Input<inputs.ec2.ManagedPrefixListEntry>[]>;
    /**
     * The maximum number of entries that
     * this prefix list can contain.
     */
    readonly maxEntries?: pulumi.Input<number>;
    /**
     * The name of this resource. The name must not start with `com.amazonaws`.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The ID of the AWS account that owns this prefix list.
     */
    readonly ownerId?: pulumi.Input<string>;
    /**
     * A map of tags to assign to this resource.
     */
    readonly tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The latest version of this prefix list.
     */
    readonly version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ManagedPrefixList resource.
 */
export interface ManagedPrefixListArgs {
    /**
     * The address family (`IPv4` or `IPv6`) of
     * this prefix list.
     */
    readonly addressFamily: pulumi.Input<string>;
    /**
     * Can be specified multiple times for each prefix list entry.
     * Each entry block supports fields documented below. Different entries may have
     * overlapping CIDR blocks, but a particular CIDR should not be duplicated.
     */
    readonly entries?: pulumi.Input<pulumi.Input<inputs.ec2.ManagedPrefixListEntry>[]>;
    /**
     * The maximum number of entries that
     * this prefix list can contain.
     */
    readonly maxEntries: pulumi.Input<number>;
    /**
     * The name of this resource. The name must not start with `com.amazonaws`.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * A map of tags to assign to this resource.
     */
    readonly tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
