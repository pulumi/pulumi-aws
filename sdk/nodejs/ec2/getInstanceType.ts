// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getInstanceType(args: GetInstanceTypeArgs, opts?: pulumi.InvokeOptions): Promise<GetInstanceTypeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:ec2/getInstanceType:getInstanceType", {
        "instanceType": args.instanceType,
    }, opts);
}

/**
 * A collection of arguments for invoking getInstanceType.
 */
export interface GetInstanceTypeArgs {
    instanceType: string;
}

/**
 * A collection of values returned by getInstanceType.
 */
export interface GetInstanceTypeResult {
    readonly autoRecoverySupported: boolean;
    readonly bareMetal: boolean;
    readonly burstablePerformanceSupported: boolean;
    readonly currentGeneration: boolean;
    readonly dedicatedHostsSupported: boolean;
    readonly defaultCores: number;
    readonly defaultThreadsPerCore: number;
    readonly defaultVcpus: number;
    readonly ebsEncryptionSupport: string;
    readonly ebsNvmeSupport: string;
    readonly ebsOptimizedSupport: string;
    readonly ebsPerformanceBaselineBandwidth: number;
    readonly ebsPerformanceBaselineIops: number;
    readonly ebsPerformanceBaselineThroughput: number;
    readonly ebsPerformanceMaximumBandwidth: number;
    readonly ebsPerformanceMaximumIops: number;
    readonly ebsPerformanceMaximumThroughput: number;
    readonly efaSupported: boolean;
    readonly enaSupport: string;
    readonly encryptionInTransitSupported: boolean;
    readonly fpgas: outputs.ec2.GetInstanceTypeFpga[];
    readonly freeTierEligible: boolean;
    readonly gpuses: outputs.ec2.GetInstanceTypeGpus[];
    readonly hibernationSupported: boolean;
    readonly hypervisor: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly inferenceAccelerators: outputs.ec2.GetInstanceTypeInferenceAccelerator[];
    readonly instanceDisks: outputs.ec2.GetInstanceTypeInstanceDisk[];
    readonly instanceStorageSupported: boolean;
    readonly instanceType: string;
    readonly ipv6Supported: boolean;
    readonly maximumIpv4AddressesPerInterface: number;
    readonly maximumIpv6AddressesPerInterface: number;
    readonly maximumNetworkInterfaces: number;
    readonly memorySize: number;
    readonly networkPerformance: string;
    readonly supportedArchitectures: string[];
    readonly supportedPlacementStrategies: string[];
    readonly supportedRootDeviceTypes: string[];
    readonly supportedUsagesClasses: string[];
    readonly supportedVirtualizationTypes: string[];
    readonly sustainedClockSpeed: number;
    readonly totalFpgaMemory: number;
    readonly totalGpuMemory: number;
    readonly totalInstanceStorage: number;
    readonly validCores: number[];
    readonly validThreadsPerCores: number[];
}
export function getInstanceTypeOutput(args: GetInstanceTypeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInstanceTypeResult> {
    return pulumi.output(args).apply((a: any) => getInstanceType(a, opts))
}

/**
 * A collection of arguments for invoking getInstanceType.
 */
export interface GetInstanceTypeOutputArgs {
    instanceType: pulumi.Input<string>;
}
