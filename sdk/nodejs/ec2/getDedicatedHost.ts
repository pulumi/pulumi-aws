// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to get information about the host when allocating an EC2 Dedicated Host.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.ec2.DedicatedHost("test", {
 *     autoPlacement: "on",
 *     availabilityZone: "us-west-1a",
 *     hostRecovery: "on",
 *     instanceType: "c5.18xlarge",
 * });
 * const testData = test.id.apply(id => aws.ec2.getDedicatedHost({
 *     hostId: id,
 * }, { async: true }));
 * ```
 */
export function getDedicatedHost(args: GetDedicatedHostArgs, opts?: pulumi.InvokeOptions): Promise<GetDedicatedHostResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("aws:ec2/getDedicatedHost:getDedicatedHost", {
        "hostId": args.hostId,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getDedicatedHost.
 */
export interface GetDedicatedHostArgs {
    /**
     * The host ID.
     */
    readonly hostId: string;
    readonly tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getDedicatedHost.
 */
export interface GetDedicatedHostResult {
    readonly autoPlacement: string;
    readonly availabilityZone: string;
    /**
     * The number of cores on the Dedicated Host.
     */
    readonly cores: number;
    /**
     * The host ID.
     */
    readonly hostId: string;
    readonly hostRecovery: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The instance family supported by the Dedicated Host. For example, m5.
     * * `instanceType` -The instance type supported by the Dedicated Host. For example, m5.large. If the host supports multiple instance types, no instanceType is returned.
     */
    readonly instanceFamily: string;
    readonly instanceState: string;
    readonly instanceType: string;
    /**
     * The instance family supported by the Dedicated Host. For example, m5.
     */
    readonly sockets: number;
    readonly tags: {[key: string]: string};
    /**
     * The total number of vCPUs on the Dedicated Host.
     */
    readonly totalVcpus: number;
}
