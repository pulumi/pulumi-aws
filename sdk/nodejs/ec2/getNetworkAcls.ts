// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * The following shows outputting all network ACL ids in a vpc.
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * export = async () => {
 *     const example = await aws.ec2.getNetworkAcls({
 *         vpcId: vpcId,
 *     });
 *     return {
 *         example: example.ids,
 *     };
 * }
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * The following example retrieves a list of all network ACL ids in a VPC with a custom
 * tag of `Tier` set to a value of "Private".
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.ec2.getNetworkAcls({
 *     vpcId: vpcId,
 *     tags: {
 *         Tier: "Private",
 *     },
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * The following example retrieves a network ACL id in a VPC which associated
 * with specific subnet.
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.ec2.getNetworkAcls({
 *     vpcId: vpcId,
 *     filters: [{
 *         name: "association.subnet-id",
 *         values: [test.id],
 *     }],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getNetworkAcls(args?: GetNetworkAclsArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkAclsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:ec2/getNetworkAcls:getNetworkAcls", {
        "filters": args.filters,
        "tags": args.tags,
        "vpcId": args.vpcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNetworkAcls.
 */
export interface GetNetworkAclsArgs {
    /**
     * Custom filter block as described below.
     *
     * More complex filters can be expressed using one or more `filter` sub-blocks,
     * which take the following arguments:
     */
    filters?: inputs.ec2.GetNetworkAclsFilter[];
    /**
     * Map of tags, each pair of which must exactly match
     * a pair on the desired network ACLs.
     */
    tags?: {[key: string]: string};
    /**
     * VPC ID that you want to filter from.
     */
    vpcId?: string;
}

/**
 * A collection of values returned by getNetworkAcls.
 */
export interface GetNetworkAclsResult {
    readonly filters?: outputs.ec2.GetNetworkAclsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * List of all the network ACL ids found.
     */
    readonly ids: string[];
    readonly tags: {[key: string]: string};
    readonly vpcId?: string;
}
/**
 * ## Example Usage
 *
 * The following shows outputting all network ACL ids in a vpc.
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * export = async () => {
 *     const example = await aws.ec2.getNetworkAcls({
 *         vpcId: vpcId,
 *     });
 *     return {
 *         example: example.ids,
 *     };
 * }
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * The following example retrieves a list of all network ACL ids in a VPC with a custom
 * tag of `Tier` set to a value of "Private".
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.ec2.getNetworkAcls({
 *     vpcId: vpcId,
 *     tags: {
 *         Tier: "Private",
 *     },
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * The following example retrieves a network ACL id in a VPC which associated
 * with specific subnet.
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.ec2.getNetworkAcls({
 *     vpcId: vpcId,
 *     filters: [{
 *         name: "association.subnet-id",
 *         values: [test.id],
 *     }],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getNetworkAclsOutput(args?: GetNetworkAclsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkAclsResult> {
    return pulumi.output(args).apply((a: any) => getNetworkAcls(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkAcls.
 */
export interface GetNetworkAclsOutputArgs {
    /**
     * Custom filter block as described below.
     *
     * More complex filters can be expressed using one or more `filter` sub-blocks,
     * which take the following arguments:
     */
    filters?: pulumi.Input<pulumi.Input<inputs.ec2.GetNetworkAclsFilterArgs>[]>;
    /**
     * Map of tags, each pair of which must exactly match
     * a pair on the desired network ACLs.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * VPC ID that you want to filter from.
     */
    vpcId?: pulumi.Input<string>;
}
