// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export class LaunchTemplate extends pulumi.CustomResource {
    /**
     * Get an existing LaunchTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LaunchTemplateState, opts?: pulumi.CustomResourceOptions): LaunchTemplate {
        return new LaunchTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:ec2/launchTemplate:LaunchTemplate';

    /**
     * Returns true if the given object is an instance of LaunchTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LaunchTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LaunchTemplate.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly blockDeviceMappings!: pulumi.Output<outputs.ec2.LaunchTemplateBlockDeviceMapping[] | undefined>;
    public readonly capacityReservationSpecification!: pulumi.Output<outputs.ec2.LaunchTemplateCapacityReservationSpecification | undefined>;
    public readonly cpuOptions!: pulumi.Output<outputs.ec2.LaunchTemplateCpuOptions | undefined>;
    public readonly creditSpecification!: pulumi.Output<outputs.ec2.LaunchTemplateCreditSpecification | undefined>;
    public readonly defaultVersion!: pulumi.Output<number>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly disableApiStop!: pulumi.Output<boolean | undefined>;
    public readonly disableApiTermination!: pulumi.Output<boolean | undefined>;
    public readonly ebsOptimized!: pulumi.Output<string | undefined>;
    public readonly elasticGpuSpecifications!: pulumi.Output<outputs.ec2.LaunchTemplateElasticGpuSpecification[] | undefined>;
    public readonly elasticInferenceAccelerator!: pulumi.Output<outputs.ec2.LaunchTemplateElasticInferenceAccelerator | undefined>;
    public readonly enclaveOptions!: pulumi.Output<outputs.ec2.LaunchTemplateEnclaveOptions | undefined>;
    public readonly hibernationOptions!: pulumi.Output<outputs.ec2.LaunchTemplateHibernationOptions | undefined>;
    public readonly iamInstanceProfile!: pulumi.Output<outputs.ec2.LaunchTemplateIamInstanceProfile | undefined>;
    public readonly imageId!: pulumi.Output<string | undefined>;
    public readonly instanceInitiatedShutdownBehavior!: pulumi.Output<string | undefined>;
    public readonly instanceMarketOptions!: pulumi.Output<outputs.ec2.LaunchTemplateInstanceMarketOptions | undefined>;
    public readonly instanceRequirements!: pulumi.Output<outputs.ec2.LaunchTemplateInstanceRequirements | undefined>;
    public readonly instanceType!: pulumi.Output<string | undefined>;
    public readonly kernelId!: pulumi.Output<string | undefined>;
    public readonly keyName!: pulumi.Output<string | undefined>;
    public /*out*/ readonly latestVersion!: pulumi.Output<number>;
    public readonly licenseSpecifications!: pulumi.Output<outputs.ec2.LaunchTemplateLicenseSpecification[] | undefined>;
    public readonly maintenanceOptions!: pulumi.Output<outputs.ec2.LaunchTemplateMaintenanceOptions | undefined>;
    public readonly metadataOptions!: pulumi.Output<outputs.ec2.LaunchTemplateMetadataOptions>;
    public readonly monitoring!: pulumi.Output<outputs.ec2.LaunchTemplateMonitoring | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly namePrefix!: pulumi.Output<string>;
    public readonly networkInterfaces!: pulumi.Output<outputs.ec2.LaunchTemplateNetworkInterface[] | undefined>;
    public readonly placement!: pulumi.Output<outputs.ec2.LaunchTemplatePlacement | undefined>;
    public readonly privateDnsNameOptions!: pulumi.Output<outputs.ec2.LaunchTemplatePrivateDnsNameOptions | undefined>;
    public readonly ramDiskId!: pulumi.Output<string | undefined>;
    public readonly securityGroupNames!: pulumi.Output<string[] | undefined>;
    public readonly tagSpecifications!: pulumi.Output<outputs.ec2.LaunchTemplateTagSpecification[] | undefined>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    public readonly updateDefaultVersion!: pulumi.Output<boolean | undefined>;
    public readonly userData!: pulumi.Output<string | undefined>;
    public readonly vpcSecurityGroupIds!: pulumi.Output<string[] | undefined>;

    /**
     * Create a LaunchTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: LaunchTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LaunchTemplateArgs | LaunchTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LaunchTemplateState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["blockDeviceMappings"] = state ? state.blockDeviceMappings : undefined;
            resourceInputs["capacityReservationSpecification"] = state ? state.capacityReservationSpecification : undefined;
            resourceInputs["cpuOptions"] = state ? state.cpuOptions : undefined;
            resourceInputs["creditSpecification"] = state ? state.creditSpecification : undefined;
            resourceInputs["defaultVersion"] = state ? state.defaultVersion : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["disableApiStop"] = state ? state.disableApiStop : undefined;
            resourceInputs["disableApiTermination"] = state ? state.disableApiTermination : undefined;
            resourceInputs["ebsOptimized"] = state ? state.ebsOptimized : undefined;
            resourceInputs["elasticGpuSpecifications"] = state ? state.elasticGpuSpecifications : undefined;
            resourceInputs["elasticInferenceAccelerator"] = state ? state.elasticInferenceAccelerator : undefined;
            resourceInputs["enclaveOptions"] = state ? state.enclaveOptions : undefined;
            resourceInputs["hibernationOptions"] = state ? state.hibernationOptions : undefined;
            resourceInputs["iamInstanceProfile"] = state ? state.iamInstanceProfile : undefined;
            resourceInputs["imageId"] = state ? state.imageId : undefined;
            resourceInputs["instanceInitiatedShutdownBehavior"] = state ? state.instanceInitiatedShutdownBehavior : undefined;
            resourceInputs["instanceMarketOptions"] = state ? state.instanceMarketOptions : undefined;
            resourceInputs["instanceRequirements"] = state ? state.instanceRequirements : undefined;
            resourceInputs["instanceType"] = state ? state.instanceType : undefined;
            resourceInputs["kernelId"] = state ? state.kernelId : undefined;
            resourceInputs["keyName"] = state ? state.keyName : undefined;
            resourceInputs["latestVersion"] = state ? state.latestVersion : undefined;
            resourceInputs["licenseSpecifications"] = state ? state.licenseSpecifications : undefined;
            resourceInputs["maintenanceOptions"] = state ? state.maintenanceOptions : undefined;
            resourceInputs["metadataOptions"] = state ? state.metadataOptions : undefined;
            resourceInputs["monitoring"] = state ? state.monitoring : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namePrefix"] = state ? state.namePrefix : undefined;
            resourceInputs["networkInterfaces"] = state ? state.networkInterfaces : undefined;
            resourceInputs["placement"] = state ? state.placement : undefined;
            resourceInputs["privateDnsNameOptions"] = state ? state.privateDnsNameOptions : undefined;
            resourceInputs["ramDiskId"] = state ? state.ramDiskId : undefined;
            resourceInputs["securityGroupNames"] = state ? state.securityGroupNames : undefined;
            resourceInputs["tagSpecifications"] = state ? state.tagSpecifications : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["updateDefaultVersion"] = state ? state.updateDefaultVersion : undefined;
            resourceInputs["userData"] = state ? state.userData : undefined;
            resourceInputs["vpcSecurityGroupIds"] = state ? state.vpcSecurityGroupIds : undefined;
        } else {
            const args = argsOrState as LaunchTemplateArgs | undefined;
            resourceInputs["blockDeviceMappings"] = args ? args.blockDeviceMappings : undefined;
            resourceInputs["capacityReservationSpecification"] = args ? args.capacityReservationSpecification : undefined;
            resourceInputs["cpuOptions"] = args ? args.cpuOptions : undefined;
            resourceInputs["creditSpecification"] = args ? args.creditSpecification : undefined;
            resourceInputs["defaultVersion"] = args ? args.defaultVersion : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["disableApiStop"] = args ? args.disableApiStop : undefined;
            resourceInputs["disableApiTermination"] = args ? args.disableApiTermination : undefined;
            resourceInputs["ebsOptimized"] = args ? args.ebsOptimized : undefined;
            resourceInputs["elasticGpuSpecifications"] = args ? args.elasticGpuSpecifications : undefined;
            resourceInputs["elasticInferenceAccelerator"] = args ? args.elasticInferenceAccelerator : undefined;
            resourceInputs["enclaveOptions"] = args ? args.enclaveOptions : undefined;
            resourceInputs["hibernationOptions"] = args ? args.hibernationOptions : undefined;
            resourceInputs["iamInstanceProfile"] = args ? args.iamInstanceProfile : undefined;
            resourceInputs["imageId"] = args ? args.imageId : undefined;
            resourceInputs["instanceInitiatedShutdownBehavior"] = args ? args.instanceInitiatedShutdownBehavior : undefined;
            resourceInputs["instanceMarketOptions"] = args ? args.instanceMarketOptions : undefined;
            resourceInputs["instanceRequirements"] = args ? args.instanceRequirements : undefined;
            resourceInputs["instanceType"] = args ? args.instanceType : undefined;
            resourceInputs["kernelId"] = args ? args.kernelId : undefined;
            resourceInputs["keyName"] = args ? args.keyName : undefined;
            resourceInputs["licenseSpecifications"] = args ? args.licenseSpecifications : undefined;
            resourceInputs["maintenanceOptions"] = args ? args.maintenanceOptions : undefined;
            resourceInputs["metadataOptions"] = args ? args.metadataOptions : undefined;
            resourceInputs["monitoring"] = args ? args.monitoring : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namePrefix"] = args ? args.namePrefix : undefined;
            resourceInputs["networkInterfaces"] = args ? args.networkInterfaces : undefined;
            resourceInputs["placement"] = args ? args.placement : undefined;
            resourceInputs["privateDnsNameOptions"] = args ? args.privateDnsNameOptions : undefined;
            resourceInputs["ramDiskId"] = args ? args.ramDiskId : undefined;
            resourceInputs["securityGroupNames"] = args ? args.securityGroupNames : undefined;
            resourceInputs["tagSpecifications"] = args ? args.tagSpecifications : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["updateDefaultVersion"] = args ? args.updateDefaultVersion : undefined;
            resourceInputs["userData"] = args ? args.userData : undefined;
            resourceInputs["vpcSecurityGroupIds"] = args ? args.vpcSecurityGroupIds : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["latestVersion"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LaunchTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LaunchTemplate resources.
 */
export interface LaunchTemplateState {
    arn?: pulumi.Input<string>;
    blockDeviceMappings?: pulumi.Input<pulumi.Input<inputs.ec2.LaunchTemplateBlockDeviceMapping>[]>;
    capacityReservationSpecification?: pulumi.Input<inputs.ec2.LaunchTemplateCapacityReservationSpecification>;
    cpuOptions?: pulumi.Input<inputs.ec2.LaunchTemplateCpuOptions>;
    creditSpecification?: pulumi.Input<inputs.ec2.LaunchTemplateCreditSpecification>;
    defaultVersion?: pulumi.Input<number>;
    description?: pulumi.Input<string>;
    disableApiStop?: pulumi.Input<boolean>;
    disableApiTermination?: pulumi.Input<boolean>;
    ebsOptimized?: pulumi.Input<string>;
    elasticGpuSpecifications?: pulumi.Input<pulumi.Input<inputs.ec2.LaunchTemplateElasticGpuSpecification>[]>;
    elasticInferenceAccelerator?: pulumi.Input<inputs.ec2.LaunchTemplateElasticInferenceAccelerator>;
    enclaveOptions?: pulumi.Input<inputs.ec2.LaunchTemplateEnclaveOptions>;
    hibernationOptions?: pulumi.Input<inputs.ec2.LaunchTemplateHibernationOptions>;
    iamInstanceProfile?: pulumi.Input<inputs.ec2.LaunchTemplateIamInstanceProfile>;
    imageId?: pulumi.Input<string>;
    instanceInitiatedShutdownBehavior?: pulumi.Input<string>;
    instanceMarketOptions?: pulumi.Input<inputs.ec2.LaunchTemplateInstanceMarketOptions>;
    instanceRequirements?: pulumi.Input<inputs.ec2.LaunchTemplateInstanceRequirements>;
    instanceType?: pulumi.Input<string>;
    kernelId?: pulumi.Input<string>;
    keyName?: pulumi.Input<string>;
    latestVersion?: pulumi.Input<number>;
    licenseSpecifications?: pulumi.Input<pulumi.Input<inputs.ec2.LaunchTemplateLicenseSpecification>[]>;
    maintenanceOptions?: pulumi.Input<inputs.ec2.LaunchTemplateMaintenanceOptions>;
    metadataOptions?: pulumi.Input<inputs.ec2.LaunchTemplateMetadataOptions>;
    monitoring?: pulumi.Input<inputs.ec2.LaunchTemplateMonitoring>;
    name?: pulumi.Input<string>;
    namePrefix?: pulumi.Input<string>;
    networkInterfaces?: pulumi.Input<pulumi.Input<inputs.ec2.LaunchTemplateNetworkInterface>[]>;
    placement?: pulumi.Input<inputs.ec2.LaunchTemplatePlacement>;
    privateDnsNameOptions?: pulumi.Input<inputs.ec2.LaunchTemplatePrivateDnsNameOptions>;
    ramDiskId?: pulumi.Input<string>;
    securityGroupNames?: pulumi.Input<pulumi.Input<string>[]>;
    tagSpecifications?: pulumi.Input<pulumi.Input<inputs.ec2.LaunchTemplateTagSpecification>[]>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    updateDefaultVersion?: pulumi.Input<boolean>;
    userData?: pulumi.Input<string>;
    vpcSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a LaunchTemplate resource.
 */
export interface LaunchTemplateArgs {
    blockDeviceMappings?: pulumi.Input<pulumi.Input<inputs.ec2.LaunchTemplateBlockDeviceMapping>[]>;
    capacityReservationSpecification?: pulumi.Input<inputs.ec2.LaunchTemplateCapacityReservationSpecification>;
    cpuOptions?: pulumi.Input<inputs.ec2.LaunchTemplateCpuOptions>;
    creditSpecification?: pulumi.Input<inputs.ec2.LaunchTemplateCreditSpecification>;
    defaultVersion?: pulumi.Input<number>;
    description?: pulumi.Input<string>;
    disableApiStop?: pulumi.Input<boolean>;
    disableApiTermination?: pulumi.Input<boolean>;
    ebsOptimized?: pulumi.Input<string>;
    elasticGpuSpecifications?: pulumi.Input<pulumi.Input<inputs.ec2.LaunchTemplateElasticGpuSpecification>[]>;
    elasticInferenceAccelerator?: pulumi.Input<inputs.ec2.LaunchTemplateElasticInferenceAccelerator>;
    enclaveOptions?: pulumi.Input<inputs.ec2.LaunchTemplateEnclaveOptions>;
    hibernationOptions?: pulumi.Input<inputs.ec2.LaunchTemplateHibernationOptions>;
    iamInstanceProfile?: pulumi.Input<inputs.ec2.LaunchTemplateIamInstanceProfile>;
    imageId?: pulumi.Input<string>;
    instanceInitiatedShutdownBehavior?: pulumi.Input<string>;
    instanceMarketOptions?: pulumi.Input<inputs.ec2.LaunchTemplateInstanceMarketOptions>;
    instanceRequirements?: pulumi.Input<inputs.ec2.LaunchTemplateInstanceRequirements>;
    instanceType?: pulumi.Input<string>;
    kernelId?: pulumi.Input<string>;
    keyName?: pulumi.Input<string>;
    licenseSpecifications?: pulumi.Input<pulumi.Input<inputs.ec2.LaunchTemplateLicenseSpecification>[]>;
    maintenanceOptions?: pulumi.Input<inputs.ec2.LaunchTemplateMaintenanceOptions>;
    metadataOptions?: pulumi.Input<inputs.ec2.LaunchTemplateMetadataOptions>;
    monitoring?: pulumi.Input<inputs.ec2.LaunchTemplateMonitoring>;
    name?: pulumi.Input<string>;
    namePrefix?: pulumi.Input<string>;
    networkInterfaces?: pulumi.Input<pulumi.Input<inputs.ec2.LaunchTemplateNetworkInterface>[]>;
    placement?: pulumi.Input<inputs.ec2.LaunchTemplatePlacement>;
    privateDnsNameOptions?: pulumi.Input<inputs.ec2.LaunchTemplatePrivateDnsNameOptions>;
    ramDiskId?: pulumi.Input<string>;
    securityGroupNames?: pulumi.Input<pulumi.Input<string>[]>;
    tagSpecifications?: pulumi.Input<pulumi.Input<inputs.ec2.LaunchTemplateTagSpecification>[]>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    updateDefaultVersion?: pulumi.Input<boolean>;
    userData?: pulumi.Input<string>;
    vpcSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}
