// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to get the ID of an Amazon EC2 Instance for use in other
 * resources.
 * 
 * ## Example Usage
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const aws_instance_foo = pulumi.output(aws.ec2.getInstance({
 *     filters: [
 *         {
 *             name: "image-id",
 *             values: ["ami-xxxxxxxx"],
 *         },
 *         {
 *             name: "tag:Name",
 *             values: ["instance-name-tag"],
 *         },
 *     ],
 *     instanceId: "i-instanceid",
 * }));
 * ```
 */
export function getInstance(args?: GetInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetInstanceResult> {
    args = args || {};
    return pulumi.runtime.invoke("aws:ec2/getInstance:getInstance", {
        "filters": args.filters,
        "getPasswordData": args.getPasswordData,
        "instanceId": args.instanceId,
        "instanceTags": args.instanceTags,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getInstance.
 */
export interface GetInstanceArgs {
    /**
     * One or more name/value pairs to use as filters. There are
     * several valid keys, for a full reference, check out
     * [describe-instances in the AWS CLI reference][1].
     */
    readonly filters?: { name: string, values: string[] }[];
    /**
     * If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `password_data` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
     */
    readonly getPasswordData?: boolean;
    /**
     * Specify the exact Instance ID with which to populate the data source.
     */
    readonly instanceId?: string;
    /**
     * A mapping of tags, each pair of which must
     * exactly match a pair on the desired Instance.
     */
    readonly instanceTags?: {[key: string]: any};
    readonly tags?: {[key: string]: any};
}

/**
 * A collection of values returned by getInstance.
 */
export interface GetInstanceResult {
    /**
     * The ID of the AMI used to launch the instance.
     */
    readonly ami: string;
    /**
     * The ARN of the instance.
     */
    readonly arn: string;
    /**
     * Whether or not the Instance is associated with a public IP address or not (Boolean).
     */
    readonly associatePublicIpAddress: boolean;
    /**
     * The availability zone of the Instance.
     */
    readonly availabilityZone: string;
    /**
     * The credit specification of the Instance.
     */
    readonly creditSpecifications: { cpuCredits: string }[];
    readonly disableApiTermination: boolean;
    /**
     * The EBS block device mappings of the Instance.
     */
    readonly ebsBlockDevices: { deleteOnTermination: boolean, deviceName: string, encrypted: boolean, iops: number, snapshotId: string, volumeId: string, volumeSize: number, volumeType: string }[];
    /**
     * Whether the Instance is EBS optimized or not (Boolean).
     */
    readonly ebsOptimized: boolean;
    /**
     * The ephemeral block device mappings of the Instance.
     */
    readonly ephemeralBlockDevices: { deviceName: string, noDevice?: boolean, virtualName?: string }[];
    /**
     * The Id of the dedicated host the instance will be assigned to.
     */
    readonly hostId: string;
    /**
     * The name of the instance profile associated with the Instance.
     */
    readonly iamInstanceProfile: string;
    readonly instanceState: string;
    readonly instanceTags: {[key: string]: any};
    /**
     * The type of the Instance.
     */
    readonly instanceType: string;
    /**
     * The key name of the Instance.
     */
    readonly keyName: string;
    /**
     * Whether detailed monitoring is enabled or disabled for the Instance (Boolean).
     */
    readonly monitoring: boolean;
    /**
     * The ID of the network interface that was created with the Instance.
     */
    readonly networkInterfaceId: string;
    /**
     * Base-64 encoded encrypted password data for the instance.
     * Useful for getting the administrator password for instances running Microsoft Windows.
     * This attribute is only exported if `get_password_data` is true.
     * See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
     */
    readonly passwordData: string;
    /**
     * The placement group of the Instance.
     */
    readonly placementGroup: string;
    /**
     * The private DNS name assigned to the Instance. Can only be
     * used inside the Amazon EC2, and only available if you've enabled DNS hostnames
     * for your VPC.
     */
    readonly privateDns: string;
    /**
     * The private IP address assigned to the Instance.
     */
    readonly privateIp: string;
    /**
     * The public DNS name assigned to the Instance. For EC2-VPC, this
     * is only available if you've enabled DNS hostnames for your VPC.
     */
    readonly publicDns: string;
    /**
     * The public IP address assigned to the Instance, if applicable. **NOTE**: If you are using an [`aws_eip`](https://www.terraform.io/docs/providers/aws/r/eip.html) with your instance, you should refer to the EIP's address directly and not use `public_ip`, as this field will change after the EIP is attached.
     */
    readonly publicIp: string;
    /**
     * The root block device mappings of the Instance
     */
    readonly rootBlockDevices: { deleteOnTermination: boolean, iops: number, volumeId: string, volumeSize: number, volumeType: string }[];
    /**
     * The associated security groups.
     */
    readonly securityGroups: string[];
    /**
     * Whether the network interface performs source/destination checking (Boolean).
     */
    readonly sourceDestCheck: boolean;
    /**
     * The VPC subnet ID.
     */
    readonly subnetId: string;
    /**
     * A mapping of tags assigned to the Instance.
     */
    readonly tags: {[key: string]: any};
    /**
     * The tenancy of the instance: `dedicated`, `default`, `host`.
     */
    readonly tenancy: string;
    /**
     * The User Data supplied to the Instance.
     */
    readonly userData: string;
    /**
     * The associated security groups in a non-default VPC.
     */
    readonly vpcSecurityGroupIds: string[];
    /**
     * id is the provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
