// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getCoipPool(args?: GetCoipPoolArgs, opts?: pulumi.InvokeOptions): Promise<GetCoipPoolResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:ec2/getCoipPool:getCoipPool", {
        "filters": args.filters,
        "localGatewayRouteTableId": args.localGatewayRouteTableId,
        "poolId": args.poolId,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getCoipPool.
 */
export interface GetCoipPoolArgs {
    filters?: inputs.ec2.GetCoipPoolFilter[];
    localGatewayRouteTableId?: string;
    poolId?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getCoipPool.
 */
export interface GetCoipPoolResult {
    readonly arn: string;
    readonly filters?: outputs.ec2.GetCoipPoolFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly localGatewayRouteTableId: string;
    readonly poolCidrs: string[];
    readonly poolId: string;
    readonly tags: {[key: string]: string};
}
export function getCoipPoolOutput(args?: GetCoipPoolOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoipPoolResult> {
    return pulumi.output(args).apply((a: any) => getCoipPool(a, opts))
}

/**
 * A collection of arguments for invoking getCoipPool.
 */
export interface GetCoipPoolOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.ec2.GetCoipPoolFilterArgs>[]>;
    localGatewayRouteTableId?: pulumi.Input<string>;
    poolId?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
