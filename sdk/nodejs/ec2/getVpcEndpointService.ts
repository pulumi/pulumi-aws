// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getVpcEndpointService(args?: GetVpcEndpointServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcEndpointServiceResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:ec2/getVpcEndpointService:getVpcEndpointService", {
        "filters": args.filters,
        "service": args.service,
        "serviceName": args.serviceName,
        "serviceType": args.serviceType,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getVpcEndpointService.
 */
export interface GetVpcEndpointServiceArgs {
    filters?: inputs.ec2.GetVpcEndpointServiceFilter[];
    service?: string;
    serviceName?: string;
    serviceType?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getVpcEndpointService.
 */
export interface GetVpcEndpointServiceResult {
    readonly acceptanceRequired: boolean;
    readonly arn: string;
    readonly availabilityZones: string[];
    readonly baseEndpointDnsNames: string[];
    readonly filters?: outputs.ec2.GetVpcEndpointServiceFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly managesVpcEndpoints: boolean;
    readonly owner: string;
    readonly privateDnsName: string;
    readonly service?: string;
    readonly serviceId: string;
    readonly serviceName: string;
    readonly serviceType: string;
    readonly supportedIpAddressTypes: string[];
    readonly tags: {[key: string]: string};
    readonly vpcEndpointPolicySupported: boolean;
}
export function getVpcEndpointServiceOutput(args?: GetVpcEndpointServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpcEndpointServiceResult> {
    return pulumi.output(args).apply((a: any) => getVpcEndpointService(a, opts))
}

/**
 * A collection of arguments for invoking getVpcEndpointService.
 */
export interface GetVpcEndpointServiceOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.ec2.GetVpcEndpointServiceFilterArgs>[]>;
    service?: pulumi.Input<string>;
    serviceName?: pulumi.Input<string>;
    serviceType?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
