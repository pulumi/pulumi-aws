// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * `aws.ec2.getVpcIpamPools` provides details about IPAM pools.
 *
 * This resource can prove useful when IPAM pools are created in another root
 * module and you need the pool ids as input variables. For example, pools
 * can be shared via RAM and used to create vpcs with CIDRs from that pool.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = aws.ec2.getVpcIpamPools({
 *     filters: [
 *         {
 *             name: "description",
 *             values: ["*test*"],
 *         },
 *         {
 *             name: "address-family",
 *             values: ["ipv4"],
 *         },
 *     ],
 * });
 * ```
 */
export function getVpcIpamPools(args?: GetVpcIpamPoolsArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcIpamPoolsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:ec2/getVpcIpamPools:getVpcIpamPools", {
        "filters": args.filters,
    }, opts);
}

/**
 * A collection of arguments for invoking getVpcIpamPools.
 */
export interface GetVpcIpamPoolsArgs {
    /**
     * Custom filter block as described below.
     */
    filters?: inputs.ec2.GetVpcIpamPoolsFilter[];
}

/**
 * A collection of values returned by getVpcIpamPools.
 */
export interface GetVpcIpamPoolsResult {
    readonly filters?: outputs.ec2.GetVpcIpamPoolsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * List of IPAM pools and their attributes. See below for details
     */
    readonly ipamPools: outputs.ec2.GetVpcIpamPoolsIpamPool[];
}
/**
 * `aws.ec2.getVpcIpamPools` provides details about IPAM pools.
 *
 * This resource can prove useful when IPAM pools are created in another root
 * module and you need the pool ids as input variables. For example, pools
 * can be shared via RAM and used to create vpcs with CIDRs from that pool.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = aws.ec2.getVpcIpamPools({
 *     filters: [
 *         {
 *             name: "description",
 *             values: ["*test*"],
 *         },
 *         {
 *             name: "address-family",
 *             values: ["ipv4"],
 *         },
 *     ],
 * });
 * ```
 */
export function getVpcIpamPoolsOutput(args?: GetVpcIpamPoolsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpcIpamPoolsResult> {
    return pulumi.output(args).apply((a: any) => getVpcIpamPools(a, opts))
}

/**
 * A collection of arguments for invoking getVpcIpamPools.
 */
export interface GetVpcIpamPoolsOutputArgs {
    /**
     * Custom filter block as described below.
     */
    filters?: pulumi.Input<pulumi.Input<inputs.ec2.GetVpcIpamPoolsFilterArgs>[]>;
}
