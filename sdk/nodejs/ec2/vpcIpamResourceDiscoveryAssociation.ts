// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides an association between an Amazon IP Address Manager (IPAM) and a IPAM Resource Discovery. IPAM Resource Discoveries are resources meant for multi-organization customers. If you wish to use a single IPAM across multiple orgs, a resource discovery can be created and shared from a subordinate organization to the management organizations IPAM delegated admin account.
 *
 * Once an association is created between two organizations via IPAM & a IPAM Resource Discovery, IPAM Pools can be shared via Resource Access Manager (RAM) to accounts in the subordinate organization; these RAM shares must be accepted by the end user account. Pools can then also discover and monitor IPAM resources in the subordinate organization.
 *
 * ## Example Usage
 *
 * Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.ec2.VpcIpamResourceDiscoveryAssociation("test", {
 *     ipamId: aws_vpc_ipam.test.id,
 *     ipamResourceDiscoveryId: aws_vpc_ipam_resource_discovery.test.id,
 * });
 * ```
 *
 * ## Import
 *
 * IPAMs can be imported using the `ipam resource discovery association id`, e.g.
 *
 * ```sh
 *  $ pulumi import aws:ec2/vpcIpamResourceDiscoveryAssociation:VpcIpamResourceDiscoveryAssociation example ipam-res-disco-assoc-0178368ad2146a492
 * ```
 */
export class VpcIpamResourceDiscoveryAssociation extends pulumi.CustomResource {
    /**
     * Get an existing VpcIpamResourceDiscoveryAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpcIpamResourceDiscoveryAssociationState, opts?: pulumi.CustomResourceOptions): VpcIpamResourceDiscoveryAssociation {
        return new VpcIpamResourceDiscoveryAssociation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:ec2/vpcIpamResourceDiscoveryAssociation:VpcIpamResourceDiscoveryAssociation';

    /**
     * Returns true if the given object is an instance of VpcIpamResourceDiscoveryAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpcIpamResourceDiscoveryAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpcIpamResourceDiscoveryAssociation.__pulumiType;
    }

    /**
     * Amazon Resource Name (ARN) of IPAM Resource Discovery Association
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The arn of the IPAM
     */
    public /*out*/ readonly ipamArn!: pulumi.Output<string>;
    /**
     * Id of the IPAM to associate
     */
    public readonly ipamId!: pulumi.Output<string>;
    /**
     * The home region of the IPAM
     */
    public /*out*/ readonly ipamRegion!: pulumi.Output<string>;
    public readonly ipamResourceDiscoveryId!: pulumi.Output<string>;
    /**
     * A boolean to identify if the Resource Discovery is the accounts default resource discovery
     */
    public /*out*/ readonly isDefault!: pulumi.Output<boolean>;
    /**
     * The account ID for the account that manages the Resource Discovery
     */
    public /*out*/ readonly ownerId!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a VpcIpamResourceDiscoveryAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpcIpamResourceDiscoveryAssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpcIpamResourceDiscoveryAssociationArgs | VpcIpamResourceDiscoveryAssociationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpcIpamResourceDiscoveryAssociationState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["ipamArn"] = state ? state.ipamArn : undefined;
            resourceInputs["ipamId"] = state ? state.ipamId : undefined;
            resourceInputs["ipamRegion"] = state ? state.ipamRegion : undefined;
            resourceInputs["ipamResourceDiscoveryId"] = state ? state.ipamResourceDiscoveryId : undefined;
            resourceInputs["isDefault"] = state ? state.isDefault : undefined;
            resourceInputs["ownerId"] = state ? state.ownerId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
        } else {
            const args = argsOrState as VpcIpamResourceDiscoveryAssociationArgs | undefined;
            if ((!args || args.ipamId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipamId'");
            }
            if ((!args || args.ipamResourceDiscoveryId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipamResourceDiscoveryId'");
            }
            resourceInputs["ipamId"] = args ? args.ipamId : undefined;
            resourceInputs["ipamResourceDiscoveryId"] = args ? args.ipamResourceDiscoveryId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["ipamArn"] = undefined /*out*/;
            resourceInputs["ipamRegion"] = undefined /*out*/;
            resourceInputs["isDefault"] = undefined /*out*/;
            resourceInputs["ownerId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VpcIpamResourceDiscoveryAssociation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VpcIpamResourceDiscoveryAssociation resources.
 */
export interface VpcIpamResourceDiscoveryAssociationState {
    /**
     * Amazon Resource Name (ARN) of IPAM Resource Discovery Association
     */
    arn?: pulumi.Input<string>;
    /**
     * The arn of the IPAM
     */
    ipamArn?: pulumi.Input<string>;
    /**
     * Id of the IPAM to associate
     */
    ipamId?: pulumi.Input<string>;
    /**
     * The home region of the IPAM
     */
    ipamRegion?: pulumi.Input<string>;
    ipamResourceDiscoveryId?: pulumi.Input<string>;
    /**
     * A boolean to identify if the Resource Discovery is the accounts default resource discovery
     */
    isDefault?: pulumi.Input<boolean>;
    /**
     * The account ID for the account that manages the Resource Discovery
     */
    ownerId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a VpcIpamResourceDiscoveryAssociation resource.
 */
export interface VpcIpamResourceDiscoveryAssociationArgs {
    /**
     * Id of the IPAM to associate
     */
    ipamId: pulumi.Input<string>;
    ipamResourceDiscoveryId: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
