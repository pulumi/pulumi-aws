// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Data source for managing VPC IPAMs.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.ec2.getVpcIpams({
 *     ipamIds: ["ipam-abcd1234"],
 * });
 * ```
 *
 * ### Filter by `tags`
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.ec2.getVpcIpams({
 *     filters: [{
 *         name: "tags.Some",
 *         values: ["Value"],
 *     }],
 * });
 * ```
 *
 * ### Filter by `tier`
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.ec2.getVpcIpams({
 *     filters: [{
 *         name: "tier",
 *         values: ["free"],
 *     }],
 * });
 * ```
 */
export function getVpcIpams(args?: GetVpcIpamsArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcIpamsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:ec2/getVpcIpams:getVpcIpams", {
        "filters": args.filters,
        "ipamIds": args.ipamIds,
    }, opts);
}

/**
 * A collection of arguments for invoking getVpcIpams.
 */
export interface GetVpcIpamsArgs {
    /**
     * Custom filter block as described below.
     *
     * The arguments of this data source act as filters for querying the available IPAMs.
     */
    filters?: inputs.ec2.GetVpcIpamsFilter[];
    /**
     * IDs of the IPAM resources to query for.
     */
    ipamIds?: string[];
}

/**
 * A collection of values returned by getVpcIpams.
 */
export interface GetVpcIpamsResult {
    readonly filters?: outputs.ec2.GetVpcIpamsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ipamIds?: string[];
    /**
     * List of IPAM resources matching the provided arguments.
     */
    readonly ipams: outputs.ec2.GetVpcIpamsIpam[];
}
/**
 * Data source for managing VPC IPAMs.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.ec2.getVpcIpams({
 *     ipamIds: ["ipam-abcd1234"],
 * });
 * ```
 *
 * ### Filter by `tags`
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.ec2.getVpcIpams({
 *     filters: [{
 *         name: "tags.Some",
 *         values: ["Value"],
 *     }],
 * });
 * ```
 *
 * ### Filter by `tier`
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.ec2.getVpcIpams({
 *     filters: [{
 *         name: "tier",
 *         values: ["free"],
 *     }],
 * });
 * ```
 */
export function getVpcIpamsOutput(args?: GetVpcIpamsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVpcIpamsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws:ec2/getVpcIpams:getVpcIpams", {
        "filters": args.filters,
        "ipamIds": args.ipamIds,
    }, opts);
}

/**
 * A collection of arguments for invoking getVpcIpams.
 */
export interface GetVpcIpamsOutputArgs {
    /**
     * Custom filter block as described below.
     *
     * The arguments of this data source act as filters for querying the available IPAMs.
     */
    filters?: pulumi.Input<pulumi.Input<inputs.ec2.GetVpcIpamsFilterArgs>[]>;
    /**
     * IDs of the IPAM resources to query for.
     */
    ipamIds?: pulumi.Input<pulumi.Input<string>[]>;
}
