// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class VpcIpamPool extends pulumi.CustomResource {
    /**
     * Get an existing VpcIpamPool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpcIpamPoolState, opts?: pulumi.CustomResourceOptions): VpcIpamPool {
        return new VpcIpamPool(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:ec2/vpcIpamPool:VpcIpamPool';

    /**
     * Returns true if the given object is an instance of VpcIpamPool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpcIpamPool {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpcIpamPool.__pulumiType;
    }

    public readonly addressFamily!: pulumi.Output<string>;
    public readonly allocationDefaultNetmaskLength!: pulumi.Output<number | undefined>;
    public readonly allocationMaxNetmaskLength!: pulumi.Output<number | undefined>;
    public readonly allocationMinNetmaskLength!: pulumi.Output<number | undefined>;
    public readonly allocationResourceTags!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly autoImport!: pulumi.Output<boolean | undefined>;
    public readonly awsService!: pulumi.Output<string | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly ipamScopeId!: pulumi.Output<string>;
    public /*out*/ readonly ipamScopeType!: pulumi.Output<string>;
    public readonly locale!: pulumi.Output<string | undefined>;
    public /*out*/ readonly poolDepth!: pulumi.Output<number>;
    public readonly publiclyAdvertisable!: pulumi.Output<boolean | undefined>;
    public readonly sourceIpamPoolId!: pulumi.Output<string | undefined>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a VpcIpamPool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpcIpamPoolArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpcIpamPoolArgs | VpcIpamPoolState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpcIpamPoolState | undefined;
            resourceInputs["addressFamily"] = state ? state.addressFamily : undefined;
            resourceInputs["allocationDefaultNetmaskLength"] = state ? state.allocationDefaultNetmaskLength : undefined;
            resourceInputs["allocationMaxNetmaskLength"] = state ? state.allocationMaxNetmaskLength : undefined;
            resourceInputs["allocationMinNetmaskLength"] = state ? state.allocationMinNetmaskLength : undefined;
            resourceInputs["allocationResourceTags"] = state ? state.allocationResourceTags : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["autoImport"] = state ? state.autoImport : undefined;
            resourceInputs["awsService"] = state ? state.awsService : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["ipamScopeId"] = state ? state.ipamScopeId : undefined;
            resourceInputs["ipamScopeType"] = state ? state.ipamScopeType : undefined;
            resourceInputs["locale"] = state ? state.locale : undefined;
            resourceInputs["poolDepth"] = state ? state.poolDepth : undefined;
            resourceInputs["publiclyAdvertisable"] = state ? state.publiclyAdvertisable : undefined;
            resourceInputs["sourceIpamPoolId"] = state ? state.sourceIpamPoolId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
        } else {
            const args = argsOrState as VpcIpamPoolArgs | undefined;
            if ((!args || args.addressFamily === undefined) && !opts.urn) {
                throw new Error("Missing required property 'addressFamily'");
            }
            if ((!args || args.ipamScopeId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipamScopeId'");
            }
            resourceInputs["addressFamily"] = args ? args.addressFamily : undefined;
            resourceInputs["allocationDefaultNetmaskLength"] = args ? args.allocationDefaultNetmaskLength : undefined;
            resourceInputs["allocationMaxNetmaskLength"] = args ? args.allocationMaxNetmaskLength : undefined;
            resourceInputs["allocationMinNetmaskLength"] = args ? args.allocationMinNetmaskLength : undefined;
            resourceInputs["allocationResourceTags"] = args ? args.allocationResourceTags : undefined;
            resourceInputs["autoImport"] = args ? args.autoImport : undefined;
            resourceInputs["awsService"] = args ? args.awsService : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["ipamScopeId"] = args ? args.ipamScopeId : undefined;
            resourceInputs["locale"] = args ? args.locale : undefined;
            resourceInputs["publiclyAdvertisable"] = args ? args.publiclyAdvertisable : undefined;
            resourceInputs["sourceIpamPoolId"] = args ? args.sourceIpamPoolId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["ipamScopeType"] = undefined /*out*/;
            resourceInputs["poolDepth"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VpcIpamPool.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VpcIpamPool resources.
 */
export interface VpcIpamPoolState {
    addressFamily?: pulumi.Input<string>;
    allocationDefaultNetmaskLength?: pulumi.Input<number>;
    allocationMaxNetmaskLength?: pulumi.Input<number>;
    allocationMinNetmaskLength?: pulumi.Input<number>;
    allocationResourceTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    arn?: pulumi.Input<string>;
    autoImport?: pulumi.Input<boolean>;
    awsService?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    ipamScopeId?: pulumi.Input<string>;
    ipamScopeType?: pulumi.Input<string>;
    locale?: pulumi.Input<string>;
    poolDepth?: pulumi.Input<number>;
    publiclyAdvertisable?: pulumi.Input<boolean>;
    sourceIpamPoolId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a VpcIpamPool resource.
 */
export interface VpcIpamPoolArgs {
    addressFamily: pulumi.Input<string>;
    allocationDefaultNetmaskLength?: pulumi.Input<number>;
    allocationMaxNetmaskLength?: pulumi.Input<number>;
    allocationMinNetmaskLength?: pulumi.Input<number>;
    allocationResourceTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    autoImport?: pulumi.Input<boolean>;
    awsService?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    ipamScopeId: pulumi.Input<string>;
    locale?: pulumi.Input<string>;
    publiclyAdvertisable?: pulumi.Input<boolean>;
    sourceIpamPoolId?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
