// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getVpcIamPool(args?: GetVpcIamPoolArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcIamPoolResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:ec2/getVpcIamPool:getVpcIamPool", {
        "allocationResourceTags": args.allocationResourceTags,
        "filters": args.filters,
        "id": args.id,
        "ipamPoolId": args.ipamPoolId,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getVpcIamPool.
 */
export interface GetVpcIamPoolArgs {
    allocationResourceTags?: {[key: string]: string};
    filters?: inputs.ec2.GetVpcIamPoolFilter[];
    id?: string;
    ipamPoolId?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getVpcIamPool.
 */
export interface GetVpcIamPoolResult {
    readonly addressFamily: string;
    readonly allocationDefaultNetmaskLength: number;
    readonly allocationMaxNetmaskLength: number;
    readonly allocationMinNetmaskLength: number;
    readonly allocationResourceTags: {[key: string]: string};
    readonly arn: string;
    readonly autoImport: boolean;
    readonly awsService: string;
    readonly description: string;
    readonly filters?: outputs.ec2.GetVpcIamPoolFilter[];
    readonly id?: string;
    readonly ipamPoolId?: string;
    readonly ipamScopeId: string;
    readonly ipamScopeType: string;
    readonly locale: string;
    readonly poolDepth: number;
    readonly publiclyAdvertisable: boolean;
    readonly sourceIpamPoolId: string;
    readonly state: string;
    readonly tags: {[key: string]: string};
}
export function getVpcIamPoolOutput(args?: GetVpcIamPoolOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpcIamPoolResult> {
    return pulumi.output(args).apply((a: any) => getVpcIamPool(a, opts))
}

/**
 * A collection of arguments for invoking getVpcIamPool.
 */
export interface GetVpcIamPoolOutputArgs {
    allocationResourceTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    filters?: pulumi.Input<pulumi.Input<inputs.ec2.GetVpcIamPoolFilterArgs>[]>;
    id?: pulumi.Input<string>;
    ipamPoolId?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
