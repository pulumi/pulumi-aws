// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource for managing an Amazon Aurora DSQL Cluster.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.dsql.Cluster("example", {
 *     deletionProtectionEnabled: true,
 *     tags: {
 *         Name: "TestCluster",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import DSQL Cluster using the `identifier`. For example:
 *
 * ```sh
 * $ pulumi import aws:dsql/cluster:Cluster example abcde1f234ghijklmnop5qr6st
 * ```
 */
export class Cluster extends pulumi.CustomResource {
    /**
     * Get an existing Cluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterState, opts?: pulumi.CustomResourceOptions): Cluster {
        return new Cluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:dsql/cluster:Cluster';

    /**
     * Returns true if the given object is an instance of Cluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Cluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Cluster.__pulumiType;
    }

    /**
     * ARN of the Cluster.
     */
    declare public /*out*/ readonly arn: pulumi.Output<string>;
    /**
     * Whether deletion protection is enabled in this cluster.
     * Default value is `false`.
     */
    declare public readonly deletionProtectionEnabled: pulumi.Output<boolean>;
    /**
     * Encryption configuration details for the DSQL Cluster.
     */
    declare public /*out*/ readonly encryptionDetails: pulumi.Output<outputs.dsql.ClusterEncryptionDetail[]>;
    /**
     * Destroys cluster even if `deletionProtectionEnabled` is set to `true`.
     * Default value is `false`.
     */
    declare public readonly forceDestroy: pulumi.Output<boolean>;
    /**
     * Cluster Identifier.
     */
    declare public /*out*/ readonly identifier: pulumi.Output<string>;
    /**
     * The ARN of the AWS KMS key that encrypts data in the DSQL Cluster, or `"AWS_OWNED_KMS_KEY"`.
     */
    declare public readonly kmsEncryptionKey: pulumi.Output<string>;
    /**
     * Multi-region properties of the DSQL Cluster.
     */
    declare public readonly multiRegionProperties: pulumi.Output<outputs.dsql.ClusterMultiRegionProperties | undefined>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * Set of tags to be associated with the AWS DSQL Cluster resource.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    declare public /*out*/ readonly tagsAll: pulumi.Output<{[key: string]: string}>;
    declare public readonly timeouts: pulumi.Output<outputs.dsql.ClusterTimeouts | undefined>;
    /**
     * The DSQL Cluster's VPC endpoint service name.
     */
    declare public /*out*/ readonly vpcEndpointServiceName: pulumi.Output<string>;

    /**
     * Create a Cluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClusterArgs | ClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClusterState | undefined;
            resourceInputs["arn"] = state?.arn;
            resourceInputs["deletionProtectionEnabled"] = state?.deletionProtectionEnabled;
            resourceInputs["encryptionDetails"] = state?.encryptionDetails;
            resourceInputs["forceDestroy"] = state?.forceDestroy;
            resourceInputs["identifier"] = state?.identifier;
            resourceInputs["kmsEncryptionKey"] = state?.kmsEncryptionKey;
            resourceInputs["multiRegionProperties"] = state?.multiRegionProperties;
            resourceInputs["region"] = state?.region;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tagsAll"] = state?.tagsAll;
            resourceInputs["timeouts"] = state?.timeouts;
            resourceInputs["vpcEndpointServiceName"] = state?.vpcEndpointServiceName;
        } else {
            const args = argsOrState as ClusterArgs | undefined;
            resourceInputs["deletionProtectionEnabled"] = args?.deletionProtectionEnabled;
            resourceInputs["forceDestroy"] = args?.forceDestroy;
            resourceInputs["kmsEncryptionKey"] = args?.kmsEncryptionKey;
            resourceInputs["multiRegionProperties"] = args?.multiRegionProperties;
            resourceInputs["region"] = args?.region;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["timeouts"] = args?.timeouts;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["encryptionDetails"] = undefined /*out*/;
            resourceInputs["identifier"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
            resourceInputs["vpcEndpointServiceName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Cluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Cluster resources.
 */
export interface ClusterState {
    /**
     * ARN of the Cluster.
     */
    arn?: pulumi.Input<string>;
    /**
     * Whether deletion protection is enabled in this cluster.
     * Default value is `false`.
     */
    deletionProtectionEnabled?: pulumi.Input<boolean>;
    /**
     * Encryption configuration details for the DSQL Cluster.
     */
    encryptionDetails?: pulumi.Input<pulumi.Input<inputs.dsql.ClusterEncryptionDetail>[]>;
    /**
     * Destroys cluster even if `deletionProtectionEnabled` is set to `true`.
     * Default value is `false`.
     */
    forceDestroy?: pulumi.Input<boolean>;
    /**
     * Cluster Identifier.
     */
    identifier?: pulumi.Input<string>;
    /**
     * The ARN of the AWS KMS key that encrypts data in the DSQL Cluster, or `"AWS_OWNED_KMS_KEY"`.
     */
    kmsEncryptionKey?: pulumi.Input<string>;
    /**
     * Multi-region properties of the DSQL Cluster.
     */
    multiRegionProperties?: pulumi.Input<inputs.dsql.ClusterMultiRegionProperties>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * Set of tags to be associated with the AWS DSQL Cluster resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.dsql.ClusterTimeouts>;
    /**
     * The DSQL Cluster's VPC endpoint service name.
     */
    vpcEndpointServiceName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Cluster resource.
 */
export interface ClusterArgs {
    /**
     * Whether deletion protection is enabled in this cluster.
     * Default value is `false`.
     */
    deletionProtectionEnabled?: pulumi.Input<boolean>;
    /**
     * Destroys cluster even if `deletionProtectionEnabled` is set to `true`.
     * Default value is `false`.
     */
    forceDestroy?: pulumi.Input<boolean>;
    /**
     * The ARN of the AWS KMS key that encrypts data in the DSQL Cluster, or `"AWS_OWNED_KMS_KEY"`.
     */
    kmsEncryptionKey?: pulumi.Input<string>;
    /**
     * Multi-region properties of the DSQL Cluster.
     */
    multiRegionProperties?: pulumi.Input<inputs.dsql.ClusterMultiRegionProperties>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * Set of tags to be associated with the AWS DSQL Cluster resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.dsql.ClusterTimeouts>;
}
