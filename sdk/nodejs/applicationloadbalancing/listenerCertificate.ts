// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Load Balancer Listener Certificate resource.
 * 
 * This resource is for additional certificates and does not replace the default certificate on the listener.
 * 
 * > **Note:** `aws_alb_listener_certificate` is known as `aws_lb_listener_certificate`. The functionality is identical.
 * 
 * ## Example Usage
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const aws_acm_certificate_example = new aws.acm.Certificate("example", {});
 * const aws_lb_front_end = new aws.elasticloadbalancingv2.LoadBalancer("front_end", {});
 * const aws_lb_listener_front_end = new aws.elasticloadbalancingv2.Listener("front_end", {});
 * const aws_lb_listener_certificate_example = new aws.elasticloadbalancingv2.ListenerCertificate("example", {
 *     certificateArn: aws_acm_certificate_example.arn,
 *     listenerArn: aws_lb_listener_front_end.arn,
 * });
 * ```
 */
export class ListenerCertificate extends pulumi.CustomResource {
    /**
     * Get an existing ListenerCertificate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ListenerCertificateState, opts?: pulumi.CustomResourceOptions): ListenerCertificate {
        return new ListenerCertificate(name, <any>state, { ...opts, id: id });
    }

    /**
     * The ARN of the certificate to attach to the listener.
     */
    public readonly certificateArn: pulumi.Output<string>;
    /**
     * The ARN of the listener to which to attach the certificate.
     */
    public readonly listenerArn: pulumi.Output<string>;

    /**
     * Create a ListenerCertificate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ListenerCertificateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ListenerCertificateArgs | ListenerCertificateState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: ListenerCertificateState = argsOrState as ListenerCertificateState | undefined;
            inputs["certificateArn"] = state ? state.certificateArn : undefined;
            inputs["listenerArn"] = state ? state.listenerArn : undefined;
        } else {
            const args = argsOrState as ListenerCertificateArgs | undefined;
            if (!args || args.certificateArn === undefined) {
                throw new Error("Missing required property 'certificateArn'");
            }
            if (!args || args.listenerArn === undefined) {
                throw new Error("Missing required property 'listenerArn'");
            }
            inputs["certificateArn"] = args ? args.certificateArn : undefined;
            inputs["listenerArn"] = args ? args.listenerArn : undefined;
        }
        super("aws:applicationloadbalancing/listenerCertificate:ListenerCertificate", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ListenerCertificate resources.
 */
export interface ListenerCertificateState {
    /**
     * The ARN of the certificate to attach to the listener.
     */
    readonly certificateArn?: pulumi.Input<string>;
    /**
     * The ARN of the listener to which to attach the certificate.
     */
    readonly listenerArn?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ListenerCertificate resource.
 */
export interface ListenerCertificateArgs {
    /**
     * The ARN of the certificate to attach to the listener.
     */
    readonly certificateArn: pulumi.Input<string>;
    /**
     * The ARN of the listener to which to attach the certificate.
     */
    readonly listenerArn: pulumi.Input<string>;
}
