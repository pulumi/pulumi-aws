// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/** @deprecated Use the equivalent functionality in `aws.elbv2` instead. */
export function getListener(args?: GetListenerArgs, opts?: pulumi.InvokeOptions): Promise<GetListenerResult> & GetListenerResult {
    args = args || {};
    const promise: Promise<GetListenerResult> = pulumi.runtime.invoke("aws:applicationloadbalancing/getListener:getListener", {
        "arn": args.arn,
        "loadBalancerArn": args.loadBalancerArn,
        "port": args.port,
    }, opts);

    return pulumi.utils.liftProperties(promise, opts);
}

/** @deprecated Use the equivalent functionality in `aws.elbv2` instead. */
export interface GetListenerArgs {
    /**
     * The arn of the listener. Required if `load_balancer_arn` and `port` is not set.
     */
    readonly arn?: string;
    /**
     * The arn of the load balancer. Required if `arn` is not set.
     */
    readonly loadBalancerArn?: string;
    /**
     * The port of the listener. Required if `arn` is not set.
     */
    readonly port?: number;
}

/** @deprecated Use the equivalent functionality in `aws.elbv2` instead. */
export interface GetListenerResult {
    readonly arn: string;
    readonly certificateArn: string;
    readonly defaultActions: { authenticateCognitos: { authenticationRequestExtraParams: {[key: string]: any}, onUnauthenticatedRequest: string, scope: string, sessionCookieName: string, sessionTimeout: number, userPoolArn: string, userPoolClientId: string, userPoolDomain: string }[], authenticateOidcs: { authenticationRequestExtraParams: {[key: string]: any}, authorizationEndpoint: string, clientId: string, clientSecret: string, issuer: string, onUnauthenticatedRequest: string, scope: string, sessionCookieName: string, sessionTimeout: number, tokenEndpoint: string, userInfoEndpoint: string }[], fixedResponses: { contentType: string, messageBody: string, statusCode: string }[], order: number, redirects: { host: string, path: string, port: string, protocol: string, query: string, statusCode: string }[], targetGroupArn: string, type: string }[];
    readonly loadBalancerArn: string;
    readonly port: number;
    readonly protocol: string;
    readonly sslPolicy: string;
    /**
     * id is the provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
