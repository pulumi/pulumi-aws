// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages an Image Builder Component.
 *
 * ## Example Usage
 * ### URI Document
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.imagebuilder.Component("example", {
 *     platform: "Linux",
 *     uri: `s3://${aws_s3_object.example.bucket}/${aws_s3_object.example.key}`,
 *     version: "1.0.0",
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import `aws_imagebuilder_components` resources using the Amazon Resource Name (ARN). For example:
 *
 * ```sh
 *  $ pulumi import aws:imagebuilder/component:Component example arn:aws:imagebuilder:us-east-1:123456789012:component/example/1.0.0/1
 * ```
 *  Certain resource arguments, such as `uri`, cannot be read via the API and imported into the provider. The provider will display a difference for these arguments the first run after import if declared in the the provider configuration for an imported resource.
 */
export class Component extends pulumi.CustomResource {
    /**
     * Get an existing Component resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ComponentState, opts?: pulumi.CustomResourceOptions): Component {
        return new Component(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:imagebuilder/component:Component';

    /**
     * Returns true if the given object is an instance of Component.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Component {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Component.__pulumiType;
    }

    /**
     * (Required) Amazon Resource Name (ARN) of the component.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Change description of the component.
     */
    public readonly changeDescription!: pulumi.Output<string | undefined>;
    /**
     * Inline YAML string with data of the component. Exactly one of `data` and `uri` can be specified. the provider will only perform drift detection of its value when present in a configuration.
     */
    public readonly data!: pulumi.Output<string>;
    /**
     * Date the component was created.
     */
    public /*out*/ readonly dateCreated!: pulumi.Output<string>;
    /**
     * Description of the component.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Encryption status of the component.
     */
    public /*out*/ readonly encrypted!: pulumi.Output<boolean>;
    /**
     * Amazon Resource Name (ARN) of the Key Management Service (KMS) Key used to encrypt the component.
     */
    public readonly kmsKeyId!: pulumi.Output<string | undefined>;
    /**
     * Name of the component.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Owner of the component.
     */
    public /*out*/ readonly owner!: pulumi.Output<string>;
    /**
     * Platform of the component.
     */
    public readonly platform!: pulumi.Output<string>;
    /**
     * Whether to retain the old version when the resource is destroyed or replacement is necessary. Defaults to `false`.
     */
    public readonly skipDestroy!: pulumi.Output<boolean | undefined>;
    /**
     * Set of Operating Systems (OS) supported by the component.
     */
    public readonly supportedOsVersions!: pulumi.Output<string[] | undefined>;
    /**
     * Key-value map of resource tags for the component. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    /**
     * Type of the component.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * S3 URI with data of the component. Exactly one of `data` and `uri` can be specified.
     *
     * > **NOTE:** Updating `data` or `uri` requires specifying a new `version`. This causes replacement of the resource. The `skipDestroy` argument can be used to retain the old version.
     */
    public readonly uri!: pulumi.Output<string | undefined>;
    /**
     * Version of the component.
     *
     * The following attributes are optional:
     */
    public readonly version!: pulumi.Output<string>;

    /**
     * Create a Component resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ComponentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ComponentArgs | ComponentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ComponentState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["changeDescription"] = state ? state.changeDescription : undefined;
            resourceInputs["data"] = state ? state.data : undefined;
            resourceInputs["dateCreated"] = state ? state.dateCreated : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["encrypted"] = state ? state.encrypted : undefined;
            resourceInputs["kmsKeyId"] = state ? state.kmsKeyId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["owner"] = state ? state.owner : undefined;
            resourceInputs["platform"] = state ? state.platform : undefined;
            resourceInputs["skipDestroy"] = state ? state.skipDestroy : undefined;
            resourceInputs["supportedOsVersions"] = state ? state.supportedOsVersions : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["uri"] = state ? state.uri : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as ComponentArgs | undefined;
            if ((!args || args.platform === undefined) && !opts.urn) {
                throw new Error("Missing required property 'platform'");
            }
            if ((!args || args.version === undefined) && !opts.urn) {
                throw new Error("Missing required property 'version'");
            }
            resourceInputs["changeDescription"] = args ? args.changeDescription : undefined;
            resourceInputs["data"] = args ? args.data : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["platform"] = args ? args.platform : undefined;
            resourceInputs["skipDestroy"] = args ? args.skipDestroy : undefined;
            resourceInputs["supportedOsVersions"] = args ? args.supportedOsVersions : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["uri"] = args ? args.uri : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["dateCreated"] = undefined /*out*/;
            resourceInputs["encrypted"] = undefined /*out*/;
            resourceInputs["owner"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Component.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Component resources.
 */
export interface ComponentState {
    /**
     * (Required) Amazon Resource Name (ARN) of the component.
     */
    arn?: pulumi.Input<string>;
    /**
     * Change description of the component.
     */
    changeDescription?: pulumi.Input<string>;
    /**
     * Inline YAML string with data of the component. Exactly one of `data` and `uri` can be specified. the provider will only perform drift detection of its value when present in a configuration.
     */
    data?: pulumi.Input<string>;
    /**
     * Date the component was created.
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * Description of the component.
     */
    description?: pulumi.Input<string>;
    /**
     * Encryption status of the component.
     */
    encrypted?: pulumi.Input<boolean>;
    /**
     * Amazon Resource Name (ARN) of the Key Management Service (KMS) Key used to encrypt the component.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * Name of the component.
     */
    name?: pulumi.Input<string>;
    /**
     * Owner of the component.
     */
    owner?: pulumi.Input<string>;
    /**
     * Platform of the component.
     */
    platform?: pulumi.Input<string>;
    /**
     * Whether to retain the old version when the resource is destroyed or replacement is necessary. Defaults to `false`.
     */
    skipDestroy?: pulumi.Input<boolean>;
    /**
     * Set of Operating Systems (OS) supported by the component.
     */
    supportedOsVersions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Key-value map of resource tags for the component. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of the component.
     */
    type?: pulumi.Input<string>;
    /**
     * S3 URI with data of the component. Exactly one of `data` and `uri` can be specified.
     *
     * > **NOTE:** Updating `data` or `uri` requires specifying a new `version`. This causes replacement of the resource. The `skipDestroy` argument can be used to retain the old version.
     */
    uri?: pulumi.Input<string>;
    /**
     * Version of the component.
     *
     * The following attributes are optional:
     */
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Component resource.
 */
export interface ComponentArgs {
    /**
     * Change description of the component.
     */
    changeDescription?: pulumi.Input<string>;
    /**
     * Inline YAML string with data of the component. Exactly one of `data` and `uri` can be specified. the provider will only perform drift detection of its value when present in a configuration.
     */
    data?: pulumi.Input<string>;
    /**
     * Description of the component.
     */
    description?: pulumi.Input<string>;
    /**
     * Amazon Resource Name (ARN) of the Key Management Service (KMS) Key used to encrypt the component.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * Name of the component.
     */
    name?: pulumi.Input<string>;
    /**
     * Platform of the component.
     */
    platform: pulumi.Input<string>;
    /**
     * Whether to retain the old version when the resource is destroyed or replacement is necessary. Defaults to `false`.
     */
    skipDestroy?: pulumi.Input<boolean>;
    /**
     * Set of Operating Systems (OS) supported by the component.
     */
    supportedOsVersions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Key-value map of resource tags for the component. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * S3 URI with data of the component. Exactly one of `data` and `uri` can be specified.
     *
     * > **NOTE:** Updating `data` or `uri` requires specifying a new `version`. This causes replacement of the resource. The `skipDestroy` argument can be used to retain the old version.
     */
    uri?: pulumi.Input<string>;
    /**
     * Version of the component.
     *
     * The following attributes are optional:
     */
    version: pulumi.Input<string>;
}
