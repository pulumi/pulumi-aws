// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Provides details about an Image builder Container Recipe.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = pulumi.output(aws.imagebuilder.getContainerRecipe({
 *     arn: "arn:aws:imagebuilder:us-east-1:aws:container-recipe/example/1.0.0",
 * }));
 * ```
 */
export function getContainerRecipe(args: GetContainerRecipeArgs, opts?: pulumi.InvokeOptions): Promise<GetContainerRecipeResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws:imagebuilder/getContainerRecipe:getContainerRecipe", {
        "arn": args.arn,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getContainerRecipe.
 */
export interface GetContainerRecipeArgs {
    /**
     * ARN of the container recipe.
     */
    arn: string;
    /**
     * Key-value map of resource tags for the container recipe.
     */
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getContainerRecipe.
 */
export interface GetContainerRecipeResult {
    readonly arn: string;
    /**
     * List of objects with components for the container recipe.
     */
    readonly components: outputs.imagebuilder.GetContainerRecipeComponent[];
    /**
     * Type of the container.
     */
    readonly containerType: string;
    /**
     * Date the container recipe was created.
     */
    readonly dateCreated: string;
    /**
     * Description of the container recipe.
     */
    readonly description: string;
    /**
     * Dockerfile template used to build the image.
     */
    readonly dockerfileTemplateData: string;
    /**
     * Whether to encrypt the volume. Defaults to unset, which is the value inherited from the parent image.
     */
    readonly encrypted: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * List of objects with instance configurations for building and testing container images.
     */
    readonly instanceConfigurations: outputs.imagebuilder.GetContainerRecipeInstanceConfiguration[];
    /**
     * KMS key used to encrypt the container image.
     */
    readonly kmsKeyId: string;
    /**
     * Name of the container recipe.
     */
    readonly name: string;
    /**
     * Owner of the container recipe.
     */
    readonly owner: string;
    /**
     * Base image for the container recipe.
     */
    readonly parentImage: string;
    /**
     * Platform of the container recipe.
     */
    readonly platform: string;
    /**
     * Key-value map of resource tags for the container recipe.
     */
    readonly tags?: {[key: string]: string};
    /**
     * Destination repository for the container image.
     */
    readonly targetRepositories: outputs.imagebuilder.GetContainerRecipeTargetRepository[];
    /**
     * Version of the container recipe.
     */
    readonly version: string;
    /**
     * Working directory used during build and test workflows.
     */
    readonly workingDirectory: string;
}

export function getContainerRecipeOutput(args: GetContainerRecipeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetContainerRecipeResult> {
    return pulumi.output(args).apply(a => getContainerRecipe(a, opts))
}

/**
 * A collection of arguments for invoking getContainerRecipe.
 */
export interface GetContainerRecipeOutputArgs {
    /**
     * ARN of the container recipe.
     */
    arn: pulumi.Input<string>;
    /**
     * Key-value map of resource tags for the container recipe.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
