// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to get the ARNs and names of Image Builder Distribution Configurations matching the specified criteria.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = pulumi.output(aws.imagebuilder.getDistributionConfigurations({
 *     filters: [{
 *         name: "name",
 *         values: ["example"],
 *     }],
 * }));
 * ```
 */
export function getDistributionConfigurations(args?: GetDistributionConfigurationsArgs, opts?: pulumi.InvokeOptions): Promise<GetDistributionConfigurationsResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws:imagebuilder/getDistributionConfigurations:getDistributionConfigurations", {
        "filters": args.filters,
    }, opts);
}

/**
 * A collection of arguments for invoking getDistributionConfigurations.
 */
export interface GetDistributionConfigurationsArgs {
    /**
     * Configuration block(s) for filtering. Detailed below.
     */
    filters?: inputs.imagebuilder.GetDistributionConfigurationsFilter[];
}

/**
 * A collection of values returned by getDistributionConfigurations.
 */
export interface GetDistributionConfigurationsResult {
    /**
     * Set of ARNs of the matched Image Builder Distribution Configurations.
     */
    readonly arns: string[];
    readonly filters?: outputs.imagebuilder.GetDistributionConfigurationsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Set of names of the matched Image Builder Distribution Configurations.
     */
    readonly names: string[];
}

export function getDistributionConfigurationsOutput(args?: GetDistributionConfigurationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDistributionConfigurationsResult> {
    return pulumi.output(args).apply(a => getDistributionConfigurations(a, opts))
}

/**
 * A collection of arguments for invoking getDistributionConfigurations.
 */
export interface GetDistributionConfigurationsOutputArgs {
    /**
     * Configuration block(s) for filtering. Detailed below.
     */
    filters?: pulumi.Input<pulumi.Input<inputs.imagebuilder.GetDistributionConfigurationsFilterArgs>[]>;
}
