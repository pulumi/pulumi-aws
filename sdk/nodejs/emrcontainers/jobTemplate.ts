// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Manages an EMR Containers (EMR on EKS) Job Template.
 *
 * ## Example Usage
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.emrcontainers.JobTemplate("example", {jobTemplateData: {
 *     executionRoleArn: aws_iam_role.example.arn,
 *     releaseLabel: "emr-6.10.0-latest",
 *     jobDriver: {
 *         sparkSqlJobDriver: {
 *             entryPoint: "default",
 *         },
 *     },
 * }});
 * ```
 *
 * ## Import
 *
 * EKS job templates can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import aws:emrcontainers/jobTemplate:JobTemplate example a1b2c3d4e5f6g7h8i9j10k11l
 * ```
 */
export class JobTemplate extends pulumi.CustomResource {
    /**
     * Get an existing JobTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: JobTemplateState, opts?: pulumi.CustomResourceOptions): JobTemplate {
        return new JobTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:emrcontainers/jobTemplate:JobTemplate';

    /**
     * Returns true if the given object is an instance of JobTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is JobTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === JobTemplate.__pulumiType;
    }

    /**
     * ARN of the job template.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The job template data which holds values of StartJobRun API request.
     */
    public readonly jobTemplateData!: pulumi.Output<outputs.emrcontainers.JobTemplateJobTemplateData>;
    /**
     * The KMS key ARN used to encrypt the job template.
     */
    public readonly kmsKeyArn!: pulumi.Output<string | undefined>;
    /**
     * The specified name of the job template.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a JobTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: JobTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: JobTemplateArgs | JobTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as JobTemplateState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["jobTemplateData"] = state ? state.jobTemplateData : undefined;
            resourceInputs["kmsKeyArn"] = state ? state.kmsKeyArn : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
        } else {
            const args = argsOrState as JobTemplateArgs | undefined;
            if ((!args || args.jobTemplateData === undefined) && !opts.urn) {
                throw new Error("Missing required property 'jobTemplateData'");
            }
            resourceInputs["jobTemplateData"] = args ? args.jobTemplateData : undefined;
            resourceInputs["kmsKeyArn"] = args ? args.kmsKeyArn : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(JobTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering JobTemplate resources.
 */
export interface JobTemplateState {
    /**
     * ARN of the job template.
     */
    arn?: pulumi.Input<string>;
    /**
     * The job template data which holds values of StartJobRun API request.
     */
    jobTemplateData?: pulumi.Input<inputs.emrcontainers.JobTemplateJobTemplateData>;
    /**
     * The KMS key ARN used to encrypt the job template.
     */
    kmsKeyArn?: pulumi.Input<string>;
    /**
     * The specified name of the job template.
     */
    name?: pulumi.Input<string>;
    /**
     * Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a JobTemplate resource.
 */
export interface JobTemplateArgs {
    /**
     * The job template data which holds values of StartJobRun API request.
     */
    jobTemplateData: pulumi.Input<inputs.emrcontainers.JobTemplateJobTemplateData>;
    /**
     * The KMS key ARN used to encrypt the job template.
     */
    kmsKeyArn?: pulumi.Input<string>;
    /**
     * The specified name of the job template.
     */
    name?: pulumi.Input<string>;
    /**
     * Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
