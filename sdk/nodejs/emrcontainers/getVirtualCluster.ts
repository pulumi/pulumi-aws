// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Retrieve information about an EMR Containers (EMR on EKS) Virtual Cluster.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.emrcontainers.getVirtualCluster({
 *     virtualClusterId: "example id",
 * });
 * export const name = example.then(example => example.name);
 * export const arn = example.then(example => example.arn);
 * ```
 */
export function getVirtualCluster(args: GetVirtualClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetVirtualClusterResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:emrcontainers/getVirtualCluster:getVirtualCluster", {
        "tags": args.tags,
        "virtualClusterId": args.virtualClusterId,
    }, opts);
}

/**
 * A collection of arguments for invoking getVirtualCluster.
 */
export interface GetVirtualClusterArgs {
    /**
     * Key-value mapping of resource tags.
     */
    tags?: {[key: string]: string};
    /**
     * ID of the cluster.
     */
    virtualClusterId: string;
}

/**
 * A collection of values returned by getVirtualCluster.
 */
export interface GetVirtualClusterResult {
    /**
     * ARN of the cluster.
     */
    readonly arn: string;
    /**
     * Nested attribute containing information about the underlying container provider (EKS cluster) for your EMR Containers cluster.
     */
    readonly containerProviders: outputs.emrcontainers.GetVirtualClusterContainerProvider[];
    /**
     * Unix epoch time stamp in seconds for when the cluster was created.
     */
    readonly createdAt: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Name of the cluster.
     */
    readonly name: string;
    /**
     * Status of the EKS cluster. One of `RUNNING`, `TERMINATING`, `TERMINATED`, `ARRESTED`.
     */
    readonly state: string;
    /**
     * Key-value mapping of resource tags.
     */
    readonly tags: {[key: string]: string};
    readonly virtualClusterId: string;
}
/**
 * Retrieve information about an EMR Containers (EMR on EKS) Virtual Cluster.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.emrcontainers.getVirtualCluster({
 *     virtualClusterId: "example id",
 * });
 * export const name = example.then(example => example.name);
 * export const arn = example.then(example => example.arn);
 * ```
 */
export function getVirtualClusterOutput(args: GetVirtualClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVirtualClusterResult> {
    return pulumi.output(args).apply((a: any) => getVirtualCluster(a, opts))
}

/**
 * A collection of arguments for invoking getVirtualCluster.
 */
export interface GetVirtualClusterOutputArgs {
    /**
     * Key-value mapping of resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * ID of the cluster.
     */
    virtualClusterId: pulumi.Input<string>;
}
