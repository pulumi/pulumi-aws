// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * Using `pulumi import`, import the Managed Scraper using its identifier.
 * For example:
 *
 * ```sh
 * $ pulumi import aws:amp/scraper:Scraper example s-0123abc-0000-0123-a000-000000000000
 * ```
 */
export class Scraper extends pulumi.CustomResource {
    /**
     * Get an existing Scraper resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ScraperState, opts?: pulumi.CustomResourceOptions): Scraper {
        return new Scraper(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:amp/scraper:Scraper';

    /**
     * Returns true if the given object is an instance of Scraper.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Scraper {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Scraper.__pulumiType;
    }

    /**
     * a name to associate with the managed scraper. This is for your use, and does not need to be unique.
     */
    public readonly alias!: pulumi.Output<string | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the new scraper.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Configuration block for the managed scraper to send metrics to. See `destination`.
     */
    public readonly destination!: pulumi.Output<outputs.amp.ScraperDestination | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the IAM role that provides permissions for the scraper to discover, collect, and produce metrics
     */
    public /*out*/ readonly roleArn!: pulumi.Output<string>;
    /**
     * The configuration file to use in the new scraper. For more information, see [Scraper configuration](https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-collector-how-to.html#AMP-collector-configuration).
     */
    public readonly scrapeConfiguration!: pulumi.Output<string>;
    /**
     * Configuration block to specify where the managed scraper will collect metrics from. See `source`.
     *
     * The following arguments are optional:
     */
    public readonly source!: pulumi.Output<outputs.amp.ScraperSource | undefined>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * @deprecated Please use `tags` instead.
     */
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.amp.ScraperTimeouts | undefined>;

    /**
     * Create a Scraper resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScraperArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ScraperArgs | ScraperState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ScraperState | undefined;
            resourceInputs["alias"] = state ? state.alias : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["destination"] = state ? state.destination : undefined;
            resourceInputs["roleArn"] = state ? state.roleArn : undefined;
            resourceInputs["scrapeConfiguration"] = state ? state.scrapeConfiguration : undefined;
            resourceInputs["source"] = state ? state.source : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as ScraperArgs | undefined;
            if ((!args || args.scrapeConfiguration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scrapeConfiguration'");
            }
            resourceInputs["alias"] = args ? args.alias : undefined;
            resourceInputs["destination"] = args ? args.destination : undefined;
            resourceInputs["scrapeConfiguration"] = args ? args.scrapeConfiguration : undefined;
            resourceInputs["source"] = args ? args.source : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["roleArn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Scraper.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Scraper resources.
 */
export interface ScraperState {
    /**
     * a name to associate with the managed scraper. This is for your use, and does not need to be unique.
     */
    alias?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the new scraper.
     */
    arn?: pulumi.Input<string>;
    /**
     * Configuration block for the managed scraper to send metrics to. See `destination`.
     */
    destination?: pulumi.Input<inputs.amp.ScraperDestination>;
    /**
     * The Amazon Resource Name (ARN) of the IAM role that provides permissions for the scraper to discover, collect, and produce metrics
     */
    roleArn?: pulumi.Input<string>;
    /**
     * The configuration file to use in the new scraper. For more information, see [Scraper configuration](https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-collector-how-to.html#AMP-collector-configuration).
     */
    scrapeConfiguration?: pulumi.Input<string>;
    /**
     * Configuration block to specify where the managed scraper will collect metrics from. See `source`.
     *
     * The following arguments are optional:
     */
    source?: pulumi.Input<inputs.amp.ScraperSource>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * @deprecated Please use `tags` instead.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.amp.ScraperTimeouts>;
}

/**
 * The set of arguments for constructing a Scraper resource.
 */
export interface ScraperArgs {
    /**
     * a name to associate with the managed scraper. This is for your use, and does not need to be unique.
     */
    alias?: pulumi.Input<string>;
    /**
     * Configuration block for the managed scraper to send metrics to. See `destination`.
     */
    destination?: pulumi.Input<inputs.amp.ScraperDestination>;
    /**
     * The configuration file to use in the new scraper. For more information, see [Scraper configuration](https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-collector-how-to.html#AMP-collector-configuration).
     */
    scrapeConfiguration: pulumi.Input<string>;
    /**
     * Configuration block to specify where the managed scraper will collect metrics from. See `source`.
     *
     * The following arguments are optional:
     */
    source?: pulumi.Input<inputs.amp.ScraperSource>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.amp.ScraperTimeouts>;
}
