// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource for managing an Amazon S3 Tables Table Bucket.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.s3tables.TableBucket("example", {name: "example-bucket"});
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import S3 Tables Table Bucket using the `arn`. For example:
 *
 * ```sh
 * $ pulumi import aws:s3tables/tableBucket:TableBucket example arn:aws:s3tables:us-west-2:123456789012:bucket/example-bucket
 * ```
 */
export class TableBucket extends pulumi.CustomResource {
    /**
     * Get an existing TableBucket resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TableBucketState, opts?: pulumi.CustomResourceOptions): TableBucket {
        return new TableBucket(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:s3tables/tableBucket:TableBucket';

    /**
     * Returns true if the given object is an instance of TableBucket.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TableBucket {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TableBucket.__pulumiType;
    }

    /**
     * ARN of the table bucket.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Date and time when the bucket was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * A single table bucket maintenance configuration block.
     * See `maintenanceConfiguration` below
     */
    public readonly maintenanceConfiguration!: pulumi.Output<outputs.s3tables.TableBucketMaintenanceConfiguration>;
    /**
     * Name of the table bucket.
     * Must be between 3 and 63 characters in length.
     * Can consist of lowercase letters, numbers, and hyphens, and must begin and end with a lowercase letter or number.
     * A full list of bucket naming rules may be found in S3 Tables documentation.
     *
     * The following argument is optional:
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Account ID of the account that owns the table bucket.
     */
    public /*out*/ readonly ownerAccountId!: pulumi.Output<string>;

    /**
     * Create a TableBucket resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: TableBucketArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TableBucketArgs | TableBucketState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TableBucketState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["maintenanceConfiguration"] = state ? state.maintenanceConfiguration : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["ownerAccountId"] = state ? state.ownerAccountId : undefined;
        } else {
            const args = argsOrState as TableBucketArgs | undefined;
            resourceInputs["maintenanceConfiguration"] = args ? args.maintenanceConfiguration : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["ownerAccountId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TableBucket.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TableBucket resources.
 */
export interface TableBucketState {
    /**
     * ARN of the table bucket.
     */
    arn?: pulumi.Input<string>;
    /**
     * Date and time when the bucket was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * A single table bucket maintenance configuration block.
     * See `maintenanceConfiguration` below
     */
    maintenanceConfiguration?: pulumi.Input<inputs.s3tables.TableBucketMaintenanceConfiguration>;
    /**
     * Name of the table bucket.
     * Must be between 3 and 63 characters in length.
     * Can consist of lowercase letters, numbers, and hyphens, and must begin and end with a lowercase letter or number.
     * A full list of bucket naming rules may be found in S3 Tables documentation.
     *
     * The following argument is optional:
     */
    name?: pulumi.Input<string>;
    /**
     * Account ID of the account that owns the table bucket.
     */
    ownerAccountId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TableBucket resource.
 */
export interface TableBucketArgs {
    /**
     * A single table bucket maintenance configuration block.
     * See `maintenanceConfiguration` below
     */
    maintenanceConfiguration?: pulumi.Input<inputs.s3tables.TableBucketMaintenanceConfiguration>;
    /**
     * Name of the table bucket.
     * Must be between 3 and 63 characters in length.
     * Can consist of lowercase letters, numbers, and hyphens, and must begin and end with a lowercase letter or number.
     * A full list of bucket naming rules may be found in S3 Tables documentation.
     *
     * The following argument is optional:
     */
    name?: pulumi.Input<string>;
}
