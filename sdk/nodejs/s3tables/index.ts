// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { NamespaceArgs, NamespaceState } from "./namespace";
export type Namespace = import("./namespace").Namespace;
export const Namespace: typeof import("./namespace").Namespace = null as any;
utilities.lazyLoad(exports, ["Namespace"], () => require("./namespace"));

export { TableArgs, TableState } from "./table";
export type Table = import("./table").Table;
export const Table: typeof import("./table").Table = null as any;
utilities.lazyLoad(exports, ["Table"], () => require("./table"));

export { TableBucketArgs, TableBucketState } from "./tableBucket";
export type TableBucket = import("./tableBucket").TableBucket;
export const TableBucket: typeof import("./tableBucket").TableBucket = null as any;
utilities.lazyLoad(exports, ["TableBucket"], () => require("./tableBucket"));

export { TableBucketPolicyArgs, TableBucketPolicyState } from "./tableBucketPolicy";
export type TableBucketPolicy = import("./tableBucketPolicy").TableBucketPolicy;
export const TableBucketPolicy: typeof import("./tableBucketPolicy").TableBucketPolicy = null as any;
utilities.lazyLoad(exports, ["TableBucketPolicy"], () => require("./tableBucketPolicy"));

export { TablePolicyArgs, TablePolicyState } from "./tablePolicy";
export type TablePolicy = import("./tablePolicy").TablePolicy;
export const TablePolicy: typeof import("./tablePolicy").TablePolicy = null as any;
utilities.lazyLoad(exports, ["TablePolicy"], () => require("./tablePolicy"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws:s3tables/namespace:Namespace":
                return new Namespace(name, <any>undefined, { urn })
            case "aws:s3tables/table:Table":
                return new Table(name, <any>undefined, { urn })
            case "aws:s3tables/tableBucket:TableBucket":
                return new TableBucket(name, <any>undefined, { urn })
            case "aws:s3tables/tableBucketPolicy:TableBucketPolicy":
                return new TableBucketPolicy(name, <any>undefined, { urn })
            case "aws:s3tables/tablePolicy:TablePolicy":
                return new TablePolicy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "s3tables/namespace", _module)
pulumi.runtime.registerResourceModule("aws", "s3tables/table", _module)
pulumi.runtime.registerResourceModule("aws", "s3tables/tableBucket", _module)
pulumi.runtime.registerResourceModule("aws", "s3tables/tableBucketPolicy", _module)
pulumi.runtime.registerResourceModule("aws", "s3tables/tablePolicy", _module)
