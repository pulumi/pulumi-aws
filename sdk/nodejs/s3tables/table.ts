// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource for managing an Amazon S3 Tables Table.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleTableBucket = new aws.s3tables.TableBucket("example", {name: "example-bucket"});
 * const exampleNamespace = new aws.s3tables.Namespace("example", {
 *     namespace: "example_namespace",
 *     tableBucketArn: exampleTableBucket.arn,
 * });
 * const example = new aws.s3tables.Table("example", {
 *     name: "example_table",
 *     namespace: exampleNamespace.namespace,
 *     tableBucketArn: exampleNamespace.tableBucketArn,
 *     format: "ICEBERG",
 * });
 * ```
 *
 * ### With Metadata Schema
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleTableBucket = new aws.s3tables.TableBucket("example", {name: "example-bucket"});
 * const exampleNamespace = new aws.s3tables.Namespace("example", {
 *     namespace: "example_namespace",
 *     tableBucketArn: exampleTableBucket.arn,
 * });
 * const example = new aws.s3tables.Table("example", {
 *     name: "example_table",
 *     namespace: exampleNamespace.namespace,
 *     tableBucketArn: exampleNamespace.tableBucketArn,
 *     format: "ICEBERG",
 *     metadata: {
 *         iceberg: {
 *             schema: {
 *                 fields: [
 *                     {
 *                         name: "id",
 *                         type: "long",
 *                         required: true,
 *                     },
 *                     {
 *                         name: "name",
 *                         type: "string",
 *                         required: true,
 *                     },
 *                     {
 *                         name: "created_at",
 *                         type: "timestamp",
 *                         required: false,
 *                     },
 *                     {
 *                         name: "price",
 *                         type: "decimal(10,2)",
 *                         required: false,
 *                     },
 *                 ],
 *             },
 *         },
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import S3 Tables Table using the `table_bucket_arn`, the value of `namespace`, and the value of `name`, separated by a semicolon (`;`). For example:
 *
 * ```sh
 * $ pulumi import aws:s3tables/table:Table example 'arn:aws:s3tables:us-west-2:123456789012:bucket/example-bucket;example-namespace;example-table'
 * ```
 */
export class Table extends pulumi.CustomResource {
    /**
     * Get an existing Table resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TableState, opts?: pulumi.CustomResourceOptions): Table {
        return new Table(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:s3tables/table:Table';

    /**
     * Returns true if the given object is an instance of Table.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Table {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Table.__pulumiType;
    }

    /**
     * ARN of the table.
     */
    declare public /*out*/ readonly arn: pulumi.Output<string>;
    /**
     * Date and time when the namespace was created.
     */
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    /**
     * Account ID of the account that created the namespace.
     */
    declare public /*out*/ readonly createdBy: pulumi.Output<string>;
    /**
     * A single table bucket encryption configuration object.
     * See `encryptionConfiguration` below.
     */
    declare public readonly encryptionConfiguration: pulumi.Output<outputs.s3tables.TableEncryptionConfiguration>;
    /**
     * Format of the table.
     * Must be `ICEBERG`.
     */
    declare public readonly format: pulumi.Output<string>;
    /**
     * A single table bucket maintenance configuration object.
     * See `maintenanceConfiguration` below.
     */
    declare public readonly maintenanceConfiguration: pulumi.Output<outputs.s3tables.TableMaintenanceConfiguration>;
    /**
     * Contains details about the table metadata. This configuration specifies the metadata format and schema for the table. Currently only supports Iceberg format.
     * See `metadata` below.
     */
    declare public readonly metadata: pulumi.Output<outputs.s3tables.TableMetadata | undefined>;
    /**
     * Location of table metadata.
     */
    declare public /*out*/ readonly metadataLocation: pulumi.Output<string>;
    /**
     * Date and time when the namespace was last modified.
     */
    declare public /*out*/ readonly modifiedAt: pulumi.Output<string>;
    /**
     * Account ID of the account that last modified the namespace.
     */
    declare public /*out*/ readonly modifiedBy: pulumi.Output<string>;
    /**
     * Name of the table.
     * Must be between 1 and 255 characters in length.
     * Can consist of lowercase letters, numbers, and underscores, and must begin and end with a lowercase letter or number.
     * A full list of table naming rules can be found in the [S3 Tables documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-tables-buckets-naming.html#naming-rules-table).
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Name of the namespace for this table.
     * Must be between 1 and 255 characters in length.
     * Can consist of lowercase letters, numbers, and underscores, and must begin and end with a lowercase letter or number.
     */
    declare public readonly namespace: pulumi.Output<string>;
    /**
     * Account ID of the account that owns the namespace.
     */
    declare public /*out*/ readonly ownerAccountId: pulumi.Output<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * ARN referencing the Table Bucket that contains this Namespace.
     *
     * The following arguments are optional:
     */
    declare public readonly tableBucketArn: pulumi.Output<string>;
    /**
     * Type of the table.
     * One of `customer` or `aws`.
     */
    declare public /*out*/ readonly type: pulumi.Output<string>;
    /**
     * Identifier for the current version of table data.
     */
    declare public /*out*/ readonly versionToken: pulumi.Output<string>;
    /**
     * S3 URI pointing to the S3 Bucket that contains the table data.
     */
    declare public /*out*/ readonly warehouseLocation: pulumi.Output<string>;

    /**
     * Create a Table resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TableArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TableArgs | TableState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TableState | undefined;
            resourceInputs["arn"] = state?.arn;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["createdBy"] = state?.createdBy;
            resourceInputs["encryptionConfiguration"] = state?.encryptionConfiguration;
            resourceInputs["format"] = state?.format;
            resourceInputs["maintenanceConfiguration"] = state?.maintenanceConfiguration;
            resourceInputs["metadata"] = state?.metadata;
            resourceInputs["metadataLocation"] = state?.metadataLocation;
            resourceInputs["modifiedAt"] = state?.modifiedAt;
            resourceInputs["modifiedBy"] = state?.modifiedBy;
            resourceInputs["name"] = state?.name;
            resourceInputs["namespace"] = state?.namespace;
            resourceInputs["ownerAccountId"] = state?.ownerAccountId;
            resourceInputs["region"] = state?.region;
            resourceInputs["tableBucketArn"] = state?.tableBucketArn;
            resourceInputs["type"] = state?.type;
            resourceInputs["versionToken"] = state?.versionToken;
            resourceInputs["warehouseLocation"] = state?.warehouseLocation;
        } else {
            const args = argsOrState as TableArgs | undefined;
            if (args?.format === undefined && !opts.urn) {
                throw new Error("Missing required property 'format'");
            }
            if (args?.namespace === undefined && !opts.urn) {
                throw new Error("Missing required property 'namespace'");
            }
            if (args?.tableBucketArn === undefined && !opts.urn) {
                throw new Error("Missing required property 'tableBucketArn'");
            }
            resourceInputs["encryptionConfiguration"] = args?.encryptionConfiguration;
            resourceInputs["format"] = args?.format;
            resourceInputs["maintenanceConfiguration"] = args?.maintenanceConfiguration;
            resourceInputs["metadata"] = args?.metadata;
            resourceInputs["name"] = args?.name;
            resourceInputs["namespace"] = args?.namespace;
            resourceInputs["region"] = args?.region;
            resourceInputs["tableBucketArn"] = args?.tableBucketArn;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["metadataLocation"] = undefined /*out*/;
            resourceInputs["modifiedAt"] = undefined /*out*/;
            resourceInputs["modifiedBy"] = undefined /*out*/;
            resourceInputs["ownerAccountId"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["versionToken"] = undefined /*out*/;
            resourceInputs["warehouseLocation"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Table.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Table resources.
 */
export interface TableState {
    /**
     * ARN of the table.
     */
    arn?: pulumi.Input<string>;
    /**
     * Date and time when the namespace was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Account ID of the account that created the namespace.
     */
    createdBy?: pulumi.Input<string>;
    /**
     * A single table bucket encryption configuration object.
     * See `encryptionConfiguration` below.
     */
    encryptionConfiguration?: pulumi.Input<inputs.s3tables.TableEncryptionConfiguration>;
    /**
     * Format of the table.
     * Must be `ICEBERG`.
     */
    format?: pulumi.Input<string>;
    /**
     * A single table bucket maintenance configuration object.
     * See `maintenanceConfiguration` below.
     */
    maintenanceConfiguration?: pulumi.Input<inputs.s3tables.TableMaintenanceConfiguration>;
    /**
     * Contains details about the table metadata. This configuration specifies the metadata format and schema for the table. Currently only supports Iceberg format.
     * See `metadata` below.
     */
    metadata?: pulumi.Input<inputs.s3tables.TableMetadata>;
    /**
     * Location of table metadata.
     */
    metadataLocation?: pulumi.Input<string>;
    /**
     * Date and time when the namespace was last modified.
     */
    modifiedAt?: pulumi.Input<string>;
    /**
     * Account ID of the account that last modified the namespace.
     */
    modifiedBy?: pulumi.Input<string>;
    /**
     * Name of the table.
     * Must be between 1 and 255 characters in length.
     * Can consist of lowercase letters, numbers, and underscores, and must begin and end with a lowercase letter or number.
     * A full list of table naming rules can be found in the [S3 Tables documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-tables-buckets-naming.html#naming-rules-table).
     */
    name?: pulumi.Input<string>;
    /**
     * Name of the namespace for this table.
     * Must be between 1 and 255 characters in length.
     * Can consist of lowercase letters, numbers, and underscores, and must begin and end with a lowercase letter or number.
     */
    namespace?: pulumi.Input<string>;
    /**
     * Account ID of the account that owns the namespace.
     */
    ownerAccountId?: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * ARN referencing the Table Bucket that contains this Namespace.
     *
     * The following arguments are optional:
     */
    tableBucketArn?: pulumi.Input<string>;
    /**
     * Type of the table.
     * One of `customer` or `aws`.
     */
    type?: pulumi.Input<string>;
    /**
     * Identifier for the current version of table data.
     */
    versionToken?: pulumi.Input<string>;
    /**
     * S3 URI pointing to the S3 Bucket that contains the table data.
     */
    warehouseLocation?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Table resource.
 */
export interface TableArgs {
    /**
     * A single table bucket encryption configuration object.
     * See `encryptionConfiguration` below.
     */
    encryptionConfiguration?: pulumi.Input<inputs.s3tables.TableEncryptionConfiguration>;
    /**
     * Format of the table.
     * Must be `ICEBERG`.
     */
    format: pulumi.Input<string>;
    /**
     * A single table bucket maintenance configuration object.
     * See `maintenanceConfiguration` below.
     */
    maintenanceConfiguration?: pulumi.Input<inputs.s3tables.TableMaintenanceConfiguration>;
    /**
     * Contains details about the table metadata. This configuration specifies the metadata format and schema for the table. Currently only supports Iceberg format.
     * See `metadata` below.
     */
    metadata?: pulumi.Input<inputs.s3tables.TableMetadata>;
    /**
     * Name of the table.
     * Must be between 1 and 255 characters in length.
     * Can consist of lowercase letters, numbers, and underscores, and must begin and end with a lowercase letter or number.
     * A full list of table naming rules can be found in the [S3 Tables documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-tables-buckets-naming.html#naming-rules-table).
     */
    name?: pulumi.Input<string>;
    /**
     * Name of the namespace for this table.
     * Must be between 1 and 255 characters in length.
     * Can consist of lowercase letters, numbers, and underscores, and must begin and end with a lowercase letter or number.
     */
    namespace: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * ARN referencing the Table Bucket that contains this Namespace.
     *
     * The following arguments are optional:
     */
    tableBucketArn: pulumi.Input<string>;
}
