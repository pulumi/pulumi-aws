// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides an Amazon Managed Grafana workspace API Key resource.
 *
 * ## Example Usage
 * ### Basic configuration
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const key = new aws.grafana.WorkspaceApiKey("key", {
 *     keyName: "test-key",
 *     keyRole: "VIEWER",
 *     secondsToLive: 3600,
 *     workspaceId: aws_grafana_workspace.test.id,
 * });
 * ```
 */
export class WorkspaceApiKey extends pulumi.CustomResource {
    /**
     * Get an existing WorkspaceApiKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkspaceApiKeyState, opts?: pulumi.CustomResourceOptions): WorkspaceApiKey {
        return new WorkspaceApiKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:grafana/workspaceApiKey:WorkspaceApiKey';

    /**
     * Returns true if the given object is an instance of WorkspaceApiKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WorkspaceApiKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkspaceApiKey.__pulumiType;
    }

    /**
     * The key token in JSON format. Use this value as a bearer token to authenticate HTTP requests to the workspace.
     */
    public /*out*/ readonly key!: pulumi.Output<string>;
    /**
     * Specifies the name of the API key. Key names must be unique to the workspace.
     */
    public readonly keyName!: pulumi.Output<string>;
    /**
     * Specifies the permission level of the API key. Valid values are `VIEWER`, `EDITOR`, or `ADMIN`.
     */
    public readonly keyRole!: pulumi.Output<string>;
    /**
     * Specifies the time in seconds until the API key expires. Keys can be valid for up to 30 days.
     */
    public readonly secondsToLive!: pulumi.Output<number>;
    /**
     * The ID of the workspace that the API key is valid for.
     */
    public readonly workspaceId!: pulumi.Output<string>;

    /**
     * Create a WorkspaceApiKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkspaceApiKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkspaceApiKeyArgs | WorkspaceApiKeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WorkspaceApiKeyState | undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["keyName"] = state ? state.keyName : undefined;
            resourceInputs["keyRole"] = state ? state.keyRole : undefined;
            resourceInputs["secondsToLive"] = state ? state.secondsToLive : undefined;
            resourceInputs["workspaceId"] = state ? state.workspaceId : undefined;
        } else {
            const args = argsOrState as WorkspaceApiKeyArgs | undefined;
            if ((!args || args.keyName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keyName'");
            }
            if ((!args || args.keyRole === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keyRole'");
            }
            if ((!args || args.secondsToLive === undefined) && !opts.urn) {
                throw new Error("Missing required property 'secondsToLive'");
            }
            if ((!args || args.workspaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workspaceId'");
            }
            resourceInputs["keyName"] = args ? args.keyName : undefined;
            resourceInputs["keyRole"] = args ? args.keyRole : undefined;
            resourceInputs["secondsToLive"] = args ? args.secondsToLive : undefined;
            resourceInputs["workspaceId"] = args ? args.workspaceId : undefined;
            resourceInputs["key"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WorkspaceApiKey.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WorkspaceApiKey resources.
 */
export interface WorkspaceApiKeyState {
    /**
     * The key token in JSON format. Use this value as a bearer token to authenticate HTTP requests to the workspace.
     */
    key?: pulumi.Input<string>;
    /**
     * Specifies the name of the API key. Key names must be unique to the workspace.
     */
    keyName?: pulumi.Input<string>;
    /**
     * Specifies the permission level of the API key. Valid values are `VIEWER`, `EDITOR`, or `ADMIN`.
     */
    keyRole?: pulumi.Input<string>;
    /**
     * Specifies the time in seconds until the API key expires. Keys can be valid for up to 30 days.
     */
    secondsToLive?: pulumi.Input<number>;
    /**
     * The ID of the workspace that the API key is valid for.
     */
    workspaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WorkspaceApiKey resource.
 */
export interface WorkspaceApiKeyArgs {
    /**
     * Specifies the name of the API key. Key names must be unique to the workspace.
     */
    keyName: pulumi.Input<string>;
    /**
     * Specifies the permission level of the API key. Valid values are `VIEWER`, `EDITOR`, or `ADMIN`.
     */
    keyRole: pulumi.Input<string>;
    /**
     * Specifies the time in seconds until the API key expires. Keys can be valid for up to 30 days.
     */
    secondsToLive: pulumi.Input<number>;
    /**
     * The ID of the workspace that the API key is valid for.
     */
    workspaceId: pulumi.Input<string>;
}
