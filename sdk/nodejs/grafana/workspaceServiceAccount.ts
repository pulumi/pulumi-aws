// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.grafana.WorkspaceServiceAccount("example", {
 *     name: "example-admin",
 *     grafanaRole: "ADMIN",
 *     workspaceId: exampleAwsGrafanaWorkspace.id,
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Managed Grafana Workspace Service Account using the `workspace_id` and `service_account_id` separated by a comma (`,`). For example:
 *
 * ```sh
 * $ pulumi import aws:grafana/workspaceServiceAccount:WorkspaceServiceAccount example g-abc12345,1
 * ```
 */
export class WorkspaceServiceAccount extends pulumi.CustomResource {
    /**
     * Get an existing WorkspaceServiceAccount resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkspaceServiceAccountState, opts?: pulumi.CustomResourceOptions): WorkspaceServiceAccount {
        return new WorkspaceServiceAccount(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:grafana/workspaceServiceAccount:WorkspaceServiceAccount';

    /**
     * Returns true if the given object is an instance of WorkspaceServiceAccount.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WorkspaceServiceAccount {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkspaceServiceAccount.__pulumiType;
    }

    /**
     * The permission level to use for this service account. For more information about the roles and the permissions each has, see the [User roles](https://docs.aws.amazon.com/grafana/latest/userguide/Grafana-user-roles.html) documentation.
     */
    public readonly grafanaRole!: pulumi.Output<string>;
    /**
     * A name for the service account. The name must be unique within the workspace, as it determines the ID associated with the service account.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Identifier of the service account in the given Grafana workspace
     */
    public /*out*/ readonly serviceAccountId!: pulumi.Output<string>;
    /**
     * The Grafana workspace with which the service account is associated.
     */
    public readonly workspaceId!: pulumi.Output<string>;

    /**
     * Create a WorkspaceServiceAccount resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkspaceServiceAccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkspaceServiceAccountArgs | WorkspaceServiceAccountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WorkspaceServiceAccountState | undefined;
            resourceInputs["grafanaRole"] = state ? state.grafanaRole : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["serviceAccountId"] = state ? state.serviceAccountId : undefined;
            resourceInputs["workspaceId"] = state ? state.workspaceId : undefined;
        } else {
            const args = argsOrState as WorkspaceServiceAccountArgs | undefined;
            if ((!args || args.grafanaRole === undefined) && !opts.urn) {
                throw new Error("Missing required property 'grafanaRole'");
            }
            if ((!args || args.workspaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workspaceId'");
            }
            resourceInputs["grafanaRole"] = args ? args.grafanaRole : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["workspaceId"] = args ? args.workspaceId : undefined;
            resourceInputs["serviceAccountId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WorkspaceServiceAccount.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WorkspaceServiceAccount resources.
 */
export interface WorkspaceServiceAccountState {
    /**
     * The permission level to use for this service account. For more information about the roles and the permissions each has, see the [User roles](https://docs.aws.amazon.com/grafana/latest/userguide/Grafana-user-roles.html) documentation.
     */
    grafanaRole?: pulumi.Input<string>;
    /**
     * A name for the service account. The name must be unique within the workspace, as it determines the ID associated with the service account.
     */
    name?: pulumi.Input<string>;
    /**
     * Identifier of the service account in the given Grafana workspace
     */
    serviceAccountId?: pulumi.Input<string>;
    /**
     * The Grafana workspace with which the service account is associated.
     */
    workspaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WorkspaceServiceAccount resource.
 */
export interface WorkspaceServiceAccountArgs {
    /**
     * The permission level to use for this service account. For more information about the roles and the permissions each has, see the [User roles](https://docs.aws.amazon.com/grafana/latest/userguide/Grafana-user-roles.html) documentation.
     */
    grafanaRole: pulumi.Input<string>;
    /**
     * A name for the service account. The name must be unique within the workspace, as it determines the ID associated with the service account.
     */
    name?: pulumi.Input<string>;
    /**
     * The Grafana workspace with which the service account is associated.
     */
    workspaceId: pulumi.Input<string>;
}
