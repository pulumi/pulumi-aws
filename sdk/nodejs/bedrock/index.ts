// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AgentAgentArgs, AgentAgentState } from "./agentAgent";
export type AgentAgent = import("./agentAgent").AgentAgent;
export const AgentAgent: typeof import("./agentAgent").AgentAgent = null as any;
utilities.lazyLoad(exports, ["AgentAgent"], () => require("./agentAgent"));

export { AgentAgentActionGroupArgs, AgentAgentActionGroupState } from "./agentAgentActionGroup";
export type AgentAgentActionGroup = import("./agentAgentActionGroup").AgentAgentActionGroup;
export const AgentAgentActionGroup: typeof import("./agentAgentActionGroup").AgentAgentActionGroup = null as any;
utilities.lazyLoad(exports, ["AgentAgentActionGroup"], () => require("./agentAgentActionGroup"));

export { AgentAgentAliasArgs, AgentAgentAliasState } from "./agentAgentAlias";
export type AgentAgentAlias = import("./agentAgentAlias").AgentAgentAlias;
export const AgentAgentAlias: typeof import("./agentAgentAlias").AgentAgentAlias = null as any;
utilities.lazyLoad(exports, ["AgentAgentAlias"], () => require("./agentAgentAlias"));

export { AgentAgentCollaboratorArgs, AgentAgentCollaboratorState } from "./agentAgentCollaborator";
export type AgentAgentCollaborator = import("./agentAgentCollaborator").AgentAgentCollaborator;
export const AgentAgentCollaborator: typeof import("./agentAgentCollaborator").AgentAgentCollaborator = null as any;
utilities.lazyLoad(exports, ["AgentAgentCollaborator"], () => require("./agentAgentCollaborator"));

export { AgentAgentKnowledgeBaseAssociationArgs, AgentAgentKnowledgeBaseAssociationState } from "./agentAgentKnowledgeBaseAssociation";
export type AgentAgentKnowledgeBaseAssociation = import("./agentAgentKnowledgeBaseAssociation").AgentAgentKnowledgeBaseAssociation;
export const AgentAgentKnowledgeBaseAssociation: typeof import("./agentAgentKnowledgeBaseAssociation").AgentAgentKnowledgeBaseAssociation = null as any;
utilities.lazyLoad(exports, ["AgentAgentKnowledgeBaseAssociation"], () => require("./agentAgentKnowledgeBaseAssociation"));

export { AgentDataSourceArgs, AgentDataSourceState } from "./agentDataSource";
export type AgentDataSource = import("./agentDataSource").AgentDataSource;
export const AgentDataSource: typeof import("./agentDataSource").AgentDataSource = null as any;
utilities.lazyLoad(exports, ["AgentDataSource"], () => require("./agentDataSource"));

export { AgentKnowledgeBaseArgs, AgentKnowledgeBaseState } from "./agentKnowledgeBase";
export type AgentKnowledgeBase = import("./agentKnowledgeBase").AgentKnowledgeBase;
export const AgentKnowledgeBase: typeof import("./agentKnowledgeBase").AgentKnowledgeBase = null as any;
utilities.lazyLoad(exports, ["AgentKnowledgeBase"], () => require("./agentKnowledgeBase"));

export { AgentPromptArgs, AgentPromptState } from "./agentPrompt";
export type AgentPrompt = import("./agentPrompt").AgentPrompt;
export const AgentPrompt: typeof import("./agentPrompt").AgentPrompt = null as any;
utilities.lazyLoad(exports, ["AgentPrompt"], () => require("./agentPrompt"));

export { CustomModelArgs, CustomModelState } from "./customModel";
export type CustomModel = import("./customModel").CustomModel;
export const CustomModel: typeof import("./customModel").CustomModel = null as any;
utilities.lazyLoad(exports, ["CustomModel"], () => require("./customModel"));

export { GetAgentAgentVersionsArgs, GetAgentAgentVersionsResult, GetAgentAgentVersionsOutputArgs } from "./getAgentAgentVersions";
export const getAgentAgentVersions: typeof import("./getAgentAgentVersions").getAgentAgentVersions = null as any;
export const getAgentAgentVersionsOutput: typeof import("./getAgentAgentVersions").getAgentAgentVersionsOutput = null as any;
utilities.lazyLoad(exports, ["getAgentAgentVersions","getAgentAgentVersionsOutput"], () => require("./getAgentAgentVersions"));

export { GetCustomModelArgs, GetCustomModelResult, GetCustomModelOutputArgs } from "./getCustomModel";
export const getCustomModel: typeof import("./getCustomModel").getCustomModel = null as any;
export const getCustomModelOutput: typeof import("./getCustomModel").getCustomModelOutput = null as any;
utilities.lazyLoad(exports, ["getCustomModel","getCustomModelOutput"], () => require("./getCustomModel"));

export { GetCustomModelsResult } from "./getCustomModels";
export const getCustomModels: typeof import("./getCustomModels").getCustomModels = null as any;
export const getCustomModelsOutput: typeof import("./getCustomModels").getCustomModelsOutput = null as any;
utilities.lazyLoad(exports, ["getCustomModels","getCustomModelsOutput"], () => require("./getCustomModels"));

export { GetInferenceProfileArgs, GetInferenceProfileResult, GetInferenceProfileOutputArgs } from "./getInferenceProfile";
export const getInferenceProfile: typeof import("./getInferenceProfile").getInferenceProfile = null as any;
export const getInferenceProfileOutput: typeof import("./getInferenceProfile").getInferenceProfileOutput = null as any;
utilities.lazyLoad(exports, ["getInferenceProfile","getInferenceProfileOutput"], () => require("./getInferenceProfile"));

export { GetInferenceProfilesResult } from "./getInferenceProfiles";
export const getInferenceProfiles: typeof import("./getInferenceProfiles").getInferenceProfiles = null as any;
export const getInferenceProfilesOutput: typeof import("./getInferenceProfiles").getInferenceProfilesOutput = null as any;
utilities.lazyLoad(exports, ["getInferenceProfiles","getInferenceProfilesOutput"], () => require("./getInferenceProfiles"));

export { GuardrailArgs, GuardrailState } from "./guardrail";
export type Guardrail = import("./guardrail").Guardrail;
export const Guardrail: typeof import("./guardrail").Guardrail = null as any;
utilities.lazyLoad(exports, ["Guardrail"], () => require("./guardrail"));

export { GuardrailVersionArgs, GuardrailVersionState } from "./guardrailVersion";
export type GuardrailVersion = import("./guardrailVersion").GuardrailVersion;
export const GuardrailVersion: typeof import("./guardrailVersion").GuardrailVersion = null as any;
utilities.lazyLoad(exports, ["GuardrailVersion"], () => require("./guardrailVersion"));

export { InferenceProfileArgs, InferenceProfileState } from "./inferenceProfile";
export type InferenceProfile = import("./inferenceProfile").InferenceProfile;
export const InferenceProfile: typeof import("./inferenceProfile").InferenceProfile = null as any;
utilities.lazyLoad(exports, ["InferenceProfile"], () => require("./inferenceProfile"));

export { ProvisionedModelThroughputArgs, ProvisionedModelThroughputState } from "./provisionedModelThroughput";
export type ProvisionedModelThroughput = import("./provisionedModelThroughput").ProvisionedModelThroughput;
export const ProvisionedModelThroughput: typeof import("./provisionedModelThroughput").ProvisionedModelThroughput = null as any;
utilities.lazyLoad(exports, ["ProvisionedModelThroughput"], () => require("./provisionedModelThroughput"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws:bedrock/agentAgent:AgentAgent":
                return new AgentAgent(name, <any>undefined, { urn })
            case "aws:bedrock/agentAgentActionGroup:AgentAgentActionGroup":
                return new AgentAgentActionGroup(name, <any>undefined, { urn })
            case "aws:bedrock/agentAgentAlias:AgentAgentAlias":
                return new AgentAgentAlias(name, <any>undefined, { urn })
            case "aws:bedrock/agentAgentCollaborator:AgentAgentCollaborator":
                return new AgentAgentCollaborator(name, <any>undefined, { urn })
            case "aws:bedrock/agentAgentKnowledgeBaseAssociation:AgentAgentKnowledgeBaseAssociation":
                return new AgentAgentKnowledgeBaseAssociation(name, <any>undefined, { urn })
            case "aws:bedrock/agentDataSource:AgentDataSource":
                return new AgentDataSource(name, <any>undefined, { urn })
            case "aws:bedrock/agentKnowledgeBase:AgentKnowledgeBase":
                return new AgentKnowledgeBase(name, <any>undefined, { urn })
            case "aws:bedrock/agentPrompt:AgentPrompt":
                return new AgentPrompt(name, <any>undefined, { urn })
            case "aws:bedrock/customModel:CustomModel":
                return new CustomModel(name, <any>undefined, { urn })
            case "aws:bedrock/guardrail:Guardrail":
                return new Guardrail(name, <any>undefined, { urn })
            case "aws:bedrock/guardrailVersion:GuardrailVersion":
                return new GuardrailVersion(name, <any>undefined, { urn })
            case "aws:bedrock/inferenceProfile:InferenceProfile":
                return new InferenceProfile(name, <any>undefined, { urn })
            case "aws:bedrock/provisionedModelThroughput:ProvisionedModelThroughput":
                return new ProvisionedModelThroughput(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "bedrock/agentAgent", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/agentAgentActionGroup", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/agentAgentAlias", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/agentAgentCollaborator", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/agentAgentKnowledgeBaseAssociation", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/agentDataSource", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/agentKnowledgeBase", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/agentPrompt", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/customModel", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/guardrail", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/guardrailVersion", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/inferenceProfile", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/provisionedModelThroughput", _module)
