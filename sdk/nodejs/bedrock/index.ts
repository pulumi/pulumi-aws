// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AgentAgentArgs, AgentAgentState } from "./agentAgent";
export type AgentAgent = import("./agentAgent").AgentAgent;
export const AgentAgent: typeof import("./agentAgent").AgentAgent = null as any;
utilities.lazyLoad(exports, ["AgentAgent"], () => require("./agentAgent"));

export { AgentAgentActionGroupArgs, AgentAgentActionGroupState } from "./agentAgentActionGroup";
export type AgentAgentActionGroup = import("./agentAgentActionGroup").AgentAgentActionGroup;
export const AgentAgentActionGroup: typeof import("./agentAgentActionGroup").AgentAgentActionGroup = null as any;
utilities.lazyLoad(exports, ["AgentAgentActionGroup"], () => require("./agentAgentActionGroup"));

export { AgentAgentAliasArgs, AgentAgentAliasState } from "./agentAgentAlias";
export type AgentAgentAlias = import("./agentAgentAlias").AgentAgentAlias;
export const AgentAgentAlias: typeof import("./agentAgentAlias").AgentAgentAlias = null as any;
utilities.lazyLoad(exports, ["AgentAgentAlias"], () => require("./agentAgentAlias"));

export { AgentAgentCollaboratorArgs, AgentAgentCollaboratorState } from "./agentAgentCollaborator";
export type AgentAgentCollaborator = import("./agentAgentCollaborator").AgentAgentCollaborator;
export const AgentAgentCollaborator: typeof import("./agentAgentCollaborator").AgentAgentCollaborator = null as any;
utilities.lazyLoad(exports, ["AgentAgentCollaborator"], () => require("./agentAgentCollaborator"));

export { AgentAgentKnowledgeBaseAssociationArgs, AgentAgentKnowledgeBaseAssociationState } from "./agentAgentKnowledgeBaseAssociation";
export type AgentAgentKnowledgeBaseAssociation = import("./agentAgentKnowledgeBaseAssociation").AgentAgentKnowledgeBaseAssociation;
export const AgentAgentKnowledgeBaseAssociation: typeof import("./agentAgentKnowledgeBaseAssociation").AgentAgentKnowledgeBaseAssociation = null as any;
utilities.lazyLoad(exports, ["AgentAgentKnowledgeBaseAssociation"], () => require("./agentAgentKnowledgeBaseAssociation"));

export { AgentDataSourceArgs, AgentDataSourceState } from "./agentDataSource";
export type AgentDataSource = import("./agentDataSource").AgentDataSource;
export const AgentDataSource: typeof import("./agentDataSource").AgentDataSource = null as any;
utilities.lazyLoad(exports, ["AgentDataSource"], () => require("./agentDataSource"));

export { AgentFlowArgs, AgentFlowState } from "./agentFlow";
export type AgentFlow = import("./agentFlow").AgentFlow;
export const AgentFlow: typeof import("./agentFlow").AgentFlow = null as any;
utilities.lazyLoad(exports, ["AgentFlow"], () => require("./agentFlow"));

export { AgentKnowledgeBaseArgs, AgentKnowledgeBaseState } from "./agentKnowledgeBase";
export type AgentKnowledgeBase = import("./agentKnowledgeBase").AgentKnowledgeBase;
export const AgentKnowledgeBase: typeof import("./agentKnowledgeBase").AgentKnowledgeBase = null as any;
utilities.lazyLoad(exports, ["AgentKnowledgeBase"], () => require("./agentKnowledgeBase"));

export { AgentPromptArgs, AgentPromptState } from "./agentPrompt";
export type AgentPrompt = import("./agentPrompt").AgentPrompt;
export const AgentPrompt: typeof import("./agentPrompt").AgentPrompt = null as any;
utilities.lazyLoad(exports, ["AgentPrompt"], () => require("./agentPrompt"));

export { AgentcoreAgentRuntimeArgs, AgentcoreAgentRuntimeState } from "./agentcoreAgentRuntime";
export type AgentcoreAgentRuntime = import("./agentcoreAgentRuntime").AgentcoreAgentRuntime;
export const AgentcoreAgentRuntime: typeof import("./agentcoreAgentRuntime").AgentcoreAgentRuntime = null as any;
utilities.lazyLoad(exports, ["AgentcoreAgentRuntime"], () => require("./agentcoreAgentRuntime"));

export { AgentcoreAgentRuntimeEndpointArgs, AgentcoreAgentRuntimeEndpointState } from "./agentcoreAgentRuntimeEndpoint";
export type AgentcoreAgentRuntimeEndpoint = import("./agentcoreAgentRuntimeEndpoint").AgentcoreAgentRuntimeEndpoint;
export const AgentcoreAgentRuntimeEndpoint: typeof import("./agentcoreAgentRuntimeEndpoint").AgentcoreAgentRuntimeEndpoint = null as any;
utilities.lazyLoad(exports, ["AgentcoreAgentRuntimeEndpoint"], () => require("./agentcoreAgentRuntimeEndpoint"));

export { AgentcoreApiKeyCredentialProviderArgs, AgentcoreApiKeyCredentialProviderState } from "./agentcoreApiKeyCredentialProvider";
export type AgentcoreApiKeyCredentialProvider = import("./agentcoreApiKeyCredentialProvider").AgentcoreApiKeyCredentialProvider;
export const AgentcoreApiKeyCredentialProvider: typeof import("./agentcoreApiKeyCredentialProvider").AgentcoreApiKeyCredentialProvider = null as any;
utilities.lazyLoad(exports, ["AgentcoreApiKeyCredentialProvider"], () => require("./agentcoreApiKeyCredentialProvider"));

export { AgentcoreBrowserArgs, AgentcoreBrowserState } from "./agentcoreBrowser";
export type AgentcoreBrowser = import("./agentcoreBrowser").AgentcoreBrowser;
export const AgentcoreBrowser: typeof import("./agentcoreBrowser").AgentcoreBrowser = null as any;
utilities.lazyLoad(exports, ["AgentcoreBrowser"], () => require("./agentcoreBrowser"));

export { AgentcoreCodeInterpreterArgs, AgentcoreCodeInterpreterState } from "./agentcoreCodeInterpreter";
export type AgentcoreCodeInterpreter = import("./agentcoreCodeInterpreter").AgentcoreCodeInterpreter;
export const AgentcoreCodeInterpreter: typeof import("./agentcoreCodeInterpreter").AgentcoreCodeInterpreter = null as any;
utilities.lazyLoad(exports, ["AgentcoreCodeInterpreter"], () => require("./agentcoreCodeInterpreter"));

export { AgentcoreGatewayArgs, AgentcoreGatewayState } from "./agentcoreGateway";
export type AgentcoreGateway = import("./agentcoreGateway").AgentcoreGateway;
export const AgentcoreGateway: typeof import("./agentcoreGateway").AgentcoreGateway = null as any;
utilities.lazyLoad(exports, ["AgentcoreGateway"], () => require("./agentcoreGateway"));

export { AgentcoreGatewayTargetArgs, AgentcoreGatewayTargetState } from "./agentcoreGatewayTarget";
export type AgentcoreGatewayTarget = import("./agentcoreGatewayTarget").AgentcoreGatewayTarget;
export const AgentcoreGatewayTarget: typeof import("./agentcoreGatewayTarget").AgentcoreGatewayTarget = null as any;
utilities.lazyLoad(exports, ["AgentcoreGatewayTarget"], () => require("./agentcoreGatewayTarget"));

export { AgentcoreMemoryArgs, AgentcoreMemoryState } from "./agentcoreMemory";
export type AgentcoreMemory = import("./agentcoreMemory").AgentcoreMemory;
export const AgentcoreMemory: typeof import("./agentcoreMemory").AgentcoreMemory = null as any;
utilities.lazyLoad(exports, ["AgentcoreMemory"], () => require("./agentcoreMemory"));

export { AgentcoreMemoryStrategyArgs, AgentcoreMemoryStrategyState } from "./agentcoreMemoryStrategy";
export type AgentcoreMemoryStrategy = import("./agentcoreMemoryStrategy").AgentcoreMemoryStrategy;
export const AgentcoreMemoryStrategy: typeof import("./agentcoreMemoryStrategy").AgentcoreMemoryStrategy = null as any;
utilities.lazyLoad(exports, ["AgentcoreMemoryStrategy"], () => require("./agentcoreMemoryStrategy"));

export { AgentcoreOauth2CredentialProviderArgs, AgentcoreOauth2CredentialProviderState } from "./agentcoreOauth2CredentialProvider";
export type AgentcoreOauth2CredentialProvider = import("./agentcoreOauth2CredentialProvider").AgentcoreOauth2CredentialProvider;
export const AgentcoreOauth2CredentialProvider: typeof import("./agentcoreOauth2CredentialProvider").AgentcoreOauth2CredentialProvider = null as any;
utilities.lazyLoad(exports, ["AgentcoreOauth2CredentialProvider"], () => require("./agentcoreOauth2CredentialProvider"));

export { AgentcoreTokenVaultCmkArgs, AgentcoreTokenVaultCmkState } from "./agentcoreTokenVaultCmk";
export type AgentcoreTokenVaultCmk = import("./agentcoreTokenVaultCmk").AgentcoreTokenVaultCmk;
export const AgentcoreTokenVaultCmk: typeof import("./agentcoreTokenVaultCmk").AgentcoreTokenVaultCmk = null as any;
utilities.lazyLoad(exports, ["AgentcoreTokenVaultCmk"], () => require("./agentcoreTokenVaultCmk"));

export { AgentcoreWorkloadIdentityArgs, AgentcoreWorkloadIdentityState } from "./agentcoreWorkloadIdentity";
export type AgentcoreWorkloadIdentity = import("./agentcoreWorkloadIdentity").AgentcoreWorkloadIdentity;
export const AgentcoreWorkloadIdentity: typeof import("./agentcoreWorkloadIdentity").AgentcoreWorkloadIdentity = null as any;
utilities.lazyLoad(exports, ["AgentcoreWorkloadIdentity"], () => require("./agentcoreWorkloadIdentity"));

export { CustomModelArgs, CustomModelState } from "./customModel";
export type CustomModel = import("./customModel").CustomModel;
export const CustomModel: typeof import("./customModel").CustomModel = null as any;
utilities.lazyLoad(exports, ["CustomModel"], () => require("./customModel"));

export { GetAgentAgentVersionsArgs, GetAgentAgentVersionsResult, GetAgentAgentVersionsOutputArgs } from "./getAgentAgentVersions";
export const getAgentAgentVersions: typeof import("./getAgentAgentVersions").getAgentAgentVersions = null as any;
export const getAgentAgentVersionsOutput: typeof import("./getAgentAgentVersions").getAgentAgentVersionsOutput = null as any;
utilities.lazyLoad(exports, ["getAgentAgentVersions","getAgentAgentVersionsOutput"], () => require("./getAgentAgentVersions"));

export { GetCustomModelArgs, GetCustomModelResult, GetCustomModelOutputArgs } from "./getCustomModel";
export const getCustomModel: typeof import("./getCustomModel").getCustomModel = null as any;
export const getCustomModelOutput: typeof import("./getCustomModel").getCustomModelOutput = null as any;
utilities.lazyLoad(exports, ["getCustomModel","getCustomModelOutput"], () => require("./getCustomModel"));

export { GetCustomModelsArgs, GetCustomModelsResult, GetCustomModelsOutputArgs } from "./getCustomModels";
export const getCustomModels: typeof import("./getCustomModels").getCustomModels = null as any;
export const getCustomModelsOutput: typeof import("./getCustomModels").getCustomModelsOutput = null as any;
utilities.lazyLoad(exports, ["getCustomModels","getCustomModelsOutput"], () => require("./getCustomModels"));

export { GetInferenceProfileArgs, GetInferenceProfileResult, GetInferenceProfileOutputArgs } from "./getInferenceProfile";
export const getInferenceProfile: typeof import("./getInferenceProfile").getInferenceProfile = null as any;
export const getInferenceProfileOutput: typeof import("./getInferenceProfile").getInferenceProfileOutput = null as any;
utilities.lazyLoad(exports, ["getInferenceProfile","getInferenceProfileOutput"], () => require("./getInferenceProfile"));

export { GetInferenceProfilesArgs, GetInferenceProfilesResult, GetInferenceProfilesOutputArgs } from "./getInferenceProfiles";
export const getInferenceProfiles: typeof import("./getInferenceProfiles").getInferenceProfiles = null as any;
export const getInferenceProfilesOutput: typeof import("./getInferenceProfiles").getInferenceProfilesOutput = null as any;
utilities.lazyLoad(exports, ["getInferenceProfiles","getInferenceProfilesOutput"], () => require("./getInferenceProfiles"));

export { GuardrailArgs, GuardrailState } from "./guardrail";
export type Guardrail = import("./guardrail").Guardrail;
export const Guardrail: typeof import("./guardrail").Guardrail = null as any;
utilities.lazyLoad(exports, ["Guardrail"], () => require("./guardrail"));

export { GuardrailVersionArgs, GuardrailVersionState } from "./guardrailVersion";
export type GuardrailVersion = import("./guardrailVersion").GuardrailVersion;
export const GuardrailVersion: typeof import("./guardrailVersion").GuardrailVersion = null as any;
utilities.lazyLoad(exports, ["GuardrailVersion"], () => require("./guardrailVersion"));

export { InferenceProfileArgs, InferenceProfileState } from "./inferenceProfile";
export type InferenceProfile = import("./inferenceProfile").InferenceProfile;
export const InferenceProfile: typeof import("./inferenceProfile").InferenceProfile = null as any;
utilities.lazyLoad(exports, ["InferenceProfile"], () => require("./inferenceProfile"));

export { ProvisionedModelThroughputArgs, ProvisionedModelThroughputState } from "./provisionedModelThroughput";
export type ProvisionedModelThroughput = import("./provisionedModelThroughput").ProvisionedModelThroughput;
export const ProvisionedModelThroughput: typeof import("./provisionedModelThroughput").ProvisionedModelThroughput = null as any;
utilities.lazyLoad(exports, ["ProvisionedModelThroughput"], () => require("./provisionedModelThroughput"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws:bedrock/agentAgent:AgentAgent":
                return new AgentAgent(name, <any>undefined, { urn })
            case "aws:bedrock/agentAgentActionGroup:AgentAgentActionGroup":
                return new AgentAgentActionGroup(name, <any>undefined, { urn })
            case "aws:bedrock/agentAgentAlias:AgentAgentAlias":
                return new AgentAgentAlias(name, <any>undefined, { urn })
            case "aws:bedrock/agentAgentCollaborator:AgentAgentCollaborator":
                return new AgentAgentCollaborator(name, <any>undefined, { urn })
            case "aws:bedrock/agentAgentKnowledgeBaseAssociation:AgentAgentKnowledgeBaseAssociation":
                return new AgentAgentKnowledgeBaseAssociation(name, <any>undefined, { urn })
            case "aws:bedrock/agentDataSource:AgentDataSource":
                return new AgentDataSource(name, <any>undefined, { urn })
            case "aws:bedrock/agentFlow:AgentFlow":
                return new AgentFlow(name, <any>undefined, { urn })
            case "aws:bedrock/agentKnowledgeBase:AgentKnowledgeBase":
                return new AgentKnowledgeBase(name, <any>undefined, { urn })
            case "aws:bedrock/agentPrompt:AgentPrompt":
                return new AgentPrompt(name, <any>undefined, { urn })
            case "aws:bedrock/agentcoreAgentRuntime:AgentcoreAgentRuntime":
                return new AgentcoreAgentRuntime(name, <any>undefined, { urn })
            case "aws:bedrock/agentcoreAgentRuntimeEndpoint:AgentcoreAgentRuntimeEndpoint":
                return new AgentcoreAgentRuntimeEndpoint(name, <any>undefined, { urn })
            case "aws:bedrock/agentcoreApiKeyCredentialProvider:AgentcoreApiKeyCredentialProvider":
                return new AgentcoreApiKeyCredentialProvider(name, <any>undefined, { urn })
            case "aws:bedrock/agentcoreBrowser:AgentcoreBrowser":
                return new AgentcoreBrowser(name, <any>undefined, { urn })
            case "aws:bedrock/agentcoreCodeInterpreter:AgentcoreCodeInterpreter":
                return new AgentcoreCodeInterpreter(name, <any>undefined, { urn })
            case "aws:bedrock/agentcoreGateway:AgentcoreGateway":
                return new AgentcoreGateway(name, <any>undefined, { urn })
            case "aws:bedrock/agentcoreGatewayTarget:AgentcoreGatewayTarget":
                return new AgentcoreGatewayTarget(name, <any>undefined, { urn })
            case "aws:bedrock/agentcoreMemory:AgentcoreMemory":
                return new AgentcoreMemory(name, <any>undefined, { urn })
            case "aws:bedrock/agentcoreMemoryStrategy:AgentcoreMemoryStrategy":
                return new AgentcoreMemoryStrategy(name, <any>undefined, { urn })
            case "aws:bedrock/agentcoreOauth2CredentialProvider:AgentcoreOauth2CredentialProvider":
                return new AgentcoreOauth2CredentialProvider(name, <any>undefined, { urn })
            case "aws:bedrock/agentcoreTokenVaultCmk:AgentcoreTokenVaultCmk":
                return new AgentcoreTokenVaultCmk(name, <any>undefined, { urn })
            case "aws:bedrock/agentcoreWorkloadIdentity:AgentcoreWorkloadIdentity":
                return new AgentcoreWorkloadIdentity(name, <any>undefined, { urn })
            case "aws:bedrock/customModel:CustomModel":
                return new CustomModel(name, <any>undefined, { urn })
            case "aws:bedrock/guardrail:Guardrail":
                return new Guardrail(name, <any>undefined, { urn })
            case "aws:bedrock/guardrailVersion:GuardrailVersion":
                return new GuardrailVersion(name, <any>undefined, { urn })
            case "aws:bedrock/inferenceProfile:InferenceProfile":
                return new InferenceProfile(name, <any>undefined, { urn })
            case "aws:bedrock/provisionedModelThroughput:ProvisionedModelThroughput":
                return new ProvisionedModelThroughput(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "bedrock/agentAgent", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/agentAgentActionGroup", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/agentAgentAlias", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/agentAgentCollaborator", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/agentAgentKnowledgeBaseAssociation", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/agentDataSource", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/agentFlow", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/agentKnowledgeBase", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/agentPrompt", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/agentcoreAgentRuntime", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/agentcoreAgentRuntimeEndpoint", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/agentcoreApiKeyCredentialProvider", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/agentcoreBrowser", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/agentcoreCodeInterpreter", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/agentcoreGateway", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/agentcoreGatewayTarget", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/agentcoreMemory", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/agentcoreMemoryStrategy", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/agentcoreOauth2CredentialProvider", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/agentcoreTokenVaultCmk", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/agentcoreWorkloadIdentity", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/customModel", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/guardrail", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/guardrailVersion", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/inferenceProfile", _module)
pulumi.runtime.registerResourceModule("aws", "bedrock/provisionedModelThroughput", _module)
