// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS Agents for Amazon Bedrock Agent Knowledge Base Association.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.bedrock.AgentAgentKnowledgeBaseAssociation("example", {
 *     agentId: "GGRRAED6JP",
 *     description: "Example Knowledge base",
 *     knowledgeBaseId: "EMDPPAYPZI",
 *     knowledgeBaseState: "ENABLED",
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Agents for Amazon Bedrock Agent Knowledge Base Association using the agent ID, the agent version, and the knowledge base ID separated by `,`. For example:
 *
 * ```sh
 * $ pulumi import aws:bedrock/agentAgentKnowledgeBaseAssociation:AgentAgentKnowledgeBaseAssociation example GGRRAED6JP,DRAFT,EMDPPAYPZI
 * ```
 */
export class AgentAgentKnowledgeBaseAssociation extends pulumi.CustomResource {
    /**
     * Get an existing AgentAgentKnowledgeBaseAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AgentAgentKnowledgeBaseAssociationState, opts?: pulumi.CustomResourceOptions): AgentAgentKnowledgeBaseAssociation {
        return new AgentAgentKnowledgeBaseAssociation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:bedrock/agentAgentKnowledgeBaseAssociation:AgentAgentKnowledgeBaseAssociation';

    /**
     * Returns true if the given object is an instance of AgentAgentKnowledgeBaseAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AgentAgentKnowledgeBaseAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AgentAgentKnowledgeBaseAssociation.__pulumiType;
    }

    /**
     * Unique identifier of the agent with which you want to associate the knowledge base.
     */
    public readonly agentId!: pulumi.Output<string>;
    /**
     * Version of the agent with which you want to associate the knowledge base. Valid values: `DRAFT`.
     */
    public readonly agentVersion!: pulumi.Output<string>;
    /**
     * Description of what the agent should use the knowledge base for.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Unique identifier of the knowledge base to associate with the agent.
     */
    public readonly knowledgeBaseId!: pulumi.Output<string>;
    /**
     * Whether to use the knowledge base when sending an [InvokeAgent](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html) request. Valid values: `ENABLED`, `DISABLED`.
     *
     * The following arguments are optional:
     */
    public readonly knowledgeBaseState!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.bedrock.AgentAgentKnowledgeBaseAssociationTimeouts | undefined>;

    /**
     * Create a AgentAgentKnowledgeBaseAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AgentAgentKnowledgeBaseAssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AgentAgentKnowledgeBaseAssociationArgs | AgentAgentKnowledgeBaseAssociationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AgentAgentKnowledgeBaseAssociationState | undefined;
            resourceInputs["agentId"] = state ? state.agentId : undefined;
            resourceInputs["agentVersion"] = state ? state.agentVersion : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["knowledgeBaseId"] = state ? state.knowledgeBaseId : undefined;
            resourceInputs["knowledgeBaseState"] = state ? state.knowledgeBaseState : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as AgentAgentKnowledgeBaseAssociationArgs | undefined;
            if ((!args || args.agentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'agentId'");
            }
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if ((!args || args.knowledgeBaseId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'knowledgeBaseId'");
            }
            if ((!args || args.knowledgeBaseState === undefined) && !opts.urn) {
                throw new Error("Missing required property 'knowledgeBaseState'");
            }
            resourceInputs["agentId"] = args ? args.agentId : undefined;
            resourceInputs["agentVersion"] = args ? args.agentVersion : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["knowledgeBaseId"] = args ? args.knowledgeBaseId : undefined;
            resourceInputs["knowledgeBaseState"] = args ? args.knowledgeBaseState : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AgentAgentKnowledgeBaseAssociation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AgentAgentKnowledgeBaseAssociation resources.
 */
export interface AgentAgentKnowledgeBaseAssociationState {
    /**
     * Unique identifier of the agent with which you want to associate the knowledge base.
     */
    agentId?: pulumi.Input<string>;
    /**
     * Version of the agent with which you want to associate the knowledge base. Valid values: `DRAFT`.
     */
    agentVersion?: pulumi.Input<string>;
    /**
     * Description of what the agent should use the knowledge base for.
     */
    description?: pulumi.Input<string>;
    /**
     * Unique identifier of the knowledge base to associate with the agent.
     */
    knowledgeBaseId?: pulumi.Input<string>;
    /**
     * Whether to use the knowledge base when sending an [InvokeAgent](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html) request. Valid values: `ENABLED`, `DISABLED`.
     *
     * The following arguments are optional:
     */
    knowledgeBaseState?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.bedrock.AgentAgentKnowledgeBaseAssociationTimeouts>;
}

/**
 * The set of arguments for constructing a AgentAgentKnowledgeBaseAssociation resource.
 */
export interface AgentAgentKnowledgeBaseAssociationArgs {
    /**
     * Unique identifier of the agent with which you want to associate the knowledge base.
     */
    agentId: pulumi.Input<string>;
    /**
     * Version of the agent with which you want to associate the knowledge base. Valid values: `DRAFT`.
     */
    agentVersion?: pulumi.Input<string>;
    /**
     * Description of what the agent should use the knowledge base for.
     */
    description: pulumi.Input<string>;
    /**
     * Unique identifier of the knowledge base to associate with the agent.
     */
    knowledgeBaseId: pulumi.Input<string>;
    /**
     * Whether to use the knowledge base when sending an [InvokeAgent](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html) request. Valid values: `ENABLED`, `DISABLED`.
     *
     * The following arguments are optional:
     */
    knowledgeBaseState: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.bedrock.AgentAgentKnowledgeBaseAssociationTimeouts>;
}
