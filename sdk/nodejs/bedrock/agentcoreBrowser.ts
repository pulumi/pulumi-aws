// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Manages an AWS Bedrock AgentCore Browser. Browser provides AI agents with web browsing capabilities, allowing them to navigate websites, extract information, and interact with web content in a controlled environment.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.bedrock.AgentcoreBrowser("example", {
 *     name: "example-browser",
 *     description: "Browser for web data extraction",
 *     networkConfiguration: {
 *         networkMode: "PUBLIC",
 *     },
 * });
 * ```
 *
 * ### Browser with Execution Role and Recording
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const assumeRole = aws.iam.getPolicyDocument({
 *     statements: [{
 *         effect: "Allow",
 *         actions: ["sts:AssumeRole"],
 *         principals: [{
 *             type: "Service",
 *             identifiers: ["bedrock-agentcore.amazonaws.com"],
 *         }],
 *     }],
 * });
 * const example = new aws.iam.Role("example", {
 *     name: "bedrock-agentcore-browser-role",
 *     assumeRolePolicy: assumeRole.then(assumeRole => assumeRole.json),
 * });
 * const recording = new aws.s3.Bucket("recording", {bucket: "browser-recording-bucket"});
 * const exampleAgentcoreBrowser = new aws.bedrock.AgentcoreBrowser("example", {
 *     name: "example-browser",
 *     description: "Browser with recording enabled",
 *     executionRoleArn: example.arn,
 *     networkConfiguration: {
 *         networkMode: "PUBLIC",
 *     },
 *     recording: {
 *         enabled: true,
 *         s3Location: {
 *             bucket: recording.bucket,
 *             prefix: "browser-sessions/",
 *         },
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Bedrock AgentCore Browser using the browser ID. For example:
 *
 * ```sh
 * $ pulumi import aws:bedrock/agentcoreBrowser:AgentcoreBrowser example BROWSER1234567890
 * ```
 */
export class AgentcoreBrowser extends pulumi.CustomResource {
    /**
     * Get an existing AgentcoreBrowser resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AgentcoreBrowserState, opts?: pulumi.CustomResourceOptions): AgentcoreBrowser {
        return new AgentcoreBrowser(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:bedrock/agentcoreBrowser:AgentcoreBrowser';

    /**
     * Returns true if the given object is an instance of AgentcoreBrowser.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AgentcoreBrowser {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AgentcoreBrowser.__pulumiType;
    }

    /**
     * ARN of the Browser.
     */
    declare public /*out*/ readonly browserArn: pulumi.Output<string>;
    /**
     * Unique identifier of the Browser.
     */
    declare public /*out*/ readonly browserId: pulumi.Output<string>;
    /**
     * Description of the browser.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * ARN of the IAM role that the browser assumes for execution.
     */
    declare public readonly executionRoleArn: pulumi.Output<string | undefined>;
    /**
     * Name of the browser.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Network configuration for the browser. See `networkConfiguration` below.
     *
     * The following arguments are optional:
     */
    declare public readonly networkConfiguration: pulumi.Output<outputs.bedrock.AgentcoreBrowserNetworkConfiguration | undefined>;
    /**
     * Recording configuration for browser sessions. See `recording` below.
     */
    declare public readonly recording: pulumi.Output<outputs.bedrock.AgentcoreBrowserRecording | undefined>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    declare public /*out*/ readonly tagsAll: pulumi.Output<{[key: string]: string}>;
    declare public readonly timeouts: pulumi.Output<outputs.bedrock.AgentcoreBrowserTimeouts | undefined>;

    /**
     * Create a AgentcoreBrowser resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AgentcoreBrowserArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AgentcoreBrowserArgs | AgentcoreBrowserState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AgentcoreBrowserState | undefined;
            resourceInputs["browserArn"] = state?.browserArn;
            resourceInputs["browserId"] = state?.browserId;
            resourceInputs["description"] = state?.description;
            resourceInputs["executionRoleArn"] = state?.executionRoleArn;
            resourceInputs["name"] = state?.name;
            resourceInputs["networkConfiguration"] = state?.networkConfiguration;
            resourceInputs["recording"] = state?.recording;
            resourceInputs["region"] = state?.region;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tagsAll"] = state?.tagsAll;
            resourceInputs["timeouts"] = state?.timeouts;
        } else {
            const args = argsOrState as AgentcoreBrowserArgs | undefined;
            resourceInputs["description"] = args?.description;
            resourceInputs["executionRoleArn"] = args?.executionRoleArn;
            resourceInputs["name"] = args?.name;
            resourceInputs["networkConfiguration"] = args?.networkConfiguration;
            resourceInputs["recording"] = args?.recording;
            resourceInputs["region"] = args?.region;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["timeouts"] = args?.timeouts;
            resourceInputs["browserArn"] = undefined /*out*/;
            resourceInputs["browserId"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AgentcoreBrowser.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AgentcoreBrowser resources.
 */
export interface AgentcoreBrowserState {
    /**
     * ARN of the Browser.
     */
    browserArn?: pulumi.Input<string>;
    /**
     * Unique identifier of the Browser.
     */
    browserId?: pulumi.Input<string>;
    /**
     * Description of the browser.
     */
    description?: pulumi.Input<string>;
    /**
     * ARN of the IAM role that the browser assumes for execution.
     */
    executionRoleArn?: pulumi.Input<string>;
    /**
     * Name of the browser.
     */
    name?: pulumi.Input<string>;
    /**
     * Network configuration for the browser. See `networkConfiguration` below.
     *
     * The following arguments are optional:
     */
    networkConfiguration?: pulumi.Input<inputs.bedrock.AgentcoreBrowserNetworkConfiguration>;
    /**
     * Recording configuration for browser sessions. See `recording` below.
     */
    recording?: pulumi.Input<inputs.bedrock.AgentcoreBrowserRecording>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.bedrock.AgentcoreBrowserTimeouts>;
}

/**
 * The set of arguments for constructing a AgentcoreBrowser resource.
 */
export interface AgentcoreBrowserArgs {
    /**
     * Description of the browser.
     */
    description?: pulumi.Input<string>;
    /**
     * ARN of the IAM role that the browser assumes for execution.
     */
    executionRoleArn?: pulumi.Input<string>;
    /**
     * Name of the browser.
     */
    name?: pulumi.Input<string>;
    /**
     * Network configuration for the browser. See `networkConfiguration` below.
     *
     * The following arguments are optional:
     */
    networkConfiguration?: pulumi.Input<inputs.bedrock.AgentcoreBrowserNetworkConfiguration>;
    /**
     * Recording configuration for browser sessions. See `recording` below.
     */
    recording?: pulumi.Input<inputs.bedrock.AgentcoreBrowserRecording>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.bedrock.AgentcoreBrowserTimeouts>;
}
