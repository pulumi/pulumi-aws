// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS Agents for Amazon Bedrock Agent Action Group.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.bedrock.AgentAgentActionGroup("example", {
 *     actionGroupName: "example",
 *     agentId: "GGRRAED6JP",
 *     agentVersion: "DRAFT",
 *     skipResourceInUseCheck: true,
 *     actionGroupExecutor: {
 *         lambda: "arn:aws:lambda:us-west-2:123456789012:function:example-function",
 *     },
 *     apiSchema: {
 *         s3: {
 *             s3BucketName: "example-bucket",
 *             s3ObjectKey: "path/to/schema.json",
 *         },
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Agents for Amazon Bedrock Agent Action Group the action group ID, the agent ID, and the agent version separated by `,`. For example:
 *
 * ```sh
 * $ pulumi import aws:bedrock/agentAgentActionGroup:AgentAgentActionGroup example MMAUDBZTH4,GGRRAED6JP,DRAFT
 * ```
 */
export class AgentAgentActionGroup extends pulumi.CustomResource {
    /**
     * Get an existing AgentAgentActionGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AgentAgentActionGroupState, opts?: pulumi.CustomResourceOptions): AgentAgentActionGroup {
        return new AgentAgentActionGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:bedrock/agentAgentActionGroup:AgentAgentActionGroup';

    /**
     * Returns true if the given object is an instance of AgentAgentActionGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AgentAgentActionGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AgentAgentActionGroup.__pulumiType;
    }

    /**
     * ARN of the Lambda function containing the business logic that is carried out upon invoking the action or custom control method for handling the information elicited from the user. See `actionGroupExecutor` block for details.
     */
    public readonly actionGroupExecutor!: pulumi.Output<outputs.bedrock.AgentAgentActionGroupActionGroupExecutor | undefined>;
    /**
     * Unique identifier of the action group.
     */
    public /*out*/ readonly actionGroupId!: pulumi.Output<string>;
    /**
     * Name of the action group.
     */
    public readonly actionGroupName!: pulumi.Output<string>;
    /**
     * Whether the action group is available for the agent to invoke or not when sending an [InvokeAgent](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html) request. Valid values: `ENABLED`, `DISABLED`.
     */
    public readonly actionGroupState!: pulumi.Output<string>;
    /**
     * The unique identifier of the agent for which to create the action group.
     */
    public readonly agentId!: pulumi.Output<string>;
    /**
     * Version of the agent for which to create the action group. Valid values: `DRAFT`.
     */
    public readonly agentVersion!: pulumi.Output<string>;
    /**
     * Either details about the S3 object containing the OpenAPI schema for the action group or the JSON or YAML-formatted payload defining the schema. For more information, see [Action group OpenAPI schemas](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-api-schema.html). See `apiSchema` block for details.
     *
     * The following arguments are optional:
     */
    public readonly apiSchema!: pulumi.Output<outputs.bedrock.AgentAgentActionGroupApiSchema | undefined>;
    /**
     * Description of the action group.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * To allow your agent to request the user for additional information when trying to complete a task, set this argument to `AMAZON.UserInput`. You must leave the `description`, `apiSchema`, and `actionGroupExecutor` arguments blank for this action group. Valid values: `AMAZON.UserInput`.
     */
    public readonly parentActionGroupSignature!: pulumi.Output<string | undefined>;
    /**
     * Whether the in-use check is skipped when deleting the action group.
     */
    public readonly skipResourceInUseCheck!: pulumi.Output<boolean>;

    /**
     * Create a AgentAgentActionGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AgentAgentActionGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AgentAgentActionGroupArgs | AgentAgentActionGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AgentAgentActionGroupState | undefined;
            resourceInputs["actionGroupExecutor"] = state ? state.actionGroupExecutor : undefined;
            resourceInputs["actionGroupId"] = state ? state.actionGroupId : undefined;
            resourceInputs["actionGroupName"] = state ? state.actionGroupName : undefined;
            resourceInputs["actionGroupState"] = state ? state.actionGroupState : undefined;
            resourceInputs["agentId"] = state ? state.agentId : undefined;
            resourceInputs["agentVersion"] = state ? state.agentVersion : undefined;
            resourceInputs["apiSchema"] = state ? state.apiSchema : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["parentActionGroupSignature"] = state ? state.parentActionGroupSignature : undefined;
            resourceInputs["skipResourceInUseCheck"] = state ? state.skipResourceInUseCheck : undefined;
        } else {
            const args = argsOrState as AgentAgentActionGroupArgs | undefined;
            if ((!args || args.actionGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'actionGroupName'");
            }
            if ((!args || args.agentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'agentId'");
            }
            if ((!args || args.agentVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'agentVersion'");
            }
            resourceInputs["actionGroupExecutor"] = args ? args.actionGroupExecutor : undefined;
            resourceInputs["actionGroupName"] = args ? args.actionGroupName : undefined;
            resourceInputs["actionGroupState"] = args ? args.actionGroupState : undefined;
            resourceInputs["agentId"] = args ? args.agentId : undefined;
            resourceInputs["agentVersion"] = args ? args.agentVersion : undefined;
            resourceInputs["apiSchema"] = args ? args.apiSchema : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["parentActionGroupSignature"] = args ? args.parentActionGroupSignature : undefined;
            resourceInputs["skipResourceInUseCheck"] = args ? args.skipResourceInUseCheck : undefined;
            resourceInputs["actionGroupId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AgentAgentActionGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AgentAgentActionGroup resources.
 */
export interface AgentAgentActionGroupState {
    /**
     * ARN of the Lambda function containing the business logic that is carried out upon invoking the action or custom control method for handling the information elicited from the user. See `actionGroupExecutor` block for details.
     */
    actionGroupExecutor?: pulumi.Input<inputs.bedrock.AgentAgentActionGroupActionGroupExecutor>;
    /**
     * Unique identifier of the action group.
     */
    actionGroupId?: pulumi.Input<string>;
    /**
     * Name of the action group.
     */
    actionGroupName?: pulumi.Input<string>;
    /**
     * Whether the action group is available for the agent to invoke or not when sending an [InvokeAgent](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html) request. Valid values: `ENABLED`, `DISABLED`.
     */
    actionGroupState?: pulumi.Input<string>;
    /**
     * The unique identifier of the agent for which to create the action group.
     */
    agentId?: pulumi.Input<string>;
    /**
     * Version of the agent for which to create the action group. Valid values: `DRAFT`.
     */
    agentVersion?: pulumi.Input<string>;
    /**
     * Either details about the S3 object containing the OpenAPI schema for the action group or the JSON or YAML-formatted payload defining the schema. For more information, see [Action group OpenAPI schemas](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-api-schema.html). See `apiSchema` block for details.
     *
     * The following arguments are optional:
     */
    apiSchema?: pulumi.Input<inputs.bedrock.AgentAgentActionGroupApiSchema>;
    /**
     * Description of the action group.
     */
    description?: pulumi.Input<string>;
    /**
     * To allow your agent to request the user for additional information when trying to complete a task, set this argument to `AMAZON.UserInput`. You must leave the `description`, `apiSchema`, and `actionGroupExecutor` arguments blank for this action group. Valid values: `AMAZON.UserInput`.
     */
    parentActionGroupSignature?: pulumi.Input<string>;
    /**
     * Whether the in-use check is skipped when deleting the action group.
     */
    skipResourceInUseCheck?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a AgentAgentActionGroup resource.
 */
export interface AgentAgentActionGroupArgs {
    /**
     * ARN of the Lambda function containing the business logic that is carried out upon invoking the action or custom control method for handling the information elicited from the user. See `actionGroupExecutor` block for details.
     */
    actionGroupExecutor?: pulumi.Input<inputs.bedrock.AgentAgentActionGroupActionGroupExecutor>;
    /**
     * Name of the action group.
     */
    actionGroupName: pulumi.Input<string>;
    /**
     * Whether the action group is available for the agent to invoke or not when sending an [InvokeAgent](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html) request. Valid values: `ENABLED`, `DISABLED`.
     */
    actionGroupState?: pulumi.Input<string>;
    /**
     * The unique identifier of the agent for which to create the action group.
     */
    agentId: pulumi.Input<string>;
    /**
     * Version of the agent for which to create the action group. Valid values: `DRAFT`.
     */
    agentVersion: pulumi.Input<string>;
    /**
     * Either details about the S3 object containing the OpenAPI schema for the action group or the JSON or YAML-formatted payload defining the schema. For more information, see [Action group OpenAPI schemas](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-api-schema.html). See `apiSchema` block for details.
     *
     * The following arguments are optional:
     */
    apiSchema?: pulumi.Input<inputs.bedrock.AgentAgentActionGroupApiSchema>;
    /**
     * Description of the action group.
     */
    description?: pulumi.Input<string>;
    /**
     * To allow your agent to request the user for additional information when trying to complete a task, set this argument to `AMAZON.UserInput`. You must leave the `description`, `apiSchema`, and `actionGroupExecutor` arguments blank for this action group. Valid values: `AMAZON.UserInput`.
     */
    parentActionGroupSignature?: pulumi.Input<string>;
    /**
     * Whether the in-use check is skipped when deleting the action group.
     */
    skipResourceInUseCheck?: pulumi.Input<boolean>;
}
