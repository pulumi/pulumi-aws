// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Manages an AWS Storage Gateway SMB File Share.
 *
 * ## Example Usage
 *
 * ### Active Directory Authentication
 *
 * > **NOTE:** The gateway must have already joined the Active Directory domain prior to SMB file share creationE.g., via "SMB Settings" in the AWS Storage Gateway console or `smbActiveDirectorySettings` in the `aws.storagegateway.Gateway` resource.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.storagegateway.SmbFileShare("example", {
 *     authentication: "ActiveDirectory",
 *     gatewayArn: exampleAwsStoragegatewayGateway.arn,
 *     locationArn: exampleAwsS3Bucket.arn,
 *     roleArn: exampleAwsIamRole.arn,
 * });
 * ```
 *
 * ### Guest Authentication
 *
 * > **NOTE:** The gateway must have already had the SMB guest password set prior to SMB file share creationE.g., via "SMB Settings" in the AWS Storage Gateway console or `smbGuestPassword` in the `aws.storagegateway.Gateway` resource.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.storagegateway.SmbFileShare("example", {
 *     authentication: "GuestAccess",
 *     gatewayArn: exampleAwsStoragegatewayGateway.arn,
 *     locationArn: exampleAwsS3Bucket.arn,
 *     roleArn: exampleAwsIamRole.arn,
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import `aws_storagegateway_smb_file_share` using the SMB File Share Amazon Resource Name (ARN). For example:
 *
 * ```sh
 * $ pulumi import aws:storagegateway/smbFileShare:SmbFileShare example arn:aws:storagegateway:us-east-1:123456789012:share/share-12345678
 * ```
 */
export class SmbFileShare extends pulumi.CustomResource {
    /**
     * Get an existing SmbFileShare resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SmbFileShareState, opts?: pulumi.CustomResourceOptions): SmbFileShare {
        return new SmbFileShare(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:storagegateway/smbFileShare:SmbFileShare';

    /**
     * Returns true if the given object is an instance of SmbFileShare.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SmbFileShare {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SmbFileShare.__pulumiType;
    }

    /**
     * The files and folders on this share will only be visible to users with read access. Default value is `false`.
     */
    declare public readonly accessBasedEnumeration: pulumi.Output<boolean | undefined>;
    /**
     * A list of users in the Active Directory that have admin access to the file share. Only valid if `authentication` is set to `ActiveDirectory`.
     */
    declare public readonly adminUserLists: pulumi.Output<string[] | undefined>;
    /**
     * Amazon Resource Name (ARN) of the SMB File Share.
     */
    declare public /*out*/ readonly arn: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the CloudWatch Log Group used for the audit logs.
     */
    declare public readonly auditDestinationArn: pulumi.Output<string | undefined>;
    /**
     * The authentication method that users use to access the file share. Defaults to `ActiveDirectory`. Valid values: `ActiveDirectory`, `GuestAccess`.
     */
    declare public readonly authentication: pulumi.Output<string | undefined>;
    /**
     * The region of the S3 buck used by the file share. Required when specifying a `vpcEndpointDnsName`.
     */
    declare public readonly bucketRegion: pulumi.Output<string | undefined>;
    /**
     * Refresh cache information. see `cacheAttributes` Block for more details.
     */
    declare public readonly cacheAttributes: pulumi.Output<outputs.storagegateway.SmbFileShareCacheAttributes | undefined>;
    /**
     * The case of an object name in an Amazon S3 bucket. For `ClientSpecified`, the client determines the case sensitivity. For `CaseSensitive`, the gateway determines the case sensitivity. The default value is `ClientSpecified`.
     */
    declare public readonly caseSensitivity: pulumi.Output<string | undefined>;
    /**
     * The default [storage class](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-DefaultStorageClass) for objects put into an Amazon S3 bucket by the file gateway. Defaults to `S3_STANDARD`.
     */
    declare public readonly defaultStorageClass: pulumi.Output<string | undefined>;
    /**
     * The name of the file share. Must be set if an S3 prefix name is set in `locationArn`.
     */
    declare public readonly fileShareName: pulumi.Output<string>;
    /**
     * ID of the SMB File Share.
     */
    declare public /*out*/ readonly fileshareId: pulumi.Output<string>;
    /**
     * Amazon Resource Name (ARN) of the file gateway.
     */
    declare public readonly gatewayArn: pulumi.Output<string>;
    /**
     * Boolean value that enables guessing of the MIME type for uploaded objects based on file extensions. Defaults to `true`.
     */
    declare public readonly guessMimeTypeEnabled: pulumi.Output<boolean | undefined>;
    /**
     * A list of users in the Active Directory that are not allowed to access the file share. Only valid if `authentication` is set to `ActiveDirectory`.
     */
    declare public readonly invalidUserLists: pulumi.Output<string[] | undefined>;
    /**
     * Boolean value if `true` to use Amazon S3 server side encryption with your own AWS KMS key, or `false` to use a key managed by Amazon S3. Defaults to `false`.
     */
    declare public readonly kmsEncrypted: pulumi.Output<boolean | undefined>;
    /**
     * Amazon Resource Name (ARN) for KMS key used for Amazon S3 server side encryption. This value can only be set when `kmsEncrypted` is true.
     */
    declare public readonly kmsKeyArn: pulumi.Output<string | undefined>;
    /**
     * The ARN of the backed storage used for storing file data.
     */
    declare public readonly locationArn: pulumi.Output<string>;
    /**
     * The notification policy of the file share. For more information see the [AWS Documentation](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-NotificationPolicy). Default value is `{}`.
     */
    declare public readonly notificationPolicy: pulumi.Output<string | undefined>;
    /**
     * Access Control List permission for S3 objects. Defaults to `private`.
     */
    declare public readonly objectAcl: pulumi.Output<string | undefined>;
    /**
     * Boolean to indicate Opportunistic lock (oplock) status. Defaults to `true`.
     */
    declare public readonly oplocksEnabled: pulumi.Output<boolean>;
    /**
     * File share path used by the NFS client to identify the mount point.
     */
    declare public /*out*/ readonly path: pulumi.Output<string>;
    /**
     * Boolean to indicate write status of file share. File share does not accept writes if `true`. Defaults to `false`.
     */
    declare public readonly readOnly: pulumi.Output<boolean | undefined>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * Boolean who pays the cost of the request and the data download from the Amazon S3 bucket. Set this value to `true` if you want the requester to pay instead of the bucket owner. Defaults to `false`.
     */
    declare public readonly requesterPays: pulumi.Output<boolean | undefined>;
    /**
     * The ARN of the AWS Identity and Access Management (IAM) role that a file gateway assumes when it accesses the underlying storage.
     */
    declare public readonly roleArn: pulumi.Output<string>;
    /**
     * Set this value to `true` to enable ACL (access control list) on the SMB fileshare. Set it to `false` to map file and directory permissions to the POSIX permissions. This setting applies only to `ActiveDirectory` authentication type.
     */
    declare public readonly smbAclEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     *
     * **Note:** If you have previously included a `cacheAttributes` block in your configuration, removing it will not reset the refresh cache value and the previous value will remain. You must explicitly set a new value to change it.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    declare public /*out*/ readonly tagsAll: pulumi.Output<{[key: string]: string}>;
    /**
     * A list of users in the Active Directory that are allowed to access the file share. If you need to specify an Active directory group, add '@' before the name of the group. It will be set on Allowed group in AWS console. Only valid if `authentication` is set to `ActiveDirectory`.
     */
    declare public readonly validUserLists: pulumi.Output<string[] | undefined>;
    /**
     * The DNS name of the VPC endpoint for S3 private link.
     */
    declare public readonly vpcEndpointDnsName: pulumi.Output<string | undefined>;

    /**
     * Create a SmbFileShare resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SmbFileShareArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SmbFileShareArgs | SmbFileShareState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SmbFileShareState | undefined;
            resourceInputs["accessBasedEnumeration"] = state?.accessBasedEnumeration;
            resourceInputs["adminUserLists"] = state?.adminUserLists;
            resourceInputs["arn"] = state?.arn;
            resourceInputs["auditDestinationArn"] = state?.auditDestinationArn;
            resourceInputs["authentication"] = state?.authentication;
            resourceInputs["bucketRegion"] = state?.bucketRegion;
            resourceInputs["cacheAttributes"] = state?.cacheAttributes;
            resourceInputs["caseSensitivity"] = state?.caseSensitivity;
            resourceInputs["defaultStorageClass"] = state?.defaultStorageClass;
            resourceInputs["fileShareName"] = state?.fileShareName;
            resourceInputs["fileshareId"] = state?.fileshareId;
            resourceInputs["gatewayArn"] = state?.gatewayArn;
            resourceInputs["guessMimeTypeEnabled"] = state?.guessMimeTypeEnabled;
            resourceInputs["invalidUserLists"] = state?.invalidUserLists;
            resourceInputs["kmsEncrypted"] = state?.kmsEncrypted;
            resourceInputs["kmsKeyArn"] = state?.kmsKeyArn;
            resourceInputs["locationArn"] = state?.locationArn;
            resourceInputs["notificationPolicy"] = state?.notificationPolicy;
            resourceInputs["objectAcl"] = state?.objectAcl;
            resourceInputs["oplocksEnabled"] = state?.oplocksEnabled;
            resourceInputs["path"] = state?.path;
            resourceInputs["readOnly"] = state?.readOnly;
            resourceInputs["region"] = state?.region;
            resourceInputs["requesterPays"] = state?.requesterPays;
            resourceInputs["roleArn"] = state?.roleArn;
            resourceInputs["smbAclEnabled"] = state?.smbAclEnabled;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tagsAll"] = state?.tagsAll;
            resourceInputs["validUserLists"] = state?.validUserLists;
            resourceInputs["vpcEndpointDnsName"] = state?.vpcEndpointDnsName;
        } else {
            const args = argsOrState as SmbFileShareArgs | undefined;
            if (args?.gatewayArn === undefined && !opts.urn) {
                throw new Error("Missing required property 'gatewayArn'");
            }
            if (args?.locationArn === undefined && !opts.urn) {
                throw new Error("Missing required property 'locationArn'");
            }
            if (args?.roleArn === undefined && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            resourceInputs["accessBasedEnumeration"] = args?.accessBasedEnumeration;
            resourceInputs["adminUserLists"] = args?.adminUserLists;
            resourceInputs["auditDestinationArn"] = args?.auditDestinationArn;
            resourceInputs["authentication"] = args?.authentication;
            resourceInputs["bucketRegion"] = args?.bucketRegion;
            resourceInputs["cacheAttributes"] = args?.cacheAttributes;
            resourceInputs["caseSensitivity"] = args?.caseSensitivity;
            resourceInputs["defaultStorageClass"] = args?.defaultStorageClass;
            resourceInputs["fileShareName"] = args?.fileShareName;
            resourceInputs["gatewayArn"] = args?.gatewayArn;
            resourceInputs["guessMimeTypeEnabled"] = args?.guessMimeTypeEnabled;
            resourceInputs["invalidUserLists"] = args?.invalidUserLists;
            resourceInputs["kmsEncrypted"] = args?.kmsEncrypted;
            resourceInputs["kmsKeyArn"] = args?.kmsKeyArn;
            resourceInputs["locationArn"] = args?.locationArn;
            resourceInputs["notificationPolicy"] = args?.notificationPolicy;
            resourceInputs["objectAcl"] = args?.objectAcl;
            resourceInputs["oplocksEnabled"] = args?.oplocksEnabled;
            resourceInputs["readOnly"] = args?.readOnly;
            resourceInputs["region"] = args?.region;
            resourceInputs["requesterPays"] = args?.requesterPays;
            resourceInputs["roleArn"] = args?.roleArn;
            resourceInputs["smbAclEnabled"] = args?.smbAclEnabled;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["validUserLists"] = args?.validUserLists;
            resourceInputs["vpcEndpointDnsName"] = args?.vpcEndpointDnsName;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["fileshareId"] = undefined /*out*/;
            resourceInputs["path"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SmbFileShare.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SmbFileShare resources.
 */
export interface SmbFileShareState {
    /**
     * The files and folders on this share will only be visible to users with read access. Default value is `false`.
     */
    accessBasedEnumeration?: pulumi.Input<boolean>;
    /**
     * A list of users in the Active Directory that have admin access to the file share. Only valid if `authentication` is set to `ActiveDirectory`.
     */
    adminUserLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Amazon Resource Name (ARN) of the SMB File Share.
     */
    arn?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the CloudWatch Log Group used for the audit logs.
     */
    auditDestinationArn?: pulumi.Input<string>;
    /**
     * The authentication method that users use to access the file share. Defaults to `ActiveDirectory`. Valid values: `ActiveDirectory`, `GuestAccess`.
     */
    authentication?: pulumi.Input<string>;
    /**
     * The region of the S3 buck used by the file share. Required when specifying a `vpcEndpointDnsName`.
     */
    bucketRegion?: pulumi.Input<string>;
    /**
     * Refresh cache information. see `cacheAttributes` Block for more details.
     */
    cacheAttributes?: pulumi.Input<inputs.storagegateway.SmbFileShareCacheAttributes>;
    /**
     * The case of an object name in an Amazon S3 bucket. For `ClientSpecified`, the client determines the case sensitivity. For `CaseSensitive`, the gateway determines the case sensitivity. The default value is `ClientSpecified`.
     */
    caseSensitivity?: pulumi.Input<string>;
    /**
     * The default [storage class](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-DefaultStorageClass) for objects put into an Amazon S3 bucket by the file gateway. Defaults to `S3_STANDARD`.
     */
    defaultStorageClass?: pulumi.Input<string>;
    /**
     * The name of the file share. Must be set if an S3 prefix name is set in `locationArn`.
     */
    fileShareName?: pulumi.Input<string>;
    /**
     * ID of the SMB File Share.
     */
    fileshareId?: pulumi.Input<string>;
    /**
     * Amazon Resource Name (ARN) of the file gateway.
     */
    gatewayArn?: pulumi.Input<string>;
    /**
     * Boolean value that enables guessing of the MIME type for uploaded objects based on file extensions. Defaults to `true`.
     */
    guessMimeTypeEnabled?: pulumi.Input<boolean>;
    /**
     * A list of users in the Active Directory that are not allowed to access the file share. Only valid if `authentication` is set to `ActiveDirectory`.
     */
    invalidUserLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Boolean value if `true` to use Amazon S3 server side encryption with your own AWS KMS key, or `false` to use a key managed by Amazon S3. Defaults to `false`.
     */
    kmsEncrypted?: pulumi.Input<boolean>;
    /**
     * Amazon Resource Name (ARN) for KMS key used for Amazon S3 server side encryption. This value can only be set when `kmsEncrypted` is true.
     */
    kmsKeyArn?: pulumi.Input<string>;
    /**
     * The ARN of the backed storage used for storing file data.
     */
    locationArn?: pulumi.Input<string>;
    /**
     * The notification policy of the file share. For more information see the [AWS Documentation](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-NotificationPolicy). Default value is `{}`.
     */
    notificationPolicy?: pulumi.Input<string>;
    /**
     * Access Control List permission for S3 objects. Defaults to `private`.
     */
    objectAcl?: pulumi.Input<string>;
    /**
     * Boolean to indicate Opportunistic lock (oplock) status. Defaults to `true`.
     */
    oplocksEnabled?: pulumi.Input<boolean>;
    /**
     * File share path used by the NFS client to identify the mount point.
     */
    path?: pulumi.Input<string>;
    /**
     * Boolean to indicate write status of file share. File share does not accept writes if `true`. Defaults to `false`.
     */
    readOnly?: pulumi.Input<boolean>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * Boolean who pays the cost of the request and the data download from the Amazon S3 bucket. Set this value to `true` if you want the requester to pay instead of the bucket owner. Defaults to `false`.
     */
    requesterPays?: pulumi.Input<boolean>;
    /**
     * The ARN of the AWS Identity and Access Management (IAM) role that a file gateway assumes when it accesses the underlying storage.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * Set this value to `true` to enable ACL (access control list) on the SMB fileshare. Set it to `false` to map file and directory permissions to the POSIX permissions. This setting applies only to `ActiveDirectory` authentication type.
     */
    smbAclEnabled?: pulumi.Input<boolean>;
    /**
     * Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     *
     * **Note:** If you have previously included a `cacheAttributes` block in your configuration, removing it will not reset the refresh cache value and the previous value will remain. You must explicitly set a new value to change it.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A list of users in the Active Directory that are allowed to access the file share. If you need to specify an Active directory group, add '@' before the name of the group. It will be set on Allowed group in AWS console. Only valid if `authentication` is set to `ActiveDirectory`.
     */
    validUserLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The DNS name of the VPC endpoint for S3 private link.
     */
    vpcEndpointDnsName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SmbFileShare resource.
 */
export interface SmbFileShareArgs {
    /**
     * The files and folders on this share will only be visible to users with read access. Default value is `false`.
     */
    accessBasedEnumeration?: pulumi.Input<boolean>;
    /**
     * A list of users in the Active Directory that have admin access to the file share. Only valid if `authentication` is set to `ActiveDirectory`.
     */
    adminUserLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Amazon Resource Name (ARN) of the CloudWatch Log Group used for the audit logs.
     */
    auditDestinationArn?: pulumi.Input<string>;
    /**
     * The authentication method that users use to access the file share. Defaults to `ActiveDirectory`. Valid values: `ActiveDirectory`, `GuestAccess`.
     */
    authentication?: pulumi.Input<string>;
    /**
     * The region of the S3 buck used by the file share. Required when specifying a `vpcEndpointDnsName`.
     */
    bucketRegion?: pulumi.Input<string>;
    /**
     * Refresh cache information. see `cacheAttributes` Block for more details.
     */
    cacheAttributes?: pulumi.Input<inputs.storagegateway.SmbFileShareCacheAttributes>;
    /**
     * The case of an object name in an Amazon S3 bucket. For `ClientSpecified`, the client determines the case sensitivity. For `CaseSensitive`, the gateway determines the case sensitivity. The default value is `ClientSpecified`.
     */
    caseSensitivity?: pulumi.Input<string>;
    /**
     * The default [storage class](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-DefaultStorageClass) for objects put into an Amazon S3 bucket by the file gateway. Defaults to `S3_STANDARD`.
     */
    defaultStorageClass?: pulumi.Input<string>;
    /**
     * The name of the file share. Must be set if an S3 prefix name is set in `locationArn`.
     */
    fileShareName?: pulumi.Input<string>;
    /**
     * Amazon Resource Name (ARN) of the file gateway.
     */
    gatewayArn: pulumi.Input<string>;
    /**
     * Boolean value that enables guessing of the MIME type for uploaded objects based on file extensions. Defaults to `true`.
     */
    guessMimeTypeEnabled?: pulumi.Input<boolean>;
    /**
     * A list of users in the Active Directory that are not allowed to access the file share. Only valid if `authentication` is set to `ActiveDirectory`.
     */
    invalidUserLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Boolean value if `true` to use Amazon S3 server side encryption with your own AWS KMS key, or `false` to use a key managed by Amazon S3. Defaults to `false`.
     */
    kmsEncrypted?: pulumi.Input<boolean>;
    /**
     * Amazon Resource Name (ARN) for KMS key used for Amazon S3 server side encryption. This value can only be set when `kmsEncrypted` is true.
     */
    kmsKeyArn?: pulumi.Input<string>;
    /**
     * The ARN of the backed storage used for storing file data.
     */
    locationArn: pulumi.Input<string>;
    /**
     * The notification policy of the file share. For more information see the [AWS Documentation](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-NotificationPolicy). Default value is `{}`.
     */
    notificationPolicy?: pulumi.Input<string>;
    /**
     * Access Control List permission for S3 objects. Defaults to `private`.
     */
    objectAcl?: pulumi.Input<string>;
    /**
     * Boolean to indicate Opportunistic lock (oplock) status. Defaults to `true`.
     */
    oplocksEnabled?: pulumi.Input<boolean>;
    /**
     * Boolean to indicate write status of file share. File share does not accept writes if `true`. Defaults to `false`.
     */
    readOnly?: pulumi.Input<boolean>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * Boolean who pays the cost of the request and the data download from the Amazon S3 bucket. Set this value to `true` if you want the requester to pay instead of the bucket owner. Defaults to `false`.
     */
    requesterPays?: pulumi.Input<boolean>;
    /**
     * The ARN of the AWS Identity and Access Management (IAM) role that a file gateway assumes when it accesses the underlying storage.
     */
    roleArn: pulumi.Input<string>;
    /**
     * Set this value to `true` to enable ACL (access control list) on the SMB fileshare. Set it to `false` to map file and directory permissions to the POSIX permissions. This setting applies only to `ActiveDirectory` authentication type.
     */
    smbAclEnabled?: pulumi.Input<boolean>;
    /**
     * Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     *
     * **Note:** If you have previously included a `cacheAttributes` block in your configuration, removing it will not reset the refresh cache value and the previous value will remain. You must explicitly set a new value to change it.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A list of users in the Active Directory that are allowed to access the file share. If you need to specify an Active directory group, add '@' before the name of the group. It will be set on Allowed group in AWS console. Only valid if `authentication` is set to `ActiveDirectory`.
     */
    validUserLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The DNS name of the VPC endpoint for S3 private link.
     */
    vpcEndpointDnsName?: pulumi.Input<string>;
}
