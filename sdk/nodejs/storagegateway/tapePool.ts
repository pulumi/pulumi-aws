// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class TapePool extends pulumi.CustomResource {
    /**
     * Get an existing TapePool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TapePoolState, opts?: pulumi.CustomResourceOptions): TapePool {
        return new TapePool(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:storagegateway/tapePool:TapePool';

    /**
     * Returns true if the given object is an instance of TapePool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TapePool {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TapePool.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly poolName!: pulumi.Output<string>;
    public readonly retentionLockTimeInDays!: pulumi.Output<number | undefined>;
    public readonly retentionLockType!: pulumi.Output<string | undefined>;
    public readonly storageClass!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a TapePool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TapePoolArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TapePoolArgs | TapePoolState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TapePoolState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["poolName"] = state ? state.poolName : undefined;
            resourceInputs["retentionLockTimeInDays"] = state ? state.retentionLockTimeInDays : undefined;
            resourceInputs["retentionLockType"] = state ? state.retentionLockType : undefined;
            resourceInputs["storageClass"] = state ? state.storageClass : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
        } else {
            const args = argsOrState as TapePoolArgs | undefined;
            if ((!args || args.poolName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'poolName'");
            }
            if ((!args || args.storageClass === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storageClass'");
            }
            resourceInputs["poolName"] = args ? args.poolName : undefined;
            resourceInputs["retentionLockTimeInDays"] = args ? args.retentionLockTimeInDays : undefined;
            resourceInputs["retentionLockType"] = args ? args.retentionLockType : undefined;
            resourceInputs["storageClass"] = args ? args.storageClass : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TapePool.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TapePool resources.
 */
export interface TapePoolState {
    arn?: pulumi.Input<string>;
    poolName?: pulumi.Input<string>;
    retentionLockTimeInDays?: pulumi.Input<number>;
    retentionLockType?: pulumi.Input<string>;
    storageClass?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a TapePool resource.
 */
export interface TapePoolArgs {
    poolName: pulumi.Input<string>;
    retentionLockTimeInDays?: pulumi.Input<number>;
    retentionLockType?: pulumi.Input<string>;
    storageClass: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
