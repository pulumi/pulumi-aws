// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Data source for managing an AWS Redshift Serverless Workgroup.
 *
 * ## Example Usage
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.redshiftserverless.getWorkgroup({
 *     workgroupName: aws_redshiftserverless_workgroup.example.workgroup_name,
 * });
 * ```
 */
export function getWorkgroup(args: GetWorkgroupArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkgroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:redshiftserverless/getWorkgroup:getWorkgroup", {
        "workgroupName": args.workgroupName,
    }, opts);
}

/**
 * A collection of arguments for invoking getWorkgroup.
 */
export interface GetWorkgroupArgs {
    /**
     * The name of the workgroup associated with the database.
     */
    workgroupName: string;
}

/**
 * A collection of values returned by getWorkgroup.
 */
export interface GetWorkgroupResult {
    /**
     * Amazon Resource Name (ARN) of the Redshift Serverless Workgroup.
     */
    readonly arn: string;
    /**
     * The endpoint that is created from the workgroup. See `Endpoint` below.
     */
    readonly endpoints: outputs.redshiftserverless.GetWorkgroupEndpoint[];
    /**
     * The value that specifies whether to turn on enhanced virtual private cloud (VPC) routing, which forces Amazon Redshift Serverless to route traffic through your VPC instead of over the internet.
     */
    readonly enhancedVpcRouting: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly namespaceName: string;
    /**
     * A value that specifies whether the workgroup can be accessed from a public network.
     */
    readonly publiclyAccessible: boolean;
    /**
     * An array of security group IDs to associate with the workgroup.
     */
    readonly securityGroupIds: string[];
    /**
     * An array of VPC subnet IDs to associate with the workgroup. When set, must contain at least three subnets spanning three Availability Zones. A minimum number of IP addresses is required and scales with the Base Capacity. For more information, see the following [AWS document](https://docs.aws.amazon.com/redshift/latest/mgmt/serverless-known-issues.html).
     */
    readonly subnetIds: string[];
    /**
     * The Redshift Workgroup ID.
     */
    readonly workgroupId: string;
    readonly workgroupName: string;
}
/**
 * Data source for managing an AWS Redshift Serverless Workgroup.
 *
 * ## Example Usage
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.redshiftserverless.getWorkgroup({
 *     workgroupName: aws_redshiftserverless_workgroup.example.workgroup_name,
 * });
 * ```
 */
export function getWorkgroupOutput(args: GetWorkgroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkgroupResult> {
    return pulumi.output(args).apply((a: any) => getWorkgroup(a, opts))
}

/**
 * A collection of arguments for invoking getWorkgroup.
 */
export interface GetWorkgroupOutputArgs {
    /**
     * The name of the workgroup associated with the database.
     */
    workgroupName: pulumi.Input<string>;
}
