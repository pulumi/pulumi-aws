// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Creates a new Amazon Redshift Serverless Snapshot.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.redshiftserverless.Snapshot("example", {
 *     namespaceName: aws_redshiftserverless_workgroup.example.namespace_name,
 *     snapshotName: "example",
 * });
 * ```
 *
 * ## Import
 *
 * Redshift Serverless Snapshots can be imported using the `snapshot_name`, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:redshiftserverless/snapshot:Snapshot example example
 * ```
 */
export class Snapshot extends pulumi.CustomResource {
    /**
     * Get an existing Snapshot resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SnapshotState, opts?: pulumi.CustomResourceOptions): Snapshot {
        return new Snapshot(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:redshiftserverless/snapshot:Snapshot';

    /**
     * Returns true if the given object is an instance of Snapshot.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Snapshot {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Snapshot.__pulumiType;
    }

    /**
     * All of the Amazon Web Services accounts that have access to restore a snapshot to a provisioned cluster.
     */
    public /*out*/ readonly accountsWithProvisionedRestoreAccesses!: pulumi.Output<string[]>;
    /**
     * All of the Amazon Web Services accounts that have access to restore a snapshot to a namespace.
     */
    public /*out*/ readonly accountsWithRestoreAccesses!: pulumi.Output<string[]>;
    /**
     * The username of the database within a snapshot.
     */
    public /*out*/ readonly adminUsername!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the snapshot.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The unique identifier of the KMS key used to encrypt the snapshot.
     */
    public /*out*/ readonly kmsKeyId!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the namespace the snapshot was created from.
     */
    public /*out*/ readonly namespaceArn!: pulumi.Output<string>;
    /**
     * The namespace to create a snapshot for.
     */
    public readonly namespaceName!: pulumi.Output<string>;
    /**
     * The owner Amazon Web Services; account of the snapshot.
     */
    public /*out*/ readonly ownerAccount!: pulumi.Output<string>;
    /**
     * How long to retain the created snapshot. Default value is `-1`.
     */
    public readonly retentionPeriod!: pulumi.Output<number | undefined>;
    /**
     * The name of the snapshot.
     */
    public readonly snapshotName!: pulumi.Output<string>;

    /**
     * Create a Snapshot resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SnapshotArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SnapshotArgs | SnapshotState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SnapshotState | undefined;
            resourceInputs["accountsWithProvisionedRestoreAccesses"] = state ? state.accountsWithProvisionedRestoreAccesses : undefined;
            resourceInputs["accountsWithRestoreAccesses"] = state ? state.accountsWithRestoreAccesses : undefined;
            resourceInputs["adminUsername"] = state ? state.adminUsername : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["kmsKeyId"] = state ? state.kmsKeyId : undefined;
            resourceInputs["namespaceArn"] = state ? state.namespaceArn : undefined;
            resourceInputs["namespaceName"] = state ? state.namespaceName : undefined;
            resourceInputs["ownerAccount"] = state ? state.ownerAccount : undefined;
            resourceInputs["retentionPeriod"] = state ? state.retentionPeriod : undefined;
            resourceInputs["snapshotName"] = state ? state.snapshotName : undefined;
        } else {
            const args = argsOrState as SnapshotArgs | undefined;
            if ((!args || args.namespaceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'namespaceName'");
            }
            if ((!args || args.snapshotName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'snapshotName'");
            }
            resourceInputs["namespaceName"] = args ? args.namespaceName : undefined;
            resourceInputs["retentionPeriod"] = args ? args.retentionPeriod : undefined;
            resourceInputs["snapshotName"] = args ? args.snapshotName : undefined;
            resourceInputs["accountsWithProvisionedRestoreAccesses"] = undefined /*out*/;
            resourceInputs["accountsWithRestoreAccesses"] = undefined /*out*/;
            resourceInputs["adminUsername"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["kmsKeyId"] = undefined /*out*/;
            resourceInputs["namespaceArn"] = undefined /*out*/;
            resourceInputs["ownerAccount"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Snapshot.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Snapshot resources.
 */
export interface SnapshotState {
    /**
     * All of the Amazon Web Services accounts that have access to restore a snapshot to a provisioned cluster.
     */
    accountsWithProvisionedRestoreAccesses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * All of the Amazon Web Services accounts that have access to restore a snapshot to a namespace.
     */
    accountsWithRestoreAccesses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The username of the database within a snapshot.
     */
    adminUsername?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the snapshot.
     */
    arn?: pulumi.Input<string>;
    /**
     * The unique identifier of the KMS key used to encrypt the snapshot.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the namespace the snapshot was created from.
     */
    namespaceArn?: pulumi.Input<string>;
    /**
     * The namespace to create a snapshot for.
     */
    namespaceName?: pulumi.Input<string>;
    /**
     * The owner Amazon Web Services; account of the snapshot.
     */
    ownerAccount?: pulumi.Input<string>;
    /**
     * How long to retain the created snapshot. Default value is `-1`.
     */
    retentionPeriod?: pulumi.Input<number>;
    /**
     * The name of the snapshot.
     */
    snapshotName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Snapshot resource.
 */
export interface SnapshotArgs {
    /**
     * The namespace to create a snapshot for.
     */
    namespaceName: pulumi.Input<string>;
    /**
     * How long to retain the created snapshot. Default value is `-1`.
     */
    retentionPeriod?: pulumi.Input<number>;
    /**
     * The name of the snapshot.
     */
    snapshotName: pulumi.Input<string>;
}
