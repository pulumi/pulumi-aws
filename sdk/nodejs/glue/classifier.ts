// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export class Classifier extends pulumi.CustomResource {
    /**
     * Get an existing Classifier resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClassifierState, opts?: pulumi.CustomResourceOptions): Classifier {
        return new Classifier(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:glue/classifier:Classifier';

    /**
     * Returns true if the given object is an instance of Classifier.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Classifier {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Classifier.__pulumiType;
    }

    public readonly csvClassifier!: pulumi.Output<outputs.glue.ClassifierCsvClassifier | undefined>;
    public readonly grokClassifier!: pulumi.Output<outputs.glue.ClassifierGrokClassifier | undefined>;
    public readonly jsonClassifier!: pulumi.Output<outputs.glue.ClassifierJsonClassifier | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly xmlClassifier!: pulumi.Output<outputs.glue.ClassifierXmlClassifier | undefined>;

    /**
     * Create a Classifier resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ClassifierArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClassifierArgs | ClassifierState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClassifierState | undefined;
            resourceInputs["csvClassifier"] = state ? state.csvClassifier : undefined;
            resourceInputs["grokClassifier"] = state ? state.grokClassifier : undefined;
            resourceInputs["jsonClassifier"] = state ? state.jsonClassifier : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["xmlClassifier"] = state ? state.xmlClassifier : undefined;
        } else {
            const args = argsOrState as ClassifierArgs | undefined;
            resourceInputs["csvClassifier"] = args ? args.csvClassifier : undefined;
            resourceInputs["grokClassifier"] = args ? args.grokClassifier : undefined;
            resourceInputs["jsonClassifier"] = args ? args.jsonClassifier : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["xmlClassifier"] = args ? args.xmlClassifier : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Classifier.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Classifier resources.
 */
export interface ClassifierState {
    csvClassifier?: pulumi.Input<inputs.glue.ClassifierCsvClassifier>;
    grokClassifier?: pulumi.Input<inputs.glue.ClassifierGrokClassifier>;
    jsonClassifier?: pulumi.Input<inputs.glue.ClassifierJsonClassifier>;
    name?: pulumi.Input<string>;
    xmlClassifier?: pulumi.Input<inputs.glue.ClassifierXmlClassifier>;
}

/**
 * The set of arguments for constructing a Classifier resource.
 */
export interface ClassifierArgs {
    csvClassifier?: pulumi.Input<inputs.glue.ClassifierCsvClassifier>;
    grokClassifier?: pulumi.Input<inputs.glue.ClassifierGrokClassifier>;
    jsonClassifier?: pulumi.Input<inputs.glue.ClassifierJsonClassifier>;
    name?: pulumi.Input<string>;
    xmlClassifier?: pulumi.Input<inputs.glue.ClassifierXmlClassifier>;
}
