// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Provides a Glue ML Transform resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const testCatalogDatabase = new aws.glue.CatalogDatabase("test", {name: "example"});
 * const testCatalogTable = new aws.glue.CatalogTable("test", {
 *     name: "example",
 *     databaseName: testCatalogDatabase.name,
 *     owner: "my_owner",
 *     retention: 1,
 *     tableType: "VIRTUAL_VIEW",
 *     viewExpandedText: "view_expanded_text_1",
 *     viewOriginalText: "view_original_text_1",
 *     storageDescriptor: {
 *         bucketColumns: ["bucket_column_1"],
 *         compressed: false,
 *         inputFormat: "SequenceFileInputFormat",
 *         location: "my_location",
 *         numberOfBuckets: 1,
 *         outputFormat: "SequenceFileInputFormat",
 *         storedAsSubDirectories: false,
 *         parameters: {
 *             param1: "param1_val",
 *         },
 *         columns: [
 *             {
 *                 name: "my_column_1",
 *                 type: "int",
 *                 comment: "my_column1_comment",
 *             },
 *             {
 *                 name: "my_column_2",
 *                 type: "string",
 *                 comment: "my_column2_comment",
 *             },
 *         ],
 *         serDeInfo: {
 *             name: "ser_de_name",
 *             parameters: {
 *                 param1: "param_val_1",
 *             },
 *             serializationLibrary: "org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe",
 *         },
 *         sortColumns: [{
 *             column: "my_column_1",
 *             sortOrder: 1,
 *         }],
 *         skewedInfo: {
 *             skewedColumnNames: ["my_column_1"],
 *             skewedColumnValueLocationMaps: {
 *                 my_column_1: "my_column_1_val_loc_map",
 *             },
 *             skewedColumnValues: ["skewed_val_1"],
 *         },
 *     },
 *     partitionKeys: [
 *         {
 *             name: "my_column_1",
 *             type: "int",
 *             comment: "my_column_1_comment",
 *         },
 *         {
 *             name: "my_column_2",
 *             type: "string",
 *             comment: "my_column_2_comment",
 *         },
 *     ],
 *     parameters: {
 *         param1: "param1_val",
 *     },
 * });
 * const test = new aws.glue.MLTransform("test", {
 *     name: "example",
 *     roleArn: testAwsIamRole.arn,
 *     inputRecordTables: [{
 *         databaseName: testCatalogTable.databaseName,
 *         tableName: testCatalogTable.name,
 *     }],
 *     parameters: {
 *         transformType: "FIND_MATCHES",
 *         findMatchesParameters: {
 *             primaryKeyColumnName: "my_column_1",
 *         },
 *     },
 * }, {
 *     dependsOn: [testAwsIamRolePolicyAttachment],
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Glue ML Transforms using `id`. For example:
 *
 * ```sh
 * $ pulumi import aws:glue/mLTransform:MLTransform example tfm-c2cafbe83b1c575f49eaca9939220e2fcd58e2d5
 * ```
 */
export class MLTransform extends pulumi.CustomResource {
    /**
     * Get an existing MLTransform resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MLTransformState, opts?: pulumi.CustomResourceOptions): MLTransform {
        return new MLTransform(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:glue/mLTransform:MLTransform';

    /**
     * Returns true if the given object is an instance of MLTransform.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MLTransform {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MLTransform.__pulumiType;
    }

    /**
     * Amazon Resource Name (ARN) of Glue ML Transform.
     */
    declare public /*out*/ readonly arn: pulumi.Output<string>;
    /**
     * Description of the ML Transform.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The version of glue to use, for example "1.0". For information about available versions, see the [AWS Glue Release Notes](https://docs.aws.amazon.com/glue/latest/dg/release-notes.html).
     */
    declare public readonly glueVersion: pulumi.Output<string>;
    /**
     * A list of AWS Glue table definitions used by the transform. see Input Record Tables.
     */
    declare public readonly inputRecordTables: pulumi.Output<outputs.glue.MLTransformInputRecordTable[]>;
    /**
     * The number of labels available for this transform.
     */
    declare public /*out*/ readonly labelCount: pulumi.Output<number>;
    /**
     * The number of AWS Glue data processing units (DPUs) that are allocated to task runs for this transform. You can allocate from `2` to `100` DPUs; the default is `10`. `maxCapacity` is a mutually exclusive option with `numberOfWorkers` and `workerType`.
     */
    declare public readonly maxCapacity: pulumi.Output<number>;
    /**
     * The maximum number of times to retry this ML Transform if it fails.
     */
    declare public readonly maxRetries: pulumi.Output<number | undefined>;
    /**
     * The name you assign to this ML Transform. It must be unique in your account.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The number of workers of a defined `workerType` that are allocated when an ML Transform runs. Required with `workerType`.
     */
    declare public readonly numberOfWorkers: pulumi.Output<number | undefined>;
    /**
     * The algorithmic parameters that are specific to the transform type used. Conditionally dependent on the transform type. see Parameters.
     */
    declare public readonly parameters: pulumi.Output<outputs.glue.MLTransformParameters>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * The ARN of the IAM role associated with this ML Transform.
     */
    declare public readonly roleArn: pulumi.Output<string>;
    /**
     * The object that represents the schema that this transform accepts. see Schema.
     */
    declare public /*out*/ readonly schemas: pulumi.Output<outputs.glue.MLTransformSchema[]>;
    /**
     * Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    declare public /*out*/ readonly tagsAll: pulumi.Output<{[key: string]: string}>;
    /**
     * The ML Transform timeout in minutes. The default is 2880 minutes (48 hours).
     */
    declare public readonly timeout: pulumi.Output<number | undefined>;
    /**
     * The type of predefined worker that is allocated when an ML Transform runs. Accepts a value of `Standard`, `G.1X`, or `G.2X`. Required with `numberOfWorkers`.
     */
    declare public readonly workerType: pulumi.Output<string | undefined>;

    /**
     * Create a MLTransform resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MLTransformArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MLTransformArgs | MLTransformState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MLTransformState | undefined;
            resourceInputs["arn"] = state?.arn;
            resourceInputs["description"] = state?.description;
            resourceInputs["glueVersion"] = state?.glueVersion;
            resourceInputs["inputRecordTables"] = state?.inputRecordTables;
            resourceInputs["labelCount"] = state?.labelCount;
            resourceInputs["maxCapacity"] = state?.maxCapacity;
            resourceInputs["maxRetries"] = state?.maxRetries;
            resourceInputs["name"] = state?.name;
            resourceInputs["numberOfWorkers"] = state?.numberOfWorkers;
            resourceInputs["parameters"] = state?.parameters;
            resourceInputs["region"] = state?.region;
            resourceInputs["roleArn"] = state?.roleArn;
            resourceInputs["schemas"] = state?.schemas;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tagsAll"] = state?.tagsAll;
            resourceInputs["timeout"] = state?.timeout;
            resourceInputs["workerType"] = state?.workerType;
        } else {
            const args = argsOrState as MLTransformArgs | undefined;
            if (args?.inputRecordTables === undefined && !opts.urn) {
                throw new Error("Missing required property 'inputRecordTables'");
            }
            if (args?.parameters === undefined && !opts.urn) {
                throw new Error("Missing required property 'parameters'");
            }
            if (args?.roleArn === undefined && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["glueVersion"] = args?.glueVersion;
            resourceInputs["inputRecordTables"] = args?.inputRecordTables;
            resourceInputs["maxCapacity"] = args?.maxCapacity;
            resourceInputs["maxRetries"] = args?.maxRetries;
            resourceInputs["name"] = args?.name;
            resourceInputs["numberOfWorkers"] = args?.numberOfWorkers;
            resourceInputs["parameters"] = args?.parameters;
            resourceInputs["region"] = args?.region;
            resourceInputs["roleArn"] = args?.roleArn;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["timeout"] = args?.timeout;
            resourceInputs["workerType"] = args?.workerType;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["labelCount"] = undefined /*out*/;
            resourceInputs["schemas"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MLTransform.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MLTransform resources.
 */
export interface MLTransformState {
    /**
     * Amazon Resource Name (ARN) of Glue ML Transform.
     */
    arn?: pulumi.Input<string>;
    /**
     * Description of the ML Transform.
     */
    description?: pulumi.Input<string>;
    /**
     * The version of glue to use, for example "1.0". For information about available versions, see the [AWS Glue Release Notes](https://docs.aws.amazon.com/glue/latest/dg/release-notes.html).
     */
    glueVersion?: pulumi.Input<string>;
    /**
     * A list of AWS Glue table definitions used by the transform. see Input Record Tables.
     */
    inputRecordTables?: pulumi.Input<pulumi.Input<inputs.glue.MLTransformInputRecordTable>[]>;
    /**
     * The number of labels available for this transform.
     */
    labelCount?: pulumi.Input<number>;
    /**
     * The number of AWS Glue data processing units (DPUs) that are allocated to task runs for this transform. You can allocate from `2` to `100` DPUs; the default is `10`. `maxCapacity` is a mutually exclusive option with `numberOfWorkers` and `workerType`.
     */
    maxCapacity?: pulumi.Input<number>;
    /**
     * The maximum number of times to retry this ML Transform if it fails.
     */
    maxRetries?: pulumi.Input<number>;
    /**
     * The name you assign to this ML Transform. It must be unique in your account.
     */
    name?: pulumi.Input<string>;
    /**
     * The number of workers of a defined `workerType` that are allocated when an ML Transform runs. Required with `workerType`.
     */
    numberOfWorkers?: pulumi.Input<number>;
    /**
     * The algorithmic parameters that are specific to the transform type used. Conditionally dependent on the transform type. see Parameters.
     */
    parameters?: pulumi.Input<inputs.glue.MLTransformParameters>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * The ARN of the IAM role associated with this ML Transform.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * The object that represents the schema that this transform accepts. see Schema.
     */
    schemas?: pulumi.Input<pulumi.Input<inputs.glue.MLTransformSchema>[]>;
    /**
     * Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The ML Transform timeout in minutes. The default is 2880 minutes (48 hours).
     */
    timeout?: pulumi.Input<number>;
    /**
     * The type of predefined worker that is allocated when an ML Transform runs. Accepts a value of `Standard`, `G.1X`, or `G.2X`. Required with `numberOfWorkers`.
     */
    workerType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MLTransform resource.
 */
export interface MLTransformArgs {
    /**
     * Description of the ML Transform.
     */
    description?: pulumi.Input<string>;
    /**
     * The version of glue to use, for example "1.0". For information about available versions, see the [AWS Glue Release Notes](https://docs.aws.amazon.com/glue/latest/dg/release-notes.html).
     */
    glueVersion?: pulumi.Input<string>;
    /**
     * A list of AWS Glue table definitions used by the transform. see Input Record Tables.
     */
    inputRecordTables: pulumi.Input<pulumi.Input<inputs.glue.MLTransformInputRecordTable>[]>;
    /**
     * The number of AWS Glue data processing units (DPUs) that are allocated to task runs for this transform. You can allocate from `2` to `100` DPUs; the default is `10`. `maxCapacity` is a mutually exclusive option with `numberOfWorkers` and `workerType`.
     */
    maxCapacity?: pulumi.Input<number>;
    /**
     * The maximum number of times to retry this ML Transform if it fails.
     */
    maxRetries?: pulumi.Input<number>;
    /**
     * The name you assign to this ML Transform. It must be unique in your account.
     */
    name?: pulumi.Input<string>;
    /**
     * The number of workers of a defined `workerType` that are allocated when an ML Transform runs. Required with `workerType`.
     */
    numberOfWorkers?: pulumi.Input<number>;
    /**
     * The algorithmic parameters that are specific to the transform type used. Conditionally dependent on the transform type. see Parameters.
     */
    parameters: pulumi.Input<inputs.glue.MLTransformParameters>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * The ARN of the IAM role associated with this ML Transform.
     */
    roleArn: pulumi.Input<string>;
    /**
     * Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The ML Transform timeout in minutes. The default is 2880 minutes (48 hours).
     */
    timeout?: pulumi.Input<number>;
    /**
     * The type of predefined worker that is allocated when an ML Transform runs. Accepts a value of `Standard`, `G.1X`, or `G.2X`. Required with `numberOfWorkers`.
     */
    workerType?: pulumi.Input<string>;
}
