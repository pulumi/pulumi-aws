// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Provides a Glue User Defined Function Resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleCatalogDatabase = new aws.glue.CatalogDatabase("exampleCatalogDatabase", {name: "my_database"});
 * const exampleUserDefinedFunction = new aws.glue.UserDefinedFunction("exampleUserDefinedFunction", {
 *     catalogId: exampleCatalogDatabase.catalogId,
 *     databaseName: exampleCatalogDatabase.name,
 *     className: "class",
 *     ownerName: "owner",
 *     ownerType: "GROUP",
 *     resourceUris: [{
 *         resourceType: "ARCHIVE",
 *         uri: "uri",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Glue User Defined Functions can be imported using the `catalog_id:database_name:function_name`. If you have not set a Catalog ID specify the AWS Account ID that the database is in, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:glue/userDefinedFunction:UserDefinedFunction func 123456789012:my_database:my_func
 * ```
 */
export class UserDefinedFunction extends pulumi.CustomResource {
    /**
     * Get an existing UserDefinedFunction resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserDefinedFunctionState, opts?: pulumi.CustomResourceOptions): UserDefinedFunction {
        return new UserDefinedFunction(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:glue/userDefinedFunction:UserDefinedFunction';

    /**
     * Returns true if the given object is an instance of UserDefinedFunction.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is UserDefinedFunction {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UserDefinedFunction.__pulumiType;
    }

    /**
     * The ARN of the Glue User Defined Function.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * ID of the Glue Catalog to create the function in. If omitted, this defaults to the AWS Account ID.
     */
    public readonly catalogId!: pulumi.Output<string | undefined>;
    /**
     * The Java class that contains the function code.
     */
    public readonly className!: pulumi.Output<string>;
    /**
     * The time at which the function was created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The name of the Database to create the Function.
     */
    public readonly databaseName!: pulumi.Output<string>;
    /**
     * The name of the function.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The owner of the function.
     */
    public readonly ownerName!: pulumi.Output<string>;
    /**
     * The owner type. can be one of `USER`, `ROLE`, and `GROUP`.
     */
    public readonly ownerType!: pulumi.Output<string>;
    /**
     * The configuration block for Resource URIs. See resource uris below for more details.
     */
    public readonly resourceUris!: pulumi.Output<outputs.glue.UserDefinedFunctionResourceUri[] | undefined>;

    /**
     * Create a UserDefinedFunction resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserDefinedFunctionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UserDefinedFunctionArgs | UserDefinedFunctionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UserDefinedFunctionState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["catalogId"] = state ? state.catalogId : undefined;
            resourceInputs["className"] = state ? state.className : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["databaseName"] = state ? state.databaseName : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["ownerName"] = state ? state.ownerName : undefined;
            resourceInputs["ownerType"] = state ? state.ownerType : undefined;
            resourceInputs["resourceUris"] = state ? state.resourceUris : undefined;
        } else {
            const args = argsOrState as UserDefinedFunctionArgs | undefined;
            if ((!args || args.className === undefined) && !opts.urn) {
                throw new Error("Missing required property 'className'");
            }
            if ((!args || args.databaseName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'databaseName'");
            }
            if ((!args || args.ownerName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ownerName'");
            }
            if ((!args || args.ownerType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ownerType'");
            }
            resourceInputs["catalogId"] = args ? args.catalogId : undefined;
            resourceInputs["className"] = args ? args.className : undefined;
            resourceInputs["databaseName"] = args ? args.databaseName : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["ownerName"] = args ? args.ownerName : undefined;
            resourceInputs["ownerType"] = args ? args.ownerType : undefined;
            resourceInputs["resourceUris"] = args ? args.resourceUris : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(UserDefinedFunction.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering UserDefinedFunction resources.
 */
export interface UserDefinedFunctionState {
    /**
     * The ARN of the Glue User Defined Function.
     */
    arn?: pulumi.Input<string>;
    /**
     * ID of the Glue Catalog to create the function in. If omitted, this defaults to the AWS Account ID.
     */
    catalogId?: pulumi.Input<string>;
    /**
     * The Java class that contains the function code.
     */
    className?: pulumi.Input<string>;
    /**
     * The time at which the function was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The name of the Database to create the Function.
     */
    databaseName?: pulumi.Input<string>;
    /**
     * The name of the function.
     */
    name?: pulumi.Input<string>;
    /**
     * The owner of the function.
     */
    ownerName?: pulumi.Input<string>;
    /**
     * The owner type. can be one of `USER`, `ROLE`, and `GROUP`.
     */
    ownerType?: pulumi.Input<string>;
    /**
     * The configuration block for Resource URIs. See resource uris below for more details.
     */
    resourceUris?: pulumi.Input<pulumi.Input<inputs.glue.UserDefinedFunctionResourceUri>[]>;
}

/**
 * The set of arguments for constructing a UserDefinedFunction resource.
 */
export interface UserDefinedFunctionArgs {
    /**
     * ID of the Glue Catalog to create the function in. If omitted, this defaults to the AWS Account ID.
     */
    catalogId?: pulumi.Input<string>;
    /**
     * The Java class that contains the function code.
     */
    className: pulumi.Input<string>;
    /**
     * The name of the Database to create the Function.
     */
    databaseName: pulumi.Input<string>;
    /**
     * The name of the function.
     */
    name?: pulumi.Input<string>;
    /**
     * The owner of the function.
     */
    ownerName: pulumi.Input<string>;
    /**
     * The owner type. can be one of `USER`, `ROLE`, and `GROUP`.
     */
    ownerType: pulumi.Input<string>;
    /**
     * The configuration block for Resource URIs. See resource uris below for more details.
     */
    resourceUris?: pulumi.Input<pulumi.Input<inputs.glue.UserDefinedFunctionResourceUri>[]>;
}
