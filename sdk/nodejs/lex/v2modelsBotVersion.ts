// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS Lex V2 Models Bot Version.
 *
 * ## Example Usage
 *
 * ## Import
 *
 * Using `pulumi import`, import Lex V2 Models Bot Version using the `example_id_arg`. For example:
 *
 * ```sh
 *  $ pulumi import aws:lex/v2modelsBotVersion:V2modelsBotVersion example bot_version-id-12345678
 * ```
 */
export class V2modelsBotVersion extends pulumi.CustomResource {
    /**
     * Get an existing V2modelsBotVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: V2modelsBotVersionState, opts?: pulumi.CustomResourceOptions): V2modelsBotVersion {
        return new V2modelsBotVersion(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:lex/v2modelsBotVersion:V2modelsBotVersion';

    /**
     * Returns true if the given object is an instance of V2modelsBotVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is V2modelsBotVersion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === V2modelsBotVersion.__pulumiType;
    }

    /**
     * Idientifier of the bot to create the version for.
     */
    public readonly botId!: pulumi.Output<string>;
    public readonly botVersion!: pulumi.Output<string>;
    /**
     * A description of the version. Use the description to help identify the version in lists.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly localeSpecification!: pulumi.Output<{[key: string]: outputs.lex.V2modelsBotVersionLocaleSpecification}>;
    public readonly timeouts!: pulumi.Output<outputs.lex.V2modelsBotVersionTimeouts | undefined>;

    /**
     * Create a V2modelsBotVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: V2modelsBotVersionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: V2modelsBotVersionArgs | V2modelsBotVersionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as V2modelsBotVersionState | undefined;
            resourceInputs["botId"] = state ? state.botId : undefined;
            resourceInputs["botVersion"] = state ? state.botVersion : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["localeSpecification"] = state ? state.localeSpecification : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as V2modelsBotVersionArgs | undefined;
            if ((!args || args.botId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'botId'");
            }
            if ((!args || args.localeSpecification === undefined) && !opts.urn) {
                throw new Error("Missing required property 'localeSpecification'");
            }
            resourceInputs["botId"] = args ? args.botId : undefined;
            resourceInputs["botVersion"] = args ? args.botVersion : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["localeSpecification"] = args ? args.localeSpecification : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(V2modelsBotVersion.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering V2modelsBotVersion resources.
 */
export interface V2modelsBotVersionState {
    /**
     * Idientifier of the bot to create the version for.
     */
    botId?: pulumi.Input<string>;
    botVersion?: pulumi.Input<string>;
    /**
     * A description of the version. Use the description to help identify the version in lists.
     */
    description?: pulumi.Input<string>;
    localeSpecification?: pulumi.Input<{[key: string]: pulumi.Input<inputs.lex.V2modelsBotVersionLocaleSpecification>}>;
    timeouts?: pulumi.Input<inputs.lex.V2modelsBotVersionTimeouts>;
}

/**
 * The set of arguments for constructing a V2modelsBotVersion resource.
 */
export interface V2modelsBotVersionArgs {
    /**
     * Idientifier of the bot to create the version for.
     */
    botId: pulumi.Input<string>;
    botVersion?: pulumi.Input<string>;
    /**
     * A description of the version. Use the description to help identify the version in lists.
     */
    description?: pulumi.Input<string>;
    localeSpecification: pulumi.Input<{[key: string]: pulumi.Input<inputs.lex.V2modelsBotVersionLocaleSpecification>}>;
    timeouts?: pulumi.Input<inputs.lex.V2modelsBotVersionTimeouts>;
}
