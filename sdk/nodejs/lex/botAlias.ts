// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export class BotAlias extends pulumi.CustomResource {
    /**
     * Get an existing BotAlias resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BotAliasState, opts?: pulumi.CustomResourceOptions): BotAlias {
        return new BotAlias(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:lex/botAlias:BotAlias';

    /**
     * Returns true if the given object is an instance of BotAlias.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BotAlias {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BotAlias.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly botName!: pulumi.Output<string>;
    public readonly botVersion!: pulumi.Output<string>;
    public /*out*/ readonly checksum!: pulumi.Output<string>;
    public readonly conversationLogs!: pulumi.Output<outputs.lex.BotAliasConversationLogs | undefined>;
    public /*out*/ readonly createdDate!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public /*out*/ readonly lastUpdatedDate!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a BotAlias resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BotAliasArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BotAliasArgs | BotAliasState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BotAliasState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["botName"] = state ? state.botName : undefined;
            resourceInputs["botVersion"] = state ? state.botVersion : undefined;
            resourceInputs["checksum"] = state ? state.checksum : undefined;
            resourceInputs["conversationLogs"] = state ? state.conversationLogs : undefined;
            resourceInputs["createdDate"] = state ? state.createdDate : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["lastUpdatedDate"] = state ? state.lastUpdatedDate : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as BotAliasArgs | undefined;
            if ((!args || args.botName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'botName'");
            }
            if ((!args || args.botVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'botVersion'");
            }
            resourceInputs["botName"] = args ? args.botName : undefined;
            resourceInputs["botVersion"] = args ? args.botVersion : undefined;
            resourceInputs["conversationLogs"] = args ? args.conversationLogs : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["checksum"] = undefined /*out*/;
            resourceInputs["createdDate"] = undefined /*out*/;
            resourceInputs["lastUpdatedDate"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BotAlias.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BotAlias resources.
 */
export interface BotAliasState {
    arn?: pulumi.Input<string>;
    botName?: pulumi.Input<string>;
    botVersion?: pulumi.Input<string>;
    checksum?: pulumi.Input<string>;
    conversationLogs?: pulumi.Input<inputs.lex.BotAliasConversationLogs>;
    createdDate?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    lastUpdatedDate?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BotAlias resource.
 */
export interface BotAliasArgs {
    botName: pulumi.Input<string>;
    botVersion: pulumi.Input<string>;
    conversationLogs?: pulumi.Input<inputs.lex.BotAliasConversationLogs>;
    description?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
