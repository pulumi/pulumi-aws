// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS Lex V2 Models Slot Type.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.lex.V2modelsBot("example", {
 *     name: "example",
 *     idleSessionTtlInSeconds: 60,
 *     roleArn: exampleAwsIamRole.arn,
 *     dataPrivacies: [{
 *         childDirected: true,
 *     }],
 * });
 * const exampleV2modelsBotLocale = new aws.lex.V2modelsBotLocale("example", {
 *     localeId: "en_US",
 *     botId: example.id,
 *     botVersion: "DRAFT",
 *     nLuIntentConfidenceThreshold: 0.7,
 * });
 * const exampleV2modelsBotVersion = new aws.lex.V2modelsBotVersion("example", {
 *     botId: example.id,
 *     localeSpecification: exampleV2modelsBotLocale.localeId.apply(localeId => {
 *         [localeId]: {
 *             sourceBotVersion: "DRAFT",
 *         },
 *     }),
 * });
 * const exampleV2modelsSlotType = new aws.lex.V2modelsSlotType("example", {
 *     botId: example.id,
 *     botVersion: exampleV2modelsBotLocale.botVersion,
 *     name: "example",
 *     localeId: exampleV2modelsBotLocale.localeId,
 * });
 * ```
 *
 * ### valueSelectionSetting Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.lex.V2modelsSlotType("example", {
 *     botId: exampleAwsLexv2modelsBot.id,
 *     botVersion: exampleAwsLexv2modelsBotLocale.botVersion,
 *     name: "example",
 *     localeId: exampleAwsLexv2modelsBotLocale.localeId,
 *     valueSelectionSetting: {
 *         resolutionStrategy: "OriginalValue",
 *         advancedRecognitionSettings: [{
 *             audioRecognitionStrategy: "UseSlotValuesAsCustomVocabulary",
 *         }],
 *     },
 *     slotTypeValues: [{
 *         sampleValues: [{
 *             value: "exampleValue",
 *         }],
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Lex V2 Models Slot Type using using a comma-delimited string concatenating `bot_id`, `bot_version`, `locale_id`, and `slot_type_id`. For example:
 *
 * ```sh
 * $ pulumi import aws:lex/v2modelsSlotType:V2modelsSlotType example bot-1234,DRAFT,en_US,slot_type-id-12345678
 * ```
 */
export class V2modelsSlotType extends pulumi.CustomResource {
    /**
     * Get an existing V2modelsSlotType resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: V2modelsSlotTypeState, opts?: pulumi.CustomResourceOptions): V2modelsSlotType {
        return new V2modelsSlotType(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:lex/v2modelsSlotType:V2modelsSlotType';

    /**
     * Returns true if the given object is an instance of V2modelsSlotType.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is V2modelsSlotType {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === V2modelsSlotType.__pulumiType;
    }

    /**
     * Identifier of the bot associated with this slot type.
     */
    declare public readonly botId: pulumi.Output<string>;
    /**
     * Version of the bot associated with this slot type.
     */
    declare public readonly botVersion: pulumi.Output<string>;
    /**
     * Specifications for a composite slot type.
     * See `compositeSlotTypeSetting` argument reference below.
     */
    declare public readonly compositeSlotTypeSettings: pulumi.Output<outputs.lex.V2modelsSlotTypeCompositeSlotTypeSetting[] | undefined>;
    /**
     * Description of the slot type.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Type of external information used to create the slot type.
     * See `externalSourceSetting` argument reference below.
     */
    declare public readonly externalSourceSettings: pulumi.Output<outputs.lex.V2modelsSlotTypeExternalSourceSetting[] | undefined>;
    /**
     * Identifier of the language and locale where this slot type is used.
     * All of the bots, slot types, and slots used by the intent must have the same locale.
     */
    declare public readonly localeId: pulumi.Output<string>;
    /**
     * Name of the slot type.
     *
     * The following arguments are optional:
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Built-in slot type used as a parent of this slot type.
     * When you define a parent slot type, the new slot type has the configuration of the parent slot type.
     * Only `AMAZON.AlphaNumeric` is supported.
     */
    declare public readonly parentSlotTypeSignature: pulumi.Output<string | undefined>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * Unique identifier for the slot type.
     */
    declare public /*out*/ readonly slotTypeId: pulumi.Output<string>;
    /**
     * List of SlotTypeValue objects that defines the values that the slot type can take.
     * Each value can have a list of synonyms, additional values that help train the machine learning model about the values that it resolves for a slot.
     * See `slotTypeValues` argument reference below.
     */
    declare public readonly slotTypeValues: pulumi.Output<outputs.lex.V2modelsSlotTypeSlotTypeValue[] | undefined>;
    declare public readonly timeouts: pulumi.Output<outputs.lex.V2modelsSlotTypeTimeouts | undefined>;
    /**
     * Determines the strategy that Amazon Lex uses to select a value from the list of possible values.
     * See `valueSelectionSetting` argument reference below.
     */
    declare public readonly valueSelectionSetting: pulumi.Output<outputs.lex.V2modelsSlotTypeValueSelectionSetting | undefined>;

    /**
     * Create a V2modelsSlotType resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: V2modelsSlotTypeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: V2modelsSlotTypeArgs | V2modelsSlotTypeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as V2modelsSlotTypeState | undefined;
            resourceInputs["botId"] = state?.botId;
            resourceInputs["botVersion"] = state?.botVersion;
            resourceInputs["compositeSlotTypeSettings"] = state?.compositeSlotTypeSettings;
            resourceInputs["description"] = state?.description;
            resourceInputs["externalSourceSettings"] = state?.externalSourceSettings;
            resourceInputs["localeId"] = state?.localeId;
            resourceInputs["name"] = state?.name;
            resourceInputs["parentSlotTypeSignature"] = state?.parentSlotTypeSignature;
            resourceInputs["region"] = state?.region;
            resourceInputs["slotTypeId"] = state?.slotTypeId;
            resourceInputs["slotTypeValues"] = state?.slotTypeValues;
            resourceInputs["timeouts"] = state?.timeouts;
            resourceInputs["valueSelectionSetting"] = state?.valueSelectionSetting;
        } else {
            const args = argsOrState as V2modelsSlotTypeArgs | undefined;
            if (args?.botId === undefined && !opts.urn) {
                throw new Error("Missing required property 'botId'");
            }
            if (args?.botVersion === undefined && !opts.urn) {
                throw new Error("Missing required property 'botVersion'");
            }
            if (args?.localeId === undefined && !opts.urn) {
                throw new Error("Missing required property 'localeId'");
            }
            resourceInputs["botId"] = args?.botId;
            resourceInputs["botVersion"] = args?.botVersion;
            resourceInputs["compositeSlotTypeSettings"] = args?.compositeSlotTypeSettings;
            resourceInputs["description"] = args?.description;
            resourceInputs["externalSourceSettings"] = args?.externalSourceSettings;
            resourceInputs["localeId"] = args?.localeId;
            resourceInputs["name"] = args?.name;
            resourceInputs["parentSlotTypeSignature"] = args?.parentSlotTypeSignature;
            resourceInputs["region"] = args?.region;
            resourceInputs["slotTypeValues"] = args?.slotTypeValues;
            resourceInputs["timeouts"] = args?.timeouts;
            resourceInputs["valueSelectionSetting"] = args?.valueSelectionSetting;
            resourceInputs["slotTypeId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(V2modelsSlotType.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering V2modelsSlotType resources.
 */
export interface V2modelsSlotTypeState {
    /**
     * Identifier of the bot associated with this slot type.
     */
    botId?: pulumi.Input<string>;
    /**
     * Version of the bot associated with this slot type.
     */
    botVersion?: pulumi.Input<string>;
    /**
     * Specifications for a composite slot type.
     * See `compositeSlotTypeSetting` argument reference below.
     */
    compositeSlotTypeSettings?: pulumi.Input<pulumi.Input<inputs.lex.V2modelsSlotTypeCompositeSlotTypeSetting>[]>;
    /**
     * Description of the slot type.
     */
    description?: pulumi.Input<string>;
    /**
     * Type of external information used to create the slot type.
     * See `externalSourceSetting` argument reference below.
     */
    externalSourceSettings?: pulumi.Input<pulumi.Input<inputs.lex.V2modelsSlotTypeExternalSourceSetting>[]>;
    /**
     * Identifier of the language and locale where this slot type is used.
     * All of the bots, slot types, and slots used by the intent must have the same locale.
     */
    localeId?: pulumi.Input<string>;
    /**
     * Name of the slot type.
     *
     * The following arguments are optional:
     */
    name?: pulumi.Input<string>;
    /**
     * Built-in slot type used as a parent of this slot type.
     * When you define a parent slot type, the new slot type has the configuration of the parent slot type.
     * Only `AMAZON.AlphaNumeric` is supported.
     */
    parentSlotTypeSignature?: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * Unique identifier for the slot type.
     */
    slotTypeId?: pulumi.Input<string>;
    /**
     * List of SlotTypeValue objects that defines the values that the slot type can take.
     * Each value can have a list of synonyms, additional values that help train the machine learning model about the values that it resolves for a slot.
     * See `slotTypeValues` argument reference below.
     */
    slotTypeValues?: pulumi.Input<pulumi.Input<inputs.lex.V2modelsSlotTypeSlotTypeValue>[]>;
    timeouts?: pulumi.Input<inputs.lex.V2modelsSlotTypeTimeouts>;
    /**
     * Determines the strategy that Amazon Lex uses to select a value from the list of possible values.
     * See `valueSelectionSetting` argument reference below.
     */
    valueSelectionSetting?: pulumi.Input<inputs.lex.V2modelsSlotTypeValueSelectionSetting>;
}

/**
 * The set of arguments for constructing a V2modelsSlotType resource.
 */
export interface V2modelsSlotTypeArgs {
    /**
     * Identifier of the bot associated with this slot type.
     */
    botId: pulumi.Input<string>;
    /**
     * Version of the bot associated with this slot type.
     */
    botVersion: pulumi.Input<string>;
    /**
     * Specifications for a composite slot type.
     * See `compositeSlotTypeSetting` argument reference below.
     */
    compositeSlotTypeSettings?: pulumi.Input<pulumi.Input<inputs.lex.V2modelsSlotTypeCompositeSlotTypeSetting>[]>;
    /**
     * Description of the slot type.
     */
    description?: pulumi.Input<string>;
    /**
     * Type of external information used to create the slot type.
     * See `externalSourceSetting` argument reference below.
     */
    externalSourceSettings?: pulumi.Input<pulumi.Input<inputs.lex.V2modelsSlotTypeExternalSourceSetting>[]>;
    /**
     * Identifier of the language and locale where this slot type is used.
     * All of the bots, slot types, and slots used by the intent must have the same locale.
     */
    localeId: pulumi.Input<string>;
    /**
     * Name of the slot type.
     *
     * The following arguments are optional:
     */
    name?: pulumi.Input<string>;
    /**
     * Built-in slot type used as a parent of this slot type.
     * When you define a parent slot type, the new slot type has the configuration of the parent slot type.
     * Only `AMAZON.AlphaNumeric` is supported.
     */
    parentSlotTypeSignature?: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * List of SlotTypeValue objects that defines the values that the slot type can take.
     * Each value can have a list of synonyms, additional values that help train the machine learning model about the values that it resolves for a slot.
     * See `slotTypeValues` argument reference below.
     */
    slotTypeValues?: pulumi.Input<pulumi.Input<inputs.lex.V2modelsSlotTypeSlotTypeValue>[]>;
    timeouts?: pulumi.Input<inputs.lex.V2modelsSlotTypeTimeouts>;
    /**
     * Determines the strategy that Amazon Lex uses to select a value from the list of possible values.
     * See `valueSelectionSetting` argument reference below.
     */
    valueSelectionSetting?: pulumi.Input<inputs.lex.V2modelsSlotTypeValueSelectionSetting>;
}
