// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS Lex V2 Models Bot Locale.
 *
 * ## Example Usage
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.lex.V2modelsBotLocale("example", {
 *     botId: aws_lexv2models_bot.example.id,
 *     botVersion: "DRAFT",
 *     localeId: "en_US",
 *     nLuIntentConfidenceThreshold: 0.7,
 * });
 * ```
 * ### Voice Settings
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.lex.V2modelsBotLocale("example", {
 *     botId: aws_lexv2models_bot.example.id,
 *     botVersion: "DRAFT",
 *     localeId: "en_US",
 *     nLuIntentConfidenceThreshold: 0.7,
 *     voiceSettings: {
 *         voiceId: "Kendra",
 *         engine: "standard",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Lex V2 Models Bot Locale using the `id`. For example:
 *
 * ```sh
 *  $ pulumi import aws:lex/v2modelsBotLocale:V2modelsBotLocale example bot_locale-id-12345678
 * ```
 */
export class V2modelsBotLocale extends pulumi.CustomResource {
    /**
     * Get an existing V2modelsBotLocale resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: V2modelsBotLocaleState, opts?: pulumi.CustomResourceOptions): V2modelsBotLocale {
        return new V2modelsBotLocale(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:lex/v2modelsBotLocale:V2modelsBotLocale';

    /**
     * Returns true if the given object is an instance of V2modelsBotLocale.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is V2modelsBotLocale {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === V2modelsBotLocale.__pulumiType;
    }

    /**
     * Identifier of the bot to create the locale for.
     */
    public readonly botId!: pulumi.Output<string>;
    /**
     * Version of the bot to create the locale for. This can only be the draft version of the bot.
     */
    public readonly botVersion!: pulumi.Output<string>;
    /**
     * Description of the bot locale. Use this to help identify the bot locale in lists.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Identifier of the language and locale that the bot will be used in. The string must match one of the supported locales. All of the intents, slot types, and slots used in the bot must have the same locale. For more information, see Supported languages (https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html)
     */
    public readonly localeId!: pulumi.Output<string>;
    /**
     * Determines the threshold where Amazon Lex will insert the AMAZON.FallbackIntent, AMAZON.KendraSearchIntent, or both when returning alternative intents.
     *
     * The following arguments are optional:
     */
    public readonly nLuIntentConfidenceThreshold!: pulumi.Output<number>;
    /**
     * Specified locale name.
     */
    public readonly name!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.lex.V2modelsBotLocaleTimeouts | undefined>;
    /**
     * Amazon Polly voice ID that Amazon Lex uses for voice interaction with the user. See `voiceSettings`.
     */
    public readonly voiceSettings!: pulumi.Output<outputs.lex.V2modelsBotLocaleVoiceSettings | undefined>;

    /**
     * Create a V2modelsBotLocale resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: V2modelsBotLocaleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: V2modelsBotLocaleArgs | V2modelsBotLocaleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as V2modelsBotLocaleState | undefined;
            resourceInputs["botId"] = state ? state.botId : undefined;
            resourceInputs["botVersion"] = state ? state.botVersion : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["localeId"] = state ? state.localeId : undefined;
            resourceInputs["nLuIntentConfidenceThreshold"] = state ? state.nLuIntentConfidenceThreshold : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["voiceSettings"] = state ? state.voiceSettings : undefined;
        } else {
            const args = argsOrState as V2modelsBotLocaleArgs | undefined;
            if ((!args || args.botId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'botId'");
            }
            if ((!args || args.botVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'botVersion'");
            }
            if ((!args || args.localeId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'localeId'");
            }
            if ((!args || args.nLuIntentConfidenceThreshold === undefined) && !opts.urn) {
                throw new Error("Missing required property 'nLuIntentConfidenceThreshold'");
            }
            resourceInputs["botId"] = args ? args.botId : undefined;
            resourceInputs["botVersion"] = args ? args.botVersion : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["localeId"] = args ? args.localeId : undefined;
            resourceInputs["nLuIntentConfidenceThreshold"] = args ? args.nLuIntentConfidenceThreshold : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["voiceSettings"] = args ? args.voiceSettings : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(V2modelsBotLocale.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering V2modelsBotLocale resources.
 */
export interface V2modelsBotLocaleState {
    /**
     * Identifier of the bot to create the locale for.
     */
    botId?: pulumi.Input<string>;
    /**
     * Version of the bot to create the locale for. This can only be the draft version of the bot.
     */
    botVersion?: pulumi.Input<string>;
    /**
     * Description of the bot locale. Use this to help identify the bot locale in lists.
     */
    description?: pulumi.Input<string>;
    /**
     * Identifier of the language and locale that the bot will be used in. The string must match one of the supported locales. All of the intents, slot types, and slots used in the bot must have the same locale. For more information, see Supported languages (https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html)
     */
    localeId?: pulumi.Input<string>;
    /**
     * Determines the threshold where Amazon Lex will insert the AMAZON.FallbackIntent, AMAZON.KendraSearchIntent, or both when returning alternative intents.
     *
     * The following arguments are optional:
     */
    nLuIntentConfidenceThreshold?: pulumi.Input<number>;
    /**
     * Specified locale name.
     */
    name?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.lex.V2modelsBotLocaleTimeouts>;
    /**
     * Amazon Polly voice ID that Amazon Lex uses for voice interaction with the user. See `voiceSettings`.
     */
    voiceSettings?: pulumi.Input<inputs.lex.V2modelsBotLocaleVoiceSettings>;
}

/**
 * The set of arguments for constructing a V2modelsBotLocale resource.
 */
export interface V2modelsBotLocaleArgs {
    /**
     * Identifier of the bot to create the locale for.
     */
    botId: pulumi.Input<string>;
    /**
     * Version of the bot to create the locale for. This can only be the draft version of the bot.
     */
    botVersion: pulumi.Input<string>;
    /**
     * Description of the bot locale. Use this to help identify the bot locale in lists.
     */
    description?: pulumi.Input<string>;
    /**
     * Identifier of the language and locale that the bot will be used in. The string must match one of the supported locales. All of the intents, slot types, and slots used in the bot must have the same locale. For more information, see Supported languages (https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html)
     */
    localeId: pulumi.Input<string>;
    /**
     * Determines the threshold where Amazon Lex will insert the AMAZON.FallbackIntent, AMAZON.KendraSearchIntent, or both when returning alternative intents.
     *
     * The following arguments are optional:
     */
    nLuIntentConfidenceThreshold: pulumi.Input<number>;
    /**
     * Specified locale name.
     */
    name?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.lex.V2modelsBotLocaleTimeouts>;
    /**
     * Amazon Polly voice ID that Amazon Lex uses for voice interaction with the user. See `voiceSettings`.
     */
    voiceSettings?: pulumi.Input<inputs.lex.V2modelsBotLocaleVoiceSettings>;
}
