// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export class Bot extends pulumi.CustomResource {
    /**
     * Get an existing Bot resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BotState, opts?: pulumi.CustomResourceOptions): Bot {
        return new Bot(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:lex/bot:Bot';

    /**
     * Returns true if the given object is an instance of Bot.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Bot {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Bot.__pulumiType;
    }

    public readonly abortStatement!: pulumi.Output<outputs.lex.BotAbortStatement>;
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public /*out*/ readonly checksum!: pulumi.Output<string>;
    public readonly childDirected!: pulumi.Output<boolean>;
    public readonly clarificationPrompt!: pulumi.Output<outputs.lex.BotClarificationPrompt | undefined>;
    public readonly createVersion!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly createdDate!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly detectSentiment!: pulumi.Output<boolean | undefined>;
    public readonly enableModelImprovements!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly failureReason!: pulumi.Output<string>;
    public readonly idleSessionTtlInSeconds!: pulumi.Output<number | undefined>;
    public readonly intents!: pulumi.Output<outputs.lex.BotIntent[]>;
    public /*out*/ readonly lastUpdatedDate!: pulumi.Output<string>;
    public readonly locale!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly nluIntentConfidenceThreshold!: pulumi.Output<number | undefined>;
    public readonly processBehavior!: pulumi.Output<string | undefined>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public /*out*/ readonly version!: pulumi.Output<string>;
    public readonly voiceId!: pulumi.Output<string>;

    /**
     * Create a Bot resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BotArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BotArgs | BotState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BotState | undefined;
            resourceInputs["abortStatement"] = state ? state.abortStatement : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["checksum"] = state ? state.checksum : undefined;
            resourceInputs["childDirected"] = state ? state.childDirected : undefined;
            resourceInputs["clarificationPrompt"] = state ? state.clarificationPrompt : undefined;
            resourceInputs["createVersion"] = state ? state.createVersion : undefined;
            resourceInputs["createdDate"] = state ? state.createdDate : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["detectSentiment"] = state ? state.detectSentiment : undefined;
            resourceInputs["enableModelImprovements"] = state ? state.enableModelImprovements : undefined;
            resourceInputs["failureReason"] = state ? state.failureReason : undefined;
            resourceInputs["idleSessionTtlInSeconds"] = state ? state.idleSessionTtlInSeconds : undefined;
            resourceInputs["intents"] = state ? state.intents : undefined;
            resourceInputs["lastUpdatedDate"] = state ? state.lastUpdatedDate : undefined;
            resourceInputs["locale"] = state ? state.locale : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nluIntentConfidenceThreshold"] = state ? state.nluIntentConfidenceThreshold : undefined;
            resourceInputs["processBehavior"] = state ? state.processBehavior : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["voiceId"] = state ? state.voiceId : undefined;
        } else {
            const args = argsOrState as BotArgs | undefined;
            if ((!args || args.abortStatement === undefined) && !opts.urn) {
                throw new Error("Missing required property 'abortStatement'");
            }
            if ((!args || args.childDirected === undefined) && !opts.urn) {
                throw new Error("Missing required property 'childDirected'");
            }
            if ((!args || args.intents === undefined) && !opts.urn) {
                throw new Error("Missing required property 'intents'");
            }
            resourceInputs["abortStatement"] = args ? args.abortStatement : undefined;
            resourceInputs["childDirected"] = args ? args.childDirected : undefined;
            resourceInputs["clarificationPrompt"] = args ? args.clarificationPrompt : undefined;
            resourceInputs["createVersion"] = args ? args.createVersion : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["detectSentiment"] = args ? args.detectSentiment : undefined;
            resourceInputs["enableModelImprovements"] = args ? args.enableModelImprovements : undefined;
            resourceInputs["idleSessionTtlInSeconds"] = args ? args.idleSessionTtlInSeconds : undefined;
            resourceInputs["intents"] = args ? args.intents : undefined;
            resourceInputs["locale"] = args ? args.locale : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nluIntentConfidenceThreshold"] = args ? args.nluIntentConfidenceThreshold : undefined;
            resourceInputs["processBehavior"] = args ? args.processBehavior : undefined;
            resourceInputs["voiceId"] = args ? args.voiceId : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["checksum"] = undefined /*out*/;
            resourceInputs["createdDate"] = undefined /*out*/;
            resourceInputs["failureReason"] = undefined /*out*/;
            resourceInputs["lastUpdatedDate"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Bot.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Bot resources.
 */
export interface BotState {
    abortStatement?: pulumi.Input<inputs.lex.BotAbortStatement>;
    arn?: pulumi.Input<string>;
    checksum?: pulumi.Input<string>;
    childDirected?: pulumi.Input<boolean>;
    clarificationPrompt?: pulumi.Input<inputs.lex.BotClarificationPrompt>;
    createVersion?: pulumi.Input<boolean>;
    createdDate?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    detectSentiment?: pulumi.Input<boolean>;
    enableModelImprovements?: pulumi.Input<boolean>;
    failureReason?: pulumi.Input<string>;
    idleSessionTtlInSeconds?: pulumi.Input<number>;
    intents?: pulumi.Input<pulumi.Input<inputs.lex.BotIntent>[]>;
    lastUpdatedDate?: pulumi.Input<string>;
    locale?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nluIntentConfidenceThreshold?: pulumi.Input<number>;
    processBehavior?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
    voiceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Bot resource.
 */
export interface BotArgs {
    abortStatement: pulumi.Input<inputs.lex.BotAbortStatement>;
    childDirected: pulumi.Input<boolean>;
    clarificationPrompt?: pulumi.Input<inputs.lex.BotClarificationPrompt>;
    createVersion?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    detectSentiment?: pulumi.Input<boolean>;
    enableModelImprovements?: pulumi.Input<boolean>;
    idleSessionTtlInSeconds?: pulumi.Input<number>;
    intents: pulumi.Input<pulumi.Input<inputs.lex.BotIntent>[]>;
    locale?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nluIntentConfidenceThreshold?: pulumi.Input<number>;
    processBehavior?: pulumi.Input<string>;
    voiceId?: pulumi.Input<string>;
}
