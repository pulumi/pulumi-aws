// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Use this data source to get information about an OpenSearch Domain
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const myDomain = aws.opensearch.getDomain({
 *     domainName: "my-domain-name",
 * });
 * ```
 */
export function getDomain(args: GetDomainArgs, opts?: pulumi.InvokeOptions): Promise<GetDomainResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws:opensearch/getDomain:getDomain", {
        "domainName": args.domainName,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getDomain.
 */
export interface GetDomainArgs {
    /**
     * Name of the domain.
     */
    domainName: string;
    /**
     * Tags assigned to the domain.
     */
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getDomain.
 */
export interface GetDomainResult {
    /**
     * Policy document attached to the domain.
     */
    readonly accessPolicies: string;
    /**
     * Key-value string pairs to specify advanced configuration options.
     */
    readonly advancedOptions: {[key: string]: string};
    /**
     * Status of the OpenSearch domain's advanced security options. The block consists of the following attributes:
     */
    readonly advancedSecurityOptions: outputs.opensearch.GetDomainAdvancedSecurityOption[];
    /**
     * ARN of the domain.
     */
    readonly arn: string;
    /**
     * Configuration of the Auto-Tune options of the domain.
     */
    readonly autoTuneOptions: outputs.opensearch.GetDomainAutoTuneOption[];
    /**
     * Cluster configuration of the domain.
     */
    readonly clusterConfigs: outputs.opensearch.GetDomainClusterConfig[];
    /**
     * Domain Amazon Cognito Authentication options for Kibana.
     */
    readonly cognitoOptions: outputs.opensearch.GetDomainCognitoOption[];
    /**
     * Status of the creation of the domain.
     */
    readonly created: boolean;
    /**
     * Status of the deletion of the domain.
     */
    readonly deleted: boolean;
    /**
     * Unique identifier for the domain.
     */
    readonly domainId: string;
    readonly domainName: string;
    /**
     * EBS Options for the instances in the domain.
     */
    readonly ebsOptions: outputs.opensearch.GetDomainEbsOption[];
    /**
     * Domain encryption at rest related options.
     */
    readonly encryptionAtRests: outputs.opensearch.GetDomainEncryptionAtRest[];
    /**
     * Domain-specific endpoint used to submit index, search, and data upload requests.
     */
    readonly endpoint: string;
    /**
     * OpenSearch version for the domain.
     */
    readonly engineVersion: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Domain-specific endpoint used to access the Kibana application.
     */
    readonly kibanaEndpoint: string;
    /**
     * Domain log publishing related options.
     */
    readonly logPublishingOptions: outputs.opensearch.GetDomainLogPublishingOption[];
    /**
     * Domain in transit encryption related options.
     */
    readonly nodeToNodeEncryptions: outputs.opensearch.GetDomainNodeToNodeEncryption[];
    /**
     * Status of a configuration change in the domain.
     * * `snapshotOptions` – Domain snapshot related options.
     */
    readonly processing: boolean;
    readonly snapshotOptions: outputs.opensearch.GetDomainSnapshotOption[];
    /**
     * Tags assigned to the domain.
     */
    readonly tags: {[key: string]: string};
    /**
     * VPC Options for private OpenSearch domains.
     */
    readonly vpcOptions: outputs.opensearch.GetDomainVpcOption[];
}

export function getDomainOutput(args: GetDomainOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDomainResult> {
    return pulumi.output(args).apply(a => getDomain(a, opts))
}

/**
 * A collection of arguments for invoking getDomain.
 */
export interface GetDomainOutputArgs {
    /**
     * Name of the domain.
     */
    domainName: pulumi.Input<string>;
    /**
     * Tags assigned to the domain.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
