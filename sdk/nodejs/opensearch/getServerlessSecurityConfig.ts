// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Data source for managing an AWS OpenSearch Serverless Security Config.
 *
 * ## Example Usage
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.opensearch.getServerlessSecurityConfig({
 *     id: "saml/12345678912/example",
 * });
 * ```
 */
export function getServerlessSecurityConfig(args: GetServerlessSecurityConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetServerlessSecurityConfigResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:opensearch/getServerlessSecurityConfig:getServerlessSecurityConfig", {
        "id": args.id,
        "samlOptions": args.samlOptions,
    }, opts);
}

/**
 * A collection of arguments for invoking getServerlessSecurityConfig.
 */
export interface GetServerlessSecurityConfigArgs {
    /**
     * The unique identifier of the security configuration.
     */
    id: string;
    /**
     * SAML options for the security configuration.
     */
    samlOptions?: inputs.opensearch.GetServerlessSecurityConfigSamlOptions;
}

/**
 * A collection of values returned by getServerlessSecurityConfig.
 */
export interface GetServerlessSecurityConfigResult {
    /**
     * The version of the security configuration.
     */
    readonly configVersion: string;
    /**
     * The date the configuration was created.
     */
    readonly createdDate: string;
    /**
     * The description of the security configuration.
     */
    readonly description: string;
    readonly id: string;
    /**
     * The date the configuration was last modified.
     */
    readonly lastModifiedDate: string;
    /**
     * SAML options for the security configuration.
     */
    readonly samlOptions?: outputs.opensearch.GetServerlessSecurityConfigSamlOptions;
    /**
     * The type of security configuration.
     */
    readonly type: string;
}
/**
 * Data source for managing an AWS OpenSearch Serverless Security Config.
 *
 * ## Example Usage
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.opensearch.getServerlessSecurityConfig({
 *     id: "saml/12345678912/example",
 * });
 * ```
 */
export function getServerlessSecurityConfigOutput(args: GetServerlessSecurityConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServerlessSecurityConfigResult> {
    return pulumi.output(args).apply((a: any) => getServerlessSecurityConfig(a, opts))
}

/**
 * A collection of arguments for invoking getServerlessSecurityConfig.
 */
export interface GetServerlessSecurityConfigOutputArgs {
    /**
     * The unique identifier of the security configuration.
     */
    id: pulumi.Input<string>;
    /**
     * SAML options for the security configuration.
     */
    samlOptions?: pulumi.Input<inputs.opensearch.GetServerlessSecurityConfigSamlOptionsArgs>;
}
