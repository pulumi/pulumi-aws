// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a lightsail bucket access key. This is a set of credentials that allow API requests to be made to the lightsail bucket.
 *
 * ## Import
 *
 * Using `pulumi import`, import `aws_lightsail_bucket_access_key` using the `id` attribute. For example:
 *
 * ```sh
 *  $ pulumi import aws:lightsail/bucketAccessKey:BucketAccessKey test example-bucket,AKIA47VOQ2KPR7LLRZ6D
 * ```
 */
export class BucketAccessKey extends pulumi.CustomResource {
    /**
     * Get an existing BucketAccessKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BucketAccessKeyState, opts?: pulumi.CustomResourceOptions): BucketAccessKey {
        return new BucketAccessKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:lightsail/bucketAccessKey:BucketAccessKey';

    /**
     * Returns true if the given object is an instance of BucketAccessKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BucketAccessKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BucketAccessKey.__pulumiType;
    }

    /**
     * The ID of the access key.
     */
    public /*out*/ readonly accessKeyId!: pulumi.Output<string>;
    /**
     * The name of the bucket that the new access key will belong to, and grant access to.
     */
    public readonly bucketName!: pulumi.Output<string>;
    /**
     * The timestamp when the access key was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The secret access key used to sign requests. This attribute is not available for imported resources. Note that this will be written to the state file.
     */
    public /*out*/ readonly secretAccessKey!: pulumi.Output<string>;
    /**
     * The status of the access key.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a BucketAccessKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BucketAccessKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BucketAccessKeyArgs | BucketAccessKeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BucketAccessKeyState | undefined;
            resourceInputs["accessKeyId"] = state ? state.accessKeyId : undefined;
            resourceInputs["bucketName"] = state ? state.bucketName : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["secretAccessKey"] = state ? state.secretAccessKey : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as BucketAccessKeyArgs | undefined;
            if ((!args || args.bucketName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bucketName'");
            }
            resourceInputs["bucketName"] = args ? args.bucketName : undefined;
            resourceInputs["accessKeyId"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["secretAccessKey"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BucketAccessKey.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BucketAccessKey resources.
 */
export interface BucketAccessKeyState {
    /**
     * The ID of the access key.
     */
    accessKeyId?: pulumi.Input<string>;
    /**
     * The name of the bucket that the new access key will belong to, and grant access to.
     */
    bucketName?: pulumi.Input<string>;
    /**
     * The timestamp when the access key was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The secret access key used to sign requests. This attribute is not available for imported resources. Note that this will be written to the state file.
     */
    secretAccessKey?: pulumi.Input<string>;
    /**
     * The status of the access key.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BucketAccessKey resource.
 */
export interface BucketAccessKeyArgs {
    /**
     * The name of the bucket that the new access key will belong to, and grant access to.
     */
    bucketName: pulumi.Input<string>;
}
