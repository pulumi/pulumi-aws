// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export class InstancePublicPorts extends pulumi.CustomResource {
    /**
     * Get an existing InstancePublicPorts resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstancePublicPortsState, opts?: pulumi.CustomResourceOptions): InstancePublicPorts {
        return new InstancePublicPorts(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:lightsail/instancePublicPorts:InstancePublicPorts';

    /**
     * Returns true if the given object is an instance of InstancePublicPorts.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InstancePublicPorts {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InstancePublicPorts.__pulumiType;
    }

    public readonly instanceName!: pulumi.Output<string>;
    public readonly portInfos!: pulumi.Output<outputs.lightsail.InstancePublicPortsPortInfo[]>;

    /**
     * Create a InstancePublicPorts resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstancePublicPortsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstancePublicPortsArgs | InstancePublicPortsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstancePublicPortsState | undefined;
            resourceInputs["instanceName"] = state ? state.instanceName : undefined;
            resourceInputs["portInfos"] = state ? state.portInfos : undefined;
        } else {
            const args = argsOrState as InstancePublicPortsArgs | undefined;
            if ((!args || args.instanceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceName'");
            }
            if ((!args || args.portInfos === undefined) && !opts.urn) {
                throw new Error("Missing required property 'portInfos'");
            }
            resourceInputs["instanceName"] = args ? args.instanceName : undefined;
            resourceInputs["portInfos"] = args ? args.portInfos : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InstancePublicPorts.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering InstancePublicPorts resources.
 */
export interface InstancePublicPortsState {
    instanceName?: pulumi.Input<string>;
    portInfos?: pulumi.Input<pulumi.Input<inputs.lightsail.InstancePublicPortsPortInfo>[]>;
}

/**
 * The set of arguments for constructing a InstancePublicPorts resource.
 */
export interface InstancePublicPortsArgs {
    instanceName: pulumi.Input<string>;
    portInfos: pulumi.Input<pulumi.Input<inputs.lightsail.InstancePublicPortsPortInfo>[]>;
}
