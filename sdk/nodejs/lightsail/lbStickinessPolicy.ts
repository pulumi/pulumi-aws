// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages session stickiness for a Lightsail Load Balancer.
 *
 * Use this resource to configure session stickiness to ensure that user sessions are consistently routed to the same backend instance. This helps maintain session state for applications that store session data locally on the server.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.lightsail.Lb("example", {
 *     name: "example-load-balancer",
 *     healthCheckPath: "/",
 *     instancePort: 80,
 *     tags: {
 *         foo: "bar",
 *     },
 * });
 * const exampleLbStickinessPolicy = new aws.lightsail.LbStickinessPolicy("example", {
 *     lbName: example.name,
 *     cookieDuration: 900,
 *     enabled: true,
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import `aws_lightsail_lb_stickiness_policy` using the `lb_name` attribute. For example:
 *
 * ```sh
 * $ pulumi import aws:lightsail/lbStickinessPolicy:LbStickinessPolicy example example-load-balancer
 * ```
 */
export class LbStickinessPolicy extends pulumi.CustomResource {
    /**
     * Get an existing LbStickinessPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LbStickinessPolicyState, opts?: pulumi.CustomResourceOptions): LbStickinessPolicy {
        return new LbStickinessPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:lightsail/lbStickinessPolicy:LbStickinessPolicy';

    /**
     * Returns true if the given object is an instance of LbStickinessPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LbStickinessPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LbStickinessPolicy.__pulumiType;
    }

    /**
     * Cookie duration in seconds. This determines the length of the session stickiness.
     */
    public readonly cookieDuration!: pulumi.Output<number>;
    /**
     * Whether to enable session stickiness for the load balancer.
     */
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * Name of the load balancer to which you want to enable session stickiness.
     *
     * The following arguments are optional:
     */
    public readonly lbName!: pulumi.Output<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    public readonly region!: pulumi.Output<string>;

    /**
     * Create a LbStickinessPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LbStickinessPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LbStickinessPolicyArgs | LbStickinessPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LbStickinessPolicyState | undefined;
            resourceInputs["cookieDuration"] = state ? state.cookieDuration : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["lbName"] = state ? state.lbName : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
        } else {
            const args = argsOrState as LbStickinessPolicyArgs | undefined;
            if ((!args || args.cookieDuration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cookieDuration'");
            }
            if ((!args || args.enabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if ((!args || args.lbName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'lbName'");
            }
            resourceInputs["cookieDuration"] = args ? args.cookieDuration : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["lbName"] = args ? args.lbName : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LbStickinessPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LbStickinessPolicy resources.
 */
export interface LbStickinessPolicyState {
    /**
     * Cookie duration in seconds. This determines the length of the session stickiness.
     */
    cookieDuration?: pulumi.Input<number>;
    /**
     * Whether to enable session stickiness for the load balancer.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Name of the load balancer to which you want to enable session stickiness.
     *
     * The following arguments are optional:
     */
    lbName?: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LbStickinessPolicy resource.
 */
export interface LbStickinessPolicyArgs {
    /**
     * Cookie duration in seconds. This determines the length of the session stickiness.
     */
    cookieDuration: pulumi.Input<number>;
    /**
     * Whether to enable session stickiness for the load balancer.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Name of the load balancer to which you want to enable session stickiness.
     *
     * The following arguments are optional:
     */
    lbName: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
}
