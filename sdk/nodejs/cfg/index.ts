// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./aggregateAuthorization";
export * from "./configurationAggregator";
export * from "./deliveryChannel";
export * from "./organizationCustomRule";
export * from "./organizationManagedRule";
export * from "./recorder";
export * from "./recorderStatus";
export * from "./remediationConfiguration";
export * from "./rule";

// Import resources to register:
import { AggregateAuthorization } from "./aggregateAuthorization";
import { ConfigurationAggregator } from "./configurationAggregator";
import { DeliveryChannel } from "./deliveryChannel";
import { OrganizationCustomRule } from "./organizationCustomRule";
import { OrganizationManagedRule } from "./organizationManagedRule";
import { Recorder } from "./recorder";
import { RecorderStatus } from "./recorderStatus";
import { RemediationConfiguration } from "./remediationConfiguration";
import { Rule } from "./rule";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws:cfg/aggregateAuthorization:AggregateAuthorization":
                return new AggregateAuthorization(name, <any>undefined, { urn })
            case "aws:cfg/configurationAggregator:ConfigurationAggregator":
                return new ConfigurationAggregator(name, <any>undefined, { urn })
            case "aws:cfg/deliveryChannel:DeliveryChannel":
                return new DeliveryChannel(name, <any>undefined, { urn })
            case "aws:cfg/organizationCustomRule:OrganizationCustomRule":
                return new OrganizationCustomRule(name, <any>undefined, { urn })
            case "aws:cfg/organizationManagedRule:OrganizationManagedRule":
                return new OrganizationManagedRule(name, <any>undefined, { urn })
            case "aws:cfg/recorder:Recorder":
                return new Recorder(name, <any>undefined, { urn })
            case "aws:cfg/recorderStatus:RecorderStatus":
                return new RecorderStatus(name, <any>undefined, { urn })
            case "aws:cfg/remediationConfiguration:RemediationConfiguration":
                return new RemediationConfiguration(name, <any>undefined, { urn })
            case "aws:cfg/rule:Rule":
                return new Rule(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "cfg/aggregateAuthorization", _module)
pulumi.runtime.registerResourceModule("aws", "cfg/configurationAggregator", _module)
pulumi.runtime.registerResourceModule("aws", "cfg/deliveryChannel", _module)
pulumi.runtime.registerResourceModule("aws", "cfg/organizationCustomRule", _module)
pulumi.runtime.registerResourceModule("aws", "cfg/organizationManagedRule", _module)
pulumi.runtime.registerResourceModule("aws", "cfg/recorder", _module)
pulumi.runtime.registerResourceModule("aws", "cfg/recorderStatus", _module)
pulumi.runtime.registerResourceModule("aws", "cfg/remediationConfiguration", _module)
pulumi.runtime.registerResourceModule("aws", "cfg/rule", _module)
