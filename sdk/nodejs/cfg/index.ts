// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AggregateAuthorizationArgs, AggregateAuthorizationState } from "./aggregateAuthorization";
export type AggregateAuthorization = import("./aggregateAuthorization").AggregateAuthorization;
export const AggregateAuthorization: typeof import("./aggregateAuthorization").AggregateAuthorization = null as any;

export { ConfigurationAggregatorArgs, ConfigurationAggregatorState } from "./configurationAggregator";
export type ConfigurationAggregator = import("./configurationAggregator").ConfigurationAggregator;
export const ConfigurationAggregator: typeof import("./configurationAggregator").ConfigurationAggregator = null as any;

export { ConformancePackArgs, ConformancePackState } from "./conformancePack";
export type ConformancePack = import("./conformancePack").ConformancePack;
export const ConformancePack: typeof import("./conformancePack").ConformancePack = null as any;

export { DeliveryChannelArgs, DeliveryChannelState } from "./deliveryChannel";
export type DeliveryChannel = import("./deliveryChannel").DeliveryChannel;
export const DeliveryChannel: typeof import("./deliveryChannel").DeliveryChannel = null as any;

export { OrganizationConformancePackArgs, OrganizationConformancePackState } from "./organizationConformancePack";
export type OrganizationConformancePack = import("./organizationConformancePack").OrganizationConformancePack;
export const OrganizationConformancePack: typeof import("./organizationConformancePack").OrganizationConformancePack = null as any;

export { OrganizationCustomRuleArgs, OrganizationCustomRuleState } from "./organizationCustomRule";
export type OrganizationCustomRule = import("./organizationCustomRule").OrganizationCustomRule;
export const OrganizationCustomRule: typeof import("./organizationCustomRule").OrganizationCustomRule = null as any;

export { OrganizationManagedRuleArgs, OrganizationManagedRuleState } from "./organizationManagedRule";
export type OrganizationManagedRule = import("./organizationManagedRule").OrganizationManagedRule;
export const OrganizationManagedRule: typeof import("./organizationManagedRule").OrganizationManagedRule = null as any;

export { RecorderArgs, RecorderState } from "./recorder";
export type Recorder = import("./recorder").Recorder;
export const Recorder: typeof import("./recorder").Recorder = null as any;

export { RecorderStatusArgs, RecorderStatusState } from "./recorderStatus";
export type RecorderStatus = import("./recorderStatus").RecorderStatus;
export const RecorderStatus: typeof import("./recorderStatus").RecorderStatus = null as any;

export { RemediationConfigurationArgs, RemediationConfigurationState } from "./remediationConfiguration";
export type RemediationConfiguration = import("./remediationConfiguration").RemediationConfiguration;
export const RemediationConfiguration: typeof import("./remediationConfiguration").RemediationConfiguration = null as any;

export { RuleArgs, RuleState } from "./rule";
export type Rule = import("./rule").Rule;
export const Rule: typeof import("./rule").Rule = null as any;

utilities.lazyLoad(exports, ["AggregateAuthorization"], () => require("./aggregateAuthorization"));
utilities.lazyLoad(exports, ["ConfigurationAggregator"], () => require("./configurationAggregator"));
utilities.lazyLoad(exports, ["ConformancePack"], () => require("./conformancePack"));
utilities.lazyLoad(exports, ["DeliveryChannel"], () => require("./deliveryChannel"));
utilities.lazyLoad(exports, ["OrganizationConformancePack"], () => require("./organizationConformancePack"));
utilities.lazyLoad(exports, ["OrganizationCustomRule"], () => require("./organizationCustomRule"));
utilities.lazyLoad(exports, ["OrganizationManagedRule"], () => require("./organizationManagedRule"));
utilities.lazyLoad(exports, ["Recorder"], () => require("./recorder"));
utilities.lazyLoad(exports, ["RecorderStatus"], () => require("./recorderStatus"));
utilities.lazyLoad(exports, ["RemediationConfiguration"], () => require("./remediationConfiguration"));
utilities.lazyLoad(exports, ["Rule"], () => require("./rule"));

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws:cfg/aggregateAuthorization:AggregateAuthorization":
                return new AggregateAuthorization(name, <any>undefined, { urn })
            case "aws:cfg/configurationAggregator:ConfigurationAggregator":
                return new ConfigurationAggregator(name, <any>undefined, { urn })
            case "aws:cfg/conformancePack:ConformancePack":
                return new ConformancePack(name, <any>undefined, { urn })
            case "aws:cfg/deliveryChannel:DeliveryChannel":
                return new DeliveryChannel(name, <any>undefined, { urn })
            case "aws:cfg/organizationConformancePack:OrganizationConformancePack":
                return new OrganizationConformancePack(name, <any>undefined, { urn })
            case "aws:cfg/organizationCustomRule:OrganizationCustomRule":
                return new OrganizationCustomRule(name, <any>undefined, { urn })
            case "aws:cfg/organizationManagedRule:OrganizationManagedRule":
                return new OrganizationManagedRule(name, <any>undefined, { urn })
            case "aws:cfg/recorder:Recorder":
                return new Recorder(name, <any>undefined, { urn })
            case "aws:cfg/recorderStatus:RecorderStatus":
                return new RecorderStatus(name, <any>undefined, { urn })
            case "aws:cfg/remediationConfiguration:RemediationConfiguration":
                return new RemediationConfiguration(name, <any>undefined, { urn })
            case "aws:cfg/rule:Rule":
                return new Rule(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "cfg/aggregateAuthorization", _module)
pulumi.runtime.registerResourceModule("aws", "cfg/configurationAggregator", _module)
pulumi.runtime.registerResourceModule("aws", "cfg/conformancePack", _module)
pulumi.runtime.registerResourceModule("aws", "cfg/deliveryChannel", _module)
pulumi.runtime.registerResourceModule("aws", "cfg/organizationConformancePack", _module)
pulumi.runtime.registerResourceModule("aws", "cfg/organizationCustomRule", _module)
pulumi.runtime.registerResourceModule("aws", "cfg/organizationManagedRule", _module)
pulumi.runtime.registerResourceModule("aws", "cfg/recorder", _module)
pulumi.runtime.registerResourceModule("aws", "cfg/recorderStatus", _module)
pulumi.runtime.registerResourceModule("aws", "cfg/remediationConfiguration", _module)
pulumi.runtime.registerResourceModule("aws", "cfg/rule", _module)
