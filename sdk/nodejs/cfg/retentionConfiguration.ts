// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage the AWS Config retention configuration.
 * The retention configuration defines the number of days that AWS Config stores historical information.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.cfg.RetentionConfiguration("example", {retentionPeriodInDays: 90});
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * Using `pulumi import`, import the AWS Config retention configuration using the `name`. For example:
 *
 * ```sh
 * $ pulumi import aws:cfg/retentionConfiguration:RetentionConfiguration example default
 * ```
 */
export class RetentionConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing RetentionConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RetentionConfigurationState, opts?: pulumi.CustomResourceOptions): RetentionConfiguration {
        return new RetentionConfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:cfg/retentionConfiguration:RetentionConfiguration';

    /**
     * Returns true if the given object is an instance of RetentionConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RetentionConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RetentionConfiguration.__pulumiType;
    }

    /**
     * The name of the retention configuration object. The object is always named **default**.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The number of days AWS Config stores historical information.
     */
    public readonly retentionPeriodInDays!: pulumi.Output<number>;

    /**
     * Create a RetentionConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RetentionConfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RetentionConfigurationArgs | RetentionConfigurationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RetentionConfigurationState | undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["retentionPeriodInDays"] = state ? state.retentionPeriodInDays : undefined;
        } else {
            const args = argsOrState as RetentionConfigurationArgs | undefined;
            if ((!args || args.retentionPeriodInDays === undefined) && !opts.urn) {
                throw new Error("Missing required property 'retentionPeriodInDays'");
            }
            resourceInputs["retentionPeriodInDays"] = args ? args.retentionPeriodInDays : undefined;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RetentionConfiguration.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RetentionConfiguration resources.
 */
export interface RetentionConfigurationState {
    /**
     * The name of the retention configuration object. The object is always named **default**.
     */
    name?: pulumi.Input<string>;
    /**
     * The number of days AWS Config stores historical information.
     */
    retentionPeriodInDays?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a RetentionConfiguration resource.
 */
export interface RetentionConfigurationArgs {
    /**
     * The number of days AWS Config stores historical information.
     */
    retentionPeriodInDays: pulumi.Input<number>;
}
