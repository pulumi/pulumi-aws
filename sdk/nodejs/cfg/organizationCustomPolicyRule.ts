// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Config Organization Custom Policy Rule. More information about these rules can be found in the [Enabling AWS Config Rules Across all Accounts in Your Organization](https://docs.aws.amazon.com/config/latest/developerguide/config-rule-multi-account-deployment.html) and [AWS Config Managed Rules](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html) documentation. For working with Organization Managed Rules (those invoking an AWS managed rule), see the `aws_config_organization_managed__rule` resource.
 *
 * > **NOTE:** This resource must be created in the Organization master account and rules will include the master account unless its ID is added to the `excludedAccounts` argument.
 *
 * ## Example Usage
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.cfg.OrganizationCustomPolicyRule("example", {
 *     policyRuntime: "guard-2.x.x",
 *     policyText: `  let status = ['ACTIVE']
 *
 *   rule tableisactive when
 *       resourceType == "AWS::DynamoDB::Table" {
 *       configuration.tableStatus == %status
 *   }
 *
 *   rule checkcompliance when
 *       resourceType == "AWS::DynamoDB::Table"
 *       tableisactive {
 *           let pitr = supplementaryConfiguration.ContinuousBackupsDescription.pointInTimeRecoveryDescription.pointInTimeRecoveryStatus
 *           %pitr == "ENABLED"
 *       }
 *
 * `,
 *     resourceTypesScopes: ["AWS::DynamoDB::Table"],
 * });
 * ```
 *
 * ## Import
 *
 * A Config Organization Custom Policy Rule can be imported using the `name` argument, e.g.,
 *
 * ```sh
 *  $ pulumi import aws:cfg/organizationCustomPolicyRule:OrganizationCustomPolicyRule example example_rule_name
 * ```
 */
export class OrganizationCustomPolicyRule extends pulumi.CustomResource {
    /**
     * Get an existing OrganizationCustomPolicyRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OrganizationCustomPolicyRuleState, opts?: pulumi.CustomResourceOptions): OrganizationCustomPolicyRule {
        return new OrganizationCustomPolicyRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:cfg/organizationCustomPolicyRule:OrganizationCustomPolicyRule';

    /**
     * Returns true if the given object is an instance of OrganizationCustomPolicyRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OrganizationCustomPolicyRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OrganizationCustomPolicyRule.__pulumiType;
    }

    /**
     * Amazon Resource Name (ARN) of the rule
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * List of AWS account identifiers to exclude from the rule
     */
    public readonly debugLogDeliveryAccounts!: pulumi.Output<string[] | undefined>;
    /**
     * Description of the rule
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * List of AWS account identifiers to exclude from the rule
     */
    public readonly excludedAccounts!: pulumi.Output<string[] | undefined>;
    /**
     * A string in JSON format that is passed to the AWS Config Rule Lambda Function
     */
    public readonly inputParameters!: pulumi.Output<string | undefined>;
    /**
     * Maximum frequency with which AWS Config runs evaluations for a rule, if the rule is triggered at a periodic frequency. Defaults to `TwentyFour_Hours` for periodic frequency triggered rules. Valid values: `One_Hour`, `Three_Hours`, `Six_Hours`, `Twelve_Hours`, or `TwentyFour_Hours`.
     */
    public readonly maximumExecutionFrequency!: pulumi.Output<string | undefined>;
    /**
     * name of the rule
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * runtime system for your organization AWS Config Custom Policy rules
     */
    public readonly policyRuntime!: pulumi.Output<string>;
    /**
     * policy definition containing the logic for your organization AWS Config Custom Policy rule
     */
    public readonly policyText!: pulumi.Output<string>;
    /**
     * Identifier of the AWS resource to evaluate
     */
    public readonly resourceIdScope!: pulumi.Output<string | undefined>;
    /**
     * List of types of AWS resources to evaluate
     */
    public readonly resourceTypesScopes!: pulumi.Output<string[] | undefined>;
    /**
     * Tag key of AWS resources to evaluate
     */
    public readonly tagKeyScope!: pulumi.Output<string | undefined>;
    /**
     * Tag value of AWS resources to evaluate
     */
    public readonly tagValueScope!: pulumi.Output<string | undefined>;
    /**
     * List of notification types that trigger AWS Config to run an evaluation for the rule. Valid values: `ConfigurationItemChangeNotification`, `OversizedConfigurationItemChangeNotification`
     *
     * The following arguments are optional:
     */
    public readonly triggerTypes!: pulumi.Output<string[]>;

    /**
     * Create a OrganizationCustomPolicyRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OrganizationCustomPolicyRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OrganizationCustomPolicyRuleArgs | OrganizationCustomPolicyRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OrganizationCustomPolicyRuleState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["debugLogDeliveryAccounts"] = state ? state.debugLogDeliveryAccounts : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["excludedAccounts"] = state ? state.excludedAccounts : undefined;
            resourceInputs["inputParameters"] = state ? state.inputParameters : undefined;
            resourceInputs["maximumExecutionFrequency"] = state ? state.maximumExecutionFrequency : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["policyRuntime"] = state ? state.policyRuntime : undefined;
            resourceInputs["policyText"] = state ? state.policyText : undefined;
            resourceInputs["resourceIdScope"] = state ? state.resourceIdScope : undefined;
            resourceInputs["resourceTypesScopes"] = state ? state.resourceTypesScopes : undefined;
            resourceInputs["tagKeyScope"] = state ? state.tagKeyScope : undefined;
            resourceInputs["tagValueScope"] = state ? state.tagValueScope : undefined;
            resourceInputs["triggerTypes"] = state ? state.triggerTypes : undefined;
        } else {
            const args = argsOrState as OrganizationCustomPolicyRuleArgs | undefined;
            if ((!args || args.policyRuntime === undefined) && !opts.urn) {
                throw new Error("Missing required property 'policyRuntime'");
            }
            if ((!args || args.policyText === undefined) && !opts.urn) {
                throw new Error("Missing required property 'policyText'");
            }
            if ((!args || args.triggerTypes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'triggerTypes'");
            }
            resourceInputs["debugLogDeliveryAccounts"] = args ? args.debugLogDeliveryAccounts : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["excludedAccounts"] = args ? args.excludedAccounts : undefined;
            resourceInputs["inputParameters"] = args ? args.inputParameters : undefined;
            resourceInputs["maximumExecutionFrequency"] = args ? args.maximumExecutionFrequency : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["policyRuntime"] = args ? args.policyRuntime : undefined;
            resourceInputs["policyText"] = args ? args.policyText : undefined;
            resourceInputs["resourceIdScope"] = args ? args.resourceIdScope : undefined;
            resourceInputs["resourceTypesScopes"] = args ? args.resourceTypesScopes : undefined;
            resourceInputs["tagKeyScope"] = args ? args.tagKeyScope : undefined;
            resourceInputs["tagValueScope"] = args ? args.tagValueScope : undefined;
            resourceInputs["triggerTypes"] = args ? args.triggerTypes : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OrganizationCustomPolicyRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OrganizationCustomPolicyRule resources.
 */
export interface OrganizationCustomPolicyRuleState {
    /**
     * Amazon Resource Name (ARN) of the rule
     */
    arn?: pulumi.Input<string>;
    /**
     * List of AWS account identifiers to exclude from the rule
     */
    debugLogDeliveryAccounts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Description of the rule
     */
    description?: pulumi.Input<string>;
    /**
     * List of AWS account identifiers to exclude from the rule
     */
    excludedAccounts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A string in JSON format that is passed to the AWS Config Rule Lambda Function
     */
    inputParameters?: pulumi.Input<string>;
    /**
     * Maximum frequency with which AWS Config runs evaluations for a rule, if the rule is triggered at a periodic frequency. Defaults to `TwentyFour_Hours` for periodic frequency triggered rules. Valid values: `One_Hour`, `Three_Hours`, `Six_Hours`, `Twelve_Hours`, or `TwentyFour_Hours`.
     */
    maximumExecutionFrequency?: pulumi.Input<string>;
    /**
     * name of the rule
     */
    name?: pulumi.Input<string>;
    /**
     * runtime system for your organization AWS Config Custom Policy rules
     */
    policyRuntime?: pulumi.Input<string>;
    /**
     * policy definition containing the logic for your organization AWS Config Custom Policy rule
     */
    policyText?: pulumi.Input<string>;
    /**
     * Identifier of the AWS resource to evaluate
     */
    resourceIdScope?: pulumi.Input<string>;
    /**
     * List of types of AWS resources to evaluate
     */
    resourceTypesScopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tag key of AWS resources to evaluate
     */
    tagKeyScope?: pulumi.Input<string>;
    /**
     * Tag value of AWS resources to evaluate
     */
    tagValueScope?: pulumi.Input<string>;
    /**
     * List of notification types that trigger AWS Config to run an evaluation for the rule. Valid values: `ConfigurationItemChangeNotification`, `OversizedConfigurationItemChangeNotification`
     *
     * The following arguments are optional:
     */
    triggerTypes?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a OrganizationCustomPolicyRule resource.
 */
export interface OrganizationCustomPolicyRuleArgs {
    /**
     * List of AWS account identifiers to exclude from the rule
     */
    debugLogDeliveryAccounts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Description of the rule
     */
    description?: pulumi.Input<string>;
    /**
     * List of AWS account identifiers to exclude from the rule
     */
    excludedAccounts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A string in JSON format that is passed to the AWS Config Rule Lambda Function
     */
    inputParameters?: pulumi.Input<string>;
    /**
     * Maximum frequency with which AWS Config runs evaluations for a rule, if the rule is triggered at a periodic frequency. Defaults to `TwentyFour_Hours` for periodic frequency triggered rules. Valid values: `One_Hour`, `Three_Hours`, `Six_Hours`, `Twelve_Hours`, or `TwentyFour_Hours`.
     */
    maximumExecutionFrequency?: pulumi.Input<string>;
    /**
     * name of the rule
     */
    name?: pulumi.Input<string>;
    /**
     * runtime system for your organization AWS Config Custom Policy rules
     */
    policyRuntime: pulumi.Input<string>;
    /**
     * policy definition containing the logic for your organization AWS Config Custom Policy rule
     */
    policyText: pulumi.Input<string>;
    /**
     * Identifier of the AWS resource to evaluate
     */
    resourceIdScope?: pulumi.Input<string>;
    /**
     * List of types of AWS resources to evaluate
     */
    resourceTypesScopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tag key of AWS resources to evaluate
     */
    tagKeyScope?: pulumi.Input<string>;
    /**
     * Tag value of AWS resources to evaluate
     */
    tagValueScope?: pulumi.Input<string>;
    /**
     * List of notification types that trigger AWS Config to run an evaluation for the rule. Valid values: `ConfigurationItemChangeNotification`, `OversizedConfigurationItemChangeNotification`
     *
     * The following arguments are optional:
     */
    triggerTypes: pulumi.Input<pulumi.Input<string>[]>;
}
