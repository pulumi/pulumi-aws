// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class OrganizationManagedRule extends pulumi.CustomResource {
    /**
     * Get an existing OrganizationManagedRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OrganizationManagedRuleState, opts?: pulumi.CustomResourceOptions): OrganizationManagedRule {
        return new OrganizationManagedRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:cfg/organizationManagedRule:OrganizationManagedRule';

    /**
     * Returns true if the given object is an instance of OrganizationManagedRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OrganizationManagedRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OrganizationManagedRule.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly excludedAccounts!: pulumi.Output<string[] | undefined>;
    public readonly inputParameters!: pulumi.Output<string | undefined>;
    public readonly maximumExecutionFrequency!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly resourceIdScope!: pulumi.Output<string | undefined>;
    public readonly resourceTypesScopes!: pulumi.Output<string[] | undefined>;
    public readonly ruleIdentifier!: pulumi.Output<string>;
    public readonly tagKeyScope!: pulumi.Output<string | undefined>;
    public readonly tagValueScope!: pulumi.Output<string | undefined>;

    /**
     * Create a OrganizationManagedRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OrganizationManagedRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OrganizationManagedRuleArgs | OrganizationManagedRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OrganizationManagedRuleState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["excludedAccounts"] = state ? state.excludedAccounts : undefined;
            resourceInputs["inputParameters"] = state ? state.inputParameters : undefined;
            resourceInputs["maximumExecutionFrequency"] = state ? state.maximumExecutionFrequency : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resourceIdScope"] = state ? state.resourceIdScope : undefined;
            resourceInputs["resourceTypesScopes"] = state ? state.resourceTypesScopes : undefined;
            resourceInputs["ruleIdentifier"] = state ? state.ruleIdentifier : undefined;
            resourceInputs["tagKeyScope"] = state ? state.tagKeyScope : undefined;
            resourceInputs["tagValueScope"] = state ? state.tagValueScope : undefined;
        } else {
            const args = argsOrState as OrganizationManagedRuleArgs | undefined;
            if ((!args || args.ruleIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ruleIdentifier'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["excludedAccounts"] = args ? args.excludedAccounts : undefined;
            resourceInputs["inputParameters"] = args ? args.inputParameters : undefined;
            resourceInputs["maximumExecutionFrequency"] = args ? args.maximumExecutionFrequency : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceIdScope"] = args ? args.resourceIdScope : undefined;
            resourceInputs["resourceTypesScopes"] = args ? args.resourceTypesScopes : undefined;
            resourceInputs["ruleIdentifier"] = args ? args.ruleIdentifier : undefined;
            resourceInputs["tagKeyScope"] = args ? args.tagKeyScope : undefined;
            resourceInputs["tagValueScope"] = args ? args.tagValueScope : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OrganizationManagedRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OrganizationManagedRule resources.
 */
export interface OrganizationManagedRuleState {
    arn?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    excludedAccounts?: pulumi.Input<pulumi.Input<string>[]>;
    inputParameters?: pulumi.Input<string>;
    maximumExecutionFrequency?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    resourceIdScope?: pulumi.Input<string>;
    resourceTypesScopes?: pulumi.Input<pulumi.Input<string>[]>;
    ruleIdentifier?: pulumi.Input<string>;
    tagKeyScope?: pulumi.Input<string>;
    tagValueScope?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OrganizationManagedRule resource.
 */
export interface OrganizationManagedRuleArgs {
    description?: pulumi.Input<string>;
    excludedAccounts?: pulumi.Input<pulumi.Input<string>[]>;
    inputParameters?: pulumi.Input<string>;
    maximumExecutionFrequency?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    resourceIdScope?: pulumi.Input<string>;
    resourceTypesScopes?: pulumi.Input<pulumi.Input<string>[]>;
    ruleIdentifier: pulumi.Input<string>;
    tagKeyScope?: pulumi.Input<string>;
    tagValueScope?: pulumi.Input<string>;
}
