// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./input";
import * as outputs from "./output";

export interface ExperimentTemplateAction {
    /**
     * ID of the action. To find out what actions are supported see [AWS FIS actions reference](https://docs.aws.amazon.com/fis/latest/userguide/fis-actions-reference.html).
     */
    actionId: pulumi.Input<string>;
    /**
     * Description of the action.
     */
    description?: pulumi.Input<string>;
    /**
     * Friendly name of the action.
     */
    name: pulumi.Input<string>;
    /**
     * Parameter(s) for the action, if applicable. See below.
     */
    parameters?: pulumi.Input<pulumi.Input<inputs.ExperimentTemplateActionParameter>[]>;
    /**
     * Set of action names that must complete before this action can be executed.
     */
    startAfters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Action's target, if applicable. See below.
     */
    target?: pulumi.Input<inputs.ExperimentTemplateActionTarget>;
}
export interface ExperimentTemplateActionParameter {
    /**
     * Parameter name.
     */
    key: pulumi.Input<string>;
    /**
     * Parameter value.
     *
     * For a list of parameters supported by each action, see [AWS FIS actions reference](https://docs.aws.amazon.com/fis/latest/userguide/fis-actions-reference.html).
     */
    value: pulumi.Input<string>;
}
export interface ExperimentTemplateActionTarget {
    /**
     * Target type. Valid values are `AutoScalingGroups` (EC2 Auto Scaling groups), `Buckets` (S3 Buckets), `Cluster` (EKS Cluster), `Clusters` (ECS Clusters), `DBInstances` (RDS DB Instances), `Instances` (EC2 Instances), `Nodegroups` (EKS Node groups), `Pods` (EKS Pods), `ReplicationGroups`(ElastiCache Redis Replication Groups), `Roles` (IAM Roles), `SpotInstances` (EC2 Spot Instances), `Subnets` (VPC Subnets), `Tables` (DynamoDB encrypted global tables), `Tasks` (ECS Tasks), `TransitGateways` (Transit gateways), `Volumes` (EBS Volumes). See the [documentation](https://docs.aws.amazon.com/fis/latest/userguide/actions.html#action-targets) for more details.
     */
    key: pulumi.Input<string>;
    /**
     * Target name, referencing a corresponding target.
     */
    value: pulumi.Input<string>;
}
export interface ExperimentTemplateLogConfiguration {
    /**
     * The configuration for experiment logging to Amazon CloudWatch Logs. See below.
     */
    cloudwatchLogsConfiguration?: pulumi.Input<inputs.ExperimentTemplateLogConfigurationCloudwatchLogsConfiguration>;
    /**
     * The schema version. See [documentation](https://docs.aws.amazon.com/fis/latest/userguide/monitoring-logging.html#experiment-log-schema) for the list of schema versions.
     */
    logSchemaVersion: pulumi.Input<number>;
    /**
     * The configuration for experiment logging to Amazon S3. See below.
     */
    s3Configuration?: pulumi.Input<inputs.ExperimentTemplateLogConfigurationS3Configuration>;
}
export interface ExperimentTemplateLogConfigurationCloudwatchLogsConfiguration {
    /**
     * The Amazon Resource Name (ARN) of the destination Amazon CloudWatch Logs log group.
     */
    logGroupArn: pulumi.Input<string>;
}
export interface ExperimentTemplateLogConfigurationS3Configuration {
    /**
     * The name of the destination bucket.
     */
    bucketName: pulumi.Input<string>;
    /**
     * The bucket prefix.
     */
    prefix?: pulumi.Input<string>;
}
export interface ExperimentTemplateStopCondition {
    /**
     * Source of the condition. One of `none`, `aws:cloudwatch:alarm`.
     */
    source: pulumi.Input<string>;
    /**
     * ARN of the CloudWatch alarm. Required if the source is a CloudWatch alarm.
     */
    value?: pulumi.Input<string>;
}
export interface ExperimentTemplateTarget {
    /**
     * Filter(s) for the target. Filters can be used to select resources based on specific attributes returned by the respective describe action of the resource type. For more information, see [Targets for AWS FIS](https://docs.aws.amazon.com/fis/latest/userguide/targets.html#target-filters). See below.
     */
    filters?: pulumi.Input<pulumi.Input<inputs.ExperimentTemplateTargetFilter>[]>;
    /**
     * Friendly name given to the target.
     */
    name: pulumi.Input<string>;
    /**
     * The resource type parameters.
     *
     * > **NOTE:** The `target` configuration block requires either `resourceArns` or `resourceTag`.
     */
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Set of ARNs of the resources to target with an action. Conflicts with `resourceTag`.
     */
    resourceArns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tag(s) the resources need to have to be considered a valid target for an action. Conflicts with `resourceArns`. See below.
     */
    resourceTags?: pulumi.Input<pulumi.Input<inputs.ExperimentTemplateTargetResourceTag>[]>;
    /**
     * AWS resource type. The resource type must be supported for the specified action. To find out what resource types are supported, see [Targets for AWS FIS](https://docs.aws.amazon.com/fis/latest/userguide/targets.html#resource-types).
     */
    resourceType: pulumi.Input<string>;
    /**
     * Scopes the identified resources. Valid values are `ALL` (all identified resources), `COUNT(n)` (randomly select `n` of the identified resources), `PERCENT(n)` (randomly select `n` percent of the identified resources).
     */
    selectionMode: pulumi.Input<string>;
}
export interface ExperimentTemplateTargetFilter {
    /**
     * Attribute path for the filter.
     */
    path: pulumi.Input<string>;
    /**
     * Set of attribute values for the filter.
     *
     * > **NOTE:** Values specified in a `filter` are joined with an `OR` clause, while values across multiple `filter` blocks are joined with an `AND` clause. For more information, see [Targets for AWS FIS](https://docs.aws.amazon.com/fis/latest/userguide/targets.html#target-filters).
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}
export interface ExperimentTemplateTargetResourceTag {
    /**
     * Tag key.
     */
    key: pulumi.Input<string>;
    /**
     * Tag value.
     */
    value: pulumi.Input<string>;
}
