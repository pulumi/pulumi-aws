// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./input";
import * as outputs from "./output";

export interface GroupExternalId {
    /**
     * The identifier issued to this resource by an external identity provider.
     */
    id: string;
    /**
     * The issuer for an external identifier.
     */
    issuer: string;
}
export interface UserAddresses {
    /**
     * The country that this address is in.
     */
    country?: string;
    /**
     * The name that is typically displayed when the address is shown for display.
     */
    formatted?: string;
    /**
     * The address locality.
     */
    locality?: string;
    /**
     * The postal code of the address.
     */
    postalCode?: string;
    /**
     * When `true`, this is the primary address associated with the user.
     */
    primary?: boolean;
    /**
     * The region of the address.
     */
    region?: string;
    /**
     * The street of the address.
     */
    streetAddress?: string;
    /**
     * The type of address.
     */
    type?: string;
}
export interface UserEmails {
    /**
     * When `true`, this is the primary email associated with the user.
     */
    primary?: boolean;
    /**
     * The type of email.
     */
    type?: string;
    /**
     * The email address. This value must be unique across the identity store.
     */
    value?: string;
}
export interface UserExternalId {
    /**
     * The identifier issued to this resource by an external identity provider.
     */
    id: string;
    /**
     * The issuer for an external identifier.
     */
    issuer: string;
}
export interface UserName {
    /**
     * The family name of the user.
     */
    familyName: string;
    /**
     * The name that is typically displayed when the name is shown for display.
     */
    formatted?: string;
    /**
     * The given name of the user.
     *
     * The following arguments are optional:
     */
    givenName: string;
    /**
     * The honorific prefix of the user.
     */
    honorificPrefix?: string;
    /**
     * The honorific suffix of the user.
     */
    honorificSuffix?: string;
    /**
     * The middle name of the user.
     */
    middleName?: string;
}
export interface UserPhoneNumbers {
    /**
     * When `true`, this is the primary phone number associated with the user.
     */
    primary?: boolean;
    /**
     * The type of phone number.
     */
    type?: string;
    /**
     * The user's phone number.
     */
    value?: string;
}
export interface GetGroupExternalId {
    /**
     * The identifier issued to this resource by an external identity provider.
     */
    id: string;
    /**
     * The issuer for an external identifier.
     */
    issuer: string;
}
export interface GetGroupsGroup {
    /**
     * Description of the specified group.
     */
    description: string;
    /**
     * Group's display name.
     */
    displayName: string;
    /**
     * List of identifiers issued to this resource by an external identity provider.
     */
    externalIds: any[];
    /**
     * Identifier of the group in the Identity Store.
     */
    groupId: string;
    /**
     * Identity Store ID associated with the Single Sign-On (SSO) Instance.
     */
    identityStoreId: string;
}
export interface GetUserAddress {
    /**
     * The country that this address is in.
     */
    country: string;
    /**
     * The name that is typically displayed when the name is shown for display.
     */
    formatted: string;
    /**
     * The address locality.
     */
    locality: string;
    /**
     * The postal code of the address.
     */
    postalCode: string;
    /**
     * When `true`, this is the primary phone number associated with the user.
     */
    primary: boolean;
    /**
     * The region of the address.
     */
    region: string;
    /**
     * The street of the address.
     */
    streetAddress: string;
    /**
     * The type of phone number.
     */
    type: string;
}
export interface GetUserEmail {
    /**
     * When `true`, this is the primary phone number associated with the user.
     */
    primary: boolean;
    /**
     * The type of phone number.
     */
    type: string;
    /**
     * The user's phone number.
     */
    value: string;
}
export interface GetUserExternalId {
    /**
     * The identifier issued to this resource by an external identity provider.
     */
    id: string;
    /**
     * The issuer for an external identifier.
     */
    issuer: string;
}
export interface GetUserName {
    /**
     * The family name of the user.
     */
    familyName: string;
    /**
     * The name that is typically displayed when the name is shown for display.
     */
    formatted: string;
    /**
     * The given name of the user.
     */
    givenName: string;
    /**
     * The honorific prefix of the user.
     */
    honorificPrefix: string;
    /**
     * The honorific suffix of the user.
     */
    honorificSuffix: string;
    /**
     * The middle name of the user.
     */
    middleName: string;
}
export interface GetUserPhoneNumber {
    /**
     * When `true`, this is the primary phone number associated with the user.
     */
    primary: boolean;
    /**
     * The type of phone number.
     */
    type: string;
    /**
     * The user's phone number.
     */
    value: string;
}
