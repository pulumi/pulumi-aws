// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage an S3 Object Lambda Access Point resource policy.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleBucketV2 = new aws.s3.BucketV2("exampleBucketV2", {});
 * const exampleAccessPoint = new aws.s3.AccessPoint("exampleAccessPoint", {bucket: exampleBucketV2.id});
 * const exampleObjectLambdaAccessPoint = new aws.s3control.ObjectLambdaAccessPoint("exampleObjectLambdaAccessPoint", {configuration: {
 *     supportingAccessPoint: exampleAccessPoint.arn,
 *     transformationConfigurations: [{
 *         actions: ["GetObject"],
 *         contentTransformation: {
 *             awsLambda: {
 *                 functionArn: aws_lambda_function.example.arn,
 *             },
 *         },
 *     }],
 * }});
 * const exampleObjectLambdaAccessPointPolicy = new aws.s3control.ObjectLambdaAccessPointPolicy("exampleObjectLambdaAccessPointPolicy", {policy: exampleObjectLambdaAccessPoint.arn.apply(arn => JSON.stringify({
 *     Version: "2008-10-17",
 *     Statement: [{
 *         Effect: "Allow",
 *         Action: "s3-object-lambda:GetObject",
 *         Principal: {
 *             AWS: data.aws_caller_identity.current.account_id,
 *         },
 *         Resource: arn,
 *     }],
 * }))});
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Object Lambda Access Point policies using the `account_id` and `name`, separated by a colon (`:`). For example:
 *
 * ```sh
 *  $ pulumi import aws:s3control/objectLambdaAccessPointPolicy:ObjectLambdaAccessPointPolicy example 123456789012:example
 * ```
 */
export class ObjectLambdaAccessPointPolicy extends pulumi.CustomResource {
    /**
     * Get an existing ObjectLambdaAccessPointPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectLambdaAccessPointPolicyState, opts?: pulumi.CustomResourceOptions): ObjectLambdaAccessPointPolicy {
        return new ObjectLambdaAccessPointPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:s3control/objectLambdaAccessPointPolicy:ObjectLambdaAccessPointPolicy';

    /**
     * Returns true if the given object is an instance of ObjectLambdaAccessPointPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectLambdaAccessPointPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectLambdaAccessPointPolicy.__pulumiType;
    }

    /**
     * The AWS account ID for the account that owns the Object Lambda Access Point. Defaults to automatically determined account ID of the AWS provider.
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * Indicates whether this access point currently has a policy that allows public access.
     */
    public /*out*/ readonly hasPublicAccessPolicy!: pulumi.Output<boolean>;
    /**
     * The name of the Object Lambda Access Point.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The Object Lambda Access Point resource policy document.
     */
    public readonly policy!: pulumi.Output<string>;

    /**
     * Create a ObjectLambdaAccessPointPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ObjectLambdaAccessPointPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectLambdaAccessPointPolicyArgs | ObjectLambdaAccessPointPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectLambdaAccessPointPolicyState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["hasPublicAccessPolicy"] = state ? state.hasPublicAccessPolicy : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["policy"] = state ? state.policy : undefined;
        } else {
            const args = argsOrState as ObjectLambdaAccessPointPolicyArgs | undefined;
            if ((!args || args.policy === undefined) && !opts.urn) {
                throw new Error("Missing required property 'policy'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["policy"] = args ? args.policy : undefined;
            resourceInputs["hasPublicAccessPolicy"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectLambdaAccessPointPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ObjectLambdaAccessPointPolicy resources.
 */
export interface ObjectLambdaAccessPointPolicyState {
    /**
     * The AWS account ID for the account that owns the Object Lambda Access Point. Defaults to automatically determined account ID of the AWS provider.
     */
    accountId?: pulumi.Input<string>;
    /**
     * Indicates whether this access point currently has a policy that allows public access.
     */
    hasPublicAccessPolicy?: pulumi.Input<boolean>;
    /**
     * The name of the Object Lambda Access Point.
     */
    name?: pulumi.Input<string>;
    /**
     * The Object Lambda Access Point resource policy document.
     */
    policy?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectLambdaAccessPointPolicy resource.
 */
export interface ObjectLambdaAccessPointPolicyArgs {
    /**
     * The AWS account ID for the account that owns the Object Lambda Access Point. Defaults to automatically determined account ID of the AWS provider.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The name of the Object Lambda Access Point.
     */
    name?: pulumi.Input<string>;
    /**
     * The Object Lambda Access Point resource policy document.
     */
    policy: pulumi.Input<string>;
}
