// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage an S3 Access Grants instance, which serves as a logical grouping for access grants.
 * You can have one S3 Access Grants instance per Region in your account.
 *
 * ## Example Usage
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.s3control.AccessGrantsInstance("example", {});
 * ```
 * ### AWS IAM Identity Center
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.s3control.AccessGrantsInstance("example", {identityCenterArn: "arn:aws:sso:::instance/ssoins-890759e9c7bfdc1d"});
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import S3 Access Grants instances using the `account_id`. For example:
 *
 * ```sh
 *  $ pulumi import aws:s3control/accessGrantsInstance:AccessGrantsInstance example 123456789012
 * ```
 */
export class AccessGrantsInstance extends pulumi.CustomResource {
    /**
     * Get an existing AccessGrantsInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccessGrantsInstanceState, opts?: pulumi.CustomResourceOptions): AccessGrantsInstance {
        return new AccessGrantsInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:s3control/accessGrantsInstance:AccessGrantsInstance';

    /**
     * Returns true if the given object is an instance of AccessGrantsInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccessGrantsInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccessGrantsInstance.__pulumiType;
    }

    /**
     * Amazon Resource Name (ARN) of the S3 Access Grants instance.
     */
    public /*out*/ readonly accessGrantsInstanceArn!: pulumi.Output<string>;
    /**
     * Unique ID of the S3 Access Grants instance.
     */
    public /*out*/ readonly accessGrantsInstanceId!: pulumi.Output<string>;
    public readonly accountId!: pulumi.Output<string>;
    /**
     * The ARN of the AWS IAM Identity Center instance application; a subresource of the original Identity Center instance.
     */
    public /*out*/ readonly identityCenterApplicationArn!: pulumi.Output<string>;
    /**
     * The ARN of the AWS IAM Identity Center instance associated with the S3 Access Grants instance.
     */
    public readonly identityCenterArn!: pulumi.Output<string | undefined>;
    /**
     * Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     *
     * @deprecated Please use `tags` instead.
     */
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a AccessGrantsInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AccessGrantsInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccessGrantsInstanceArgs | AccessGrantsInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccessGrantsInstanceState | undefined;
            resourceInputs["accessGrantsInstanceArn"] = state ? state.accessGrantsInstanceArn : undefined;
            resourceInputs["accessGrantsInstanceId"] = state ? state.accessGrantsInstanceId : undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["identityCenterApplicationArn"] = state ? state.identityCenterApplicationArn : undefined;
            resourceInputs["identityCenterArn"] = state ? state.identityCenterArn : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
        } else {
            const args = argsOrState as AccessGrantsInstanceArgs | undefined;
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["identityCenterArn"] = args ? args.identityCenterArn : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["accessGrantsInstanceArn"] = undefined /*out*/;
            resourceInputs["accessGrantsInstanceId"] = undefined /*out*/;
            resourceInputs["identityCenterApplicationArn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["tagsAll"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(AccessGrantsInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AccessGrantsInstance resources.
 */
export interface AccessGrantsInstanceState {
    /**
     * Amazon Resource Name (ARN) of the S3 Access Grants instance.
     */
    accessGrantsInstanceArn?: pulumi.Input<string>;
    /**
     * Unique ID of the S3 Access Grants instance.
     */
    accessGrantsInstanceId?: pulumi.Input<string>;
    accountId?: pulumi.Input<string>;
    /**
     * The ARN of the AWS IAM Identity Center instance application; a subresource of the original Identity Center instance.
     */
    identityCenterApplicationArn?: pulumi.Input<string>;
    /**
     * The ARN of the AWS IAM Identity Center instance associated with the S3 Access Grants instance.
     */
    identityCenterArn?: pulumi.Input<string>;
    /**
     * Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     *
     * @deprecated Please use `tags` instead.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a AccessGrantsInstance resource.
 */
export interface AccessGrantsInstanceArgs {
    accountId?: pulumi.Input<string>;
    /**
     * The ARN of the AWS IAM Identity Center instance associated with the S3 Access Grants instance.
     */
    identityCenterArn?: pulumi.Input<string>;
    /**
     * Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
