// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage an S3 Multi-Region Access Point access control policy.
 *
 * ## Example Usage
 *
 * ## Import
 *
 * Using `pulumi import`, import Multi-Region Access Point Policies using the `account_id` and `name` of the Multi-Region Access Point separated by a colon (`:`). For example:
 *
 * ```sh
 * $ pulumi import aws:s3control/multiRegionAccessPointPolicy:MultiRegionAccessPointPolicy example 123456789012:example
 * ```
 */
export class MultiRegionAccessPointPolicy extends pulumi.CustomResource {
    /**
     * Get an existing MultiRegionAccessPointPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MultiRegionAccessPointPolicyState, opts?: pulumi.CustomResourceOptions): MultiRegionAccessPointPolicy {
        return new MultiRegionAccessPointPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:s3control/multiRegionAccessPointPolicy:MultiRegionAccessPointPolicy';

    /**
     * Returns true if the given object is an instance of MultiRegionAccessPointPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MultiRegionAccessPointPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MultiRegionAccessPointPolicy.__pulumiType;
    }

    /**
     * The AWS account ID for the owner of the Multi-Region Access Point. Defaults to automatically determined account ID of the AWS provider.
     */
    declare public readonly accountId: pulumi.Output<string>;
    /**
     * A configuration block containing details about the policy for the Multi-Region Access Point. See Details Configuration Block below for more details
     */
    declare public readonly details: pulumi.Output<outputs.s3control.MultiRegionAccessPointPolicyDetails>;
    /**
     * The last established policy for the Multi-Region Access Point.
     */
    declare public /*out*/ readonly established: pulumi.Output<string>;
    /**
     * The proposed policy for the Multi-Region Access Point.
     */
    declare public /*out*/ readonly proposed: pulumi.Output<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    declare public readonly region: pulumi.Output<string>;

    /**
     * Create a MultiRegionAccessPointPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MultiRegionAccessPointPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MultiRegionAccessPointPolicyArgs | MultiRegionAccessPointPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MultiRegionAccessPointPolicyState | undefined;
            resourceInputs["accountId"] = state?.accountId;
            resourceInputs["details"] = state?.details;
            resourceInputs["established"] = state?.established;
            resourceInputs["proposed"] = state?.proposed;
            resourceInputs["region"] = state?.region;
        } else {
            const args = argsOrState as MultiRegionAccessPointPolicyArgs | undefined;
            if (args?.details === undefined && !opts.urn) {
                throw new Error("Missing required property 'details'");
            }
            resourceInputs["accountId"] = args?.accountId;
            resourceInputs["details"] = args?.details;
            resourceInputs["region"] = args?.region;
            resourceInputs["established"] = undefined /*out*/;
            resourceInputs["proposed"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MultiRegionAccessPointPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MultiRegionAccessPointPolicy resources.
 */
export interface MultiRegionAccessPointPolicyState {
    /**
     * The AWS account ID for the owner of the Multi-Region Access Point. Defaults to automatically determined account ID of the AWS provider.
     */
    accountId?: pulumi.Input<string>;
    /**
     * A configuration block containing details about the policy for the Multi-Region Access Point. See Details Configuration Block below for more details
     */
    details?: pulumi.Input<inputs.s3control.MultiRegionAccessPointPolicyDetails>;
    /**
     * The last established policy for the Multi-Region Access Point.
     */
    established?: pulumi.Input<string>;
    /**
     * The proposed policy for the Multi-Region Access Point.
     */
    proposed?: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MultiRegionAccessPointPolicy resource.
 */
export interface MultiRegionAccessPointPolicyArgs {
    /**
     * The AWS account ID for the owner of the Multi-Region Access Point. Defaults to automatically determined account ID of the AWS provider.
     */
    accountId?: pulumi.Input<string>;
    /**
     * A configuration block containing details about the policy for the Multi-Region Access Point. See Details Configuration Block below for more details
     */
    details: pulumi.Input<inputs.s3control.MultiRegionAccessPointPolicyDetails>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
}
