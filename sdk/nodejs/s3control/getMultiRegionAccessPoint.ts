// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getMultiRegionAccessPoint(args: GetMultiRegionAccessPointArgs, opts?: pulumi.InvokeOptions): Promise<GetMultiRegionAccessPointResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:s3control/getMultiRegionAccessPoint:getMultiRegionAccessPoint", {
        "accountId": args.accountId,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getMultiRegionAccessPoint.
 */
export interface GetMultiRegionAccessPointArgs {
    accountId?: string;
    name: string;
}

/**
 * A collection of values returned by getMultiRegionAccessPoint.
 */
export interface GetMultiRegionAccessPointResult {
    readonly accountId: string;
    readonly alias: string;
    readonly arn: string;
    readonly createdAt: string;
    readonly domainName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly publicAccessBlocks: outputs.s3control.GetMultiRegionAccessPointPublicAccessBlock[];
    readonly regions: outputs.s3control.GetMultiRegionAccessPointRegion[];
    readonly status: string;
}
export function getMultiRegionAccessPointOutput(args: GetMultiRegionAccessPointOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMultiRegionAccessPointResult> {
    return pulumi.output(args).apply((a: any) => getMultiRegionAccessPoint(a, opts))
}

/**
 * A collection of arguments for invoking getMultiRegionAccessPoint.
 */
export interface GetMultiRegionAccessPointOutputArgs {
    accountId?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
