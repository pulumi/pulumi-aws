// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getOrderableCluster(args?: GetOrderableClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetOrderableClusterResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:redshift/getOrderableCluster:getOrderableCluster", {
        "clusterType": args.clusterType,
        "clusterVersion": args.clusterVersion,
        "nodeType": args.nodeType,
        "preferredNodeTypes": args.preferredNodeTypes,
    }, opts);
}

/**
 * A collection of arguments for invoking getOrderableCluster.
 */
export interface GetOrderableClusterArgs {
    clusterType?: string;
    clusterVersion?: string;
    nodeType?: string;
    preferredNodeTypes?: string[];
}

/**
 * A collection of values returned by getOrderableCluster.
 */
export interface GetOrderableClusterResult {
    readonly availabilityZones: string[];
    readonly clusterType: string;
    readonly clusterVersion: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly nodeType: string;
    readonly preferredNodeTypes?: string[];
}
export function getOrderableClusterOutput(args?: GetOrderableClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrderableClusterResult> {
    return pulumi.output(args).apply((a: any) => getOrderableCluster(a, opts))
}

/**
 * A collection of arguments for invoking getOrderableCluster.
 */
export interface GetOrderableClusterOutputArgs {
    clusterType?: pulumi.Input<string>;
    clusterVersion?: pulumi.Input<string>;
    nodeType?: pulumi.Input<string>;
    preferredNodeTypes?: pulumi.Input<pulumi.Input<string>[]>;
}
