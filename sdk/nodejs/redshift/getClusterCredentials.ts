// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getClusterCredentials(args: GetClusterCredentialsArgs, opts?: pulumi.InvokeOptions): Promise<GetClusterCredentialsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:redshift/getClusterCredentials:getClusterCredentials", {
        "autoCreate": args.autoCreate,
        "clusterIdentifier": args.clusterIdentifier,
        "dbGroups": args.dbGroups,
        "dbName": args.dbName,
        "dbUser": args.dbUser,
        "durationSeconds": args.durationSeconds,
    }, opts);
}

/**
 * A collection of arguments for invoking getClusterCredentials.
 */
export interface GetClusterCredentialsArgs {
    autoCreate?: boolean;
    clusterIdentifier: string;
    dbGroups?: string[];
    dbName?: string;
    dbUser: string;
    durationSeconds?: number;
}

/**
 * A collection of values returned by getClusterCredentials.
 */
export interface GetClusterCredentialsResult {
    readonly autoCreate?: boolean;
    readonly clusterIdentifier: string;
    readonly dbGroups?: string[];
    readonly dbName?: string;
    readonly dbPassword: string;
    readonly dbUser: string;
    readonly durationSeconds?: number;
    readonly expiration: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
export function getClusterCredentialsOutput(args: GetClusterCredentialsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetClusterCredentialsResult> {
    return pulumi.output(args).apply((a: any) => getClusterCredentials(a, opts))
}

/**
 * A collection of arguments for invoking getClusterCredentials.
 */
export interface GetClusterCredentialsOutputArgs {
    autoCreate?: pulumi.Input<boolean>;
    clusterIdentifier: pulumi.Input<string>;
    dbGroups?: pulumi.Input<pulumi.Input<string>[]>;
    dbName?: pulumi.Input<string>;
    dbUser: pulumi.Input<string>;
    durationSeconds?: pulumi.Input<number>;
}
