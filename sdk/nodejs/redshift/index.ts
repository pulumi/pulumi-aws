// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./authenticationProfile";
export * from "./cluster";
export * from "./clusterIamRoles";
export * from "./endpointAccess";
export * from "./eventSubscription";
export * from "./getCluster";
export * from "./getClusterCredentials";
export * from "./getOrderableCluster";
export * from "./getServiceAccount";
export * from "./getSubnetGroup";
export * from "./hsmClientCertificate";
export * from "./hsmConfiguration";
export * from "./parameterGroup";
export * from "./scheduledAction";
export * from "./securityGroup";
export * from "./snapshotCopyGrant";
export * from "./snapshotSchedule";
export * from "./snapshotScheduleAssociation";
export * from "./subnetGroup";
export * from "./usageLimit";

// Import resources to register:
import { AuthenticationProfile } from "./authenticationProfile";
import { Cluster } from "./cluster";
import { ClusterIamRoles } from "./clusterIamRoles";
import { EndpointAccess } from "./endpointAccess";
import { EventSubscription } from "./eventSubscription";
import { HsmClientCertificate } from "./hsmClientCertificate";
import { HsmConfiguration } from "./hsmConfiguration";
import { ParameterGroup } from "./parameterGroup";
import { ScheduledAction } from "./scheduledAction";
import { SecurityGroup } from "./securityGroup";
import { SnapshotCopyGrant } from "./snapshotCopyGrant";
import { SnapshotSchedule } from "./snapshotSchedule";
import { SnapshotScheduleAssociation } from "./snapshotScheduleAssociation";
import { SubnetGroup } from "./subnetGroup";
import { UsageLimit } from "./usageLimit";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws:redshift/authenticationProfile:AuthenticationProfile":
                return new AuthenticationProfile(name, <any>undefined, { urn })
            case "aws:redshift/cluster:Cluster":
                return new Cluster(name, <any>undefined, { urn })
            case "aws:redshift/clusterIamRoles:ClusterIamRoles":
                return new ClusterIamRoles(name, <any>undefined, { urn })
            case "aws:redshift/endpointAccess:EndpointAccess":
                return new EndpointAccess(name, <any>undefined, { urn })
            case "aws:redshift/eventSubscription:EventSubscription":
                return new EventSubscription(name, <any>undefined, { urn })
            case "aws:redshift/hsmClientCertificate:HsmClientCertificate":
                return new HsmClientCertificate(name, <any>undefined, { urn })
            case "aws:redshift/hsmConfiguration:HsmConfiguration":
                return new HsmConfiguration(name, <any>undefined, { urn })
            case "aws:redshift/parameterGroup:ParameterGroup":
                return new ParameterGroup(name, <any>undefined, { urn })
            case "aws:redshift/scheduledAction:ScheduledAction":
                return new ScheduledAction(name, <any>undefined, { urn })
            case "aws:redshift/securityGroup:SecurityGroup":
                return new SecurityGroup(name, <any>undefined, { urn })
            case "aws:redshift/snapshotCopyGrant:SnapshotCopyGrant":
                return new SnapshotCopyGrant(name, <any>undefined, { urn })
            case "aws:redshift/snapshotSchedule:SnapshotSchedule":
                return new SnapshotSchedule(name, <any>undefined, { urn })
            case "aws:redshift/snapshotScheduleAssociation:SnapshotScheduleAssociation":
                return new SnapshotScheduleAssociation(name, <any>undefined, { urn })
            case "aws:redshift/subnetGroup:SubnetGroup":
                return new SubnetGroup(name, <any>undefined, { urn })
            case "aws:redshift/usageLimit:UsageLimit":
                return new UsageLimit(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "redshift/authenticationProfile", _module)
pulumi.runtime.registerResourceModule("aws", "redshift/cluster", _module)
pulumi.runtime.registerResourceModule("aws", "redshift/clusterIamRoles", _module)
pulumi.runtime.registerResourceModule("aws", "redshift/endpointAccess", _module)
pulumi.runtime.registerResourceModule("aws", "redshift/eventSubscription", _module)
pulumi.runtime.registerResourceModule("aws", "redshift/hsmClientCertificate", _module)
pulumi.runtime.registerResourceModule("aws", "redshift/hsmConfiguration", _module)
pulumi.runtime.registerResourceModule("aws", "redshift/parameterGroup", _module)
pulumi.runtime.registerResourceModule("aws", "redshift/scheduledAction", _module)
pulumi.runtime.registerResourceModule("aws", "redshift/securityGroup", _module)
pulumi.runtime.registerResourceModule("aws", "redshift/snapshotCopyGrant", _module)
pulumi.runtime.registerResourceModule("aws", "redshift/snapshotSchedule", _module)
pulumi.runtime.registerResourceModule("aws", "redshift/snapshotScheduleAssociation", _module)
pulumi.runtime.registerResourceModule("aws", "redshift/subnetGroup", _module)
pulumi.runtime.registerResourceModule("aws", "redshift/usageLimit", _module)
