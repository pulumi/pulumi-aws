// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Creates a Redshift authentication profile
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.redshift.AuthenticationProfile("example", {
 *     authenticationProfileName: "example",
 *     authenticationProfileContent: JSON.stringify({
 *         AllowDBUserOverride: "1",
 *         Client_ID: "ExampleClientID",
 *         App_ID: "example",
 *     }),
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Redshift Authentication by `authentication_profile_name`. For example:
 *
 * ```sh
 *  $ pulumi import aws:redshift/authenticationProfile:AuthenticationProfile test example
 * ```
 */
export class AuthenticationProfile extends pulumi.CustomResource {
    /**
     * Get an existing AuthenticationProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AuthenticationProfileState, opts?: pulumi.CustomResourceOptions): AuthenticationProfile {
        return new AuthenticationProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:redshift/authenticationProfile:AuthenticationProfile';

    /**
     * Returns true if the given object is an instance of AuthenticationProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AuthenticationProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AuthenticationProfile.__pulumiType;
    }

    /**
     * The content of the authentication profile in JSON format. The maximum length of the JSON string is determined by a quota for your account.
     */
    public readonly authenticationProfileContent!: pulumi.Output<string>;
    /**
     * The name of the authentication profile.
     */
    public readonly authenticationProfileName!: pulumi.Output<string>;

    /**
     * Create a AuthenticationProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AuthenticationProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AuthenticationProfileArgs | AuthenticationProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AuthenticationProfileState | undefined;
            resourceInputs["authenticationProfileContent"] = state ? state.authenticationProfileContent : undefined;
            resourceInputs["authenticationProfileName"] = state ? state.authenticationProfileName : undefined;
        } else {
            const args = argsOrState as AuthenticationProfileArgs | undefined;
            if ((!args || args.authenticationProfileContent === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authenticationProfileContent'");
            }
            if ((!args || args.authenticationProfileName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authenticationProfileName'");
            }
            resourceInputs["authenticationProfileContent"] = args ? args.authenticationProfileContent : undefined;
            resourceInputs["authenticationProfileName"] = args ? args.authenticationProfileName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AuthenticationProfile.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AuthenticationProfile resources.
 */
export interface AuthenticationProfileState {
    /**
     * The content of the authentication profile in JSON format. The maximum length of the JSON string is determined by a quota for your account.
     */
    authenticationProfileContent?: pulumi.Input<string>;
    /**
     * The name of the authentication profile.
     */
    authenticationProfileName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AuthenticationProfile resource.
 */
export interface AuthenticationProfileArgs {
    /**
     * The content of the authentication profile in JSON format. The maximum length of the JSON string is determined by a quota for your account.
     */
    authenticationProfileContent: pulumi.Input<string>;
    /**
     * The name of the authentication profile.
     */
    authenticationProfileName: pulumi.Input<string>;
}
