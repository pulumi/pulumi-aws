// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Creates an HSM client certificate that an Amazon Redshift cluster will use to connect to the client's HSM in order to store and retrieve the keys used to encrypt the cluster databases.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.redshift.HsmClientCertificate("example", {hsmClientCertificateIdentifier: "example"});
 * ```
 *
 * ## Import
 *
 * terraform import {
 *
 *  to = aws_redshift_hsm_client_certificate.test
 *
 *  id = "example" } Using `pulumi import`, import Redshift HSM Client Certificates using `hsm_client_certificate_identifier`. For exampleconsole % pulumi import aws_redshift_hsm_client_certificate.test example
 */
export class HsmClientCertificate extends pulumi.CustomResource {
    /**
     * Get an existing HsmClientCertificate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HsmClientCertificateState, opts?: pulumi.CustomResourceOptions): HsmClientCertificate {
        return new HsmClientCertificate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:redshift/hsmClientCertificate:HsmClientCertificate';

    /**
     * Returns true if the given object is an instance of HsmClientCertificate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HsmClientCertificate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HsmClientCertificate.__pulumiType;
    }

    /**
     * Amazon Resource Name (ARN) of the Hsm Client Certificate.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The identifier of the HSM client certificate.
     */
    public readonly hsmClientCertificateIdentifier!: pulumi.Output<string>;
    /**
     * The public key that the Amazon Redshift cluster will use to connect to the HSM. You must register the public key in the HSM.
     */
    public /*out*/ readonly hsmClientCertificatePublicKey!: pulumi.Output<string>;
    /**
     * A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a HsmClientCertificate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HsmClientCertificateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HsmClientCertificateArgs | HsmClientCertificateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HsmClientCertificateState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["hsmClientCertificateIdentifier"] = state ? state.hsmClientCertificateIdentifier : undefined;
            resourceInputs["hsmClientCertificatePublicKey"] = state ? state.hsmClientCertificatePublicKey : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
        } else {
            const args = argsOrState as HsmClientCertificateArgs | undefined;
            if ((!args || args.hsmClientCertificateIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hsmClientCertificateIdentifier'");
            }
            resourceInputs["hsmClientCertificateIdentifier"] = args ? args.hsmClientCertificateIdentifier : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["hsmClientCertificatePublicKey"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(HsmClientCertificate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering HsmClientCertificate resources.
 */
export interface HsmClientCertificateState {
    /**
     * Amazon Resource Name (ARN) of the Hsm Client Certificate.
     */
    arn?: pulumi.Input<string>;
    /**
     * The identifier of the HSM client certificate.
     */
    hsmClientCertificateIdentifier?: pulumi.Input<string>;
    /**
     * The public key that the Amazon Redshift cluster will use to connect to the HSM. You must register the public key in the HSM.
     */
    hsmClientCertificatePublicKey?: pulumi.Input<string>;
    /**
     * A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a HsmClientCertificate resource.
 */
export interface HsmClientCertificateArgs {
    /**
     * The identifier of the HSM client certificate.
     */
    hsmClientCertificateIdentifier: pulumi.Input<string>;
    /**
     * A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
