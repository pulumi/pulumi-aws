// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Data source for managing AWS Redshift Producer Data Shares.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.redshift.getProducerDataShares({
 *     producerArn: "",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getProducerDataShares(args: GetProducerDataSharesArgs, opts?: pulumi.InvokeOptions): Promise<GetProducerDataSharesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:redshift/getProducerDataShares:getProducerDataShares", {
        "dataShares": args.dataShares,
        "producerArn": args.producerArn,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getProducerDataShares.
 */
export interface GetProducerDataSharesArgs {
    /**
     * An array of all data shares in the producer. See `dataShares` below.
     */
    dataShares?: inputs.redshift.GetProducerDataSharesDataShare[];
    /**
     * Amazon Resource Name (ARN) of the producer namespace that returns in the list of datashares.
     *
     * The following arguments are optional:
     */
    producerArn: string;
    /**
     * Status of a datashare in the producer. Valid values are `ACTIVE`, `AUTHORIZED`, `PENDING_AUTHORIZATION`, `DEAUTHORIZED`, and `REJECTED`. Omit this argument to return all statuses.
     */
    status?: string;
}

/**
 * A collection of values returned by getProducerDataShares.
 */
export interface GetProducerDataSharesResult {
    /**
     * An array of all data shares in the producer. See `dataShares` below.
     */
    readonly dataShares?: outputs.redshift.GetProducerDataSharesDataShare[];
    /**
     * Producer ARN.
     */
    readonly id: string;
    /**
     * ARN (Amazon Resource Name) of the producer.
     */
    readonly producerArn: string;
    readonly status?: string;
}
/**
 * Data source for managing AWS Redshift Producer Data Shares.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.redshift.getProducerDataShares({
 *     producerArn: "",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getProducerDataSharesOutput(args: GetProducerDataSharesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProducerDataSharesResult> {
    return pulumi.output(args).apply((a: any) => getProducerDataShares(a, opts))
}

/**
 * A collection of arguments for invoking getProducerDataShares.
 */
export interface GetProducerDataSharesOutputArgs {
    /**
     * An array of all data shares in the producer. See `dataShares` below.
     */
    dataShares?: pulumi.Input<pulumi.Input<inputs.redshift.GetProducerDataSharesDataShareArgs>[]>;
    /**
     * Amazon Resource Name (ARN) of the producer namespace that returns in the list of datashares.
     *
     * The following arguments are optional:
     */
    producerArn: pulumi.Input<string>;
    /**
     * Status of a datashare in the producer. Valid values are `ACTIVE`, `AUTHORIZED`, `PENDING_AUTHORIZATION`, `DEAUTHORIZED`, and `REJECTED`. Omit this argument to return all statuses.
     */
    status?: pulumi.Input<string>;
}
