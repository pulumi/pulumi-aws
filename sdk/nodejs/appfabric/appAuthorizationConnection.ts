// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS AppFabric App Authorization Connection.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.appfabric.AppAuthorizationConnection("example", {
 *     appAuthorizationArn: test.arn,
 *     appBundleArn: arn,
 * });
 * ```
 */
export class AppAuthorizationConnection extends pulumi.CustomResource {
    /**
     * Get an existing AppAuthorizationConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppAuthorizationConnectionState, opts?: pulumi.CustomResourceOptions): AppAuthorizationConnection {
        return new AppAuthorizationConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:appfabric/appAuthorizationConnection:AppAuthorizationConnection';

    /**
     * Returns true if the given object is an instance of AppAuthorizationConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppAuthorizationConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppAuthorizationConnection.__pulumiType;
    }

    /**
     * The name of the application.
     */
    public /*out*/ readonly app!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) or Universal Unique Identifier (UUID) of the app authorization to use for the request.
     */
    public readonly appAuthorizationArn!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the app bundle to use for the request.
     */
    public readonly appBundleArn!: pulumi.Output<string>;
    /**
     * Contains OAuth2 authorization information.This is required if the app authorization for the request is configured with an OAuth2 (oauth2) authorization type.
     */
    public readonly authRequest!: pulumi.Output<outputs.appfabric.AppAuthorizationConnectionAuthRequest | undefined>;
    /**
     * Contains information about an application tenant, such as the application display name and identifier.
     */
    public /*out*/ readonly tenants!: pulumi.Output<outputs.appfabric.AppAuthorizationConnectionTenant[]>;
    public readonly timeouts!: pulumi.Output<outputs.appfabric.AppAuthorizationConnectionTimeouts | undefined>;

    /**
     * Create a AppAuthorizationConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppAuthorizationConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppAuthorizationConnectionArgs | AppAuthorizationConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppAuthorizationConnectionState | undefined;
            resourceInputs["app"] = state ? state.app : undefined;
            resourceInputs["appAuthorizationArn"] = state ? state.appAuthorizationArn : undefined;
            resourceInputs["appBundleArn"] = state ? state.appBundleArn : undefined;
            resourceInputs["authRequest"] = state ? state.authRequest : undefined;
            resourceInputs["tenants"] = state ? state.tenants : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as AppAuthorizationConnectionArgs | undefined;
            if ((!args || args.appAuthorizationArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appAuthorizationArn'");
            }
            if ((!args || args.appBundleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appBundleArn'");
            }
            resourceInputs["appAuthorizationArn"] = args ? args.appAuthorizationArn : undefined;
            resourceInputs["appBundleArn"] = args ? args.appBundleArn : undefined;
            resourceInputs["authRequest"] = args ? args.authRequest : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["app"] = undefined /*out*/;
            resourceInputs["tenants"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AppAuthorizationConnection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AppAuthorizationConnection resources.
 */
export interface AppAuthorizationConnectionState {
    /**
     * The name of the application.
     */
    app?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) or Universal Unique Identifier (UUID) of the app authorization to use for the request.
     */
    appAuthorizationArn?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the app bundle to use for the request.
     */
    appBundleArn?: pulumi.Input<string>;
    /**
     * Contains OAuth2 authorization information.This is required if the app authorization for the request is configured with an OAuth2 (oauth2) authorization type.
     */
    authRequest?: pulumi.Input<inputs.appfabric.AppAuthorizationConnectionAuthRequest>;
    /**
     * Contains information about an application tenant, such as the application display name and identifier.
     */
    tenants?: pulumi.Input<pulumi.Input<inputs.appfabric.AppAuthorizationConnectionTenant>[]>;
    timeouts?: pulumi.Input<inputs.appfabric.AppAuthorizationConnectionTimeouts>;
}

/**
 * The set of arguments for constructing a AppAuthorizationConnection resource.
 */
export interface AppAuthorizationConnectionArgs {
    /**
     * The Amazon Resource Name (ARN) or Universal Unique Identifier (UUID) of the app authorization to use for the request.
     */
    appAuthorizationArn: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the app bundle to use for the request.
     */
    appBundleArn: pulumi.Input<string>;
    /**
     * Contains OAuth2 authorization information.This is required if the app authorization for the request is configured with an OAuth2 (oauth2) authorization type.
     */
    authRequest?: pulumi.Input<inputs.appfabric.AppAuthorizationConnectionAuthRequest>;
    timeouts?: pulumi.Input<inputs.appfabric.AppAuthorizationConnectionTimeouts>;
}
