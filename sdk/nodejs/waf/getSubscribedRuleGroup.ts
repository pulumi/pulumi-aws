// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * `aws.waf.getSubscribedRuleGroup` retrieves information about a Managed WAF Rule Group from AWS Marketplace (needs to be subscribed to first).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const byName = aws.waf.getSubscribedRuleGroup({
 *     name: "F5 Bot Detection Signatures For AWS WAF",
 * });
 * const byMetricName = aws.waf.getSubscribedRuleGroup({
 *     metricName: "F5BotDetectionSignatures",
 * });
 * // ...
 * const acl = new aws.waf.WebAcl("acl", {rules: [
 *     {
 *         priority: 1,
 *         ruleId: byName.then(byName => byName.id),
 *         type: "GROUP",
 *     },
 *     {
 *         priority: 2,
 *         ruleId: byMetricName.then(byMetricName => byMetricName.id),
 *         type: "GROUP",
 *     },
 * ]});
 * ```
 */
export function getSubscribedRuleGroup(args?: GetSubscribedRuleGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetSubscribedRuleGroupResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws:waf/getSubscribedRuleGroup:getSubscribedRuleGroup", {
        "metricName": args.metricName,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getSubscribedRuleGroup.
 */
export interface GetSubscribedRuleGroupArgs {
    /**
     * Name of the WAF rule group.
     */
    metricName?: string;
    /**
     * Name of the WAF rule group.
     */
    name?: string;
}

/**
 * A collection of values returned by getSubscribedRuleGroup.
 */
export interface GetSubscribedRuleGroupResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly metricName?: string;
    readonly name?: string;
}

export function getSubscribedRuleGroupOutput(args?: GetSubscribedRuleGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSubscribedRuleGroupResult> {
    return pulumi.output(args).apply(a => getSubscribedRuleGroup(a, opts))
}

/**
 * A collection of arguments for invoking getSubscribedRuleGroup.
 */
export interface GetSubscribedRuleGroupOutputArgs {
    /**
     * Name of the WAF rule group.
     */
    metricName?: pulumi.Input<string>;
    /**
     * Name of the WAF rule group.
     */
    name?: pulumi.Input<string>;
}
