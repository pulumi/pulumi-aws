// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS CloudWatch Contributor Insight Rule.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.cloudwatch.ContributorInsightRule("test", {
 *     ruleName: "testing",
 *     ruleState: "ENABLED",
 *     ruleDefinition: "{\"Schema\":{\"Name\":\"CloudWatchLogRule\",\"Version\":1},\"AggregateOn\":\"Count\",\"Contribution\":{\"Filters\":[{\"In\":[\"some-keyword\"],\"Match\":\"$.message\"}],\"Keys\":[\"$.country\"]},\"LogFormat\":\"JSON\",\"LogGroupNames\":[\"/aws/lambda/api-prod\"]}",
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import CloudWatch Contributor Insight Rule using the `rule_name`. For example:
 *
 * ```sh
 * $ pulumi import aws:cloudwatch/contributorInsightRule:ContributorInsightRule example contributor_insight_rule-name
 * ```
 */
export class ContributorInsightRule extends pulumi.CustomResource {
    /**
     * Get an existing ContributorInsightRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ContributorInsightRuleState, opts?: pulumi.CustomResourceOptions): ContributorInsightRule {
        return new ContributorInsightRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:cloudwatch/contributorInsightRule:ContributorInsightRule';

    /**
     * Returns true if the given object is an instance of ContributorInsightRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ContributorInsightRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ContributorInsightRule.__pulumiType;
    }

    /**
     * ARN of the Contributor Insight Rule.
     */
    public /*out*/ readonly resourceArn!: pulumi.Output<string>;
    /**
     * Definition of the rule, as a JSON object. For details on the valid syntax, see [Contributor Insights Rule Syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights-RuleSyntax.html).
     */
    public readonly ruleDefinition!: pulumi.Output<string>;
    /**
     * Unique name of the rule.
     *
     * The following arguments are optional:
     */
    public readonly ruleName!: pulumi.Output<string>;
    /**
     * State of the rule. Valid values are `ENABLED` and `DISABLED`.
     */
    public readonly ruleState!: pulumi.Output<string | undefined>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * @deprecated Please use `tags` instead.
     */
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a ContributorInsightRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ContributorInsightRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ContributorInsightRuleArgs | ContributorInsightRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ContributorInsightRuleState | undefined;
            resourceInputs["resourceArn"] = state ? state.resourceArn : undefined;
            resourceInputs["ruleDefinition"] = state ? state.ruleDefinition : undefined;
            resourceInputs["ruleName"] = state ? state.ruleName : undefined;
            resourceInputs["ruleState"] = state ? state.ruleState : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
        } else {
            const args = argsOrState as ContributorInsightRuleArgs | undefined;
            if ((!args || args.ruleDefinition === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ruleDefinition'");
            }
            if ((!args || args.ruleName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ruleName'");
            }
            resourceInputs["ruleDefinition"] = args ? args.ruleDefinition : undefined;
            resourceInputs["ruleName"] = args ? args.ruleName : undefined;
            resourceInputs["ruleState"] = args ? args.ruleState : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["resourceArn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ContributorInsightRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ContributorInsightRule resources.
 */
export interface ContributorInsightRuleState {
    /**
     * ARN of the Contributor Insight Rule.
     */
    resourceArn?: pulumi.Input<string>;
    /**
     * Definition of the rule, as a JSON object. For details on the valid syntax, see [Contributor Insights Rule Syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights-RuleSyntax.html).
     */
    ruleDefinition?: pulumi.Input<string>;
    /**
     * Unique name of the rule.
     *
     * The following arguments are optional:
     */
    ruleName?: pulumi.Input<string>;
    /**
     * State of the rule. Valid values are `ENABLED` and `DISABLED`.
     */
    ruleState?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * @deprecated Please use `tags` instead.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a ContributorInsightRule resource.
 */
export interface ContributorInsightRuleArgs {
    /**
     * Definition of the rule, as a JSON object. For details on the valid syntax, see [Contributor Insights Rule Syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights-RuleSyntax.html).
     */
    ruleDefinition: pulumi.Input<string>;
    /**
     * Unique name of the rule.
     *
     * The following arguments are optional:
     */
    ruleName: pulumi.Input<string>;
    /**
     * State of the rule. Valid values are `ENABLED` and `DISABLED`.
     */
    ruleState?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
