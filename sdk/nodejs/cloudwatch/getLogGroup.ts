// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to get information about an AWS Cloudwatch Log Group
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.cloudwatch.getLogGroup({
 *     name: "MyImportantLogs",
 * });
 * ```
 */
export function getLogGroup(args: GetLogGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetLogGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:cloudwatch/getLogGroup:getLogGroup", {
        "name": args.name,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getLogGroup.
 */
export interface GetLogGroupArgs {
    /**
     * Name of the Cloudwatch log group
     */
    name: string;
    /**
     * Map of tags to assign to the resource.
     */
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getLogGroup.
 */
export interface GetLogGroupResult {
    /**
     * ARN of the Cloudwatch log group. Any `:*` suffix added by the API, denoting all CloudWatch Log Streams under the CloudWatch Log Group, is removed for greater compatibility with other AWS services that do not accept the suffix.
     */
    readonly arn: string;
    /**
     * Creation time of the log group, expressed as the number of milliseconds after Jan 1, 1970 00:00:00 UTC.
     */
    readonly creationTime: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * ARN of the KMS Key to use when encrypting log data.
     */
    readonly kmsKeyId: string;
    /**
     * The log class of the log group.
     */
    readonly logGroupClass: string;
    readonly name: string;
    /**
     * Number of days log events retained in the specified log group.
     */
    readonly retentionInDays: number;
    /**
     * Map of tags to assign to the resource.
     */
    readonly tags: {[key: string]: string};
}
/**
 * Use this data source to get information about an AWS Cloudwatch Log Group
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.cloudwatch.getLogGroup({
 *     name: "MyImportantLogs",
 * });
 * ```
 */
export function getLogGroupOutput(args: GetLogGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogGroupResult> {
    return pulumi.output(args).apply((a: any) => getLogGroup(a, opts))
}

/**
 * A collection of arguments for invoking getLogGroup.
 */
export interface GetLogGroupOutputArgs {
    /**
     * Name of the Cloudwatch log group
     */
    name: pulumi.Input<string>;
    /**
     * Map of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
