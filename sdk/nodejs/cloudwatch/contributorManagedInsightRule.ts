// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS CloudWatch Contributor Managed Insight Rule.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ## Import
 *
 * Using `pulumi import`, import CloudWatch Contributor Managed Insight Rule using the `resource_arn`. For example:
 *
 * ```sh
 * $ pulumi import aws:cloudwatch/contributorManagedInsightRule:ContributorManagedInsightRule example contributor_managed_insight_rule-id-12345678
 * ```
 */
export class ContributorManagedInsightRule extends pulumi.CustomResource {
    /**
     * Get an existing ContributorManagedInsightRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ContributorManagedInsightRuleState, opts?: pulumi.CustomResourceOptions): ContributorManagedInsightRule {
        return new ContributorManagedInsightRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:cloudwatch/contributorManagedInsightRule:ContributorManagedInsightRule';

    /**
     * Returns true if the given object is an instance of ContributorManagedInsightRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ContributorManagedInsightRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ContributorManagedInsightRule.__pulumiType;
    }

    /**
     * ARN of the Contributor Managed Insight Rule.
     */
    declare public /*out*/ readonly arn: pulumi.Output<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * ARN of an Amazon Web Services resource that has managed Contributor Insights rules.
     */
    declare public readonly resourceArn: pulumi.Output<string>;
    declare public /*out*/ readonly ruleName: pulumi.Output<string>;
    declare public readonly state: pulumi.Output<string>;
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    declare public /*out*/ readonly tagsAll: pulumi.Output<{[key: string]: string}>;
    /**
     * Template name for the managed Contributor Insights rule, as returned by ListManagedInsightRules.
     *
     * The following arguments are optional:
     */
    declare public readonly templateName: pulumi.Output<string>;

    /**
     * Create a ContributorManagedInsightRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ContributorManagedInsightRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ContributorManagedInsightRuleArgs | ContributorManagedInsightRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ContributorManagedInsightRuleState | undefined;
            resourceInputs["arn"] = state?.arn;
            resourceInputs["region"] = state?.region;
            resourceInputs["resourceArn"] = state?.resourceArn;
            resourceInputs["ruleName"] = state?.ruleName;
            resourceInputs["state"] = state?.state;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tagsAll"] = state?.tagsAll;
            resourceInputs["templateName"] = state?.templateName;
        } else {
            const args = argsOrState as ContributorManagedInsightRuleArgs | undefined;
            if (args?.resourceArn === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceArn'");
            }
            if (args?.templateName === undefined && !opts.urn) {
                throw new Error("Missing required property 'templateName'");
            }
            resourceInputs["region"] = args?.region;
            resourceInputs["resourceArn"] = args?.resourceArn;
            resourceInputs["state"] = args?.state;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["templateName"] = args?.templateName;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["ruleName"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ContributorManagedInsightRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ContributorManagedInsightRule resources.
 */
export interface ContributorManagedInsightRuleState {
    /**
     * ARN of the Contributor Managed Insight Rule.
     */
    arn?: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * ARN of an Amazon Web Services resource that has managed Contributor Insights rules.
     */
    resourceArn?: pulumi.Input<string>;
    ruleName?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Template name for the managed Contributor Insights rule, as returned by ListManagedInsightRules.
     *
     * The following arguments are optional:
     */
    templateName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ContributorManagedInsightRule resource.
 */
export interface ContributorManagedInsightRuleArgs {
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * ARN of an Amazon Web Services resource that has managed Contributor Insights rules.
     */
    resourceArn: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Template name for the managed Contributor Insights rule, as returned by ListManagedInsightRules.
     *
     * The following arguments are optional:
     */
    templateName: pulumi.Input<string>;
}
