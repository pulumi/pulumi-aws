// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIpRanges(args: GetIpRangesArgs, opts?: pulumi.InvokeOptions): Promise<GetIpRangesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getIpRanges:getIpRanges", {
        "regions": args.regions,
        "services": args.services,
        "url": args.url,
    }, opts);
}

/**
 * A collection of arguments for invoking getIpRanges.
 */
export interface GetIpRangesArgs {
    regions?: string[];
    services: string[];
    url?: string;
}

/**
 * A collection of values returned by getIpRanges.
 */
export interface GetIpRangesResult {
    readonly cidrBlocks: string[];
    readonly createDate: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ipv6CidrBlocks: string[];
    readonly regions?: string[];
    readonly services: string[];
    readonly syncToken: number;
    readonly url?: string;
}
export function getIpRangesOutput(args: GetIpRangesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpRangesResult> {
    return pulumi.output(args).apply((a: any) => getIpRanges(a, opts))
}

/**
 * A collection of arguments for invoking getIpRanges.
 */
export interface GetIpRangesOutputArgs {
    regions?: pulumi.Input<pulumi.Input<string>[]>;
    services: pulumi.Input<pulumi.Input<string>[]>;
    url?: pulumi.Input<string>;
}
