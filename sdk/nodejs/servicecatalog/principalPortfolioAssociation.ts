// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Service Catalog Principal Portfolio Association.
 *
 * ## Example Usage
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.servicecatalog.PrincipalPortfolioAssociation("example", {
 *     portfolioId: "port-68656c6c6f",
 *     principalArn: "arn:aws:iam::123456789012:user/Eleanor",
 * });
 * ```
 *
 * ## Import
 *
 * `aws_servicecatalog_principal_portfolio_association` can be imported using the accept language, principal ARN, and portfolio ID, separated by a comma, e.g.
 *
 * ```sh
 *  $ pulumi import aws:servicecatalog/principalPortfolioAssociation:PrincipalPortfolioAssociation example en,arn:aws:iam::123456789012:user/Eleanor,port-68656c6c6f
 * ```
 */
export class PrincipalPortfolioAssociation extends pulumi.CustomResource {
    /**
     * Get an existing PrincipalPortfolioAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PrincipalPortfolioAssociationState, opts?: pulumi.CustomResourceOptions): PrincipalPortfolioAssociation {
        return new PrincipalPortfolioAssociation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:servicecatalog/principalPortfolioAssociation:PrincipalPortfolioAssociation';

    /**
     * Returns true if the given object is an instance of PrincipalPortfolioAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PrincipalPortfolioAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PrincipalPortfolioAssociation.__pulumiType;
    }

    /**
     * Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
     */
    public readonly acceptLanguage!: pulumi.Output<string | undefined>;
    /**
     * Portfolio identifier.
     */
    public readonly portfolioId!: pulumi.Output<string>;
    /**
     * Principal ARN.
     */
    public readonly principalArn!: pulumi.Output<string>;
    /**
     * Principal type. Setting this argument empty (e.g., `principalType = ""`) will result in an error. Valid value is `IAM`. Default is `IAM`.
     */
    public readonly principalType!: pulumi.Output<string | undefined>;

    /**
     * Create a PrincipalPortfolioAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PrincipalPortfolioAssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PrincipalPortfolioAssociationArgs | PrincipalPortfolioAssociationState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PrincipalPortfolioAssociationState | undefined;
            inputs["acceptLanguage"] = state ? state.acceptLanguage : undefined;
            inputs["portfolioId"] = state ? state.portfolioId : undefined;
            inputs["principalArn"] = state ? state.principalArn : undefined;
            inputs["principalType"] = state ? state.principalType : undefined;
        } else {
            const args = argsOrState as PrincipalPortfolioAssociationArgs | undefined;
            if ((!args || args.portfolioId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'portfolioId'");
            }
            if ((!args || args.principalArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'principalArn'");
            }
            inputs["acceptLanguage"] = args ? args.acceptLanguage : undefined;
            inputs["portfolioId"] = args ? args.portfolioId : undefined;
            inputs["principalArn"] = args ? args.principalArn : undefined;
            inputs["principalType"] = args ? args.principalType : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(PrincipalPortfolioAssociation.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PrincipalPortfolioAssociation resources.
 */
export interface PrincipalPortfolioAssociationState {
    /**
     * Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
     */
    acceptLanguage?: pulumi.Input<string>;
    /**
     * Portfolio identifier.
     */
    portfolioId?: pulumi.Input<string>;
    /**
     * Principal ARN.
     */
    principalArn?: pulumi.Input<string>;
    /**
     * Principal type. Setting this argument empty (e.g., `principalType = ""`) will result in an error. Valid value is `IAM`. Default is `IAM`.
     */
    principalType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PrincipalPortfolioAssociation resource.
 */
export interface PrincipalPortfolioAssociationArgs {
    /**
     * Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
     */
    acceptLanguage?: pulumi.Input<string>;
    /**
     * Portfolio identifier.
     */
    portfolioId: pulumi.Input<string>;
    /**
     * Principal ARN.
     */
    principalArn: pulumi.Input<string>;
    /**
     * Principal type. Setting this argument empty (e.g., `principalType = ""`) will result in an error. Valid value is `IAM`. Default is `IAM`.
     */
    principalType?: pulumi.Input<string>;
}
