// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

import {RoutingRule} from "@/s3";

export * as accessanalyzer from "./accessanalyzer/input";
export * as acm from "./acm/input";
export * as acmpca from "./acmpca/input";
export * as alb from "./alb/input";
export * as amp from "./amp/input";
export * as amplify from "./amplify/input";
export * as apigateway from "./apigateway/input";
export * as apigatewayv2 from "./apigatewayv2/input";
export * as appautoscaling from "./appautoscaling/input";
export * as appconfig from "./appconfig/input";
export * as appflow from "./appflow/input";
export * as applicationloadbalancing from "./applicationloadbalancing/input";
export * as appmesh from "./appmesh/input";
export * as apprunner from "./apprunner/input";
export * as appstream from "./appstream/input";
export * as appsync from "./appsync/input";
export * as athena from "./athena/input";
export * as autoscaling from "./autoscaling/input";
export * as autoscalingplans from "./autoscalingplans/input";
export * as backup from "./backup/input";
export * as batch from "./batch/input";
export * as budgets from "./budgets/input";
export * as cfg from "./cfg/input";
export * as chime from "./chime/input";
export * as cloudformation from "./cloudformation/input";
export * as cloudfront from "./cloudfront/input";
export * as cloudhsmv2 from "./cloudhsmv2/input";
export * as cloudsearch from "./cloudsearch/input";
export * as cloudtrail from "./cloudtrail/input";
export * as cloudwatch from "./cloudwatch/input";
export * as codeartifact from "./codeartifact/input";
export * as codebuild from "./codebuild/input";
export * as codecommit from "./codecommit/input";
export * as codedeploy from "./codedeploy/input";
export * as codepipeline from "./codepipeline/input";
export * as codestarconnections from "./codestarconnections/input";
export * as codestarnotifications from "./codestarnotifications/input";
export * as cognito from "./cognito/input";
export * as comprehend from "./comprehend/input";
export * as config from "./config/input";
export * as connect from "./connect/input";
export * as costexplorer from "./costexplorer/input";
export * as datapipeline from "./datapipeline/input";
export * as datasync from "./datasync/input";
export * as dax from "./dax/input";
export * as devicefarm from "./devicefarm/input";
export * as directconnect from "./directconnect/input";
export * as directoryservice from "./directoryservice/input";
export * as dlm from "./dlm/input";
export * as dms from "./dms/input";
export * as docdb from "./docdb/input";
export * as dynamodb from "./dynamodb/input";
export * as ebs from "./ebs/input";
export * as ec2 from "./ec2/input";
export * as ec2clientvpn from "./ec2clientvpn/input";
export * as ec2transitgateway from "./ec2transitgateway/input";
export * as ecr from "./ecr/input";
export * as ecrpublic from "./ecrpublic/input";
export * as ecs from "./ecs/input";
export * as efs from "./efs/input";
export * as eks from "./eks/input";
export * as elasticache from "./elasticache/input";
export * as elasticbeanstalk from "./elasticbeanstalk/input";
export * as elasticloadbalancing from "./elasticloadbalancing/input";
export * as elasticloadbalancingv2 from "./elasticloadbalancingv2/input";
export * as elasticsearch from "./elasticsearch/input";
export * as elastictranscoder from "./elastictranscoder/input";
export * as elb from "./elb/input";
export * as emr from "./emr/input";
export * as emrcontainers from "./emrcontainers/input";
export * as emrserverless from "./emrserverless/input";
export * as evidently from "./evidently/input";
export * as fis from "./fis/input";
export * as fms from "./fms/input";
export * as fsx from "./fsx/input";
export * as gamelift from "./gamelift/input";
export * as glacier from "./glacier/input";
export * as globalaccelerator from "./globalaccelerator/input";
export * as glue from "./glue/input";
export * as guardduty from "./guardduty/input";
export * as iam from "./iam/input";
export * as identitystore from "./identitystore/input";
export * as imagebuilder from "./imagebuilder/input";
export * as inspector from "./inspector/input";
export * as inspector2 from "./inspector2/input";
export * as iot from "./iot/input";
export * as ivs from "./ivs/input";
export * as ivschat from "./ivschat/input";
export * as kendra from "./kendra/input";
export * as keyspaces from "./keyspaces/input";
export * as kinesis from "./kinesis/input";
export * as kinesisanalyticsv2 from "./kinesisanalyticsv2/input";
export * as kms from "./kms/input";
export * as lakeformation from "./lakeformation/input";
export * as lambda from "./lambda/input";
export * as lb from "./lb/input";
export * as lex from "./lex/input";
export * as lightsail from "./lightsail/input";
export * as location from "./location/input";
export * as macie from "./macie/input";
export * as macie2 from "./macie2/input";
export * as mediaconvert from "./mediaconvert/input";
export * as medialive from "./medialive/input";
export * as mediapackage from "./mediapackage/input";
export * as memorydb from "./memorydb/input";
export * as mq from "./mq/input";
export * as msk from "./msk/input";
export * as mskconnect from "./mskconnect/input";
export * as mwaa from "./mwaa/input";
export * as neptune from "./neptune/input";
export * as networkfirewall from "./networkfirewall/input";
export * as networkmanager from "./networkmanager/input";
export * as opensearch from "./opensearch/input";
export * as opsworks from "./opsworks/input";
export * as organizations from "./organizations/input";
export * as pinpoint from "./pinpoint/input";
export * as pricing from "./pricing/input";
export * as qldb from "./qldb/input";
export * as quicksight from "./quicksight/input";
export * as ram from "./ram/input";
export * as rds from "./rds/input";
export * as redshift from "./redshift/input";
export * as redshiftdata from "./redshiftdata/input";
export * as redshiftserverless from "./redshiftserverless/input";
export * as resourcegroups from "./resourcegroups/input";
export * as resourcegroupstaggingapi from "./resourcegroupstaggingapi/input";
export * as rolesanywhere from "./rolesanywhere/input";
export * as route53 from "./route53/input";
export * as route53domains from "./route53domains/input";
export * as route53recoverycontrol from "./route53recoverycontrol/input";
export * as route53recoveryreadiness from "./route53recoveryreadiness/input";
export * as rum from "./rum/input";
export * as s3 from "./s3/input";
export * as s3control from "./s3control/input";
export * as s3outposts from "./s3outposts/input";
export * as sagemaker from "./sagemaker/input";
export * as scheduler from "./scheduler/input";
export * as secretsmanager from "./secretsmanager/input";
export * as securityhub from "./securityhub/input";
export * as servicecatalog from "./servicecatalog/input";
export * as servicediscovery from "./servicediscovery/input";
export * as ses from "./ses/input";
export * as sesv2 from "./sesv2/input";
export * as sfn from "./sfn/input";
export * as signer from "./signer/input";
export * as ssm from "./ssm/input";
export * as ssoadmin from "./ssoadmin/input";
export * as storagegateway from "./storagegateway/input";
export * as synthetics from "./synthetics/input";
export * as timestreamwrite from "./timestreamwrite/input";
export * as transcribe from "./transcribe/input";
export * as transfer from "./transfer/input";
export * as waf from "./waf/input";
export * as wafregional from "./wafregional/input";
export * as wafv2 from "./wafv2/input";
export * as worklink from "./worklink/input";
export * as workspaces from "./workspaces/input";
export * as xray from "./xray/input";
export interface GetAmiFilter {
    /**
     * Name of the AMI that was provided during image creation.
     */
    name: string;
    values: string[];
}

export interface GetAmiFilterArgs {
    /**
     * Name of the AMI that was provided during image creation.
     */
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAmiIdsFilter {
    name: string;
    values: string[];
}

export interface GetAmiIdsFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAutoscalingGroupsFilter {
    /**
     * Name of the DescribeAutoScalingGroup filter. The recommended values are: `tag-key`, `tag-value`, and `tag:<tag name>`
     */
    name: string;
    /**
     * Value of the filter.
     */
    values: string[];
}

export interface GetAutoscalingGroupsFilterArgs {
    /**
     * Name of the DescribeAutoScalingGroup filter. The recommended values are: `tag-key`, `tag-value`, and `tag:<tag name>`
     */
    name: pulumi.Input<string>;
    /**
     * Value of the filter.
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAvailabilityZoneFilter {
    /**
     * Name of the filter field. Valid values can be found in the [EC2 DescribeAvailabilityZones API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAvailabilityZones.html).
     */
    name: string;
    /**
     * Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
     */
    values: string[];
}

export interface GetAvailabilityZoneFilterArgs {
    /**
     * Name of the filter field. Valid values can be found in the [EC2 DescribeAvailabilityZones API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAvailabilityZones.html).
     */
    name: pulumi.Input<string>;
    /**
     * Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAvailabilityZonesFilter {
    /**
     * Name of the filter field. Valid values can be found in the [EC2 DescribeAvailabilityZones API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAvailabilityZones.html).
     */
    name: string;
    /**
     * Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
     */
    values: string[];
}

export interface GetAvailabilityZonesFilterArgs {
    /**
     * Name of the filter field. Valid values can be found in the [EC2 DescribeAvailabilityZones API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAvailabilityZones.html).
     */
    name: pulumi.Input<string>;
    /**
     * Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetElasticIpFilter {
    name: string;
    values: string[];
}

export interface GetElasticIpFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetPrefixListFilter {
    /**
     * Name of the filter field. Valid values can be found in the [EC2 DescribePrefixLists API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribePrefixLists.html).
     */
    name: string;
    /**
     * Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
     */
    values: string[];
}

export interface GetPrefixListFilterArgs {
    /**
     * Name of the filter field. Valid values can be found in the [EC2 DescribePrefixLists API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribePrefixLists.html).
     */
    name: pulumi.Input<string>;
    /**
     * Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetRegionsFilter {
    /**
     * Name of the filter field. Valid values can be found in the [describe-regions AWS CLI Reference][1].
     */
    name: string;
    /**
     * Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
     */
    values: string[];
}

export interface GetRegionsFilterArgs {
    /**
     * Name of the filter field. Valid values can be found in the [describe-regions AWS CLI Reference][1].
     */
    name: pulumi.Input<string>;
    /**
     * Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ProviderAssumeRole {
    duration?: pulumi.Input<string>;
    /**
     * @deprecated Use assume_role.duration instead
     */
    durationSeconds?: pulumi.Input<number>;
    externalId?: pulumi.Input<string>;
    policy?: pulumi.Input<string>;
    policyArns?: pulumi.Input<pulumi.Input<string>[]>;
    roleArn?: pulumi.Input<string>;
    sessionName?: pulumi.Input<string>;
    sourceIdentity?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    transitiveTagKeys?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ProviderAssumeRoleWithWebIdentity {
    duration?: pulumi.Input<string>;
    policy?: pulumi.Input<string>;
    policyArns?: pulumi.Input<pulumi.Input<string>[]>;
    roleArn?: pulumi.Input<string>;
    sessionName?: pulumi.Input<string>;
    webIdentityToken?: pulumi.Input<string>;
    webIdentityTokenFile?: pulumi.Input<string>;
}

export interface ProviderDefaultTags {
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface ProviderEndpoint {
    accessanalyzer?: pulumi.Input<string>;
    account?: pulumi.Input<string>;
    acm?: pulumi.Input<string>;
    acmpca?: pulumi.Input<string>;
    alexaforbusiness?: pulumi.Input<string>;
    amg?: pulumi.Input<string>;
    amp?: pulumi.Input<string>;
    amplify?: pulumi.Input<string>;
    amplifybackend?: pulumi.Input<string>;
    amplifyuibuilder?: pulumi.Input<string>;
    apigateway?: pulumi.Input<string>;
    apigatewaymanagementapi?: pulumi.Input<string>;
    apigatewayv2?: pulumi.Input<string>;
    appautoscaling?: pulumi.Input<string>;
    appconfig?: pulumi.Input<string>;
    appconfigdata?: pulumi.Input<string>;
    appflow?: pulumi.Input<string>;
    appintegrations?: pulumi.Input<string>;
    appintegrationsservice?: pulumi.Input<string>;
    applicationautoscaling?: pulumi.Input<string>;
    applicationcostprofiler?: pulumi.Input<string>;
    applicationdiscovery?: pulumi.Input<string>;
    applicationdiscoveryservice?: pulumi.Input<string>;
    applicationinsights?: pulumi.Input<string>;
    appmesh?: pulumi.Input<string>;
    appregistry?: pulumi.Input<string>;
    apprunner?: pulumi.Input<string>;
    appstream?: pulumi.Input<string>;
    appsync?: pulumi.Input<string>;
    athena?: pulumi.Input<string>;
    auditmanager?: pulumi.Input<string>;
    augmentedairuntime?: pulumi.Input<string>;
    autoscaling?: pulumi.Input<string>;
    autoscalingplans?: pulumi.Input<string>;
    backup?: pulumi.Input<string>;
    backupgateway?: pulumi.Input<string>;
    batch?: pulumi.Input<string>;
    beanstalk?: pulumi.Input<string>;
    billingconductor?: pulumi.Input<string>;
    braket?: pulumi.Input<string>;
    budgets?: pulumi.Input<string>;
    ce?: pulumi.Input<string>;
    chime?: pulumi.Input<string>;
    chimesdkidentity?: pulumi.Input<string>;
    chimesdkmeetings?: pulumi.Input<string>;
    chimesdkmessaging?: pulumi.Input<string>;
    cloud9?: pulumi.Input<string>;
    cloudcontrol?: pulumi.Input<string>;
    cloudcontrolapi?: pulumi.Input<string>;
    clouddirectory?: pulumi.Input<string>;
    cloudformation?: pulumi.Input<string>;
    cloudfront?: pulumi.Input<string>;
    cloudhsm?: pulumi.Input<string>;
    cloudhsmv2?: pulumi.Input<string>;
    cloudsearch?: pulumi.Input<string>;
    cloudsearchdomain?: pulumi.Input<string>;
    cloudtrail?: pulumi.Input<string>;
    cloudwatch?: pulumi.Input<string>;
    cloudwatchevents?: pulumi.Input<string>;
    cloudwatchevidently?: pulumi.Input<string>;
    cloudwatchlog?: pulumi.Input<string>;
    cloudwatchlogs?: pulumi.Input<string>;
    cloudwatchrum?: pulumi.Input<string>;
    codeartifact?: pulumi.Input<string>;
    codebuild?: pulumi.Input<string>;
    codecommit?: pulumi.Input<string>;
    codedeploy?: pulumi.Input<string>;
    codeguruprofiler?: pulumi.Input<string>;
    codegurureviewer?: pulumi.Input<string>;
    codepipeline?: pulumi.Input<string>;
    codestar?: pulumi.Input<string>;
    codestarconnections?: pulumi.Input<string>;
    codestarnotifications?: pulumi.Input<string>;
    cognitoidentity?: pulumi.Input<string>;
    cognitoidentityprovider?: pulumi.Input<string>;
    cognitoidp?: pulumi.Input<string>;
    cognitosync?: pulumi.Input<string>;
    comprehend?: pulumi.Input<string>;
    comprehendmedical?: pulumi.Input<string>;
    computeoptimizer?: pulumi.Input<string>;
    config?: pulumi.Input<string>;
    configservice?: pulumi.Input<string>;
    connect?: pulumi.Input<string>;
    connectcontactlens?: pulumi.Input<string>;
    connectparticipant?: pulumi.Input<string>;
    connectwisdomservice?: pulumi.Input<string>;
    controltower?: pulumi.Input<string>;
    costandusagereportservice?: pulumi.Input<string>;
    costexplorer?: pulumi.Input<string>;
    cur?: pulumi.Input<string>;
    customerprofiles?: pulumi.Input<string>;
    databasemigration?: pulumi.Input<string>;
    databasemigrationservice?: pulumi.Input<string>;
    databrew?: pulumi.Input<string>;
    dataexchange?: pulumi.Input<string>;
    datapipeline?: pulumi.Input<string>;
    datasync?: pulumi.Input<string>;
    dax?: pulumi.Input<string>;
    deploy?: pulumi.Input<string>;
    detective?: pulumi.Input<string>;
    devicefarm?: pulumi.Input<string>;
    devopsguru?: pulumi.Input<string>;
    directconnect?: pulumi.Input<string>;
    directoryservice?: pulumi.Input<string>;
    discovery?: pulumi.Input<string>;
    dlm?: pulumi.Input<string>;
    dms?: pulumi.Input<string>;
    docdb?: pulumi.Input<string>;
    drs?: pulumi.Input<string>;
    ds?: pulumi.Input<string>;
    dynamodb?: pulumi.Input<string>;
    dynamodbstreams?: pulumi.Input<string>;
    ebs?: pulumi.Input<string>;
    ec2?: pulumi.Input<string>;
    ec2instanceconnect?: pulumi.Input<string>;
    ecr?: pulumi.Input<string>;
    ecrpublic?: pulumi.Input<string>;
    ecs?: pulumi.Input<string>;
    efs?: pulumi.Input<string>;
    eks?: pulumi.Input<string>;
    elasticache?: pulumi.Input<string>;
    elasticbeanstalk?: pulumi.Input<string>;
    elasticinference?: pulumi.Input<string>;
    elasticloadbalancing?: pulumi.Input<string>;
    elasticloadbalancingv2?: pulumi.Input<string>;
    elasticsearch?: pulumi.Input<string>;
    elasticsearchservice?: pulumi.Input<string>;
    elastictranscoder?: pulumi.Input<string>;
    elb?: pulumi.Input<string>;
    elbv2?: pulumi.Input<string>;
    emr?: pulumi.Input<string>;
    emrcontainers?: pulumi.Input<string>;
    emrserverless?: pulumi.Input<string>;
    es?: pulumi.Input<string>;
    eventbridge?: pulumi.Input<string>;
    events?: pulumi.Input<string>;
    evidently?: pulumi.Input<string>;
    finspace?: pulumi.Input<string>;
    finspacedata?: pulumi.Input<string>;
    firehose?: pulumi.Input<string>;
    fis?: pulumi.Input<string>;
    fms?: pulumi.Input<string>;
    forecast?: pulumi.Input<string>;
    forecastquery?: pulumi.Input<string>;
    forecastqueryservice?: pulumi.Input<string>;
    forecastservice?: pulumi.Input<string>;
    frauddetector?: pulumi.Input<string>;
    fsx?: pulumi.Input<string>;
    gamelift?: pulumi.Input<string>;
    glacier?: pulumi.Input<string>;
    globalaccelerator?: pulumi.Input<string>;
    glue?: pulumi.Input<string>;
    gluedatabrew?: pulumi.Input<string>;
    grafana?: pulumi.Input<string>;
    greengrass?: pulumi.Input<string>;
    greengrassv2?: pulumi.Input<string>;
    groundstation?: pulumi.Input<string>;
    guardduty?: pulumi.Input<string>;
    health?: pulumi.Input<string>;
    healthlake?: pulumi.Input<string>;
    honeycode?: pulumi.Input<string>;
    iam?: pulumi.Input<string>;
    identitystore?: pulumi.Input<string>;
    imagebuilder?: pulumi.Input<string>;
    inspector?: pulumi.Input<string>;
    inspector2?: pulumi.Input<string>;
    inspectorv2?: pulumi.Input<string>;
    iot?: pulumi.Input<string>;
    iot1clickdevices?: pulumi.Input<string>;
    iot1clickdevicesservice?: pulumi.Input<string>;
    iot1clickprojects?: pulumi.Input<string>;
    iotanalytics?: pulumi.Input<string>;
    iotdata?: pulumi.Input<string>;
    iotdataplane?: pulumi.Input<string>;
    iotdeviceadvisor?: pulumi.Input<string>;
    iotevents?: pulumi.Input<string>;
    ioteventsdata?: pulumi.Input<string>;
    iotfleethub?: pulumi.Input<string>;
    iotjobsdata?: pulumi.Input<string>;
    iotjobsdataplane?: pulumi.Input<string>;
    iotsecuretunneling?: pulumi.Input<string>;
    iotsitewise?: pulumi.Input<string>;
    iotthingsgraph?: pulumi.Input<string>;
    iottwinmaker?: pulumi.Input<string>;
    iotwireless?: pulumi.Input<string>;
    ivs?: pulumi.Input<string>;
    ivschat?: pulumi.Input<string>;
    kafka?: pulumi.Input<string>;
    kafkaconnect?: pulumi.Input<string>;
    kendra?: pulumi.Input<string>;
    keyspaces?: pulumi.Input<string>;
    kinesis?: pulumi.Input<string>;
    kinesisanalytics?: pulumi.Input<string>;
    kinesisanalyticsv2?: pulumi.Input<string>;
    kinesisvideo?: pulumi.Input<string>;
    kinesisvideoarchivedmedia?: pulumi.Input<string>;
    kinesisvideomedia?: pulumi.Input<string>;
    kinesisvideosignaling?: pulumi.Input<string>;
    kinesisvideosignalingchannels?: pulumi.Input<string>;
    kms?: pulumi.Input<string>;
    lakeformation?: pulumi.Input<string>;
    lambda?: pulumi.Input<string>;
    lex?: pulumi.Input<string>;
    lexmodelbuilding?: pulumi.Input<string>;
    lexmodelbuildingservice?: pulumi.Input<string>;
    lexmodels?: pulumi.Input<string>;
    lexmodelsv2?: pulumi.Input<string>;
    lexruntime?: pulumi.Input<string>;
    lexruntimeservice?: pulumi.Input<string>;
    lexruntimev2?: pulumi.Input<string>;
    lexv2models?: pulumi.Input<string>;
    lexv2runtime?: pulumi.Input<string>;
    licensemanager?: pulumi.Input<string>;
    lightsail?: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    locationservice?: pulumi.Input<string>;
    logs?: pulumi.Input<string>;
    lookoutequipment?: pulumi.Input<string>;
    lookoutforvision?: pulumi.Input<string>;
    lookoutmetrics?: pulumi.Input<string>;
    lookoutvision?: pulumi.Input<string>;
    machinelearning?: pulumi.Input<string>;
    macie?: pulumi.Input<string>;
    macie2?: pulumi.Input<string>;
    managedblockchain?: pulumi.Input<string>;
    managedgrafana?: pulumi.Input<string>;
    marketplacecatalog?: pulumi.Input<string>;
    marketplacecommerceanalytics?: pulumi.Input<string>;
    marketplaceentitlement?: pulumi.Input<string>;
    marketplaceentitlementservice?: pulumi.Input<string>;
    marketplacemetering?: pulumi.Input<string>;
    mediaconnect?: pulumi.Input<string>;
    mediaconvert?: pulumi.Input<string>;
    medialive?: pulumi.Input<string>;
    mediapackage?: pulumi.Input<string>;
    mediapackagevod?: pulumi.Input<string>;
    mediastore?: pulumi.Input<string>;
    mediastoredata?: pulumi.Input<string>;
    mediatailor?: pulumi.Input<string>;
    memorydb?: pulumi.Input<string>;
    meteringmarketplace?: pulumi.Input<string>;
    mgh?: pulumi.Input<string>;
    mgn?: pulumi.Input<string>;
    migrationhub?: pulumi.Input<string>;
    migrationhubconfig?: pulumi.Input<string>;
    migrationhubrefactorspaces?: pulumi.Input<string>;
    migrationhubstrategy?: pulumi.Input<string>;
    migrationhubstrategyrecommendations?: pulumi.Input<string>;
    mobile?: pulumi.Input<string>;
    mq?: pulumi.Input<string>;
    msk?: pulumi.Input<string>;
    mturk?: pulumi.Input<string>;
    mwaa?: pulumi.Input<string>;
    neptune?: pulumi.Input<string>;
    networkfirewall?: pulumi.Input<string>;
    networkmanager?: pulumi.Input<string>;
    nimble?: pulumi.Input<string>;
    nimblestudio?: pulumi.Input<string>;
    opensearch?: pulumi.Input<string>;
    opensearchservice?: pulumi.Input<string>;
    opsworks?: pulumi.Input<string>;
    opsworkscm?: pulumi.Input<string>;
    organizations?: pulumi.Input<string>;
    outposts?: pulumi.Input<string>;
    panorama?: pulumi.Input<string>;
    personalize?: pulumi.Input<string>;
    personalizeevents?: pulumi.Input<string>;
    personalizeruntime?: pulumi.Input<string>;
    pi?: pulumi.Input<string>;
    pinpoint?: pulumi.Input<string>;
    pinpointemail?: pulumi.Input<string>;
    pinpointsmsvoice?: pulumi.Input<string>;
    polly?: pulumi.Input<string>;
    pricing?: pulumi.Input<string>;
    prometheus?: pulumi.Input<string>;
    prometheusservice?: pulumi.Input<string>;
    proton?: pulumi.Input<string>;
    qldb?: pulumi.Input<string>;
    qldbsession?: pulumi.Input<string>;
    quicksight?: pulumi.Input<string>;
    ram?: pulumi.Input<string>;
    rbin?: pulumi.Input<string>;
    rds?: pulumi.Input<string>;
    rdsdata?: pulumi.Input<string>;
    rdsdataservice?: pulumi.Input<string>;
    recyclebin?: pulumi.Input<string>;
    redshift?: pulumi.Input<string>;
    redshiftdata?: pulumi.Input<string>;
    redshiftdataapiservice?: pulumi.Input<string>;
    redshiftserverless?: pulumi.Input<string>;
    rekognition?: pulumi.Input<string>;
    resiliencehub?: pulumi.Input<string>;
    resourceexplorer2?: pulumi.Input<string>;
    resourcegroups?: pulumi.Input<string>;
    resourcegroupstagging?: pulumi.Input<string>;
    resourcegroupstaggingapi?: pulumi.Input<string>;
    robomaker?: pulumi.Input<string>;
    rolesanywhere?: pulumi.Input<string>;
    route53?: pulumi.Input<string>;
    route53domains?: pulumi.Input<string>;
    route53recoverycluster?: pulumi.Input<string>;
    route53recoverycontrolconfig?: pulumi.Input<string>;
    route53recoveryreadiness?: pulumi.Input<string>;
    route53resolver?: pulumi.Input<string>;
    rum?: pulumi.Input<string>;
    s3?: pulumi.Input<string>;
    s3api?: pulumi.Input<string>;
    s3control?: pulumi.Input<string>;
    s3outposts?: pulumi.Input<string>;
    sagemaker?: pulumi.Input<string>;
    sagemakera2iruntime?: pulumi.Input<string>;
    sagemakeredge?: pulumi.Input<string>;
    sagemakeredgemanager?: pulumi.Input<string>;
    sagemakerfeaturestoreruntime?: pulumi.Input<string>;
    sagemakerruntime?: pulumi.Input<string>;
    savingsplans?: pulumi.Input<string>;
    scheduler?: pulumi.Input<string>;
    schemas?: pulumi.Input<string>;
    sdb?: pulumi.Input<string>;
    secretsmanager?: pulumi.Input<string>;
    securityhub?: pulumi.Input<string>;
    serverlessapplicationrepository?: pulumi.Input<string>;
    serverlessapprepo?: pulumi.Input<string>;
    serverlessrepo?: pulumi.Input<string>;
    servicecatalog?: pulumi.Input<string>;
    servicecatalogappregistry?: pulumi.Input<string>;
    servicediscovery?: pulumi.Input<string>;
    servicequotas?: pulumi.Input<string>;
    ses?: pulumi.Input<string>;
    sesv2?: pulumi.Input<string>;
    sfn?: pulumi.Input<string>;
    shield?: pulumi.Input<string>;
    signer?: pulumi.Input<string>;
    simpledb?: pulumi.Input<string>;
    sms?: pulumi.Input<string>;
    snowball?: pulumi.Input<string>;
    snowdevicemanagement?: pulumi.Input<string>;
    sns?: pulumi.Input<string>;
    sqs?: pulumi.Input<string>;
    ssm?: pulumi.Input<string>;
    ssmcontacts?: pulumi.Input<string>;
    ssmincidents?: pulumi.Input<string>;
    sso?: pulumi.Input<string>;
    ssoadmin?: pulumi.Input<string>;
    ssooidc?: pulumi.Input<string>;
    stepfunctions?: pulumi.Input<string>;
    storagegateway?: pulumi.Input<string>;
    sts?: pulumi.Input<string>;
    support?: pulumi.Input<string>;
    swf?: pulumi.Input<string>;
    synthetics?: pulumi.Input<string>;
    textract?: pulumi.Input<string>;
    timestreamquery?: pulumi.Input<string>;
    timestreamwrite?: pulumi.Input<string>;
    transcribe?: pulumi.Input<string>;
    transcribeservice?: pulumi.Input<string>;
    transcribestreaming?: pulumi.Input<string>;
    transcribestreamingservice?: pulumi.Input<string>;
    transfer?: pulumi.Input<string>;
    translate?: pulumi.Input<string>;
    voiceid?: pulumi.Input<string>;
    waf?: pulumi.Input<string>;
    wafregional?: pulumi.Input<string>;
    wafv2?: pulumi.Input<string>;
    wellarchitected?: pulumi.Input<string>;
    wisdom?: pulumi.Input<string>;
    workdocs?: pulumi.Input<string>;
    worklink?: pulumi.Input<string>;
    workmail?: pulumi.Input<string>;
    workmailmessageflow?: pulumi.Input<string>;
    workspaces?: pulumi.Input<string>;
    workspacesweb?: pulumi.Input<string>;
    xray?: pulumi.Input<string>;
}

export interface ProviderIgnoreTags {
    keyPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    keys?: pulumi.Input<pulumi.Input<string>[]>;
}
