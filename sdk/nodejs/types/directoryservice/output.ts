// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

import {RoutingRule} from "@/s3";

export interface DirectoryConnectSettings {
    availabilityZones: string[];
    /**
     * The IP addresses of the AD Connector servers.
     */
    connectIps: string[];
    /**
     * The DNS IP addresses of the domain to connect to.
     */
    customerDnsIps: string[];
    /**
     * The username corresponding to the password provided.
     */
    customerUsername: string;
    /**
     * The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
     */
    subnetIds: string[];
    /**
     * The identifier of the VPC that the directory is in.
     */
    vpcId: string;
}

export interface DirectoryVpcSettings {
    availabilityZones: string[];
    /**
     * The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
     */
    subnetIds: string[];
    /**
     * The identifier of the VPC that the directory is in.
     */
    vpcId: string;
}

export interface GetDirectoryConnectSetting {
    availabilityZones: string[];
    /**
     * IP addresses of the AD Connector servers.
     */
    connectIps: string[];
    /**
     * DNS IP addresses of the domain to connect to.
     */
    customerDnsIps: string[];
    /**
     * Username corresponding to the password provided.
     */
    customerUsername: string;
    /**
     * Identifiers of the subnets for the connector servers (2 subnets in 2 different AZs).
     */
    subnetIds: string[];
    /**
     * ID of the VPC that the connector is in.
     */
    vpcId: string;
}

export interface GetDirectoryRadiusSetting {
    /**
     * The protocol specified for your RADIUS endpoints.
     */
    authenticationProtocol: string;
    /**
     * Display label.
     */
    displayLabel: string;
    /**
     * Port that your RADIUS server is using for communications.
     */
    radiusPort: number;
    /**
     * Maximum number of times that communication with the RADIUS server is attempted.
     */
    radiusRetries: number;
    /**
     * Set of strings that contains the fully qualified domain name (FQDN) or IP addresses of the RADIUS server endpoints, or the FQDN or IP addresses of your RADIUS server load balancer.
     */
    radiusServers: string[];
    /**
     * Amount of time, in seconds, to wait for the RADIUS server to respond.
     */
    radiusTimeout: number;
    /**
     * Not currently used.
     */
    useSameUsername: boolean;
}

export interface GetDirectoryVpcSetting {
    availabilityZones: string[];
    /**
     * Identifiers of the subnets for the connector servers (2 subnets in 2 different AZs).
     */
    subnetIds: string[];
    /**
     * ID of the VPC that the connector is in.
     */
    vpcId: string;
}

export interface ServiceRegionVpcSettings {
    /**
     * The identifiers of the subnets for the directory servers.
     */
    subnetIds: string[];
    /**
     * The identifier of the VPC in which to create the directory.
     */
    vpcId: string;
}

export interface SharedDirectoryTarget {
    /**
     * Identifier of the directory consumer account.
     */
    id: string;
    /**
     * Type of identifier to be used in the `id` field. Valid value is `ACCOUNT`. Default is `ACCOUNT`.
     */
    type?: string;
}

