// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

import {RoutingRule} from "@/s3";

export interface AssociationOutputLocation {
    /**
     * The S3 bucket name.
     */
    s3BucketName: pulumi.Input<string>;
    /**
     * The S3 bucket prefix. Results stored in the root if not configured.
     */
    s3KeyPrefix?: pulumi.Input<string>;
    /**
     * The S3 bucket region.
     */
    s3Region?: pulumi.Input<string>;
}

export interface AssociationTarget {
    /**
     * Either `InstanceIds` or `tag:Tag Name` to specify an EC2 tag.
     */
    key: pulumi.Input<string>;
    /**
     * A list of instance IDs or tag values. AWS currently limits this list size to one value.
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DocumentAttachmentsSource {
    /**
     * The key describing the location of an attachment to a document. Valid key types include: `SourceUrl` and `S3FileUrl`
     */
    key: pulumi.Input<string>;
    /**
     * The name of the document attachment file
     */
    name?: pulumi.Input<string>;
    /**
     * The value describing the location of an attachment to a document
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DocumentParameter {
    defaultValue?: pulumi.Input<string>;
    /**
     * The description of the document.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the document.
     */
    name?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface GetInstancesFilter {
    /**
     * Name of the filter field. Valid values can be found in the [SSM InstanceInformationStringFilter API Reference](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_InstanceInformationStringFilter.html).
     */
    name: string;
    /**
     * Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
     */
    values: string[];
}

export interface GetInstancesFilterArgs {
    /**
     * Name of the filter field. Valid values can be found in the [SSM InstanceInformationStringFilter API Reference](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_InstanceInformationStringFilter.html).
     */
    name: pulumi.Input<string>;
    /**
     * Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMaintenanceWindowsFilter {
    /**
     * Name of the filter field. Valid values can be found in the [SSM DescribeMaintenanceWindows API Reference](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_DescribeMaintenanceWindows.html#API_DescribeMaintenanceWindows_RequestSyntax).
     */
    name: string;
    /**
     * Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
     */
    values: string[];
}

export interface GetMaintenanceWindowsFilterArgs {
    /**
     * Name of the filter field. Valid values can be found in the [SSM DescribeMaintenanceWindows API Reference](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_DescribeMaintenanceWindows.html#API_DescribeMaintenanceWindows_RequestSyntax).
     */
    name: pulumi.Input<string>;
    /**
     * Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MaintenanceWindowTargetTarget {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MaintenanceWindowTaskTarget {
    key: pulumi.Input<string>;
    /**
     * The array of strings.
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MaintenanceWindowTaskTaskInvocationParameters {
    /**
     * The parameters for an AUTOMATION task type. Documented below.
     */
    automationParameters?: pulumi.Input<inputs.ssm.MaintenanceWindowTaskTaskInvocationParametersAutomationParameters>;
    /**
     * The parameters for a LAMBDA task type. Documented below.
     */
    lambdaParameters?: pulumi.Input<inputs.ssm.MaintenanceWindowTaskTaskInvocationParametersLambdaParameters>;
    /**
     * The parameters for a RUN_COMMAND task type. Documented below.
     */
    runCommandParameters?: pulumi.Input<inputs.ssm.MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters>;
    /**
     * The parameters for a STEP_FUNCTIONS task type. Documented below.
     */
    stepFunctionsParameters?: pulumi.Input<inputs.ssm.MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParameters>;
}

export interface MaintenanceWindowTaskTaskInvocationParametersAutomationParameters {
    /**
     * The version of an Automation document to use during task execution.
     */
    documentVersion?: pulumi.Input<string>;
    /**
     * The parameters for the RUN_COMMAND task execution. Documented below.
     */
    parameters?: pulumi.Input<pulumi.Input<inputs.ssm.MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameter>[]>;
}

export interface MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameter {
    /**
     * The parameter name.
     */
    name: pulumi.Input<string>;
    /**
     * The array of strings.
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MaintenanceWindowTaskTaskInvocationParametersLambdaParameters {
    /**
     * Pass client-specific information to the Lambda function that you are invoking.
     */
    clientContext?: pulumi.Input<string>;
    /**
     * JSON to provide to your Lambda function as input.
     */
    payload?: pulumi.Input<string>;
    /**
     * Specify a Lambda function version or alias name.
     */
    qualifier?: pulumi.Input<string>;
}

export interface MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters {
    /**
     * Configuration options for sending command output to CloudWatch Logs. Documented below.
     */
    cloudwatchConfig?: pulumi.Input<inputs.ssm.MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfig>;
    /**
     * Information about the command(s) to execute.
     */
    comment?: pulumi.Input<string>;
    /**
     * The SHA-256 or SHA-1 hash created by the system when the document was created. SHA-1 hashes have been deprecated.
     */
    documentHash?: pulumi.Input<string>;
    /**
     * SHA-256 or SHA-1. SHA-1 hashes have been deprecated. Valid values: `Sha256` and `Sha1`
     */
    documentHashType?: pulumi.Input<string>;
    /**
     * The version of an Automation document to use during task execution.
     */
    documentVersion?: pulumi.Input<string>;
    /**
     * Configurations for sending notifications about command status changes on a per-instance basis. Documented below.
     */
    notificationConfig?: pulumi.Input<inputs.ssm.MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfig>;
    /**
     * The name of the Amazon S3 bucket.
     */
    outputS3Bucket?: pulumi.Input<string>;
    /**
     * The Amazon S3 bucket subfolder.
     */
    outputS3KeyPrefix?: pulumi.Input<string>;
    /**
     * The parameters for the RUN_COMMAND task execution. Documented below.
     */
    parameters?: pulumi.Input<pulumi.Input<inputs.ssm.MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameter>[]>;
    /**
     * The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) service role to use to publish Amazon Simple Notification Service (Amazon SNS) notifications for maintenance window Run Command tasks.
     */
    serviceRoleArn?: pulumi.Input<string>;
    /**
     * If this time is reached and the command has not already started executing, it doesn't run.
     */
    timeoutSeconds?: pulumi.Input<number>;
}

export interface MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfig {
    /**
     * The name of the CloudWatch log group where you want to send command output. If you don't specify a group name, Systems Manager automatically creates a log group for you. The log group uses the following naming format: aws/ssm/SystemsManagerDocumentName.
     */
    cloudwatchLogGroupName?: pulumi.Input<string>;
    /**
     * Enables Systems Manager to send command output to CloudWatch Logs.
     */
    cloudwatchOutputEnabled?: pulumi.Input<boolean>;
}

export interface MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfig {
    /**
     * An Amazon Resource Name (ARN) for a Simple Notification Service (SNS) topic. Run Command pushes notifications about command status changes to this topic.
     */
    notificationArn?: pulumi.Input<string>;
    /**
     * The different events for which you can receive notifications. Valid values: `All`, `InProgress`, `Success`, `TimedOut`, `Cancelled`, and `Failed`
     */
    notificationEvents?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When specified with `Command`, receive notification when the status of a command changes. When specified with `Invocation`, for commands sent to multiple instances, receive notification on a per-instance basis when the status of a command changes. Valid values: `Command` and `Invocation`
     */
    notificationType?: pulumi.Input<string>;
}

export interface MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameter {
    /**
     * The parameter name.
     */
    name: pulumi.Input<string>;
    /**
     * The array of strings.
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParameters {
    /**
     * The inputs for the STEP_FUNCTION task.
     */
    input?: pulumi.Input<string>;
    /**
     * The name of the STEP_FUNCTION task.
     */
    name?: pulumi.Input<string>;
}

export interface PatchBaselineApprovalRule {
    /**
     * The number of days after the release date of each patch matched by the rule the patch is marked as approved in the patch baseline.
     * Valid Range: 0 to 100.
     * Conflicts with `approveUntilDate`.
     */
    approveAfterDays?: pulumi.Input<number>;
    /**
     * The cutoff date for auto approval of released patches.
     * Any patches released on or before this date are installed automatically.
     * Date is formatted as `YYYY-MM-DD`.
     * Conflicts with `approveAfterDays`
     */
    approveUntilDate?: pulumi.Input<string>;
    /**
     * The compliance level for patches approved by this rule.
     * Valid values are `CRITICAL`, `HIGH`, `MEDIUM`, `LOW`, `INFORMATIONAL`, and `UNSPECIFIED`.
     * The default value is `UNSPECIFIED`.
     */
    complianceLevel?: pulumi.Input<string>;
    /**
     * Boolean enabling the application of non-security updates.
     * The default value is `false`.
     * Valid for Linux instances only.
     */
    enableNonSecurity?: pulumi.Input<boolean>;
    /**
     * The patch filter group that defines the criteria for the rule.
     * Up to 5 patch filters can be specified per approval rule using Key/Value pairs.
     * Valid combinations of these Keys and the `operatingSystem` value can be found in the [SSM DescribePatchProperties API Reference](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_DescribePatchProperties.html).
     * Valid Values are exact values for the patch property given as the key, or a wildcard `*`, which matches all values.
     */
    patchFilters: pulumi.Input<pulumi.Input<inputs.ssm.PatchBaselineApprovalRulePatchFilter>[]>;
}

export interface PatchBaselineApprovalRulePatchFilter {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PatchBaselineGlobalFilter {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PatchBaselineSource {
    /**
     * The value of the yum repo configuration.
     * For information about other options available for your yum repository configuration, see the [`dnf.conf` documentation](https://man7.org/linux/man-pages/man5/dnf.conf.5.html)
     */
    configuration: pulumi.Input<string>;
    /**
     * The name specified to identify the patch source.
     */
    name: pulumi.Input<string>;
    /**
     * The specific operating system versions a patch repository applies to, such as `"Ubuntu16.04"`, `"AmazonLinux2016.09"`, `"RedhatEnterpriseLinux7.2"` or `"Suse12.7"`.
     * For lists of supported product values, see [PatchFilter](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_PatchFilter.html).
     */
    products: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ResourceDataSyncS3Destination {
    /**
     * Name of S3 bucket where the aggregated data is stored.
     */
    bucketName: pulumi.Input<string>;
    /**
     * ARN of an encryption key for a destination in Amazon S3.
     */
    kmsKeyArn?: pulumi.Input<string>;
    /**
     * Prefix for the bucket.
     */
    prefix?: pulumi.Input<string>;
    /**
     * Region with the bucket targeted by the Resource Data Sync.
     */
    region: pulumi.Input<string>;
    /**
     * A supported sync format. Only JsonSerDe is currently supported. Defaults to JsonSerDe.
     */
    syncFormat?: pulumi.Input<string>;
}
