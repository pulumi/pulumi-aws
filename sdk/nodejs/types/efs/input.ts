// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

import {RoutingRule} from "@/s3";

export interface AccessPointPosixUser {
    /**
     * POSIX group ID used for all file system operations using this access point.
     */
    gid: pulumi.Input<number>;
    /**
     * Secondary POSIX group IDs used for all file system operations using this access point.
     */
    secondaryGids?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * POSIX user ID used for all file system operations using this access point.
     */
    uid: pulumi.Input<number>;
}

export interface AccessPointRootDirectory {
    /**
     * POSIX IDs and permissions to apply to the access point's Root Directory. See Creation Info below.
     */
    creationInfo?: pulumi.Input<inputs.efs.AccessPointRootDirectoryCreationInfo>;
    /**
     * Path on the EFS file system to expose as the root directory to NFS clients using the access point to access the EFS file system. A path can have up to four subdirectories. If the specified path does not exist, you are required to provide `creationInfo`.
     */
    path?: pulumi.Input<string>;
}

export interface AccessPointRootDirectoryCreationInfo {
    /**
     * POSIX group ID to apply to the `rootDirectory`.
     */
    ownerGid: pulumi.Input<number>;
    /**
     * POSIX user ID to apply to the `rootDirectory`.
     */
    ownerUid: pulumi.Input<number>;
    /**
     * POSIX permissions to apply to the RootDirectory, in the format of an octal number representing the file's mode bits.
     */
    permissions: pulumi.Input<string>;
}

export interface BackupPolicyBackupPolicy {
    /**
     * A status of the backup policy. Valid values: `ENABLED`, `DISABLED`.
     */
    status: pulumi.Input<string>;
}

export interface FileSystemLifecyclePolicy {
    /**
     * Indicates how long it takes to transition files to the IA storage class. Valid values: `AFTER_1_DAY`, `AFTER_7_DAYS`, `AFTER_14_DAYS`, `AFTER_30_DAYS`, `AFTER_60_DAYS`, or `AFTER_90_DAYS`.
     */
    transitionToIa?: pulumi.Input<string>;
    /**
     * Describes the policy used to transition a file from infequent access storage to primary storage. Valid values: `AFTER_1_ACCESS`.
     */
    transitionToPrimaryStorageClass?: pulumi.Input<string>;
}

export interface FileSystemSizeInByte {
    /**
     * The latest known metered size (in bytes) of data stored in the file system.
     */
    value?: pulumi.Input<number>;
    /**
     * The latest known metered size (in bytes) of data stored in the Infrequent Access storage class.
     */
    valueInIa?: pulumi.Input<number>;
    /**
     * The latest known metered size (in bytes) of data stored in the Standard storage class.
     */
    valueInStandard?: pulumi.Input<number>;
}

export interface ReplicationConfigurationDestination {
    /**
     * The availability zone in which the replica should be created. If specified, the replica will be created with One Zone storage. If omitted, regional storage will be used.
     */
    availabilityZoneName?: pulumi.Input<string>;
    fileSystemId?: pulumi.Input<string>;
    /**
     * The Key ID, ARN, alias, or alias ARN of the KMS key that should be used to encrypt the replica file system. If omitted, the default KMS key for EFS `/aws/elasticfilesystem` will be used.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * The region in which the replica should be created.
     */
    region?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}
