// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

import {RoutingRule} from "@/s3";

export interface CertificateDomainValidationOption {
    /**
     * A domain name for which the certificate should be issued.
     */
    domainName?: pulumi.Input<string>;
    resourceRecordName?: pulumi.Input<string>;
    resourceRecordType?: pulumi.Input<string>;
    resourceRecordValue?: pulumi.Input<string>;
}

export interface ContainerServiceDeploymentVersionContainer {
    /**
     * The launch command for the container. A list of string.
     */
    commands?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name for the container.
     */
    containerName: pulumi.Input<string>;
    /**
     * A key-value map of the environment variables of the container.
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the image used for the container. Container images sourced from your Lightsail container service, that are registered and stored on your service, start with a colon (`:`). For example, `:container-service-1.mystaticwebsite.1`. Container images sourced from a public registry like Docker Hub don't start with a colon. For example, `nginx:latest` or `nginx`.
     */
    image: pulumi.Input<string>;
    /**
     * A key-value map of the open firewall ports of the container. Valid values: `HTTP`, `HTTPS`, `TCP`, `UDP`.
     */
    ports?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface ContainerServiceDeploymentVersionPublicEndpoint {
    /**
     * The name of the container for the endpoint.
     */
    containerName: pulumi.Input<string>;
    /**
     * The port of the container to which traffic is forwarded to.
     */
    containerPort: pulumi.Input<number>;
    /**
     * A configuration block that describes the health check configuration of the container. Detailed below.
     */
    healthCheck: pulumi.Input<inputs.lightsail.ContainerServiceDeploymentVersionPublicEndpointHealthCheck>;
}

export interface ContainerServiceDeploymentVersionPublicEndpointHealthCheck {
    /**
     * The number of consecutive health checks successes required before moving the container to the Healthy state. Defaults to 2.
     */
    healthyThreshold?: pulumi.Input<number>;
    /**
     * The approximate interval, in seconds, between health checks of an individual container. You can specify between 5 and 300 seconds. Defaults to 5.
     */
    intervalSeconds?: pulumi.Input<number>;
    /**
     * The path on the container on which to perform the health check. Defaults to "/".
     */
    path?: pulumi.Input<string>;
    /**
     * The HTTP codes to use when checking for a successful response from a container. You can specify values between 200 and 499. Defaults to "200-499".
     */
    successCodes?: pulumi.Input<string>;
    /**
     * The amount of time, in seconds, during which no response means a failed health check. You can specify between 2 and 60 seconds. Defaults to 2.
     */
    timeoutSeconds?: pulumi.Input<number>;
    /**
     * The number of consecutive health checks failures required before moving the container to the Unhealthy state. Defaults to 2.
     */
    unhealthyThreshold?: pulumi.Input<number>;
}

export interface ContainerServicePrivateRegistryAccess {
    /**
     * Describes a request to configure an Amazon Lightsail container service to access private container image repositories, such as Amazon Elastic Container Registry (Amazon ECR) private repositories. See ECR Image Puller Role below for more details.
     */
    ecrImagePullerRole?: pulumi.Input<inputs.lightsail.ContainerServicePrivateRegistryAccessEcrImagePullerRole>;
}

export interface ContainerServicePrivateRegistryAccessEcrImagePullerRole {
    /**
     * A Boolean value that indicates whether to activate the role. The default is `false`.
     */
    isActive?: pulumi.Input<boolean>;
    principalArn?: pulumi.Input<string>;
}

export interface ContainerServicePublicDomainNames {
    certificates: pulumi.Input<pulumi.Input<inputs.lightsail.ContainerServicePublicDomainNamesCertificate>[]>;
}

export interface ContainerServicePublicDomainNamesCertificate {
    certificateName: pulumi.Input<string>;
    domainNames: pulumi.Input<pulumi.Input<string>[]>;
}

export interface InstancePublicPortsPortInfo {
    /**
     * Set of CIDR blocks.
     */
    cidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * First port in a range of open ports on an instance.
     */
    fromPort: pulumi.Input<number>;
    ipv6Cidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * IP protocol name. Valid values are `tcp`, `all`, `udp`, and `icmp`.
     */
    protocol: pulumi.Input<string>;
    /**
     * Last port in a range of open ports on an instance.
     */
    toPort: pulumi.Input<number>;
}

export interface LbCertificateDomainValidationRecord {
    /**
     * The domain name (e.g., example.com) for your SSL/TLS certificate.
     */
    domainName?: pulumi.Input<string>;
    resourceRecordName?: pulumi.Input<string>;
    resourceRecordType?: pulumi.Input<string>;
    resourceRecordValue?: pulumi.Input<string>;
}
