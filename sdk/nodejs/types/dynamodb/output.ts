// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

import {RoutingRule} from "@/s3";

export interface GetTableAttribute {
    /**
     * Name of the DynamoDB table.
     */
    name: string;
    type: string;
}

export interface GetTableGlobalSecondaryIndex {
    hashKey: string;
    /**
     * Name of the DynamoDB table.
     */
    name: string;
    nonKeyAttributes: string[];
    projectionType: string;
    rangeKey: string;
    readCapacity: number;
    writeCapacity: number;
}

export interface GetTableLocalSecondaryIndex {
    /**
     * Name of the DynamoDB table.
     */
    name: string;
    nonKeyAttributes: string[];
    projectionType: string;
    rangeKey: string;
}

export interface GetTablePointInTimeRecovery {
    enabled: boolean;
}

export interface GetTableReplica {
    kmsKeyArn: string;
    regionName: string;
}

export interface GetTableServerSideEncryption {
    enabled: boolean;
    kmsKeyArn: string;
}

export interface GetTableTtl {
    attributeName: string;
    enabled: boolean;
}

export interface GlobalTableReplica {
    /**
     * AWS region name of replica DynamoDB TableE.g., `us-east-1`
     */
    regionName: string;
}

export interface TableAttribute {
    /**
     * Name of the index
     */
    name: string;
    /**
     * Attribute type. Valid values are `S` (string), `N` (number), `B` (binary).
     */
    type: string;
}

export interface TableGlobalSecondaryIndex {
    /**
     * Name of the hash key in the index; must be defined as an attribute in the resource.
     */
    hashKey: string;
    /**
     * Name of the index
     */
    name: string;
    /**
     * Only required with `INCLUDE` as a projection type; a list of attributes to project into the index. These do not need to be defined as attributes on the table.
     */
    nonKeyAttributes?: string[];
    /**
     * One of `ALL`, `INCLUDE` or `KEYS_ONLY` where `ALL` projects every attribute into the index, `KEYS_ONLY` projects  into the index only the table and index hashKey and sortKey attributes ,  `INCLUDE` projects into the index all of the attributes that are defined in `nonKeyAttributes` in addition to the attributes that that`KEYS_ONLY` project.
     */
    projectionType: string;
    /**
     * Name of the range key.
     */
    rangeKey?: string;
    /**
     * Number of read units for this index. Must be set if billingMode is set to PROVISIONED.
     */
    readCapacity?: number;
    /**
     * Number of write units for this index. Must be set if billingMode is set to PROVISIONED.
     */
    writeCapacity?: number;
}

export interface TableLocalSecondaryIndex {
    /**
     * Name of the index
     */
    name: string;
    /**
     * Only required with `INCLUDE` as a projection type; a list of attributes to project into the index. These do not need to be defined as attributes on the table.
     */
    nonKeyAttributes?: string[];
    /**
     * One of `ALL`, `INCLUDE` or `KEYS_ONLY` where `ALL` projects every attribute into the index, `KEYS_ONLY` projects  into the index only the table and index hashKey and sortKey attributes ,  `INCLUDE` projects into the index all of the attributes that are defined in `nonKeyAttributes` in addition to the attributes that that`KEYS_ONLY` project.
     */
    projectionType: string;
    /**
     * Name of the range key.
     */
    rangeKey: string;
}

export interface TablePointInTimeRecovery {
    /**
     * Whether TTL is enabled.
     */
    enabled: boolean;
}

export interface TableReplica {
    /**
     * ARN of the CMK that should be used for the AWS KMS encryption. This attribute should only be specified if the key is different from the default DynamoDB CMK, `alias/aws/dynamodb`.
     */
    kmsKeyArn: string;
    /**
     * Whether to enable Point In Time Recovery for the replica. Default is `false`.
     */
    pointInTimeRecovery?: boolean;
    /**
     * Whether to propagate the global table's tags to a replica. Default is `false`. Changes to tags only move in one direction: from global (source) to replica. In other words, tag drift on a replica will not trigger an update. Tag or replica changes on the global table, whether from drift or configuration changes, are propagated to replicas. Changing from `true` to `false` on a subsequent `apply` means replica tags are left as they were, unmanaged, not deleted.
     */
    propagateTags?: boolean;
    /**
     * Region name of the replica.
     */
    regionName: string;
}

export interface TableServerSideEncryption {
    /**
     * Whether TTL is enabled.
     */
    enabled: boolean;
    /**
     * ARN of the CMK that should be used for the AWS KMS encryption. This attribute should only be specified if the key is different from the default DynamoDB CMK, `alias/aws/dynamodb`.
     */
    kmsKeyArn: string;
}

export interface TableTtl {
    /**
     * Name of the table attribute to store the TTL timestamp in.
     */
    attributeName: string;
    /**
     * Whether TTL is enabled.
     */
    enabled?: boolean;
}

