// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

import {RoutingRule} from "@/s3";

export interface ClusterBrokerNodeGroupInfo {
    /**
     * The distribution of broker nodes across availability zones ([documentation](https://docs.aws.amazon.com/msk/1.0/apireference/clusters.html#clusters-model-brokerazdistribution)). Currently the only valid value is `DEFAULT`.
     */
    azDistribution?: pulumi.Input<string>;
    /**
     * A list of subnets to connect to in client VPC ([documentation](https://docs.aws.amazon.com/msk/1.0/apireference/clusters.html#clusters-prop-brokernodegroupinfo-clientsubnets)).
     */
    clientSubnets: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Information about the cluster access configuration. See below. For security reasons, you can't turn on public access while creating an MSK cluster. However, you can update an existing cluster to make it publicly accessible. You can also create a new cluster and then update it to make it publicly accessible ([documentation](https://docs.aws.amazon.com/msk/latest/developerguide/public-access.html)).
     */
    connectivityInfo?: pulumi.Input<inputs.msk.ClusterBrokerNodeGroupInfoConnectivityInfo>;
    /**
     * The size in GiB of the EBS volume for the data drive on each broker node.
     *
     * @deprecated use 'storage_info' argument instead
     */
    ebsVolumeSize?: pulumi.Input<number>;
    /**
     * Specify the instance type to use for the kafka brokersE.g., kafka.m5.large. ([Pricing info](https://aws.amazon.com/msk/pricing/))
     */
    instanceType: pulumi.Input<string>;
    /**
     * A list of the security groups to associate with the elastic network interfaces to control who can communicate with the cluster.
     */
    securityGroups: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A block that contains information about storage volumes attached to MSK broker nodes. See below.
     */
    storageInfo?: pulumi.Input<inputs.msk.ClusterBrokerNodeGroupInfoStorageInfo>;
}

export interface ClusterBrokerNodeGroupInfoConnectivityInfo {
    /**
     * Access control settings for brokers. See below.
     */
    publicAccess?: pulumi.Input<inputs.msk.ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccess>;
}

export interface ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccess {
    /**
     * Public access type. Valida values: `DISABLED`, `SERVICE_PROVIDED_EIPS`.
     */
    type?: pulumi.Input<string>;
}

export interface ClusterBrokerNodeGroupInfoStorageInfo {
    /**
     * A block that contains EBS volume information. See below.
     */
    ebsStorageInfo?: pulumi.Input<inputs.msk.ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfo>;
}

export interface ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfo {
    /**
     * A block that contains EBS volume provisioned throughput information. To provision storage throughput, you must choose broker type kafka.m5.4xlarge or larger. See below.
     */
    provisionedThroughput?: pulumi.Input<inputs.msk.ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput>;
    /**
     * The size in GiB of the EBS volume for the data drive on each broker node. Minimum value of `1` and maximum value of `16384`.
     */
    volumeSize?: pulumi.Input<number>;
}

export interface ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput {
    /**
     * Controls whether provisioned throughput is enabled or not. Default value: `false`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Throughput value of the EBS volumes for the data drive on each kafka broker node in MiB per second. The minimum value is `250`. The maximum value varies between broker type. You can refer to the valid values for the maximum volume throughput at the following [documentation on throughput bottlenecks](https://docs.aws.amazon.com/msk/latest/developerguide/msk-provision-throughput.html#throughput-bottlenecks)
     */
    volumeThroughput?: pulumi.Input<number>;
}

export interface ClusterClientAuthentication {
    /**
     * Configuration block for specifying SASL client authentication. See below.
     */
    sasl?: pulumi.Input<inputs.msk.ClusterClientAuthenticationSasl>;
    /**
     * Configuration block for specifying TLS client authentication. See below.
     */
    tls?: pulumi.Input<inputs.msk.ClusterClientAuthenticationTls>;
    /**
     * Enables unauthenticated access.
     */
    unauthenticated?: pulumi.Input<boolean>;
}

export interface ClusterClientAuthenticationSasl {
    /**
     * Enables IAM client authentication. Defaults to `false`.
     */
    iam?: pulumi.Input<boolean>;
    /**
     * Enables SCRAM client authentication via AWS Secrets Manager. Defaults to `false`.
     */
    scram?: pulumi.Input<boolean>;
}

export interface ClusterClientAuthenticationTls {
    /**
     * List of ACM Certificate Authority Amazon Resource Names (ARNs).
     */
    certificateAuthorityArns?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ClusterConfigurationInfo {
    /**
     * Amazon Resource Name (ARN) of the MSK Configuration to use in the cluster.
     */
    arn: pulumi.Input<string>;
    /**
     * Revision of the MSK Configuration to use in the cluster.
     */
    revision: pulumi.Input<number>;
}

export interface ClusterEncryptionInfo {
    /**
     * You may specify a KMS key short ID or ARN (it will always output an ARN) to use for encrypting your data at rest.  If no key is specified, an AWS managed KMS ('aws/msk' managed service) key will be used for encrypting the data at rest.
     */
    encryptionAtRestKmsKeyArn?: pulumi.Input<string>;
    /**
     * Configuration block to specify encryption in transit. See below.
     */
    encryptionInTransit?: pulumi.Input<inputs.msk.ClusterEncryptionInfoEncryptionInTransit>;
}

export interface ClusterEncryptionInfoEncryptionInTransit {
    /**
     * Encryption setting for data in transit between clients and brokers. Valid values: `TLS`, `TLS_PLAINTEXT`, and `PLAINTEXT`. Default value is `TLS`.
     */
    clientBroker?: pulumi.Input<string>;
    /**
     * Whether data communication among broker nodes is encrypted. Default value: `true`.
     */
    inCluster?: pulumi.Input<boolean>;
}

export interface ClusterLoggingInfo {
    /**
     * Configuration block for Broker Logs settings for logging info. See below.
     */
    brokerLogs: pulumi.Input<inputs.msk.ClusterLoggingInfoBrokerLogs>;
}

export interface ClusterLoggingInfoBrokerLogs {
    cloudwatchLogs?: pulumi.Input<inputs.msk.ClusterLoggingInfoBrokerLogsCloudwatchLogs>;
    firehose?: pulumi.Input<inputs.msk.ClusterLoggingInfoBrokerLogsFirehose>;
    s3?: pulumi.Input<inputs.msk.ClusterLoggingInfoBrokerLogsS3>;
}

export interface ClusterLoggingInfoBrokerLogsCloudwatchLogs {
    /**
     * Controls whether provisioned throughput is enabled or not. Default value: `false`.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Name of the Cloudwatch Log Group to deliver logs to.
     */
    logGroup?: pulumi.Input<string>;
}

export interface ClusterLoggingInfoBrokerLogsFirehose {
    /**
     * Name of the Kinesis Data Firehose delivery stream to deliver logs to.
     */
    deliveryStream?: pulumi.Input<string>;
    /**
     * Controls whether provisioned throughput is enabled or not. Default value: `false`.
     */
    enabled: pulumi.Input<boolean>;
}

export interface ClusterLoggingInfoBrokerLogsS3 {
    /**
     * Name of the S3 bucket to deliver logs to.
     */
    bucket?: pulumi.Input<string>;
    /**
     * Controls whether provisioned throughput is enabled or not. Default value: `false`.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Prefix to append to the folder name.
     */
    prefix?: pulumi.Input<string>;
}

export interface ClusterOpenMonitoring {
    /**
     * Configuration block for Prometheus settings for open monitoring. See below.
     */
    prometheus: pulumi.Input<inputs.msk.ClusterOpenMonitoringPrometheus>;
}

export interface ClusterOpenMonitoringPrometheus {
    /**
     * Configuration block for JMX Exporter. See below.
     */
    jmxExporter?: pulumi.Input<inputs.msk.ClusterOpenMonitoringPrometheusJmxExporter>;
    /**
     * Configuration block for Node Exporter. See below.
     */
    nodeExporter?: pulumi.Input<inputs.msk.ClusterOpenMonitoringPrometheusNodeExporter>;
}

export interface ClusterOpenMonitoringPrometheusJmxExporter {
    /**
     * Indicates whether you want to enable or disable the JMX Exporter.
     */
    enabledInBroker: pulumi.Input<boolean>;
}

export interface ClusterOpenMonitoringPrometheusNodeExporter {
    /**
     * Indicates whether you want to enable or disable the JMX Exporter.
     */
    enabledInBroker: pulumi.Input<boolean>;
}

export interface ServerlessClusterClientAuthentication {
    /**
     * Details for client authentication using SASL. See below.
     */
    sasl: pulumi.Input<inputs.msk.ServerlessClusterClientAuthenticationSasl>;
}

export interface ServerlessClusterClientAuthenticationSasl {
    /**
     * Details for client authentication using IAM. See below.
     */
    iam: pulumi.Input<inputs.msk.ServerlessClusterClientAuthenticationSaslIam>;
}

export interface ServerlessClusterClientAuthenticationSaslIam {
    /**
     * Whether SASL/IAM authentication is enabled or not.
     */
    enabled: pulumi.Input<boolean>;
}

export interface ServerlessClusterVpcConfig {
    /**
     * Specifies up to five security groups that control inbound and outbound traffic for the serverless cluster.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of subnets in at least two different Availability Zones that host your client applications.
     */
    subnetIds: pulumi.Input<pulumi.Input<string>[]>;
}
