// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

import {RoutingRule} from "@/s3";

export interface GetDelegatedAdministratorsDelegatedAdministrator {
    /**
     * The ARN of the delegated administrator's account.
     */
    arn: string;
    /**
     * The date when the account was made a delegated administrator.
     */
    delegationEnabledDate: string;
    /**
     * The email address that is associated with the delegated administrator's AWS account.
     */
    email: string;
    /**
     * The unique identifier (ID) of the delegated administrator's account.
     */
    id: string;
    /**
     * The method by which the delegated administrator's account joined the organization.
     */
    joinedMethod: string;
    /**
     * The date when the delegated administrator's account became a part of the organization.
     */
    joinedTimestamp: string;
    /**
     * The friendly name of the delegated administrator's account.
     */
    name: string;
    /**
     * The status of the delegated administrator's account in the organization.
     */
    status: string;
}

export interface GetDelegatedServicesDelegatedService {
    /**
     * The date that the account became a delegated administrator for this service.
     */
    delegationEnabledDate: string;
    /**
     * The name of an AWS service that can request an operation for the specified service.
     */
    servicePrincipal: string;
}

export interface GetOrganizationAccount {
    /**
     * ARN of the root
     */
    arn: string;
    /**
     * Email of the account
     */
    email: string;
    /**
     * Identifier of the root
     */
    id: string;
    /**
     * The name of the policy type
     */
    name: string;
    /**
     * The status of the policy type as it relates to the associated root
     */
    status: string;
}

export interface GetOrganizationNonMasterAccount {
    /**
     * ARN of the root
     */
    arn: string;
    /**
     * Email of the account
     */
    email: string;
    /**
     * Identifier of the root
     */
    id: string;
    /**
     * The name of the policy type
     */
    name: string;
    /**
     * The status of the policy type as it relates to the associated root
     */
    status: string;
}

export interface GetOrganizationRoot {
    /**
     * ARN of the root
     */
    arn: string;
    /**
     * Identifier of the root
     */
    id: string;
    /**
     * The name of the policy type
     */
    name: string;
    /**
     * List of policy types enabled for this root. All elements have these attributes:
     */
    policyTypes: outputs.organizations.GetOrganizationRootPolicyType[];
}

export interface GetOrganizationRootPolicyType {
    /**
     * The status of the policy type as it relates to the associated root
     */
    status: string;
    type: string;
}

export interface GetOrganizationalUnitsChildren {
    /**
     * ARN of the organizational unit
     */
    arn: string;
    /**
     * Parent identifier of the organizational units.
     */
    id: string;
    /**
     * Name of the organizational unit
     */
    name: string;
}

export interface OrganizationAccount {
    /**
     * ARN of the root
     */
    arn: string;
    /**
     * Email of the account
     */
    email: string;
    /**
     * Identifier of the root
     */
    id: string;
    /**
     * The name of the policy type
     */
    name: string;
    /**
     * The status of the policy type as it relates to the associated root
     */
    status: string;
}

export interface OrganizationNonMasterAccount {
    /**
     * ARN of the root
     */
    arn: string;
    /**
     * Email of the account
     */
    email: string;
    /**
     * Identifier of the root
     */
    id: string;
    /**
     * The name of the policy type
     */
    name: string;
    /**
     * The status of the policy type as it relates to the associated root
     */
    status: string;
}

export interface OrganizationRoot {
    /**
     * ARN of the root
     */
    arn: string;
    /**
     * Identifier of the root
     */
    id: string;
    /**
     * The name of the policy type
     */
    name: string;
    /**
     * List of policy types enabled for this root. All elements have these attributes:
     */
    policyTypes: outputs.organizations.OrganizationRootPolicyType[];
}

export interface OrganizationRootPolicyType {
    /**
     * The status of the policy type as it relates to the associated root
     */
    status: string;
    type: string;
}

export interface OrganizationalUnitAccount {
    /**
     * ARN of the organizational unit
     */
    arn: string;
    /**
     * Email of the account
     */
    email: string;
    /**
     * Identifier of the organization unit
     */
    id: string;
    /**
     * The name for the organizational unit
     */
    name: string;
}

