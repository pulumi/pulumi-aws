// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

import {RoutingRule} from "@/s3";

export interface DataSourceConfiguration {
    /**
     * A block that provides the configuration information to connect to an Amazon S3 bucket as your data source. Detailed below.
     */
    s3Configuration?: outputs.kendra.DataSourceConfigurationS3Configuration;
    /**
     * A block that provides the configuration information required for Amazon Kendra Web Crawler. Detailed below.
     */
    webCrawlerConfiguration?: outputs.kendra.DataSourceConfigurationWebCrawlerConfiguration;
}

export interface DataSourceConfigurationS3Configuration {
    /**
     * A block that provides the path to the S3 bucket that contains the user context filtering files for the data source. For the format of the file, see [Access control for S3 data sources](https://docs.aws.amazon.com/kendra/latest/dg/s3-acl.html). Detailed below.
     */
    accessControlListConfiguration?: outputs.kendra.DataSourceConfigurationS3ConfigurationAccessControlListConfiguration;
    /**
     * The name of the bucket that contains the documents.
     */
    bucketName: string;
    /**
     * A block that defines the Ddcument metadata files that contain information such as the document access control information, source URI, document author, and custom attributes. Each metadata file contains metadata about a single document. Detailed below.
     */
    documentsMetadataConfiguration?: outputs.kendra.DataSourceConfigurationS3ConfigurationDocumentsMetadataConfiguration;
    /**
     * A list of glob patterns for documents that should not be indexed. If a document that matches an inclusion prefix or inclusion pattern also matches an exclusion pattern, the document is not indexed. Refer to [Exclusion Patterns for more examples](https://docs.aws.amazon.com/kendra/latest/dg/API_S3DataSourceConfiguration.html#Kendra-Type-S3DataSourceConfiguration-ExclusionPatterns).
     */
    exclusionPatterns?: string[];
    /**
     * A list of glob patterns for documents that should be indexed. If a document that matches an inclusion pattern also matches an exclusion pattern, the document is not indexed. Refer to [Inclusion Patterns for more examples](https://docs.aws.amazon.com/kendra/latest/dg/API_S3DataSourceConfiguration.html#Kendra-Type-S3DataSourceConfiguration-InclusionPatterns).
     */
    inclusionPatterns?: string[];
    /**
     * A list of S3 prefixes for the documents that should be included in the index.
     */
    inclusionPrefixes?: string[];
}

export interface DataSourceConfigurationS3ConfigurationAccessControlListConfiguration {
    /**
     * Path to the AWS S3 bucket that contains the ACL files.
     */
    keyPath?: string;
}

export interface DataSourceConfigurationS3ConfigurationDocumentsMetadataConfiguration {
    /**
     * A prefix used to filter metadata configuration files in the AWS S3 bucket. The S3 bucket might contain multiple metadata files. Use `s3Prefix` to include only the desired metadata files.
     */
    s3Prefix?: string;
}

export interface DataSourceConfigurationWebCrawlerConfiguration {
    /**
     * A block with the configuration information required to connect to websites using authentication. You can connect to websites using basic authentication of user name and password. You use a secret in AWS Secrets Manager to store your authentication credentials. You must provide the website host name and port number. For example, the host name of `https://a.example.com/page1.html` is `"a.example.com"` and the port is `443`, the standard port for HTTPS. Detailed below.
     */
    authenticationConfiguration?: outputs.kendra.DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfiguration;
    /**
     * Specifies the number of levels in a website that you want to crawl. The first level begins from the website seed or starting point URL. For example, if a website has 3 levels – index level (i.e. seed in this example), sections level, and subsections level – and you are only interested in crawling information up to the sections level (i.e. levels 0-1), you can set your depth to 1. The default crawl depth is set to `2`. Minimum value of `0`. Maximum value of `10`.
     */
    crawlDepth?: number;
    /**
     * The maximum size (in MB) of a webpage or attachment to crawl. Files larger than this size (in MB) are skipped/not crawled. The default maximum size of a webpage or attachment is set to `50` MB. Minimum value of `1.0e-06`. Maximum value of `50`.
     */
    maxContentSizePerPageInMegaBytes?: number;
    /**
     * The maximum number of URLs on a webpage to include when crawling a website. This number is per webpage. As a website’s webpages are crawled, any URLs the webpages link to are also crawled. URLs on a webpage are crawled in order of appearance. The default maximum links per page is `100`. Minimum value of `1`. Maximum value of `1000`.
     */
    maxLinksPerPage?: number;
    /**
     * The maximum number of URLs crawled per website host per minute. The default maximum number of URLs crawled per website host per minute is `300`. Minimum value of `1`. Maximum value of `300`.
     */
    maxUrlsPerMinuteCrawlRate?: number;
    /**
     * Configuration information required to connect to your internal websites via a web proxy. You must provide the website host name and port number. For example, the host name of `https://a.example.com/page1.html` is `"a.example.com"` and the port is `443`, the standard port for HTTPS. Web proxy credentials are optional and you can use them to connect to a web proxy server that requires basic authentication. To store web proxy credentials, you use a secret in [AWS Secrets Manager](https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html). Detailed below.
     */
    proxyConfiguration?: outputs.kendra.DataSourceConfigurationWebCrawlerConfigurationProxyConfiguration;
    /**
     * A list of regular expression patterns to exclude certain URLs to crawl. URLs that match the patterns are excluded from the index. URLs that don't match the patterns are included in the index. If a URL matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the URL file isn't included in the index. Array Members: Minimum number of `0` items. Maximum number of `100` items. Length Constraints: Minimum length of `1`. Maximum length of `150`.
     */
    urlExclusionPatterns?: string[];
    /**
     * A list of regular expression patterns to include certain URLs to crawl. URLs that match the patterns are included in the index. URLs that don't match the patterns are excluded from the index. If a URL matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the URL file isn't included in the index. Array Members: Minimum number of `0` items. Maximum number of `100` items. Length Constraints: Minimum length of `1`. Maximum length of `150`.
     */
    urlInclusionPatterns?: string[];
    /**
     * A block that specifies the seed or starting point URLs of the websites or the sitemap URLs of the websites you want to crawl. You can include website subdomains. You can list up to `100` seed URLs and up to `3` sitemap URLs. You can only crawl websites that use the secure communication protocol, Hypertext Transfer Protocol Secure (HTTPS). If you receive an error when crawling a website, it could be that the website is blocked from crawling. When selecting websites to index, you must adhere to the [Amazon Acceptable Use Policy](https://aws.amazon.com/aup/) and all other Amazon terms. Remember that you must only use Amazon Kendra Web Crawler to index your own webpages, or webpages that you have authorization to index. Detailed below.
     */
    urls: outputs.kendra.DataSourceConfigurationWebCrawlerConfigurationUrls;
}

export interface DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfiguration {
    /**
     * The list of configuration information that's required to connect to and crawl a website host using basic authentication credentials. The list includes the name and port number of the website host. Detailed below.
     */
    basicAuthentications?: outputs.kendra.DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthentication[];
}

export interface DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthentication {
    /**
     * Your secret ARN, which you can create in AWS Secrets Manager. You use a secret if basic authentication credentials are required to connect to a website. The secret stores your credentials of user name and password.
     */
    credentials: string;
    /**
     * The name of the website host you want to connect to using authentication credentials. For example, the host name of `https://a.example.com/page1.html` is `"a.example.com"`.
     */
    host: string;
    /**
     * The port number of the website host you want to connect to using authentication credentials. For example, the port for `https://a.example.com/page1.html` is `443`, the standard port for HTTPS.
     */
    port: number;
}

export interface DataSourceConfigurationWebCrawlerConfigurationProxyConfiguration {
    /**
     * Your secret ARN, which you can create in AWS Secrets Manager. The credentials are optional. You use a secret if web proxy credentials are required to connect to a website host. Amazon Kendra currently support basic authentication to connect to a web proxy server. The secret stores your credentials.
     */
    credentials?: string;
    /**
     * The name of the website host you want to connect to via a web proxy server. For example, the host name of `https://a.example.com/page1.html` is `"a.example.com"`.
     */
    host: string;
    /**
     * The port number of the website host you want to connect to via a web proxy server. For example, the port for `https://a.example.com/page1.html` is `443`, the standard port for HTTPS.
     */
    port: number;
}

export interface DataSourceConfigurationWebCrawlerConfigurationUrls {
    /**
     * A block that specifies the configuration of the seed or starting point URLs of the websites you want to crawl. You can choose to crawl only the website host names, or the website host names with subdomains, or the website host names with subdomains and other domains that the webpages link to. You can list up to `100` seed URLs. Detailed below.
     */
    seedUrlConfiguration?: outputs.kendra.DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfiguration;
    /**
     * A block that specifies the configuration of the sitemap URLs of the websites you want to crawl. Only URLs belonging to the same website host names are crawled. You can list up to `3` sitemap URLs. Detailed below.
     */
    siteMapsConfiguration?: outputs.kendra.DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfiguration;
}

export interface DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfiguration {
    /**
     * The list of seed or starting point URLs of the websites you want to crawl. The list can include a maximum of `100` seed URLs. Array Members: Minimum number of `0` items. Maximum number of `100` items. Length Constraints: Minimum length of `1`. Maximum length of `2048`.
     */
    seedUrls: string[];
    /**
     * The default mode is set to `HOST_ONLY`. You can choose one of the following modes:
     */
    webCrawlerMode?: string;
}

export interface DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfiguration {
    /**
     * The list of sitemap URLs of the websites you want to crawl. The list can include a maximum of `3` sitemap URLs.
     */
    siteMaps: string[];
}

export interface DataSourceCustomDocumentEnrichmentConfiguration {
    /**
     * Configuration information to alter document attributes or metadata fields and content when ingesting documents into Amazon Kendra. Minimum number of `0` items. Maximum number of `100` items. Detailed below.
     */
    inlineConfigurations?: outputs.kendra.DataSourceCustomDocumentEnrichmentConfigurationInlineConfiguration[];
    /**
     * A block that specifies the configuration information for invoking a Lambda function in AWS Lambda on the structured documents with their metadata and text extracted. You can use a Lambda function to apply advanced logic for creating, modifying, or deleting document metadata and content. For more information, see [Advanced data manipulation](https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html#advanced-data-manipulation). Detailed below.
     */
    postExtractionHookConfiguration?: outputs.kendra.DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfiguration;
    /**
     * Configuration information for invoking a Lambda function in AWS Lambda on the original or raw documents before extracting their metadata and text. You can use a Lambda function to apply advanced logic for creating, modifying, or deleting document metadata and content. For more information, see [Advanced data manipulation](https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html#advanced-data-manipulation). Detailed below.
     */
    preExtractionHookConfiguration?: outputs.kendra.DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfiguration;
    /**
     * The Amazon Resource Name (ARN) of a role with permission to run `preExtractionHookConfiguration` and `postExtractionHookConfiguration` for altering document metadata and content during the document ingestion process. For more information, see [IAM roles for Amazon Kendra](https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html).
     */
    roleArn?: string;
}

export interface DataSourceCustomDocumentEnrichmentConfigurationInlineConfiguration {
    /**
     * Configuration of the condition used for the target document attribute or metadata field when ingesting documents into Amazon Kendra. See Document Attribute Condition.
     */
    condition?: outputs.kendra.DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationCondition;
    /**
     * `TRUE` to delete content if the condition used for the target attribute is met.
     */
    documentContentDeletion?: boolean;
    /**
     * Configuration of the target document attribute or metadata field when ingesting documents into Amazon Kendra. You can also include a value. Detailed below.
     */
    target?: outputs.kendra.DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTarget;
}

export interface DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationCondition {
    /**
     * The identifier of the document attribute used for the condition. For example, `_source_uri` could be an identifier for the attribute or metadata field that contains source URIs associated with the documents. Amazon Kendra currently does not support `_document_body` as an attribute key used for the condition.
     */
    conditionDocumentAttributeKey: string;
    /**
     * The value used by the operator. For example, you can specify the value 'financial' for strings in the `_source_uri` field that partially match or contain this value. See Document Attribute Value.
     */
    conditionOnValue?: outputs.kendra.DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValue;
    /**
     * The condition operator. For example, you can use `Contains` to partially match a string. Valid Values: `GreaterThan` | `GreaterThanOrEquals` | `LessThan` | `LessThanOrEquals` | `Equals` | `NotEquals` | `Contains` | `NotContains` | `Exists` | `NotExists` | `BeginsWith`.
     */
    operator: string;
}

export interface DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValue {
    /**
     * A date expressed as an ISO 8601 string. It is important for the time zone to be included in the ISO 8601 date-time format. As of this writing only UTC is supported. For example, `2012-03-25T12:30:10+00:00`.
     */
    dateValue?: string;
    /**
     * A long integer value.
     */
    longValue?: number;
    /**
     * A list of strings.
     */
    stringListValues?: string[];
    stringValue?: string;
}

export interface DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTarget {
    /**
     * The identifier of the target document attribute or metadata field. For example, 'Department' could be an identifier for the target attribute or metadata field that includes the department names associated with the documents.
     */
    targetDocumentAttributeKey?: string;
    /**
     * The target value you want to create for the target attribute. For example, 'Finance' could be the target value for the target attribute key 'Department'.
     * See Document Attribute Value.
     */
    targetDocumentAttributeValue?: outputs.kendra.DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValue;
    /**
     * `TRUE` to delete the existing target value for your specified target attribute key. You cannot create a target value and set this to `TRUE`. To create a target value (`TargetDocumentAttributeValue`), set this to `FALSE`.
     */
    targetDocumentAttributeValueDeletion?: boolean;
}

export interface DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValue {
    /**
     * A date expressed as an ISO 8601 string. It is important for the time zone to be included in the ISO 8601 date-time format. As of this writing only UTC is supported. For example, `2012-03-25T12:30:10+00:00`.
     */
    dateValue?: string;
    /**
     * A long integer value.
     */
    longValue?: number;
    /**
     * A list of strings.
     */
    stringListValues?: string[];
    stringValue?: string;
}

export interface DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfiguration {
    /**
     * A block that specifies the condition used for when a Lambda function should be invoked. For example, you can specify a condition that if there are empty date-time values, then Amazon Kendra should invoke a function that inserts the current date-time. See Document Attribute Condition.
     */
    invocationCondition?: outputs.kendra.DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationCondition;
    /**
     * The Amazon Resource Name (ARN) of a Lambda Function that can manipulate your document metadata fields or attributes and content.
     */
    lambdaArn: string;
    /**
     * Stores the original, raw documents or the structured, parsed documents before and after altering them. For more information, see [Data contracts for Lambda functions](https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html#cde-data-contracts-lambda).
     */
    s3Bucket: string;
}

export interface DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationCondition {
    /**
     * The identifier of the document attribute used for the condition. For example, `_source_uri` could be an identifier for the attribute or metadata field that contains source URIs associated with the documents. Amazon Kendra currently does not support `_document_body` as an attribute key used for the condition.
     */
    conditionDocumentAttributeKey: string;
    /**
     * The value used by the operator. For example, you can specify the value 'financial' for strings in the `_source_uri` field that partially match or contain this value. See Document Attribute Value.
     */
    conditionOnValue?: outputs.kendra.DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValue;
    /**
     * The condition operator. For example, you can use `Contains` to partially match a string. Valid Values: `GreaterThan` | `GreaterThanOrEquals` | `LessThan` | `LessThanOrEquals` | `Equals` | `NotEquals` | `Contains` | `NotContains` | `Exists` | `NotExists` | `BeginsWith`.
     */
    operator: string;
}

export interface DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValue {
    /**
     * A date expressed as an ISO 8601 string. It is important for the time zone to be included in the ISO 8601 date-time format. As of this writing only UTC is supported. For example, `2012-03-25T12:30:10+00:00`.
     */
    dateValue?: string;
    /**
     * A long integer value.
     */
    longValue?: number;
    /**
     * A list of strings.
     */
    stringListValues?: string[];
    stringValue?: string;
}

export interface DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfiguration {
    /**
     * A block that specifies the condition used for when a Lambda function should be invoked. For example, you can specify a condition that if there are empty date-time values, then Amazon Kendra should invoke a function that inserts the current date-time. See Document Attribute Condition.
     */
    invocationCondition?: outputs.kendra.DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationCondition;
    /**
     * The Amazon Resource Name (ARN) of a Lambda Function that can manipulate your document metadata fields or attributes and content.
     */
    lambdaArn: string;
    /**
     * Stores the original, raw documents or the structured, parsed documents before and after altering them. For more information, see [Data contracts for Lambda functions](https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html#cde-data-contracts-lambda).
     */
    s3Bucket: string;
}

export interface DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationCondition {
    /**
     * The identifier of the document attribute used for the condition. For example, `_source_uri` could be an identifier for the attribute or metadata field that contains source URIs associated with the documents. Amazon Kendra currently does not support `_document_body` as an attribute key used for the condition.
     */
    conditionDocumentAttributeKey: string;
    /**
     * The value used by the operator. For example, you can specify the value 'financial' for strings in the `_source_uri` field that partially match or contain this value. See Document Attribute Value.
     */
    conditionOnValue?: outputs.kendra.DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValue;
    /**
     * The condition operator. For example, you can use `Contains` to partially match a string. Valid Values: `GreaterThan` | `GreaterThanOrEquals` | `LessThan` | `LessThanOrEquals` | `Equals` | `NotEquals` | `Contains` | `NotContains` | `Exists` | `NotExists` | `BeginsWith`.
     */
    operator: string;
}

export interface DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValue {
    /**
     * A date expressed as an ISO 8601 string. It is important for the time zone to be included in the ISO 8601 date-time format. As of this writing only UTC is supported. For example, `2012-03-25T12:30:10+00:00`.
     */
    dateValue?: string;
    /**
     * A long integer value.
     */
    longValue?: number;
    /**
     * A list of strings.
     */
    stringListValues?: string[];
    stringValue?: string;
}

export interface ExperienceConfiguration {
    /**
     * The identifiers of your data sources and FAQs. Or, you can specify that you want to use documents indexed via the `BatchPutDocument API`. The provider will only perform drift detection of its value when present in a configuration. Detailed below.
     */
    contentSourceConfiguration: outputs.kendra.ExperienceConfigurationContentSourceConfiguration;
    /**
     * The AWS SSO field name that contains the identifiers of your users, such as their emails. Detailed below.
     */
    userIdentityConfiguration?: outputs.kendra.ExperienceConfigurationUserIdentityConfiguration;
}

export interface ExperienceConfigurationContentSourceConfiguration {
    /**
     * The identifiers of the data sources you want to use for your Amazon Kendra experience. Maximum number of 100 items.
     */
    dataSourceIds?: string[];
    /**
     * Whether to use documents you indexed directly using the `BatchPutDocument API`. Defaults to `false`.
     */
    directPutContent?: boolean;
    /**
     * The identifier of the FAQs that you want to use for your Amazon Kendra experience. Maximum number of 100 items.
     */
    faqIds?: string[];
}

export interface ExperienceConfigurationUserIdentityConfiguration {
    /**
     * The AWS SSO field name that contains the identifiers of your users, such as their emails.
     */
    identityAttributeName: string;
}

export interface ExperienceEndpoint {
    /**
     * The endpoint of your Amazon Kendra experience.
     */
    endpoint: string;
    /**
     * The type of endpoint for your Amazon Kendra experience.
     */
    endpointType: string;
}

export interface FaqS3Path {
    /**
     * The name of the S3 bucket that contains the file.
     */
    bucket: string;
    /**
     * The name of the file.
     */
    key: string;
}

export interface GetExperienceConfiguration {
    /**
     * The identifiers of your data sources and FAQs. This is the content you want to use for your Amazon Kendra Experience. Documented below.
     */
    contentSourceConfigurations: outputs.kendra.GetExperienceConfigurationContentSourceConfiguration[];
    /**
     * The AWS SSO field name that contains the identifiers of your users, such as their emails. Documented below.
     */
    userIdentityConfigurations: outputs.kendra.GetExperienceConfigurationUserIdentityConfiguration[];
}

export interface GetExperienceConfigurationContentSourceConfiguration {
    /**
     * Identifiers of the data sources you want to use for your Amazon Kendra Experience.
     */
    dataSourceIds: string[];
    /**
     * Whether to use documents you indexed directly using the `BatchPutDocument API`.
     */
    directPutContent: boolean;
    /**
     * Identifier of the FAQs that you want to use for your Amazon Kendra Experience.
     */
    faqIds: string[];
}

export interface GetExperienceConfigurationUserIdentityConfiguration {
    /**
     * The AWS SSO field name that contains the identifiers of your users, such as their emails.
     */
    identityAttributeName: string;
}

export interface GetExperienceEndpoint {
    /**
     * Endpoint of your Amazon Kendra Experience.
     */
    endpoint: string;
    /**
     * Type of endpoint for your Amazon Kendra Experience.
     */
    endpointType: string;
}

export interface GetFaqS3Path {
    /**
     * Name of the S3 bucket that contains the file.
     */
    bucket: string;
    /**
     * Name of the file.
     */
    key: string;
}

export interface GetIndexCapacityUnit {
    /**
     * The amount of extra query capacity for an index and GetQuerySuggestions capacity. For more information, refer to [QueryCapacityUnits](https://docs.aws.amazon.com/kendra/latest/dg/API_CapacityUnitsConfiguration.html#Kendra-Type-CapacityUnitsConfiguration-QueryCapacityUnits).
     */
    queryCapacityUnits: number;
    /**
     * The amount of extra storage capacity for an index. A single capacity unit provides 30 GB of storage space or 100,000 documents, whichever is reached first. Minimum value of 0.
     */
    storageCapacityUnits: number;
}

export interface GetIndexDocumentMetadataConfigurationUpdate {
    /**
     * Name of the index field. Minimum length of 1. Maximum length of 30.
     */
    name: string;
    /**
     * Block that provides manual tuning parameters to determine how the field affects the search results. Documented below.
     */
    relevances: outputs.kendra.GetIndexDocumentMetadataConfigurationUpdateRelevance[];
    /**
     * Block that provides information about how the field is used during a search. Documented below.
     */
    searches: outputs.kendra.GetIndexDocumentMetadataConfigurationUpdateSearch[];
    /**
     * Data type of the index field. Valid values are `STRING_VALUE`, `STRING_LIST_VALUE`, `LONG_VALUE`, `DATE_VALUE`.
     */
    type: string;
}

export interface GetIndexDocumentMetadataConfigurationUpdateRelevance {
    /**
     * Time period that the boost applies to. For more information, refer to [Duration](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-Duration).
     */
    duration: string;
    /**
     * How "fresh" a document is. For more information, refer to [Freshness](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-Freshness).
     */
    freshness: boolean;
    /**
     * Relative importance of the field in the search. Larger numbers provide more of a boost than smaller numbers. Minimum value of 1. Maximum value of 10.
     */
    importance: number;
    /**
     * Determines how values should be interpreted. For more information, refer to [RankOrder](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-RankOrder).
     */
    rankOrder: string;
    /**
     * A list of values that should be given a different boost when they appear in the result list. For more information, refer to [ValueImportanceMap](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-ValueImportanceMap).
     */
    valuesImportanceMap: {[key: string]: number};
}

export interface GetIndexDocumentMetadataConfigurationUpdateSearch {
    /**
     * Determines whether the field is returned in the query response. The default is `true`.
     */
    displayable: boolean;
    /**
     * Whether the field can be used to create search facets, a count of results for each value in the field. The default is `false`.
     */
    facetable: boolean;
    /**
     * Determines whether the field is used in the search. If the Searchable field is true, you can use relevance tuning to manually tune how Amazon Kendra weights the field in the search. The default is `true` for `string` fields and `false` for `number` and `date` fields.
     */
    searchable: boolean;
    /**
     * Determines whether the field can be used to sort the results of a query. If you specify sorting on a field that does not have Sortable set to true, Amazon Kendra returns an exception. The default is `false`.
     */
    sortable: boolean;
}

export interface GetIndexIndexStatistic {
    /**
     * Block that specifies the number of question and answer topics in the index. Documented below.
     */
    faqStatistics: outputs.kendra.GetIndexIndexStatisticFaqStatistic[];
    /**
     * A block that specifies the number of text documents indexed.
     */
    textDocumentStatistics: outputs.kendra.GetIndexIndexStatisticTextDocumentStatistic[];
}

export interface GetIndexIndexStatisticFaqStatistic {
    /**
     * The total number of FAQ questions and answers contained in the index.
     */
    indexedQuestionAnswersCount: number;
}

export interface GetIndexIndexStatisticTextDocumentStatistic {
    /**
     * Total size, in bytes, of the indexed documents.
     */
    indexedTextBytes: number;
    /**
     * The number of text documents indexed.
     */
    indexedTextDocumentsCount: number;
}

export interface GetIndexServerSideEncryptionConfiguration {
    /**
     * Identifier of the AWS KMScustomer master key (CMK). Amazon Kendra doesn't support asymmetric CMKs.
     */
    kmsKeyId: string;
}

export interface GetIndexUserGroupResolutionConfiguration {
    /**
     * The identity store provider (mode) you want to use to fetch access levels of groups and users. AWS Single Sign-On is currently the only available mode. Your users and groups must exist in an AWS SSO identity source in order to use this mode. Valid Values are `AWS_SSO` or `NONE`.
     */
    userGroupResolutionMode: string;
}

export interface GetIndexUserTokenConfiguration {
    /**
     * A block that specifies the information about the JSON token type configuration.
     */
    jsonTokenTypeConfigurations: outputs.kendra.GetIndexUserTokenConfigurationJsonTokenTypeConfiguration[];
    /**
     * A block that specifies the information about the JWT token type configuration.
     */
    jwtTokenTypeConfigurations: outputs.kendra.GetIndexUserTokenConfigurationJwtTokenTypeConfiguration[];
}

export interface GetIndexUserTokenConfigurationJsonTokenTypeConfiguration {
    /**
     * The group attribute field.
     */
    groupAttributeField: string;
    /**
     * The user name attribute field.
     */
    userNameAttributeField: string;
}

export interface GetIndexUserTokenConfigurationJwtTokenTypeConfiguration {
    /**
     * Regular expression that identifies the claim.
     */
    claimRegex: string;
    /**
     * The group attribute field.
     */
    groupAttributeField: string;
    /**
     * Issuer of the token.
     */
    issuer: string;
    /**
     * Location of the key. Valid values are `URL` or `SECRET_MANAGER`
     */
    keyLocation: string;
    /**
     * ARN of the secret.
     */
    secretsManagerArn: string;
    /**
     * Signing key URL.
     */
    url: string;
    /**
     * The user name attribute field.
     */
    userNameAttributeField: string;
}

export interface GetQuerySuggestionsBlockListSourceS3Path {
    /**
     * Name of the S3 bucket that contains the file.
     */
    bucket: string;
    /**
     * Name of the file.
     */
    key: string;
}

export interface GetThesaurusSourceS3Path {
    /**
     * Name of the S3 bucket that contains the file.
     */
    bucket: string;
    /**
     * Name of the file.
     */
    key: string;
}

export interface IndexCapacityUnits {
    /**
     * The amount of extra query capacity for an index and GetQuerySuggestions capacity. For more information, refer to [QueryCapacityUnits](https://docs.aws.amazon.com/kendra/latest/dg/API_CapacityUnitsConfiguration.html#Kendra-Type-CapacityUnitsConfiguration-QueryCapacityUnits).
     */
    queryCapacityUnits: number;
    /**
     * The amount of extra storage capacity for an index. A single capacity unit provides 30 GB of storage space or 100,000 documents, whichever is reached first. Minimum value of 0.
     */
    storageCapacityUnits: number;
}

export interface IndexDocumentMetadataConfigurationUpdate {
    /**
     * The name of the index field. Minimum length of 1. Maximum length of 30.
     */
    name: string;
    /**
     * A block that provides manual tuning parameters to determine how the field affects the search results. Detailed below
     */
    relevance: outputs.kendra.IndexDocumentMetadataConfigurationUpdateRelevance;
    /**
     * A block that provides information about how the field is used during a search. Documented below. Detailed below
     */
    search: outputs.kendra.IndexDocumentMetadataConfigurationUpdateSearch;
    /**
     * The data type of the index field. Valid values are `STRING_VALUE`, `STRING_LIST_VALUE`, `LONG_VALUE`, `DATE_VALUE`.
     */
    type: string;
}

export interface IndexDocumentMetadataConfigurationUpdateRelevance {
    /**
     * Specifies the time period that the boost applies to. For more information, refer to [Duration](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-Duration).
     */
    duration: string;
    /**
     * Indicates that this field determines how "fresh" a document is. For more information, refer to [Freshness](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-Freshness).
     */
    freshness: boolean;
    /**
     * The relative importance of the field in the search. Larger numbers provide more of a boost than smaller numbers. Minimum value of 1. Maximum value of 10.
     */
    importance: number;
    /**
     * Determines how values should be interpreted. For more information, refer to [RankOrder](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-RankOrder).
     */
    rankOrder: string;
    /**
     * A list of values that should be given a different boost when they appear in the result list. For more information, refer to [ValueImportanceMap](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-ValueImportanceMap).
     */
    valuesImportanceMap: {[key: string]: number};
}

export interface IndexDocumentMetadataConfigurationUpdateSearch {
    /**
     * Determines whether the field is returned in the query response. The default is `true`.
     */
    displayable: boolean;
    /**
     * Indicates that the field can be used to create search facets, a count of results for each value in the field. The default is `false`.
     */
    facetable: boolean;
    /**
     * Determines whether the field is used in the search. If the Searchable field is true, you can use relevance tuning to manually tune how Amazon Kendra weights the field in the search. The default is `true` for `string` fields and `false` for `number` and `date` fields.
     */
    searchable: boolean;
    /**
     * Determines whether the field can be used to sort the results of a query. If you specify sorting on a field that does not have Sortable set to true, Amazon Kendra returns an exception. The default is `false`.
     */
    sortable: boolean;
}

export interface IndexIndexStatistic {
    /**
     * A block that specifies the number of question and answer topics in the index. Detailed below.
     */
    faqStatistics: outputs.kendra.IndexIndexStatisticFaqStatistic[];
    /**
     * A block that specifies the number of text documents indexed. Detailed below.
     */
    textDocumentStatistics: outputs.kendra.IndexIndexStatisticTextDocumentStatistic[];
}

export interface IndexIndexStatisticFaqStatistic {
    /**
     * The total number of FAQ questions and answers contained in the index.
     */
    indexedQuestionAnswersCount: number;
}

export interface IndexIndexStatisticTextDocumentStatistic {
    /**
     * The total size, in bytes, of the indexed documents.
     */
    indexedTextBytes: number;
    /**
     * The number of text documents indexed.
     */
    indexedTextDocumentsCount: number;
}

export interface IndexServerSideEncryptionConfiguration {
    /**
     * The identifier of the AWS KMScustomer master key (CMK). Amazon Kendra doesn't support asymmetric CMKs.
     */
    kmsKeyId?: string;
}

export interface IndexUserGroupResolutionConfiguration {
    /**
     * The identity store provider (mode) you want to use to fetch access levels of groups and users. AWS Single Sign-On is currently the only available mode. Your users and groups must exist in an AWS SSO identity source in order to use this mode. Valid Values are `AWS_SSO` or `NONE`.
     */
    userGroupResolutionMode: string;
}

export interface IndexUserTokenConfigurations {
    /**
     * A block that specifies the information about the JSON token type configuration. Detailed below.
     */
    jsonTokenTypeConfiguration?: outputs.kendra.IndexUserTokenConfigurationsJsonTokenTypeConfiguration;
    /**
     * A block that specifies the information about the JWT token type configuration. Detailed below.
     */
    jwtTokenTypeConfiguration?: outputs.kendra.IndexUserTokenConfigurationsJwtTokenTypeConfiguration;
}

export interface IndexUserTokenConfigurationsJsonTokenTypeConfiguration {
    /**
     * The group attribute field. Minimum length of 1. Maximum length of 2048.
     */
    groupAttributeField: string;
    /**
     * The user name attribute field. Minimum length of 1. Maximum length of 2048.
     */
    userNameAttributeField: string;
}

export interface IndexUserTokenConfigurationsJwtTokenTypeConfiguration {
    /**
     * The regular expression that identifies the claim. Minimum length of 1. Maximum length of 100.
     */
    claimRegex?: string;
    /**
     * The group attribute field. Minimum length of 1. Maximum length of 100.
     */
    groupAttributeField?: string;
    /**
     * The issuer of the token. Minimum length of 1. Maximum length of 65.
     */
    issuer?: string;
    /**
     * The location of the key. Valid values are `URL` or `SECRET_MANAGER`
     */
    keyLocation: string;
    /**
     * The Amazon Resource Name (ARN) of the secret.
     */
    secretsManagerArn?: string;
    /**
     * The signing key URL. Valid pattern is `^(https?|ftp|file):\/\/([^\s]*)`
     */
    url?: string;
    /**
     * The user name attribute field. Minimum length of 1. Maximum length of 100.
     */
    userNameAttributeField?: string;
}

export interface QuerySuggestionsBlockListSourceS3Path {
    /**
     * The name of the S3 bucket that contains the file.
     */
    bucket: string;
    /**
     * The name of the file.
     */
    key: string;
}

export interface ThesaurusSourceS3Path {
    /**
     * The name of the S3 bucket that contains the file.
     */
    bucket: string;
    /**
     * The name of the file.
     */
    key: string;
}

