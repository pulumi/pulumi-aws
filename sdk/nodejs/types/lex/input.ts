// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

import {RoutingRule} from "@/s3";

export interface BotAbortStatement {
    /**
     * A set of messages, each of which provides a message string and its type. You
     * can specify the message string in plain text or in Speech Synthesis Markup Language (SSML). Attributes
     * are documented under message.
     */
    messages: pulumi.Input<pulumi.Input<inputs.lex.BotAbortStatementMessage>[]>;
    /**
     * The response card. Amazon Lex will substitute session attributes and
     * slot values into the response card. For more information, see
     * [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html).
     */
    responseCard?: pulumi.Input<string>;
}

export interface BotAbortStatementMessage {
    /**
     * The text of the message.
     */
    content: pulumi.Input<string>;
    /**
     * The content type of the message string.
     */
    contentType: pulumi.Input<string>;
    /**
     * Identifies the message group that the message belongs to. When a group
     * is assigned to a message, Amazon Lex returns one message from each group in the response.
     */
    groupNumber?: pulumi.Input<number>;
}

export interface BotAliasConversationLogs {
    /**
     * The Amazon Resource Name (ARN) of the IAM role used to write your logs to CloudWatch Logs or an S3 bucket. Must be between 20 and 2048 characters in length.
     */
    iamRoleArn: pulumi.Input<string>;
    /**
     * The settings for your conversation logs. You can log text, audio, or both. Attributes are documented under log_settings.
     */
    logSettings?: pulumi.Input<pulumi.Input<inputs.lex.BotAliasConversationLogsLogSetting>[]>;
}

export interface BotAliasConversationLogsLogSetting {
    /**
     * The destination where logs are delivered. Options are `CLOUDWATCH_LOGS` or `S3`.
     */
    destination: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the key used to encrypt audio logs in an S3 bucket. This can only be specified when `destination` is set to `S3`. Must be between 20 and 2048 characters in length.
     */
    kmsKeyArn?: pulumi.Input<string>;
    /**
     * The type of logging that is enabled. Options are `AUDIO` or `TEXT`.
     */
    logType: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the CloudWatch Logs log group or S3 bucket where the logs are delivered. Must be less than or equal to 2048 characters in length.
     */
    resourceArn: pulumi.Input<string>;
    /**
     * The prefix of the S3 object key for `AUDIO` logs or the log stream name for `TEXT` logs.
     */
    resourcePrefix?: pulumi.Input<string>;
}

export interface BotClarificationPrompt {
    /**
     * The number of times to prompt the user for information.
     */
    maxAttempts: pulumi.Input<number>;
    /**
     * A set of messages, each of which provides a message string and its type. You
     * can specify the message string in plain text or in Speech Synthesis Markup Language (SSML). Attributes
     * are documented under message.
     */
    messages: pulumi.Input<pulumi.Input<inputs.lex.BotClarificationPromptMessage>[]>;
    /**
     * The response card. Amazon Lex will substitute session attributes and
     * slot values into the response card. For more information, see
     * [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html).
     */
    responseCard?: pulumi.Input<string>;
}

export interface BotClarificationPromptMessage {
    /**
     * The text of the message.
     */
    content: pulumi.Input<string>;
    /**
     * The content type of the message string.
     */
    contentType: pulumi.Input<string>;
    /**
     * Identifies the message group that the message belongs to. When a group
     * is assigned to a message, Amazon Lex returns one message from each group in the response.
     */
    groupNumber?: pulumi.Input<number>;
}

export interface BotIntent {
    /**
     * The name of the intent. Must be less than or equal to 100 characters in length.
     */
    intentName: pulumi.Input<string>;
    /**
     * The version of the intent. Must be less than or equal to 64 characters in length.
     */
    intentVersion: pulumi.Input<string>;
}

export interface IntentConclusionStatement {
    /**
     * A set of messages, each of which provides a message string and its type.
     * You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
     * Attributes are documented under message. Must contain between 1 and 15 messages.
     */
    messages: pulumi.Input<pulumi.Input<inputs.lex.IntentConclusionStatementMessage>[]>;
    /**
     * The response card. Amazon Lex will substitute session attributes and
     * slot values into the response card. For more information, see
     * [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
     */
    responseCard?: pulumi.Input<string>;
}

export interface IntentConclusionStatementMessage {
    /**
     * The text of the message. Must be less than or equal to 1000 characters in length.
     */
    content: pulumi.Input<string>;
    /**
     * The content type of the message string.
     */
    contentType: pulumi.Input<string>;
    /**
     * Identifies the message group that the message belongs to. When a group
     * is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
     */
    groupNumber?: pulumi.Input<number>;
}

export interface IntentConfirmationPrompt {
    /**
     * The number of times to prompt the user for information. Must be a number between 1 and 5 (inclusive).
     */
    maxAttempts: pulumi.Input<number>;
    /**
     * A set of messages, each of which provides a message string and its type.
     * You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
     * Attributes are documented under message. Must contain between 1 and 15 messages.
     */
    messages: pulumi.Input<pulumi.Input<inputs.lex.IntentConfirmationPromptMessage>[]>;
    /**
     * The response card. Amazon Lex will substitute session attributes and
     * slot values into the response card. For more information, see
     * [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
     */
    responseCard?: pulumi.Input<string>;
}

export interface IntentConfirmationPromptMessage {
    /**
     * The text of the message. Must be less than or equal to 1000 characters in length.
     */
    content: pulumi.Input<string>;
    /**
     * The content type of the message string.
     */
    contentType: pulumi.Input<string>;
    /**
     * Identifies the message group that the message belongs to. When a group
     * is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
     */
    groupNumber?: pulumi.Input<number>;
}

export interface IntentDialogCodeHook {
    /**
     * The version of the request-response that you want Amazon Lex to use
     * to invoke your Lambda function. For more information, see
     * [Using Lambda Functions](https://docs.aws.amazon.com/lex/latest/dg/using-lambda.html). Must be less than or equal to 5 characters in length.
     */
    messageVersion: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the Lambda function.
     */
    uri: pulumi.Input<string>;
}

export interface IntentFollowUpPrompt {
    /**
     * Prompts for information from the user. Attributes are documented under prompt.
     */
    prompt: pulumi.Input<inputs.lex.IntentFollowUpPromptPrompt>;
    /**
     * If the user answers "no" to the question defined in the prompt field,
     * Amazon Lex responds with this statement to acknowledge that the intent was canceled. Attributes are
     * documented below under statement.
     */
    rejectionStatement: pulumi.Input<inputs.lex.IntentFollowUpPromptRejectionStatement>;
}

export interface IntentFollowUpPromptPrompt {
    /**
     * The number of times to prompt the user for information. Must be a number between 1 and 5 (inclusive).
     */
    maxAttempts: pulumi.Input<number>;
    /**
     * A set of messages, each of which provides a message string and its type.
     * You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
     * Attributes are documented under message. Must contain between 1 and 15 messages.
     */
    messages: pulumi.Input<pulumi.Input<inputs.lex.IntentFollowUpPromptPromptMessage>[]>;
    /**
     * The response card. Amazon Lex will substitute session attributes and
     * slot values into the response card. For more information, see
     * [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
     */
    responseCard?: pulumi.Input<string>;
}

export interface IntentFollowUpPromptPromptMessage {
    /**
     * The text of the message. Must be less than or equal to 1000 characters in length.
     */
    content: pulumi.Input<string>;
    /**
     * The content type of the message string.
     */
    contentType: pulumi.Input<string>;
    /**
     * Identifies the message group that the message belongs to. When a group
     * is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
     */
    groupNumber?: pulumi.Input<number>;
}

export interface IntentFollowUpPromptRejectionStatement {
    /**
     * A set of messages, each of which provides a message string and its type.
     * You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
     * Attributes are documented under message. Must contain between 1 and 15 messages.
     */
    messages: pulumi.Input<pulumi.Input<inputs.lex.IntentFollowUpPromptRejectionStatementMessage>[]>;
    /**
     * The response card. Amazon Lex will substitute session attributes and
     * slot values into the response card. For more information, see
     * [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
     */
    responseCard?: pulumi.Input<string>;
}

export interface IntentFollowUpPromptRejectionStatementMessage {
    /**
     * The text of the message. Must be less than or equal to 1000 characters in length.
     */
    content: pulumi.Input<string>;
    /**
     * The content type of the message string.
     */
    contentType: pulumi.Input<string>;
    /**
     * Identifies the message group that the message belongs to. When a group
     * is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
     */
    groupNumber?: pulumi.Input<number>;
}

export interface IntentFulfillmentActivity {
    /**
     * A description of the Lambda function that is run to fulfill the intent.
     * Required if type is CodeHook. Attributes are documented under code_hook.
     */
    codeHook?: pulumi.Input<inputs.lex.IntentFulfillmentActivityCodeHook>;
    /**
     * How the intent should be fulfilled, either by running a Lambda function or by
     * returning the slot data to the client application. Type can be either `ReturnIntent` or `CodeHook`, as documented [here](https://docs.aws.amazon.com/lex/latest/dg/API_FulfillmentActivity.html).
     */
    type: pulumi.Input<string>;
}

export interface IntentFulfillmentActivityCodeHook {
    /**
     * The version of the request-response that you want Amazon Lex to use
     * to invoke your Lambda function. For more information, see
     * [Using Lambda Functions](https://docs.aws.amazon.com/lex/latest/dg/using-lambda.html). Must be less than or equal to 5 characters in length.
     */
    messageVersion: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the Lambda function.
     */
    uri: pulumi.Input<string>;
}

export interface IntentRejectionStatement {
    /**
     * A set of messages, each of which provides a message string and its type.
     * You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
     * Attributes are documented under message. Must contain between 1 and 15 messages.
     */
    messages: pulumi.Input<pulumi.Input<inputs.lex.IntentRejectionStatementMessage>[]>;
    /**
     * The response card. Amazon Lex will substitute session attributes and
     * slot values into the response card. For more information, see
     * [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
     */
    responseCard?: pulumi.Input<string>;
}

export interface IntentRejectionStatementMessage {
    /**
     * The text of the message. Must be less than or equal to 1000 characters in length.
     */
    content: pulumi.Input<string>;
    /**
     * The content type of the message string.
     */
    contentType: pulumi.Input<string>;
    /**
     * Identifies the message group that the message belongs to. When a group
     * is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
     */
    groupNumber?: pulumi.Input<number>;
}

export interface IntentSlot {
    /**
     * A description of the bot. Must be less than or equal to 200 characters in length.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the intent slot that you want to create. The name is case sensitive. Must be less than or equal to 100 characters in length.
     */
    name: pulumi.Input<string>;
    /**
     * Directs Lex the order in which to elicit this slot value from the user.
     * For example, if the intent has two slots with priorities 1 and 2, AWS Lex first elicits a value for
     * the slot with priority 1. If multiple slots share the same priority, the order in which Lex elicits
     * values is arbitrary. Must be between 1 and 100.
     */
    priority?: pulumi.Input<number>;
    /**
     * The response card. Amazon Lex will substitute session attributes and
     * slot values into the response card. For more information, see
     * [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
     */
    responseCard?: pulumi.Input<string>;
    /**
     * If you know a specific pattern with which users might respond to
     * an Amazon Lex request for a slot value, you can provide those utterances to improve accuracy. This
     * is optional. In most cases, Amazon Lex is capable of understanding user utterances. Must have between 1 and 10 items in the list, and each item must be less than or equal to 200 characters in length.
     */
    sampleUtterances?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies whether the slot is required or optional.
     */
    slotConstraint: pulumi.Input<string>;
    /**
     * The type of the slot, either a custom slot type that you defined or one of
     * the built-in slot types. Must be less than or equal to 100 characters in length.
     */
    slotType: pulumi.Input<string>;
    /**
     * The version of the slot type. Must be less than or equal to 64 characters in length.
     */
    slotTypeVersion?: pulumi.Input<string>;
    /**
     * The prompt that Amazon Lex uses to elicit the slot value
     * from the user. Attributes are documented under prompt.
     */
    valueElicitationPrompt?: pulumi.Input<inputs.lex.IntentSlotValueElicitationPrompt>;
}

export interface IntentSlotValueElicitationPrompt {
    /**
     * The number of times to prompt the user for information. Must be a number between 1 and 5 (inclusive).
     */
    maxAttempts: pulumi.Input<number>;
    /**
     * A set of messages, each of which provides a message string and its type.
     * You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
     * Attributes are documented under message. Must contain between 1 and 15 messages.
     */
    messages: pulumi.Input<pulumi.Input<inputs.lex.IntentSlotValueElicitationPromptMessage>[]>;
    /**
     * The response card. Amazon Lex will substitute session attributes and
     * slot values into the response card. For more information, see
     * [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
     */
    responseCard?: pulumi.Input<string>;
}

export interface IntentSlotValueElicitationPromptMessage {
    /**
     * The text of the message. Must be less than or equal to 1000 characters in length.
     */
    content: pulumi.Input<string>;
    /**
     * The content type of the message string.
     */
    contentType: pulumi.Input<string>;
    /**
     * Identifies the message group that the message belongs to. When a group
     * is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
     */
    groupNumber?: pulumi.Input<number>;
}

export interface SlotTypeEnumerationValue {
    /**
     * Additional values related to the slot type value. Each item must be less than or equal to 140 characters in length.
     */
    synonyms?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The value of the slot type. Must be less than or equal to 140 characters in length.
     */
    value: pulumi.Input<string>;
}
