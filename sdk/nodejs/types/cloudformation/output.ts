// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

import {RoutingRule} from "@/s3";

export interface CloudFormationTypeLoggingConfig {
    /**
     * Name of the CloudWatch Log Group where CloudFormation sends error logging information when invoking the type's handlers.
     */
    logGroupName: string;
    /**
     * Amazon Resource Name (ARN) of the IAM Role CloudFormation assumes when sending error logging information to CloudWatch Logs.
     */
    logRoleArn: string;
}

export interface GetCloudFormationTypeLoggingConfig {
    /**
     * Name of the CloudWatch Log Group where CloudFormation sends error logging information when invoking the type's handlers.
     */
    logGroupName: string;
    /**
     * ARN of the IAM Role CloudFormation assumes when sending error logging information to CloudWatch Logs.
     */
    logRoleArn: string;
}

export interface StackSetAutoDeployment {
    /**
     * Whether or not auto-deployment is enabled.
     */
    enabled?: boolean;
    /**
     * Whether or not to retain stacks when the account is removed.
     */
    retainStacksOnAccountRemoval?: boolean;
}

export interface StackSetInstanceDeploymentTargets {
    /**
     * The organization root ID or organizational unit (OU) IDs to which StackSets deploys.
     */
    organizationalUnitIds?: string[];
}

export interface StackSetInstanceOperationPreferences {
    /**
     * The number of accounts, per Region, for which this operation can fail before AWS CloudFormation stops the operation in that Region.
     */
    failureToleranceCount?: number;
    /**
     * The percentage of accounts, per Region, for which this stack operation can fail before AWS CloudFormation stops the operation in that Region.
     */
    failureTolerancePercentage?: number;
    /**
     * The maximum number of accounts in which to perform this operation at one time.
     */
    maxConcurrentCount?: number;
    /**
     * The maximum percentage of accounts in which to perform this operation at one time.
     */
    maxConcurrentPercentage?: number;
    /**
     * The concurrency type of deploying StackSets operations in Regions, could be in parallel or one Region at a time. Valid values are `SEQUENTIAL` and `PARALLEL`.
     */
    regionConcurrencyType?: string;
    /**
     * The order of the Regions in where you want to perform the stack operation.
     */
    regionOrders?: string[];
}

export interface StackSetOperationPreferences {
    /**
     * The number of accounts, per Region, for which this operation can fail before AWS CloudFormation stops the operation in that Region.
     */
    failureToleranceCount?: number;
    /**
     * The percentage of accounts, per Region, for which this stack operation can fail before AWS CloudFormation stops the operation in that Region.
     */
    failureTolerancePercentage?: number;
    /**
     * The maximum number of accounts in which to perform this operation at one time.
     */
    maxConcurrentCount?: number;
    /**
     * The maximum percentage of accounts in which to perform this operation at one time.
     */
    maxConcurrentPercentage?: number;
    /**
     * The concurrency type of deploying StackSets operations in Regions, could be in parallel or one Region at a time.
     */
    regionConcurrencyType?: string;
    /**
     * The order of the Regions in where you want to perform the stack operation.
     */
    regionOrders?: string[];
}

