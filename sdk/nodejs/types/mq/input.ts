// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

import {RoutingRule} from "@/s3";

export interface BrokerConfiguration {
    /**
     * The Configuration ID.
     */
    id?: pulumi.Input<string>;
    /**
     * Revision of the Configuration.
     */
    revision?: pulumi.Input<number>;
}

export interface BrokerEncryptionOptions {
    /**
     * Amazon Resource Name (ARN) of Key Management Service (KMS) Customer Master Key (CMK) to use for encryption at rest. Requires setting `useAwsOwnedKey` to `false`. To perform drift detection when AWS-managed CMKs or customer-managed CMKs are in use, this value must be configured.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * Whether to enable an AWS-owned KMS CMK that is not in your account. Defaults to `true`. Setting to `false` without configuring `kmsKeyId` will create an AWS-managed CMK aliased to `aws/mq` in your account.
     */
    useAwsOwnedKey?: pulumi.Input<boolean>;
}

export interface BrokerInstance {
    consoleUrl?: pulumi.Input<string>;
    endpoints?: pulumi.Input<pulumi.Input<string>[]>;
    ipAddress?: pulumi.Input<string>;
}

export interface BrokerLdapServerMetadata {
    /**
     * List of a fully qualified domain name of the LDAP server and an optional failover server.
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Fully qualified name of the directory to search for a userâ€™s groups.
     */
    roleBase?: pulumi.Input<string>;
    /**
     * Specifies the LDAP attribute that identifies the group name attribute in the object returned from the group membership query.
     */
    roleName?: pulumi.Input<string>;
    /**
     * Search criteria for groups.
     */
    roleSearchMatching?: pulumi.Input<string>;
    /**
     * Whether the directory search scope is the entire sub-tree.
     */
    roleSearchSubtree?: pulumi.Input<boolean>;
    /**
     * Service account password.
     */
    serviceAccountPassword?: pulumi.Input<string>;
    /**
     * Service account username.
     */
    serviceAccountUsername?: pulumi.Input<string>;
    /**
     * Fully qualified name of the directory where you want to search for users.
     */
    userBase?: pulumi.Input<string>;
    /**
     * Specifies the name of the LDAP attribute for the user group membership.
     */
    userRoleName?: pulumi.Input<string>;
    /**
     * Search criteria for users.
     */
    userSearchMatching?: pulumi.Input<string>;
    /**
     * Whether the directory search scope is the entire sub-tree.
     */
    userSearchSubtree?: pulumi.Input<boolean>;
}

export interface BrokerLogs {
    /**
     * Enables audit logging. Auditing is only possible for `engineType` of `ActiveMQ`. User management action made using JMX or the ActiveMQ Web Console is logged. Defaults to `false`.
     */
    audit?: pulumi.Input<boolean>;
    /**
     * Enables general logging via CloudWatch. Defaults to `false`.
     */
    general?: pulumi.Input<boolean>;
}

export interface BrokerMaintenanceWindowStartTime {
    /**
     * Day of the week, e.g., `MONDAY`, `TUESDAY`, or `WEDNESDAY`.
     */
    dayOfWeek: pulumi.Input<string>;
    /**
     * Time, in 24-hour format, e.g., `02:00`.
     */
    timeOfDay: pulumi.Input<string>;
    /**
     * Time zone in either the Country/City format or the UTC offset format, e.g., `CET`.
     */
    timeZone: pulumi.Input<string>;
}

export interface BrokerUser {
    /**
     * Whether to enable access to the [ActiveMQ Web Console](http://activemq.apache.org/web-console.html) for the user. Applies to `engineType` of `ActiveMQ` only.
     */
    consoleAccess?: pulumi.Input<boolean>;
    /**
     * List of groups (20 maximum) to which the ActiveMQ user belongs. Applies to `engineType` of `ActiveMQ` only.
     */
    groups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Password of the user. It must be 12 to 250 characters long, at least 4 unique characters, and must not contain commas.
     */
    password: pulumi.Input<string>;
    /**
     * Username of the user.
     */
    username: pulumi.Input<string>;
}

