// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

import {RoutingRule} from "@/s3";

export interface BucketLifecycleConfigurationRule {
    /**
     * Configuration block containing settings for abort incomplete multipart upload.
     */
    abortIncompleteMultipartUpload?: pulumi.Input<inputs.s3control.BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload>;
    /**
     * Configuration block containing settings for expiration of objects.
     */
    expiration?: pulumi.Input<inputs.s3control.BucketLifecycleConfigurationRuleExpiration>;
    /**
     * Configuration block containing settings for filtering.
     */
    filter?: pulumi.Input<inputs.s3control.BucketLifecycleConfigurationRuleFilter>;
    /**
     * Unique identifier for the rule.
     */
    id: pulumi.Input<string>;
    /**
     * Status of the rule. Valid values: `Enabled` and `Disabled`. Defaults to `Enabled`.
     */
    status?: pulumi.Input<string>;
}

export interface BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload {
    /**
     * Number of days after which Amazon S3 aborts an incomplete multipart upload.
     */
    daysAfterInitiation: pulumi.Input<number>;
}

export interface BucketLifecycleConfigurationRuleExpiration {
    /**
     * Date the object is to be deleted. Should be in `YYYY-MM-DD` date format, e.g., `2020-09-30`.
     */
    date?: pulumi.Input<string>;
    /**
     * Number of days before the object is to be deleted.
     */
    days?: pulumi.Input<number>;
    /**
     * Enable to remove a delete marker with no noncurrent versions. Cannot be specified with `date` or `days`.
     */
    expiredObjectDeleteMarker?: pulumi.Input<boolean>;
}

export interface BucketLifecycleConfigurationRuleFilter {
    /**
     * Object prefix for rule filtering.
     */
    prefix?: pulumi.Input<string>;
    /**
     * Key-value map of object tags for rule filtering.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface MultiRegionAccessPointDetails {
    name: pulumi.Input<string>;
    publicAccessBlock?: pulumi.Input<inputs.s3control.MultiRegionAccessPointDetailsPublicAccessBlock>;
    regions: pulumi.Input<pulumi.Input<inputs.s3control.MultiRegionAccessPointDetailsRegion>[]>;
}

export interface MultiRegionAccessPointDetailsPublicAccessBlock {
    blockPublicAcls?: pulumi.Input<boolean>;
    blockPublicPolicy?: pulumi.Input<boolean>;
    ignorePublicAcls?: pulumi.Input<boolean>;
    restrictPublicBuckets?: pulumi.Input<boolean>;
}

export interface MultiRegionAccessPointDetailsRegion {
    bucket: pulumi.Input<string>;
}

export interface MultiRegionAccessPointPolicyDetails {
    /**
     * The name of the Multi-Region Access Point.
     */
    name: pulumi.Input<string>;
    /**
     * A valid JSON document that specifies the policy that you want to associate with this Multi-Region Access Point. Once applied, the policy can be edited, but not deleted. For more information, see the documentation on [Multi-Region Access Point Permissions](https://docs.aws.amazon.com/AmazonS3/latest/userguide/MultiRegionAccessPointPermissions.html).
     */
    policy: pulumi.Input<string>;
}

export interface ObjectLambdaAccessPointConfiguration {
    /**
     * Allowed features. Valid values: `GetObject-Range`, `GetObject-PartNumber`.
     */
    allowedFeatures?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether or not the CloudWatch metrics configuration is enabled.
     */
    cloudWatchMetricsEnabled?: pulumi.Input<boolean>;
    /**
     * Standard access point associated with the Object Lambda Access Point.
     */
    supportingAccessPoint: pulumi.Input<string>;
    /**
     * List of transformation configurations for the Object Lambda Access Point. See Transformation Configuration below for more details.
     */
    transformationConfigurations: pulumi.Input<pulumi.Input<inputs.s3control.ObjectLambdaAccessPointConfigurationTransformationConfiguration>[]>;
}

export interface ObjectLambdaAccessPointConfigurationTransformationConfiguration {
    /**
     * The actions of an Object Lambda Access Point configuration. Valid values: `GetObject`.
     */
    actions: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The content transformation of an Object Lambda Access Point configuration. See Content Transformation below for more details.
     */
    contentTransformation: pulumi.Input<inputs.s3control.ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformation>;
}

export interface ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformation {
    /**
     * Configuration for an AWS Lambda function. See AWS Lambda below for more details.
     */
    awsLambda: pulumi.Input<inputs.s3control.ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambda>;
}

export interface ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambda {
    /**
     * The Amazon Resource Name (ARN) of the AWS Lambda function.
     */
    functionArn: pulumi.Input<string>;
    /**
     * Additional JSON that provides supplemental data to the Lambda function used to transform objects.
     */
    functionPayload?: pulumi.Input<string>;
}

export interface StorageLensConfigurationStorageLensConfiguration {
    /**
     * The account-level configurations of the S3 Storage Lens configuration. See Account Level below for more details.
     */
    accountLevel: pulumi.Input<inputs.s3control.StorageLensConfigurationStorageLensConfigurationAccountLevel>;
    /**
     * The Amazon Web Services organization for the S3 Storage Lens configuration. See AWS Org below for more details.
     */
    awsOrg?: pulumi.Input<inputs.s3control.StorageLensConfigurationStorageLensConfigurationAwsOrg>;
    /**
     * Properties of S3 Storage Lens metrics export including the destination, schema and format. See Data Export below for more details.
     */
    dataExport?: pulumi.Input<inputs.s3control.StorageLensConfigurationStorageLensConfigurationDataExport>;
    /**
     * Whether the S3 Storage Lens configuration is enabled.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * What is excluded in this configuration. Conflicts with `include`. See Exclude below for more details.
     */
    exclude?: pulumi.Input<inputs.s3control.StorageLensConfigurationStorageLensConfigurationExclude>;
    /**
     * What is included in this configuration. Conflicts with `exclude`. See Include below for more details.
     */
    include?: pulumi.Input<inputs.s3control.StorageLensConfigurationStorageLensConfigurationInclude>;
}

export interface StorageLensConfigurationStorageLensConfigurationAccountLevel {
    /**
     * S3 Storage Lens activity metrics. See Activity Metrics below for more details.
     */
    activityMetrics?: pulumi.Input<inputs.s3control.StorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetrics>;
    /**
     * S3 Storage Lens bucket-level configuration. See Bucket Level below for more details.
     */
    bucketLevel: pulumi.Input<inputs.s3control.StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevel>;
}

export interface StorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetrics {
    /**
     * Whether the activity metrics are enabled.
     */
    enabled?: pulumi.Input<boolean>;
}

export interface StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevel {
    /**
     * S3 Storage Lens activity metrics. See Activity Metrics above for more details.
     */
    activityMetrics?: pulumi.Input<inputs.s3control.StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetrics>;
    /**
     * Prefix-level metrics for S3 Storage Lens. See Prefix Level below for more details.
     */
    prefixLevel?: pulumi.Input<inputs.s3control.StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevel>;
}

export interface StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetrics {
    /**
     * Whether the activity metrics are enabled.
     */
    enabled?: pulumi.Input<boolean>;
}

export interface StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevel {
    /**
     * Prefix-level storage metrics for S3 Storage Lens. See Prefix Level Storage Metrics below for more details.
     */
    storageMetrics: pulumi.Input<inputs.s3control.StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetrics>;
}

export interface StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetrics {
    /**
     * Whether prefix-level storage metrics are enabled.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Selection criteria. See Selection Criteria below for more details.
     */
    selectionCriteria?: pulumi.Input<inputs.s3control.StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteria>;
}

export interface StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteria {
    /**
     * The delimiter of the selection criteria being used.
     */
    delimiter?: pulumi.Input<string>;
    /**
     * The max depth of the selection criteria.
     */
    maxDepth?: pulumi.Input<number>;
    /**
     * The minimum number of storage bytes percentage whose metrics will be selected.
     */
    minStorageBytesPercentage?: pulumi.Input<number>;
}

export interface StorageLensConfigurationStorageLensConfigurationAwsOrg {
    /**
     * The Amazon Resource Name (ARN) of the Amazon Web Services organization.
     */
    arn: pulumi.Input<string>;
}

export interface StorageLensConfigurationStorageLensConfigurationDataExport {
    /**
     * Amazon CloudWatch publishing for S3 Storage Lens metrics. See Cloud Watch Metrics below for more details.
     */
    cloudWatchMetrics?: pulumi.Input<inputs.s3control.StorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetrics>;
    /**
     * The bucket where the S3 Storage Lens metrics export will be located. See S3 Bucket Destination below for more details.
     */
    s3BucketDestination?: pulumi.Input<inputs.s3control.StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestination>;
}

export interface StorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetrics {
    /**
     * Whether CloudWatch publishing for S3 Storage Lens metrics is enabled.
     */
    enabled: pulumi.Input<boolean>;
}

export interface StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestination {
    /**
     * The account ID of the owner of the S3 Storage Lens metrics export bucket.
     */
    accountId: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the bucket.
     */
    arn: pulumi.Input<string>;
    /**
     * Encryption of the metrics exports in this bucket. See Encryption below for more details.
     */
    encryption?: pulumi.Input<inputs.s3control.StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryption>;
    /**
     * The export format. Valid values: `CSV`, `Parquet`.
     */
    format: pulumi.Input<string>;
    /**
     * The schema version of the export file. Valid values: `V_1`.
     */
    outputSchemaVersion: pulumi.Input<string>;
    /**
     * The prefix of the destination bucket where the metrics export will be delivered.
     */
    prefix?: pulumi.Input<string>;
}

export interface StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryption {
    /**
     * SSE-KMS encryption. See SSE KMS below for more details.
     */
    sseKms?: pulumi.Input<inputs.s3control.StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKms>;
    /**
     * SSE-S3 encryption. An empty configuration block `{}` should be used.
     */
    sseS3s?: pulumi.Input<pulumi.Input<inputs.s3control.StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3>[]>;
}

export interface StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKms {
    /**
     * KMS key ARN.
     */
    keyId: pulumi.Input<string>;
}

export interface StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3 {
}

export interface StorageLensConfigurationStorageLensConfigurationExclude {
    /**
     * List of S3 bucket ARNs.
     */
    buckets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of AWS Regions.
     */
    regions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface StorageLensConfigurationStorageLensConfigurationInclude {
    /**
     * List of S3 bucket ARNs.
     */
    buckets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of AWS Regions.
     */
    regions?: pulumi.Input<pulumi.Input<string>[]>;
}
