// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

import {RoutingRule} from "@/s3";

export interface ByteMatchSetByteMatchTuple {
    /**
     * Settings for the ByteMatchTuple. FieldToMatch documented below.
     */
    fieldToMatch: outputs.wafregional.ByteMatchSetByteMatchTupleFieldToMatch;
    /**
     * Within the portion of a web request that you want to search.
     */
    positionalConstraint: string;
    /**
     * The value that you want AWS WAF to search for. The maximum length of the value is 50 bytes.
     */
    targetString?: string;
    /**
     * The formatting way for web request.
     */
    textTransformation: string;
}

export interface ByteMatchSetByteMatchTupleFieldToMatch {
    /**
     * When the value of Type is HEADER, enter the name of the header that you want AWS WAF to search, for example, User-Agent or Referer. If the value of Type is any other value, omit Data.
     */
    data?: string;
    /**
     * The part of the web request that you want AWS WAF to search for a specified string.
     */
    type: string;
}

export interface GeoMatchSetGeoMatchConstraint {
    /**
     * The type of geographical area you want AWS WAF to search for. Currently Country is the only valid value.
     */
    type: string;
    /**
     * The country that you want AWS WAF to search for.
     * This is the two-letter country code, e.g., `US`, `CA`, `RU`, `CN`, etc.
     * See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_GeoMatchConstraint.html) for all supported values.
     */
    value: string;
}

export interface IpSetIpSetDescriptor {
    /**
     * The string like IPV4 or IPV6.
     */
    type: string;
    /**
     * The CIDR notation.
     */
    value: string;
}

export interface RateBasedRulePredicate {
    /**
     * A unique identifier for a predicate in the rule, such as Byte Match Set ID or IPSet ID.
     */
    dataId: string;
    /**
     * Set this to `false` if you want to allow, block, or count requests
     * based on the settings in the specified `ByteMatchSet`, `IPSet`, `SqlInjectionMatchSet`, `XssMatchSet`, or `SizeConstraintSet`.
     * For example, if an IPSet includes the IP address `192.0.2.44`, AWS WAF will allow or block requests based on that IP address.
     * If set to `true`, AWS WAF will allow, block, or count requests based on all IP addresses _except_ `192.0.2.44`.
     */
    negated: boolean;
    /**
     * The type of predicate in a rule. Valid values: `ByteMatch`, `GeoMatch`, `IPMatch`, `RegexMatch`, `SizeConstraint`, `SqlInjectionMatch`, or `XssMatch`.
     */
    type: string;
}

export interface RegexMatchSetRegexMatchTuple {
    /**
     * The part of a web request that you want to search, such as a specified header or a query string.
     */
    fieldToMatch: outputs.wafregional.RegexMatchSetRegexMatchTupleFieldToMatch;
    /**
     * The ID of a Regex Pattern Set.
     */
    regexPatternSetId: string;
    /**
     * Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
     * e.g., `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
     * See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_ByteMatchTuple.html#WAF-Type-ByteMatchTuple-TextTransformation)
     * for all supported values.
     */
    textTransformation: string;
}

export interface RegexMatchSetRegexMatchTupleFieldToMatch {
    /**
     * When `type` is `HEADER`, enter the name of the header that you want to search, e.g., `User-Agent` or `Referer`.
     * If `type` is any other value, omit this field.
     */
    data?: string;
    /**
     * The part of the web request that you want AWS WAF to search for a specified string.
     * e.g., `HEADER`, `METHOD` or `BODY`.
     * See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_FieldToMatch.html)
     * for all supported values.
     */
    type: string;
}

export interface RuleGroupActivatedRule {
    /**
     * Specifies the action that CloudFront or AWS WAF takes when a web request matches the conditions in the rule.
     */
    action: outputs.wafregional.RuleGroupActivatedRuleAction;
    /**
     * Specifies the order in which the rules are evaluated. Rules with a lower value are evaluated before rules with a higher value.
     */
    priority: number;
    /**
     * The ID of a rule
     */
    ruleId: string;
    /**
     * The rule type, either `REGULAR`, `RATE_BASED`, or `GROUP`. Defaults to `REGULAR`.
     */
    type?: string;
}

export interface RuleGroupActivatedRuleAction {
    /**
     * The rule type, either `REGULAR`, `RATE_BASED`, or `GROUP`. Defaults to `REGULAR`.
     */
    type: string;
}

export interface RulePredicate {
    dataId: string;
    negated: boolean;
    type: string;
}

export interface SizeConstraintSetSizeConstraint {
    /**
     * The type of comparison you want to perform.
     * e.g., `EQ`, `NE`, `LT`, `GT`.
     * See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_SizeConstraint.html) for all supported values.
     */
    comparisonOperator: string;
    /**
     * Specifies where in a web request to look for the size constraint.
     */
    fieldToMatch: outputs.wafregional.SizeConstraintSetSizeConstraintFieldToMatch;
    /**
     * The size in bytes that you want to compare against the size of the specified `fieldToMatch`.
     * Valid values are between 0 - 21474836480 bytes (0 - 20 GB).
     */
    size: number;
    /**
     * Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
     * If you specify a transformation, AWS WAF performs the transformation on `fieldToMatch` before inspecting a request for a match.
     * e.g., `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
     * See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_SizeConstraint.html#WAF-Type-SizeConstraint-TextTransformation)
     * for all supported values.
     * **Note:** if you choose `BODY` as `type`, you must choose `NONE` because CloudFront forwards only the first 8192 bytes for inspection.
     */
    textTransformation: string;
}

export interface SizeConstraintSetSizeConstraintFieldToMatch {
    /**
     * When `type` is `HEADER`, enter the name of the header that you want to search, e.g., `User-Agent` or `Referer`.
     * If `type` is any other value, omit this field.
     */
    data?: string;
    /**
     * The part of the web request that you want AWS WAF to search for a specified string.
     * e.g., `HEADER`, `METHOD` or `BODY`.
     * See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_FieldToMatch.html)
     * for all supported values.
     */
    type: string;
}

export interface SqlInjectionMatchSetSqlInjectionMatchTuple {
    /**
     * Specifies where in a web request to look for snippets of malicious SQL code.
     */
    fieldToMatch: outputs.wafregional.SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatch;
    /**
     * Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
     * If you specify a transformation, AWS WAF performs the transformation on `fieldToMatch` before inspecting a request for a match.
     * e.g., `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
     * See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_regional_SqlInjectionMatchTuple.html#WAF-Type-regional_SqlInjectionMatchTuple-TextTransformation)
     * for all supported values.
     */
    textTransformation: string;
}

export interface SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatch {
    /**
     * When `type` is `HEADER`, enter the name of the header that you want to search, e.g., `User-Agent` or `Referer`.
     * If `type` is any other value, omit this field.
     */
    data?: string;
    /**
     * The part of the web request that you want AWS WAF to search for a specified string.
     * e.g., `HEADER`, `METHOD` or `BODY`.
     * See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_regional_FieldToMatch.html)
     * for all supported values.
     */
    type: string;
}

export interface WebAclDefaultAction {
    /**
     * Specifies how you want AWS WAF Regional to respond to requests that match the settings in a rule. Valid values for `action` are `ALLOW`, `BLOCK` or `COUNT`. Valid values for `overrideAction` are `COUNT` and `NONE`.
     */
    type: string;
}

export interface WebAclLoggingConfiguration {
    /**
     * Amazon Resource Name (ARN) of Kinesis Firehose Delivery Stream
     */
    logDestination: string;
    /**
     * Configuration block containing parts of the request that you want redacted from the logs. Detailed below.
     */
    redactedFields?: outputs.wafregional.WebAclLoggingConfigurationRedactedFields;
}

export interface WebAclLoggingConfigurationRedactedFields {
    /**
     * Set of configuration blocks for fields to redact. Detailed below.
     */
    fieldToMatches: outputs.wafregional.WebAclLoggingConfigurationRedactedFieldsFieldToMatch[];
}

export interface WebAclLoggingConfigurationRedactedFieldsFieldToMatch {
    /**
     * When the value of `type` is `HEADER`, enter the name of the header that you want the WAF to search, for example, `User-Agent` or `Referer`. If the value of `type` is any other value, omit `data`.
     */
    data?: string;
    /**
     * Specifies how you want AWS WAF Regional to respond to requests that match the settings in a rule. Valid values for `action` are `ALLOW`, `BLOCK` or `COUNT`. Valid values for `overrideAction` are `COUNT` and `NONE`.
     */
    type: string;
}

export interface WebAclRule {
    /**
     * Configuration block of the action that CloudFront or AWS WAF takes when a web request matches the conditions in the rule.  Not used if `type` is `GROUP`. Detailed below.
     */
    action?: outputs.wafregional.WebAclRuleAction;
    /**
     * Configuration block of the override the action that a group requests CloudFront or AWS WAF takes when a web request matches the conditions in the rule.  Only used if `type` is `GROUP`. Detailed below.
     */
    overrideAction?: outputs.wafregional.WebAclRuleOverrideAction;
    /**
     * Specifies the order in which the rules in a WebACL are evaluated.
     * Rules with a lower value are evaluated before rules with a higher value.
     */
    priority: number;
    /**
     * ID of the associated WAF (Regional) rule (e.g., `aws.wafregional.Rule`). WAF (Global) rules cannot be used.
     */
    ruleId: string;
    /**
     * Specifies how you want AWS WAF Regional to respond to requests that match the settings in a rule. Valid values for `action` are `ALLOW`, `BLOCK` or `COUNT`. Valid values for `overrideAction` are `COUNT` and `NONE`.
     */
    type?: string;
}

export interface WebAclRuleAction {
    /**
     * Specifies how you want AWS WAF Regional to respond to requests that match the settings in a rule. Valid values for `action` are `ALLOW`, `BLOCK` or `COUNT`. Valid values for `overrideAction` are `COUNT` and `NONE`.
     */
    type: string;
}

export interface WebAclRuleOverrideAction {
    /**
     * Specifies how you want AWS WAF Regional to respond to requests that match the settings in a rule. Valid values for `action` are `ALLOW`, `BLOCK` or `COUNT`. Valid values for `overrideAction` are `COUNT` and `NONE`.
     */
    type: string;
}

export interface XssMatchSetXssMatchTuple {
    /**
     * Specifies where in a web request to look for cross-site scripting attacks.
     */
    fieldToMatch: outputs.wafregional.XssMatchSetXssMatchTupleFieldToMatch;
    /**
     * Which text transformation, if any, to perform on the web request before inspecting the request for cross-site scripting attacks.
     */
    textTransformation: string;
}

export interface XssMatchSetXssMatchTupleFieldToMatch {
    /**
     * When the value of `type` is `HEADER`, enter the name of the header that you want the WAF to search, for example, `User-Agent` or `Referer`. If the value of `type` is any other value, omit `data`.
     */
    data?: string;
    /**
     * The part of the web request that you want AWS WAF to search for a specified stringE.g., `HEADER` or `METHOD`
     */
    type: string;
}

