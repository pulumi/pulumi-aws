// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

import {RoutingRule} from "@/s3";

export interface ApplicationAutoStartConfiguration {
    /**
     * Enables the application to automatically stop after a certain amount of time being idle. Defaults to `true`.
     */
    enabled?: pulumi.Input<boolean>;
}

export interface ApplicationAutoStopConfiguration {
    /**
     * Enables the application to automatically stop after a certain amount of time being idle. Defaults to `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The amount of idle time in minutes after which your application will automatically stop. Defaults to `15` minutes.
     */
    idleTimeoutMinutes?: pulumi.Input<number>;
}

export interface ApplicationInitialCapacity {
    /**
     * The initial capacity configuration per worker.
     */
    initialCapacityConfig?: pulumi.Input<inputs.emrserverless.ApplicationInitialCapacityInitialCapacityConfig>;
    /**
     * The worker type for an analytics framework. For Spark applications, the key can either be set to `Driver` or `Executor`. For Hive applications, it can be set to `HiveDriver` or `TezTask`.
     */
    initialCapacityType: pulumi.Input<string>;
}

export interface ApplicationInitialCapacityInitialCapacityConfig {
    /**
     * The resource configuration of the initial capacity configuration.
     */
    workerConfiguration?: pulumi.Input<inputs.emrserverless.ApplicationInitialCapacityInitialCapacityConfigWorkerConfiguration>;
    /**
     * The number of workers in the initial capacity configuration.
     */
    workerCount: pulumi.Input<number>;
}

export interface ApplicationInitialCapacityInitialCapacityConfigWorkerConfiguration {
    /**
     * The CPU requirements for every worker instance of the worker type.
     */
    cpu: pulumi.Input<string>;
    /**
     * The disk requirements for every worker instance of the worker type.
     */
    disk?: pulumi.Input<string>;
    /**
     * The memory requirements for every worker instance of the worker type.
     */
    memory: pulumi.Input<string>;
}

export interface ApplicationMaximumCapacity {
    /**
     * The CPU requirements for every worker instance of the worker type.
     */
    cpu: pulumi.Input<string>;
    /**
     * The disk requirements for every worker instance of the worker type.
     */
    disk?: pulumi.Input<string>;
    /**
     * The memory requirements for every worker instance of the worker type.
     */
    memory: pulumi.Input<string>;
}

export interface ApplicationNetworkConfiguration {
    /**
     * The array of security group Ids for customer VPC connectivity.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The array of subnet Ids for customer VPC connectivity.
     */
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
}
