// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

import {RoutingRule} from "@/s3";

export interface EndpointAuthenticationOption {
    /**
     * The ID of the Active Directory to be used for authentication if type is `directory-service-authentication`.
     */
    activeDirectoryId?: string;
    /**
     * The ARN of the client certificate. The certificate must be signed by a certificate authority (CA) and it must be provisioned in AWS Certificate Manager (ACM). Only necessary when type is set to `certificate-authentication`.
     */
    rootCertificateChainArn?: string;
    /**
     * The ARN of the IAM SAML identity provider if type is `federated-authentication`.
     */
    samlProviderArn?: string;
    /**
     * The ARN of the IAM SAML identity provider for the self service portal if type is `federated-authentication`.
     */
    selfServiceSamlProviderArn?: string;
    /**
     * The type of client authentication to be used. Specify `certificate-authentication` to use certificate-based authentication, `directory-service-authentication` to use Active Directory authentication, or `federated-authentication` to use Federated Authentication via SAML 2.0.
     */
    type: string;
}

export interface EndpointClientConnectOptions {
    /**
     * Indicates whether connection logging is enabled.
     */
    enabled: boolean;
    /**
     * The Amazon Resource Name (ARN) of the Lambda function used for connection authorization.
     */
    lambdaFunctionArn: string;
}

export interface EndpointClientLoginBannerOptions {
    /**
     * Customizable text that will be displayed in a banner on AWS provided clients when a VPN session is established. UTF-8 encoded characters only. Maximum of 1400 characters.
     */
    bannerText: string;
    /**
     * Indicates whether connection logging is enabled.
     */
    enabled: boolean;
}

export interface EndpointConnectionLogOptions {
    /**
     * The name of the CloudWatch Logs log group.
     */
    cloudwatchLogGroup?: string;
    /**
     * The name of the CloudWatch Logs log stream to which the connection data is published.
     */
    cloudwatchLogStream: string;
    /**
     * Indicates whether connection logging is enabled.
     */
    enabled: boolean;
}

export interface GetEndpointAuthenticationOption {
    activeDirectoryId: string;
    rootCertificateChainArn: string;
    samlProviderArn: string;
    selfServiceSamlProviderArn: string;
    type: string;
}

export interface GetEndpointClientConnectOption {
    enabled: boolean;
    lambdaFunctionArn: string;
}

export interface GetEndpointClientLoginBannerOption {
    bannerText: string;
    enabled: boolean;
}

export interface GetEndpointConnectionLogOption {
    cloudwatchLogGroup: string;
    cloudwatchLogStream: string;
    enabled: boolean;
}

export interface GetEndpointFilter {
    /**
     * Name of the field to filter by, as defined by [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeClientVpnEndpoints.html).
     */
    name: string;
    /**
     * Set of values that are accepted for the given field. An endpoint will be selected if any one of the given values matches.
     */
    values: string[];
}

