// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

import {RoutingRule} from "@/s3";

export interface GetVirtualClusterContainerProvider {
    /**
     * The name of the container provider that is running your EMR Containers cluster
     */
    id: string;
    /**
     * Nested list containing information about the configuration of the container provider
     */
    infos: outputs.emrcontainers.GetVirtualClusterContainerProviderInfo[];
    /**
     * The type of the container provider
     */
    type: string;
}

export interface GetVirtualClusterContainerProviderInfo {
    /**
     * Nested list containing EKS-specific information about the cluster where the EMR Containers cluster is running
     */
    eksInfos: outputs.emrcontainers.GetVirtualClusterContainerProviderInfoEksInfo[];
}

export interface GetVirtualClusterContainerProviderInfoEksInfo {
    /**
     * The namespace where the EMR Containers cluster is running
     */
    namespace: string;
}

export interface VirtualClusterContainerProvider {
    /**
     * The name of the container provider that is running your EMR Containers cluster
     */
    id: string;
    /**
     * Nested list containing information about the configuration of the container provider
     */
    info: outputs.emrcontainers.VirtualClusterContainerProviderInfo;
    /**
     * The type of the container provider
     */
    type: string;
}

export interface VirtualClusterContainerProviderInfo {
    /**
     * Nested list containing EKS-specific information about the cluster where the EMR Containers cluster is running
     */
    eksInfo: outputs.emrcontainers.VirtualClusterContainerProviderInfoEksInfo;
}

export interface VirtualClusterContainerProviderInfoEksInfo {
    /**
     * The namespace where the EMR Containers cluster is running
     */
    namespace?: string;
}

