// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

import {RoutingRule} from "@/s3";

export interface ConfigurationSetDeliveryOptions {
    /**
     * The name of the dedicated IP pool to associate with the configuration set.
     */
    sendingPoolName?: string;
    /**
     * Specifies whether messages that use the configuration set are required to use Transport Layer Security (TLS). Valid values: `REQUIRE`, `OPTIONAL`.
     */
    tlsPolicy?: string;
}

export interface ConfigurationSetReputationOptions {
    /**
     * The date and time (in Unix time) when the reputation metrics were last given a fresh start. When your account is given a fresh start, your reputation metrics are calculated starting from the date of the fresh start.
     */
    lastFreshStart: string;
    /**
     * If `true`, tracking of reputation metrics is enabled for the configuration set. If `false`, tracking of reputation metrics is disabled for the configuration set.
     */
    reputationMetricsEnabled: boolean;
}

export interface ConfigurationSetSendingOptions {
    /**
     * If `true`, email sending is enabled for the configuration set. If `false`, email sending is disabled for the configuration set.
     */
    sendingEnabled: boolean;
}

export interface ConfigurationSetSuppressionOptions {
    /**
     * A list that contains the reasons that email addresses are automatically added to the suppression list for your account. Valid values: `BOUNCE`, `COMPLAINT`.
     */
    suppressedReasons?: string[];
}

export interface ConfigurationSetTrackingOptions {
    /**
     * The domain to use for tracking open and click events.
     */
    customRedirectDomain: string;
}

export interface EmailIdentityDkimSigningAttributes {
    /**
     * [Easy DKIM] The key length of the DKIM key pair in use.
     */
    currentSigningKeyLength: string;
    /**
     * [Bring Your Own DKIM] A private key that's used to generate a DKIM signature. The private key must use 1024 or 2048-bit RSA encryption, and must be encoded using base64 encoding.
     */
    domainSigningPrivateKey?: string;
    /**
     * [Bring Your Own DKIM] A string that's used to identify a public key in the DNS configuration for a domain.
     */
    domainSigningSelector?: string;
    /**
     * [Easy DKIM] The last time a key pair was generated for this identity.
     */
    lastKeyGenerationTimestamp: string;
    /**
     * [Easy DKIM] The key length of the future DKIM key pair to be generated. This can be changed at most once per day. Valid values: `RSA_1024_BIT`, `RSA_2048_BIT`.
     */
    nextSigningKeyLength: string;
    /**
     * A string that indicates how DKIM was configured for the identity. `AWS_SES` indicates that DKIM was configured for the identity by using Easy DKIM. `EXTERNAL` indicates that DKIM was configured for the identity by using Bring Your Own DKIM (BYODKIM).
     */
    signingAttributesOrigin: string;
    /**
     * Describes whether or not Amazon SES has successfully located the DKIM records in the DNS records for the domain. See the [AWS SES API v2 Reference](https://docs.aws.amazon.com/ses/latest/APIReference-V2/API_DkimAttributes.html#SES-Type-DkimAttributes-Status) for supported statuses.
     */
    status: string;
    /**
     * If you used Easy DKIM to configure DKIM authentication for the domain, then this object contains a set of unique strings that you use to create a set of CNAME records that you add to the DNS configuration for your domain. When Amazon SES detects these records in the DNS configuration for your domain, the DKIM authentication process is complete. If you configured DKIM authentication for the domain by providing your own public-private key pair, then this object contains the selector for the public key.
     */
    tokens: string[];
}

export interface GetDedicatedIpPoolDedicatedIp {
    /**
     * IPv4 address.
     */
    ip: string;
    /**
     * Indicates how complete the dedicated IP warm-up process is. When this value equals `1`, the address has completed the warm-up process and is ready for use.
     */
    warmupPercentage: number;
    /**
     * The warm-up status of a dedicated IP address. Valid values: `IN_PROGRESS`, `DONE`.
     */
    warmupStatus: string;
}

