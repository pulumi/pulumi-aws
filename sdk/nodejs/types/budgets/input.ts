// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

import {RoutingRule} from "@/s3";

export interface BudgetActionActionThreshold {
    /**
     * The type of threshold for a notification. Valid values are `PERCENTAGE` or `ABSOLUTE_VALUE`.
     */
    actionThresholdType: pulumi.Input<string>;
    /**
     * The threshold of a notification.
     */
    actionThresholdValue: pulumi.Input<number>;
}

export interface BudgetActionDefinition {
    /**
     * The AWS Identity and Access Management (IAM) action definition details. See IAM Action Definition.
     */
    iamActionDefinition?: pulumi.Input<inputs.budgets.BudgetActionDefinitionIamActionDefinition>;
    /**
     * The service control policies (SCPs) action definition details. See SCP Action Definition.
     */
    scpActionDefinition?: pulumi.Input<inputs.budgets.BudgetActionDefinitionScpActionDefinition>;
    /**
     * The AWS Systems Manager (SSM) action definition details. See SSM Action Definition.
     */
    ssmActionDefinition?: pulumi.Input<inputs.budgets.BudgetActionDefinitionSsmActionDefinition>;
}

export interface BudgetActionDefinitionIamActionDefinition {
    /**
     * A list of groups to be attached. There must be at least one group.
     */
    groups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Amazon Resource Name (ARN) of the policy to be attached.
     */
    policyArn: pulumi.Input<string>;
    /**
     * A list of roles to be attached. There must be at least one role.
     */
    roles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of users to be attached. There must be at least one user.
     */
    users?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface BudgetActionDefinitionScpActionDefinition {
    /**
     * The policy ID attached.
     */
    policyId: pulumi.Input<string>;
    /**
     * A list of target IDs.
     */
    targetIds: pulumi.Input<pulumi.Input<string>[]>;
}

export interface BudgetActionDefinitionSsmActionDefinition {
    /**
     * The action subType. Valid values are `STOP_EC2_INSTANCES` or `STOP_RDS_INSTANCES`.
     */
    actionSubType: pulumi.Input<string>;
    /**
     * The EC2 and RDS instance IDs.
     */
    instanceIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Region to run the SSM document.
     */
    region: pulumi.Input<string>;
}

export interface BudgetActionSubscriber {
    /**
     * The address that AWS sends budget notifications to, either an SNS topic or an email.
     */
    address: pulumi.Input<string>;
    /**
     * The type of notification that AWS sends to a subscriber. Valid values are `SNS` or `EMAIL`.
     */
    subscriptionType: pulumi.Input<string>;
}

export interface BudgetAutoAdjustData {
    autoAdjustType: pulumi.Input<string>;
    historicalOptions?: pulumi.Input<inputs.budgets.BudgetAutoAdjustDataHistoricalOptions>;
    lastAutoAdjustTime?: pulumi.Input<string>;
}

export interface BudgetAutoAdjustDataHistoricalOptions {
    budgetAdjustmentPeriod: pulumi.Input<number>;
    lookbackAvailablePeriods?: pulumi.Input<number>;
}

export interface BudgetCostFilter {
    /**
     * The name of a budget. Unique within accounts.
     */
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface BudgetCostTypes {
    /**
     * A boolean value whether to include credits in the cost budget. Defaults to `true`
     */
    includeCredit?: pulumi.Input<boolean>;
    /**
     * Whether a budget includes discounts. Defaults to `true`
     */
    includeDiscount?: pulumi.Input<boolean>;
    /**
     * A boolean value whether to include other subscription costs in the cost budget. Defaults to `true`
     */
    includeOtherSubscription?: pulumi.Input<boolean>;
    /**
     * A boolean value whether to include recurring costs in the cost budget. Defaults to `true`
     */
    includeRecurring?: pulumi.Input<boolean>;
    /**
     * A boolean value whether to include refunds in the cost budget. Defaults to `true`
     */
    includeRefund?: pulumi.Input<boolean>;
    /**
     * A boolean value whether to include subscriptions in the cost budget. Defaults to `true`
     */
    includeSubscription?: pulumi.Input<boolean>;
    /**
     * A boolean value whether to include support costs in the cost budget. Defaults to `true`
     */
    includeSupport?: pulumi.Input<boolean>;
    /**
     * A boolean value whether to include tax in the cost budget. Defaults to `true`
     */
    includeTax?: pulumi.Input<boolean>;
    /**
     * A boolean value whether to include upfront costs in the cost budget. Defaults to `true`
     */
    includeUpfront?: pulumi.Input<boolean>;
    /**
     * Whether a budget uses the amortized rate. Defaults to `false`
     */
    useAmortized?: pulumi.Input<boolean>;
    /**
     * A boolean value whether to use blended costs in the cost budget. Defaults to `false`
     */
    useBlended?: pulumi.Input<boolean>;
}

export interface BudgetNotification {
    /**
     * (Required) Comparison operator to use to evaluate the condition. Can be `LESS_THAN`, `EQUAL_TO` or `GREATER_THAN`.
     */
    comparisonOperator: pulumi.Input<string>;
    /**
     * (Required) What kind of budget value to notify on. Can be `ACTUAL` or `FORECASTED`
     */
    notificationType: pulumi.Input<string>;
    /**
     * (Optional) E-Mail addresses to notify. Either this or `subscriberSnsTopicArns` is required.
     */
    subscriberEmailAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Optional) SNS topics to notify. Either this or `subscriberEmailAddresses` is required.
     */
    subscriberSnsTopicArns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Required) Threshold when the notification should be sent.
     */
    threshold: pulumi.Input<number>;
    /**
     * (Required) What kind of threshold is defined. Can be `PERCENTAGE` OR `ABSOLUTE_VALUE`.
     */
    thresholdType: pulumi.Input<string>;
}

export interface BudgetPlannedLimit {
    /**
     * (Required) The amount of cost or usage being measured for a budget.
     */
    amount: pulumi.Input<string>;
    /**
     * (Required) The start time of the budget limit. Format: `2017-01-01_12:00`. See [PlannedBudgetLimits](https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_budgets_Budget.html#awscostmanagement-Type-budgets_Budget-PlannedBudgetLimits) documentation.
     */
    startTime: pulumi.Input<string>;
    /**
     * (Required) The unit of measurement used for the budget forecast, actual spend, or budget threshold, such as dollars or GB. See [Spend](http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/data-type-spend.html) documentation.
     */
    unit: pulumi.Input<string>;
}
