// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

import {RoutingRule} from "@/s3";

export interface ConfgurationSetDeliveryOptions {
    /**
     * Whether messages that use the configuration set are required to use Transport Layer Security (TLS). If the value is `Require`, messages are only delivered if a TLS connection can be established. If the value is `Optional`, messages can be delivered in plain text if a TLS connection can't be established. Valid values: `Require` or `Optional`. Defaults to `Optional`.
     */
    tlsPolicy?: string;
}

export interface ConfgurationSetTrackingOptions {
    /**
     * Custom subdomain that is used to redirect email recipients to the Amazon SES event tracking domain.
     */
    customRedirectDomain?: string;
}

export interface ConfigurationSetDeliveryOptions {
    /**
     * Whether messages that use the configuration set are required to use Transport Layer Security (TLS). If the value is `Require`, messages are only delivered if a TLS connection can be established. If the value is `Optional`, messages can be delivered in plain text if a TLS connection can't be established. Valid values: `Require` or `Optional`. Defaults to `Optional`.
     */
    tlsPolicy?: string;
}

export interface ConfigurationSetTrackingOptions {
    /**
     * Custom subdomain that is used to redirect email recipients to the Amazon SES event tracking domain.
     */
    customRedirectDomain?: string;
}

export interface EventDestinationCloudwatchDestination {
    /**
     * The default value for the event
     */
    defaultValue: string;
    /**
     * The name for the dimension
     */
    dimensionName: string;
    /**
     * The source for the value. May be any of `"messageTag"`, `"emailHeader"` or `"linkTag"`.
     */
    valueSource: string;
}

export interface EventDestinationKinesisDestination {
    /**
     * The ARN of the role that has permissions to access the Kinesis Stream
     */
    roleArn: string;
    /**
     * The ARN of the Kinesis Stream
     */
    streamArn: string;
}

export interface EventDestinationSnsDestination {
    /**
     * The ARN of the SNS topic
     */
    topicArn: string;
}

export interface ReceiptRuleAddHeaderAction {
    /**
     * The name of the header to add
     */
    headerName: string;
    /**
     * The value of the header to add
     */
    headerValue: string;
    /**
     * The position of the action in the receipt rule
     */
    position: number;
}

export interface ReceiptRuleBounceAction {
    /**
     * The message to send
     */
    message: string;
    /**
     * The position of the action in the receipt rule
     */
    position: number;
    /**
     * The email address of the sender
     */
    sender: string;
    /**
     * The RFC 5321 SMTP reply code
     */
    smtpReplyCode: string;
    /**
     * The RFC 3463 SMTP enhanced status code
     */
    statusCode?: string;
    /**
     * The ARN of an SNS topic to notify
     */
    topicArn?: string;
}

export interface ReceiptRuleLambdaAction {
    /**
     * The ARN of the Lambda function to invoke
     */
    functionArn: string;
    /**
     * `Event` or `RequestResponse`
     */
    invocationType?: string;
    /**
     * The position of the action in the receipt rule
     */
    position: number;
    /**
     * The ARN of an SNS topic to notify
     */
    topicArn?: string;
}

export interface ReceiptRuleS3Action {
    /**
     * The name of the S3 bucket
     */
    bucketName: string;
    /**
     * The ARN of the KMS key
     */
    kmsKeyArn?: string;
    /**
     * The key prefix of the S3 bucket
     */
    objectKeyPrefix?: string;
    /**
     * The position of the action in the receipt rule
     */
    position: number;
    /**
     * The ARN of an SNS topic to notify
     */
    topicArn?: string;
}

export interface ReceiptRuleSnsAction {
    /**
     * The encoding to use for the email within the Amazon SNS notification. Default value is `UTF-8`.
     */
    encoding?: string;
    /**
     * The position of the action in the receipt rule
     */
    position: number;
    /**
     * The ARN of an SNS topic to notify
     */
    topicArn: string;
}

export interface ReceiptRuleStopAction {
    /**
     * The position of the action in the receipt rule
     */
    position: number;
    /**
     * The scope to apply. The only acceptable value is `RuleSet`.
     */
    scope: string;
    /**
     * The ARN of an SNS topic to notify
     */
    topicArn?: string;
}

export interface ReceiptRuleWorkmailAction {
    /**
     * The ARN of the WorkMail organization
     */
    organizationArn: string;
    /**
     * The position of the action in the receipt rule
     */
    position: number;
    /**
     * The ARN of an SNS topic to notify
     */
    topicArn?: string;
}

