// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

import {RoutingRule} from "@/s3";

export interface ApiCorsConfiguration {
    /**
     * Whether credentials are included in the CORS request.
     */
    allowCredentials?: boolean;
    /**
     * Set of allowed HTTP headers.
     */
    allowHeaders?: string[];
    /**
     * Set of allowed HTTP methods.
     */
    allowMethods?: string[];
    /**
     * Set of allowed origins.
     */
    allowOrigins?: string[];
    /**
     * Set of exposed HTTP headers.
     */
    exposeHeaders?: string[];
    /**
     * Number of seconds that the browser should cache preflight request results.
     */
    maxAge?: number;
}

export interface AuthorizerJwtConfiguration {
    /**
     * List of the intended recipients of the JWT. A valid JWT must provide an aud that matches at least one entry in this list.
     */
    audiences?: string[];
    /**
     * Base domain of the identity provider that issues JSON Web Tokens, such as the `endpoint` attribute of the `aws.cognito.UserPool` resource.
     */
    issuer?: string;
}

export interface DomainNameDomainNameConfiguration {
    /**
     * ARN of an AWS-managed certificate that will be used by the endpoint for the domain name. AWS Certificate Manager is the only supported source. Use the `aws.acm.Certificate` resource to configure an ACM certificate.
     */
    certificateArn: string;
    /**
     * Endpoint type. Valid values: `REGIONAL`.
     */
    endpointType: string;
    /**
     * Amazon Route 53 Hosted Zone ID of the endpoint.
     */
    hostedZoneId: string;
    /**
     * ARN of the AWS-issued certificate used to validate custom domain ownership (when `certificateArn` is issued via an ACM Private CA or `mutualTlsAuthentication` is configured with an ACM-imported certificate.)
     */
    ownershipVerificationCertificateArn: string;
    /**
     * Transport Layer Security (TLS) version of the [security policy](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-custom-domain-tls-version.html) for the domain name. Valid values: `TLS_1_2`.
     */
    securityPolicy: string;
    /**
     * Target domain name.
     */
    targetDomainName: string;
}

export interface DomainNameMutualTlsAuthentication {
    /**
     * Amazon S3 URL that specifies the truststore for mutual TLS authentication, for example, `s3://bucket-name/key-name`. The truststore can contain certificates from public or private certificate authorities. To update the truststore, upload a new version to S3, and then update your custom domain name to use the new version.
     */
    truststoreUri: string;
    /**
     * Version of the S3 object that contains the truststore. To specify a version, you must have versioning enabled for the S3 bucket.
     */
    truststoreVersion?: string;
}

export interface GetApiCorsConfiguration {
    /**
     * Whether credentials are included in the CORS request.
     */
    allowCredentials: boolean;
    /**
     * Set of allowed HTTP headers.
     */
    allowHeaders: string[];
    /**
     * Set of allowed HTTP methods.
     */
    allowMethods: string[];
    /**
     * Set of allowed origins.
     */
    allowOrigins: string[];
    /**
     * Set of exposed HTTP headers.
     */
    exposeHeaders: string[];
    /**
     * Number of seconds that the browser should cache preflight request results.
     */
    maxAge: number;
}

export interface IntegrationResponseParameter {
    /**
     * Key-value map. The key of this map identifies the location of the request parameter to change, and how to change it. The corresponding value specifies the new data for the parameter.
     * See the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-parameter-mapping.html) for details.
     */
    mappings: {[key: string]: string};
    /**
     * HTTP status code in the range 200-599.
     */
    statusCode: string;
}

export interface IntegrationTlsConfig {
    /**
     * If you specify a server name, API Gateway uses it to verify the hostname on the integration's certificate. The server name is also included in the TLS handshake to support Server Name Indication (SNI) or virtual hosting.
     */
    serverNameToVerify?: string;
}

export interface RouteRequestParameter {
    /**
     * Request parameter key. This is a [request data mapping parameter](https://docs.aws.amazon.com/apigateway/latest/developerguide/websocket-api-data-mapping.html#websocket-mapping-request-parameters).
     */
    requestParameterKey: string;
    /**
     * Boolean whether or not the parameter is required.
     */
    required: boolean;
}

export interface StageAccessLogSettings {
    /**
     * ARN of the CloudWatch Logs log group to receive access logs. Any trailing `:*` is trimmed from the ARN.
     */
    destinationArn: string;
    /**
     * Single line [format](https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-logging.html#apigateway-cloudwatch-log-formats) of the access logs of data, as specified by [selected $context variables](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-logging.html).
     */
    format: string;
}

export interface StageDefaultRouteSettings {
    /**
     * Whether data trace logging is enabled for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.
     * Defaults to `false`. Supported only for WebSocket APIs.
     */
    dataTraceEnabled?: boolean;
    /**
     * Whether detailed metrics are enabled for the default route. Defaults to `false`.
     */
    detailedMetricsEnabled?: boolean;
    /**
     * Logging level for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.
     * Valid values: `ERROR`, `INFO`, `OFF`. Defaults to `OFF`. Supported only for WebSocket APIs. This provider will only perform drift detection of its value when present in a configuration.
     */
    loggingLevel: string;
    /**
     * Throttling burst limit for the default route.
     */
    throttlingBurstLimit?: number;
    /**
     * Throttling rate limit for the default route.
     */
    throttlingRateLimit?: number;
}

export interface StageRouteSetting {
    /**
     * Whether data trace logging is enabled for the route. Affects the log entries pushed to Amazon CloudWatch Logs.
     * Defaults to `false`. Supported only for WebSocket APIs.
     */
    dataTraceEnabled?: boolean;
    /**
     * Whether detailed metrics are enabled for the route. Defaults to `false`.
     */
    detailedMetricsEnabled?: boolean;
    /**
     * Logging level for the route. Affects the log entries pushed to Amazon CloudWatch Logs.
     * Valid values: `ERROR`, `INFO`, `OFF`. Defaults to `OFF`. Supported only for WebSocket APIs. This provider will only perform drift detection of its value when present in a configuration.
     */
    loggingLevel: string;
    /**
     * Route key.
     */
    routeKey: string;
    /**
     * Throttling burst limit for the route.
     */
    throttlingBurstLimit?: number;
    /**
     * Throttling rate limit for the route.
     */
    throttlingRateLimit?: number;
}

