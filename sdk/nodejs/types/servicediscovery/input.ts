// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

import {RoutingRule} from "@/s3";

export interface ServiceDnsConfig {
    /**
     * An array that contains one DnsRecord object for each resource record set.
     */
    dnsRecords: pulumi.Input<pulumi.Input<inputs.servicediscovery.ServiceDnsConfigDnsRecord>[]>;
    /**
     * The ID of the namespace to use for DNS configuration.
     */
    namespaceId: pulumi.Input<string>;
    /**
     * The routing policy that you want to apply to all records that Route 53 creates when you register an instance and specify the service. Valid Values: MULTIVALUE, WEIGHTED
     */
    routingPolicy?: pulumi.Input<string>;
}

export interface ServiceDnsConfigDnsRecord {
    /**
     * The amount of time, in seconds, that you want DNS resolvers to cache the settings for this resource record set.
     */
    ttl: pulumi.Input<number>;
    /**
     * The type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy. Valid Values: HTTP, HTTPS, TCP
     */
    type: pulumi.Input<string>;
}

export interface ServiceHealthCheckConfig {
    /**
     * The number of 30-second intervals that you want service discovery to wait before it changes the health status of a service instance.  Maximum value of 10.
     */
    failureThreshold?: pulumi.Input<number>;
    /**
     * The path that you want Route 53 to request when performing health checks. Route 53 automatically adds the DNS name for the service. If you don't specify a value, the default value is /.
     */
    resourcePath?: pulumi.Input<string>;
    /**
     * The type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy. Valid Values: HTTP, HTTPS, TCP
     */
    type?: pulumi.Input<string>;
}

export interface ServiceHealthCheckCustomConfig {
    /**
     * The number of 30-second intervals that you want service discovery to wait before it changes the health status of a service instance.  Maximum value of 10.
     */
    failureThreshold?: pulumi.Input<number>;
}
