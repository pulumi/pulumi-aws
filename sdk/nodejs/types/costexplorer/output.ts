// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

import {RoutingRule} from "@/s3";

export interface AnomalySubscriptionSubscriber {
    /**
     * The address of the subscriber. If type is `SNS`, this will be the arn of the sns topic. If type is `EMAIL`, this will be the destination email address.
     */
    address: string;
    /**
     * The type of subscription. Valid Values: `SNS` | `EMAIL`.
     */
    type: string;
}

export interface CostCategoryRule {
    /**
     * Configuration block for the value the line item is categorized as if the line item contains the matched dimension. See below.
     */
    inheritedValue?: outputs.costexplorer.CostCategoryRuleInheritedValue;
    /**
     * Configuration block for the `Expression` object used to categorize costs. See below.
     */
    rule?: outputs.costexplorer.CostCategoryRuleRule;
    /**
     * Parameter type.
     */
    type?: string;
    /**
     * Default value for the cost category.
     */
    value?: string;
}

export interface CostCategoryRuleInheritedValue {
    /**
     * Key to extract cost category values.
     */
    dimensionKey?: string;
    /**
     * Name of the dimension that's used to group costs. If you specify `LINKED_ACCOUNT_NAME`, the cost category value is based on account name. If you specify `TAG`, the cost category value will be based on the value of the specified tag key. Valid values are `LINKED_ACCOUNT_NAME`, `TAG`
     */
    dimensionName?: string;
}

export interface CostCategoryRuleRule {
    /**
     * Return results that match both `Dimension` objects.
     */
    ands?: outputs.costexplorer.CostCategoryRuleRuleAnd[];
    /**
     * Configuration block for the filter that's based on `CostCategory` values. See below.
     */
    costCategory?: outputs.costexplorer.CostCategoryRuleRuleCostCategory;
    /**
     * Configuration block for the specific `Dimension` to use for `Expression`. See below.
     */
    dimension?: outputs.costexplorer.CostCategoryRuleRuleDimension;
    /**
     * Return results that match both `Dimension` object.
     */
    not?: outputs.costexplorer.CostCategoryRuleRuleNot;
    /**
     * Return results that match both `Dimension` object.
     */
    ors?: outputs.costexplorer.CostCategoryRuleRuleOr[];
    /**
     * Configuration block for the specific `Tag` to use for `Expression`. See below.
     */
    tags?: outputs.costexplorer.CostCategoryRuleRuleTags;
}

export interface CostCategoryRuleRuleAnd {
    /**
     * Configuration block for the filter that's based on `CostCategory` values. See below.
     */
    costCategory?: outputs.costexplorer.CostCategoryRuleRuleAndCostCategory;
    /**
     * Configuration block for the specific `Dimension` to use for `Expression`. See below.
     */
    dimension?: outputs.costexplorer.CostCategoryRuleRuleAndDimension;
    /**
     * Configuration block for the specific `Tag` to use for `Expression`. See below.
     */
    tags?: outputs.costexplorer.CostCategoryRuleRuleAndTags;
}

export interface CostCategoryRuleRuleAndCostCategory {
    /**
     * Key for the tag.
     */
    key?: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions?: string[];
    /**
     * Parameter values.
     */
    values?: string[];
}

export interface CostCategoryRuleRuleAndDimension {
    /**
     * Key for the tag.
     */
    key?: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions?: string[];
    /**
     * Parameter values.
     */
    values?: string[];
}

export interface CostCategoryRuleRuleAndTags {
    /**
     * Key for the tag.
     */
    key?: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions?: string[];
    /**
     * Parameter values.
     */
    values?: string[];
}

export interface CostCategoryRuleRuleCostCategory {
    /**
     * Key for the tag.
     */
    key?: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions?: string[];
    /**
     * Parameter values.
     */
    values?: string[];
}

export interface CostCategoryRuleRuleDimension {
    /**
     * Key for the tag.
     */
    key?: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions?: string[];
    /**
     * Parameter values.
     */
    values?: string[];
}

export interface CostCategoryRuleRuleNot {
    /**
     * Configuration block for the filter that's based on `CostCategory` values. See below.
     */
    costCategory?: outputs.costexplorer.CostCategoryRuleRuleNotCostCategory;
    /**
     * Configuration block for the specific `Dimension` to use for `Expression`. See below.
     */
    dimension?: outputs.costexplorer.CostCategoryRuleRuleNotDimension;
    /**
     * Configuration block for the specific `Tag` to use for `Expression`. See below.
     */
    tags?: outputs.costexplorer.CostCategoryRuleRuleNotTags;
}

export interface CostCategoryRuleRuleNotCostCategory {
    /**
     * Key for the tag.
     */
    key?: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions?: string[];
    /**
     * Parameter values.
     */
    values?: string[];
}

export interface CostCategoryRuleRuleNotDimension {
    /**
     * Key for the tag.
     */
    key?: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions?: string[];
    /**
     * Parameter values.
     */
    values?: string[];
}

export interface CostCategoryRuleRuleNotTags {
    /**
     * Key for the tag.
     */
    key?: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions?: string[];
    /**
     * Parameter values.
     */
    values?: string[];
}

export interface CostCategoryRuleRuleOr {
    /**
     * Configuration block for the filter that's based on `CostCategory` values. See below.
     */
    costCategory?: outputs.costexplorer.CostCategoryRuleRuleOrCostCategory;
    /**
     * Configuration block for the specific `Dimension` to use for `Expression`. See below.
     */
    dimension?: outputs.costexplorer.CostCategoryRuleRuleOrDimension;
    /**
     * Configuration block for the specific `Tag` to use for `Expression`. See below.
     */
    tags?: outputs.costexplorer.CostCategoryRuleRuleOrTags;
}

export interface CostCategoryRuleRuleOrCostCategory {
    /**
     * Key for the tag.
     */
    key?: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions?: string[];
    /**
     * Parameter values.
     */
    values?: string[];
}

export interface CostCategoryRuleRuleOrDimension {
    /**
     * Key for the tag.
     */
    key?: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions?: string[];
    /**
     * Parameter values.
     */
    values?: string[];
}

export interface CostCategoryRuleRuleOrTags {
    /**
     * Key for the tag.
     */
    key?: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions?: string[];
    /**
     * Parameter values.
     */
    values?: string[];
}

export interface CostCategoryRuleRuleTags {
    /**
     * Key for the tag.
     */
    key?: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions?: string[];
    /**
     * Parameter values.
     */
    values?: string[];
}

export interface CostCategorySplitChargeRule {
    /**
     * Method that's used to define how to split your source costs across your targets. Valid values are `FIXED`, `PROPORTIONAL`, `EVEN`
     */
    method: string;
    /**
     * Configuration block for the parameters for a split charge method. This is only required for the `FIXED` method. See below.
     */
    parameters?: outputs.costexplorer.CostCategorySplitChargeRuleParameter[];
    /**
     * Cost Category value that you want to split.
     */
    source: string;
    /**
     * Cost Category values that you want to split costs across. These values can't be used as a source in other split charge rules.
     */
    targets: string[];
}

export interface CostCategorySplitChargeRuleParameter {
    /**
     * Parameter type.
     */
    type?: string;
    /**
     * Parameter values.
     */
    values?: string[];
}

export interface GetCostCategoryRule {
    /**
     * Configuration block for the value the line item is categorized as if the line item contains the matched dimension. See below.
     */
    inheritedValues: outputs.costexplorer.GetCostCategoryRuleInheritedValue[];
    /**
     * Configuration block for the `Expression` object used to categorize costs. See below.
     */
    rules: outputs.costexplorer.GetCostCategoryRuleRule[];
    /**
     * Parameter type.
     */
    type: string;
    /**
     * Default value for the cost category.
     */
    value: string;
}

export interface GetCostCategoryRuleInheritedValue {
    /**
     * Key to extract cost category values.
     */
    dimensionKey: string;
    /**
     * Name of the dimension that's used to group costs. If you specify `LINKED_ACCOUNT_NAME`, the cost category value is based on account name. If you specify `TAG`, the cost category value will be based on the value of the specified tag key. Valid values are `LINKED_ACCOUNT_NAME`, `TAG`
     */
    dimensionName: string;
}

export interface GetCostCategoryRuleRule {
    /**
     * Return results that match both `Dimension` objects.
     */
    ands: outputs.costexplorer.GetCostCategoryRuleRuleAnd[];
    /**
     * Configuration block for the filter that's based on `CostCategory` values. See below.
     */
    costCategories: outputs.costexplorer.GetCostCategoryRuleRuleCostCategory[];
    /**
     * Configuration block for the specific `Dimension` to use for `Expression`. See below.
     */
    dimensions: outputs.costexplorer.GetCostCategoryRuleRuleDimension[];
    /**
     * Return results that match both `Dimension` object.
     */
    nots: outputs.costexplorer.GetCostCategoryRuleRuleNot[];
    /**
     * Return results that match both `Dimension` object.
     */
    ors: outputs.costexplorer.GetCostCategoryRuleRuleOr[];
    /**
     * Configuration block for the specific `Tag` to use for `Expression`. See below.
     */
    tags: outputs.costexplorer.GetCostCategoryRuleRuleTag[];
}

export interface GetCostCategoryRuleRuleAnd {
    /**
     * Configuration block for the filter that's based on `CostCategory` values. See below.
     */
    costCategories: outputs.costexplorer.GetCostCategoryRuleRuleAndCostCategory[];
    /**
     * Configuration block for the specific `Dimension` to use for `Expression`. See below.
     */
    dimensions: outputs.costexplorer.GetCostCategoryRuleRuleAndDimension[];
    /**
     * Configuration block for the specific `Tag` to use for `Expression`. See below.
     */
    tags: outputs.costexplorer.GetCostCategoryRuleRuleAndTag[];
}

export interface GetCostCategoryRuleRuleAndCostCategory {
    /**
     * Key for the tag.
     */
    key: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions: string[];
    /**
     * Parameter values.
     */
    values: string[];
}

export interface GetCostCategoryRuleRuleAndDimension {
    /**
     * Key for the tag.
     */
    key: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions: string[];
    /**
     * Parameter values.
     */
    values: string[];
}

export interface GetCostCategoryRuleRuleAndTag {
    /**
     * Key for the tag.
     */
    key: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions: string[];
    /**
     * Parameter values.
     */
    values: string[];
}

export interface GetCostCategoryRuleRuleCostCategory {
    /**
     * Key for the tag.
     */
    key: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions: string[];
    /**
     * Parameter values.
     */
    values: string[];
}

export interface GetCostCategoryRuleRuleDimension {
    /**
     * Key for the tag.
     */
    key: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions: string[];
    /**
     * Parameter values.
     */
    values: string[];
}

export interface GetCostCategoryRuleRuleNot {
    /**
     * Configuration block for the filter that's based on `CostCategory` values. See below.
     */
    costCategories: outputs.costexplorer.GetCostCategoryRuleRuleNotCostCategory[];
    /**
     * Configuration block for the specific `Dimension` to use for `Expression`. See below.
     */
    dimensions: outputs.costexplorer.GetCostCategoryRuleRuleNotDimension[];
    /**
     * Configuration block for the specific `Tag` to use for `Expression`. See below.
     */
    tags: outputs.costexplorer.GetCostCategoryRuleRuleNotTag[];
}

export interface GetCostCategoryRuleRuleNotCostCategory {
    /**
     * Key for the tag.
     */
    key: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions: string[];
    /**
     * Parameter values.
     */
    values: string[];
}

export interface GetCostCategoryRuleRuleNotDimension {
    /**
     * Key for the tag.
     */
    key: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions: string[];
    /**
     * Parameter values.
     */
    values: string[];
}

export interface GetCostCategoryRuleRuleNotTag {
    /**
     * Key for the tag.
     */
    key: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions: string[];
    /**
     * Parameter values.
     */
    values: string[];
}

export interface GetCostCategoryRuleRuleOr {
    /**
     * Configuration block for the filter that's based on `CostCategory` values. See below.
     */
    costCategories: outputs.costexplorer.GetCostCategoryRuleRuleOrCostCategory[];
    /**
     * Configuration block for the specific `Dimension` to use for `Expression`. See below.
     */
    dimensions: outputs.costexplorer.GetCostCategoryRuleRuleOrDimension[];
    /**
     * Configuration block for the specific `Tag` to use for `Expression`. See below.
     */
    tags: outputs.costexplorer.GetCostCategoryRuleRuleOrTag[];
}

export interface GetCostCategoryRuleRuleOrCostCategory {
    /**
     * Key for the tag.
     */
    key: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions: string[];
    /**
     * Parameter values.
     */
    values: string[];
}

export interface GetCostCategoryRuleRuleOrDimension {
    /**
     * Key for the tag.
     */
    key: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions: string[];
    /**
     * Parameter values.
     */
    values: string[];
}

export interface GetCostCategoryRuleRuleOrTag {
    /**
     * Key for the tag.
     */
    key: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions: string[];
    /**
     * Parameter values.
     */
    values: string[];
}

export interface GetCostCategoryRuleRuleTag {
    /**
     * Key for the tag.
     */
    key: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions: string[];
    /**
     * Parameter values.
     */
    values: string[];
}

export interface GetCostCategorySplitChargeRule {
    /**
     * Method that's used to define how to split your source costs across your targets. Valid values are `FIXED`, `PROPORTIONAL`, `EVEN`
     */
    method: string;
    /**
     * Configuration block for the parameters for a split charge method. This is only required for the `FIXED` method. See below.
     */
    parameters: outputs.costexplorer.GetCostCategorySplitChargeRuleParameter[];
    /**
     * Cost Category value that you want to split.
     */
    source: string;
    /**
     * Cost Category values that you want to split costs across. These values can't be used as a source in other split charge rules.
     */
    targets: string[];
}

export interface GetCostCategorySplitChargeRuleParameter {
    /**
     * Parameter type.
     */
    type: string;
    /**
     * Parameter values.
     */
    values: string[];
}

export interface GetTagsFilter {
    /**
     * Return results that match both `Dimension` objects.
     */
    ands?: outputs.costexplorer.GetTagsFilterAnd[];
    /**
     * Configuration block for the filter that's based on `CostCategory` values. See below.
     */
    costCategory?: outputs.costexplorer.GetTagsFilterCostCategory;
    /**
     * Configuration block for the specific `Dimension` to use for `Expression`. See below.
     */
    dimension?: outputs.costexplorer.GetTagsFilterDimension;
    /**
     * Return results that match both `Dimension` object.
     */
    not?: outputs.costexplorer.GetTagsFilterNot;
    /**
     * Return results that match both `Dimension` object.
     */
    ors?: outputs.costexplorer.GetTagsFilterOr[];
    /**
     * Tags that match your request.
     */
    tags?: outputs.costexplorer.GetTagsFilterTags;
}

export interface GetTagsFilterAnd {
    /**
     * Configuration block for the filter that's based on `CostCategory` values. See below.
     */
    costCategory?: outputs.costexplorer.GetTagsFilterAndCostCategory;
    /**
     * Configuration block for the specific `Dimension` to use for `Expression`. See below.
     */
    dimension?: outputs.costexplorer.GetTagsFilterAndDimension;
    /**
     * Tags that match your request.
     */
    tags?: outputs.costexplorer.GetTagsFilterAndTags;
}

export interface GetTagsFilterAndCostCategory {
    /**
     * key that's used to sort the data. Valid values are: `BlendedCost`,  `UnblendedCost`, `AmortizedCost`, `NetAmortizedCost`, `NetUnblendedCost`, `UsageQuantity`, `NormalizedUsageAmount`.
     */
    key?: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions?: string[];
    /**
     * Specific value of the Cost Category.
     */
    values?: string[];
}

export interface GetTagsFilterAndDimension {
    /**
     * key that's used to sort the data. Valid values are: `BlendedCost`,  `UnblendedCost`, `AmortizedCost`, `NetAmortizedCost`, `NetUnblendedCost`, `UsageQuantity`, `NormalizedUsageAmount`.
     */
    key?: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions?: string[];
    /**
     * Specific value of the Cost Category.
     */
    values?: string[];
}

export interface GetTagsFilterAndTags {
    /**
     * key that's used to sort the data. Valid values are: `BlendedCost`,  `UnblendedCost`, `AmortizedCost`, `NetAmortizedCost`, `NetUnblendedCost`, `UsageQuantity`, `NormalizedUsageAmount`.
     */
    key?: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions?: string[];
    /**
     * Specific value of the Cost Category.
     */
    values?: string[];
}

export interface GetTagsFilterCostCategory {
    /**
     * key that's used to sort the data. Valid values are: `BlendedCost`,  `UnblendedCost`, `AmortizedCost`, `NetAmortizedCost`, `NetUnblendedCost`, `UsageQuantity`, `NormalizedUsageAmount`.
     */
    key?: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions?: string[];
    /**
     * Specific value of the Cost Category.
     */
    values?: string[];
}

export interface GetTagsFilterDimension {
    /**
     * key that's used to sort the data. Valid values are: `BlendedCost`,  `UnblendedCost`, `AmortizedCost`, `NetAmortizedCost`, `NetUnblendedCost`, `UsageQuantity`, `NormalizedUsageAmount`.
     */
    key?: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions?: string[];
    /**
     * Specific value of the Cost Category.
     */
    values?: string[];
}

export interface GetTagsFilterNot {
    /**
     * Configuration block for the filter that's based on `CostCategory` values. See below.
     */
    costCategory?: outputs.costexplorer.GetTagsFilterNotCostCategory;
    /**
     * Configuration block for the specific `Dimension` to use for `Expression`. See below.
     */
    dimension?: outputs.costexplorer.GetTagsFilterNotDimension;
    /**
     * Tags that match your request.
     */
    tags?: outputs.costexplorer.GetTagsFilterNotTags;
}

export interface GetTagsFilterNotCostCategory {
    /**
     * key that's used to sort the data. Valid values are: `BlendedCost`,  `UnblendedCost`, `AmortizedCost`, `NetAmortizedCost`, `NetUnblendedCost`, `UsageQuantity`, `NormalizedUsageAmount`.
     */
    key?: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions?: string[];
    /**
     * Specific value of the Cost Category.
     */
    values?: string[];
}

export interface GetTagsFilterNotDimension {
    /**
     * key that's used to sort the data. Valid values are: `BlendedCost`,  `UnblendedCost`, `AmortizedCost`, `NetAmortizedCost`, `NetUnblendedCost`, `UsageQuantity`, `NormalizedUsageAmount`.
     */
    key?: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions?: string[];
    /**
     * Specific value of the Cost Category.
     */
    values?: string[];
}

export interface GetTagsFilterNotTags {
    /**
     * key that's used to sort the data. Valid values are: `BlendedCost`,  `UnblendedCost`, `AmortizedCost`, `NetAmortizedCost`, `NetUnblendedCost`, `UsageQuantity`, `NormalizedUsageAmount`.
     */
    key?: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions?: string[];
    /**
     * Specific value of the Cost Category.
     */
    values?: string[];
}

export interface GetTagsFilterOr {
    /**
     * Configuration block for the filter that's based on `CostCategory` values. See below.
     */
    costCategory?: outputs.costexplorer.GetTagsFilterOrCostCategory;
    /**
     * Configuration block for the specific `Dimension` to use for `Expression`. See below.
     */
    dimension?: outputs.costexplorer.GetTagsFilterOrDimension;
    /**
     * Tags that match your request.
     */
    tags?: outputs.costexplorer.GetTagsFilterOrTags;
}

export interface GetTagsFilterOrCostCategory {
    /**
     * key that's used to sort the data. Valid values are: `BlendedCost`,  `UnblendedCost`, `AmortizedCost`, `NetAmortizedCost`, `NetUnblendedCost`, `UsageQuantity`, `NormalizedUsageAmount`.
     */
    key?: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions?: string[];
    /**
     * Specific value of the Cost Category.
     */
    values?: string[];
}

export interface GetTagsFilterOrDimension {
    /**
     * key that's used to sort the data. Valid values are: `BlendedCost`,  `UnblendedCost`, `AmortizedCost`, `NetAmortizedCost`, `NetUnblendedCost`, `UsageQuantity`, `NormalizedUsageAmount`.
     */
    key?: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions?: string[];
    /**
     * Specific value of the Cost Category.
     */
    values?: string[];
}

export interface GetTagsFilterOrTags {
    /**
     * key that's used to sort the data. Valid values are: `BlendedCost`,  `UnblendedCost`, `AmortizedCost`, `NetAmortizedCost`, `NetUnblendedCost`, `UsageQuantity`, `NormalizedUsageAmount`.
     */
    key?: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions?: string[];
    /**
     * Specific value of the Cost Category.
     */
    values?: string[];
}

export interface GetTagsFilterTags {
    /**
     * key that's used to sort the data. Valid values are: `BlendedCost`,  `UnblendedCost`, `AmortizedCost`, `NetAmortizedCost`, `NetUnblendedCost`, `UsageQuantity`, `NormalizedUsageAmount`.
     */
    key?: string;
    /**
     * Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
     */
    matchOptions?: string[];
    /**
     * Specific value of the Cost Category.
     */
    values?: string[];
}

export interface GetTagsSortBy {
    /**
     * key that's used to sort the data. Valid values are: `BlendedCost`,  `UnblendedCost`, `AmortizedCost`, `NetAmortizedCost`, `NetUnblendedCost`, `UsageQuantity`, `NormalizedUsageAmount`.
     */
    key?: string;
    /**
     * order that's used to sort the data. Valid values are: `ASCENDING`,  `DESCENDING`.
     */
    sortOrder?: string;
}

export interface GetTagsTimePeriod {
    /**
     * Beginning of the time period.
     */
    end: string;
    /**
     * End of the time period.
     */
    start: string;
}

