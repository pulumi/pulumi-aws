// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

import {RoutingRule} from "@/s3";

export interface CanaryArtifactConfig {
    /**
     * Configuration of the encryption-at-rest settings for artifacts that the canary uploads to Amazon S3. See S3 Encryption.
     */
    s3Encryption?: pulumi.Input<inputs.synthetics.CanaryArtifactConfigS3Encryption>;
}

export interface CanaryArtifactConfigS3Encryption {
    /**
     * The encryption method to use for artifacts created by this canary. Valid values are: `SSE_S3` and `SSE_KMS`.
     */
    encryptionMode?: pulumi.Input<string>;
    /**
     * The ARN of the customer-managed KMS key to use, if you specify `SSE_KMS` for `encryptionMode`.
     */
    kmsKeyArn?: pulumi.Input<string>;
}

export interface CanaryRunConfig {
    /**
     * Whether this canary is to use active AWS X-Ray tracing when it runs. You can enable active tracing only for canaries that use version syn-nodejs-2.0 or later for their canary runtime.
     */
    activeTracing?: pulumi.Input<boolean>;
    /**
     * Map of environment variables that are accessible from the canary during execution. Please see [AWS Docs](https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-runtime) for variables reserved for Lambda.
     */
    environmentVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Maximum amount of memory available to the canary while it is running, in MB. The value you specify must be a multiple of 64.
     */
    memoryInMb?: pulumi.Input<number>;
    /**
     * Number of seconds the canary is allowed to run before it must stop. If you omit this field, the frequency of the canary is used, up to a maximum of 840 (14 minutes).
     */
    timeoutInSeconds?: pulumi.Input<number>;
}

export interface CanarySchedule {
    /**
     * Duration in seconds, for the canary to continue making regular runs according to the schedule in the Expression value.
     */
    durationInSeconds?: pulumi.Input<number>;
    /**
     * Rate expression or cron expression that defines how often the canary is to run. For rate expression, the syntax is `rate(number unit)`. _unit_ can be `minute`, `minutes`, or `hour`. For cron expression, the syntax is `cron(expression)`. For more information about the syntax for cron expressions, see [Scheduling canary runs using cron](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_cron.html).
     */
    expression: pulumi.Input<string>;
}

export interface CanaryTimeline {
    /**
     * Date and time the canary was created.
     */
    created?: pulumi.Input<string>;
    /**
     * Date and time the canary was most recently modified.
     */
    lastModified?: pulumi.Input<string>;
    /**
     * Date and time that the canary's most recent run started.
     */
    lastStarted?: pulumi.Input<string>;
    /**
     * Date and time that the canary's most recent run ended.
     */
    lastStopped?: pulumi.Input<string>;
}

export interface CanaryVpcConfig {
    /**
     * IDs of the security groups for this canary.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * IDs of the subnets where this canary is to run.
     */
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * ID of the VPC where this canary is to run.
     */
    vpcId?: pulumi.Input<string>;
}
