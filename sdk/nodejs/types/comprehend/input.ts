// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

import {RoutingRule} from "@/s3";

export interface DocumentClassifierInputDataConfig {
    /**
     * List of training datasets produced by Amazon SageMaker Ground Truth.
     * Used if `dataFormat` is `AUGMENTED_MANIFEST`.
     * See the `augmentedManifests` Configuration Block section below.
     */
    augmentedManifests?: pulumi.Input<pulumi.Input<inputs.comprehend.DocumentClassifierInputDataConfigAugmentedManifest>[]>;
    /**
     * The format for the training data.
     * One of `COMPREHEND_CSV` or `AUGMENTED_MANIFEST`.
     */
    dataFormat?: pulumi.Input<string>;
    /**
     * Delimiter between labels when training a multi-label classifier.
     * Valid values are `|`, `~`, `!`, `@`, `#`, `$`, `%`, `^`, `*`, `-`, `_`, `+`, `=`, `\`, `:`, `;`, `>`, `?`, `/`, `<space>`, and `<tab>`.
     * Default is `|`.
     */
    labelDelimiter?: pulumi.Input<string>;
    /**
     * Destination path for the output documents.
     * The full path to the output file will be returned in `outputS3Uri`.
     */
    s3Uri?: pulumi.Input<string>;
    testS3Uri?: pulumi.Input<string>;
}

export interface DocumentClassifierInputDataConfigAugmentedManifest {
    /**
     * Location of annotation files.
     */
    annotationDataS3Uri?: pulumi.Input<string>;
    /**
     * The JSON attribute that contains the annotations for the training documents.
     */
    attributeNames: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Type of augmented manifest.
     * One of `PLAIN_TEXT_DOCUMENT` or `SEMI_STRUCTURED_DOCUMENT`.
     */
    documentType?: pulumi.Input<string>;
    /**
     * Destination path for the output documents.
     * The full path to the output file will be returned in `outputS3Uri`.
     */
    s3Uri: pulumi.Input<string>;
    /**
     * Location of source PDF files.
     */
    sourceDocumentsS3Uri?: pulumi.Input<string>;
    /**
     * Purpose of data in augmented manifest.
     * One of `TRAIN` or `TEST`.
     */
    split?: pulumi.Input<string>;
}

export interface DocumentClassifierOutputDataConfig {
    /**
     * KMS Key used to encrypt the output documents.
     * Can be a KMS Key ID, a KMS Key ARN, a KMS Alias name, or a KMS Alias ARN.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * Full path for the output documents.
     */
    outputS3Uri?: pulumi.Input<string>;
    /**
     * Destination path for the output documents.
     * The full path to the output file will be returned in `outputS3Uri`.
     */
    s3Uri: pulumi.Input<string>;
}

export interface DocumentClassifierVpcConfig {
    /**
     * List of security group IDs.
     */
    securityGroupIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of VPC subnets.
     */
    subnets: pulumi.Input<pulumi.Input<string>[]>;
}

export interface EntityRecognizerInputDataConfig {
    /**
     * Specifies location of the document annotation data.
     * See the `annotations` Configuration Block section below.
     * One of `annotations` or `entityList` is required.
     */
    annotations?: pulumi.Input<inputs.comprehend.EntityRecognizerInputDataConfigAnnotations>;
    /**
     * List of training datasets produced by Amazon SageMaker Ground Truth.
     * Used if `dataFormat` is `AUGMENTED_MANIFEST`.
     * See the `augmentedManifests` Configuration Block section below.
     */
    augmentedManifests?: pulumi.Input<pulumi.Input<inputs.comprehend.EntityRecognizerInputDataConfigAugmentedManifest>[]>;
    /**
     * The format for the training data.
     * One of `COMPREHEND_CSV` or `AUGMENTED_MANIFEST`.
     */
    dataFormat?: pulumi.Input<string>;
    /**
     * Specifies a collection of training documents.
     * Used if `dataFormat` is `COMPREHEND_CSV`.
     * See the `documents` Configuration Block section below.
     */
    documents?: pulumi.Input<inputs.comprehend.EntityRecognizerInputDataConfigDocuments>;
    /**
     * Specifies location of the entity list data.
     * See the `entityList` Configuration Block section below.
     * One of `entityList` or `annotations` is required.
     */
    entityList?: pulumi.Input<inputs.comprehend.EntityRecognizerInputDataConfigEntityList>;
    /**
     * Set of entity types to be recognized.
     * Has a maximum of 25 items.
     * See the `entityTypes` Configuration Block section below.
     */
    entityTypes: pulumi.Input<pulumi.Input<inputs.comprehend.EntityRecognizerInputDataConfigEntityType>[]>;
}

export interface EntityRecognizerInputDataConfigAnnotations {
    /**
     * Location of entity list.
     */
    s3Uri: pulumi.Input<string>;
    testS3Uri?: pulumi.Input<string>;
}

export interface EntityRecognizerInputDataConfigAugmentedManifest {
    /**
     * Location of annotation files.
     */
    annotationDataS3Uri?: pulumi.Input<string>;
    /**
     * The JSON attribute that contains the annotations for the training documents.
     */
    attributeNames: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Type of augmented manifest.
     * One of `PLAIN_TEXT_DOCUMENT` or `SEMI_STRUCTURED_DOCUMENT`.
     */
    documentType?: pulumi.Input<string>;
    /**
     * Location of entity list.
     */
    s3Uri: pulumi.Input<string>;
    /**
     * Location of source PDF files.
     */
    sourceDocumentsS3Uri?: pulumi.Input<string>;
    /**
     * Purpose of data in augmented manifest.
     * One of `TRAIN` or `TEST`.
     */
    split?: pulumi.Input<string>;
}

export interface EntityRecognizerInputDataConfigDocuments {
    /**
     * Specifies how the input files should be processed.
     * One of `ONE_DOC_PER_LINE` or `ONE_DOC_PER_FILE`.
     */
    inputFormat?: pulumi.Input<string>;
    /**
     * Location of entity list.
     */
    s3Uri: pulumi.Input<string>;
    testS3Uri?: pulumi.Input<string>;
}

export interface EntityRecognizerInputDataConfigEntityList {
    /**
     * Location of entity list.
     */
    s3Uri: pulumi.Input<string>;
}

export interface EntityRecognizerInputDataConfigEntityType {
    /**
     * An entity type to be matched by the Entity Recognizer.
     * Cannot contain a newline (`\n`), carriage return (`\r`), or tab (`\t`).
     */
    type: pulumi.Input<string>;
}

export interface EntityRecognizerVpcConfig {
    /**
     * List of security group IDs.
     */
    securityGroupIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of VPC subnets.
     */
    subnets: pulumi.Input<pulumi.Input<string>[]>;
}
