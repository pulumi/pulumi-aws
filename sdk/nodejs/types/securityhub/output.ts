// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

import {RoutingRule} from "@/s3";

export interface InsightFilters {
    /**
     * AWS account ID that a finding is generated in. See String_Filter below for more details.
     */
    awsAccountIds?: outputs.securityhub.InsightFiltersAwsAccountId[];
    /**
     * The name of the findings provider (company) that owns the solution (product) that generates findings. See String_Filter below for more details.
     */
    companyNames?: outputs.securityhub.InsightFiltersCompanyName[];
    /**
     * Exclusive to findings that are generated as the result of a check run against a specific rule in a supported standard, such as CIS AWS Foundations. Contains security standard-related finding details. See String Filter below for more details.
     */
    complianceStatuses?: outputs.securityhub.InsightFiltersComplianceStatus[];
    /**
     * A finding's confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify. Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence. See Number Filter below for more details.
     */
    confidences?: outputs.securityhub.InsightFiltersConfidence[];
    /**
     * An ISO8601-formatted timestamp that indicates when the security-findings provider captured the potential security issue that a finding captured. See Date Filter below for more details.
     */
    createdAts?: outputs.securityhub.InsightFiltersCreatedAt[];
    /**
     * The level of importance assigned to the resources associated with the finding. A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources. See Number Filter below for more details.
     */
    criticalities?: outputs.securityhub.InsightFiltersCriticality[];
    /**
     * A finding's description. See String Filter below for more details.
     */
    descriptions?: outputs.securityhub.InsightFiltersDescription[];
    /**
     * The finding provider value for the finding confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify. Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence. See Number Filter below for more details.
     */
    findingProviderFieldsConfidences?: outputs.securityhub.InsightFiltersFindingProviderFieldsConfidence[];
    /**
     * The finding provider value for the level of importance assigned to the resources associated with the findings. A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources. See Number Filter below for more details.
     */
    findingProviderFieldsCriticalities?: outputs.securityhub.InsightFiltersFindingProviderFieldsCriticality[];
    /**
     * The finding identifier of a related finding that is identified by the finding provider. See String Filter below for more details.
     */
    findingProviderFieldsRelatedFindingsIds?: outputs.securityhub.InsightFiltersFindingProviderFieldsRelatedFindingsId[];
    /**
     * The ARN of the solution that generated a related finding that is identified by the finding provider. See String Filter below for more details.
     */
    findingProviderFieldsRelatedFindingsProductArns?: outputs.securityhub.InsightFiltersFindingProviderFieldsRelatedFindingsProductArn[];
    /**
     * The finding provider value for the severity label. See String Filter below for more details.
     */
    findingProviderFieldsSeverityLabels?: outputs.securityhub.InsightFiltersFindingProviderFieldsSeverityLabel[];
    /**
     * The finding provider's original value for the severity. See String Filter below for more details.
     */
    findingProviderFieldsSeverityOriginals?: outputs.securityhub.InsightFiltersFindingProviderFieldsSeverityOriginal[];
    /**
     * One or more finding types that the finding provider assigned to the finding. Uses the format of `namespace/category/classifier` that classify a finding. Valid namespace values include: `Software and Configuration Checks`, `TTPs`, `Effects`, `Unusual Behaviors`, and `Sensitive Data Identifications`. See String Filter below for more details.
     */
    findingProviderFieldsTypes?: outputs.securityhub.InsightFiltersFindingProviderFieldsType[];
    /**
     * An ISO8601-formatted timestamp that indicates when the security-findings provider first observed the potential security issue that a finding captured. See Date Filter below for more details.
     */
    firstObservedAts?: outputs.securityhub.InsightFiltersFirstObservedAt[];
    /**
     * The identifier for the solution-specific component (a discrete unit of logic) that generated a finding. See String Filter below for more details.
     */
    generatorIds?: outputs.securityhub.InsightFiltersGeneratorId[];
    /**
     * The security findings provider-specific identifier for a finding. See String Filter below for more details.
     */
    ids?: outputs.securityhub.InsightFiltersId[];
    /**
     * A keyword for a finding. See Keyword Filter below for more details.
     */
    keywords?: outputs.securityhub.InsightFiltersKeyword[];
    /**
     * An ISO8601-formatted timestamp that indicates when the security-findings provider most recently observed the potential security issue that a finding captured. See Date Filter below for more details.
     */
    lastObservedAts?: outputs.securityhub.InsightFiltersLastObservedAt[];
    /**
     * The name of the malware that was observed. See String Filter below for more details.
     */
    malwareNames?: outputs.securityhub.InsightFiltersMalwareName[];
    /**
     * The filesystem path of the malware that was observed. See String Filter below for more details.
     */
    malwarePaths?: outputs.securityhub.InsightFiltersMalwarePath[];
    /**
     * The state of the malware that was observed. See String Filter below for more details.
     */
    malwareStates?: outputs.securityhub.InsightFiltersMalwareState[];
    /**
     * The type of the malware that was observed. See String Filter below for more details.
     */
    malwareTypes?: outputs.securityhub.InsightFiltersMalwareType[];
    /**
     * The destination domain of network-related information about a finding. See String Filter below for more details.
     */
    networkDestinationDomains?: outputs.securityhub.InsightFiltersNetworkDestinationDomain[];
    /**
     * The destination IPv4 address of network-related information about a finding. See Ip Filter below for more details.
     */
    networkDestinationIpv4s?: outputs.securityhub.InsightFiltersNetworkDestinationIpv4[];
    /**
     * The destination IPv6 address of network-related information about a finding. See Ip Filter below for more details.
     */
    networkDestinationIpv6s?: outputs.securityhub.InsightFiltersNetworkDestinationIpv6[];
    /**
     * The destination port of network-related information about a finding. See Number Filter below for more details.
     */
    networkDestinationPorts?: outputs.securityhub.InsightFiltersNetworkDestinationPort[];
    /**
     * Indicates the direction of network traffic associated with a finding. See String Filter below for more details.
     */
    networkDirections?: outputs.securityhub.InsightFiltersNetworkDirection[];
    /**
     * The protocol of network-related information about a finding. See String Filter below for more details.
     */
    networkProtocols?: outputs.securityhub.InsightFiltersNetworkProtocol[];
    /**
     * The source domain of network-related information about a finding. See String Filter below for more details.
     */
    networkSourceDomains?: outputs.securityhub.InsightFiltersNetworkSourceDomain[];
    /**
     * The source IPv4 address of network-related information about a finding. See Ip Filter below for more details.
     */
    networkSourceIpv4s?: outputs.securityhub.InsightFiltersNetworkSourceIpv4[];
    /**
     * The source IPv6 address of network-related information about a finding. See Ip Filter below for more details.
     */
    networkSourceIpv6s?: outputs.securityhub.InsightFiltersNetworkSourceIpv6[];
    /**
     * The source media access control (MAC) address of network-related information about a finding. See String Filter below for more details.
     */
    networkSourceMacs?: outputs.securityhub.InsightFiltersNetworkSourceMac[];
    /**
     * The source port of network-related information about a finding. See Number Filter below for more details.
     */
    networkSourcePorts?: outputs.securityhub.InsightFiltersNetworkSourcePort[];
    /**
     * The text of a note. See String Filter below for more details.
     */
    noteTexts?: outputs.securityhub.InsightFiltersNoteText[];
    /**
     * The timestamp of when the note was updated. See Date Filter below for more details.
     */
    noteUpdatedAts?: outputs.securityhub.InsightFiltersNoteUpdatedAt[];
    /**
     * The principal that created a note. See String Filter below for more details.
     */
    noteUpdatedBies?: outputs.securityhub.InsightFiltersNoteUpdatedBy[];
    /**
     * The date/time that the process was launched. See Date Filter below for more details.
     */
    processLaunchedAts?: outputs.securityhub.InsightFiltersProcessLaunchedAt[];
    /**
     * The name of the process. See String Filter below for more details.
     */
    processNames?: outputs.securityhub.InsightFiltersProcessName[];
    /**
     * The parent process ID. See Number Filter below for more details.
     */
    processParentPids?: outputs.securityhub.InsightFiltersProcessParentPid[];
    /**
     * The path to the process executable. See String Filter below for more details.
     */
    processPaths?: outputs.securityhub.InsightFiltersProcessPath[];
    /**
     * The process ID. See Number Filter below for more details.
     */
    processPids?: outputs.securityhub.InsightFiltersProcessPid[];
    /**
     * The date/time that the process was terminated. See Date Filter below for more details.
     */
    processTerminatedAts?: outputs.securityhub.InsightFiltersProcessTerminatedAt[];
    /**
     * The ARN generated by Security Hub that uniquely identifies a third-party company (security findings provider) after this provider's product (solution that generates findings) is registered with Security Hub. See String Filter below for more details.
     */
    productArns?: outputs.securityhub.InsightFiltersProductArn[];
    /**
     * A data type where security-findings providers can include additional solution-specific details that aren't part of the defined `AwsSecurityFinding` format. See Map Filter below for more details.
     */
    productFields?: outputs.securityhub.InsightFiltersProductField[];
    /**
     * The name of the solution (product) that generates findings. See String Filter below for more details.
     */
    productNames?: outputs.securityhub.InsightFiltersProductName[];
    /**
     * The recommendation of what to do about the issue described in a finding. See String Filter below for more details.
     */
    recommendationTexts?: outputs.securityhub.InsightFiltersRecommendationText[];
    /**
     * The updated record state for the finding. See String Filter below for more details.
     */
    recordStates?: outputs.securityhub.InsightFiltersRecordState[];
    /**
     * The solution-generated identifier for a related finding. See String Filter below for more details.
     */
    relatedFindingsIds?: outputs.securityhub.InsightFiltersRelatedFindingsId[];
    /**
     * The ARN of the solution that generated a related finding. See String Filter below for more details.
     */
    relatedFindingsProductArns?: outputs.securityhub.InsightFiltersRelatedFindingsProductArn[];
    /**
     * The IAM profile ARN of the instance. See String Filter below for more details.
     */
    resourceAwsEc2InstanceIamInstanceProfileArns?: outputs.securityhub.InsightFiltersResourceAwsEc2InstanceIamInstanceProfileArn[];
    /**
     * The Amazon Machine Image (AMI) ID of the instance. See String Filter below for more details.
     */
    resourceAwsEc2InstanceImageIds?: outputs.securityhub.InsightFiltersResourceAwsEc2InstanceImageId[];
    /**
     * The IPv4 addresses associated with the instance. See Ip Filter below for more details.
     */
    resourceAwsEc2InstanceIpv4Addresses?: outputs.securityhub.InsightFiltersResourceAwsEc2InstanceIpv4Address[];
    /**
     * The IPv6 addresses associated with the instance. See Ip Filter below for more details.
     */
    resourceAwsEc2InstanceIpv6Addresses?: outputs.securityhub.InsightFiltersResourceAwsEc2InstanceIpv6Address[];
    /**
     * The key name associated with the instance. See String Filter below for more details.
     */
    resourceAwsEc2InstanceKeyNames?: outputs.securityhub.InsightFiltersResourceAwsEc2InstanceKeyName[];
    /**
     * The date and time the instance was launched. See Date Filter below for more details.
     */
    resourceAwsEc2InstanceLaunchedAts?: outputs.securityhub.InsightFiltersResourceAwsEc2InstanceLaunchedAt[];
    /**
     * The identifier of the subnet that the instance was launched in. See String Filter below for more details.
     */
    resourceAwsEc2InstanceSubnetIds?: outputs.securityhub.InsightFiltersResourceAwsEc2InstanceSubnetId[];
    /**
     * The instance type of the instance. See String Filter below for more details.
     */
    resourceAwsEc2InstanceTypes?: outputs.securityhub.InsightFiltersResourceAwsEc2InstanceType[];
    /**
     * The identifier of the VPC that the instance was launched in. See String Filter below for more details.
     */
    resourceAwsEc2InstanceVpcIds?: outputs.securityhub.InsightFiltersResourceAwsEc2InstanceVpcId[];
    /**
     * The creation date/time of the IAM access key related to a finding. See Date Filter below for more details.
     */
    resourceAwsIamAccessKeyCreatedAts?: outputs.securityhub.InsightFiltersResourceAwsIamAccessKeyCreatedAt[];
    /**
     * The status of the IAM access key related to a finding. See String Filter below for more details.
     */
    resourceAwsIamAccessKeyStatuses?: outputs.securityhub.InsightFiltersResourceAwsIamAccessKeyStatus[];
    /**
     * The user associated with the IAM access key related to a finding. See String Filter below for more details.
     */
    resourceAwsIamAccessKeyUserNames?: outputs.securityhub.InsightFiltersResourceAwsIamAccessKeyUserName[];
    /**
     * The canonical user ID of the owner of the S3 bucket. See String Filter below for more details.
     */
    resourceAwsS3BucketOwnerIds?: outputs.securityhub.InsightFiltersResourceAwsS3BucketOwnerId[];
    /**
     * The display name of the owner of the S3 bucket. See String Filter below for more details.
     */
    resourceAwsS3BucketOwnerNames?: outputs.securityhub.InsightFiltersResourceAwsS3BucketOwnerName[];
    /**
     * The identifier of the image related to a finding. See String Filter below for more details.
     */
    resourceContainerImageIds?: outputs.securityhub.InsightFiltersResourceContainerImageId[];
    /**
     * The name of the image related to a finding. See String Filter below for more details.
     */
    resourceContainerImageNames?: outputs.securityhub.InsightFiltersResourceContainerImageName[];
    /**
     * The date/time that the container was started. See Date Filter below for more details.
     */
    resourceContainerLaunchedAts?: outputs.securityhub.InsightFiltersResourceContainerLaunchedAt[];
    /**
     * The name of the container related to a finding. See String Filter below for more details.
     */
    resourceContainerNames?: outputs.securityhub.InsightFiltersResourceContainerName[];
    /**
     * The details of a resource that doesn't have a specific subfield for the resource type defined. See Map Filter below for more details.
     */
    resourceDetailsOthers?: outputs.securityhub.InsightFiltersResourceDetailsOther[];
    /**
     * The canonical identifier for the given resource type. See String Filter below for more details.
     */
    resourceIds?: outputs.securityhub.InsightFiltersResourceId[];
    /**
     * The canonical AWS partition name that the Region is assigned to. See String Filter below for more details.
     */
    resourcePartitions?: outputs.securityhub.InsightFiltersResourcePartition[];
    /**
     * The canonical AWS external Region name where this resource is located. See String Filter below for more details.
     */
    resourceRegions?: outputs.securityhub.InsightFiltersResourceRegion[];
    /**
     * A list of AWS tags associated with a resource at the time the finding was processed. See Map Filter below for more details.
     */
    resourceTags?: outputs.securityhub.InsightFiltersResourceTag[];
    /**
     * Specifies the type of the resource that details are provided for. See String Filter below for more details.
     */
    resourceTypes?: outputs.securityhub.InsightFiltersResourceType[];
    /**
     * The label of a finding's severity. See String Filter below for more details.
     */
    severityLabels?: outputs.securityhub.InsightFiltersSeverityLabel[];
    /**
     * A URL that links to a page about the current finding in the security-findings provider's solution. See String Filter below for more details.
     */
    sourceUrls?: outputs.securityhub.InsightFiltersSourceUrl[];
    /**
     * The category of a threat intelligence indicator. See String Filter below for more details.
     */
    threatIntelIndicatorCategories?: outputs.securityhub.InsightFiltersThreatIntelIndicatorCategory[];
    /**
     * The date/time of the last observation of a threat intelligence indicator. See Date Filter below for more details.
     */
    threatIntelIndicatorLastObservedAts?: outputs.securityhub.InsightFiltersThreatIntelIndicatorLastObservedAt[];
    /**
     * The URL for more details from the source of the threat intelligence. See String Filter below for more details.
     */
    threatIntelIndicatorSourceUrls?: outputs.securityhub.InsightFiltersThreatIntelIndicatorSourceUrl[];
    /**
     * The source of the threat intelligence. See String Filter below for more details.
     */
    threatIntelIndicatorSources?: outputs.securityhub.InsightFiltersThreatIntelIndicatorSource[];
    /**
     * The type of a threat intelligence indicator. See String Filter below for more details.
     */
    threatIntelIndicatorTypes?: outputs.securityhub.InsightFiltersThreatIntelIndicatorType[];
    /**
     * The value of a threat intelligence indicator. See String Filter below for more details.
     */
    threatIntelIndicatorValues?: outputs.securityhub.InsightFiltersThreatIntelIndicatorValue[];
    /**
     * A finding's title. See String Filter below for more details.
     */
    titles?: outputs.securityhub.InsightFiltersTitle[];
    /**
     * A finding type in the format of `namespace/category/classifier` that classifies a finding. See String Filter below for more details.
     */
    types?: outputs.securityhub.InsightFiltersType[];
    /**
     * An ISO8601-formatted timestamp that indicates when the security-findings provider last updated the finding record. See Date Filter below for more details.
     */
    updatedAts?: outputs.securityhub.InsightFiltersUpdatedAt[];
    /**
     * A list of name/value string pairs associated with the finding. These are custom, user-defined fields added to a finding. See Map Filter below for more details.
     */
    userDefinedValues?: outputs.securityhub.InsightFiltersUserDefinedValue[];
    /**
     * The veracity of a finding. See String Filter below for more details.
     */
    verificationStates?: outputs.securityhub.InsightFiltersVerificationState[];
    /**
     * The status of the investigation into a finding. See Workflow Status Filter below for more details.
     */
    workflowStatuses?: outputs.securityhub.InsightFiltersWorkflowStatus[];
}

export interface InsightFiltersAwsAccountId {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersCompanyName {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersComplianceStatus {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersConfidence {
    /**
     * The equal-to condition to be applied to a single field when querying for findings, provided as a String.
     */
    eq?: string;
    /**
     * The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
     */
    gte?: string;
    /**
     * The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
     */
    lte?: string;
}

export interface InsightFiltersCreatedAt {
    /**
     * A configuration block of the date range for the date filter. See dateRange below for more details.
     */
    dateRange?: outputs.securityhub.InsightFiltersCreatedAtDateRange;
    /**
     * An end date for the date filter. Required with `start` if `dateRange` is not specified.
     */
    end?: string;
    /**
     * A start date for the date filter. Required with `end` if `dateRange` is not specified.
     */
    start?: string;
}

export interface InsightFiltersCreatedAtDateRange {
    /**
     * A date range unit for the date filter. Valid values: `DAYS`.
     */
    unit: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: number;
}

export interface InsightFiltersCriticality {
    /**
     * The equal-to condition to be applied to a single field when querying for findings, provided as a String.
     */
    eq?: string;
    /**
     * The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
     */
    gte?: string;
    /**
     * The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
     */
    lte?: string;
}

export interface InsightFiltersDescription {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersFindingProviderFieldsConfidence {
    /**
     * The equal-to condition to be applied to a single field when querying for findings, provided as a String.
     */
    eq?: string;
    /**
     * The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
     */
    gte?: string;
    /**
     * The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
     */
    lte?: string;
}

export interface InsightFiltersFindingProviderFieldsCriticality {
    /**
     * The equal-to condition to be applied to a single field when querying for findings, provided as a String.
     */
    eq?: string;
    /**
     * The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
     */
    gte?: string;
    /**
     * The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
     */
    lte?: string;
}

export interface InsightFiltersFindingProviderFieldsRelatedFindingsId {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersFindingProviderFieldsRelatedFindingsProductArn {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersFindingProviderFieldsSeverityLabel {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersFindingProviderFieldsSeverityOriginal {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersFindingProviderFieldsType {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersFirstObservedAt {
    /**
     * A configuration block of the date range for the date filter. See dateRange below for more details.
     */
    dateRange?: outputs.securityhub.InsightFiltersFirstObservedAtDateRange;
    /**
     * An end date for the date filter. Required with `start` if `dateRange` is not specified.
     */
    end?: string;
    /**
     * A start date for the date filter. Required with `end` if `dateRange` is not specified.
     */
    start?: string;
}

export interface InsightFiltersFirstObservedAtDateRange {
    /**
     * A date range unit for the date filter. Valid values: `DAYS`.
     */
    unit: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: number;
}

export interface InsightFiltersGeneratorId {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersId {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersKeyword {
    /**
     * A value for the keyword.
     */
    value: string;
}

export interface InsightFiltersLastObservedAt {
    /**
     * A configuration block of the date range for the date filter. See dateRange below for more details.
     */
    dateRange?: outputs.securityhub.InsightFiltersLastObservedAtDateRange;
    /**
     * An end date for the date filter. Required with `start` if `dateRange` is not specified.
     */
    end?: string;
    /**
     * A start date for the date filter. Required with `end` if `dateRange` is not specified.
     */
    start?: string;
}

export interface InsightFiltersLastObservedAtDateRange {
    /**
     * A date range unit for the date filter. Valid values: `DAYS`.
     */
    unit: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: number;
}

export interface InsightFiltersMalwareName {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersMalwarePath {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersMalwareState {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersMalwareType {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersNetworkDestinationDomain {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersNetworkDestinationIpv4 {
    /**
     * A finding's CIDR value.
     */
    cidr: string;
}

export interface InsightFiltersNetworkDestinationIpv6 {
    /**
     * A finding's CIDR value.
     */
    cidr: string;
}

export interface InsightFiltersNetworkDestinationPort {
    /**
     * The equal-to condition to be applied to a single field when querying for findings, provided as a String.
     */
    eq?: string;
    /**
     * The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
     */
    gte?: string;
    /**
     * The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
     */
    lte?: string;
}

export interface InsightFiltersNetworkDirection {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersNetworkProtocol {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersNetworkSourceDomain {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersNetworkSourceIpv4 {
    /**
     * A finding's CIDR value.
     */
    cidr: string;
}

export interface InsightFiltersNetworkSourceIpv6 {
    /**
     * A finding's CIDR value.
     */
    cidr: string;
}

export interface InsightFiltersNetworkSourceMac {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersNetworkSourcePort {
    /**
     * The equal-to condition to be applied to a single field when querying for findings, provided as a String.
     */
    eq?: string;
    /**
     * The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
     */
    gte?: string;
    /**
     * The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
     */
    lte?: string;
}

export interface InsightFiltersNoteText {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersNoteUpdatedAt {
    /**
     * A configuration block of the date range for the date filter. See dateRange below for more details.
     */
    dateRange?: outputs.securityhub.InsightFiltersNoteUpdatedAtDateRange;
    /**
     * An end date for the date filter. Required with `start` if `dateRange` is not specified.
     */
    end?: string;
    /**
     * A start date for the date filter. Required with `end` if `dateRange` is not specified.
     */
    start?: string;
}

export interface InsightFiltersNoteUpdatedAtDateRange {
    /**
     * A date range unit for the date filter. Valid values: `DAYS`.
     */
    unit: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: number;
}

export interface InsightFiltersNoteUpdatedBy {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersProcessLaunchedAt {
    /**
     * A configuration block of the date range for the date filter. See dateRange below for more details.
     */
    dateRange?: outputs.securityhub.InsightFiltersProcessLaunchedAtDateRange;
    /**
     * An end date for the date filter. Required with `start` if `dateRange` is not specified.
     */
    end?: string;
    /**
     * A start date for the date filter. Required with `end` if `dateRange` is not specified.
     */
    start?: string;
}

export interface InsightFiltersProcessLaunchedAtDateRange {
    /**
     * A date range unit for the date filter. Valid values: `DAYS`.
     */
    unit: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: number;
}

export interface InsightFiltersProcessName {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersProcessParentPid {
    /**
     * The equal-to condition to be applied to a single field when querying for findings, provided as a String.
     */
    eq?: string;
    /**
     * The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
     */
    gte?: string;
    /**
     * The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
     */
    lte?: string;
}

export interface InsightFiltersProcessPath {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersProcessPid {
    /**
     * The equal-to condition to be applied to a single field when querying for findings, provided as a String.
     */
    eq?: string;
    /**
     * The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
     */
    gte?: string;
    /**
     * The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
     */
    lte?: string;
}

export interface InsightFiltersProcessTerminatedAt {
    /**
     * A configuration block of the date range for the date filter. See dateRange below for more details.
     */
    dateRange?: outputs.securityhub.InsightFiltersProcessTerminatedAtDateRange;
    /**
     * An end date for the date filter. Required with `start` if `dateRange` is not specified.
     */
    end?: string;
    /**
     * A start date for the date filter. Required with `end` if `dateRange` is not specified.
     */
    start?: string;
}

export interface InsightFiltersProcessTerminatedAtDateRange {
    /**
     * A date range unit for the date filter. Valid values: `DAYS`.
     */
    unit: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: number;
}

export interface InsightFiltersProductArn {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersProductField {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * The key of the map filter. For example, for `ResourceTags`, `Key` identifies the name of the tag. For `UserDefinedFields`, `Key` is the name of the field.
     */
    key: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersProductName {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersRecommendationText {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersRecordState {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersRelatedFindingsId {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersRelatedFindingsProductArn {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersResourceAwsEc2InstanceIamInstanceProfileArn {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersResourceAwsEc2InstanceImageId {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersResourceAwsEc2InstanceIpv4Address {
    /**
     * A finding's CIDR value.
     */
    cidr: string;
}

export interface InsightFiltersResourceAwsEc2InstanceIpv6Address {
    /**
     * A finding's CIDR value.
     */
    cidr: string;
}

export interface InsightFiltersResourceAwsEc2InstanceKeyName {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersResourceAwsEc2InstanceLaunchedAt {
    /**
     * A configuration block of the date range for the date filter. See dateRange below for more details.
     */
    dateRange?: outputs.securityhub.InsightFiltersResourceAwsEc2InstanceLaunchedAtDateRange;
    /**
     * An end date for the date filter. Required with `start` if `dateRange` is not specified.
     */
    end?: string;
    /**
     * A start date for the date filter. Required with `end` if `dateRange` is not specified.
     */
    start?: string;
}

export interface InsightFiltersResourceAwsEc2InstanceLaunchedAtDateRange {
    /**
     * A date range unit for the date filter. Valid values: `DAYS`.
     */
    unit: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: number;
}

export interface InsightFiltersResourceAwsEc2InstanceSubnetId {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersResourceAwsEc2InstanceType {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersResourceAwsEc2InstanceVpcId {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersResourceAwsIamAccessKeyCreatedAt {
    /**
     * A configuration block of the date range for the date filter. See dateRange below for more details.
     */
    dateRange?: outputs.securityhub.InsightFiltersResourceAwsIamAccessKeyCreatedAtDateRange;
    /**
     * An end date for the date filter. Required with `start` if `dateRange` is not specified.
     */
    end?: string;
    /**
     * A start date for the date filter. Required with `end` if `dateRange` is not specified.
     */
    start?: string;
}

export interface InsightFiltersResourceAwsIamAccessKeyCreatedAtDateRange {
    /**
     * A date range unit for the date filter. Valid values: `DAYS`.
     */
    unit: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: number;
}

export interface InsightFiltersResourceAwsIamAccessKeyStatus {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersResourceAwsIamAccessKeyUserName {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersResourceAwsS3BucketOwnerId {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersResourceAwsS3BucketOwnerName {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersResourceContainerImageId {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersResourceContainerImageName {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersResourceContainerLaunchedAt {
    /**
     * A configuration block of the date range for the date filter. See dateRange below for more details.
     */
    dateRange?: outputs.securityhub.InsightFiltersResourceContainerLaunchedAtDateRange;
    /**
     * An end date for the date filter. Required with `start` if `dateRange` is not specified.
     */
    end?: string;
    /**
     * A start date for the date filter. Required with `end` if `dateRange` is not specified.
     */
    start?: string;
}

export interface InsightFiltersResourceContainerLaunchedAtDateRange {
    /**
     * A date range unit for the date filter. Valid values: `DAYS`.
     */
    unit: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: number;
}

export interface InsightFiltersResourceContainerName {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersResourceDetailsOther {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * The key of the map filter. For example, for `ResourceTags`, `Key` identifies the name of the tag. For `UserDefinedFields`, `Key` is the name of the field.
     */
    key: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersResourceId {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersResourcePartition {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersResourceRegion {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersResourceTag {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * The key of the map filter. For example, for `ResourceTags`, `Key` identifies the name of the tag. For `UserDefinedFields`, `Key` is the name of the field.
     */
    key: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersResourceType {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersSeverityLabel {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersSourceUrl {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersThreatIntelIndicatorCategory {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersThreatIntelIndicatorLastObservedAt {
    /**
     * A configuration block of the date range for the date filter. See dateRange below for more details.
     */
    dateRange?: outputs.securityhub.InsightFiltersThreatIntelIndicatorLastObservedAtDateRange;
    /**
     * An end date for the date filter. Required with `start` if `dateRange` is not specified.
     */
    end?: string;
    /**
     * A start date for the date filter. Required with `end` if `dateRange` is not specified.
     */
    start?: string;
}

export interface InsightFiltersThreatIntelIndicatorLastObservedAtDateRange {
    /**
     * A date range unit for the date filter. Valid values: `DAYS`.
     */
    unit: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: number;
}

export interface InsightFiltersThreatIntelIndicatorSource {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersThreatIntelIndicatorSourceUrl {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersThreatIntelIndicatorType {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersThreatIntelIndicatorValue {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersTitle {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersType {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersUpdatedAt {
    /**
     * A configuration block of the date range for the date filter. See dateRange below for more details.
     */
    dateRange?: outputs.securityhub.InsightFiltersUpdatedAtDateRange;
    /**
     * An end date for the date filter. Required with `start` if `dateRange` is not specified.
     */
    end?: string;
    /**
     * A start date for the date filter. Required with `end` if `dateRange` is not specified.
     */
    start?: string;
}

export interface InsightFiltersUpdatedAtDateRange {
    /**
     * A date range unit for the date filter. Valid values: `DAYS`.
     */
    unit: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: number;
}

export interface InsightFiltersUserDefinedValue {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * The key of the map filter. For example, for `ResourceTags`, `Key` identifies the name of the tag. For `UserDefinedFields`, `Key` is the name of the field.
     */
    key: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersVerificationState {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

export interface InsightFiltersWorkflowStatus {
    /**
     * The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
     */
    comparison: string;
    /**
     * A date range value for the date filter, provided as an Integer.
     */
    value: string;
}

