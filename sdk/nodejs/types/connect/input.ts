// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

import {RoutingRule} from "@/s3";

export interface BotAssociationLexBot {
    /**
     * The Region that the Amazon Lex (V1) bot was created in. Defaults to current region.
     */
    lexRegion?: pulumi.Input<string>;
    /**
     * The name of the Amazon Lex (V1) bot.
     */
    name: pulumi.Input<string>;
}

export interface GetBotAssociationLexBot {
    /**
     * Region that the Amazon Lex (V1) bot was created in.
     */
    lexRegion?: string;
    /**
     * Name of the Amazon Lex (V1) bot.
     */
    name: string;
}

export interface GetBotAssociationLexBotArgs {
    /**
     * Region that the Amazon Lex (V1) bot was created in.
     */
    lexRegion?: pulumi.Input<string>;
    /**
     * Name of the Amazon Lex (V1) bot.
     */
    name: pulumi.Input<string>;
}

export interface HoursOfOperationConfig {
    /**
     * Specifies the day that the hours of operation applies to.
     */
    day: pulumi.Input<string>;
    /**
     * A end time block specifies the time that your contact center closes. The `endTime` is documented below.
     */
    endTime: pulumi.Input<inputs.connect.HoursOfOperationConfigEndTime>;
    /**
     * A start time block specifies the time that your contact center opens. The `startTime` is documented below.
     */
    startTime: pulumi.Input<inputs.connect.HoursOfOperationConfigStartTime>;
}

export interface HoursOfOperationConfigEndTime {
    /**
     * Specifies the hour of closing.
     */
    hours: pulumi.Input<number>;
    /**
     * Specifies the minute of closing.
     */
    minutes: pulumi.Input<number>;
}

export interface HoursOfOperationConfigStartTime {
    /**
     * Specifies the hour of opening.
     */
    hours: pulumi.Input<number>;
    /**
     * Specifies the minute of opening.
     */
    minutes: pulumi.Input<number>;
}

export interface InstanceStorageConfigStorageConfig {
    /**
     * A block that specifies the configuration of the Kinesis Firehose delivery stream. Documented below.
     */
    kinesisFirehoseConfig?: pulumi.Input<inputs.connect.InstanceStorageConfigStorageConfigKinesisFirehoseConfig>;
    /**
     * A block that specifies the configuration of the Kinesis data stream. Documented below.
     */
    kinesisStreamConfig?: pulumi.Input<inputs.connect.InstanceStorageConfigStorageConfigKinesisStreamConfig>;
    /**
     * A block that specifies the configuration of the Kinesis video stream. Documented below.
     */
    kinesisVideoStreamConfig?: pulumi.Input<inputs.connect.InstanceStorageConfigStorageConfigKinesisVideoStreamConfig>;
    /**
     * A block that specifies the configuration of S3 Bucket. Documented below.
     */
    s3Config?: pulumi.Input<inputs.connect.InstanceStorageConfigStorageConfigS3Config>;
    /**
     * A valid storage type. Valid Values: `S3` | `KINESIS_VIDEO_STREAM` | `KINESIS_STREAM` | `KINESIS_FIREHOSE`.
     */
    storageType: pulumi.Input<string>;
}

export interface InstanceStorageConfigStorageConfigKinesisFirehoseConfig {
    /**
     * The Amazon Resource Name (ARN) of the delivery stream.
     */
    firehoseArn: pulumi.Input<string>;
}

export interface InstanceStorageConfigStorageConfigKinesisStreamConfig {
    /**
     * The Amazon Resource Name (ARN) of the data stream.
     */
    streamArn: pulumi.Input<string>;
}

export interface InstanceStorageConfigStorageConfigKinesisVideoStreamConfig {
    /**
     * The encryption configuration. Documented below.
     */
    encryptionConfig: pulumi.Input<inputs.connect.InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig>;
    /**
     * The prefix of the video stream. Minimum length of `1`. Maximum length of `128`. When read from the state, the value returned is `<prefix>-connect-<connect_instance_alias>-contact-` since the API appends additional details to the `prefix`.
     */
    prefix: pulumi.Input<string>;
    /**
     * The number of hours data is retained in the stream. Kinesis Video Streams retains the data in a data store that is associated with the stream. Minimum value of `0`. Maximum value of `87600`. A value of `0`, indicates that the stream does not persist data.
     */
    retentionPeriodHours: pulumi.Input<number>;
}

export interface InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig {
    /**
     * The type of encryption. Valid Values: `KMS`.
     */
    encryptionType: pulumi.Input<string>;
    /**
     * The full ARN of the encryption key. Be sure to provide the full ARN of the encryption key, not just the ID.
     */
    keyId: pulumi.Input<string>;
}

export interface InstanceStorageConfigStorageConfigS3Config {
    /**
     * The S3 bucket name.
     */
    bucketName: pulumi.Input<string>;
    /**
     * The S3 bucket prefix.
     */
    bucketPrefix: pulumi.Input<string>;
    /**
     * The encryption configuration. Documented below.
     */
    encryptionConfig?: pulumi.Input<inputs.connect.InstanceStorageConfigStorageConfigS3ConfigEncryptionConfig>;
}

export interface InstanceStorageConfigStorageConfigS3ConfigEncryptionConfig {
    /**
     * The type of encryption. Valid Values: `KMS`.
     */
    encryptionType: pulumi.Input<string>;
    /**
     * The full ARN of the encryption key. Be sure to provide the full ARN of the encryption key, not just the ID.
     */
    keyId: pulumi.Input<string>;
}

export interface PhoneNumberStatus {
    /**
     * The status message.
     */
    message?: pulumi.Input<string>;
    /**
     * The status of the phone number. Valid Values: `CLAIMED` | `IN_PROGRESS` | `FAILED`.
     */
    status?: pulumi.Input<string>;
}

export interface QueueOutboundCallerConfig {
    /**
     * Specifies the caller ID name.
     */
    outboundCallerIdName?: pulumi.Input<string>;
    /**
     * Specifies the caller ID number.
     */
    outboundCallerIdNumberId?: pulumi.Input<string>;
    /**
     * Specifies outbound whisper flow to be used during an outbound call.
     */
    outboundFlowId?: pulumi.Input<string>;
}

export interface QuickConnectQuickConnectConfig {
    /**
     * Specifies the phone configuration of the Quick Connect. This is required only if `quickConnectType` is `PHONE_NUMBER`. The `phoneConfig` block is documented below.
     */
    phoneConfigs?: pulumi.Input<pulumi.Input<inputs.connect.QuickConnectQuickConnectConfigPhoneConfig>[]>;
    /**
     * Specifies the queue configuration of the Quick Connect. This is required only if `quickConnectType` is `QUEUE`. The `queueConfig` block is documented below.
     */
    queueConfigs?: pulumi.Input<pulumi.Input<inputs.connect.QuickConnectQuickConnectConfigQueueConfig>[]>;
    /**
     * Specifies the configuration type of the quick connect. valid values are `PHONE_NUMBER`, `QUEUE`, `USER`.
     */
    quickConnectType: pulumi.Input<string>;
    /**
     * Specifies the user configuration of the Quick Connect. This is required only if `quickConnectType` is `USER`. The `userConfig` block is documented below.
     */
    userConfigs?: pulumi.Input<pulumi.Input<inputs.connect.QuickConnectQuickConnectConfigUserConfig>[]>;
}

export interface QuickConnectQuickConnectConfigPhoneConfig {
    /**
     * Specifies the phone number in in E.164 format.
     */
    phoneNumber: pulumi.Input<string>;
}

export interface QuickConnectQuickConnectConfigQueueConfig {
    /**
     * Specifies the identifier of the contact flow.
     */
    contactFlowId: pulumi.Input<string>;
    /**
     * Specifies the identifier for the queue.
     */
    queueId: pulumi.Input<string>;
}

export interface QuickConnectQuickConnectConfigUserConfig {
    /**
     * Specifies the identifier of the contact flow.
     */
    contactFlowId: pulumi.Input<string>;
    /**
     * Specifies the identifier for the user.
     */
    userId: pulumi.Input<string>;
}

export interface RoutingProfileMediaConcurrency {
    /**
     * Specifies the channels that agents can handle in the Contact Control Panel (CCP). Valid values are `VOICE`, `CHAT`, `TASK`.
     */
    channel: pulumi.Input<string>;
    /**
     * Specifies the number of contacts an agent can have on a channel simultaneously. Valid Range for `VOICE`: Minimum value of 1. Maximum value of 1. Valid Range for `CHAT`: Minimum value of 1. Maximum value of 10. Valid Range for `TASK`: Minimum value of 1. Maximum value of 10.
     */
    concurrency: pulumi.Input<number>;
}

export interface RoutingProfileQueueConfig {
    /**
     * Specifies the channels agents can handle in the Contact Control Panel (CCP) for this routing profile. Valid values are `VOICE`, `CHAT`, `TASK`.
     */
    channel: pulumi.Input<string>;
    /**
     * Specifies the delay, in seconds, that a contact should be in the queue before they are routed to an available agent
     */
    delay: pulumi.Input<number>;
    /**
     * Specifies the order in which contacts are to be handled for the queue.
     */
    priority: pulumi.Input<number>;
    /**
     * ARN for the queue.
     */
    queueArn?: pulumi.Input<string>;
    /**
     * Specifies the identifier for the queue.
     */
    queueId: pulumi.Input<string>;
    /**
     * Name for the queue.
     */
    queueName?: pulumi.Input<string>;
}

export interface RoutingProfileQueueConfigsAssociated {
    /**
     * Specifies the channels that agents can handle in the Contact Control Panel (CCP). Valid values are `VOICE`, `CHAT`, `TASK`.
     */
    channel?: pulumi.Input<string>;
    /**
     * Specifies the delay, in seconds, that a contact should be in the queue before they are routed to an available agent
     */
    delay?: pulumi.Input<number>;
    /**
     * Specifies the order in which contacts are to be handled for the queue.
     */
    priority?: pulumi.Input<number>;
    /**
     * ARN for the queue.
     */
    queueArn?: pulumi.Input<string>;
    /**
     * Specifies the identifier for the queue.
     */
    queueId?: pulumi.Input<string>;
    /**
     * Name for the queue.
     */
    queueName?: pulumi.Input<string>;
}

export interface UserHierarchyGroupHierarchyPath {
    /**
     * A block that defines the details of level five. The level block is documented below.
     */
    levelFives?: pulumi.Input<pulumi.Input<inputs.connect.UserHierarchyGroupHierarchyPathLevelFife>[]>;
    /**
     * A block that defines the details of level four. The level block is documented below.
     */
    levelFours?: pulumi.Input<pulumi.Input<inputs.connect.UserHierarchyGroupHierarchyPathLevelFour>[]>;
    /**
     * A block that defines the details of level one. The level block is documented below.
     */
    levelOnes?: pulumi.Input<pulumi.Input<inputs.connect.UserHierarchyGroupHierarchyPathLevelOne>[]>;
    /**
     * A block that defines the details of level three. The level block is documented below.
     */
    levelThrees?: pulumi.Input<pulumi.Input<inputs.connect.UserHierarchyGroupHierarchyPathLevelThree>[]>;
    /**
     * A block that defines the details of level two. The level block is documented below.
     */
    levelTwos?: pulumi.Input<pulumi.Input<inputs.connect.UserHierarchyGroupHierarchyPathLevelTwo>[]>;
}

export interface UserHierarchyGroupHierarchyPathLevelFife {
    /**
     * The Amazon Resource Name (ARN) of the hierarchy group.
     */
    arn?: pulumi.Input<string>;
    /**
     * The identifier of the hierarchy group.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the user hierarchy group. Must not be more than 100 characters.
     */
    name?: pulumi.Input<string>;
}

export interface UserHierarchyGroupHierarchyPathLevelFour {
    /**
     * The Amazon Resource Name (ARN) of the hierarchy group.
     */
    arn?: pulumi.Input<string>;
    /**
     * The identifier of the hierarchy group.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the user hierarchy group. Must not be more than 100 characters.
     */
    name?: pulumi.Input<string>;
}

export interface UserHierarchyGroupHierarchyPathLevelOne {
    /**
     * The Amazon Resource Name (ARN) of the hierarchy group.
     */
    arn?: pulumi.Input<string>;
    /**
     * The identifier of the hierarchy group.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the user hierarchy group. Must not be more than 100 characters.
     */
    name?: pulumi.Input<string>;
}

export interface UserHierarchyGroupHierarchyPathLevelThree {
    /**
     * The Amazon Resource Name (ARN) of the hierarchy group.
     */
    arn?: pulumi.Input<string>;
    /**
     * The identifier of the hierarchy group.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the user hierarchy group. Must not be more than 100 characters.
     */
    name?: pulumi.Input<string>;
}

export interface UserHierarchyGroupHierarchyPathLevelTwo {
    /**
     * The Amazon Resource Name (ARN) of the hierarchy group.
     */
    arn?: pulumi.Input<string>;
    /**
     * The identifier of the hierarchy group.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the user hierarchy group. Must not be more than 100 characters.
     */
    name?: pulumi.Input<string>;
}

export interface UserHierarchyStructureHierarchyStructure {
    /**
     * A block that defines the details of level five. The level block is documented below.
     */
    levelFive?: pulumi.Input<inputs.connect.UserHierarchyStructureHierarchyStructureLevelFive>;
    /**
     * A block that defines the details of level four. The level block is documented below.
     */
    levelFour?: pulumi.Input<inputs.connect.UserHierarchyStructureHierarchyStructureLevelFour>;
    /**
     * A block that defines the details of level one. The level block is documented below.
     */
    levelOne?: pulumi.Input<inputs.connect.UserHierarchyStructureHierarchyStructureLevelOne>;
    /**
     * A block that defines the details of level three. The level block is documented below.
     */
    levelThree?: pulumi.Input<inputs.connect.UserHierarchyStructureHierarchyStructureLevelThree>;
    /**
     * A block that defines the details of level two. The level block is documented below.
     */
    levelTwo?: pulumi.Input<inputs.connect.UserHierarchyStructureHierarchyStructureLevelTwo>;
}

export interface UserHierarchyStructureHierarchyStructureLevelFive {
    /**
     * The Amazon Resource Name (ARN) of the hierarchy level.
     */
    arn?: pulumi.Input<string>;
    /**
     * The identifier of the hierarchy level.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the user hierarchy level. Must not be more than 50 characters.
     */
    name: pulumi.Input<string>;
}

export interface UserHierarchyStructureHierarchyStructureLevelFour {
    /**
     * The Amazon Resource Name (ARN) of the hierarchy level.
     */
    arn?: pulumi.Input<string>;
    /**
     * The identifier of the hierarchy level.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the user hierarchy level. Must not be more than 50 characters.
     */
    name: pulumi.Input<string>;
}

export interface UserHierarchyStructureHierarchyStructureLevelOne {
    /**
     * The Amazon Resource Name (ARN) of the hierarchy level.
     */
    arn?: pulumi.Input<string>;
    /**
     * The identifier of the hierarchy level.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the user hierarchy level. Must not be more than 50 characters.
     */
    name: pulumi.Input<string>;
}

export interface UserHierarchyStructureHierarchyStructureLevelThree {
    /**
     * The Amazon Resource Name (ARN) of the hierarchy level.
     */
    arn?: pulumi.Input<string>;
    /**
     * The identifier of the hierarchy level.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the user hierarchy level. Must not be more than 50 characters.
     */
    name: pulumi.Input<string>;
}

export interface UserHierarchyStructureHierarchyStructureLevelTwo {
    /**
     * The Amazon Resource Name (ARN) of the hierarchy level.
     */
    arn?: pulumi.Input<string>;
    /**
     * The identifier of the hierarchy level.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the user hierarchy level. Must not be more than 50 characters.
     */
    name: pulumi.Input<string>;
}

export interface UserIdentityInfo {
    /**
     * The email address. If you are using SAML for identity management and include this parameter, an error is returned. Note that updates to the `email` is supported. From the [UpdateUserIdentityInfo API documentation](https://docs.aws.amazon.com/connect/latest/APIReference/API_UpdateUserIdentityInfo.html) it is strongly recommended to limit who has the ability to invoke `UpdateUserIdentityInfo`. Someone with that ability can change the login credentials of other users by changing their email address. This poses a security risk to your organization. They can change the email address of a user to the attacker's email address, and then reset the password through email. For more information, see [Best Practices for Security Profiles](https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-best-practices.html) in the Amazon Connect Administrator Guide.
     */
    email?: pulumi.Input<string>;
    /**
     * The first name. This is required if you are using Amazon Connect or SAML for identity management. Minimum length of 1. Maximum length of 100.
     */
    firstName?: pulumi.Input<string>;
    /**
     * The last name. This is required if you are using Amazon Connect or SAML for identity management. Minimum length of 1. Maximum length of 100.
     */
    lastName?: pulumi.Input<string>;
}

export interface UserPhoneConfig {
    /**
     * The After Call Work (ACW) timeout setting, in seconds. Minimum value of 0.
     */
    afterContactWorkTimeLimit?: pulumi.Input<number>;
    /**
     * When Auto-Accept Call is enabled for an available agent, the agent connects to contacts automatically.
     */
    autoAccept?: pulumi.Input<boolean>;
    /**
     * The phone number for the user's desk phone. Required if `phoneType` is set as `DESK_PHONE`.
     */
    deskPhoneNumber?: pulumi.Input<string>;
    /**
     * The phone type. Valid values are `DESK_PHONE` and `SOFT_PHONE`.
     */
    phoneType: pulumi.Input<string>;
}
