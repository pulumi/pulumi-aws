// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

import {RoutingRule} from "@/s3";

export interface ComputeEnvironmentComputeResources {
    /**
     * The allocation strategy to use for the compute resource in case not enough instances of the best fitting instance type can be allocated. Valid items are `BEST_FIT_PROGRESSIVE`, `SPOT_CAPACITY_OPTIMIZED` or `BEST_FIT`. Defaults to `BEST_FIT`. See [AWS docs](https://docs.aws.amazon.com/batch/latest/userguide/allocation-strategies.html) for details. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
     */
    allocationStrategy?: pulumi.Input<string>;
    /**
     * Integer of maximum percentage that a Spot Instance price can be when compared with the On-Demand price for that instance type before instances are launched. For example, if your bid percentage is 20% (`20`), then the Spot price must be below 20% of the current On-Demand price for that EC2 instance. If you leave this field empty, the default value is 100% of the On-Demand price. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
     */
    bidPercentage?: pulumi.Input<number>;
    /**
     * The desired number of EC2 vCPUS in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
     */
    desiredVcpus?: pulumi.Input<number>;
    /**
     * Provides information used to select Amazon Machine Images (AMIs) for EC2 instances in the compute environment. If Ec2Configuration isn't specified, the default is ECS_AL2. This parameter isn't applicable to jobs that are running on Fargate resources, and shouldn't be specified.
     */
    ec2Configuration?: pulumi.Input<inputs.batch.ComputeEnvironmentComputeResourcesEc2Configuration>;
    /**
     * The EC2 key pair that is used for instances launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
     */
    ec2KeyPair?: pulumi.Input<string>;
    /**
     * The Amazon Machine Image (AMI) ID used for instances launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified. (Deprecated, use `ec2Configuration` `imageIdOverride` instead)
     */
    imageId?: pulumi.Input<string>;
    /**
     * The Amazon ECS instance role applied to Amazon EC2 instances in a compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
     */
    instanceRole?: pulumi.Input<string>;
    /**
     * A list of instance types that may be launched. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
     */
    instanceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The launch template to use for your compute resources. See details below. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
     */
    launchTemplate?: pulumi.Input<inputs.batch.ComputeEnvironmentComputeResourcesLaunchTemplate>;
    /**
     * The maximum number of EC2 vCPUs that an environment can reach.
     */
    maxVcpus: pulumi.Input<number>;
    /**
     * The minimum number of EC2 vCPUs that an environment should maintain. For `EC2` or `SPOT` compute environments, if the parameter is not explicitly defined, a `0` default value will be set. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
     */
    minVcpus?: pulumi.Input<number>;
    /**
     * A list of EC2 security group that are associated with instances launched in the compute environment. This parameter is required for Fargate compute environments.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Amazon Resource Name (ARN) of the Amazon EC2 Spot Fleet IAM role applied to a SPOT compute environment. This parameter is required for SPOT compute environments. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
     */
    spotIamFleetRole?: pulumi.Input<string>;
    /**
     * A list of VPC subnets into which the compute resources are launched.
     */
    subnets: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Key-value pair tags to be applied to resources that are launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The type of compute environment. Valid items are `EC2`, `SPOT`, `FARGATE` or `FARGATE_SPOT`.
     */
    type: pulumi.Input<string>;
}

export interface ComputeEnvironmentComputeResourcesEc2Configuration {
    /**
     * The AMI ID used for instances launched in the compute environment that match the image type. This setting overrides the `imageId` argument in the `computeResources` block.
     */
    imageIdOverride?: pulumi.Input<string>;
    /**
     * The image type to match with the instance type to select an AMI. If the `imageIdOverride` parameter isn't specified, then a recent [Amazon ECS-optimized Amazon Linux 2 AMI](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html#al2ami) (`ECS_AL2`) is used.
     */
    imageType?: pulumi.Input<string>;
}

export interface ComputeEnvironmentComputeResourcesLaunchTemplate {
    /**
     * ID of the launch template. You must specify either the launch template ID or launch template name in the request, but not both.
     */
    launchTemplateId?: pulumi.Input<string>;
    /**
     * Name of the launch template.
     */
    launchTemplateName?: pulumi.Input<string>;
    /**
     * The version number of the launch template. Default: The default version of the launch template.
     */
    version?: pulumi.Input<string>;
}

export interface ComputeEnvironmentEksConfiguration {
    /**
     * The Amazon Resource Name (ARN) of the Amazon EKS cluster.
     */
    eksClusterArn: pulumi.Input<string>;
    /**
     * The namespace of the Amazon EKS cluster. AWS Batch manages pods in this namespace.
     */
    kubernetesNamespace: pulumi.Input<string>;
}

export interface JobDefinitionRetryStrategy {
    /**
     * The number of times to move a job to the `RUNNABLE` status. You may specify between `1` and `10` attempts.
     */
    attempts?: pulumi.Input<number>;
    /**
     * The evaluate on exit conditions under which the job should be retried or failed. If this parameter is specified, then the `attempts` parameter must also be specified. You may specify up to 5 configuration blocks.
     */
    evaluateOnExits?: pulumi.Input<pulumi.Input<inputs.batch.JobDefinitionRetryStrategyEvaluateOnExit>[]>;
}

export interface JobDefinitionRetryStrategyEvaluateOnExit {
    /**
     * Specifies the action to take if all of the specified conditions are met. The values are not case sensitive. Valid values: `RETRY`, `EXIT`.
     */
    action: pulumi.Input<string>;
    /**
     * A glob pattern to match against the decimal representation of the exit code returned for a job.
     */
    onExitCode?: pulumi.Input<string>;
    /**
     * A glob pattern to match against the reason returned for a job.
     */
    onReason?: pulumi.Input<string>;
    /**
     * A glob pattern to match against the status reason returned for a job.
     */
    onStatusReason?: pulumi.Input<string>;
}

export interface JobDefinitionTimeout {
    /**
     * The time duration in seconds after which AWS Batch terminates your jobs if they have not finished. The minimum value for the timeout is `60` seconds.
     */
    attemptDurationSeconds?: pulumi.Input<number>;
}

export interface SchedulingPolicyFairSharePolicy {
    /**
     * A value used to reserve some of the available maximum vCPU for fair share identifiers that have not yet been used. For more information, see [FairsharePolicy](https://docs.aws.amazon.com/batch/latest/APIReference/API_FairsharePolicy.html).
     */
    computeReservation?: pulumi.Input<number>;
    shareDecaySeconds?: pulumi.Input<number>;
    /**
     * One or more share distribution blocks which define the weights for the fair share identifiers for the fair share policy. For more information, see [FairsharePolicy](https://docs.aws.amazon.com/batch/latest/APIReference/API_FairsharePolicy.html). The `shareDistribution` block is documented below.
     */
    shareDistributions?: pulumi.Input<pulumi.Input<inputs.batch.SchedulingPolicyFairSharePolicyShareDistribution>[]>;
}

export interface SchedulingPolicyFairSharePolicyShareDistribution {
    /**
     * A fair share identifier or fair share identifier prefix. For more information, see [ShareAttributes](https://docs.aws.amazon.com/batch/latest/APIReference/API_ShareAttributes.html).
     */
    shareIdentifier: pulumi.Input<string>;
    /**
     * The weight factor for the fair share identifier. For more information, see [ShareAttributes](https://docs.aws.amazon.com/batch/latest/APIReference/API_ShareAttributes.html).
     */
    weightFactor?: pulumi.Input<number>;
}
