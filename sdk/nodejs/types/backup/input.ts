// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

import {RoutingRule} from "@/s3";

export interface FrameworkControl {
    /**
     * One or more input parameter blocks. An example of a control with two parameters is: "backup plan frequency is at least daily and the retention period is at least 1 year". The first parameter is daily. The second parameter is 1 year. Detailed below.
     */
    inputParameters?: pulumi.Input<pulumi.Input<inputs.backup.FrameworkControlInputParameter>[]>;
    /**
     * The name of a parameter, for example, BackupPlanFrequency.
     */
    name: pulumi.Input<string>;
    /**
     * The scope of a control. The control scope defines what the control will evaluate. Three examples of control scopes are: a specific backup plan, all backup plans with a specific tag, or all backup plans. Detailed below.
     */
    scope?: pulumi.Input<inputs.backup.FrameworkControlScope>;
}

export interface FrameworkControlInputParameter {
    /**
     * The name of a parameter, for example, BackupPlanFrequency.
     */
    name?: pulumi.Input<string>;
    /**
     * The value of parameter, for example, hourly.
     */
    value?: pulumi.Input<string>;
}

export interface FrameworkControlScope {
    /**
     * The ID of the only AWS resource that you want your control scope to contain. Minimum number of 1 item. Maximum number of 100 items.
     */
    complianceResourceIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Describes whether the control scope includes one or more types of resources, such as EFS or RDS.
     */
    complianceResourceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The tag key-value pair applied to those AWS resources that you want to trigger an evaluation for a rule. A maximum of one key-value pair can be provided.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface PlanAdvancedBackupSetting {
    /**
     * Specifies the backup option for a selected resource. This option is only available for Windows VSS backup jobs. Set to `{ WindowsVSS = "enabled" }` to enable Windows VSS backup option and create a VSS Windows backup.
     */
    backupOptions: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The type of AWS resource to be backed up. For VSS Windows backups, the only supported resource type is Amazon EC2. Valid values: `EC2`.
     */
    resourceType: pulumi.Input<string>;
}

export interface PlanRule {
    /**
     * The amount of time in minutes AWS Backup attempts a backup before canceling the job and returning an error.
     */
    completionWindow?: pulumi.Input<number>;
    /**
     * Configuration block(s) with copy operation settings. Detailed below.
     */
    copyActions?: pulumi.Input<pulumi.Input<inputs.backup.PlanRuleCopyAction>[]>;
    /**
     * Enable continuous backups for supported resources.
     */
    enableContinuousBackup?: pulumi.Input<boolean>;
    /**
     * The lifecycle defines when a protected resource is copied over to a backup vault and when it expires.  Fields documented above.
     */
    lifecycle?: pulumi.Input<inputs.backup.PlanRuleLifecycle>;
    /**
     * Metadata that you can assign to help organize the resources that you create.
     */
    recoveryPointTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * An display name for a backup rule.
     */
    ruleName: pulumi.Input<string>;
    /**
     * A CRON expression specifying when AWS Backup initiates a backup job.
     */
    schedule?: pulumi.Input<string>;
    /**
     * The amount of time in minutes before beginning a backup.
     */
    startWindow?: pulumi.Input<number>;
    /**
     * The name of a logical container where backups are stored.
     */
    targetVaultName: pulumi.Input<string>;
}

export interface PlanRuleCopyAction {
    /**
     * An Amazon Resource Name (ARN) that uniquely identifies the destination backup vault for the copied backup.
     */
    destinationVaultArn: pulumi.Input<string>;
    /**
     * The lifecycle defines when a protected resource is copied over to a backup vault and when it expires.  Fields documented above.
     */
    lifecycle?: pulumi.Input<inputs.backup.PlanRuleCopyActionLifecycle>;
}

export interface PlanRuleCopyActionLifecycle {
    /**
     * Specifies the number of days after creation that a recovery point is moved to cold storage.
     */
    coldStorageAfter?: pulumi.Input<number>;
    /**
     * Specifies the number of days after creation that a recovery point is deleted. Must be 90 days greater than `coldStorageAfter`.
     */
    deleteAfter?: pulumi.Input<number>;
}

export interface PlanRuleLifecycle {
    /**
     * Specifies the number of days after creation that a recovery point is moved to cold storage.
     */
    coldStorageAfter?: pulumi.Input<number>;
    /**
     * Specifies the number of days after creation that a recovery point is deleted. Must be 90 days greater than `coldStorageAfter`.
     */
    deleteAfter?: pulumi.Input<number>;
}

export interface ReportPlanReportDeliveryChannel {
    /**
     * A list of the format of your reports: CSV, JSON, or both. If not specified, the default format is CSV.
     */
    formats?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The unique name of the S3 bucket that receives your reports.
     */
    s3BucketName: pulumi.Input<string>;
    /**
     * The prefix for where Backup Audit Manager delivers your reports to Amazon S3. The prefix is this part of the following path: s3://your-bucket-name/prefix/Backup/us-west-2/year/month/day/report-name. If not specified, there is no prefix.
     */
    s3KeyPrefix?: pulumi.Input<string>;
}

export interface ReportPlanReportSetting {
    /**
     * Specifies the Amazon Resource Names (ARNs) of the frameworks a report covers.
     */
    frameworkArns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the number of frameworks a report covers.
     */
    numberOfFrameworks?: pulumi.Input<number>;
    /**
     * Identifies the report template for the report. Reports are built using a report template. The report templates are: `RESOURCE_COMPLIANCE_REPORT` | `CONTROL_COMPLIANCE_REPORT` | `BACKUP_JOB_REPORT` | `COPY_JOB_REPORT` | `RESTORE_JOB_REPORT`.
     */
    reportTemplate: pulumi.Input<string>;
}

export interface SelectionCondition {
    stringEquals?: pulumi.Input<pulumi.Input<inputs.backup.SelectionConditionStringEqual>[]>;
    stringLikes?: pulumi.Input<pulumi.Input<inputs.backup.SelectionConditionStringLike>[]>;
    stringNotEquals?: pulumi.Input<pulumi.Input<inputs.backup.SelectionConditionStringNotEqual>[]>;
    stringNotLikes?: pulumi.Input<pulumi.Input<inputs.backup.SelectionConditionStringNotLike>[]>;
}

export interface SelectionConditionStringEqual {
    /**
     * The key in a key-value pair.
     */
    key: pulumi.Input<string>;
    /**
     * The value in a key-value pair.
     */
    value: pulumi.Input<string>;
}

export interface SelectionConditionStringLike {
    /**
     * The key in a key-value pair.
     */
    key: pulumi.Input<string>;
    /**
     * The value in a key-value pair.
     */
    value: pulumi.Input<string>;
}

export interface SelectionConditionStringNotEqual {
    /**
     * The key in a key-value pair.
     */
    key: pulumi.Input<string>;
    /**
     * The value in a key-value pair.
     */
    value: pulumi.Input<string>;
}

export interface SelectionConditionStringNotLike {
    /**
     * The key in a key-value pair.
     */
    key: pulumi.Input<string>;
    /**
     * The value in a key-value pair.
     */
    value: pulumi.Input<string>;
}

export interface SelectionSelectionTag {
    /**
     * The key in a key-value pair.
     */
    key: pulumi.Input<string>;
    /**
     * An operation, such as `StringEquals`, that is applied to a key-value pair used to filter resources in a selection.
     */
    type: pulumi.Input<string>;
    /**
     * The value in a key-value pair.
     */
    value: pulumi.Input<string>;
}
