// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

import {RoutingRule} from "@/s3";

export interface ConnectorCapacity {
    /**
     * Information about the auto scaling parameters for the connector. See below.
     */
    autoscaling?: outputs.mskconnect.ConnectorCapacityAutoscaling;
    /**
     * Details about a fixed capacity allocated to a connector. See below.
     */
    provisionedCapacity?: outputs.mskconnect.ConnectorCapacityProvisionedCapacity;
}

export interface ConnectorCapacityAutoscaling {
    /**
     * The maximum number of workers allocated to the connector.
     */
    maxWorkerCount: number;
    /**
     * The number of microcontroller units (MCUs) allocated to each connector worker. Valid values: `1`, `2`, `4`, `8`. The default value is `1`.
     */
    mcuCount?: number;
    /**
     * The minimum number of workers allocated to the connector.
     */
    minWorkerCount: number;
    /**
     * The scale-in policy for the connector. See below.
     */
    scaleInPolicy: outputs.mskconnect.ConnectorCapacityAutoscalingScaleInPolicy;
    /**
     * The scale-out policy for the connector. See below.
     */
    scaleOutPolicy: outputs.mskconnect.ConnectorCapacityAutoscalingScaleOutPolicy;
}

export interface ConnectorCapacityAutoscalingScaleInPolicy {
    /**
     * The CPU utilization percentage threshold at which you want connector scale out to be triggered.
     */
    cpuUtilizationPercentage: number;
}

export interface ConnectorCapacityAutoscalingScaleOutPolicy {
    /**
     * The CPU utilization percentage threshold at which you want connector scale out to be triggered.
     */
    cpuUtilizationPercentage: number;
}

export interface ConnectorCapacityProvisionedCapacity {
    /**
     * The number of microcontroller units (MCUs) allocated to each connector worker. Valid values: `1`, `2`, `4`, `8`. The default value is `1`.
     */
    mcuCount?: number;
    /**
     * The number of workers that are allocated to the connector.
     */
    workerCount: number;
}

export interface ConnectorKafkaCluster {
    /**
     * The Apache Kafka cluster to which the connector is connected.
     */
    apacheKafkaCluster: outputs.mskconnect.ConnectorKafkaClusterApacheKafkaCluster;
}

export interface ConnectorKafkaClusterApacheKafkaCluster {
    /**
     * The bootstrap servers of the cluster.
     */
    bootstrapServers: string;
    /**
     * Details of an Amazon VPC which has network connectivity to the Apache Kafka cluster.
     */
    vpc: outputs.mskconnect.ConnectorKafkaClusterApacheKafkaClusterVpc;
}

export interface ConnectorKafkaClusterApacheKafkaClusterVpc {
    /**
     * The security groups for the connector.
     */
    securityGroups: string[];
    /**
     * The subnets for the connector.
     */
    subnets: string[];
}

export interface ConnectorKafkaClusterClientAuthentication {
    /**
     * The type of client authentication used to connect to the Apache Kafka cluster. Valid values: `IAM`, `NONE`. A value of `NONE` means that no client authentication is used. The default value is `NONE`.
     */
    authenticationType?: string;
}

export interface ConnectorKafkaClusterEncryptionInTransit {
    /**
     * The type of encryption in transit to the Apache Kafka cluster. Valid values: `PLAINTEXT`, `TLS`. The default values is `PLAINTEXT`.
     */
    encryptionType?: string;
}

export interface ConnectorLogDelivery {
    /**
     * The workers can send worker logs to different destination types. This configuration specifies the details of these destinations. See below.
     */
    workerLogDelivery: outputs.mskconnect.ConnectorLogDeliveryWorkerLogDelivery;
}

export interface ConnectorLogDeliveryWorkerLogDelivery {
    /**
     * Details about delivering logs to Amazon CloudWatch Logs. See below.
     */
    cloudwatchLogs?: outputs.mskconnect.ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogs;
    /**
     * Details about delivering logs to Amazon Kinesis Data Firehose. See below.
     */
    firehose?: outputs.mskconnect.ConnectorLogDeliveryWorkerLogDeliveryFirehose;
    /**
     * Details about delivering logs to Amazon S3. See below.
     */
    s3?: outputs.mskconnect.ConnectorLogDeliveryWorkerLogDeliveryS3;
}

export interface ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogs {
    /**
     * Specifies whether connector logs get sent to the specified Amazon S3 destination.
     */
    enabled: boolean;
    /**
     * The name of the CloudWatch log group that is the destination for log delivery.
     */
    logGroup?: string;
}

export interface ConnectorLogDeliveryWorkerLogDeliveryFirehose {
    /**
     * The name of the Kinesis Data Firehose delivery stream that is the destination for log delivery.
     */
    deliveryStream?: string;
    /**
     * Specifies whether connector logs get sent to the specified Amazon S3 destination.
     */
    enabled: boolean;
}

export interface ConnectorLogDeliveryWorkerLogDeliveryS3 {
    /**
     * The name of the S3 bucket that is the destination for log delivery.
     */
    bucket?: string;
    /**
     * Specifies whether connector logs get sent to the specified Amazon S3 destination.
     */
    enabled: boolean;
    /**
     * The S3 prefix that is the destination for log delivery.
     */
    prefix?: string;
}

export interface ConnectorPlugin {
    /**
     * Details about a custom plugin. See below.
     */
    customPlugin: outputs.mskconnect.ConnectorPluginCustomPlugin;
}

export interface ConnectorPluginCustomPlugin {
    /**
     * The Amazon Resource Name (ARN) of the worker configuration.
     */
    arn: string;
    /**
     * The revision of the worker configuration.
     */
    revision: number;
}

export interface ConnectorWorkerConfiguration {
    /**
     * The Amazon Resource Name (ARN) of the worker configuration.
     */
    arn: string;
    /**
     * The revision of the worker configuration.
     */
    revision: number;
}

export interface CustomPluginLocation {
    /**
     * Information of the plugin file stored in Amazon S3. See below.
     */
    s3: outputs.mskconnect.CustomPluginLocationS3;
}

export interface CustomPluginLocationS3 {
    /**
     * The Amazon Resource Name (ARN) of an S3 bucket.
     */
    bucketArn: string;
    /**
     * The file key for an object in an S3 bucket.
     */
    fileKey: string;
    /**
     * The version of an object in an S3 bucket.
     */
    objectVersion?: string;
}

