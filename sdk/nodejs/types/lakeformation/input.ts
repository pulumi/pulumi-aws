// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

import {RoutingRule} from "@/s3";

export interface DataLakeSettingsCreateDatabaseDefaultPermission {
    /**
     * List of permissions that are granted to the principal. Valid values may include `ALL`, `SELECT`, `ALTER`, `DROP`, `DELETE`, `INSERT`, and `DESCRIBE`. For more details, see [Lake Formation Permissions Reference](https://docs.aws.amazon.com/lake-formation/latest/dg/lf-permissions-reference.html).
     */
    permissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Principal who is granted permissions. To enforce metadata and underlying data access control only by IAM on new databases and tables set `principal` to `IAM_ALLOWED_PRINCIPALS` and `permissions` to `["ALL"]`.
     */
    principal?: pulumi.Input<string>;
}

export interface DataLakeSettingsCreateTableDefaultPermission {
    /**
     * List of permissions that are granted to the principal. Valid values may include `ALL`, `SELECT`, `ALTER`, `DROP`, `DELETE`, `INSERT`, and `DESCRIBE`. For more details, see [Lake Formation Permissions Reference](https://docs.aws.amazon.com/lake-formation/latest/dg/lf-permissions-reference.html).
     */
    permissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Principal who is granted permissions. To enforce metadata and underlying data access control only by IAM on new databases and tables set `principal` to `IAM_ALLOWED_PRINCIPALS` and `permissions` to `["ALL"]`.
     */
    principal?: pulumi.Input<string>;
}

export interface GetPermissionsDataLocation {
    /**
     * ARN that uniquely identifies the data location resource.
     */
    arn: string;
    /**
     * Identifier for the Data Catalog. By default, it is the account ID of the caller.
     */
    catalogId?: string;
}

export interface GetPermissionsDataLocationArgs {
    /**
     * ARN that uniquely identifies the data location resource.
     */
    arn: pulumi.Input<string>;
    /**
     * Identifier for the Data Catalog. By default, it is the account ID of the caller.
     */
    catalogId?: pulumi.Input<string>;
}

export interface GetPermissionsDatabase {
    /**
     * Identifier for the Data Catalog. By default, it is the account ID of the caller.
     */
    catalogId?: string;
    /**
     * Name of the table resource.
     */
    name: string;
}

export interface GetPermissionsDatabaseArgs {
    /**
     * Identifier for the Data Catalog. By default, it is the account ID of the caller.
     */
    catalogId?: pulumi.Input<string>;
    /**
     * Name of the table resource.
     */
    name: pulumi.Input<string>;
}

export interface GetPermissionsLfTag {
    /**
     * Identifier for the Data Catalog. By default, it is the account ID of the caller.
     */
    catalogId?: string;
    /**
     * Key-name of an LF-Tag.
     */
    key: string;
    /**
     * List of possible values of an LF-Tag.
     */
    values: string[];
}

export interface GetPermissionsLfTagArgs {
    /**
     * Identifier for the Data Catalog. By default, it is the account ID of the caller.
     */
    catalogId?: pulumi.Input<string>;
    /**
     * Key-name of an LF-Tag.
     */
    key: pulumi.Input<string>;
    /**
     * List of possible values of an LF-Tag.
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetPermissionsLfTagPolicy {
    /**
     * Identifier for the Data Catalog. By default, it is the account ID of the caller.
     */
    catalogId?: string;
    /**
     * List of tag conditions that apply to the resource's tag policy. Configuration block for tag conditions that apply to the policy. See `expression` below.
     */
    expressions: inputs.lakeformation.GetPermissionsLfTagPolicyExpression[];
    /**
     * Resource type for which the tag policy applies. Valid values are `DATABASE` and `TABLE`.
     */
    resourceType: string;
}

export interface GetPermissionsLfTagPolicyArgs {
    /**
     * Identifier for the Data Catalog. By default, it is the account ID of the caller.
     */
    catalogId?: pulumi.Input<string>;
    /**
     * List of tag conditions that apply to the resource's tag policy. Configuration block for tag conditions that apply to the policy. See `expression` below.
     */
    expressions: pulumi.Input<pulumi.Input<inputs.lakeformation.GetPermissionsLfTagPolicyExpressionArgs>[]>;
    /**
     * Resource type for which the tag policy applies. Valid values are `DATABASE` and `TABLE`.
     */
    resourceType: pulumi.Input<string>;
}

export interface GetPermissionsLfTagPolicyExpression {
    /**
     * Key-name of an LF-Tag.
     */
    key: string;
    /**
     * List of possible values of an LF-Tag.
     */
    values: string[];
}

export interface GetPermissionsLfTagPolicyExpressionArgs {
    /**
     * Key-name of an LF-Tag.
     */
    key: pulumi.Input<string>;
    /**
     * List of possible values of an LF-Tag.
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetPermissionsTable {
    /**
     * Identifier for the Data Catalog. By default, it is the account ID of the caller.
     */
    catalogId?: string;
    /**
     * Name of the database for the table with columns resource. Unique to the Data Catalog.
     */
    databaseName: string;
    /**
     * Name of the table resource.
     */
    name?: string;
    /**
     * Whether to use a wildcard representing every table under a database. At least one of `name` or `wildcard` is required. Defaults to `false`.
     */
    wildcard?: boolean;
}

export interface GetPermissionsTableArgs {
    /**
     * Identifier for the Data Catalog. By default, it is the account ID of the caller.
     */
    catalogId?: pulumi.Input<string>;
    /**
     * Name of the database for the table with columns resource. Unique to the Data Catalog.
     */
    databaseName: pulumi.Input<string>;
    /**
     * Name of the table resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Whether to use a wildcard representing every table under a database. At least one of `name` or `wildcard` is required. Defaults to `false`.
     */
    wildcard?: pulumi.Input<boolean>;
}

export interface GetPermissionsTableWithColumns {
    /**
     * Identifier for the Data Catalog. By default, it is the account ID of the caller.
     */
    catalogId?: string;
    /**
     * Set of column names for the table. At least one of `columnNames` or `excludedColumnNames` is required.
     */
    columnNames?: string[];
    /**
     * Name of the database for the table with columns resource. Unique to the Data Catalog.
     */
    databaseName: string;
    /**
     * Set of column names for the table to exclude. At least one of `columnNames` or `excludedColumnNames` is required.
     */
    excludedColumnNames?: string[];
    /**
     * Name of the table resource.
     */
    name: string;
    /**
     * Whether to use a wildcard representing every table under a database. At least one of `name` or `wildcard` is required. Defaults to `false`.
     */
    wildcard?: boolean;
}

export interface GetPermissionsTableWithColumnsArgs {
    /**
     * Identifier for the Data Catalog. By default, it is the account ID of the caller.
     */
    catalogId?: pulumi.Input<string>;
    /**
     * Set of column names for the table. At least one of `columnNames` or `excludedColumnNames` is required.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the database for the table with columns resource. Unique to the Data Catalog.
     */
    databaseName: pulumi.Input<string>;
    /**
     * Set of column names for the table to exclude. At least one of `columnNames` or `excludedColumnNames` is required.
     */
    excludedColumnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the table resource.
     */
    name: pulumi.Input<string>;
    /**
     * Whether to use a wildcard representing every table under a database. At least one of `name` or `wildcard` is required. Defaults to `false`.
     */
    wildcard?: pulumi.Input<boolean>;
}

export interface PermissionsDataLocation {
    /**
     * Amazon Resource Name (ARN) that uniquely identifies the data location resource.
     */
    arn: pulumi.Input<string>;
    /**
     * Identifier for the Data Catalog. By default, it is the account ID of the caller.
     */
    catalogId?: pulumi.Input<string>;
}

export interface PermissionsDatabase {
    /**
     * Identifier for the Data Catalog. By default, it is the account ID of the caller.
     */
    catalogId?: pulumi.Input<string>;
    /**
     * Name of the table resource.
     */
    name: pulumi.Input<string>;
}

export interface PermissionsLfTag {
    /**
     * Identifier for the Data Catalog. By default, it is the account ID of the caller.
     */
    catalogId?: pulumi.Input<string>;
    /**
     * The key-name of an LF-Tag.
     */
    key: pulumi.Input<string>;
    /**
     * A list of possible values of an LF-Tag.
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionsLfTagPolicy {
    /**
     * Identifier for the Data Catalog. By default, it is the account ID of the caller.
     */
    catalogId?: pulumi.Input<string>;
    /**
     * A list of tag conditions that apply to the resource's tag policy. Configuration block for tag conditions that apply to the policy. See `expression` below.
     */
    expressions: pulumi.Input<pulumi.Input<inputs.lakeformation.PermissionsLfTagPolicyExpression>[]>;
    /**
     * The resource type for which the tag policy applies. Valid values are `DATABASE` and `TABLE`.
     */
    resourceType: pulumi.Input<string>;
}

export interface PermissionsLfTagPolicyExpression {
    /**
     * The key-name of an LF-Tag.
     */
    key: pulumi.Input<string>;
    /**
     * A list of possible values of an LF-Tag.
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PermissionsTable {
    /**
     * Identifier for the Data Catalog. By default, it is the account ID of the caller.
     */
    catalogId?: pulumi.Input<string>;
    /**
     * Name of the database for the table with columns resource. Unique to the Data Catalog.
     */
    databaseName: pulumi.Input<string>;
    /**
     * Name of the table resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Whether to use a column wildcard. If `excludedColumnNames` is included, `wildcard` must be set to `true` to avoid the provider reporting a difference.
     */
    wildcard?: pulumi.Input<boolean>;
}

export interface PermissionsTableWithColumns {
    /**
     * Identifier for the Data Catalog. By default, it is the account ID of the caller.
     */
    catalogId?: pulumi.Input<string>;
    /**
     * Set of column names for the table.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the database for the table with columns resource. Unique to the Data Catalog.
     */
    databaseName: pulumi.Input<string>;
    /**
     * Set of column names for the table to exclude. If `excludedColumnNames` is included, `wildcard` must be set to `true` to avoid the provider reporting a difference.
     */
    excludedColumnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the table resource.
     */
    name: pulumi.Input<string>;
    /**
     * Whether to use a column wildcard. If `excludedColumnNames` is included, `wildcard` must be set to `true` to avoid the provider reporting a difference.
     */
    wildcard?: pulumi.Input<boolean>;
}

export interface ResourceLfTagsDatabase {
    /**
     * Identifier for the Data Catalog. By default, it is the account ID of the caller.
     */
    catalogId?: pulumi.Input<string>;
    /**
     * Name of the table resource.
     */
    name: pulumi.Input<string>;
}

export interface ResourceLfTagsLfTag {
    /**
     * Identifier for the Data Catalog. By default, it is the account ID of the caller.
     */
    catalogId?: pulumi.Input<string>;
    /**
     * Key name for an existing LF-tag.
     */
    key: pulumi.Input<string>;
    /**
     * Value from the possible values for the LF-tag.
     */
    value: pulumi.Input<string>;
}

export interface ResourceLfTagsTable {
    /**
     * Identifier for the Data Catalog. By default, it is the account ID of the caller.
     */
    catalogId?: pulumi.Input<string>;
    /**
     * Name of the database for the table with columns resource. Unique to the Data Catalog.
     */
    databaseName: pulumi.Input<string>;
    /**
     * Name of the table resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Whether to use a column wildcard. If `excludedColumnNames` is included, `wildcard` must be set to `true` to avoid the provider reporting a difference.
     */
    wildcard?: pulumi.Input<boolean>;
}

export interface ResourceLfTagsTableWithColumns {
    /**
     * Identifier for the Data Catalog. By default, it is the account ID of the caller.
     */
    catalogId?: pulumi.Input<string>;
    /**
     * Set of column names for the table.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the database for the table with columns resource. Unique to the Data Catalog.
     */
    databaseName: pulumi.Input<string>;
    /**
     * Set of column names for the table to exclude. If `excludedColumnNames` is included, `wildcard` must be set to `true` to avoid the provider reporting a difference.
     */
    excludedColumnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the table resource.
     */
    name: pulumi.Input<string>;
    /**
     * Whether to use a column wildcard. If `excludedColumnNames` is included, `wildcard` must be set to `true` to avoid the provider reporting a difference.
     */
    wildcard?: pulumi.Input<boolean>;
}
