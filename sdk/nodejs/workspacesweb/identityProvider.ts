// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS WorkSpaces Web Identity Provider.
 *
 * ## Example Usage
 *
 * ### Basic Usage with SAML
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.workspacesweb.Portal("example", {displayName: "example"});
 * const exampleIdentityProvider = new aws.workspacesweb.IdentityProvider("example", {
 *     identityProviderName: "example-saml",
 *     identityProviderType: "SAML",
 *     portalArn: example.portalArn,
 *     identityProviderDetails: {
 *         MetadataURL: "https://example.com/metadata",
 *     },
 * });
 * ```
 *
 * ### OIDC Identity Provider
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.workspacesweb.Portal("test", {displayName: "test"});
 * const testIdentityProvider = new aws.workspacesweb.IdentityProvider("test", {
 *     identityProviderName: "test-updated",
 *     identityProviderType: "OIDC",
 *     portalArn: test.portalArn,
 *     identityProviderDetails: {
 *         client_id: "test-client-id",
 *         client_secret: "test-client-secret",
 *         oidc_issuer: "https://accounts.google.com",
 *         attributes_request_method: "POST",
 *         authorize_scopes: "openid, email",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import WorkSpaces Web Identity Provider using the `identity_provider_arn`. For example:
 *
 * ```sh
 * $ pulumi import aws:workspacesweb/identityProvider:IdentityProvider example arn:aws:workspaces-web:us-west-2:123456789012:identityprovider/abcdef12345678/12345678-1234-1234-1234-123456789012
 * ```
 */
export class IdentityProvider extends pulumi.CustomResource {
    /**
     * Get an existing IdentityProvider resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IdentityProviderState, opts?: pulumi.CustomResourceOptions): IdentityProvider {
        return new IdentityProvider(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:workspacesweb/identityProvider:IdentityProvider';

    /**
     * Returns true if the given object is an instance of IdentityProvider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IdentityProvider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IdentityProvider.__pulumiType;
    }

    /**
     * ARN of the identity provider.
     */
    public /*out*/ readonly identityProviderArn!: pulumi.Output<string>;
    /**
     * Identity provider details. The following list describes the provider detail keys for each identity provider type:
     * * For Google and Login with Amazon:
     */
    public readonly identityProviderDetails!: pulumi.Output<{[key: string]: string}>;
    /**
     * Identity provider name.
     */
    public readonly identityProviderName!: pulumi.Output<string>;
    /**
     * Identity provider type. Valid values: `SAML`, `Facebook`, `Google`, `LoginWithAmazon`, `SignInWithApple`, `OIDC`.
     */
    public readonly identityProviderType!: pulumi.Output<string>;
    /**
     * ARN of the web portal. Forces replacement if changed.
     *
     * The following arguments are optional:
     */
    public readonly portalArn!: pulumi.Output<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a IdentityProvider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IdentityProviderArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IdentityProviderArgs | IdentityProviderState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IdentityProviderState | undefined;
            resourceInputs["identityProviderArn"] = state ? state.identityProviderArn : undefined;
            resourceInputs["identityProviderDetails"] = state ? state.identityProviderDetails : undefined;
            resourceInputs["identityProviderName"] = state ? state.identityProviderName : undefined;
            resourceInputs["identityProviderType"] = state ? state.identityProviderType : undefined;
            resourceInputs["portalArn"] = state ? state.portalArn : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
        } else {
            const args = argsOrState as IdentityProviderArgs | undefined;
            if ((!args || args.identityProviderDetails === undefined) && !opts.urn) {
                throw new Error("Missing required property 'identityProviderDetails'");
            }
            if ((!args || args.identityProviderName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'identityProviderName'");
            }
            if ((!args || args.identityProviderType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'identityProviderType'");
            }
            if ((!args || args.portalArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'portalArn'");
            }
            resourceInputs["identityProviderDetails"] = args ? args.identityProviderDetails : undefined;
            resourceInputs["identityProviderName"] = args ? args.identityProviderName : undefined;
            resourceInputs["identityProviderType"] = args ? args.identityProviderType : undefined;
            resourceInputs["portalArn"] = args ? args.portalArn : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["identityProviderArn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IdentityProvider.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IdentityProvider resources.
 */
export interface IdentityProviderState {
    /**
     * ARN of the identity provider.
     */
    identityProviderArn?: pulumi.Input<string>;
    /**
     * Identity provider details. The following list describes the provider detail keys for each identity provider type:
     * * For Google and Login with Amazon:
     */
    identityProviderDetails?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Identity provider name.
     */
    identityProviderName?: pulumi.Input<string>;
    /**
     * Identity provider type. Valid values: `SAML`, `Facebook`, `Google`, `LoginWithAmazon`, `SignInWithApple`, `OIDC`.
     */
    identityProviderType?: pulumi.Input<string>;
    /**
     * ARN of the web portal. Forces replacement if changed.
     *
     * The following arguments are optional:
     */
    portalArn?: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a IdentityProvider resource.
 */
export interface IdentityProviderArgs {
    /**
     * Identity provider details. The following list describes the provider detail keys for each identity provider type:
     * * For Google and Login with Amazon:
     */
    identityProviderDetails: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Identity provider name.
     */
    identityProviderName: pulumi.Input<string>;
    /**
     * Identity provider type. Valid values: `SAML`, `Facebook`, `Google`, `LoginWithAmazon`, `SignInWithApple`, `OIDC`.
     */
    identityProviderType: pulumi.Input<string>;
    /**
     * ARN of the web portal. Forces replacement if changed.
     *
     * The following arguments are optional:
     */
    portalArn: pulumi.Input<string>;
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     */
    region?: pulumi.Input<string>;
    /**
     * Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
