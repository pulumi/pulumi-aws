// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS WorkSpaces Web IP Access Settings resource. Once associated with a web portal, IP access settings control which IP addresses users can connect from.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.workspacesweb.IpAccessSettings("example", {
 *     displayName: "example",
 *     ipRules: [{
 *         ipRange: "10.0.0.0/16",
 *     }],
 * });
 * ```
 *
 * ### With Multiple IP Rules
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.workspacesweb.IpAccessSettings("example", {
 *     displayName: "example",
 *     description: "Example IP access settings",
 *     ipRules: [
 *         {
 *             ipRange: "10.0.0.0/16",
 *             description: "Main office",
 *         },
 *         {
 *             ipRange: "192.168.0.0/24",
 *             description: "Branch office",
 *         },
 *     ],
 * });
 * ```
 *
 * ### With All Arguments
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.kms.Key("example", {
 *     description: "KMS key for WorkSpaces Web IP Access Settings",
 *     deletionWindowInDays: 7,
 * });
 * const exampleIpAccessSettings = new aws.workspacesweb.IpAccessSettings("example", {
 *     displayName: "example",
 *     description: "Example IP access settings",
 *     customerManagedKey: example.arn,
 *     additionalEncryptionContext: {
 *         Environment: "Production",
 *     },
 *     ipRules: [
 *         {
 *             ipRange: "10.0.0.0/16",
 *             description: "Main office",
 *         },
 *         {
 *             ipRange: "192.168.0.0/24",
 *             description: "Branch office",
 *         },
 *     ],
 *     tags: {
 *         Name: "example-ip-access-settings",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import WorkSpaces Web IP Access Settings using the `ip_access_settings_arn`. For example:
 *
 * ```sh
 * $ pulumi import aws:workspacesweb/ipAccessSettings:IpAccessSettings example arn:aws:workspaces-web:us-west-2:123456789012:ipAccessSettings/abcdef12345
 * ```
 */
export class IpAccessSettings extends pulumi.CustomResource {
    /**
     * Get an existing IpAccessSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IpAccessSettingsState, opts?: pulumi.CustomResourceOptions): IpAccessSettings {
        return new IpAccessSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:workspacesweb/ipAccessSettings:IpAccessSettings';

    /**
     * Returns true if the given object is an instance of IpAccessSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IpAccessSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IpAccessSettings.__pulumiType;
    }

    /**
     * Additional encryption context for the IP access settings.
     */
    public readonly additionalEncryptionContext!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * List of web portal ARNs that this IP access settings resource is associated with.
     */
    public /*out*/ readonly associatedPortalArns!: pulumi.Output<string[]>;
    /**
     * ARN of the customer managed KMS key.
     */
    public readonly customerManagedKey!: pulumi.Output<string | undefined>;
    /**
     * The description of the IP access settings.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The display name of the IP access settings.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * ARN of the IP access settings resource.
     */
    public /*out*/ readonly ipAccessSettingsArn!: pulumi.Output<string>;
    /**
     * The IP rules of the IP access settings. See IP Rule below.
     *
     * The following arguments are optional:
     */
    public readonly ipRules!: pulumi.Output<outputs.workspacesweb.IpAccessSettingsIpRule[] | undefined>;
    /**
     * Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     *
     * @deprecated Please use `tags` instead.
     */
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a IpAccessSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IpAccessSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IpAccessSettingsArgs | IpAccessSettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IpAccessSettingsState | undefined;
            resourceInputs["additionalEncryptionContext"] = state ? state.additionalEncryptionContext : undefined;
            resourceInputs["associatedPortalArns"] = state ? state.associatedPortalArns : undefined;
            resourceInputs["customerManagedKey"] = state ? state.customerManagedKey : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["ipAccessSettingsArn"] = state ? state.ipAccessSettingsArn : undefined;
            resourceInputs["ipRules"] = state ? state.ipRules : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
        } else {
            const args = argsOrState as IpAccessSettingsArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            resourceInputs["additionalEncryptionContext"] = args ? args.additionalEncryptionContext : undefined;
            resourceInputs["customerManagedKey"] = args ? args.customerManagedKey : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["ipRules"] = args ? args.ipRules : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["associatedPortalArns"] = undefined /*out*/;
            resourceInputs["ipAccessSettingsArn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "aws:workspaces/webIpAccessSettings:WebIpAccessSettings" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(IpAccessSettings.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IpAccessSettings resources.
 */
export interface IpAccessSettingsState {
    /**
     * Additional encryption context for the IP access settings.
     */
    additionalEncryptionContext?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * List of web portal ARNs that this IP access settings resource is associated with.
     */
    associatedPortalArns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * ARN of the customer managed KMS key.
     */
    customerManagedKey?: pulumi.Input<string>;
    /**
     * The description of the IP access settings.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of the IP access settings.
     */
    displayName?: pulumi.Input<string>;
    /**
     * ARN of the IP access settings resource.
     */
    ipAccessSettingsArn?: pulumi.Input<string>;
    /**
     * The IP rules of the IP access settings. See IP Rule below.
     *
     * The following arguments are optional:
     */
    ipRules?: pulumi.Input<pulumi.Input<inputs.workspacesweb.IpAccessSettingsIpRule>[]>;
    /**
     * Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     *
     * @deprecated Please use `tags` instead.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a IpAccessSettings resource.
 */
export interface IpAccessSettingsArgs {
    /**
     * Additional encryption context for the IP access settings.
     */
    additionalEncryptionContext?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * ARN of the customer managed KMS key.
     */
    customerManagedKey?: pulumi.Input<string>;
    /**
     * The description of the IP access settings.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of the IP access settings.
     */
    displayName: pulumi.Input<string>;
    /**
     * The IP rules of the IP access settings. See IP Rule below.
     *
     * The following arguments are optional:
     */
    ipRules?: pulumi.Input<pulumi.Input<inputs.workspacesweb.IpAccessSettingsIpRule>[]>;
    /**
     * Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
