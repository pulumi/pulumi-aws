// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides an Athena Named Query data source.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.athena.getNamedQuery({
 *     name: "athenaQueryName",
 * });
 * ```
 */
export function getNamedQuery(args: GetNamedQueryArgs, opts?: pulumi.InvokeOptions): Promise<GetNamedQueryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:athena/getNamedQuery:getNamedQuery", {
        "name": args.name,
        "workgroup": args.workgroup,
    }, opts);
}

/**
 * A collection of arguments for invoking getNamedQuery.
 */
export interface GetNamedQueryArgs {
    /**
     * The plain language name for the query. Maximum length of 128.
     */
    name: string;
    /**
     * The workgroup to which the query belongs. Defaults to `primary`.
     */
    workgroup?: string;
}

/**
 * A collection of values returned by getNamedQuery.
 */
export interface GetNamedQueryResult {
    /**
     * Database to which the query belongs.
     */
    readonly database: string;
    /**
     * Brief explanation of the query.
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly querystring: string;
    readonly workgroup?: string;
}
/**
 * Provides an Athena Named Query data source.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.athena.getNamedQuery({
 *     name: "athenaQueryName",
 * });
 * ```
 */
export function getNamedQueryOutput(args: GetNamedQueryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNamedQueryResult> {
    return pulumi.output(args).apply((a: any) => getNamedQuery(a, opts))
}

/**
 * A collection of arguments for invoking getNamedQuery.
 */
export interface GetNamedQueryOutputArgs {
    /**
     * The plain language name for the query. Maximum length of 128.
     */
    name: pulumi.Input<string>;
    /**
     * The workgroup to which the query belongs. Defaults to `primary`.
     */
    workgroup?: pulumi.Input<string>;
}
