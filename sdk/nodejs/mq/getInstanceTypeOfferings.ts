// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Provides information about a MQ Broker Instance Offerings.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const empty = pulumi.output(aws.mq.getInstanceTypeOfferings());
 * const engine = pulumi.output(aws.mq.getInstanceTypeOfferings({
 *     engineType: "ACTIVEMQ",
 * }));
 * const storage = pulumi.output(aws.mq.getInstanceTypeOfferings({
 *     storageType: "EBS",
 * }));
 * const instance = pulumi.output(aws.mq.getInstanceTypeOfferings({
 *     hostInstanceType: "mq.m5.large",
 * }));
 * const all = pulumi.output(aws.mq.getInstanceTypeOfferings({
 *     engineType: "ACTIVEMQ",
 *     hostInstanceType: "mq.m5.large",
 *     storageType: "EBS",
 * }));
 * ```
 */
export function getInstanceTypeOfferings(args?: GetInstanceTypeOfferingsArgs, opts?: pulumi.InvokeOptions): Promise<GetInstanceTypeOfferingsResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws:mq/getInstanceTypeOfferings:getInstanceTypeOfferings", {
        "engineType": args.engineType,
        "hostInstanceType": args.hostInstanceType,
        "storageType": args.storageType,
    }, opts);
}

/**
 * A collection of arguments for invoking getInstanceTypeOfferings.
 */
export interface GetInstanceTypeOfferingsArgs {
    /**
     * Filter response by engine type.
     */
    engineType?: string;
    /**
     * Filter response by host instance type.
     */
    hostInstanceType?: string;
    /**
     * Filter response by storage type.
     */
    storageType?: string;
}

/**
 * A collection of values returned by getInstanceTypeOfferings.
 */
export interface GetInstanceTypeOfferingsResult {
    /**
     * Option for host instance type. See Broker Instance Options below.
     */
    readonly brokerInstanceOptions: outputs.mq.GetInstanceTypeOfferingsBrokerInstanceOption[];
    /**
     * Broker's engine type.
     */
    readonly engineType?: string;
    /**
     * Broker's instance type.
     */
    readonly hostInstanceType?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Broker's storage type.
     */
    readonly storageType?: string;
}

export function getInstanceTypeOfferingsOutput(args?: GetInstanceTypeOfferingsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInstanceTypeOfferingsResult> {
    return pulumi.output(args).apply(a => getInstanceTypeOfferings(a, opts))
}

/**
 * A collection of arguments for invoking getInstanceTypeOfferings.
 */
export interface GetInstanceTypeOfferingsOutputArgs {
    /**
     * Filter response by engine type.
     */
    engineType?: pulumi.Input<string>;
    /**
     * Filter response by host instance type.
     */
    hostInstanceType?: pulumi.Input<string>;
    /**
     * Filter response by storage type.
     */
    storageType?: pulumi.Input<string>;
}
