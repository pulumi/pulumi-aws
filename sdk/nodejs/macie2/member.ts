// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class Member extends pulumi.CustomResource {
    /**
     * Get an existing Member resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MemberState, opts?: pulumi.CustomResourceOptions): Member {
        return new Member(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:macie2/member:Member';

    /**
     * Returns true if the given object is an instance of Member.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Member {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Member.__pulumiType;
    }

    public readonly accountId!: pulumi.Output<string>;
    public /*out*/ readonly administratorAccountId!: pulumi.Output<string>;
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly email!: pulumi.Output<string>;
    public readonly invitationDisableEmailNotification!: pulumi.Output<boolean | undefined>;
    public readonly invitationMessage!: pulumi.Output<string | undefined>;
    public readonly invite!: pulumi.Output<boolean>;
    public /*out*/ readonly invitedAt!: pulumi.Output<string>;
    public /*out*/ readonly masterAccountId!: pulumi.Output<string>;
    public /*out*/ readonly relationshipStatus!: pulumi.Output<string>;
    public readonly status!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a Member resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MemberArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MemberArgs | MemberState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MemberState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["administratorAccountId"] = state ? state.administratorAccountId : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["email"] = state ? state.email : undefined;
            resourceInputs["invitationDisableEmailNotification"] = state ? state.invitationDisableEmailNotification : undefined;
            resourceInputs["invitationMessage"] = state ? state.invitationMessage : undefined;
            resourceInputs["invite"] = state ? state.invite : undefined;
            resourceInputs["invitedAt"] = state ? state.invitedAt : undefined;
            resourceInputs["masterAccountId"] = state ? state.masterAccountId : undefined;
            resourceInputs["relationshipStatus"] = state ? state.relationshipStatus : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as MemberArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.email === undefined) && !opts.urn) {
                throw new Error("Missing required property 'email'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["email"] = args ? args.email : undefined;
            resourceInputs["invitationDisableEmailNotification"] = args ? args.invitationDisableEmailNotification : undefined;
            resourceInputs["invitationMessage"] = args ? args.invitationMessage : undefined;
            resourceInputs["invite"] = args ? args.invite : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["administratorAccountId"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["invitedAt"] = undefined /*out*/;
            resourceInputs["masterAccountId"] = undefined /*out*/;
            resourceInputs["relationshipStatus"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Member.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Member resources.
 */
export interface MemberState {
    accountId?: pulumi.Input<string>;
    administratorAccountId?: pulumi.Input<string>;
    arn?: pulumi.Input<string>;
    email?: pulumi.Input<string>;
    invitationDisableEmailNotification?: pulumi.Input<boolean>;
    invitationMessage?: pulumi.Input<string>;
    invite?: pulumi.Input<boolean>;
    invitedAt?: pulumi.Input<string>;
    masterAccountId?: pulumi.Input<string>;
    relationshipStatus?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Member resource.
 */
export interface MemberArgs {
    accountId: pulumi.Input<string>;
    email: pulumi.Input<string>;
    invitationDisableEmailNotification?: pulumi.Input<boolean>;
    invitationMessage?: pulumi.Input<string>;
    invite?: pulumi.Input<boolean>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
