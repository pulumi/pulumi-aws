// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./input";
import * as outputs from "./output";

export interface ClassificationExportConfigurationS3Destination {
    /**
     * The Amazon S3 bucket name in which Amazon Macie exports the data classification results.
     */
    bucketName: string;
    /**
     * The object key for the bucket in which Amazon Macie exports the data classification results.
     */
    keyPrefix?: string;
    /**
     * Amazon Resource Name (ARN) of the KMS key to be used to encrypt the data.
     *
     * Additional information can be found in the [Storing and retaining sensitive data discovery results with Amazon Macie for AWS Macie documentation](https://docs.aws.amazon.com/macie/latest/user/discovery-results-repository-s3.html).
     */
    kmsKeyArn: string;
}
export interface ClassificationJobS3JobDefinition {
    /**
     * The property- and tag-based conditions that determine which S3 buckets to include or exclude from the analysis. Conflicts with `bucketDefinitions`. (documented below)
     */
    bucketCriteria: outputs.ClassificationJobS3JobDefinitionBucketCriteria;
    /**
     * An array of objects, one for each AWS account that owns buckets to analyze. Each object specifies the account ID for an account and one or more buckets to analyze for the account. Conflicts with `bucketCriteria`. (documented below)
     */
    bucketDefinitions?: outputs.ClassificationJobS3JobDefinitionBucketDefinition[];
    /**
     * The property- and tag-based conditions that determine which objects to include or exclude from the analysis. (documented below)
     */
    scoping: outputs.ClassificationJobS3JobDefinitionScoping;
}
export interface ClassificationJobS3JobDefinitionBucketCriteria {
    /**
     * The property- or tag-based conditions that determine which S3 buckets to exclude from the analysis. (documented below)
     */
    excludes: outputs.ClassificationJobS3JobDefinitionBucketCriteriaExcludes;
    /**
     * The property- or tag-based conditions that determine which S3 buckets to include in the analysis. (documented below)
     */
    includes: outputs.ClassificationJobS3JobDefinitionBucketCriteriaIncludes;
}
export interface ClassificationJobS3JobDefinitionBucketCriteriaExcludes {
    /**
     * An array of conditions, one for each condition that determines which objects to include or exclude from the job. (documented below)
     */
    ands: outputs.ClassificationJobS3JobDefinitionBucketCriteriaExcludesAnd[];
}
export interface ClassificationJobS3JobDefinitionBucketCriteriaExcludesAnd {
    /**
     * A property-based condition that defines a property, operator, and one or more values for including or excluding an S3 buckets from the job. (documented below)
     */
    simpleCriterion: outputs.ClassificationJobS3JobDefinitionBucketCriteriaExcludesAndSimpleCriterion;
    /**
     * A tag-based condition that defines the operator and tag keys or tag key and value pairs for including or excluding an S3 buckets from the job. (documented below)
     */
    tagCriterion: outputs.ClassificationJobS3JobDefinitionBucketCriteriaExcludesAndTagCriterion;
}
export interface ClassificationJobS3JobDefinitionBucketCriteriaExcludesAndSimpleCriterion {
    /**
     * The operator to use in a condition. Valid combination of values are available in the [AWS Documentation](https://docs.aws.amazon.com/macie/latest/APIReference/jobs.html#jobs-model-jobcomparator)
     */
    comparator: string;
    /**
     * The object property to use in the condition. Valid combination of values are available in the [AWS Documentation](https://docs.aws.amazon.com/macie/latest/APIReference/jobs.html#jobs-model-simplecriterionkeyforjob)
     */
    key: string;
    /**
     * An array that lists the values to use in the condition. Valid combination of values are available in the [AWS Documentation](https://docs.aws.amazon.com/macie/latest/APIReference/jobs.html#jobs-model-simplecriterionforjob)
     */
    values: string[];
}
export interface ClassificationJobS3JobDefinitionBucketCriteriaExcludesAndTagCriterion {
    /**
     * The operator to use in the condition. Valid combination and values are available in the [AWS Documentation](https://docs.aws.amazon.com/macie/latest/APIReference/jobs.html#jobs-model-jobcomparator)
     */
    comparator: string;
    /**
     * The  tag key and value pairs to use in the condition. One or more blocks are allowed. (documented below)
     */
    tagValues?: outputs.ClassificationJobS3JobDefinitionBucketCriteriaExcludesAndTagCriterionTagValue[];
}
export interface ClassificationJobS3JobDefinitionBucketCriteriaExcludesAndTagCriterionTagValue {
    /**
     * The tag key.
     */
    key: string;
    /**
     * The tag value.
     */
    value: string;
}
export interface ClassificationJobS3JobDefinitionBucketCriteriaIncludes {
    /**
     * An array of conditions, one for each condition that determines which objects to include or exclude from the job. (documented below)
     */
    ands: outputs.ClassificationJobS3JobDefinitionBucketCriteriaIncludesAnd[];
}
export interface ClassificationJobS3JobDefinitionBucketCriteriaIncludesAnd {
    /**
     * A property-based condition that defines a property, operator, and one or more values for including or excluding an S3 buckets from the job. (documented below)
     */
    simpleCriterion: outputs.ClassificationJobS3JobDefinitionBucketCriteriaIncludesAndSimpleCriterion;
    /**
     * A tag-based condition that defines the operator and tag keys or tag key and value pairs for including or excluding an S3 buckets from the job. (documented below)
     */
    tagCriterion: outputs.ClassificationJobS3JobDefinitionBucketCriteriaIncludesAndTagCriterion;
}
export interface ClassificationJobS3JobDefinitionBucketCriteriaIncludesAndSimpleCriterion {
    /**
     * The operator to use in a condition. Valid combination of values are available in the [AWS Documentation](https://docs.aws.amazon.com/macie/latest/APIReference/jobs.html#jobs-model-jobcomparator)
     */
    comparator: string;
    /**
     * The object property to use in the condition. Valid combination of values are available in the [AWS Documentation](https://docs.aws.amazon.com/macie/latest/APIReference/jobs.html#jobs-model-simplecriterionkeyforjob)
     */
    key: string;
    /**
     * An array that lists the values to use in the condition. Valid combination of values are available in the [AWS Documentation](https://docs.aws.amazon.com/macie/latest/APIReference/jobs.html#jobs-model-simplecriterionforjob)
     */
    values: string[];
}
export interface ClassificationJobS3JobDefinitionBucketCriteriaIncludesAndTagCriterion {
    /**
     * The operator to use in the condition. Valid combination and values are available in the [AWS Documentation](https://docs.aws.amazon.com/macie/latest/APIReference/jobs.html#jobs-model-jobcomparator)
     */
    comparator: string;
    /**
     * The  tag key and value pairs to use in the condition. One or more blocks are allowed. (documented below)
     */
    tagValues?: outputs.ClassificationJobS3JobDefinitionBucketCriteriaIncludesAndTagCriterionTagValue[];
}
export interface ClassificationJobS3JobDefinitionBucketCriteriaIncludesAndTagCriterionTagValue {
    /**
     * The tag key.
     */
    key: string;
    /**
     * The tag value.
     */
    value: string;
}
export interface ClassificationJobS3JobDefinitionBucketDefinition {
    /**
     * The unique identifier for the AWS account that owns the buckets.
     */
    accountId: string;
    /**
     * An array that lists the names of the buckets.
     */
    buckets: string[];
}
export interface ClassificationJobS3JobDefinitionScoping {
    /**
     * The property- or tag-based conditions that determine which objects to exclude from the analysis. (documented below)
     */
    excludes: outputs.ClassificationJobS3JobDefinitionScopingExcludes;
    /**
     * The property- or tag-based conditions that determine which objects to include in the analysis. (documented below)
     */
    includes: outputs.ClassificationJobS3JobDefinitionScopingIncludes;
}
export interface ClassificationJobS3JobDefinitionScopingExcludes {
    /**
     * An array of conditions, one for each condition that determines which objects to include or exclude from the job. (documented below)
     */
    ands: outputs.ClassificationJobS3JobDefinitionScopingExcludesAnd[];
}
export interface ClassificationJobS3JobDefinitionScopingExcludesAnd {
    /**
     * A property-based condition that defines a property, operator, and one or more values for including or excluding an object from the job. (documented below)
     */
    simpleScopeTerm: outputs.ClassificationJobS3JobDefinitionScopingExcludesAndSimpleScopeTerm;
    /**
     * A tag-based condition that defines the operator and tag keys or tag key and value pairs for including or excluding an object from the job. (documented below)
     */
    tagScopeTerm: outputs.ClassificationJobS3JobDefinitionScopingExcludesAndTagScopeTerm;
}
export interface ClassificationJobS3JobDefinitionScopingExcludesAndSimpleScopeTerm {
    /**
     * The operator to use in a condition. Valid values are: `EQ`, `GT`, `GTE`, `LT`, `LTE`, `NE`, `CONTAINS`, `STARTS_WITH`
     */
    comparator: string;
    /**
     * The object property to use in the condition.
     */
    key: string;
    /**
     * An array that lists the values to use in the condition.
     */
    values: string[];
}
export interface ClassificationJobS3JobDefinitionScopingExcludesAndTagScopeTerm {
    /**
     * The operator to use in the condition.
     */
    comparator: string;
    /**
     * The tag key to use in the condition. The only valid value is `TAG`.
     */
    key: string;
    /**
     * The tag keys or tag key and value pairs to use in the condition.
     */
    tagValues: outputs.ClassificationJobS3JobDefinitionScopingExcludesAndTagScopeTermTagValue[];
    /**
     * The type of object to apply the condition to. The only valid value is `S3_OBJECT`.
     */
    target: string;
}
export interface ClassificationJobS3JobDefinitionScopingExcludesAndTagScopeTermTagValue {
    /**
     * The tag key.
     */
    key: string;
    /**
     * The tag value.
     */
    value: string;
}
export interface ClassificationJobS3JobDefinitionScopingIncludes {
    /**
     * An array of conditions, one for each condition that determines which objects to include or exclude from the job. (documented below)
     */
    ands: outputs.ClassificationJobS3JobDefinitionScopingIncludesAnd[];
}
export interface ClassificationJobS3JobDefinitionScopingIncludesAnd {
    /**
     * A property-based condition that defines a property, operator, and one or more values for including or excluding an object from the job. (documented below)
     */
    simpleScopeTerm: outputs.ClassificationJobS3JobDefinitionScopingIncludesAndSimpleScopeTerm;
    /**
     * A tag-based condition that defines the operator and tag keys or tag key and value pairs for including or excluding an object from the job. (documented below)
     */
    tagScopeTerm: outputs.ClassificationJobS3JobDefinitionScopingIncludesAndTagScopeTerm;
}
export interface ClassificationJobS3JobDefinitionScopingIncludesAndSimpleScopeTerm {
    /**
     * The operator to use in a condition. Valid values are: `EQ`, `GT`, `GTE`, `LT`, `LTE`, `NE`, `CONTAINS`, `STARTS_WITH`
     */
    comparator: string;
    /**
     * The object property to use in the condition.
     */
    key: string;
    /**
     * An array that lists the values to use in the condition.
     */
    values: string[];
}
export interface ClassificationJobS3JobDefinitionScopingIncludesAndTagScopeTerm {
    /**
     * The operator to use in the condition.
     */
    comparator: string;
    /**
     * The tag key to use in the condition. The only valid value is `TAG`.
     */
    key: string;
    /**
     * The tag keys or tag key and value pairs to use in the condition.
     */
    tagValues?: outputs.ClassificationJobS3JobDefinitionScopingIncludesAndTagScopeTermTagValue[];
    /**
     * The type of object to apply the condition to. The only valid value is `S3_OBJECT`.
     */
    target: string;
}
export interface ClassificationJobS3JobDefinitionScopingIncludesAndTagScopeTermTagValue {
    /**
     * The tag key.
     */
    key: string;
    /**
     * The tag value.
     */
    value: string;
}
export interface ClassificationJobScheduleFrequency {
    /**
     * Specifies a daily recurrence pattern for running the job.
     */
    dailySchedule?: boolean;
    /**
     * Specifies a monthly recurrence pattern for running the job.
     */
    monthlySchedule: number;
    /**
     * Specifies a weekly recurrence pattern for running the job.
     */
    weeklySchedule: string;
}
export interface ClassificationJobUserPausedDetail {
    jobExpiresAt: string;
    jobImminentExpirationHealthEventArn: string;
    jobPausedAt: string;
}
