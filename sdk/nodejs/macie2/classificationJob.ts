// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export class ClassificationJob extends pulumi.CustomResource {
    /**
     * Get an existing ClassificationJob resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClassificationJobState, opts?: pulumi.CustomResourceOptions): ClassificationJob {
        return new ClassificationJob(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:macie2/classificationJob:ClassificationJob';

    /**
     * Returns true if the given object is an instance of ClassificationJob.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ClassificationJob {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ClassificationJob.__pulumiType;
    }

    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    public readonly customDataIdentifierIds!: pulumi.Output<string[]>;
    public readonly description!: pulumi.Output<string>;
    public readonly initialRun!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly jobArn!: pulumi.Output<string>;
    public /*out*/ readonly jobId!: pulumi.Output<string>;
    public readonly jobStatus!: pulumi.Output<string>;
    public readonly jobType!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly namePrefix!: pulumi.Output<string>;
    public readonly s3JobDefinition!: pulumi.Output<outputs.macie2.ClassificationJobS3JobDefinition>;
    public readonly samplingPercentage!: pulumi.Output<number>;
    public readonly scheduleFrequency!: pulumi.Output<outputs.macie2.ClassificationJobScheduleFrequency>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly userPausedDetails!: pulumi.Output<outputs.macie2.ClassificationJobUserPausedDetail[]>;

    /**
     * Create a ClassificationJob resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClassificationJobArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClassificationJobArgs | ClassificationJobState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClassificationJobState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["customDataIdentifierIds"] = state ? state.customDataIdentifierIds : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["initialRun"] = state ? state.initialRun : undefined;
            resourceInputs["jobArn"] = state ? state.jobArn : undefined;
            resourceInputs["jobId"] = state ? state.jobId : undefined;
            resourceInputs["jobStatus"] = state ? state.jobStatus : undefined;
            resourceInputs["jobType"] = state ? state.jobType : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namePrefix"] = state ? state.namePrefix : undefined;
            resourceInputs["s3JobDefinition"] = state ? state.s3JobDefinition : undefined;
            resourceInputs["samplingPercentage"] = state ? state.samplingPercentage : undefined;
            resourceInputs["scheduleFrequency"] = state ? state.scheduleFrequency : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["userPausedDetails"] = state ? state.userPausedDetails : undefined;
        } else {
            const args = argsOrState as ClassificationJobArgs | undefined;
            if ((!args || args.jobType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'jobType'");
            }
            if ((!args || args.s3JobDefinition === undefined) && !opts.urn) {
                throw new Error("Missing required property 's3JobDefinition'");
            }
            resourceInputs["customDataIdentifierIds"] = args ? args.customDataIdentifierIds : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["initialRun"] = args ? args.initialRun : undefined;
            resourceInputs["jobStatus"] = args ? args.jobStatus : undefined;
            resourceInputs["jobType"] = args ? args.jobType : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namePrefix"] = args ? args.namePrefix : undefined;
            resourceInputs["s3JobDefinition"] = args ? args.s3JobDefinition : undefined;
            resourceInputs["samplingPercentage"] = args ? args.samplingPercentage : undefined;
            resourceInputs["scheduleFrequency"] = args ? args.scheduleFrequency : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["jobArn"] = undefined /*out*/;
            resourceInputs["jobId"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
            resourceInputs["userPausedDetails"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ClassificationJob.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ClassificationJob resources.
 */
export interface ClassificationJobState {
    createdAt?: pulumi.Input<string>;
    customDataIdentifierIds?: pulumi.Input<pulumi.Input<string>[]>;
    description?: pulumi.Input<string>;
    initialRun?: pulumi.Input<boolean>;
    jobArn?: pulumi.Input<string>;
    jobId?: pulumi.Input<string>;
    jobStatus?: pulumi.Input<string>;
    jobType?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    namePrefix?: pulumi.Input<string>;
    s3JobDefinition?: pulumi.Input<inputs.macie2.ClassificationJobS3JobDefinition>;
    samplingPercentage?: pulumi.Input<number>;
    scheduleFrequency?: pulumi.Input<inputs.macie2.ClassificationJobScheduleFrequency>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    userPausedDetails?: pulumi.Input<pulumi.Input<inputs.macie2.ClassificationJobUserPausedDetail>[]>;
}

/**
 * The set of arguments for constructing a ClassificationJob resource.
 */
export interface ClassificationJobArgs {
    customDataIdentifierIds?: pulumi.Input<pulumi.Input<string>[]>;
    description?: pulumi.Input<string>;
    initialRun?: pulumi.Input<boolean>;
    jobStatus?: pulumi.Input<string>;
    jobType: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    namePrefix?: pulumi.Input<string>;
    s3JobDefinition: pulumi.Input<inputs.macie2.ClassificationJobS3JobDefinition>;
    samplingPercentage?: pulumi.Input<number>;
    scheduleFrequency?: pulumi.Input<inputs.macie2.ClassificationJobScheduleFrequency>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
