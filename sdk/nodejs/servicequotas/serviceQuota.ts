// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class ServiceQuota extends pulumi.CustomResource {
    /**
     * Get an existing ServiceQuota resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceQuotaState, opts?: pulumi.CustomResourceOptions): ServiceQuota {
        return new ServiceQuota(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:servicequotas/serviceQuota:ServiceQuota';

    /**
     * Returns true if the given object is an instance of ServiceQuota.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceQuota {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceQuota.__pulumiType;
    }

    public /*out*/ readonly adjustable!: pulumi.Output<boolean>;
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public /*out*/ readonly defaultValue!: pulumi.Output<number>;
    public readonly quotaCode!: pulumi.Output<string>;
    public /*out*/ readonly quotaName!: pulumi.Output<string>;
    public /*out*/ readonly requestId!: pulumi.Output<string>;
    public /*out*/ readonly requestStatus!: pulumi.Output<string>;
    public readonly serviceCode!: pulumi.Output<string>;
    public /*out*/ readonly serviceName!: pulumi.Output<string>;
    public readonly value!: pulumi.Output<number>;

    /**
     * Create a ServiceQuota resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceQuotaArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceQuotaArgs | ServiceQuotaState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceQuotaState | undefined;
            resourceInputs["adjustable"] = state ? state.adjustable : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["defaultValue"] = state ? state.defaultValue : undefined;
            resourceInputs["quotaCode"] = state ? state.quotaCode : undefined;
            resourceInputs["quotaName"] = state ? state.quotaName : undefined;
            resourceInputs["requestId"] = state ? state.requestId : undefined;
            resourceInputs["requestStatus"] = state ? state.requestStatus : undefined;
            resourceInputs["serviceCode"] = state ? state.serviceCode : undefined;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
            resourceInputs["value"] = state ? state.value : undefined;
        } else {
            const args = argsOrState as ServiceQuotaArgs | undefined;
            if ((!args || args.quotaCode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'quotaCode'");
            }
            if ((!args || args.serviceCode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceCode'");
            }
            if ((!args || args.value === undefined) && !opts.urn) {
                throw new Error("Missing required property 'value'");
            }
            resourceInputs["quotaCode"] = args ? args.quotaCode : undefined;
            resourceInputs["serviceCode"] = args ? args.serviceCode : undefined;
            resourceInputs["value"] = args ? args.value : undefined;
            resourceInputs["adjustable"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["defaultValue"] = undefined /*out*/;
            resourceInputs["quotaName"] = undefined /*out*/;
            resourceInputs["requestId"] = undefined /*out*/;
            resourceInputs["requestStatus"] = undefined /*out*/;
            resourceInputs["serviceName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServiceQuota.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServiceQuota resources.
 */
export interface ServiceQuotaState {
    adjustable?: pulumi.Input<boolean>;
    arn?: pulumi.Input<string>;
    defaultValue?: pulumi.Input<number>;
    quotaCode?: pulumi.Input<string>;
    quotaName?: pulumi.Input<string>;
    requestId?: pulumi.Input<string>;
    requestStatus?: pulumi.Input<string>;
    serviceCode?: pulumi.Input<string>;
    serviceName?: pulumi.Input<string>;
    value?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ServiceQuota resource.
 */
export interface ServiceQuotaArgs {
    quotaCode: pulumi.Input<string>;
    serviceCode: pulumi.Input<string>;
    value: pulumi.Input<number>;
}
