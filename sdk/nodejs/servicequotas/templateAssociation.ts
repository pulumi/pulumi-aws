// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS Service Quotas Template Association.
 *
 * > Only the management account of an organization can associate Service Quota templates, and this must be done from the `us-east-1` region.
 *
 * ## Example Usage
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.servicequotas.TemplateAssociation("example", {});
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Service Quotas Template Association using the `id`. For example:
 *
 * ```sh
 *  $ pulumi import aws:servicequotas/templateAssociation:TemplateAssociation example 012345678901
 * ```
 */
export class TemplateAssociation extends pulumi.CustomResource {
    /**
     * Get an existing TemplateAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TemplateAssociationState, opts?: pulumi.CustomResourceOptions): TemplateAssociation {
        return new TemplateAssociation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:servicequotas/templateAssociation:TemplateAssociation';

    /**
     * Returns true if the given object is an instance of TemplateAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TemplateAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TemplateAssociation.__pulumiType;
    }

    public readonly skipDestroy!: pulumi.Output<boolean | undefined>;
    /**
     * Association status. Creating this resource will result in an `ASSOCIATED` status, and quota increase requests in the template are automatically applied to new AWS accounts in the organization.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a TemplateAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: TemplateAssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TemplateAssociationArgs | TemplateAssociationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TemplateAssociationState | undefined;
            resourceInputs["skipDestroy"] = state ? state.skipDestroy : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as TemplateAssociationArgs | undefined;
            resourceInputs["skipDestroy"] = args ? args.skipDestroy : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TemplateAssociation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TemplateAssociation resources.
 */
export interface TemplateAssociationState {
    skipDestroy?: pulumi.Input<boolean>;
    /**
     * Association status. Creating this resource will result in an `ASSOCIATED` status, and quota increase requests in the template are automatically applied to new AWS accounts in the organization.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TemplateAssociation resource.
 */
export interface TemplateAssociationArgs {
    skipDestroy?: pulumi.Input<boolean>;
}
