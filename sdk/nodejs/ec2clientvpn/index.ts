// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./authorizationRule";
export * from "./endpoint";
export * from "./networkAssociation";
export * from "./route";

// Import resources to register:
import { AuthorizationRule } from "./authorizationRule";
import { Endpoint } from "./endpoint";
import { NetworkAssociation } from "./networkAssociation";
import { Route } from "./route";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws:ec2clientvpn/authorizationRule:AuthorizationRule":
                return new AuthorizationRule(name, <any>undefined, { urn })
            case "aws:ec2clientvpn/endpoint:Endpoint":
                return new Endpoint(name, <any>undefined, { urn })
            case "aws:ec2clientvpn/networkAssociation:NetworkAssociation":
                return new NetworkAssociation(name, <any>undefined, { urn })
            case "aws:ec2clientvpn/route:Route":
                return new Route(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "ec2clientvpn/authorizationRule", _module)
pulumi.runtime.registerResourceModule("aws", "ec2clientvpn/endpoint", _module)
pulumi.runtime.registerResourceModule("aws", "ec2clientvpn/networkAssociation", _module)
pulumi.runtime.registerResourceModule("aws", "ec2clientvpn/route", _module)
