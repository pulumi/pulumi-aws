// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource for managing an AWS DevOps Guru Resource Collection.
 *
 * > Only one type of resource collection (All Account Resources, CloudFormation, or Tags) can be enabled in an account at a time. To avoid persistent differences, this resource should be defined only once.
 *
 * ## Example Usage
 *
 * ### All Account Resources
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.devopsguru.ResourceCollection("example", {
 *     type: "AWS_SERVICE",
 *     cloudformation: {
 *         stackNames: ["*"],
 *     },
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### CloudFormation Stacks
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.devopsguru.ResourceCollection("example", {
 *     type: "AWS_CLOUD_FORMATION",
 *     cloudformation: {
 *         stackNames: ["ExampleStack"],
 *     },
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Tags
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.devopsguru.ResourceCollection("example", {
 *     type: "AWS_TAGS",
 *     tags: {
 *         appBoundaryKey: "DevOps-Guru-Example",
 *         tagValues: ["Example-Value"],
 *     },
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Tags All Resources
 *
 * To analyze all resources with the `appBoundaryKey` regardless of the corresponding tag value, set `tagValues` to `["*"]`.
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.devopsguru.ResourceCollection("example", {
 *     type: "AWS_TAGS",
 *     tags: {
 *         appBoundaryKey: "DevOps-Guru-Example",
 *         tagValues: ["*"],
 *     },
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * Using `pulumi import`, import DevOps Guru Resource Collection using the `id`. For example:
 *
 * ```sh
 * $ pulumi import aws:devopsguru/resourceCollection:ResourceCollection example AWS_CLOUD_FORMATION
 * ```
 */
export class ResourceCollection extends pulumi.CustomResource {
    /**
     * Get an existing ResourceCollection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResourceCollectionState, opts?: pulumi.CustomResourceOptions): ResourceCollection {
        return new ResourceCollection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:devopsguru/resourceCollection:ResourceCollection';

    /**
     * Returns true if the given object is an instance of ResourceCollection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ResourceCollection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ResourceCollection.__pulumiType;
    }

    /**
     * A collection of AWS CloudFormation stacks. See `cloudformation` below for additional details.
     */
    public readonly cloudformation!: pulumi.Output<outputs.devopsguru.ResourceCollectionCloudformation | undefined>;
    /**
     * AWS tags used to filter the resources in the resource collection See `tags` below for additional details.
     */
    public readonly tags!: pulumi.Output<outputs.devopsguru.ResourceCollectionTags | undefined>;
    /**
     * Type of AWS resource collection to create. Valid values are `AWS_CLOUD_FORMATION`, `AWS_SERVICE`, and `AWS_TAGS`.
     *
     * The following arguments are optional:
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a ResourceCollection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResourceCollectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ResourceCollectionArgs | ResourceCollectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ResourceCollectionState | undefined;
            resourceInputs["cloudformation"] = state ? state.cloudformation : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as ResourceCollectionArgs | undefined;
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["cloudformation"] = args ? args.cloudformation : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ResourceCollection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ResourceCollection resources.
 */
export interface ResourceCollectionState {
    /**
     * A collection of AWS CloudFormation stacks. See `cloudformation` below for additional details.
     */
    cloudformation?: pulumi.Input<inputs.devopsguru.ResourceCollectionCloudformation>;
    /**
     * AWS tags used to filter the resources in the resource collection See `tags` below for additional details.
     */
    tags?: pulumi.Input<inputs.devopsguru.ResourceCollectionTags>;
    /**
     * Type of AWS resource collection to create. Valid values are `AWS_CLOUD_FORMATION`, `AWS_SERVICE`, and `AWS_TAGS`.
     *
     * The following arguments are optional:
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ResourceCollection resource.
 */
export interface ResourceCollectionArgs {
    /**
     * A collection of AWS CloudFormation stacks. See `cloudformation` below for additional details.
     */
    cloudformation?: pulumi.Input<inputs.devopsguru.ResourceCollectionCloudformation>;
    /**
     * AWS tags used to filter the resources in the resource collection See `tags` below for additional details.
     */
    tags?: pulumi.Input<inputs.devopsguru.ResourceCollectionTags>;
    /**
     * Type of AWS resource collection to create. Valid values are `AWS_CLOUD_FORMATION`, `AWS_SERVICE`, and `AWS_TAGS`.
     *
     * The following arguments are optional:
     */
    type: pulumi.Input<string>;
}
