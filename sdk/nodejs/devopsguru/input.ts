// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./input";
import * as outputs from "./output";

export interface EventSourcesConfigEventSource {
    /**
     * Stores whether DevOps Guru is configured to consume recommendations which are generated from AWS CodeGuru Profiler. See `amazonCodeGuruProfiler` below.
     */
    amazonCodeGuruProfilers?: pulumi.Input<pulumi.Input<inputs.EventSourcesConfigEventSourceAmazonCodeGuruProfiler>[]>;
}
export interface EventSourcesConfigEventSourceAmazonCodeGuruProfiler {
    /**
     * Status of the CodeGuru Profiler integration. Valid values are `ENABLED` and `DISABLED`.
     */
    status: pulumi.Input<string>;
}
export interface NotificationChannelFilters {
    /**
     * Events to receive notifications for. Valid values are `NEW_INSIGHT`, `CLOSED_INSIGHT`, `NEW_ASSOCIATION`, `SEVERITY_UPGRADED`, and `NEW_RECOMMENDATION`.
     */
    messageTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Severity levels to receive notifications for. Valid values are `LOW`, `MEDIUM`, and `HIGH`.
     */
    severities?: pulumi.Input<pulumi.Input<string>[]>;
}
export interface NotificationChannelSns {
    /**
     * Amazon Resource Name (ARN) of an Amazon Simple Notification Service topic.
     */
    topicArn: pulumi.Input<string>;
}
export interface ResourceCollectionCloudformation {
    /**
     * Array of the names of the AWS CloudFormation stacks. If `type` is `AWS_SERVICE` (all acccount resources) this array should be a single item containing a wildcard (`"*"`).
     */
    stackNames: pulumi.Input<pulumi.Input<string>[]>;
}
export interface ResourceCollectionTags {
    /**
     * An AWS tag key that is used to identify the AWS resources that DevOps Guru analyzes. All AWS resources in your account and Region tagged with this key make up your DevOps Guru application and analysis boundary. The key must begin with the prefix `DevOps-Guru-`. Any casing can be used for the prefix, but the associated tags __must use the same casing__ in their tag key.
     */
    appBoundaryKey: pulumi.Input<string>;
    /**
     * Array of tag values. These can be used to further filter for specific resources within the application boundary. To analyze all resources tagged with the `appBoundaryKey` regardless of the corresponding tag value, this array should be a single item containing a wildcard (`"*"`).
     */
    tagValues: pulumi.Input<pulumi.Input<string>[]>;
}
export interface ServiceIntegrationKmsServerSideEncryption {
    /**
     * KMS key ID. This value can be a key ID, key ARN, alias name, or alias ARN.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * Specifies whether KMS integration is enabled. Valid values are `DISABLED` and `ENABLED`.
     */
    optInStatus?: pulumi.Input<string>;
    /**
     * Type of KMS key used. Valid values are `CUSTOMER_MANAGED_KEY` and `AWS_OWNED_KMS_KEY`.
     */
    type?: pulumi.Input<string>;
}
export interface ServiceIntegrationLogsAnomalyDetection {
    /**
     * Specifies if DevOps Guru is configured to perform log anomaly detection on CloudWatch log groups. Valid values are `DISABLED` and `ENABLED`.
     */
    optInStatus?: pulumi.Input<string>;
}
export interface ServiceIntegrationOpsCenter {
    /**
     * Specifies if DevOps Guru is enabled to create an AWS Systems Manager OpsItem for each created insight. Valid values are `DISABLED` and `ENABLED`.
     */
    optInStatus?: pulumi.Input<string>;
}
export interface GetNotificationChannelFilter {
    /**
     * Events to receive notifications for.
     */
    messageTypes?: string[];
    /**
     * Severity levels to receive notifications for.
     */
    severities?: string[];
}
export interface GetNotificationChannelFilterArgs {
    /**
     * Events to receive notifications for.
     */
    messageTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Severity levels to receive notifications for.
     */
    severities?: pulumi.Input<pulumi.Input<string>[]>;
}
export interface GetNotificationChannelSn {
    /**
     * Amazon Resource Name (ARN) of an Amazon Simple Notification Service topic.
     */
    topicArn?: string;
}
export interface GetNotificationChannelSnArgs {
    /**
     * Amazon Resource Name (ARN) of an Amazon Simple Notification Service topic.
     */
    topicArn?: pulumi.Input<string>;
}
export interface GetResourceCollectionCloudformation {
    /**
     * Array of the names of the AWS CloudFormation stacks.
     */
    stackNames?: string[];
}
export interface GetResourceCollectionCloudformationArgs {
    /**
     * Array of the names of the AWS CloudFormation stacks.
     */
    stackNames?: pulumi.Input<pulumi.Input<string>[]>;
}
export interface GetResourceCollectionTag {
    /**
     * An AWS tag key that is used to identify the AWS resources that DevOps Guru analyzes.
     */
    appBoundaryKey?: string;
    /**
     * Array of tag values.
     */
    tagValues?: string[];
}
export interface GetResourceCollectionTagArgs {
    /**
     * An AWS tag key that is used to identify the AWS resources that DevOps Guru analyzes.
     */
    appBoundaryKey?: pulumi.Input<string>;
    /**
     * Array of tag values.
     */
    tagValues?: pulumi.Input<pulumi.Input<string>[]>;
}
