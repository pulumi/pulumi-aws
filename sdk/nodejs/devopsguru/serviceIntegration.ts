// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.devopsguru.ServiceIntegration("example", {
 *     kmsServerSideEncryption: {
 *         optInStatus: "ENABLED",
 *         type: "AWS_OWNED_KMS_KEY",
 *     },
 *     logsAnomalyDetection: {
 *         optInStatus: "ENABLED",
 *     },
 *     opsCenter: {
 *         optInStatus: "ENABLED",
 *     },
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Customer Managed KMS Key
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.kms.Key("example", {});
 * const exampleServiceIntegration = new aws.devopsguru.ServiceIntegration("example", {
 *     kmsServerSideEncryption: {
 *         kmsKeyId: test.arn,
 *         optInStatus: "ENABLED",
 *         type: "CUSTOMER_MANAGED_KEY",
 *     },
 *     logsAnomalyDetection: {
 *         optInStatus: "DISABLED",
 *     },
 *     opsCenter: {
 *         optInStatus: "DISABLED",
 *     },
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * Using `pulumi import`, import DevOps Guru Service Integration using the `id`. For example:
 *
 * ```sh
 * $ pulumi import aws:devopsguru/serviceIntegration:ServiceIntegration example us-east-1
 * ```
 */
export class ServiceIntegration extends pulumi.CustomResource {
    /**
     * Get an existing ServiceIntegration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceIntegrationState, opts?: pulumi.CustomResourceOptions): ServiceIntegration {
        return new ServiceIntegration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:devopsguru/serviceIntegration:ServiceIntegration';

    /**
     * Returns true if the given object is an instance of ServiceIntegration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceIntegration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceIntegration.__pulumiType;
    }

    /**
     * Information about whether DevOps Guru is configured to encrypt server-side data using KMS. See `kmsServerSideEncryption` below.
     */
    public readonly kmsServerSideEncryption!: pulumi.Output<outputs.devopsguru.ServiceIntegrationKmsServerSideEncryption | undefined>;
    /**
     * Information about whether DevOps Guru is configured to perform log anomaly detection on Amazon CloudWatch log groups. See `logsAnomalyDetection` below.
     */
    public readonly logsAnomalyDetection!: pulumi.Output<outputs.devopsguru.ServiceIntegrationLogsAnomalyDetection | undefined>;
    /**
     * Information about whether DevOps Guru is configured to create an OpsItem in AWS Systems Manager OpsCenter for each created insight. See `opsCenter` below.
     */
    public readonly opsCenter!: pulumi.Output<outputs.devopsguru.ServiceIntegrationOpsCenter | undefined>;

    /**
     * Create a ServiceIntegration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ServiceIntegrationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceIntegrationArgs | ServiceIntegrationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceIntegrationState | undefined;
            resourceInputs["kmsServerSideEncryption"] = state ? state.kmsServerSideEncryption : undefined;
            resourceInputs["logsAnomalyDetection"] = state ? state.logsAnomalyDetection : undefined;
            resourceInputs["opsCenter"] = state ? state.opsCenter : undefined;
        } else {
            const args = argsOrState as ServiceIntegrationArgs | undefined;
            resourceInputs["kmsServerSideEncryption"] = args ? args.kmsServerSideEncryption : undefined;
            resourceInputs["logsAnomalyDetection"] = args ? args.logsAnomalyDetection : undefined;
            resourceInputs["opsCenter"] = args ? args.opsCenter : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServiceIntegration.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServiceIntegration resources.
 */
export interface ServiceIntegrationState {
    /**
     * Information about whether DevOps Guru is configured to encrypt server-side data using KMS. See `kmsServerSideEncryption` below.
     */
    kmsServerSideEncryption?: pulumi.Input<inputs.devopsguru.ServiceIntegrationKmsServerSideEncryption>;
    /**
     * Information about whether DevOps Guru is configured to perform log anomaly detection on Amazon CloudWatch log groups. See `logsAnomalyDetection` below.
     */
    logsAnomalyDetection?: pulumi.Input<inputs.devopsguru.ServiceIntegrationLogsAnomalyDetection>;
    /**
     * Information about whether DevOps Guru is configured to create an OpsItem in AWS Systems Manager OpsCenter for each created insight. See `opsCenter` below.
     */
    opsCenter?: pulumi.Input<inputs.devopsguru.ServiceIntegrationOpsCenter>;
}

/**
 * The set of arguments for constructing a ServiceIntegration resource.
 */
export interface ServiceIntegrationArgs {
    /**
     * Information about whether DevOps Guru is configured to encrypt server-side data using KMS. See `kmsServerSideEncryption` below.
     */
    kmsServerSideEncryption?: pulumi.Input<inputs.devopsguru.ServiceIntegrationKmsServerSideEncryption>;
    /**
     * Information about whether DevOps Guru is configured to perform log anomaly detection on Amazon CloudWatch log groups. See `logsAnomalyDetection` below.
     */
    logsAnomalyDetection?: pulumi.Input<inputs.devopsguru.ServiceIntegrationLogsAnomalyDetection>;
    /**
     * Information about whether DevOps Guru is configured to create an OpsItem in AWS Systems Manager OpsCenter for each created insight. See `opsCenter` below.
     */
    opsCenter?: pulumi.Input<inputs.devopsguru.ServiceIntegrationOpsCenter>;
}
