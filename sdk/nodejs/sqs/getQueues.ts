// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Data source for managing an AWS SQS (Simple Queue) Queues.
 *
 * ## Example Usage
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.sqs.getQueues({
 *     queueNamePrefix: "example",
 * });
 * ```
 */
export function getQueues(args?: GetQueuesArgs, opts?: pulumi.InvokeOptions): Promise<GetQueuesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:sqs/getQueues:getQueues", {
        "queueNamePrefix": args.queueNamePrefix,
    }, opts);
}

/**
 * A collection of arguments for invoking getQueues.
 */
export interface GetQueuesArgs {
    /**
     * A string to use for filtering the list results. Only those queues whose name begins with the specified string are returned. Queue URLs and names are case-sensitive.
     */
    queueNamePrefix?: string;
}

/**
 * A collection of values returned by getQueues.
 */
export interface GetQueuesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly queueNamePrefix?: string;
    /**
     * A list of queue URLs.
     */
    readonly queueUrls: string[];
}

export function getQueuesOutput(args?: GetQueuesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetQueuesResult> {
    return pulumi.output(args).apply(a => getQueues(a, opts))
}

/**
 * A collection of arguments for invoking getQueues.
 */
export interface GetQueuesOutputArgs {
    /**
     * A string to use for filtering the list results. Only those queues whose name begins with the specified string are returned. Queue URLs and names are case-sensitive.
     */
    queueNamePrefix?: pulumi.Input<string>;
}
