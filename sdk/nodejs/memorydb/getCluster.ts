// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getCluster(args: GetClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetClusterResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:memorydb/getCluster:getCluster", {
        "name": args.name,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getCluster.
 */
export interface GetClusterArgs {
    name: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getCluster.
 */
export interface GetClusterResult {
    readonly aclName: string;
    readonly arn: string;
    readonly autoMinorVersionUpgrade: boolean;
    readonly clusterEndpoints: outputs.memorydb.GetClusterClusterEndpoint[];
    readonly dataTiering: boolean;
    readonly description: string;
    readonly enginePatchVersion: string;
    readonly engineVersion: string;
    readonly finalSnapshotName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly kmsKeyArn: string;
    readonly maintenanceWindow: string;
    readonly name: string;
    readonly nodeType: string;
    readonly numReplicasPerShard: number;
    readonly numShards: number;
    readonly parameterGroupName: string;
    readonly port: number;
    readonly securityGroupIds: string[];
    readonly shards: outputs.memorydb.GetClusterShard[];
    readonly snapshotRetentionLimit: number;
    readonly snapshotWindow: string;
    readonly snsTopicArn: string;
    readonly subnetGroupName: string;
    readonly tags: {[key: string]: string};
    readonly tlsEnabled: boolean;
}
export function getClusterOutput(args: GetClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetClusterResult> {
    return pulumi.output(args).apply((a: any) => getCluster(a, opts))
}

/**
 * A collection of arguments for invoking getCluster.
 */
export interface GetClusterOutputArgs {
    name: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
