// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Provides a MemoryDB User.
 *
 * More information about users and ACL-s can be found in the [MemoryDB User Guide](https://docs.aws.amazon.com/memorydb/latest/devguide/clusters.acls.html).
 *
 * > **Note:** All arguments including the username and passwords will be stored in the raw state as plain-text.
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * import * as random from "@pulumi/random";
 *
 * const exampleRandomPassword = new random.RandomPassword("exampleRandomPassword", {length: 16});
 * const exampleUser = new aws.memorydb.User("exampleUser", {
 *     userName: "my-user",
 *     accessString: "on ~* &* +@all",
 *     authenticationMode: {
 *         type: "password",
 *         passwords: [exampleRandomPassword.result],
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Use the `user_name` to import a user. For example
 *
 * ```sh
 *  $ pulumi import aws:memorydb/user:User example my-user
 * ```
 *
 *  The `passwords` are not available for imported resources, as this information cannot be read back from the MemoryDB API.
 */
export class User extends pulumi.CustomResource {
    /**
     * Get an existing User resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserState, opts?: pulumi.CustomResourceOptions): User {
        return new User(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:memorydb/user:User';

    /**
     * Returns true if the given object is an instance of User.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is User {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === User.__pulumiType;
    }

    /**
     * The access permissions string used for this user.
     */
    public readonly accessString!: pulumi.Output<string>;
    /**
     * The ARN of the user.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Denotes the user's authentication properties. Detailed below.
     */
    public readonly authenticationMode!: pulumi.Output<outputs.memorydb.UserAuthenticationMode>;
    /**
     * The minimum engine version supported for the user.
     */
    public /*out*/ readonly minimumEngineVersion!: pulumi.Output<string>;
    /**
     * A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    /**
     * Name of the MemoryDB user. Up to 40 characters.
     */
    public readonly userName!: pulumi.Output<string>;

    /**
     * Create a User resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UserArgs | UserState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UserState | undefined;
            resourceInputs["accessString"] = state ? state.accessString : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["authenticationMode"] = state ? state.authenticationMode : undefined;
            resourceInputs["minimumEngineVersion"] = state ? state.minimumEngineVersion : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["userName"] = state ? state.userName : undefined;
        } else {
            const args = argsOrState as UserArgs | undefined;
            if ((!args || args.accessString === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accessString'");
            }
            if ((!args || args.authenticationMode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authenticationMode'");
            }
            if ((!args || args.userName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userName'");
            }
            resourceInputs["accessString"] = args ? args.accessString : undefined;
            resourceInputs["authenticationMode"] = args ? args.authenticationMode : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["userName"] = args ? args.userName : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["minimumEngineVersion"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(User.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering User resources.
 */
export interface UserState {
    /**
     * The access permissions string used for this user.
     */
    accessString?: pulumi.Input<string>;
    /**
     * The ARN of the user.
     */
    arn?: pulumi.Input<string>;
    /**
     * Denotes the user's authentication properties. Detailed below.
     */
    authenticationMode?: pulumi.Input<inputs.memorydb.UserAuthenticationMode>;
    /**
     * The minimum engine version supported for the user.
     */
    minimumEngineVersion?: pulumi.Input<string>;
    /**
     * A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Name of the MemoryDB user. Up to 40 characters.
     */
    userName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a User resource.
 */
export interface UserArgs {
    /**
     * The access permissions string used for this user.
     */
    accessString: pulumi.Input<string>;
    /**
     * Denotes the user's authentication properties. Detailed below.
     */
    authenticationMode: pulumi.Input<inputs.memorydb.UserAuthenticationMode>;
    /**
     * A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Name of the MemoryDB user. Up to 40 characters.
     */
    userName: pulumi.Input<string>;
}
