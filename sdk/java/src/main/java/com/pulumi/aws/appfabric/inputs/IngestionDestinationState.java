// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appfabric.inputs;

import com.pulumi.aws.appfabric.inputs.IngestionDestinationDestinationConfigurationArgs;
import com.pulumi.aws.appfabric.inputs.IngestionDestinationProcessingConfigurationArgs;
import com.pulumi.aws.appfabric.inputs.IngestionDestinationTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IngestionDestinationState extends com.pulumi.resources.ResourceArgs {

    public static final IngestionDestinationState Empty = new IngestionDestinationState();

    /**
     * The Amazon Resource Name (ARN) of the app bundle to use for the request.
     * 
     */
    @Import(name="appBundleArn")
    private @Nullable Output<String> appBundleArn;

    /**
     * @return The Amazon Resource Name (ARN) of the app bundle to use for the request.
     * 
     */
    public Optional<Output<String>> appBundleArn() {
        return Optional.ofNullable(this.appBundleArn);
    }

    /**
     * ARN of the Ingestion Destination.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return ARN of the Ingestion Destination.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * Contains information about the destination of ingested data.
     * 
     */
    @Import(name="destinationConfiguration")
    private @Nullable Output<IngestionDestinationDestinationConfigurationArgs> destinationConfiguration;

    /**
     * @return Contains information about the destination of ingested data.
     * 
     */
    public Optional<Output<IngestionDestinationDestinationConfigurationArgs>> destinationConfiguration() {
        return Optional.ofNullable(this.destinationConfiguration);
    }

    /**
     * The Amazon Resource Name (ARN) of the ingestion to use for the request.
     * 
     */
    @Import(name="ingestionArn")
    private @Nullable Output<String> ingestionArn;

    /**
     * @return The Amazon Resource Name (ARN) of the ingestion to use for the request.
     * 
     */
    public Optional<Output<String>> ingestionArn() {
        return Optional.ofNullable(this.ingestionArn);
    }

    /**
     * Contains information about how ingested data is processed.
     * 
     */
    @Import(name="processingConfiguration")
    private @Nullable Output<IngestionDestinationProcessingConfigurationArgs> processingConfiguration;

    /**
     * @return Contains information about how ingested data is processed.
     * 
     */
    public Optional<Output<IngestionDestinationProcessingConfigurationArgs>> processingConfiguration() {
        return Optional.ofNullable(this.processingConfiguration);
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @return Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="timeouts")
    private @Nullable Output<IngestionDestinationTimeoutsArgs> timeouts;

    public Optional<Output<IngestionDestinationTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private IngestionDestinationState() {}

    private IngestionDestinationState(IngestionDestinationState $) {
        this.appBundleArn = $.appBundleArn;
        this.arn = $.arn;
        this.destinationConfiguration = $.destinationConfiguration;
        this.ingestionArn = $.ingestionArn;
        this.processingConfiguration = $.processingConfiguration;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IngestionDestinationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IngestionDestinationState $;

        public Builder() {
            $ = new IngestionDestinationState();
        }

        public Builder(IngestionDestinationState defaults) {
            $ = new IngestionDestinationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param appBundleArn The Amazon Resource Name (ARN) of the app bundle to use for the request.
         * 
         * @return builder
         * 
         */
        public Builder appBundleArn(@Nullable Output<String> appBundleArn) {
            $.appBundleArn = appBundleArn;
            return this;
        }

        /**
         * @param appBundleArn The Amazon Resource Name (ARN) of the app bundle to use for the request.
         * 
         * @return builder
         * 
         */
        public Builder appBundleArn(String appBundleArn) {
            return appBundleArn(Output.of(appBundleArn));
        }

        /**
         * @param arn ARN of the Ingestion Destination.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn ARN of the Ingestion Destination.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param destinationConfiguration Contains information about the destination of ingested data.
         * 
         * @return builder
         * 
         */
        public Builder destinationConfiguration(@Nullable Output<IngestionDestinationDestinationConfigurationArgs> destinationConfiguration) {
            $.destinationConfiguration = destinationConfiguration;
            return this;
        }

        /**
         * @param destinationConfiguration Contains information about the destination of ingested data.
         * 
         * @return builder
         * 
         */
        public Builder destinationConfiguration(IngestionDestinationDestinationConfigurationArgs destinationConfiguration) {
            return destinationConfiguration(Output.of(destinationConfiguration));
        }

        /**
         * @param ingestionArn The Amazon Resource Name (ARN) of the ingestion to use for the request.
         * 
         * @return builder
         * 
         */
        public Builder ingestionArn(@Nullable Output<String> ingestionArn) {
            $.ingestionArn = ingestionArn;
            return this;
        }

        /**
         * @param ingestionArn The Amazon Resource Name (ARN) of the ingestion to use for the request.
         * 
         * @return builder
         * 
         */
        public Builder ingestionArn(String ingestionArn) {
            return ingestionArn(Output.of(ingestionArn));
        }

        /**
         * @param processingConfiguration Contains information about how ingested data is processed.
         * 
         * @return builder
         * 
         */
        public Builder processingConfiguration(@Nullable Output<IngestionDestinationProcessingConfigurationArgs> processingConfiguration) {
            $.processingConfiguration = processingConfiguration;
            return this;
        }

        /**
         * @param processingConfiguration Contains information about how ingested data is processed.
         * 
         * @return builder
         * 
         */
        public Builder processingConfiguration(IngestionDestinationProcessingConfigurationArgs processingConfiguration) {
            return processingConfiguration(Output.of(processingConfiguration));
        }

        /**
         * @param tags Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tagsAll Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @param tagsAll Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder timeouts(@Nullable Output<IngestionDestinationTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(IngestionDestinationTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public IngestionDestinationState build() {
            return $;
        }
    }

}
