// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.workspaces.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetWorkspacePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetWorkspacePlainArgs Empty = new GetWorkspacePlainArgs();

    /**
     * ID of the directory for the WorkSpace. You have to specify `user_name` along with `directory_id`. You cannot combine this parameter with `workspace_id`.
     * 
     */
    @Import(name="directoryId")
    private @Nullable String directoryId;

    /**
     * @return ID of the directory for the WorkSpace. You have to specify `user_name` along with `directory_id`. You cannot combine this parameter with `workspace_id`.
     * 
     */
    public Optional<String> directoryId() {
        return Optional.ofNullable(this.directoryId);
    }

    /**
     * Tags for the WorkSpace.
     * 
     */
    @Import(name="tags")
    private @Nullable Map<String,String> tags;

    /**
     * @return Tags for the WorkSpace.
     * 
     */
    public Optional<Map<String,String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * User name of the user for the WorkSpace. This user name must exist in the directory for the WorkSpace. You cannot combine this parameter with `workspace_id`.
     * 
     */
    @Import(name="userName")
    private @Nullable String userName;

    /**
     * @return User name of the user for the WorkSpace. This user name must exist in the directory for the WorkSpace. You cannot combine this parameter with `workspace_id`.
     * 
     */
    public Optional<String> userName() {
        return Optional.ofNullable(this.userName);
    }

    /**
     * ID of the WorkSpace. You cannot combine this parameter with `directory_id`.
     * 
     */
    @Import(name="workspaceId")
    private @Nullable String workspaceId;

    /**
     * @return ID of the WorkSpace. You cannot combine this parameter with `directory_id`.
     * 
     */
    public Optional<String> workspaceId() {
        return Optional.ofNullable(this.workspaceId);
    }

    private GetWorkspacePlainArgs() {}

    private GetWorkspacePlainArgs(GetWorkspacePlainArgs $) {
        this.directoryId = $.directoryId;
        this.tags = $.tags;
        this.userName = $.userName;
        this.workspaceId = $.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetWorkspacePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetWorkspacePlainArgs $;

        public Builder() {
            $ = new GetWorkspacePlainArgs();
        }

        public Builder(GetWorkspacePlainArgs defaults) {
            $ = new GetWorkspacePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param directoryId ID of the directory for the WorkSpace. You have to specify `user_name` along with `directory_id`. You cannot combine this parameter with `workspace_id`.
         * 
         * @return builder
         * 
         */
        public Builder directoryId(@Nullable String directoryId) {
            $.directoryId = directoryId;
            return this;
        }

        /**
         * @param tags Tags for the WorkSpace.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Map<String,String> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param userName User name of the user for the WorkSpace. This user name must exist in the directory for the WorkSpace. You cannot combine this parameter with `workspace_id`.
         * 
         * @return builder
         * 
         */
        public Builder userName(@Nullable String userName) {
            $.userName = userName;
            return this;
        }

        /**
         * @param workspaceId ID of the WorkSpace. You cannot combine this parameter with `directory_id`.
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(@Nullable String workspaceId) {
            $.workspaceId = workspaceId;
            return this;
        }

        public GetWorkspacePlainArgs build() {
            return $;
        }
    }

}
