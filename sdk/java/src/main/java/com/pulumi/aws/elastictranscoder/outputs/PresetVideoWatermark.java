// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elastictranscoder.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PresetVideoWatermark {
    private @Nullable String horizontalAlign;
    private @Nullable String horizontalOffset;
    private @Nullable String id;
    private @Nullable String maxHeight;
    private @Nullable String maxWidth;
    private @Nullable String opacity;
    private @Nullable String sizingPolicy;
    private @Nullable String target;
    private @Nullable String verticalAlign;
    private @Nullable String verticalOffset;

    private PresetVideoWatermark() {}
    public Optional<String> horizontalAlign() {
        return Optional.ofNullable(this.horizontalAlign);
    }
    public Optional<String> horizontalOffset() {
        return Optional.ofNullable(this.horizontalOffset);
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<String> maxHeight() {
        return Optional.ofNullable(this.maxHeight);
    }
    public Optional<String> maxWidth() {
        return Optional.ofNullable(this.maxWidth);
    }
    public Optional<String> opacity() {
        return Optional.ofNullable(this.opacity);
    }
    public Optional<String> sizingPolicy() {
        return Optional.ofNullable(this.sizingPolicy);
    }
    public Optional<String> target() {
        return Optional.ofNullable(this.target);
    }
    public Optional<String> verticalAlign() {
        return Optional.ofNullable(this.verticalAlign);
    }
    public Optional<String> verticalOffset() {
        return Optional.ofNullable(this.verticalOffset);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PresetVideoWatermark defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String horizontalAlign;
        private @Nullable String horizontalOffset;
        private @Nullable String id;
        private @Nullable String maxHeight;
        private @Nullable String maxWidth;
        private @Nullable String opacity;
        private @Nullable String sizingPolicy;
        private @Nullable String target;
        private @Nullable String verticalAlign;
        private @Nullable String verticalOffset;
        public Builder() {}
        public Builder(PresetVideoWatermark defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.horizontalAlign = defaults.horizontalAlign;
    	      this.horizontalOffset = defaults.horizontalOffset;
    	      this.id = defaults.id;
    	      this.maxHeight = defaults.maxHeight;
    	      this.maxWidth = defaults.maxWidth;
    	      this.opacity = defaults.opacity;
    	      this.sizingPolicy = defaults.sizingPolicy;
    	      this.target = defaults.target;
    	      this.verticalAlign = defaults.verticalAlign;
    	      this.verticalOffset = defaults.verticalOffset;
        }

        @CustomType.Setter
        public Builder horizontalAlign(@Nullable String horizontalAlign) {
            this.horizontalAlign = horizontalAlign;
            return this;
        }
        @CustomType.Setter
        public Builder horizontalOffset(@Nullable String horizontalOffset) {
            this.horizontalOffset = horizontalOffset;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder maxHeight(@Nullable String maxHeight) {
            this.maxHeight = maxHeight;
            return this;
        }
        @CustomType.Setter
        public Builder maxWidth(@Nullable String maxWidth) {
            this.maxWidth = maxWidth;
            return this;
        }
        @CustomType.Setter
        public Builder opacity(@Nullable String opacity) {
            this.opacity = opacity;
            return this;
        }
        @CustomType.Setter
        public Builder sizingPolicy(@Nullable String sizingPolicy) {
            this.sizingPolicy = sizingPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder target(@Nullable String target) {
            this.target = target;
            return this;
        }
        @CustomType.Setter
        public Builder verticalAlign(@Nullable String verticalAlign) {
            this.verticalAlign = verticalAlign;
            return this;
        }
        @CustomType.Setter
        public Builder verticalOffset(@Nullable String verticalOffset) {
            this.verticalOffset = verticalOffset;
            return this;
        }
        public PresetVideoWatermark build() {
            final var o = new PresetVideoWatermark();
            o.horizontalAlign = horizontalAlign;
            o.horizontalOffset = horizontalOffset;
            o.id = id;
            o.maxHeight = maxHeight;
            o.maxWidth = maxWidth;
            o.opacity = opacity;
            o.sizingPolicy = sizingPolicy;
            o.target = target;
            o.verticalAlign = verticalAlign;
            o.verticalOffset = verticalOffset;
            return o;
        }
    }
}
