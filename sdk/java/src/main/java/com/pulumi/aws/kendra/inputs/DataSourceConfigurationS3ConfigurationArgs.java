// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kendra.inputs;

import com.pulumi.aws.kendra.inputs.DataSourceConfigurationS3ConfigurationAccessControlListConfigurationArgs;
import com.pulumi.aws.kendra.inputs.DataSourceConfigurationS3ConfigurationDocumentsMetadataConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataSourceConfigurationS3ConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataSourceConfigurationS3ConfigurationArgs Empty = new DataSourceConfigurationS3ConfigurationArgs();

    @Import(name="accessControlListConfiguration")
    private @Nullable Output<DataSourceConfigurationS3ConfigurationAccessControlListConfigurationArgs> accessControlListConfiguration;

    public Optional<Output<DataSourceConfigurationS3ConfigurationAccessControlListConfigurationArgs>> accessControlListConfiguration() {
        return Optional.ofNullable(this.accessControlListConfiguration);
    }

    @Import(name="bucketName", required=true)
    private Output<String> bucketName;

    public Output<String> bucketName() {
        return this.bucketName;
    }

    @Import(name="documentsMetadataConfiguration")
    private @Nullable Output<DataSourceConfigurationS3ConfigurationDocumentsMetadataConfigurationArgs> documentsMetadataConfiguration;

    public Optional<Output<DataSourceConfigurationS3ConfigurationDocumentsMetadataConfigurationArgs>> documentsMetadataConfiguration() {
        return Optional.ofNullable(this.documentsMetadataConfiguration);
    }

    @Import(name="exclusionPatterns")
    private @Nullable Output<List<String>> exclusionPatterns;

    public Optional<Output<List<String>>> exclusionPatterns() {
        return Optional.ofNullable(this.exclusionPatterns);
    }

    @Import(name="inclusionPatterns")
    private @Nullable Output<List<String>> inclusionPatterns;

    public Optional<Output<List<String>>> inclusionPatterns() {
        return Optional.ofNullable(this.inclusionPatterns);
    }

    @Import(name="inclusionPrefixes")
    private @Nullable Output<List<String>> inclusionPrefixes;

    public Optional<Output<List<String>>> inclusionPrefixes() {
        return Optional.ofNullable(this.inclusionPrefixes);
    }

    private DataSourceConfigurationS3ConfigurationArgs() {}

    private DataSourceConfigurationS3ConfigurationArgs(DataSourceConfigurationS3ConfigurationArgs $) {
        this.accessControlListConfiguration = $.accessControlListConfiguration;
        this.bucketName = $.bucketName;
        this.documentsMetadataConfiguration = $.documentsMetadataConfiguration;
        this.exclusionPatterns = $.exclusionPatterns;
        this.inclusionPatterns = $.inclusionPatterns;
        this.inclusionPrefixes = $.inclusionPrefixes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataSourceConfigurationS3ConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataSourceConfigurationS3ConfigurationArgs $;

        public Builder() {
            $ = new DataSourceConfigurationS3ConfigurationArgs();
        }

        public Builder(DataSourceConfigurationS3ConfigurationArgs defaults) {
            $ = new DataSourceConfigurationS3ConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder accessControlListConfiguration(@Nullable Output<DataSourceConfigurationS3ConfigurationAccessControlListConfigurationArgs> accessControlListConfiguration) {
            $.accessControlListConfiguration = accessControlListConfiguration;
            return this;
        }

        public Builder accessControlListConfiguration(DataSourceConfigurationS3ConfigurationAccessControlListConfigurationArgs accessControlListConfiguration) {
            return accessControlListConfiguration(Output.of(accessControlListConfiguration));
        }

        public Builder bucketName(Output<String> bucketName) {
            $.bucketName = bucketName;
            return this;
        }

        public Builder bucketName(String bucketName) {
            return bucketName(Output.of(bucketName));
        }

        public Builder documentsMetadataConfiguration(@Nullable Output<DataSourceConfigurationS3ConfigurationDocumentsMetadataConfigurationArgs> documentsMetadataConfiguration) {
            $.documentsMetadataConfiguration = documentsMetadataConfiguration;
            return this;
        }

        public Builder documentsMetadataConfiguration(DataSourceConfigurationS3ConfigurationDocumentsMetadataConfigurationArgs documentsMetadataConfiguration) {
            return documentsMetadataConfiguration(Output.of(documentsMetadataConfiguration));
        }

        public Builder exclusionPatterns(@Nullable Output<List<String>> exclusionPatterns) {
            $.exclusionPatterns = exclusionPatterns;
            return this;
        }

        public Builder exclusionPatterns(List<String> exclusionPatterns) {
            return exclusionPatterns(Output.of(exclusionPatterns));
        }

        public Builder exclusionPatterns(String... exclusionPatterns) {
            return exclusionPatterns(List.of(exclusionPatterns));
        }

        public Builder inclusionPatterns(@Nullable Output<List<String>> inclusionPatterns) {
            $.inclusionPatterns = inclusionPatterns;
            return this;
        }

        public Builder inclusionPatterns(List<String> inclusionPatterns) {
            return inclusionPatterns(Output.of(inclusionPatterns));
        }

        public Builder inclusionPatterns(String... inclusionPatterns) {
            return inclusionPatterns(List.of(inclusionPatterns));
        }

        public Builder inclusionPrefixes(@Nullable Output<List<String>> inclusionPrefixes) {
            $.inclusionPrefixes = inclusionPrefixes;
            return this;
        }

        public Builder inclusionPrefixes(List<String> inclusionPrefixes) {
            return inclusionPrefixes(Output.of(inclusionPrefixes));
        }

        public Builder inclusionPrefixes(String... inclusionPrefixes) {
            return inclusionPrefixes(List.of(inclusionPrefixes));
        }

        public DataSourceConfigurationS3ConfigurationArgs build() {
            $.bucketName = Objects.requireNonNull($.bucketName, "expected parameter 'bucketName' to be non-null");
            return $;
        }
    }

}
