// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3control.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaArgs extends com.pulumi.resources.ResourceArgs {

    public static final ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaArgs Empty = new ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaArgs();

    @Import(name="functionArn", required=true)
    private Output<String> functionArn;

    public Output<String> functionArn() {
        return this.functionArn;
    }

    @Import(name="functionPayload")
    private @Nullable Output<String> functionPayload;

    public Optional<Output<String>> functionPayload() {
        return Optional.ofNullable(this.functionPayload);
    }

    private ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaArgs() {}

    private ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaArgs(ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaArgs $) {
        this.functionArn = $.functionArn;
        this.functionPayload = $.functionPayload;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaArgs $;

        public Builder() {
            $ = new ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaArgs();
        }

        public Builder(ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaArgs defaults) {
            $ = new ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaArgs(Objects.requireNonNull(defaults));
        }

        public Builder functionArn(Output<String> functionArn) {
            $.functionArn = functionArn;
            return this;
        }

        public Builder functionArn(String functionArn) {
            return functionArn(Output.of(functionArn));
        }

        public Builder functionPayload(@Nullable Output<String> functionPayload) {
            $.functionPayload = functionPayload;
            return this;
        }

        public Builder functionPayload(String functionPayload) {
            return functionPayload(Output.of(functionPayload));
        }

        public ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaArgs build() {
            $.functionArn = Objects.requireNonNull($.functionArn, "expected parameter 'functionArn' to be non-null");
            return $;
        }
    }

}
