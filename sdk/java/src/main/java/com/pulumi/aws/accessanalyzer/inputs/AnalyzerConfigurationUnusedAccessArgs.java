// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.accessanalyzer.inputs;

import com.pulumi.aws.accessanalyzer.inputs.AnalyzerConfigurationUnusedAccessAnalysisRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AnalyzerConfigurationUnusedAccessArgs extends com.pulumi.resources.ResourceArgs {

    public static final AnalyzerConfigurationUnusedAccessArgs Empty = new AnalyzerConfigurationUnusedAccessArgs();

    /**
     * Information about analysis rules for the analyzer. Analysis rules determine which entities will generate findings based on the criteria you define when you create the rule. See `analysis_rule` Block for Unused Access Analyzer for details.
     * 
     */
    @Import(name="analysisRule")
    private @Nullable Output<AnalyzerConfigurationUnusedAccessAnalysisRuleArgs> analysisRule;

    /**
     * @return Information about analysis rules for the analyzer. Analysis rules determine which entities will generate findings based on the criteria you define when you create the rule. See `analysis_rule` Block for Unused Access Analyzer for details.
     * 
     */
    public Optional<Output<AnalyzerConfigurationUnusedAccessAnalysisRuleArgs>> analysisRule() {
        return Optional.ofNullable(this.analysisRule);
    }

    /**
     * Specified access age in days for which to generate findings for unused access.
     * 
     */
    @Import(name="unusedAccessAge")
    private @Nullable Output<Integer> unusedAccessAge;

    /**
     * @return Specified access age in days for which to generate findings for unused access.
     * 
     */
    public Optional<Output<Integer>> unusedAccessAge() {
        return Optional.ofNullable(this.unusedAccessAge);
    }

    private AnalyzerConfigurationUnusedAccessArgs() {}

    private AnalyzerConfigurationUnusedAccessArgs(AnalyzerConfigurationUnusedAccessArgs $) {
        this.analysisRule = $.analysisRule;
        this.unusedAccessAge = $.unusedAccessAge;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AnalyzerConfigurationUnusedAccessArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AnalyzerConfigurationUnusedAccessArgs $;

        public Builder() {
            $ = new AnalyzerConfigurationUnusedAccessArgs();
        }

        public Builder(AnalyzerConfigurationUnusedAccessArgs defaults) {
            $ = new AnalyzerConfigurationUnusedAccessArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param analysisRule Information about analysis rules for the analyzer. Analysis rules determine which entities will generate findings based on the criteria you define when you create the rule. See `analysis_rule` Block for Unused Access Analyzer for details.
         * 
         * @return builder
         * 
         */
        public Builder analysisRule(@Nullable Output<AnalyzerConfigurationUnusedAccessAnalysisRuleArgs> analysisRule) {
            $.analysisRule = analysisRule;
            return this;
        }

        /**
         * @param analysisRule Information about analysis rules for the analyzer. Analysis rules determine which entities will generate findings based on the criteria you define when you create the rule. See `analysis_rule` Block for Unused Access Analyzer for details.
         * 
         * @return builder
         * 
         */
        public Builder analysisRule(AnalyzerConfigurationUnusedAccessAnalysisRuleArgs analysisRule) {
            return analysisRule(Output.of(analysisRule));
        }

        /**
         * @param unusedAccessAge Specified access age in days for which to generate findings for unused access.
         * 
         * @return builder
         * 
         */
        public Builder unusedAccessAge(@Nullable Output<Integer> unusedAccessAge) {
            $.unusedAccessAge = unusedAccessAge;
            return this;
        }

        /**
         * @param unusedAccessAge Specified access age in days for which to generate findings for unused access.
         * 
         * @return builder
         * 
         */
        public Builder unusedAccessAge(Integer unusedAccessAge) {
            return unusedAccessAge(Output.of(unusedAccessAge));
        }

        public AnalyzerConfigurationUnusedAccessArgs build() {
            return $;
        }
    }

}
