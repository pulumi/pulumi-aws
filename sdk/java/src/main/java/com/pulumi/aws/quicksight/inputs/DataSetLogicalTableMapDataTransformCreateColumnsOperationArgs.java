// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.DataSetLogicalTableMapDataTransformCreateColumnsOperationColumnArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;


public final class DataSetLogicalTableMapDataTransformCreateColumnsOperationArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataSetLogicalTableMapDataTransformCreateColumnsOperationArgs Empty = new DataSetLogicalTableMapDataTransformCreateColumnsOperationArgs();

    /**
     * Calculated columns to create. See columns.
     * 
     */
    @Import(name="columns", required=true)
    private Output<List<DataSetLogicalTableMapDataTransformCreateColumnsOperationColumnArgs>> columns;

    /**
     * @return Calculated columns to create. See columns.
     * 
     */
    public Output<List<DataSetLogicalTableMapDataTransformCreateColumnsOperationColumnArgs>> columns() {
        return this.columns;
    }

    private DataSetLogicalTableMapDataTransformCreateColumnsOperationArgs() {}

    private DataSetLogicalTableMapDataTransformCreateColumnsOperationArgs(DataSetLogicalTableMapDataTransformCreateColumnsOperationArgs $) {
        this.columns = $.columns;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataSetLogicalTableMapDataTransformCreateColumnsOperationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataSetLogicalTableMapDataTransformCreateColumnsOperationArgs $;

        public Builder() {
            $ = new DataSetLogicalTableMapDataTransformCreateColumnsOperationArgs();
        }

        public Builder(DataSetLogicalTableMapDataTransformCreateColumnsOperationArgs defaults) {
            $ = new DataSetLogicalTableMapDataTransformCreateColumnsOperationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param columns Calculated columns to create. See columns.
         * 
         * @return builder
         * 
         */
        public Builder columns(Output<List<DataSetLogicalTableMapDataTransformCreateColumnsOperationColumnArgs>> columns) {
            $.columns = columns;
            return this;
        }

        /**
         * @param columns Calculated columns to create. See columns.
         * 
         * @return builder
         * 
         */
        public Builder columns(List<DataSetLogicalTableMapDataTransformCreateColumnsOperationColumnArgs> columns) {
            return columns(Output.of(columns));
        }

        /**
         * @param columns Calculated columns to create. See columns.
         * 
         * @return builder
         * 
         */
        public Builder columns(DataSetLogicalTableMapDataTransformCreateColumnsOperationColumnArgs... columns) {
            return columns(List.of(columns));
        }

        public DataSetLogicalTableMapDataTransformCreateColumnsOperationArgs build() {
            $.columns = Objects.requireNonNull($.columns, "expected parameter 'columns' to be non-null");
            return $;
        }
    }

}
