// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudformation;

import com.pulumi.aws.cloudformation.inputs.StackSetInstanceDeploymentTargetsArgs;
import com.pulumi.aws.cloudformation.inputs.StackSetInstanceOperationPreferencesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StackSetInstanceArgs extends com.pulumi.resources.ResourceArgs {

    public static final StackSetInstanceArgs Empty = new StackSetInstanceArgs();

    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    @Import(name="callAs")
    private @Nullable Output<String> callAs;

    public Optional<Output<String>> callAs() {
        return Optional.ofNullable(this.callAs);
    }

    @Import(name="deploymentTargets")
    private @Nullable Output<StackSetInstanceDeploymentTargetsArgs> deploymentTargets;

    public Optional<Output<StackSetInstanceDeploymentTargetsArgs>> deploymentTargets() {
        return Optional.ofNullable(this.deploymentTargets);
    }

    @Import(name="operationPreferences")
    private @Nullable Output<StackSetInstanceOperationPreferencesArgs> operationPreferences;

    public Optional<Output<StackSetInstanceOperationPreferencesArgs>> operationPreferences() {
        return Optional.ofNullable(this.operationPreferences);
    }

    @Import(name="parameterOverrides")
    private @Nullable Output<Map<String,String>> parameterOverrides;

    public Optional<Output<Map<String,String>>> parameterOverrides() {
        return Optional.ofNullable(this.parameterOverrides);
    }

    @Import(name="region")
    private @Nullable Output<String> region;

    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    @Import(name="retainStack")
    private @Nullable Output<Boolean> retainStack;

    public Optional<Output<Boolean>> retainStack() {
        return Optional.ofNullable(this.retainStack);
    }

    @Import(name="stackSetName", required=true)
    private Output<String> stackSetName;

    public Output<String> stackSetName() {
        return this.stackSetName;
    }

    private StackSetInstanceArgs() {}

    private StackSetInstanceArgs(StackSetInstanceArgs $) {
        this.accountId = $.accountId;
        this.callAs = $.callAs;
        this.deploymentTargets = $.deploymentTargets;
        this.operationPreferences = $.operationPreferences;
        this.parameterOverrides = $.parameterOverrides;
        this.region = $.region;
        this.retainStack = $.retainStack;
        this.stackSetName = $.stackSetName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StackSetInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StackSetInstanceArgs $;

        public Builder() {
            $ = new StackSetInstanceArgs();
        }

        public Builder(StackSetInstanceArgs defaults) {
            $ = new StackSetInstanceArgs(Objects.requireNonNull(defaults));
        }

        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        public Builder callAs(@Nullable Output<String> callAs) {
            $.callAs = callAs;
            return this;
        }

        public Builder callAs(String callAs) {
            return callAs(Output.of(callAs));
        }

        public Builder deploymentTargets(@Nullable Output<StackSetInstanceDeploymentTargetsArgs> deploymentTargets) {
            $.deploymentTargets = deploymentTargets;
            return this;
        }

        public Builder deploymentTargets(StackSetInstanceDeploymentTargetsArgs deploymentTargets) {
            return deploymentTargets(Output.of(deploymentTargets));
        }

        public Builder operationPreferences(@Nullable Output<StackSetInstanceOperationPreferencesArgs> operationPreferences) {
            $.operationPreferences = operationPreferences;
            return this;
        }

        public Builder operationPreferences(StackSetInstanceOperationPreferencesArgs operationPreferences) {
            return operationPreferences(Output.of(operationPreferences));
        }

        public Builder parameterOverrides(@Nullable Output<Map<String,String>> parameterOverrides) {
            $.parameterOverrides = parameterOverrides;
            return this;
        }

        public Builder parameterOverrides(Map<String,String> parameterOverrides) {
            return parameterOverrides(Output.of(parameterOverrides));
        }

        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        public Builder region(String region) {
            return region(Output.of(region));
        }

        public Builder retainStack(@Nullable Output<Boolean> retainStack) {
            $.retainStack = retainStack;
            return this;
        }

        public Builder retainStack(Boolean retainStack) {
            return retainStack(Output.of(retainStack));
        }

        public Builder stackSetName(Output<String> stackSetName) {
            $.stackSetName = stackSetName;
            return this;
        }

        public Builder stackSetName(String stackSetName) {
            return stackSetName(Output.of(stackSetName));
        }

        public StackSetInstanceArgs build() {
            $.stackSetName = Objects.requireNonNull($.stackSetName, "expected parameter 'stackSetName' to be non-null");
            return $;
        }
    }

}
