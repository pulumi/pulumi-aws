// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.identitystore.inputs;

import com.pulumi.aws.identitystore.inputs.GetUserAlternateIdentifierExternalId;
import com.pulumi.aws.identitystore.inputs.GetUserAlternateIdentifierUniqueAttribute;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetUserAlternateIdentifier extends com.pulumi.resources.InvokeArgs {

    public static final GetUserAlternateIdentifier Empty = new GetUserAlternateIdentifier();

    /**
     * Configuration block for filtering by the identifier issued by an external identity provider. Detailed below.
     * 
     */
    @Import(name="externalId")
    private @Nullable GetUserAlternateIdentifierExternalId externalId;

    /**
     * @return Configuration block for filtering by the identifier issued by an external identity provider. Detailed below.
     * 
     */
    public Optional<GetUserAlternateIdentifierExternalId> externalId() {
        return Optional.ofNullable(this.externalId);
    }

    /**
     * An entity attribute that&#39;s unique to a specific entity. Detailed below.
     * 
     * &gt; Exactly one of the above arguments must be provided.
     * 
     */
    @Import(name="uniqueAttribute")
    private @Nullable GetUserAlternateIdentifierUniqueAttribute uniqueAttribute;

    /**
     * @return An entity attribute that&#39;s unique to a specific entity. Detailed below.
     * 
     * &gt; Exactly one of the above arguments must be provided.
     * 
     */
    public Optional<GetUserAlternateIdentifierUniqueAttribute> uniqueAttribute() {
        return Optional.ofNullable(this.uniqueAttribute);
    }

    private GetUserAlternateIdentifier() {}

    private GetUserAlternateIdentifier(GetUserAlternateIdentifier $) {
        this.externalId = $.externalId;
        this.uniqueAttribute = $.uniqueAttribute;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetUserAlternateIdentifier defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetUserAlternateIdentifier $;

        public Builder() {
            $ = new GetUserAlternateIdentifier();
        }

        public Builder(GetUserAlternateIdentifier defaults) {
            $ = new GetUserAlternateIdentifier(Objects.requireNonNull(defaults));
        }

        /**
         * @param externalId Configuration block for filtering by the identifier issued by an external identity provider. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder externalId(@Nullable GetUserAlternateIdentifierExternalId externalId) {
            $.externalId = externalId;
            return this;
        }

        /**
         * @param uniqueAttribute An entity attribute that&#39;s unique to a specific entity. Detailed below.
         * 
         * &gt; Exactly one of the above arguments must be provided.
         * 
         * @return builder
         * 
         */
        public Builder uniqueAttribute(@Nullable GetUserAlternateIdentifierUniqueAttribute uniqueAttribute) {
            $.uniqueAttribute = uniqueAttribute;
            return this;
        }

        public GetUserAlternateIdentifier build() {
            return $;
        }
    }

}
