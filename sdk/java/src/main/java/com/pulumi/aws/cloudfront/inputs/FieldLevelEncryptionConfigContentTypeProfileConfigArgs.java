// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudfront.inputs;

import com.pulumi.aws.cloudfront.inputs.FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;


public final class FieldLevelEncryptionConfigContentTypeProfileConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final FieldLevelEncryptionConfigContentTypeProfileConfigArgs Empty = new FieldLevelEncryptionConfigContentTypeProfileConfigArgs();

    /**
     * Object that contains an attribute `items` that contains the list of configurations for a field-level encryption content type-profile. See Content Type Profile.
     * 
     */
    @Import(name="contentTypeProfiles", required=true)
    private Output<FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesArgs> contentTypeProfiles;

    /**
     * @return Object that contains an attribute `items` that contains the list of configurations for a field-level encryption content type-profile. See Content Type Profile.
     * 
     */
    public Output<FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesArgs> contentTypeProfiles() {
        return this.contentTypeProfiles;
    }

    /**
     * specifies what to do when an unknown content type is provided for the profile. If true, content is forwarded without being encrypted when the content type is unknown. If false (the default), an error is returned when the content type is unknown.
     * 
     */
    @Import(name="forwardWhenContentTypeIsUnknown", required=true)
    private Output<Boolean> forwardWhenContentTypeIsUnknown;

    /**
     * @return specifies what to do when an unknown content type is provided for the profile. If true, content is forwarded without being encrypted when the content type is unknown. If false (the default), an error is returned when the content type is unknown.
     * 
     */
    public Output<Boolean> forwardWhenContentTypeIsUnknown() {
        return this.forwardWhenContentTypeIsUnknown;
    }

    private FieldLevelEncryptionConfigContentTypeProfileConfigArgs() {}

    private FieldLevelEncryptionConfigContentTypeProfileConfigArgs(FieldLevelEncryptionConfigContentTypeProfileConfigArgs $) {
        this.contentTypeProfiles = $.contentTypeProfiles;
        this.forwardWhenContentTypeIsUnknown = $.forwardWhenContentTypeIsUnknown;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FieldLevelEncryptionConfigContentTypeProfileConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FieldLevelEncryptionConfigContentTypeProfileConfigArgs $;

        public Builder() {
            $ = new FieldLevelEncryptionConfigContentTypeProfileConfigArgs();
        }

        public Builder(FieldLevelEncryptionConfigContentTypeProfileConfigArgs defaults) {
            $ = new FieldLevelEncryptionConfigContentTypeProfileConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param contentTypeProfiles Object that contains an attribute `items` that contains the list of configurations for a field-level encryption content type-profile. See Content Type Profile.
         * 
         * @return builder
         * 
         */
        public Builder contentTypeProfiles(Output<FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesArgs> contentTypeProfiles) {
            $.contentTypeProfiles = contentTypeProfiles;
            return this;
        }

        /**
         * @param contentTypeProfiles Object that contains an attribute `items` that contains the list of configurations for a field-level encryption content type-profile. See Content Type Profile.
         * 
         * @return builder
         * 
         */
        public Builder contentTypeProfiles(FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesArgs contentTypeProfiles) {
            return contentTypeProfiles(Output.of(contentTypeProfiles));
        }

        /**
         * @param forwardWhenContentTypeIsUnknown specifies what to do when an unknown content type is provided for the profile. If true, content is forwarded without being encrypted when the content type is unknown. If false (the default), an error is returned when the content type is unknown.
         * 
         * @return builder
         * 
         */
        public Builder forwardWhenContentTypeIsUnknown(Output<Boolean> forwardWhenContentTypeIsUnknown) {
            $.forwardWhenContentTypeIsUnknown = forwardWhenContentTypeIsUnknown;
            return this;
        }

        /**
         * @param forwardWhenContentTypeIsUnknown specifies what to do when an unknown content type is provided for the profile. If true, content is forwarded without being encrypted when the content type is unknown. If false (the default), an error is returned when the content type is unknown.
         * 
         * @return builder
         * 
         */
        public Builder forwardWhenContentTypeIsUnknown(Boolean forwardWhenContentTypeIsUnknown) {
            return forwardWhenContentTypeIsUnknown(Output.of(forwardWhenContentTypeIsUnknown));
        }

        public FieldLevelEncryptionConfigContentTypeProfileConfigArgs build() {
            $.contentTypeProfiles = Objects.requireNonNull($.contentTypeProfiles, "expected parameter 'contentTypeProfiles' to be non-null");
            $.forwardWhenContentTypeIsUnknown = Objects.requireNonNull($.forwardWhenContentTypeIsUnknown, "expected parameter 'forwardWhenContentTypeIsUnknown' to be non-null");
            return $;
        }
    }

}
