// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lightsail.inputs;

import com.pulumi.aws.lightsail.inputs.ContainerServiceDeploymentVersionContainerArgs;
import com.pulumi.aws.lightsail.inputs.ContainerServiceDeploymentVersionPublicEndpointArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ContainerServiceDeploymentVersionState extends com.pulumi.resources.ResourceArgs {

    public static final ContainerServiceDeploymentVersionState Empty = new ContainerServiceDeploymentVersionState();

    /**
     * Set of configuration blocks that describe the settings of the containers that will be launched on the container service. Maximum of 53. See below.
     * 
     */
    @Import(name="containers")
    private @Nullable Output<List<ContainerServiceDeploymentVersionContainerArgs>> containers;

    /**
     * @return Set of configuration blocks that describe the settings of the containers that will be launched on the container service. Maximum of 53. See below.
     * 
     */
    public Optional<Output<List<ContainerServiceDeploymentVersionContainerArgs>>> containers() {
        return Optional.ofNullable(this.containers);
    }

    /**
     * Date and time when the deployment was created.
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return Date and time when the deployment was created.
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * Configuration block that describes the settings of the public endpoint for the container service. See below.
     * 
     */
    @Import(name="publicEndpoint")
    private @Nullable Output<ContainerServiceDeploymentVersionPublicEndpointArgs> publicEndpoint;

    /**
     * @return Configuration block that describes the settings of the public endpoint for the container service. See below.
     * 
     */
    public Optional<Output<ContainerServiceDeploymentVersionPublicEndpointArgs>> publicEndpoint() {
        return Optional.ofNullable(this.publicEndpoint);
    }

    /**
     * Name of the container service.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return Name of the container service.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    /**
     * Current state of the container service.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return Current state of the container service.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * Version number of the deployment.
     * 
     */
    @Import(name="version")
    private @Nullable Output<Integer> version;

    /**
     * @return Version number of the deployment.
     * 
     */
    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    private ContainerServiceDeploymentVersionState() {}

    private ContainerServiceDeploymentVersionState(ContainerServiceDeploymentVersionState $) {
        this.containers = $.containers;
        this.createdAt = $.createdAt;
        this.publicEndpoint = $.publicEndpoint;
        this.serviceName = $.serviceName;
        this.state = $.state;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContainerServiceDeploymentVersionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContainerServiceDeploymentVersionState $;

        public Builder() {
            $ = new ContainerServiceDeploymentVersionState();
        }

        public Builder(ContainerServiceDeploymentVersionState defaults) {
            $ = new ContainerServiceDeploymentVersionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param containers Set of configuration blocks that describe the settings of the containers that will be launched on the container service. Maximum of 53. See below.
         * 
         * @return builder
         * 
         */
        public Builder containers(@Nullable Output<List<ContainerServiceDeploymentVersionContainerArgs>> containers) {
            $.containers = containers;
            return this;
        }

        /**
         * @param containers Set of configuration blocks that describe the settings of the containers that will be launched on the container service. Maximum of 53. See below.
         * 
         * @return builder
         * 
         */
        public Builder containers(List<ContainerServiceDeploymentVersionContainerArgs> containers) {
            return containers(Output.of(containers));
        }

        /**
         * @param containers Set of configuration blocks that describe the settings of the containers that will be launched on the container service. Maximum of 53. See below.
         * 
         * @return builder
         * 
         */
        public Builder containers(ContainerServiceDeploymentVersionContainerArgs... containers) {
            return containers(List.of(containers));
        }

        /**
         * @param createdAt Date and time when the deployment was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt Date and time when the deployment was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param publicEndpoint Configuration block that describes the settings of the public endpoint for the container service. See below.
         * 
         * @return builder
         * 
         */
        public Builder publicEndpoint(@Nullable Output<ContainerServiceDeploymentVersionPublicEndpointArgs> publicEndpoint) {
            $.publicEndpoint = publicEndpoint;
            return this;
        }

        /**
         * @param publicEndpoint Configuration block that describes the settings of the public endpoint for the container service. See below.
         * 
         * @return builder
         * 
         */
        public Builder publicEndpoint(ContainerServiceDeploymentVersionPublicEndpointArgs publicEndpoint) {
            return publicEndpoint(Output.of(publicEndpoint));
        }

        /**
         * @param serviceName Name of the container service.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName Name of the container service.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param state Current state of the container service.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state Current state of the container service.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param version Version number of the deployment.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Version number of the deployment.
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public ContainerServiceDeploymentVersionState build() {
            return $;
        }
    }

}
