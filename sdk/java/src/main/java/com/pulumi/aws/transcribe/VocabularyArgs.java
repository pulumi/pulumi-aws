// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.transcribe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VocabularyArgs extends com.pulumi.resources.ResourceArgs {

    public static final VocabularyArgs Empty = new VocabularyArgs();

    @Import(name="languageCode", required=true)
    private Output<String> languageCode;

    public Output<String> languageCode() {
        return this.languageCode;
    }

    @Import(name="phrases")
    private @Nullable Output<List<String>> phrases;

    public Optional<Output<List<String>>> phrases() {
        return Optional.ofNullable(this.phrases);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="vocabularyFileUri")
    private @Nullable Output<String> vocabularyFileUri;

    public Optional<Output<String>> vocabularyFileUri() {
        return Optional.ofNullable(this.vocabularyFileUri);
    }

    @Import(name="vocabularyName", required=true)
    private Output<String> vocabularyName;

    public Output<String> vocabularyName() {
        return this.vocabularyName;
    }

    private VocabularyArgs() {}

    private VocabularyArgs(VocabularyArgs $) {
        this.languageCode = $.languageCode;
        this.phrases = $.phrases;
        this.tags = $.tags;
        this.vocabularyFileUri = $.vocabularyFileUri;
        this.vocabularyName = $.vocabularyName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VocabularyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VocabularyArgs $;

        public Builder() {
            $ = new VocabularyArgs();
        }

        public Builder(VocabularyArgs defaults) {
            $ = new VocabularyArgs(Objects.requireNonNull(defaults));
        }

        public Builder languageCode(Output<String> languageCode) {
            $.languageCode = languageCode;
            return this;
        }

        public Builder languageCode(String languageCode) {
            return languageCode(Output.of(languageCode));
        }

        public Builder phrases(@Nullable Output<List<String>> phrases) {
            $.phrases = phrases;
            return this;
        }

        public Builder phrases(List<String> phrases) {
            return phrases(Output.of(phrases));
        }

        public Builder phrases(String... phrases) {
            return phrases(List.of(phrases));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder vocabularyFileUri(@Nullable Output<String> vocabularyFileUri) {
            $.vocabularyFileUri = vocabularyFileUri;
            return this;
        }

        public Builder vocabularyFileUri(String vocabularyFileUri) {
            return vocabularyFileUri(Output.of(vocabularyFileUri));
        }

        public Builder vocabularyName(Output<String> vocabularyName) {
            $.vocabularyName = vocabularyName;
            return this;
        }

        public Builder vocabularyName(String vocabularyName) {
            return vocabularyName(Output.of(vocabularyName));
        }

        public VocabularyArgs build() {
            $.languageCode = Objects.requireNonNull($.languageCode, "expected parameter 'languageCode' to be non-null");
            $.vocabularyName = Objects.requireNonNull($.vocabularyName, "expected parameter 'vocabularyName' to be non-null");
            return $;
        }
    }

}
