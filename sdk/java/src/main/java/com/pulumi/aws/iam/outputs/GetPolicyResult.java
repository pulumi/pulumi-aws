// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iam.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPolicyResult {
    /**
     * @return ARN of the policy.
     * 
     */
    private String arn;
    /**
     * @return Description of the policy.
     * 
     */
    private String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String name;
    /**
     * @return Path to the policy.
     * 
     */
    private String path;
    private @Nullable String pathPrefix;
    /**
     * @return Policy document of the policy.
     * 
     */
    private String policy;
    /**
     * @return Policy&#39;s ID.
     * 
     */
    private String policyId;
    /**
     * @return Key-value mapping of tags for the IAM Policy.
     * 
     */
    private Map<String,String> tags;

    private GetPolicyResult() {}
    /**
     * @return ARN of the policy.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return Description of the policy.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return Path to the policy.
     * 
     */
    public String path() {
        return this.path;
    }
    public Optional<String> pathPrefix() {
        return Optional.ofNullable(this.pathPrefix);
    }
    /**
     * @return Policy document of the policy.
     * 
     */
    public String policy() {
        return this.policy;
    }
    /**
     * @return Policy&#39;s ID.
     * 
     */
    public String policyId() {
        return this.policyId;
    }
    /**
     * @return Key-value mapping of tags for the IAM Policy.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPolicyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private String description;
        private String id;
        private String name;
        private String path;
        private @Nullable String pathPrefix;
        private String policy;
        private String policyId;
        private Map<String,String> tags;
        public Builder() {}
        public Builder(GetPolicyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.path = defaults.path;
    	      this.pathPrefix = defaults.pathPrefix;
    	      this.policy = defaults.policy;
    	      this.policyId = defaults.policyId;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            if (arn == null) {
              throw new MissingRequiredPropertyException("GetPolicyResult", "arn");
            }
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetPolicyResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPolicyResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetPolicyResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder path(String path) {
            if (path == null) {
              throw new MissingRequiredPropertyException("GetPolicyResult", "path");
            }
            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder pathPrefix(@Nullable String pathPrefix) {

            this.pathPrefix = pathPrefix;
            return this;
        }
        @CustomType.Setter
        public Builder policy(String policy) {
            if (policy == null) {
              throw new MissingRequiredPropertyException("GetPolicyResult", "policy");
            }
            this.policy = policy;
            return this;
        }
        @CustomType.Setter
        public Builder policyId(String policyId) {
            if (policyId == null) {
              throw new MissingRequiredPropertyException("GetPolicyResult", "policyId");
            }
            this.policyId = policyId;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetPolicyResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        public GetPolicyResult build() {
            final var _resultValue = new GetPolicyResult();
            _resultValue.arn = arn;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.path = path;
            _resultValue.pathPrefix = pathPrefix;
            _resultValue.policy = policy;
            _resultValue.policyId = policyId;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
