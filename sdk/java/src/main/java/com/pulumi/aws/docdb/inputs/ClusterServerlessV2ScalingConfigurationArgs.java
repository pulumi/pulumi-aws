// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.docdb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.util.Objects;


public final class ClusterServerlessV2ScalingConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterServerlessV2ScalingConfigurationArgs Empty = new ClusterServerlessV2ScalingConfigurationArgs();

    /**
     * Maximum number of Amazon DocumentDB capacity units (DCUs) for an instance in an Amazon DocumentDB Serverless cluster. Valid values are multiples of 0.5 between 1 and 256.
     * 
     */
    @Import(name="maxCapacity", required=true)
    private Output<Double> maxCapacity;

    /**
     * @return Maximum number of Amazon DocumentDB capacity units (DCUs) for an instance in an Amazon DocumentDB Serverless cluster. Valid values are multiples of 0.5 between 1 and 256.
     * 
     */
    public Output<Double> maxCapacity() {
        return this.maxCapacity;
    }

    /**
     * Minimum number of Amazon DocumentDB capacity units (DCUs) for an instance in an Amazon DocumentDB Serverless cluster. Valid values are multiples of 0.5 between 0.5 and 256.
     * 
     */
    @Import(name="minCapacity", required=true)
    private Output<Double> minCapacity;

    /**
     * @return Minimum number of Amazon DocumentDB capacity units (DCUs) for an instance in an Amazon DocumentDB Serverless cluster. Valid values are multiples of 0.5 between 0.5 and 256.
     * 
     */
    public Output<Double> minCapacity() {
        return this.minCapacity;
    }

    private ClusterServerlessV2ScalingConfigurationArgs() {}

    private ClusterServerlessV2ScalingConfigurationArgs(ClusterServerlessV2ScalingConfigurationArgs $) {
        this.maxCapacity = $.maxCapacity;
        this.minCapacity = $.minCapacity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterServerlessV2ScalingConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterServerlessV2ScalingConfigurationArgs $;

        public Builder() {
            $ = new ClusterServerlessV2ScalingConfigurationArgs();
        }

        public Builder(ClusterServerlessV2ScalingConfigurationArgs defaults) {
            $ = new ClusterServerlessV2ScalingConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxCapacity Maximum number of Amazon DocumentDB capacity units (DCUs) for an instance in an Amazon DocumentDB Serverless cluster. Valid values are multiples of 0.5 between 1 and 256.
         * 
         * @return builder
         * 
         */
        public Builder maxCapacity(Output<Double> maxCapacity) {
            $.maxCapacity = maxCapacity;
            return this;
        }

        /**
         * @param maxCapacity Maximum number of Amazon DocumentDB capacity units (DCUs) for an instance in an Amazon DocumentDB Serverless cluster. Valid values are multiples of 0.5 between 1 and 256.
         * 
         * @return builder
         * 
         */
        public Builder maxCapacity(Double maxCapacity) {
            return maxCapacity(Output.of(maxCapacity));
        }

        /**
         * @param minCapacity Minimum number of Amazon DocumentDB capacity units (DCUs) for an instance in an Amazon DocumentDB Serverless cluster. Valid values are multiples of 0.5 between 0.5 and 256.
         * 
         * @return builder
         * 
         */
        public Builder minCapacity(Output<Double> minCapacity) {
            $.minCapacity = minCapacity;
            return this;
        }

        /**
         * @param minCapacity Minimum number of Amazon DocumentDB capacity units (DCUs) for an instance in an Amazon DocumentDB Serverless cluster. Valid values are multiples of 0.5 between 0.5 and 256.
         * 
         * @return builder
         * 
         */
        public Builder minCapacity(Double minCapacity) {
            return minCapacity(Output.of(minCapacity));
        }

        public ClusterServerlessV2ScalingConfigurationArgs build() {
            if ($.maxCapacity == null) {
                throw new MissingRequiredPropertyException("ClusterServerlessV2ScalingConfigurationArgs", "maxCapacity");
            }
            if ($.minCapacity == null) {
                throw new MissingRequiredPropertyException("ClusterServerlessV2ScalingConfigurationArgs", "minCapacity");
            }
            return $;
        }
    }

}
