// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.ConditionalFormattingColorGradient;
import com.pulumi.aws.quicksight.outputs.ConditionalFormattingColorSolid;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConditionalFormattingColor {
    private @Nullable ConditionalFormattingColorGradient gradient;
    private @Nullable ConditionalFormattingColorSolid solid;

    private ConditionalFormattingColor() {}
    public Optional<ConditionalFormattingColorGradient> gradient() {
        return Optional.ofNullable(this.gradient);
    }
    public Optional<ConditionalFormattingColorSolid> solid() {
        return Optional.ofNullable(this.solid);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConditionalFormattingColor defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ConditionalFormattingColorGradient gradient;
        private @Nullable ConditionalFormattingColorSolid solid;
        public Builder() {}
        public Builder(ConditionalFormattingColor defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.gradient = defaults.gradient;
    	      this.solid = defaults.solid;
        }

        @CustomType.Setter
        public Builder gradient(@Nullable ConditionalFormattingColorGradient gradient) {

            this.gradient = gradient;
            return this;
        }
        @CustomType.Setter
        public Builder solid(@Nullable ConditionalFormattingColorSolid solid) {

            this.solid = solid;
            return this;
        }
        public ConditionalFormattingColor build() {
            final var _resultValue = new ConditionalFormattingColor();
            _resultValue.gradient = gradient;
            _resultValue.solid = solid;
            return _resultValue;
        }
    }
}
