// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iot;

import com.pulumi.aws.iot.inputs.TopicRuleDestinationVpcConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TopicRuleDestinationArgs extends com.pulumi.resources.ResourceArgs {

    public static final TopicRuleDestinationArgs Empty = new TopicRuleDestinationArgs();

    /**
     * Whether or not to enable the destination. Default: `true`.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Whether or not to enable the destination. Default: `true`.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Configuration of the virtual private cloud (VPC) connection. For more info, see the [AWS documentation](https://docs.aws.amazon.com/iot/latest/developerguide/vpc-rule-action.html).
     * 
     */
    @Import(name="vpcConfiguration", required=true)
    private Output<TopicRuleDestinationVpcConfigurationArgs> vpcConfiguration;

    /**
     * @return Configuration of the virtual private cloud (VPC) connection. For more info, see the [AWS documentation](https://docs.aws.amazon.com/iot/latest/developerguide/vpc-rule-action.html).
     * 
     */
    public Output<TopicRuleDestinationVpcConfigurationArgs> vpcConfiguration() {
        return this.vpcConfiguration;
    }

    private TopicRuleDestinationArgs() {}

    private TopicRuleDestinationArgs(TopicRuleDestinationArgs $) {
        this.enabled = $.enabled;
        this.vpcConfiguration = $.vpcConfiguration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TopicRuleDestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TopicRuleDestinationArgs $;

        public Builder() {
            $ = new TopicRuleDestinationArgs();
        }

        public Builder(TopicRuleDestinationArgs defaults) {
            $ = new TopicRuleDestinationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Whether or not to enable the destination. Default: `true`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether or not to enable the destination. Default: `true`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param vpcConfiguration Configuration of the virtual private cloud (VPC) connection. For more info, see the [AWS documentation](https://docs.aws.amazon.com/iot/latest/developerguide/vpc-rule-action.html).
         * 
         * @return builder
         * 
         */
        public Builder vpcConfiguration(Output<TopicRuleDestinationVpcConfigurationArgs> vpcConfiguration) {
            $.vpcConfiguration = vpcConfiguration;
            return this;
        }

        /**
         * @param vpcConfiguration Configuration of the virtual private cloud (VPC) connection. For more info, see the [AWS documentation](https://docs.aws.amazon.com/iot/latest/developerguide/vpc-rule-action.html).
         * 
         * @return builder
         * 
         */
        public Builder vpcConfiguration(TopicRuleDestinationVpcConfigurationArgs vpcConfiguration) {
            return vpcConfiguration(Output.of(vpcConfiguration));
        }

        public TopicRuleDestinationArgs build() {
            $.vpcConfiguration = Objects.requireNonNull($.vpcConfiguration, "expected parameter 'vpcConfiguration' to be non-null");
            return $;
        }
    }

}
