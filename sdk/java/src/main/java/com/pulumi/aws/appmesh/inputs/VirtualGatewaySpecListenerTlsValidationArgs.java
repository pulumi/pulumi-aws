// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.inputs;

import com.pulumi.aws.appmesh.inputs.VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesArgs;
import com.pulumi.aws.appmesh.inputs.VirtualGatewaySpecListenerTlsValidationTrustArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VirtualGatewaySpecListenerTlsValidationArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualGatewaySpecListenerTlsValidationArgs Empty = new VirtualGatewaySpecListenerTlsValidationArgs();

    /**
     * SANs for a virtual gateway&#39;s listener&#39;s Transport Layer Security (TLS) validation context.
     * 
     */
    @Import(name="subjectAlternativeNames")
    private @Nullable Output<VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesArgs> subjectAlternativeNames;

    /**
     * @return SANs for a virtual gateway&#39;s listener&#39;s Transport Layer Security (TLS) validation context.
     * 
     */
    public Optional<Output<VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesArgs>> subjectAlternativeNames() {
        return Optional.ofNullable(this.subjectAlternativeNames);
    }

    /**
     * TLS validation context trust.
     * 
     */
    @Import(name="trust", required=true)
    private Output<VirtualGatewaySpecListenerTlsValidationTrustArgs> trust;

    /**
     * @return TLS validation context trust.
     * 
     */
    public Output<VirtualGatewaySpecListenerTlsValidationTrustArgs> trust() {
        return this.trust;
    }

    private VirtualGatewaySpecListenerTlsValidationArgs() {}

    private VirtualGatewaySpecListenerTlsValidationArgs(VirtualGatewaySpecListenerTlsValidationArgs $) {
        this.subjectAlternativeNames = $.subjectAlternativeNames;
        this.trust = $.trust;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualGatewaySpecListenerTlsValidationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualGatewaySpecListenerTlsValidationArgs $;

        public Builder() {
            $ = new VirtualGatewaySpecListenerTlsValidationArgs();
        }

        public Builder(VirtualGatewaySpecListenerTlsValidationArgs defaults) {
            $ = new VirtualGatewaySpecListenerTlsValidationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param subjectAlternativeNames SANs for a virtual gateway&#39;s listener&#39;s Transport Layer Security (TLS) validation context.
         * 
         * @return builder
         * 
         */
        public Builder subjectAlternativeNames(@Nullable Output<VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesArgs> subjectAlternativeNames) {
            $.subjectAlternativeNames = subjectAlternativeNames;
            return this;
        }

        /**
         * @param subjectAlternativeNames SANs for a virtual gateway&#39;s listener&#39;s Transport Layer Security (TLS) validation context.
         * 
         * @return builder
         * 
         */
        public Builder subjectAlternativeNames(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesArgs subjectAlternativeNames) {
            return subjectAlternativeNames(Output.of(subjectAlternativeNames));
        }

        /**
         * @param trust TLS validation context trust.
         * 
         * @return builder
         * 
         */
        public Builder trust(Output<VirtualGatewaySpecListenerTlsValidationTrustArgs> trust) {
            $.trust = trust;
            return this;
        }

        /**
         * @param trust TLS validation context trust.
         * 
         * @return builder
         * 
         */
        public Builder trust(VirtualGatewaySpecListenerTlsValidationTrustArgs trust) {
            return trust(Output.of(trust));
        }

        public VirtualGatewaySpecListenerTlsValidationArgs build() {
            if ($.trust == null) {
                throw new MissingRequiredPropertyException("VirtualGatewaySpecListenerTlsValidationArgs", "trust");
            }
            return $;
        }
    }

}
