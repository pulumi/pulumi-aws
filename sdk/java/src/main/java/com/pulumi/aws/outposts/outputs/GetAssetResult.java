// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.outposts.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAssetResult {
    private String arn;
    private String assetId;
    /**
     * @return Type of the asset.
     * 
     */
    private String assetType;
    /**
     * @return Host ID of the Dedicated Hosts on the asset, if a Dedicated Host is provisioned.
     * 
     */
    private String hostId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Position of an asset in a rack measured in rack units.
     * 
     */
    private Integer rackElevation;
    /**
     * @return Rack ID of the asset.
     * 
     */
    private String rackId;

    private GetAssetResult() {}
    public String arn() {
        return this.arn;
    }
    public String assetId() {
        return this.assetId;
    }
    /**
     * @return Type of the asset.
     * 
     */
    public String assetType() {
        return this.assetType;
    }
    /**
     * @return Host ID of the Dedicated Hosts on the asset, if a Dedicated Host is provisioned.
     * 
     */
    public String hostId() {
        return this.hostId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Position of an asset in a rack measured in rack units.
     * 
     */
    public Integer rackElevation() {
        return this.rackElevation;
    }
    /**
     * @return Rack ID of the asset.
     * 
     */
    public String rackId() {
        return this.rackId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAssetResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private String assetId;
        private String assetType;
        private String hostId;
        private String id;
        private Integer rackElevation;
        private String rackId;
        public Builder() {}
        public Builder(GetAssetResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.assetId = defaults.assetId;
    	      this.assetType = defaults.assetType;
    	      this.hostId = defaults.hostId;
    	      this.id = defaults.id;
    	      this.rackElevation = defaults.rackElevation;
    	      this.rackId = defaults.rackId;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            if (arn == null) {
              throw new MissingRequiredPropertyException("GetAssetResult", "arn");
            }
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder assetId(String assetId) {
            if (assetId == null) {
              throw new MissingRequiredPropertyException("GetAssetResult", "assetId");
            }
            this.assetId = assetId;
            return this;
        }
        @CustomType.Setter
        public Builder assetType(String assetType) {
            if (assetType == null) {
              throw new MissingRequiredPropertyException("GetAssetResult", "assetType");
            }
            this.assetType = assetType;
            return this;
        }
        @CustomType.Setter
        public Builder hostId(String hostId) {
            if (hostId == null) {
              throw new MissingRequiredPropertyException("GetAssetResult", "hostId");
            }
            this.hostId = hostId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAssetResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder rackElevation(Integer rackElevation) {
            if (rackElevation == null) {
              throw new MissingRequiredPropertyException("GetAssetResult", "rackElevation");
            }
            this.rackElevation = rackElevation;
            return this;
        }
        @CustomType.Setter
        public Builder rackId(String rackId) {
            if (rackId == null) {
              throw new MissingRequiredPropertyException("GetAssetResult", "rackId");
            }
            this.rackId = rackId;
            return this;
        }
        public GetAssetResult build() {
            final var _resultValue = new GetAssetResult();
            _resultValue.arn = arn;
            _resultValue.assetId = assetId;
            _resultValue.assetType = assetType;
            _resultValue.hostId = hostId;
            _resultValue.id = id;
            _resultValue.rackElevation = rackElevation;
            _resultValue.rackId = rackId;
            return _resultValue;
        }
    }
}
