// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudfront.outputs;

import com.pulumi.aws.cloudfront.outputs.ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy;
import com.pulumi.aws.cloudfront.outputs.ResponseHeadersPolicySecurityHeadersConfigContentTypeOptions;
import com.pulumi.aws.cloudfront.outputs.ResponseHeadersPolicySecurityHeadersConfigFrameOptions;
import com.pulumi.aws.cloudfront.outputs.ResponseHeadersPolicySecurityHeadersConfigReferrerPolicy;
import com.pulumi.aws.cloudfront.outputs.ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity;
import com.pulumi.aws.cloudfront.outputs.ResponseHeadersPolicySecurityHeadersConfigXssProtection;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ResponseHeadersPolicySecurityHeadersConfig {
    /**
     * @return The policy directives and their values that CloudFront includes as values for the `Content-Security-Policy` HTTP response header. See Content Security Policy for more information.
     * 
     */
    private @Nullable ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy contentSecurityPolicy;
    /**
     * @return Determines whether CloudFront includes the `X-Content-Type-Options` HTTP response header with its value set to `nosniff`. See Content Type Options for more information.
     * 
     */
    private @Nullable ResponseHeadersPolicySecurityHeadersConfigContentTypeOptions contentTypeOptions;
    /**
     * @return Determines whether CloudFront includes the `X-Frame-Options` HTTP response header and the header’s value. See Frame Options for more information.
     * 
     */
    private @Nullable ResponseHeadersPolicySecurityHeadersConfigFrameOptions frameOptions;
    /**
     * @return Determines whether CloudFront includes the `Referrer-Policy` HTTP response header and the header’s value. See Referrer Policy for more information.
     * 
     */
    private @Nullable ResponseHeadersPolicySecurityHeadersConfigReferrerPolicy referrerPolicy;
    /**
     * @return Determines whether CloudFront includes the `Strict-Transport-Security` HTTP response header and the header’s value. See Strict Transport Security for more information.
     * 
     */
    private @Nullable ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity strictTransportSecurity;
    /**
     * @return Determine whether CloudFront includes the `X-XSS-Protection` HTTP response header and the header’s value. See XSS Protection for more information.
     * 
     */
    private @Nullable ResponseHeadersPolicySecurityHeadersConfigXssProtection xssProtection;

    private ResponseHeadersPolicySecurityHeadersConfig() {}
    /**
     * @return The policy directives and their values that CloudFront includes as values for the `Content-Security-Policy` HTTP response header. See Content Security Policy for more information.
     * 
     */
    public Optional<ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy> contentSecurityPolicy() {
        return Optional.ofNullable(this.contentSecurityPolicy);
    }
    /**
     * @return Determines whether CloudFront includes the `X-Content-Type-Options` HTTP response header with its value set to `nosniff`. See Content Type Options for more information.
     * 
     */
    public Optional<ResponseHeadersPolicySecurityHeadersConfigContentTypeOptions> contentTypeOptions() {
        return Optional.ofNullable(this.contentTypeOptions);
    }
    /**
     * @return Determines whether CloudFront includes the `X-Frame-Options` HTTP response header and the header’s value. See Frame Options for more information.
     * 
     */
    public Optional<ResponseHeadersPolicySecurityHeadersConfigFrameOptions> frameOptions() {
        return Optional.ofNullable(this.frameOptions);
    }
    /**
     * @return Determines whether CloudFront includes the `Referrer-Policy` HTTP response header and the header’s value. See Referrer Policy for more information.
     * 
     */
    public Optional<ResponseHeadersPolicySecurityHeadersConfigReferrerPolicy> referrerPolicy() {
        return Optional.ofNullable(this.referrerPolicy);
    }
    /**
     * @return Determines whether CloudFront includes the `Strict-Transport-Security` HTTP response header and the header’s value. See Strict Transport Security for more information.
     * 
     */
    public Optional<ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity> strictTransportSecurity() {
        return Optional.ofNullable(this.strictTransportSecurity);
    }
    /**
     * @return Determine whether CloudFront includes the `X-XSS-Protection` HTTP response header and the header’s value. See XSS Protection for more information.
     * 
     */
    public Optional<ResponseHeadersPolicySecurityHeadersConfigXssProtection> xssProtection() {
        return Optional.ofNullable(this.xssProtection);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResponseHeadersPolicySecurityHeadersConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy contentSecurityPolicy;
        private @Nullable ResponseHeadersPolicySecurityHeadersConfigContentTypeOptions contentTypeOptions;
        private @Nullable ResponseHeadersPolicySecurityHeadersConfigFrameOptions frameOptions;
        private @Nullable ResponseHeadersPolicySecurityHeadersConfigReferrerPolicy referrerPolicy;
        private @Nullable ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity strictTransportSecurity;
        private @Nullable ResponseHeadersPolicySecurityHeadersConfigXssProtection xssProtection;
        public Builder() {}
        public Builder(ResponseHeadersPolicySecurityHeadersConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contentSecurityPolicy = defaults.contentSecurityPolicy;
    	      this.contentTypeOptions = defaults.contentTypeOptions;
    	      this.frameOptions = defaults.frameOptions;
    	      this.referrerPolicy = defaults.referrerPolicy;
    	      this.strictTransportSecurity = defaults.strictTransportSecurity;
    	      this.xssProtection = defaults.xssProtection;
        }

        @CustomType.Setter
        public Builder contentSecurityPolicy(@Nullable ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy contentSecurityPolicy) {
            this.contentSecurityPolicy = contentSecurityPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder contentTypeOptions(@Nullable ResponseHeadersPolicySecurityHeadersConfigContentTypeOptions contentTypeOptions) {
            this.contentTypeOptions = contentTypeOptions;
            return this;
        }
        @CustomType.Setter
        public Builder frameOptions(@Nullable ResponseHeadersPolicySecurityHeadersConfigFrameOptions frameOptions) {
            this.frameOptions = frameOptions;
            return this;
        }
        @CustomType.Setter
        public Builder referrerPolicy(@Nullable ResponseHeadersPolicySecurityHeadersConfigReferrerPolicy referrerPolicy) {
            this.referrerPolicy = referrerPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder strictTransportSecurity(@Nullable ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity strictTransportSecurity) {
            this.strictTransportSecurity = strictTransportSecurity;
            return this;
        }
        @CustomType.Setter
        public Builder xssProtection(@Nullable ResponseHeadersPolicySecurityHeadersConfigXssProtection xssProtection) {
            this.xssProtection = xssProtection;
            return this;
        }
        public ResponseHeadersPolicySecurityHeadersConfig build() {
            final var o = new ResponseHeadersPolicySecurityHeadersConfig();
            o.contentSecurityPolicy = contentSecurityPolicy;
            o.contentTypeOptions = contentTypeOptions;
            o.frameOptions = frameOptions;
            o.referrerPolicy = referrerPolicy;
            o.strictTransportSecurity = strictTransportSecurity;
            o.xssProtection = xssProtection;
            return o;
        }
    }
}
