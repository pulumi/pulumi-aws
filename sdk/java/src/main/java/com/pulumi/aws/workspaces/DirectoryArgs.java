// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.workspaces;

import com.pulumi.aws.workspaces.inputs.DirectorySelfServicePermissionsArgs;
import com.pulumi.aws.workspaces.inputs.DirectoryWorkspaceAccessPropertiesArgs;
import com.pulumi.aws.workspaces.inputs.DirectoryWorkspaceCreationPropertiesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DirectoryArgs extends com.pulumi.resources.ResourceArgs {

    public static final DirectoryArgs Empty = new DirectoryArgs();

    @Import(name="directoryId", required=true)
    private Output<String> directoryId;

    public Output<String> directoryId() {
        return this.directoryId;
    }

    @Import(name="ipGroupIds")
    private @Nullable Output<List<String>> ipGroupIds;

    public Optional<Output<List<String>>> ipGroupIds() {
        return Optional.ofNullable(this.ipGroupIds);
    }

    @Import(name="selfServicePermissions")
    private @Nullable Output<DirectorySelfServicePermissionsArgs> selfServicePermissions;

    public Optional<Output<DirectorySelfServicePermissionsArgs>> selfServicePermissions() {
        return Optional.ofNullable(this.selfServicePermissions);
    }

    @Import(name="subnetIds")
    private @Nullable Output<List<String>> subnetIds;

    public Optional<Output<List<String>>> subnetIds() {
        return Optional.ofNullable(this.subnetIds);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="workspaceAccessProperties")
    private @Nullable Output<DirectoryWorkspaceAccessPropertiesArgs> workspaceAccessProperties;

    public Optional<Output<DirectoryWorkspaceAccessPropertiesArgs>> workspaceAccessProperties() {
        return Optional.ofNullable(this.workspaceAccessProperties);
    }

    @Import(name="workspaceCreationProperties")
    private @Nullable Output<DirectoryWorkspaceCreationPropertiesArgs> workspaceCreationProperties;

    public Optional<Output<DirectoryWorkspaceCreationPropertiesArgs>> workspaceCreationProperties() {
        return Optional.ofNullable(this.workspaceCreationProperties);
    }

    private DirectoryArgs() {}

    private DirectoryArgs(DirectoryArgs $) {
        this.directoryId = $.directoryId;
        this.ipGroupIds = $.ipGroupIds;
        this.selfServicePermissions = $.selfServicePermissions;
        this.subnetIds = $.subnetIds;
        this.tags = $.tags;
        this.workspaceAccessProperties = $.workspaceAccessProperties;
        this.workspaceCreationProperties = $.workspaceCreationProperties;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DirectoryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DirectoryArgs $;

        public Builder() {
            $ = new DirectoryArgs();
        }

        public Builder(DirectoryArgs defaults) {
            $ = new DirectoryArgs(Objects.requireNonNull(defaults));
        }

        public Builder directoryId(Output<String> directoryId) {
            $.directoryId = directoryId;
            return this;
        }

        public Builder directoryId(String directoryId) {
            return directoryId(Output.of(directoryId));
        }

        public Builder ipGroupIds(@Nullable Output<List<String>> ipGroupIds) {
            $.ipGroupIds = ipGroupIds;
            return this;
        }

        public Builder ipGroupIds(List<String> ipGroupIds) {
            return ipGroupIds(Output.of(ipGroupIds));
        }

        public Builder ipGroupIds(String... ipGroupIds) {
            return ipGroupIds(List.of(ipGroupIds));
        }

        public Builder selfServicePermissions(@Nullable Output<DirectorySelfServicePermissionsArgs> selfServicePermissions) {
            $.selfServicePermissions = selfServicePermissions;
            return this;
        }

        public Builder selfServicePermissions(DirectorySelfServicePermissionsArgs selfServicePermissions) {
            return selfServicePermissions(Output.of(selfServicePermissions));
        }

        public Builder subnetIds(@Nullable Output<List<String>> subnetIds) {
            $.subnetIds = subnetIds;
            return this;
        }

        public Builder subnetIds(List<String> subnetIds) {
            return subnetIds(Output.of(subnetIds));
        }

        public Builder subnetIds(String... subnetIds) {
            return subnetIds(List.of(subnetIds));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder workspaceAccessProperties(@Nullable Output<DirectoryWorkspaceAccessPropertiesArgs> workspaceAccessProperties) {
            $.workspaceAccessProperties = workspaceAccessProperties;
            return this;
        }

        public Builder workspaceAccessProperties(DirectoryWorkspaceAccessPropertiesArgs workspaceAccessProperties) {
            return workspaceAccessProperties(Output.of(workspaceAccessProperties));
        }

        public Builder workspaceCreationProperties(@Nullable Output<DirectoryWorkspaceCreationPropertiesArgs> workspaceCreationProperties) {
            $.workspaceCreationProperties = workspaceCreationProperties;
            return this;
        }

        public Builder workspaceCreationProperties(DirectoryWorkspaceCreationPropertiesArgs workspaceCreationProperties) {
            return workspaceCreationProperties(Output.of(workspaceCreationProperties));
        }

        public DirectoryArgs build() {
            $.directoryId = Objects.requireNonNull($.directoryId, "expected parameter 'directoryId' to be non-null");
            return $;
        }
    }

}
