// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.wafv2.inputs;

import com.pulumi.aws.wafv2.inputs.RuleGroupRuleStatementNotStatementStatementRegexMatchStatementFieldToMatchCookiesMatchPatternArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class RuleGroupRuleStatementNotStatementStatementRegexMatchStatementFieldToMatchCookiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final RuleGroupRuleStatementNotStatementStatementRegexMatchStatementFieldToMatchCookiesArgs Empty = new RuleGroupRuleStatementNotStatementStatementRegexMatchStatementFieldToMatchCookiesArgs();

    /**
     * The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `included_cookies` or `excluded_cookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
     * 
     */
    @Import(name="matchPatterns", required=true)
    private Output<List<RuleGroupRuleStatementNotStatementStatementRegexMatchStatementFieldToMatchCookiesMatchPatternArgs>> matchPatterns;

    /**
     * @return The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `included_cookies` or `excluded_cookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
     * 
     */
    public Output<List<RuleGroupRuleStatementNotStatementStatementRegexMatchStatementFieldToMatchCookiesMatchPatternArgs>> matchPatterns() {
        return this.matchPatterns;
    }

    /**
     * The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
     * 
     */
    @Import(name="matchScope", required=true)
    private Output<String> matchScope;

    /**
     * @return The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
     * 
     */
    public Output<String> matchScope() {
        return this.matchScope;
    }

    /**
     * What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
     * 
     */
    @Import(name="oversizeHandling", required=true)
    private Output<String> oversizeHandling;

    /**
     * @return What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
     * 
     */
    public Output<String> oversizeHandling() {
        return this.oversizeHandling;
    }

    private RuleGroupRuleStatementNotStatementStatementRegexMatchStatementFieldToMatchCookiesArgs() {}

    private RuleGroupRuleStatementNotStatementStatementRegexMatchStatementFieldToMatchCookiesArgs(RuleGroupRuleStatementNotStatementStatementRegexMatchStatementFieldToMatchCookiesArgs $) {
        this.matchPatterns = $.matchPatterns;
        this.matchScope = $.matchScope;
        this.oversizeHandling = $.oversizeHandling;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RuleGroupRuleStatementNotStatementStatementRegexMatchStatementFieldToMatchCookiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RuleGroupRuleStatementNotStatementStatementRegexMatchStatementFieldToMatchCookiesArgs $;

        public Builder() {
            $ = new RuleGroupRuleStatementNotStatementStatementRegexMatchStatementFieldToMatchCookiesArgs();
        }

        public Builder(RuleGroupRuleStatementNotStatementStatementRegexMatchStatementFieldToMatchCookiesArgs defaults) {
            $ = new RuleGroupRuleStatementNotStatementStatementRegexMatchStatementFieldToMatchCookiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param matchPatterns The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `included_cookies` or `excluded_cookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
         * 
         * @return builder
         * 
         */
        public Builder matchPatterns(Output<List<RuleGroupRuleStatementNotStatementStatementRegexMatchStatementFieldToMatchCookiesMatchPatternArgs>> matchPatterns) {
            $.matchPatterns = matchPatterns;
            return this;
        }

        /**
         * @param matchPatterns The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `included_cookies` or `excluded_cookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
         * 
         * @return builder
         * 
         */
        public Builder matchPatterns(List<RuleGroupRuleStatementNotStatementStatementRegexMatchStatementFieldToMatchCookiesMatchPatternArgs> matchPatterns) {
            return matchPatterns(Output.of(matchPatterns));
        }

        /**
         * @param matchPatterns The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `included_cookies` or `excluded_cookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
         * 
         * @return builder
         * 
         */
        public Builder matchPatterns(RuleGroupRuleStatementNotStatementStatementRegexMatchStatementFieldToMatchCookiesMatchPatternArgs... matchPatterns) {
            return matchPatterns(List.of(matchPatterns));
        }

        /**
         * @param matchScope The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
         * 
         * @return builder
         * 
         */
        public Builder matchScope(Output<String> matchScope) {
            $.matchScope = matchScope;
            return this;
        }

        /**
         * @param matchScope The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
         * 
         * @return builder
         * 
         */
        public Builder matchScope(String matchScope) {
            return matchScope(Output.of(matchScope));
        }

        /**
         * @param oversizeHandling What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
         * 
         * @return builder
         * 
         */
        public Builder oversizeHandling(Output<String> oversizeHandling) {
            $.oversizeHandling = oversizeHandling;
            return this;
        }

        /**
         * @param oversizeHandling What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
         * 
         * @return builder
         * 
         */
        public Builder oversizeHandling(String oversizeHandling) {
            return oversizeHandling(Output.of(oversizeHandling));
        }

        public RuleGroupRuleStatementNotStatementStatementRegexMatchStatementFieldToMatchCookiesArgs build() {
            $.matchPatterns = Objects.requireNonNull($.matchPatterns, "expected parameter 'matchPatterns' to be non-null");
            $.matchScope = Objects.requireNonNull($.matchScope, "expected parameter 'matchScope' to be non-null");
            $.oversizeHandling = Objects.requireNonNull($.oversizeHandling, "expected parameter 'oversizeHandling' to be non-null");
            return $;
        }
    }

}
