// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.alb.outputs;

import com.pulumi.aws.alb.outputs.GetTargetGroupHealthCheck;
import com.pulumi.aws.alb.outputs.GetTargetGroupStickiness;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetTargetGroupResult {
    private @Nullable String arn;
    private @Nullable String arnSuffix;
    private @Nullable Boolean connectionTermination;
    private @Nullable Integer deregistrationDelay;
    private @Nullable GetTargetGroupHealthCheck healthCheck;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private @Nullable Boolean lambdaMultiValueHeadersEnabled;
    private @Nullable String loadBalancingAlgorithmType;
    private @Nullable String loadBalancingCrossZoneEnabled;
    private @Nullable String name;
    private @Nullable Integer port;
    private @Nullable String preserveClientIp;
    private @Nullable String protocol;
    private @Nullable String protocolVersion;
    private @Nullable Boolean proxyProtocolV2;
    private @Nullable Integer slowStart;
    private @Nullable GetTargetGroupStickiness stickiness;
    private @Nullable Map<String,String> tags;
    private @Nullable String targetType;
    private @Nullable String vpcId;

    private GetTargetGroupResult() {}
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    public Optional<String> arnSuffix() {
        return Optional.ofNullable(this.arnSuffix);
    }
    public Optional<Boolean> connectionTermination() {
        return Optional.ofNullable(this.connectionTermination);
    }
    public Optional<Integer> deregistrationDelay() {
        return Optional.ofNullable(this.deregistrationDelay);
    }
    public Optional<GetTargetGroupHealthCheck> healthCheck() {
        return Optional.ofNullable(this.healthCheck);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<Boolean> lambdaMultiValueHeadersEnabled() {
        return Optional.ofNullable(this.lambdaMultiValueHeadersEnabled);
    }
    public Optional<String> loadBalancingAlgorithmType() {
        return Optional.ofNullable(this.loadBalancingAlgorithmType);
    }
    public Optional<String> loadBalancingCrossZoneEnabled() {
        return Optional.ofNullable(this.loadBalancingCrossZoneEnabled);
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<Integer> port() {
        return Optional.ofNullable(this.port);
    }
    public Optional<String> preserveClientIp() {
        return Optional.ofNullable(this.preserveClientIp);
    }
    public Optional<String> protocol() {
        return Optional.ofNullable(this.protocol);
    }
    public Optional<String> protocolVersion() {
        return Optional.ofNullable(this.protocolVersion);
    }
    public Optional<Boolean> proxyProtocolV2() {
        return Optional.ofNullable(this.proxyProtocolV2);
    }
    public Optional<Integer> slowStart() {
        return Optional.ofNullable(this.slowStart);
    }
    public Optional<GetTargetGroupStickiness> stickiness() {
        return Optional.ofNullable(this.stickiness);
    }
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public Optional<String> targetType() {
        return Optional.ofNullable(this.targetType);
    }
    public Optional<String> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTargetGroupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String arnSuffix;
        private @Nullable Boolean connectionTermination;
        private @Nullable Integer deregistrationDelay;
        private @Nullable GetTargetGroupHealthCheck healthCheck;
        private @Nullable String id;
        private @Nullable Boolean lambdaMultiValueHeadersEnabled;
        private @Nullable String loadBalancingAlgorithmType;
        private @Nullable String loadBalancingCrossZoneEnabled;
        private @Nullable String name;
        private @Nullable Integer port;
        private @Nullable String preserveClientIp;
        private @Nullable String protocol;
        private @Nullable String protocolVersion;
        private @Nullable Boolean proxyProtocolV2;
        private @Nullable Integer slowStart;
        private @Nullable GetTargetGroupStickiness stickiness;
        private @Nullable Map<String,String> tags;
        private @Nullable String targetType;
        private @Nullable String vpcId;
        public Builder() {}
        public Builder(GetTargetGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.arnSuffix = defaults.arnSuffix;
    	      this.connectionTermination = defaults.connectionTermination;
    	      this.deregistrationDelay = defaults.deregistrationDelay;
    	      this.healthCheck = defaults.healthCheck;
    	      this.id = defaults.id;
    	      this.lambdaMultiValueHeadersEnabled = defaults.lambdaMultiValueHeadersEnabled;
    	      this.loadBalancingAlgorithmType = defaults.loadBalancingAlgorithmType;
    	      this.loadBalancingCrossZoneEnabled = defaults.loadBalancingCrossZoneEnabled;
    	      this.name = defaults.name;
    	      this.port = defaults.port;
    	      this.preserveClientIp = defaults.preserveClientIp;
    	      this.protocol = defaults.protocol;
    	      this.protocolVersion = defaults.protocolVersion;
    	      this.proxyProtocolV2 = defaults.proxyProtocolV2;
    	      this.slowStart = defaults.slowStart;
    	      this.stickiness = defaults.stickiness;
    	      this.tags = defaults.tags;
    	      this.targetType = defaults.targetType;
    	      this.vpcId = defaults.vpcId;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder arnSuffix(@Nullable String arnSuffix) {
            this.arnSuffix = arnSuffix;
            return this;
        }
        @CustomType.Setter
        public Builder connectionTermination(@Nullable Boolean connectionTermination) {
            this.connectionTermination = connectionTermination;
            return this;
        }
        @CustomType.Setter
        public Builder deregistrationDelay(@Nullable Integer deregistrationDelay) {
            this.deregistrationDelay = deregistrationDelay;
            return this;
        }
        @CustomType.Setter
        public Builder healthCheck(@Nullable GetTargetGroupHealthCheck healthCheck) {
            this.healthCheck = healthCheck;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lambdaMultiValueHeadersEnabled(@Nullable Boolean lambdaMultiValueHeadersEnabled) {
            this.lambdaMultiValueHeadersEnabled = lambdaMultiValueHeadersEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancingAlgorithmType(@Nullable String loadBalancingAlgorithmType) {
            this.loadBalancingAlgorithmType = loadBalancingAlgorithmType;
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancingCrossZoneEnabled(@Nullable String loadBalancingCrossZoneEnabled) {
            this.loadBalancingCrossZoneEnabled = loadBalancingCrossZoneEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder port(@Nullable Integer port) {
            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder preserveClientIp(@Nullable String preserveClientIp) {
            this.preserveClientIp = preserveClientIp;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(@Nullable String protocol) {
            this.protocol = protocol;
            return this;
        }
        @CustomType.Setter
        public Builder protocolVersion(@Nullable String protocolVersion) {
            this.protocolVersion = protocolVersion;
            return this;
        }
        @CustomType.Setter
        public Builder proxyProtocolV2(@Nullable Boolean proxyProtocolV2) {
            this.proxyProtocolV2 = proxyProtocolV2;
            return this;
        }
        @CustomType.Setter
        public Builder slowStart(@Nullable Integer slowStart) {
            this.slowStart = slowStart;
            return this;
        }
        @CustomType.Setter
        public Builder stickiness(@Nullable GetTargetGroupStickiness stickiness) {
            this.stickiness = stickiness;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder targetType(@Nullable String targetType) {
            this.targetType = targetType;
            return this;
        }
        @CustomType.Setter
        public Builder vpcId(@Nullable String vpcId) {
            this.vpcId = vpcId;
            return this;
        }
        public GetTargetGroupResult build() {
            final var o = new GetTargetGroupResult();
            o.arn = arn;
            o.arnSuffix = arnSuffix;
            o.connectionTermination = connectionTermination;
            o.deregistrationDelay = deregistrationDelay;
            o.healthCheck = healthCheck;
            o.id = id;
            o.lambdaMultiValueHeadersEnabled = lambdaMultiValueHeadersEnabled;
            o.loadBalancingAlgorithmType = loadBalancingAlgorithmType;
            o.loadBalancingCrossZoneEnabled = loadBalancingCrossZoneEnabled;
            o.name = name;
            o.port = port;
            o.preserveClientIp = preserveClientIp;
            o.protocol = protocol;
            o.protocolVersion = protocolVersion;
            o.proxyProtocolV2 = proxyProtocolV2;
            o.slowStart = slowStart;
            o.stickiness = stickiness;
            o.tags = tags;
            o.targetType = targetType;
            o.vpcId = vpcId;
            return o;
        }
    }
}
