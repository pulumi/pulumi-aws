// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.identitystore.outputs;

import com.pulumi.aws.identitystore.outputs.GetGroupsGroupExternalId;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetGroupsGroup {
    /**
     * @return Description of the specified group.
     * 
     */
    private String description;
    /**
     * @return Group&#39;s display name.
     * 
     */
    private String displayName;
    /**
     * @return List of identifiers issued to this resource by an external identity provider.
     * 
     */
    private List<GetGroupsGroupExternalId> externalIds;
    /**
     * @return Identifier of the group in the Identity Store.
     * 
     */
    private String groupId;
    /**
     * @return Identity Store ID associated with the Single Sign-On (SSO) Instance.
     * 
     */
    private String identityStoreId;

    private GetGroupsGroup() {}
    /**
     * @return Description of the specified group.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Group&#39;s display name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return List of identifiers issued to this resource by an external identity provider.
     * 
     */
    public List<GetGroupsGroupExternalId> externalIds() {
        return this.externalIds;
    }
    /**
     * @return Identifier of the group in the Identity Store.
     * 
     */
    public String groupId() {
        return this.groupId;
    }
    /**
     * @return Identity Store ID associated with the Single Sign-On (SSO) Instance.
     * 
     */
    public String identityStoreId() {
        return this.identityStoreId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGroupsGroup defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String displayName;
        private List<GetGroupsGroupExternalId> externalIds;
        private String groupId;
        private String identityStoreId;
        public Builder() {}
        public Builder(GetGroupsGroup defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.externalIds = defaults.externalIds;
    	      this.groupId = defaults.groupId;
    	      this.identityStoreId = defaults.identityStoreId;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetGroupsGroup", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetGroupsGroup", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder externalIds(List<GetGroupsGroupExternalId> externalIds) {
            if (externalIds == null) {
              throw new MissingRequiredPropertyException("GetGroupsGroup", "externalIds");
            }
            this.externalIds = externalIds;
            return this;
        }
        public Builder externalIds(GetGroupsGroupExternalId... externalIds) {
            return externalIds(List.of(externalIds));
        }
        @CustomType.Setter
        public Builder groupId(String groupId) {
            if (groupId == null) {
              throw new MissingRequiredPropertyException("GetGroupsGroup", "groupId");
            }
            this.groupId = groupId;
            return this;
        }
        @CustomType.Setter
        public Builder identityStoreId(String identityStoreId) {
            if (identityStoreId == null) {
              throw new MissingRequiredPropertyException("GetGroupsGroup", "identityStoreId");
            }
            this.identityStoreId = identityStoreId;
            return this;
        }
        public GetGroupsGroup build() {
            final var _resultValue = new GetGroupsGroup();
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.externalIds = externalIds;
            _resultValue.groupId = groupId;
            _resultValue.identityStoreId = identityStoreId;
            return _resultValue;
        }
    }
}
