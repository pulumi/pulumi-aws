// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lakeformation.outputs;

import com.pulumi.aws.lakeformation.outputs.GetDataLakeSettingsCreateDatabaseDefaultPermission;
import com.pulumi.aws.lakeformation.outputs.GetDataLakeSettingsCreateTableDefaultPermission;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDataLakeSettingsResult {
    private List<String> admins;
    private @Nullable String catalogId;
    private List<GetDataLakeSettingsCreateDatabaseDefaultPermission> createDatabaseDefaultPermissions;
    private List<GetDataLakeSettingsCreateTableDefaultPermission> createTableDefaultPermissions;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private List<String> trustedResourceOwners;

    private GetDataLakeSettingsResult() {}
    public List<String> admins() {
        return this.admins;
    }
    public Optional<String> catalogId() {
        return Optional.ofNullable(this.catalogId);
    }
    public List<GetDataLakeSettingsCreateDatabaseDefaultPermission> createDatabaseDefaultPermissions() {
        return this.createDatabaseDefaultPermissions;
    }
    public List<GetDataLakeSettingsCreateTableDefaultPermission> createTableDefaultPermissions() {
        return this.createTableDefaultPermissions;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<String> trustedResourceOwners() {
        return this.trustedResourceOwners;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDataLakeSettingsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> admins;
        private @Nullable String catalogId;
        private List<GetDataLakeSettingsCreateDatabaseDefaultPermission> createDatabaseDefaultPermissions;
        private List<GetDataLakeSettingsCreateTableDefaultPermission> createTableDefaultPermissions;
        private String id;
        private List<String> trustedResourceOwners;
        public Builder() {}
        public Builder(GetDataLakeSettingsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.admins = defaults.admins;
    	      this.catalogId = defaults.catalogId;
    	      this.createDatabaseDefaultPermissions = defaults.createDatabaseDefaultPermissions;
    	      this.createTableDefaultPermissions = defaults.createTableDefaultPermissions;
    	      this.id = defaults.id;
    	      this.trustedResourceOwners = defaults.trustedResourceOwners;
        }

        @CustomType.Setter
        public Builder admins(List<String> admins) {
            this.admins = Objects.requireNonNull(admins);
            return this;
        }
        public Builder admins(String... admins) {
            return admins(List.of(admins));
        }
        @CustomType.Setter
        public Builder catalogId(@Nullable String catalogId) {
            this.catalogId = catalogId;
            return this;
        }
        @CustomType.Setter
        public Builder createDatabaseDefaultPermissions(List<GetDataLakeSettingsCreateDatabaseDefaultPermission> createDatabaseDefaultPermissions) {
            this.createDatabaseDefaultPermissions = Objects.requireNonNull(createDatabaseDefaultPermissions);
            return this;
        }
        public Builder createDatabaseDefaultPermissions(GetDataLakeSettingsCreateDatabaseDefaultPermission... createDatabaseDefaultPermissions) {
            return createDatabaseDefaultPermissions(List.of(createDatabaseDefaultPermissions));
        }
        @CustomType.Setter
        public Builder createTableDefaultPermissions(List<GetDataLakeSettingsCreateTableDefaultPermission> createTableDefaultPermissions) {
            this.createTableDefaultPermissions = Objects.requireNonNull(createTableDefaultPermissions);
            return this;
        }
        public Builder createTableDefaultPermissions(GetDataLakeSettingsCreateTableDefaultPermission... createTableDefaultPermissions) {
            return createTableDefaultPermissions(List.of(createTableDefaultPermissions));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder trustedResourceOwners(List<String> trustedResourceOwners) {
            this.trustedResourceOwners = Objects.requireNonNull(trustedResourceOwners);
            return this;
        }
        public Builder trustedResourceOwners(String... trustedResourceOwners) {
            return trustedResourceOwners(List.of(trustedResourceOwners));
        }
        public GetDataLakeSettingsResult build() {
            final var o = new GetDataLakeSettingsResult();
            o.admins = admins;
            o.catalogId = catalogId;
            o.createDatabaseDefaultPermissions = createDatabaseDefaultPermissions;
            o.createTableDefaultPermissions = createTableDefaultPermissions;
            o.id = id;
            o.trustedResourceOwners = trustedResourceOwners;
            return o;
        }
    }
}
