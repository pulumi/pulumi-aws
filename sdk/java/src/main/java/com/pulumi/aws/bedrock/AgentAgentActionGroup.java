// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.bedrock.AgentAgentActionGroupArgs;
import com.pulumi.aws.bedrock.inputs.AgentAgentActionGroupState;
import com.pulumi.aws.bedrock.outputs.AgentAgentActionGroupActionGroupExecutor;
import com.pulumi.aws.bedrock.outputs.AgentAgentActionGroupApiSchema;
import com.pulumi.aws.bedrock.outputs.AgentAgentActionGroupFunctionSchema;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for managing an AWS Agents for Amazon Bedrock Agent Action Group.
 * 
 * ## Example Usage
 * 
 * ### Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.bedrock.AgentAgentActionGroup;
 * import com.pulumi.aws.bedrock.AgentAgentActionGroupArgs;
 * import com.pulumi.aws.bedrock.inputs.AgentAgentActionGroupActionGroupExecutorArgs;
 * import com.pulumi.aws.bedrock.inputs.AgentAgentActionGroupApiSchemaArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new AgentAgentActionGroup("example", AgentAgentActionGroupArgs.builder()
 *             .actionGroupName("example")
 *             .agentId("GGRRAED6JP")
 *             .agentVersion("DRAFT")
 *             .skipResourceInUseCheck(true)
 *             .actionGroupExecutor(AgentAgentActionGroupActionGroupExecutorArgs.builder()
 *                 .lambda("arn:aws:lambda:us-west-2:123456789012:function:example-function")
 *                 .build())
 *             .apiSchema(AgentAgentActionGroupApiSchemaArgs.builder()
 *                 .payload(StdFunctions.file(FileArgs.builder()
 *                     .input("path/to/schema.yaml")
 *                     .build()).result())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### API Schema in S3 Bucket
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.bedrock.AgentAgentActionGroup;
 * import com.pulumi.aws.bedrock.AgentAgentActionGroupArgs;
 * import com.pulumi.aws.bedrock.inputs.AgentAgentActionGroupActionGroupExecutorArgs;
 * import com.pulumi.aws.bedrock.inputs.AgentAgentActionGroupApiSchemaArgs;
 * import com.pulumi.aws.bedrock.inputs.AgentAgentActionGroupApiSchemaS3Args;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new AgentAgentActionGroup("example", AgentAgentActionGroupArgs.builder()
 *             .actionGroupName("example")
 *             .agentId("GGRRAED6JP")
 *             .agentVersion("DRAFT")
 *             .skipResourceInUseCheck(true)
 *             .actionGroupExecutor(AgentAgentActionGroupActionGroupExecutorArgs.builder()
 *                 .lambda("arn:aws:lambda:us-west-2:123456789012:function:example-function")
 *                 .build())
 *             .apiSchema(AgentAgentActionGroupApiSchemaArgs.builder()
 *                 .s3(AgentAgentActionGroupApiSchemaS3Args.builder()
 *                     .s3BucketName("example-bucket")
 *                     .s3ObjectKey("path/to/schema.json")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Function Schema (Simplified Schema)
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.bedrock.AgentAgentActionGroup;
 * import com.pulumi.aws.bedrock.AgentAgentActionGroupArgs;
 * import com.pulumi.aws.bedrock.inputs.AgentAgentActionGroupActionGroupExecutorArgs;
 * import com.pulumi.aws.bedrock.inputs.AgentAgentActionGroupFunctionSchemaArgs;
 * import com.pulumi.aws.bedrock.inputs.AgentAgentActionGroupFunctionSchemaMemberFunctionsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new AgentAgentActionGroup("example", AgentAgentActionGroupArgs.builder()
 *             .actionGroupName("example")
 *             .agentId("GGRRAED6JP")
 *             .agentVersion("DRAFT")
 *             .skipResourceInUseCheck(true)
 *             .actionGroupExecutor(AgentAgentActionGroupActionGroupExecutorArgs.builder()
 *                 .lambda("arn:aws:lambda:us-west-2:123456789012:function:example-function")
 *                 .build())
 *             .functionSchema(AgentAgentActionGroupFunctionSchemaArgs.builder()
 *                 .memberFunctions(AgentAgentActionGroupFunctionSchemaMemberFunctionsArgs.builder()
 *                     .functions(AgentAgentActionGroupFunctionSchemaMemberFunctionsFunctionArgs.builder()
 *                         .name("example-function")
 *                         .description("Example function")
 *                         .parameters(                        
 *                             AgentAgentActionGroupFunctionSchemaMemberFunctionsFunctionParameterArgs.builder()
 *                                 .mapBlockKey("param1")
 *                                 .type("string")
 *                                 .description("The first parameter")
 *                                 .required(true)
 *                                 .build(),
 *                             AgentAgentActionGroupFunctionSchemaMemberFunctionsFunctionParameterArgs.builder()
 *                                 .mapBlockKey("param2")
 *                                 .type("integer")
 *                                 .description("The second parameter")
 *                                 .required(false)
 *                                 .build())
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Return of Control
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.bedrock.AgentAgentActionGroup;
 * import com.pulumi.aws.bedrock.AgentAgentActionGroupArgs;
 * import com.pulumi.aws.bedrock.inputs.AgentAgentActionGroupActionGroupExecutorArgs;
 * import com.pulumi.aws.bedrock.inputs.AgentAgentActionGroupApiSchemaArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new AgentAgentActionGroup("example", AgentAgentActionGroupArgs.builder()
 *             .actionGroupName("example")
 *             .agentId("GGRRAED6JP")
 *             .agentVersion("DRAFT")
 *             .skipResourceInUseCheck(true)
 *             .actionGroupExecutor(AgentAgentActionGroupActionGroupExecutorArgs.builder()
 *                 .customControl("RETURN_CONTROL")
 *                 .build())
 *             .apiSchema(AgentAgentActionGroupApiSchemaArgs.builder()
 *                 .payload(StdFunctions.file(FileArgs.builder()
 *                     .input("path/to/schema.yaml")
 *                     .build()).result())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Using `pulumi import`, import Agents for Amazon Bedrock Agent Action Group the action group ID, the agent ID, and the agent version separated by `,`. For example:
 * 
 * ```sh
 * $ pulumi import aws:bedrock/agentAgentActionGroup:AgentAgentActionGroup example MMAUDBZTH4,GGRRAED6JP,DRAFT
 * ```
 * 
 */
@ResourceType(type="aws:bedrock/agentAgentActionGroup:AgentAgentActionGroup")
public class AgentAgentActionGroup extends com.pulumi.resources.CustomResource {
    /**
     * ARN of the Lambda function containing the business logic that is carried out upon invoking the action or custom control method for handling the information elicited from the user. See `action_group_executor` Block for details.
     * 
     * The following arguments are optional:
     * 
     */
    @Export(name="actionGroupExecutor", refs={AgentAgentActionGroupActionGroupExecutor.class}, tree="[0]")
    private Output</* @Nullable */ AgentAgentActionGroupActionGroupExecutor> actionGroupExecutor;

    /**
     * @return ARN of the Lambda function containing the business logic that is carried out upon invoking the action or custom control method for handling the information elicited from the user. See `action_group_executor` Block for details.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<Optional<AgentAgentActionGroupActionGroupExecutor>> actionGroupExecutor() {
        return Codegen.optional(this.actionGroupExecutor);
    }
    /**
     * Unique identifier of the action group.
     * 
     */
    @Export(name="actionGroupId", refs={String.class}, tree="[0]")
    private Output<String> actionGroupId;

    /**
     * @return Unique identifier of the action group.
     * 
     */
    public Output<String> actionGroupId() {
        return this.actionGroupId;
    }
    /**
     * Name of the action group.
     * 
     */
    @Export(name="actionGroupName", refs={String.class}, tree="[0]")
    private Output<String> actionGroupName;

    /**
     * @return Name of the action group.
     * 
     */
    public Output<String> actionGroupName() {
        return this.actionGroupName;
    }
    /**
     * Whether the action group is available for the agent to invoke or not when sending an [InvokeAgent](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html) request. Valid values: `ENABLED`, `DISABLED`.
     * 
     */
    @Export(name="actionGroupState", refs={String.class}, tree="[0]")
    private Output<String> actionGroupState;

    /**
     * @return Whether the action group is available for the agent to invoke or not when sending an [InvokeAgent](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html) request. Valid values: `ENABLED`, `DISABLED`.
     * 
     */
    public Output<String> actionGroupState() {
        return this.actionGroupState;
    }
    /**
     * The unique identifier of the agent for which to create the action group.
     * 
     */
    @Export(name="agentId", refs={String.class}, tree="[0]")
    private Output<String> agentId;

    /**
     * @return The unique identifier of the agent for which to create the action group.
     * 
     */
    public Output<String> agentId() {
        return this.agentId;
    }
    /**
     * Version of the agent for which to create the action group. Valid values: `DRAFT`.
     * 
     */
    @Export(name="agentVersion", refs={String.class}, tree="[0]")
    private Output<String> agentVersion;

    /**
     * @return Version of the agent for which to create the action group. Valid values: `DRAFT`.
     * 
     */
    public Output<String> agentVersion() {
        return this.agentVersion;
    }
    /**
     * Either details about the S3 object containing the OpenAPI schema for the action group or the JSON or YAML-formatted payload defining the schema. For more information, see [Action group OpenAPI schemas](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-api-schema.html). See `api_schema` Block for details.
     * 
     */
    @Export(name="apiSchema", refs={AgentAgentActionGroupApiSchema.class}, tree="[0]")
    private Output</* @Nullable */ AgentAgentActionGroupApiSchema> apiSchema;

    /**
     * @return Either details about the S3 object containing the OpenAPI schema for the action group or the JSON or YAML-formatted payload defining the schema. For more information, see [Action group OpenAPI schemas](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-api-schema.html). See `api_schema` Block for details.
     * 
     */
    public Output<Optional<AgentAgentActionGroupApiSchema>> apiSchema() {
        return Codegen.optional(this.apiSchema);
    }
    /**
     * Description of the action group.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the action group.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Describes the function schema for the action group.
     * Each function represents an action in an action group.
     * See `function_schema` Block for details.
     * 
     */
    @Export(name="functionSchema", refs={AgentAgentActionGroupFunctionSchema.class}, tree="[0]")
    private Output</* @Nullable */ AgentAgentActionGroupFunctionSchema> functionSchema;

    /**
     * @return Describes the function schema for the action group.
     * Each function represents an action in an action group.
     * See `function_schema` Block for details.
     * 
     */
    public Output<Optional<AgentAgentActionGroupFunctionSchema>> functionSchema() {
        return Codegen.optional(this.functionSchema);
    }
    /**
     * To allow your agent to request the user for additional information when trying to complete a task, set this argument to `AMAZON.UserInput`. You must leave the `description`, `api_schema`, and `action_group_executor` arguments blank for this action group. Valid values: `AMAZON.UserInput`.
     * 
     */
    @Export(name="parentActionGroupSignature", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> parentActionGroupSignature;

    /**
     * @return To allow your agent to request the user for additional information when trying to complete a task, set this argument to `AMAZON.UserInput`. You must leave the `description`, `api_schema`, and `action_group_executor` arguments blank for this action group. Valid values: `AMAZON.UserInput`.
     * 
     */
    public Output<Optional<String>> parentActionGroupSignature() {
        return Codegen.optional(this.parentActionGroupSignature);
    }
    /**
     * Whether the in-use check is skipped when deleting the action group.
     * 
     */
    @Export(name="skipResourceInUseCheck", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> skipResourceInUseCheck;

    /**
     * @return Whether the in-use check is skipped when deleting the action group.
     * 
     */
    public Output<Boolean> skipResourceInUseCheck() {
        return this.skipResourceInUseCheck;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AgentAgentActionGroup(String name) {
        this(name, AgentAgentActionGroupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AgentAgentActionGroup(String name, AgentAgentActionGroupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AgentAgentActionGroup(String name, AgentAgentActionGroupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:bedrock/agentAgentActionGroup:AgentAgentActionGroup", name, args == null ? AgentAgentActionGroupArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AgentAgentActionGroup(String name, Output<String> id, @Nullable AgentAgentActionGroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:bedrock/agentAgentActionGroup:AgentAgentActionGroup", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AgentAgentActionGroup get(String name, Output<String> id, @Nullable AgentAgentActionGroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AgentAgentActionGroup(name, id, state, options);
    }
}
