// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.odb.inputs;

import com.pulumi.aws.odb.inputs.NetworkManagedServiceManagedS3BackupAccessArgs;
import com.pulumi.aws.odb.inputs.NetworkManagedServiceS3AccessArgs;
import com.pulumi.aws.odb.inputs.NetworkManagedServiceServiceNetworkEndpointArgs;
import com.pulumi.aws.odb.inputs.NetworkManagedServiceZeroEtlAccessArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class NetworkManagedServiceArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkManagedServiceArgs Empty = new NetworkManagedServiceArgs();

    @Import(name="managedS3BackupAccesses", required=true)
    private Output<List<NetworkManagedServiceManagedS3BackupAccessArgs>> managedS3BackupAccesses;

    public Output<List<NetworkManagedServiceManagedS3BackupAccessArgs>> managedS3BackupAccesses() {
        return this.managedS3BackupAccesses;
    }

    @Import(name="managedServiceIpv4Cidrs", required=true)
    private Output<List<String>> managedServiceIpv4Cidrs;

    public Output<List<String>> managedServiceIpv4Cidrs() {
        return this.managedServiceIpv4Cidrs;
    }

    @Import(name="resourceGatewayArn", required=true)
    private Output<String> resourceGatewayArn;

    public Output<String> resourceGatewayArn() {
        return this.resourceGatewayArn;
    }

    /**
     * Specifies the configuration for Amazon S3 access from the ODB network.
     * 
     */
    @Import(name="s3Accesses", required=true)
    private Output<List<NetworkManagedServiceS3AccessArgs>> s3Accesses;

    /**
     * @return Specifies the configuration for Amazon S3 access from the ODB network.
     * 
     */
    public Output<List<NetworkManagedServiceS3AccessArgs>> s3Accesses() {
        return this.s3Accesses;
    }

    @Import(name="serviceNetworkArn", required=true)
    private Output<String> serviceNetworkArn;

    public Output<String> serviceNetworkArn() {
        return this.serviceNetworkArn;
    }

    @Import(name="serviceNetworkEndpoints", required=true)
    private Output<List<NetworkManagedServiceServiceNetworkEndpointArgs>> serviceNetworkEndpoints;

    public Output<List<NetworkManagedServiceServiceNetworkEndpointArgs>> serviceNetworkEndpoints() {
        return this.serviceNetworkEndpoints;
    }

    /**
     * Specifies the configuration for Zero-ETL access from the ODB network.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="zeroEtlAccesses", required=true)
    private Output<List<NetworkManagedServiceZeroEtlAccessArgs>> zeroEtlAccesses;

    /**
     * @return Specifies the configuration for Zero-ETL access from the ODB network.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<List<NetworkManagedServiceZeroEtlAccessArgs>> zeroEtlAccesses() {
        return this.zeroEtlAccesses;
    }

    private NetworkManagedServiceArgs() {}

    private NetworkManagedServiceArgs(NetworkManagedServiceArgs $) {
        this.managedS3BackupAccesses = $.managedS3BackupAccesses;
        this.managedServiceIpv4Cidrs = $.managedServiceIpv4Cidrs;
        this.resourceGatewayArn = $.resourceGatewayArn;
        this.s3Accesses = $.s3Accesses;
        this.serviceNetworkArn = $.serviceNetworkArn;
        this.serviceNetworkEndpoints = $.serviceNetworkEndpoints;
        this.zeroEtlAccesses = $.zeroEtlAccesses;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkManagedServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkManagedServiceArgs $;

        public Builder() {
            $ = new NetworkManagedServiceArgs();
        }

        public Builder(NetworkManagedServiceArgs defaults) {
            $ = new NetworkManagedServiceArgs(Objects.requireNonNull(defaults));
        }

        public Builder managedS3BackupAccesses(Output<List<NetworkManagedServiceManagedS3BackupAccessArgs>> managedS3BackupAccesses) {
            $.managedS3BackupAccesses = managedS3BackupAccesses;
            return this;
        }

        public Builder managedS3BackupAccesses(List<NetworkManagedServiceManagedS3BackupAccessArgs> managedS3BackupAccesses) {
            return managedS3BackupAccesses(Output.of(managedS3BackupAccesses));
        }

        public Builder managedS3BackupAccesses(NetworkManagedServiceManagedS3BackupAccessArgs... managedS3BackupAccesses) {
            return managedS3BackupAccesses(List.of(managedS3BackupAccesses));
        }

        public Builder managedServiceIpv4Cidrs(Output<List<String>> managedServiceIpv4Cidrs) {
            $.managedServiceIpv4Cidrs = managedServiceIpv4Cidrs;
            return this;
        }

        public Builder managedServiceIpv4Cidrs(List<String> managedServiceIpv4Cidrs) {
            return managedServiceIpv4Cidrs(Output.of(managedServiceIpv4Cidrs));
        }

        public Builder managedServiceIpv4Cidrs(String... managedServiceIpv4Cidrs) {
            return managedServiceIpv4Cidrs(List.of(managedServiceIpv4Cidrs));
        }

        public Builder resourceGatewayArn(Output<String> resourceGatewayArn) {
            $.resourceGatewayArn = resourceGatewayArn;
            return this;
        }

        public Builder resourceGatewayArn(String resourceGatewayArn) {
            return resourceGatewayArn(Output.of(resourceGatewayArn));
        }

        /**
         * @param s3Accesses Specifies the configuration for Amazon S3 access from the ODB network.
         * 
         * @return builder
         * 
         */
        public Builder s3Accesses(Output<List<NetworkManagedServiceS3AccessArgs>> s3Accesses) {
            $.s3Accesses = s3Accesses;
            return this;
        }

        /**
         * @param s3Accesses Specifies the configuration for Amazon S3 access from the ODB network.
         * 
         * @return builder
         * 
         */
        public Builder s3Accesses(List<NetworkManagedServiceS3AccessArgs> s3Accesses) {
            return s3Accesses(Output.of(s3Accesses));
        }

        /**
         * @param s3Accesses Specifies the configuration for Amazon S3 access from the ODB network.
         * 
         * @return builder
         * 
         */
        public Builder s3Accesses(NetworkManagedServiceS3AccessArgs... s3Accesses) {
            return s3Accesses(List.of(s3Accesses));
        }

        public Builder serviceNetworkArn(Output<String> serviceNetworkArn) {
            $.serviceNetworkArn = serviceNetworkArn;
            return this;
        }

        public Builder serviceNetworkArn(String serviceNetworkArn) {
            return serviceNetworkArn(Output.of(serviceNetworkArn));
        }

        public Builder serviceNetworkEndpoints(Output<List<NetworkManagedServiceServiceNetworkEndpointArgs>> serviceNetworkEndpoints) {
            $.serviceNetworkEndpoints = serviceNetworkEndpoints;
            return this;
        }

        public Builder serviceNetworkEndpoints(List<NetworkManagedServiceServiceNetworkEndpointArgs> serviceNetworkEndpoints) {
            return serviceNetworkEndpoints(Output.of(serviceNetworkEndpoints));
        }

        public Builder serviceNetworkEndpoints(NetworkManagedServiceServiceNetworkEndpointArgs... serviceNetworkEndpoints) {
            return serviceNetworkEndpoints(List.of(serviceNetworkEndpoints));
        }

        /**
         * @param zeroEtlAccesses Specifies the configuration for Zero-ETL access from the ODB network.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder zeroEtlAccesses(Output<List<NetworkManagedServiceZeroEtlAccessArgs>> zeroEtlAccesses) {
            $.zeroEtlAccesses = zeroEtlAccesses;
            return this;
        }

        /**
         * @param zeroEtlAccesses Specifies the configuration for Zero-ETL access from the ODB network.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder zeroEtlAccesses(List<NetworkManagedServiceZeroEtlAccessArgs> zeroEtlAccesses) {
            return zeroEtlAccesses(Output.of(zeroEtlAccesses));
        }

        /**
         * @param zeroEtlAccesses Specifies the configuration for Zero-ETL access from the ODB network.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder zeroEtlAccesses(NetworkManagedServiceZeroEtlAccessArgs... zeroEtlAccesses) {
            return zeroEtlAccesses(List.of(zeroEtlAccesses));
        }

        public NetworkManagedServiceArgs build() {
            if ($.managedS3BackupAccesses == null) {
                throw new MissingRequiredPropertyException("NetworkManagedServiceArgs", "managedS3BackupAccesses");
            }
            if ($.managedServiceIpv4Cidrs == null) {
                throw new MissingRequiredPropertyException("NetworkManagedServiceArgs", "managedServiceIpv4Cidrs");
            }
            if ($.resourceGatewayArn == null) {
                throw new MissingRequiredPropertyException("NetworkManagedServiceArgs", "resourceGatewayArn");
            }
            if ($.s3Accesses == null) {
                throw new MissingRequiredPropertyException("NetworkManagedServiceArgs", "s3Accesses");
            }
            if ($.serviceNetworkArn == null) {
                throw new MissingRequiredPropertyException("NetworkManagedServiceArgs", "serviceNetworkArn");
            }
            if ($.serviceNetworkEndpoints == null) {
                throw new MissingRequiredPropertyException("NetworkManagedServiceArgs", "serviceNetworkEndpoints");
            }
            if ($.zeroEtlAccesses == null) {
                throw new MissingRequiredPropertyException("NetworkManagedServiceArgs", "zeroEtlAccesses");
            }
            return $;
        }
    }

}
