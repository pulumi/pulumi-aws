// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.servicecatalog.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ProvisionedProductStackSetProvisioningPreferences {
    private @Nullable List<String> accounts;
    private @Nullable Integer failureToleranceCount;
    private @Nullable Integer failureTolerancePercentage;
    private @Nullable Integer maxConcurrencyCount;
    private @Nullable Integer maxConcurrencyPercentage;
    private @Nullable List<String> regions;

    private ProvisionedProductStackSetProvisioningPreferences() {}
    public List<String> accounts() {
        return this.accounts == null ? List.of() : this.accounts;
    }
    public Optional<Integer> failureToleranceCount() {
        return Optional.ofNullable(this.failureToleranceCount);
    }
    public Optional<Integer> failureTolerancePercentage() {
        return Optional.ofNullable(this.failureTolerancePercentage);
    }
    public Optional<Integer> maxConcurrencyCount() {
        return Optional.ofNullable(this.maxConcurrencyCount);
    }
    public Optional<Integer> maxConcurrencyPercentage() {
        return Optional.ofNullable(this.maxConcurrencyPercentage);
    }
    public List<String> regions() {
        return this.regions == null ? List.of() : this.regions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProvisionedProductStackSetProvisioningPreferences defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> accounts;
        private @Nullable Integer failureToleranceCount;
        private @Nullable Integer failureTolerancePercentage;
        private @Nullable Integer maxConcurrencyCount;
        private @Nullable Integer maxConcurrencyPercentage;
        private @Nullable List<String> regions;
        public Builder() {}
        public Builder(ProvisionedProductStackSetProvisioningPreferences defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accounts = defaults.accounts;
    	      this.failureToleranceCount = defaults.failureToleranceCount;
    	      this.failureTolerancePercentage = defaults.failureTolerancePercentage;
    	      this.maxConcurrencyCount = defaults.maxConcurrencyCount;
    	      this.maxConcurrencyPercentage = defaults.maxConcurrencyPercentage;
    	      this.regions = defaults.regions;
        }

        @CustomType.Setter
        public Builder accounts(@Nullable List<String> accounts) {
            this.accounts = accounts;
            return this;
        }
        public Builder accounts(String... accounts) {
            return accounts(List.of(accounts));
        }
        @CustomType.Setter
        public Builder failureToleranceCount(@Nullable Integer failureToleranceCount) {
            this.failureToleranceCount = failureToleranceCount;
            return this;
        }
        @CustomType.Setter
        public Builder failureTolerancePercentage(@Nullable Integer failureTolerancePercentage) {
            this.failureTolerancePercentage = failureTolerancePercentage;
            return this;
        }
        @CustomType.Setter
        public Builder maxConcurrencyCount(@Nullable Integer maxConcurrencyCount) {
            this.maxConcurrencyCount = maxConcurrencyCount;
            return this;
        }
        @CustomType.Setter
        public Builder maxConcurrencyPercentage(@Nullable Integer maxConcurrencyPercentage) {
            this.maxConcurrencyPercentage = maxConcurrencyPercentage;
            return this;
        }
        @CustomType.Setter
        public Builder regions(@Nullable List<String> regions) {
            this.regions = regions;
            return this;
        }
        public Builder regions(String... regions) {
            return regions(List.of(regions));
        }
        public ProvisionedProductStackSetProvisioningPreferences build() {
            final var o = new ProvisionedProductStackSetProvisioningPreferences();
            o.accounts = accounts;
            o.failureToleranceCount = failureToleranceCount;
            o.failureTolerancePercentage = failureTolerancePercentage;
            o.maxConcurrencyCount = maxConcurrencyCount;
            o.maxConcurrencyPercentage = maxConcurrencyPercentage;
            o.regions = regions;
            return o;
        }
    }
}
