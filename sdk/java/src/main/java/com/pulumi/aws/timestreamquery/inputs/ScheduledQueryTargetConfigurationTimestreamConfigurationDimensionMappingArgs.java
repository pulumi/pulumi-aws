// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.timestreamquery.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArgs Empty = new ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArgs();

    /**
     * Type for the dimension. Valid value: `VARCHAR`.
     * 
     */
    @Import(name="dimensionValueType", required=true)
    private Output<String> dimensionValueType;

    /**
     * @return Type for the dimension. Valid value: `VARCHAR`.
     * 
     */
    public Output<String> dimensionValueType() {
        return this.dimensionValueType;
    }

    /**
     * Column name from query result.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Column name from query result.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArgs() {}

    private ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArgs(ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArgs $) {
        this.dimensionValueType = $.dimensionValueType;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArgs $;

        public Builder() {
            $ = new ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArgs();
        }

        public Builder(ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArgs defaults) {
            $ = new ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dimensionValueType Type for the dimension. Valid value: `VARCHAR`.
         * 
         * @return builder
         * 
         */
        public Builder dimensionValueType(Output<String> dimensionValueType) {
            $.dimensionValueType = dimensionValueType;
            return this;
        }

        /**
         * @param dimensionValueType Type for the dimension. Valid value: `VARCHAR`.
         * 
         * @return builder
         * 
         */
        public Builder dimensionValueType(String dimensionValueType) {
            return dimensionValueType(Output.of(dimensionValueType));
        }

        /**
         * @param name Column name from query result.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Column name from query result.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArgs build() {
            if ($.dimensionValueType == null) {
                throw new MissingRequiredPropertyException("ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArgs", "dimensionValueType");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArgs", "name");
            }
            return $;
        }
    }

}
