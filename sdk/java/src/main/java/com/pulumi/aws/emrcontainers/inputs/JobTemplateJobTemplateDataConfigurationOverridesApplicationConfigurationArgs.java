// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.emrcontainers.inputs;

import com.pulumi.aws.emrcontainers.inputs.JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationArgs Empty = new JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationArgs();

    /**
     * The classification within a configuration.
     * 
     */
    @Import(name="classification", required=true)
    private Output<String> classification;

    /**
     * @return The classification within a configuration.
     * 
     */
    public Output<String> classification() {
        return this.classification;
    }

    /**
     * A list of additional configurations to apply within a configuration object.
     * 
     */
    @Import(name="configurations")
    private @Nullable Output<List<JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfigurationArgs>> configurations;

    /**
     * @return A list of additional configurations to apply within a configuration object.
     * 
     */
    public Optional<Output<List<JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfigurationArgs>>> configurations() {
        return Optional.ofNullable(this.configurations);
    }

    /**
     * A set of properties specified within a configuration classification.
     * 
     */
    @Import(name="properties")
    private @Nullable Output<Map<String,String>> properties;

    /**
     * @return A set of properties specified within a configuration classification.
     * 
     */
    public Optional<Output<Map<String,String>>> properties() {
        return Optional.ofNullable(this.properties);
    }

    private JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationArgs() {}

    private JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationArgs(JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationArgs $) {
        this.classification = $.classification;
        this.configurations = $.configurations;
        this.properties = $.properties;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationArgs $;

        public Builder() {
            $ = new JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationArgs();
        }

        public Builder(JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationArgs defaults) {
            $ = new JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param classification The classification within a configuration.
         * 
         * @return builder
         * 
         */
        public Builder classification(Output<String> classification) {
            $.classification = classification;
            return this;
        }

        /**
         * @param classification The classification within a configuration.
         * 
         * @return builder
         * 
         */
        public Builder classification(String classification) {
            return classification(Output.of(classification));
        }

        /**
         * @param configurations A list of additional configurations to apply within a configuration object.
         * 
         * @return builder
         * 
         */
        public Builder configurations(@Nullable Output<List<JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfigurationArgs>> configurations) {
            $.configurations = configurations;
            return this;
        }

        /**
         * @param configurations A list of additional configurations to apply within a configuration object.
         * 
         * @return builder
         * 
         */
        public Builder configurations(List<JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfigurationArgs> configurations) {
            return configurations(Output.of(configurations));
        }

        /**
         * @param configurations A list of additional configurations to apply within a configuration object.
         * 
         * @return builder
         * 
         */
        public Builder configurations(JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfigurationArgs... configurations) {
            return configurations(List.of(configurations));
        }

        /**
         * @param properties A set of properties specified within a configuration classification.
         * 
         * @return builder
         * 
         */
        public Builder properties(@Nullable Output<Map<String,String>> properties) {
            $.properties = properties;
            return this;
        }

        /**
         * @param properties A set of properties specified within a configuration classification.
         * 
         * @return builder
         * 
         */
        public Builder properties(Map<String,String> properties) {
            return properties(Output.of(properties));
        }

        public JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationArgs build() {
            $.classification = Objects.requireNonNull($.classification, "expected parameter 'classification' to be non-null");
            return $;
        }
    }

}
