// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.servicequotas.outputs;

import com.pulumi.aws.servicequotas.outputs.GetServiceQuotaUsageMetric;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetServiceQuotaResult {
    /**
     * @return Whether the service quota is adjustable.
     * 
     */
    private Boolean adjustable;
    /**
     * @return ARN of the service quota.
     * 
     */
    private String arn;
    /**
     * @return Default value of the service quota.
     * 
     */
    private Double defaultValue;
    /**
     * @return Whether the service quota is global for the AWS account.
     * 
     */
    private Boolean globalQuota;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String quotaCode;
    private String quotaName;
    private String serviceCode;
    /**
     * @return Name of the service.
     * 
     */
    private String serviceName;
    /**
     * @return Information about the measurement.
     * 
     */
    private List<GetServiceQuotaUsageMetric> usageMetrics;
    /**
     * @return Current value of the service quota.
     * 
     */
    private Double value;

    private GetServiceQuotaResult() {}
    /**
     * @return Whether the service quota is adjustable.
     * 
     */
    public Boolean adjustable() {
        return this.adjustable;
    }
    /**
     * @return ARN of the service quota.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return Default value of the service quota.
     * 
     */
    public Double defaultValue() {
        return this.defaultValue;
    }
    /**
     * @return Whether the service quota is global for the AWS account.
     * 
     */
    public Boolean globalQuota() {
        return this.globalQuota;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String quotaCode() {
        return this.quotaCode;
    }
    public String quotaName() {
        return this.quotaName;
    }
    public String serviceCode() {
        return this.serviceCode;
    }
    /**
     * @return Name of the service.
     * 
     */
    public String serviceName() {
        return this.serviceName;
    }
    /**
     * @return Information about the measurement.
     * 
     */
    public List<GetServiceQuotaUsageMetric> usageMetrics() {
        return this.usageMetrics;
    }
    /**
     * @return Current value of the service quota.
     * 
     */
    public Double value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceQuotaResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean adjustable;
        private String arn;
        private Double defaultValue;
        private Boolean globalQuota;
        private String id;
        private String quotaCode;
        private String quotaName;
        private String serviceCode;
        private String serviceName;
        private List<GetServiceQuotaUsageMetric> usageMetrics;
        private Double value;
        public Builder() {}
        public Builder(GetServiceQuotaResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adjustable = defaults.adjustable;
    	      this.arn = defaults.arn;
    	      this.defaultValue = defaults.defaultValue;
    	      this.globalQuota = defaults.globalQuota;
    	      this.id = defaults.id;
    	      this.quotaCode = defaults.quotaCode;
    	      this.quotaName = defaults.quotaName;
    	      this.serviceCode = defaults.serviceCode;
    	      this.serviceName = defaults.serviceName;
    	      this.usageMetrics = defaults.usageMetrics;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder adjustable(Boolean adjustable) {
            this.adjustable = Objects.requireNonNull(adjustable);
            return this;
        }
        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder defaultValue(Double defaultValue) {
            this.defaultValue = Objects.requireNonNull(defaultValue);
            return this;
        }
        @CustomType.Setter
        public Builder globalQuota(Boolean globalQuota) {
            this.globalQuota = Objects.requireNonNull(globalQuota);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder quotaCode(String quotaCode) {
            this.quotaCode = Objects.requireNonNull(quotaCode);
            return this;
        }
        @CustomType.Setter
        public Builder quotaName(String quotaName) {
            this.quotaName = Objects.requireNonNull(quotaName);
            return this;
        }
        @CustomType.Setter
        public Builder serviceCode(String serviceCode) {
            this.serviceCode = Objects.requireNonNull(serviceCode);
            return this;
        }
        @CustomType.Setter
        public Builder serviceName(String serviceName) {
            this.serviceName = Objects.requireNonNull(serviceName);
            return this;
        }
        @CustomType.Setter
        public Builder usageMetrics(List<GetServiceQuotaUsageMetric> usageMetrics) {
            this.usageMetrics = Objects.requireNonNull(usageMetrics);
            return this;
        }
        public Builder usageMetrics(GetServiceQuotaUsageMetric... usageMetrics) {
            return usageMetrics(List.of(usageMetrics));
        }
        @CustomType.Setter
        public Builder value(Double value) {
            this.value = Objects.requireNonNull(value);
            return this;
        }
        public GetServiceQuotaResult build() {
            final var _resultValue = new GetServiceQuotaResult();
            _resultValue.adjustable = adjustable;
            _resultValue.arn = arn;
            _resultValue.defaultValue = defaultValue;
            _resultValue.globalQuota = globalQuota;
            _resultValue.id = id;
            _resultValue.quotaCode = quotaCode;
            _resultValue.quotaName = quotaName;
            _resultValue.serviceCode = serviceCode;
            _resultValue.serviceName = serviceName;
            _resultValue.usageMetrics = usageMetrics;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
