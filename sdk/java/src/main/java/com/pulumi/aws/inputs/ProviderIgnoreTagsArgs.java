// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProviderIgnoreTagsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProviderIgnoreTagsArgs Empty = new ProviderIgnoreTagsArgs();

    /**
     * Resource tag key prefixes to ignore across all resources.
     * 
     */
    @Import(name="keyPrefixes")
    private @Nullable Output<List<String>> keyPrefixes;

    /**
     * @return Resource tag key prefixes to ignore across all resources.
     * 
     */
    public Optional<Output<List<String>>> keyPrefixes() {
        return Optional.ofNullable(this.keyPrefixes);
    }

    /**
     * Resource tag keys to ignore across all resources.
     * 
     */
    @Import(name="keys")
    private @Nullable Output<List<String>> keys;

    /**
     * @return Resource tag keys to ignore across all resources.
     * 
     */
    public Optional<Output<List<String>>> keys() {
        return Optional.ofNullable(this.keys);
    }

    private ProviderIgnoreTagsArgs() {}

    private ProviderIgnoreTagsArgs(ProviderIgnoreTagsArgs $) {
        this.keyPrefixes = $.keyPrefixes;
        this.keys = $.keys;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProviderIgnoreTagsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProviderIgnoreTagsArgs $;

        public Builder() {
            $ = new ProviderIgnoreTagsArgs();
        }

        public Builder(ProviderIgnoreTagsArgs defaults) {
            $ = new ProviderIgnoreTagsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param keyPrefixes Resource tag key prefixes to ignore across all resources.
         * 
         * @return builder
         * 
         */
        public Builder keyPrefixes(@Nullable Output<List<String>> keyPrefixes) {
            $.keyPrefixes = keyPrefixes;
            return this;
        }

        /**
         * @param keyPrefixes Resource tag key prefixes to ignore across all resources.
         * 
         * @return builder
         * 
         */
        public Builder keyPrefixes(List<String> keyPrefixes) {
            return keyPrefixes(Output.of(keyPrefixes));
        }

        /**
         * @param keyPrefixes Resource tag key prefixes to ignore across all resources.
         * 
         * @return builder
         * 
         */
        public Builder keyPrefixes(String... keyPrefixes) {
            return keyPrefixes(List.of(keyPrefixes));
        }

        /**
         * @param keys Resource tag keys to ignore across all resources.
         * 
         * @return builder
         * 
         */
        public Builder keys(@Nullable Output<List<String>> keys) {
            $.keys = keys;
            return this;
        }

        /**
         * @param keys Resource tag keys to ignore across all resources.
         * 
         * @return builder
         * 
         */
        public Builder keys(List<String> keys) {
            return keys(Output.of(keys));
        }

        /**
         * @param keys Resource tag keys to ignore across all resources.
         * 
         * @return builder
         * 
         */
        public Builder keys(String... keys) {
            return keys(List.of(keys));
        }

        public ProviderIgnoreTagsArgs build() {
            return $;
        }
    }

}
