// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.directoryservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LogServiceState extends com.pulumi.resources.ResourceArgs {

    public static final LogServiceState Empty = new LogServiceState();

    @Import(name="directoryId")
    private @Nullable Output<String> directoryId;

    public Optional<Output<String>> directoryId() {
        return Optional.ofNullable(this.directoryId);
    }

    @Import(name="logGroupName")
    private @Nullable Output<String> logGroupName;

    public Optional<Output<String>> logGroupName() {
        return Optional.ofNullable(this.logGroupName);
    }

    private LogServiceState() {}

    private LogServiceState(LogServiceState $) {
        this.directoryId = $.directoryId;
        this.logGroupName = $.logGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogServiceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogServiceState $;

        public Builder() {
            $ = new LogServiceState();
        }

        public Builder(LogServiceState defaults) {
            $ = new LogServiceState(Objects.requireNonNull(defaults));
        }

        public Builder directoryId(@Nullable Output<String> directoryId) {
            $.directoryId = directoryId;
            return this;
        }

        public Builder directoryId(String directoryId) {
            return directoryId(Output.of(directoryId));
        }

        public Builder logGroupName(@Nullable Output<String> logGroupName) {
            $.logGroupName = logGroupName;
            return this;
        }

        public Builder logGroupName(String logGroupName) {
            return logGroupName(Output.of(logGroupName));
        }

        public LogServiceState build() {
            return $;
        }
    }

}
