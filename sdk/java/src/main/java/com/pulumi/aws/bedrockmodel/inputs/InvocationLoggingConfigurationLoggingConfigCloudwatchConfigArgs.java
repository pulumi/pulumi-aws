// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrockmodel.inputs;

import com.pulumi.aws.bedrockmodel.inputs.InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InvocationLoggingConfigurationLoggingConfigCloudwatchConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final InvocationLoggingConfigurationLoggingConfigCloudwatchConfigArgs Empty = new InvocationLoggingConfigurationLoggingConfigCloudwatchConfigArgs();

    /**
     * S3 configuration for delivering a large amount of data. See `s3_config`.
     * 
     */
    @Import(name="largeDataDeliveryS3Config")
    private @Nullable Output<InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigArgs> largeDataDeliveryS3Config;

    /**
     * @return S3 configuration for delivering a large amount of data. See `s3_config`.
     * 
     */
    public Optional<Output<InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigArgs>> largeDataDeliveryS3Config() {
        return Optional.ofNullable(this.largeDataDeliveryS3Config);
    }

    /**
     * Log group name.
     * 
     */
    @Import(name="logGroupName")
    private @Nullable Output<String> logGroupName;

    /**
     * @return Log group name.
     * 
     */
    public Optional<Output<String>> logGroupName() {
        return Optional.ofNullable(this.logGroupName);
    }

    /**
     * IAM Role ARN.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="roleArn")
    private @Nullable Output<String> roleArn;

    /**
     * @return IAM Role ARN.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<String>> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }

    private InvocationLoggingConfigurationLoggingConfigCloudwatchConfigArgs() {}

    private InvocationLoggingConfigurationLoggingConfigCloudwatchConfigArgs(InvocationLoggingConfigurationLoggingConfigCloudwatchConfigArgs $) {
        this.largeDataDeliveryS3Config = $.largeDataDeliveryS3Config;
        this.logGroupName = $.logGroupName;
        this.roleArn = $.roleArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InvocationLoggingConfigurationLoggingConfigCloudwatchConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InvocationLoggingConfigurationLoggingConfigCloudwatchConfigArgs $;

        public Builder() {
            $ = new InvocationLoggingConfigurationLoggingConfigCloudwatchConfigArgs();
        }

        public Builder(InvocationLoggingConfigurationLoggingConfigCloudwatchConfigArgs defaults) {
            $ = new InvocationLoggingConfigurationLoggingConfigCloudwatchConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param largeDataDeliveryS3Config S3 configuration for delivering a large amount of data. See `s3_config`.
         * 
         * @return builder
         * 
         */
        public Builder largeDataDeliveryS3Config(@Nullable Output<InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigArgs> largeDataDeliveryS3Config) {
            $.largeDataDeliveryS3Config = largeDataDeliveryS3Config;
            return this;
        }

        /**
         * @param largeDataDeliveryS3Config S3 configuration for delivering a large amount of data. See `s3_config`.
         * 
         * @return builder
         * 
         */
        public Builder largeDataDeliveryS3Config(InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigArgs largeDataDeliveryS3Config) {
            return largeDataDeliveryS3Config(Output.of(largeDataDeliveryS3Config));
        }

        /**
         * @param logGroupName Log group name.
         * 
         * @return builder
         * 
         */
        public Builder logGroupName(@Nullable Output<String> logGroupName) {
            $.logGroupName = logGroupName;
            return this;
        }

        /**
         * @param logGroupName Log group name.
         * 
         * @return builder
         * 
         */
        public Builder logGroupName(String logGroupName) {
            return logGroupName(Output.of(logGroupName));
        }

        /**
         * @param roleArn IAM Role ARN.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder roleArn(@Nullable Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn IAM Role ARN.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public InvocationLoggingConfigurationLoggingConfigCloudwatchConfigArgs build() {
            return $;
        }
    }

}
