// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ssmincidents.inputs;

import com.pulumi.aws.ssmincidents.inputs.ReplicationSetRegionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ReplicationSetState extends com.pulumi.resources.ResourceArgs {

    public static final ReplicationSetState Empty = new ReplicationSetState();

    /**
     * The ARN of the replication set.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return The ARN of the replication set.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * The ARN of the user who created the replication set.
     * 
     */
    @Import(name="createdBy")
    private @Nullable Output<String> createdBy;

    /**
     * @return The ARN of the user who created the replication set.
     * 
     */
    public Optional<Output<String>> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }

    /**
     * If `true`, the last region in a replication set cannot be deleted.
     * 
     */
    @Import(name="deletionProtected")
    private @Nullable Output<Boolean> deletionProtected;

    /**
     * @return If `true`, the last region in a replication set cannot be deleted.
     * 
     */
    public Optional<Output<Boolean>> deletionProtected() {
        return Optional.ofNullable(this.deletionProtected);
    }

    /**
     * A timestamp showing when the replication set was last modified.
     * 
     */
    @Import(name="lastModifiedBy")
    private @Nullable Output<String> lastModifiedBy;

    /**
     * @return A timestamp showing when the replication set was last modified.
     * 
     */
    public Optional<Output<String>> lastModifiedBy() {
        return Optional.ofNullable(this.lastModifiedBy);
    }

    @Import(name="regions")
    private @Nullable Output<List<ReplicationSetRegionArgs>> regions;

    public Optional<Output<List<ReplicationSetRegionArgs>>> regions() {
        return Optional.ofNullable(this.regions);
    }

    /**
     * The current status of the Region.
     * * Valid Values: `ACTIVE` | `CREATING` | `UPDATING` | `DELETING` | `FAILED`
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The current status of the Region.
     * * Valid Values: `ACTIVE` | `CREATING` | `UPDATING` | `DELETING` | `FAILED`
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Tags applied to the replication set.
     * 
     * For information about the maximum allowed number of Regions and tag value constraints, see [CreateReplicationSet in the *AWS Systems Manager Incident Manager API Reference*](https://docs.aws.amazon.com/incident-manager/latest/APIReference/API_CreateReplicationSet.html).
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Tags applied to the replication set.
     * 
     * For information about the maximum allowed number of Regions and tag value constraints, see [CreateReplicationSet in the *AWS Systems Manager Incident Manager API Reference*](https://docs.aws.amazon.com/incident-manager/latest/APIReference/API_CreateReplicationSet.html).
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private ReplicationSetState() {}

    private ReplicationSetState(ReplicationSetState $) {
        this.arn = $.arn;
        this.createdBy = $.createdBy;
        this.deletionProtected = $.deletionProtected;
        this.lastModifiedBy = $.lastModifiedBy;
        this.regions = $.regions;
        this.status = $.status;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReplicationSetState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReplicationSetState $;

        public Builder() {
            $ = new ReplicationSetState();
        }

        public Builder(ReplicationSetState defaults) {
            $ = new ReplicationSetState(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn The ARN of the replication set.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn The ARN of the replication set.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param createdBy The ARN of the user who created the replication set.
         * 
         * @return builder
         * 
         */
        public Builder createdBy(@Nullable Output<String> createdBy) {
            $.createdBy = createdBy;
            return this;
        }

        /**
         * @param createdBy The ARN of the user who created the replication set.
         * 
         * @return builder
         * 
         */
        public Builder createdBy(String createdBy) {
            return createdBy(Output.of(createdBy));
        }

        /**
         * @param deletionProtected If `true`, the last region in a replication set cannot be deleted.
         * 
         * @return builder
         * 
         */
        public Builder deletionProtected(@Nullable Output<Boolean> deletionProtected) {
            $.deletionProtected = deletionProtected;
            return this;
        }

        /**
         * @param deletionProtected If `true`, the last region in a replication set cannot be deleted.
         * 
         * @return builder
         * 
         */
        public Builder deletionProtected(Boolean deletionProtected) {
            return deletionProtected(Output.of(deletionProtected));
        }

        /**
         * @param lastModifiedBy A timestamp showing when the replication set was last modified.
         * 
         * @return builder
         * 
         */
        public Builder lastModifiedBy(@Nullable Output<String> lastModifiedBy) {
            $.lastModifiedBy = lastModifiedBy;
            return this;
        }

        /**
         * @param lastModifiedBy A timestamp showing when the replication set was last modified.
         * 
         * @return builder
         * 
         */
        public Builder lastModifiedBy(String lastModifiedBy) {
            return lastModifiedBy(Output.of(lastModifiedBy));
        }

        public Builder regions(@Nullable Output<List<ReplicationSetRegionArgs>> regions) {
            $.regions = regions;
            return this;
        }

        public Builder regions(List<ReplicationSetRegionArgs> regions) {
            return regions(Output.of(regions));
        }

        public Builder regions(ReplicationSetRegionArgs... regions) {
            return regions(List.of(regions));
        }

        /**
         * @param status The current status of the Region.
         * * Valid Values: `ACTIVE` | `CREATING` | `UPDATING` | `DELETING` | `FAILED`
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The current status of the Region.
         * * Valid Values: `ACTIVE` | `CREATING` | `UPDATING` | `DELETING` | `FAILED`
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param tags Tags applied to the replication set.
         * 
         * For information about the maximum allowed number of Regions and tag value constraints, see [CreateReplicationSet in the *AWS Systems Manager Incident Manager API Reference*](https://docs.aws.amazon.com/incident-manager/latest/APIReference/API_CreateReplicationSet.html).
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Tags applied to the replication set.
         * 
         * For information about the maximum allowed number of Regions and tag value constraints, see [CreateReplicationSet in the *AWS Systems Manager Incident Manager API Reference*](https://docs.aws.amazon.com/incident-manager/latest/APIReference/API_CreateReplicationSet.html).
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public ReplicationSetState build() {
            return $;
        }
    }

}
