// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.costexplorer.outputs;

import com.pulumi.aws.costexplorer.outputs.GetCostCategoryRuleInheritedValue;
import com.pulumi.aws.costexplorer.outputs.GetCostCategoryRuleRule;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCostCategoryRule {
    /**
     * @return Configuration block for the value the line item is categorized as if the line item contains the matched dimension. See below.
     * 
     */
    private List<GetCostCategoryRuleInheritedValue> inheritedValues;
    /**
     * @return Configuration block for the `Expression` object used to categorize costs. See below.
     * 
     */
    private List<GetCostCategoryRuleRule> rules;
    /**
     * @return Parameter type.
     * 
     */
    private String type;
    /**
     * @return Default value for the cost category.
     * 
     */
    private String value;

    private GetCostCategoryRule() {}
    /**
     * @return Configuration block for the value the line item is categorized as if the line item contains the matched dimension. See below.
     * 
     */
    public List<GetCostCategoryRuleInheritedValue> inheritedValues() {
        return this.inheritedValues;
    }
    /**
     * @return Configuration block for the `Expression` object used to categorize costs. See below.
     * 
     */
    public List<GetCostCategoryRuleRule> rules() {
        return this.rules;
    }
    /**
     * @return Parameter type.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Default value for the cost category.
     * 
     */
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCostCategoryRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetCostCategoryRuleInheritedValue> inheritedValues;
        private List<GetCostCategoryRuleRule> rules;
        private String type;
        private String value;
        public Builder() {}
        public Builder(GetCostCategoryRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.inheritedValues = defaults.inheritedValues;
    	      this.rules = defaults.rules;
    	      this.type = defaults.type;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder inheritedValues(List<GetCostCategoryRuleInheritedValue> inheritedValues) {
            this.inheritedValues = Objects.requireNonNull(inheritedValues);
            return this;
        }
        public Builder inheritedValues(GetCostCategoryRuleInheritedValue... inheritedValues) {
            return inheritedValues(List.of(inheritedValues));
        }
        @CustomType.Setter
        public Builder rules(List<GetCostCategoryRuleRule> rules) {
            this.rules = Objects.requireNonNull(rules);
            return this;
        }
        public Builder rules(GetCostCategoryRuleRule... rules) {
            return rules(List.of(rules));
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            this.value = Objects.requireNonNull(value);
            return this;
        }
        public GetCostCategoryRule build() {
            final var o = new GetCostCategoryRule();
            o.inheritedValues = inheritedValues;
            o.rules = rules;
            o.type = type;
            o.value = value;
            return o;
        }
    }
}
