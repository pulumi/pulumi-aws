// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.AxisDisplayOptionsDataOptionsNumericAxisOptionsScaleLinearArgs;
import com.pulumi.aws.quicksight.inputs.AxisDisplayOptionsDataOptionsNumericAxisOptionsScaleLogarithmicArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AxisDisplayOptionsDataOptionsNumericAxisOptionsScaleArgs extends com.pulumi.resources.ResourceArgs {

    public static final AxisDisplayOptionsDataOptionsNumericAxisOptionsScaleArgs Empty = new AxisDisplayOptionsDataOptionsNumericAxisOptionsScaleArgs();

    @Import(name="linear")
    private @Nullable Output<AxisDisplayOptionsDataOptionsNumericAxisOptionsScaleLinearArgs> linear;

    public Optional<Output<AxisDisplayOptionsDataOptionsNumericAxisOptionsScaleLinearArgs>> linear() {
        return Optional.ofNullable(this.linear);
    }

    @Import(name="logarithmic")
    private @Nullable Output<AxisDisplayOptionsDataOptionsNumericAxisOptionsScaleLogarithmicArgs> logarithmic;

    public Optional<Output<AxisDisplayOptionsDataOptionsNumericAxisOptionsScaleLogarithmicArgs>> logarithmic() {
        return Optional.ofNullable(this.logarithmic);
    }

    private AxisDisplayOptionsDataOptionsNumericAxisOptionsScaleArgs() {}

    private AxisDisplayOptionsDataOptionsNumericAxisOptionsScaleArgs(AxisDisplayOptionsDataOptionsNumericAxisOptionsScaleArgs $) {
        this.linear = $.linear;
        this.logarithmic = $.logarithmic;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AxisDisplayOptionsDataOptionsNumericAxisOptionsScaleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AxisDisplayOptionsDataOptionsNumericAxisOptionsScaleArgs $;

        public Builder() {
            $ = new AxisDisplayOptionsDataOptionsNumericAxisOptionsScaleArgs();
        }

        public Builder(AxisDisplayOptionsDataOptionsNumericAxisOptionsScaleArgs defaults) {
            $ = new AxisDisplayOptionsDataOptionsNumericAxisOptionsScaleArgs(Objects.requireNonNull(defaults));
        }

        public Builder linear(@Nullable Output<AxisDisplayOptionsDataOptionsNumericAxisOptionsScaleLinearArgs> linear) {
            $.linear = linear;
            return this;
        }

        public Builder linear(AxisDisplayOptionsDataOptionsNumericAxisOptionsScaleLinearArgs linear) {
            return linear(Output.of(linear));
        }

        public Builder logarithmic(@Nullable Output<AxisDisplayOptionsDataOptionsNumericAxisOptionsScaleLogarithmicArgs> logarithmic) {
            $.logarithmic = logarithmic;
            return this;
        }

        public Builder logarithmic(AxisDisplayOptionsDataOptionsNumericAxisOptionsScaleLogarithmicArgs logarithmic) {
            return logarithmic(Output.of(logarithmic));
        }

        public AxisDisplayOptionsDataOptionsNumericAxisOptionsScaleArgs build() {
            return $;
        }
    }

}
