// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3.inputs;

import com.pulumi.aws.s3.inputs.BucketLoggingTargetGrantGranteeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class BucketLoggingTargetGrantArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketLoggingTargetGrantArgs Empty = new BucketLoggingTargetGrantArgs();

    /**
     * Configuration block for the person being granted permissions. See below.
     * 
     */
    @Import(name="grantee", required=true)
    private Output<BucketLoggingTargetGrantGranteeArgs> grantee;

    /**
     * @return Configuration block for the person being granted permissions. See below.
     * 
     */
    public Output<BucketLoggingTargetGrantGranteeArgs> grantee() {
        return this.grantee;
    }

    /**
     * Logging permissions assigned to the grantee for the bucket. Valid values: `FULL_CONTROL`, `READ`, `WRITE`.
     * 
     */
    @Import(name="permission", required=true)
    private Output<String> permission;

    /**
     * @return Logging permissions assigned to the grantee for the bucket. Valid values: `FULL_CONTROL`, `READ`, `WRITE`.
     * 
     */
    public Output<String> permission() {
        return this.permission;
    }

    private BucketLoggingTargetGrantArgs() {}

    private BucketLoggingTargetGrantArgs(BucketLoggingTargetGrantArgs $) {
        this.grantee = $.grantee;
        this.permission = $.permission;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketLoggingTargetGrantArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketLoggingTargetGrantArgs $;

        public Builder() {
            $ = new BucketLoggingTargetGrantArgs();
        }

        public Builder(BucketLoggingTargetGrantArgs defaults) {
            $ = new BucketLoggingTargetGrantArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param grantee Configuration block for the person being granted permissions. See below.
         * 
         * @return builder
         * 
         */
        public Builder grantee(Output<BucketLoggingTargetGrantGranteeArgs> grantee) {
            $.grantee = grantee;
            return this;
        }

        /**
         * @param grantee Configuration block for the person being granted permissions. See below.
         * 
         * @return builder
         * 
         */
        public Builder grantee(BucketLoggingTargetGrantGranteeArgs grantee) {
            return grantee(Output.of(grantee));
        }

        /**
         * @param permission Logging permissions assigned to the grantee for the bucket. Valid values: `FULL_CONTROL`, `READ`, `WRITE`.
         * 
         * @return builder
         * 
         */
        public Builder permission(Output<String> permission) {
            $.permission = permission;
            return this;
        }

        /**
         * @param permission Logging permissions assigned to the grantee for the bucket. Valid values: `FULL_CONTROL`, `READ`, `WRITE`.
         * 
         * @return builder
         * 
         */
        public Builder permission(String permission) {
            return permission(Output.of(permission));
        }

        public BucketLoggingTargetGrantArgs build() {
            if ($.grantee == null) {
                throw new MissingRequiredPropertyException("BucketLoggingTargetGrantArgs", "grantee");
            }
            if ($.permission == null) {
                throw new MissingRequiredPropertyException("BucketLoggingTargetGrantArgs", "permission");
            }
            return $;
        }
    }

}
