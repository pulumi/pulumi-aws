// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.odb.inputs;

import com.pulumi.aws.odb.inputs.NetworkPeeringConnectionTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkPeeringConnectionState extends com.pulumi.resources.ResourceArgs {

    public static final NetworkPeeringConnectionState Empty = new NetworkPeeringConnectionState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * Created time of the ODB network peering connection.
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return Created time of the ODB network peering connection.
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * ARN of the ODB network peering connection.
     * 
     */
    @Import(name="odbNetworkArn")
    private @Nullable Output<String> odbNetworkArn;

    /**
     * @return ARN of the ODB network peering connection.
     * 
     */
    public Optional<Output<String>> odbNetworkArn() {
        return Optional.ofNullable(this.odbNetworkArn);
    }

    @Import(name="odbNetworkId")
    private @Nullable Output<String> odbNetworkId;

    public Optional<Output<String>> odbNetworkId() {
        return Optional.ofNullable(this.odbNetworkId);
    }

    /**
     * Type of the ODB peering connection.
     * 
     */
    @Import(name="odbPeeringConnectionType")
    private @Nullable Output<String> odbPeeringConnectionType;

    /**
     * @return Type of the ODB peering connection.
     * 
     */
    public Optional<Output<String>> odbPeeringConnectionType() {
        return Optional.ofNullable(this.odbPeeringConnectionType);
    }

    /**
     * ARN of the peer network peering connection.
     * 
     */
    @Import(name="peerNetworkArn")
    private @Nullable Output<String> peerNetworkArn;

    /**
     * @return ARN of the peer network peering connection.
     * 
     */
    public Optional<Output<String>> peerNetworkArn() {
        return Optional.ofNullable(this.peerNetworkArn);
    }

    @Import(name="peerNetworkId")
    private @Nullable Output<String> peerNetworkId;

    public Optional<Output<String>> peerNetworkId() {
        return Optional.ofNullable(this.peerNetworkId);
    }

    /**
     * Progress of the ODB network peering connection.
     * 
     */
    @Import(name="percentProgress")
    private @Nullable Output<Double> percentProgress;

    /**
     * @return Progress of the ODB network peering connection.
     * 
     */
    public Optional<Output<Double>> percentProgress() {
        return Optional.ofNullable(this.percentProgress);
    }

    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Status of the ODB network peering connection.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Status of the ODB network peering connection.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The reason for the current status of the ODB peering connection.
     * 
     */
    @Import(name="statusReason")
    private @Nullable Output<String> statusReason;

    /**
     * @return The reason for the current status of the ODB peering connection.
     * 
     */
    public Optional<Output<String>> statusReason() {
        return Optional.ofNullable(this.statusReason);
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A map of tags assigned to the resource, including inherited tags.
     * 
     */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including inherited tags.
     * 
     */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="timeouts")
    private @Nullable Output<NetworkPeeringConnectionTimeoutsArgs> timeouts;

    public Optional<Output<NetworkPeeringConnectionTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private NetworkPeeringConnectionState() {}

    private NetworkPeeringConnectionState(NetworkPeeringConnectionState $) {
        this.arn = $.arn;
        this.createdAt = $.createdAt;
        this.displayName = $.displayName;
        this.odbNetworkArn = $.odbNetworkArn;
        this.odbNetworkId = $.odbNetworkId;
        this.odbPeeringConnectionType = $.odbPeeringConnectionType;
        this.peerNetworkArn = $.peerNetworkArn;
        this.peerNetworkId = $.peerNetworkId;
        this.percentProgress = $.percentProgress;
        this.region = $.region;
        this.status = $.status;
        this.statusReason = $.statusReason;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkPeeringConnectionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkPeeringConnectionState $;

        public Builder() {
            $ = new NetworkPeeringConnectionState();
        }

        public Builder(NetworkPeeringConnectionState defaults) {
            $ = new NetworkPeeringConnectionState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param createdAt Created time of the ODB network peering connection.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt Created time of the ODB network peering connection.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param odbNetworkArn ARN of the ODB network peering connection.
         * 
         * @return builder
         * 
         */
        public Builder odbNetworkArn(@Nullable Output<String> odbNetworkArn) {
            $.odbNetworkArn = odbNetworkArn;
            return this;
        }

        /**
         * @param odbNetworkArn ARN of the ODB network peering connection.
         * 
         * @return builder
         * 
         */
        public Builder odbNetworkArn(String odbNetworkArn) {
            return odbNetworkArn(Output.of(odbNetworkArn));
        }

        public Builder odbNetworkId(@Nullable Output<String> odbNetworkId) {
            $.odbNetworkId = odbNetworkId;
            return this;
        }

        public Builder odbNetworkId(String odbNetworkId) {
            return odbNetworkId(Output.of(odbNetworkId));
        }

        /**
         * @param odbPeeringConnectionType Type of the ODB peering connection.
         * 
         * @return builder
         * 
         */
        public Builder odbPeeringConnectionType(@Nullable Output<String> odbPeeringConnectionType) {
            $.odbPeeringConnectionType = odbPeeringConnectionType;
            return this;
        }

        /**
         * @param odbPeeringConnectionType Type of the ODB peering connection.
         * 
         * @return builder
         * 
         */
        public Builder odbPeeringConnectionType(String odbPeeringConnectionType) {
            return odbPeeringConnectionType(Output.of(odbPeeringConnectionType));
        }

        /**
         * @param peerNetworkArn ARN of the peer network peering connection.
         * 
         * @return builder
         * 
         */
        public Builder peerNetworkArn(@Nullable Output<String> peerNetworkArn) {
            $.peerNetworkArn = peerNetworkArn;
            return this;
        }

        /**
         * @param peerNetworkArn ARN of the peer network peering connection.
         * 
         * @return builder
         * 
         */
        public Builder peerNetworkArn(String peerNetworkArn) {
            return peerNetworkArn(Output.of(peerNetworkArn));
        }

        public Builder peerNetworkId(@Nullable Output<String> peerNetworkId) {
            $.peerNetworkId = peerNetworkId;
            return this;
        }

        public Builder peerNetworkId(String peerNetworkId) {
            return peerNetworkId(Output.of(peerNetworkId));
        }

        /**
         * @param percentProgress Progress of the ODB network peering connection.
         * 
         * @return builder
         * 
         */
        public Builder percentProgress(@Nullable Output<Double> percentProgress) {
            $.percentProgress = percentProgress;
            return this;
        }

        /**
         * @param percentProgress Progress of the ODB network peering connection.
         * 
         * @return builder
         * 
         */
        public Builder percentProgress(Double percentProgress) {
            return percentProgress(Output.of(percentProgress));
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param status Status of the ODB network peering connection.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Status of the ODB network peering connection.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param statusReason The reason for the current status of the ODB peering connection.
         * 
         * @return builder
         * 
         */
        public Builder statusReason(@Nullable Output<String> statusReason) {
            $.statusReason = statusReason;
            return this;
        }

        /**
         * @param statusReason The reason for the current status of the ODB peering connection.
         * 
         * @return builder
         * 
         */
        public Builder statusReason(String statusReason) {
            return statusReason(Output.of(statusReason));
        }

        /**
         * @param tags A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including inherited tags.
         * 
         * @return builder
         * 
         */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including inherited tags.
         * 
         * @return builder
         * 
         */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder timeouts(@Nullable Output<NetworkPeeringConnectionTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(NetworkPeeringConnectionTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public NetworkPeeringConnectionState build() {
            return $;
        }
    }

}
