// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.AnalysisDefinitionAnalysisDefaultsDefaultNewSheetConfigurationInteractiveLayoutConfiguration;
import com.pulumi.aws.quicksight.outputs.AnalysisDefinitionAnalysisDefaultsDefaultNewSheetConfigurationPaginatedLayoutConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AnalysisDefinitionAnalysisDefaultsDefaultNewSheetConfiguration {
    private @Nullable AnalysisDefinitionAnalysisDefaultsDefaultNewSheetConfigurationInteractiveLayoutConfiguration interactiveLayoutConfiguration;
    private @Nullable AnalysisDefinitionAnalysisDefaultsDefaultNewSheetConfigurationPaginatedLayoutConfiguration paginatedLayoutConfiguration;
    private @Nullable String sheetContentType;

    private AnalysisDefinitionAnalysisDefaultsDefaultNewSheetConfiguration() {}
    public Optional<AnalysisDefinitionAnalysisDefaultsDefaultNewSheetConfigurationInteractiveLayoutConfiguration> interactiveLayoutConfiguration() {
        return Optional.ofNullable(this.interactiveLayoutConfiguration);
    }
    public Optional<AnalysisDefinitionAnalysisDefaultsDefaultNewSheetConfigurationPaginatedLayoutConfiguration> paginatedLayoutConfiguration() {
        return Optional.ofNullable(this.paginatedLayoutConfiguration);
    }
    public Optional<String> sheetContentType() {
        return Optional.ofNullable(this.sheetContentType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AnalysisDefinitionAnalysisDefaultsDefaultNewSheetConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable AnalysisDefinitionAnalysisDefaultsDefaultNewSheetConfigurationInteractiveLayoutConfiguration interactiveLayoutConfiguration;
        private @Nullable AnalysisDefinitionAnalysisDefaultsDefaultNewSheetConfigurationPaginatedLayoutConfiguration paginatedLayoutConfiguration;
        private @Nullable String sheetContentType;
        public Builder() {}
        public Builder(AnalysisDefinitionAnalysisDefaultsDefaultNewSheetConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.interactiveLayoutConfiguration = defaults.interactiveLayoutConfiguration;
    	      this.paginatedLayoutConfiguration = defaults.paginatedLayoutConfiguration;
    	      this.sheetContentType = defaults.sheetContentType;
        }

        @CustomType.Setter
        public Builder interactiveLayoutConfiguration(@Nullable AnalysisDefinitionAnalysisDefaultsDefaultNewSheetConfigurationInteractiveLayoutConfiguration interactiveLayoutConfiguration) {

            this.interactiveLayoutConfiguration = interactiveLayoutConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder paginatedLayoutConfiguration(@Nullable AnalysisDefinitionAnalysisDefaultsDefaultNewSheetConfigurationPaginatedLayoutConfiguration paginatedLayoutConfiguration) {

            this.paginatedLayoutConfiguration = paginatedLayoutConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder sheetContentType(@Nullable String sheetContentType) {

            this.sheetContentType = sheetContentType;
            return this;
        }
        public AnalysisDefinitionAnalysisDefaultsDefaultNewSheetConfiguration build() {
            final var _resultValue = new AnalysisDefinitionAnalysisDefaultsDefaultNewSheetConfiguration();
            _resultValue.interactiveLayoutConfiguration = interactiveLayoutConfiguration;
            _resultValue.paginatedLayoutConfiguration = paginatedLayoutConfiguration;
            _resultValue.sheetContentType = sheetContentType;
            return _resultValue;
        }
    }
}
