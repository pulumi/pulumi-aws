// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VisualsPivotTableVisualConditionalFormattingConditionalFormattingOptionCellScopeArgs extends com.pulumi.resources.ResourceArgs {

    public static final VisualsPivotTableVisualConditionalFormattingConditionalFormattingOptionCellScopeArgs Empty = new VisualsPivotTableVisualConditionalFormattingConditionalFormattingOptionCellScopeArgs();

    @Import(name="role")
    private @Nullable Output<String> role;

    public Optional<Output<String>> role() {
        return Optional.ofNullable(this.role);
    }

    private VisualsPivotTableVisualConditionalFormattingConditionalFormattingOptionCellScopeArgs() {}

    private VisualsPivotTableVisualConditionalFormattingConditionalFormattingOptionCellScopeArgs(VisualsPivotTableVisualConditionalFormattingConditionalFormattingOptionCellScopeArgs $) {
        this.role = $.role;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VisualsPivotTableVisualConditionalFormattingConditionalFormattingOptionCellScopeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VisualsPivotTableVisualConditionalFormattingConditionalFormattingOptionCellScopeArgs $;

        public Builder() {
            $ = new VisualsPivotTableVisualConditionalFormattingConditionalFormattingOptionCellScopeArgs();
        }

        public Builder(VisualsPivotTableVisualConditionalFormattingConditionalFormattingOptionCellScopeArgs defaults) {
            $ = new VisualsPivotTableVisualConditionalFormattingConditionalFormattingOptionCellScopeArgs(Objects.requireNonNull(defaults));
        }

        public Builder role(@Nullable Output<String> role) {
            $.role = role;
            return this;
        }

        public Builder role(String role) {
            return role(Output.of(role));
        }

        public VisualsPivotTableVisualConditionalFormattingConditionalFormattingOptionCellScopeArgs build() {
            return $;
        }
    }

}
