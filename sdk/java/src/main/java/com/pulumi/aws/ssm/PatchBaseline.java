// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ssm;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.ssm.PatchBaselineArgs;
import com.pulumi.aws.ssm.inputs.PatchBaselineState;
import com.pulumi.aws.ssm.outputs.PatchBaselineApprovalRule;
import com.pulumi.aws.ssm.outputs.PatchBaselineGlobalFilter;
import com.pulumi.aws.ssm.outputs.PatchBaselineSource;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="aws:ssm/patchBaseline:PatchBaseline")
public class PatchBaseline extends com.pulumi.resources.CustomResource {
    @Export(name="approvalRules", refs={List.class,PatchBaselineApprovalRule.class}, tree="[0,1]")
    private Output</* @Nullable */ List<PatchBaselineApprovalRule>> approvalRules;

    public Output<Optional<List<PatchBaselineApprovalRule>>> approvalRules() {
        return Codegen.optional(this.approvalRules);
    }
    @Export(name="approvedPatches", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> approvedPatches;

    public Output<Optional<List<String>>> approvedPatches() {
        return Codegen.optional(this.approvedPatches);
    }
    @Export(name="approvedPatchesComplianceLevel", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> approvedPatchesComplianceLevel;

    public Output<Optional<String>> approvedPatchesComplianceLevel() {
        return Codegen.optional(this.approvedPatchesComplianceLevel);
    }
    @Export(name="approvedPatchesEnableNonSecurity", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> approvedPatchesEnableNonSecurity;

    public Output<Optional<Boolean>> approvedPatchesEnableNonSecurity() {
        return Codegen.optional(this.approvedPatchesEnableNonSecurity);
    }
    @Export(name="arn", refs={String.class}, tree="[0]")
    private Output<String> arn;

    public Output<String> arn() {
        return this.arn;
    }
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    @Export(name="globalFilters", refs={List.class,PatchBaselineGlobalFilter.class}, tree="[0,1]")
    private Output</* @Nullable */ List<PatchBaselineGlobalFilter>> globalFilters;

    public Output<Optional<List<PatchBaselineGlobalFilter>>> globalFilters() {
        return Codegen.optional(this.globalFilters);
    }
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }
    @Export(name="operatingSystem", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> operatingSystem;

    public Output<Optional<String>> operatingSystem() {
        return Codegen.optional(this.operatingSystem);
    }
    @Export(name="rejectedPatches", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> rejectedPatches;

    public Output<Optional<List<String>>> rejectedPatches() {
        return Codegen.optional(this.rejectedPatches);
    }
    @Export(name="rejectedPatchesAction", refs={String.class}, tree="[0]")
    private Output<String> rejectedPatchesAction;

    public Output<String> rejectedPatchesAction() {
        return this.rejectedPatchesAction;
    }
    @Export(name="sources", refs={List.class,PatchBaselineSource.class}, tree="[0,1]")
    private Output</* @Nullable */ List<PatchBaselineSource>> sources;

    public Output<Optional<List<PatchBaselineSource>>> sources() {
        return Codegen.optional(this.sources);
    }
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    @Export(name="tagsAll", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public PatchBaseline(String name) {
        this(name, PatchBaselineArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public PatchBaseline(String name, @Nullable PatchBaselineArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public PatchBaseline(String name, @Nullable PatchBaselineArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:ssm/patchBaseline:PatchBaseline", name, args == null ? PatchBaselineArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private PatchBaseline(String name, Output<String> id, @Nullable PatchBaselineState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:ssm/patchBaseline:PatchBaseline", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static PatchBaseline get(String name, Output<String> id, @Nullable PatchBaselineState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new PatchBaseline(name, id, state, options);
    }
}
