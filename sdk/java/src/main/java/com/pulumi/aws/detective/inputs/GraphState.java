// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.detective.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GraphState extends com.pulumi.resources.ResourceArgs {

    public static final GraphState Empty = new GraphState();

    @Import(name="createdTime")
    private @Nullable Output<String> createdTime;

    public Optional<Output<String>> createdTime() {
        return Optional.ofNullable(this.createdTime);
    }

    @Import(name="graphArn")
    private @Nullable Output<String> graphArn;

    public Optional<Output<String>> graphArn() {
        return Optional.ofNullable(this.graphArn);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private GraphState() {}

    private GraphState(GraphState $) {
        this.createdTime = $.createdTime;
        this.graphArn = $.graphArn;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GraphState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GraphState $;

        public Builder() {
            $ = new GraphState();
        }

        public Builder(GraphState defaults) {
            $ = new GraphState(Objects.requireNonNull(defaults));
        }

        public Builder createdTime(@Nullable Output<String> createdTime) {
            $.createdTime = createdTime;
            return this;
        }

        public Builder createdTime(String createdTime) {
            return createdTime(Output.of(createdTime));
        }

        public Builder graphArn(@Nullable Output<String> graphArn) {
            $.graphArn = graphArn;
            return this;
        }

        public Builder graphArn(String graphArn) {
            return graphArn(Output.of(graphArn));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public GraphState build() {
            return $;
        }
    }

}
