// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kendra.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class IndexUserGroupResolutionConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final IndexUserGroupResolutionConfigurationArgs Empty = new IndexUserGroupResolutionConfigurationArgs();

    /**
     * The identity store provider (mode) you want to use to fetch access levels of groups and users. AWS Single Sign-On is currently the only available mode. Your users and groups must exist in an AWS SSO identity source in order to use this mode. Valid Values are `AWS_SSO` or `NONE`.
     * 
     */
    @Import(name="userGroupResolutionMode", required=true)
    private Output<String> userGroupResolutionMode;

    /**
     * @return The identity store provider (mode) you want to use to fetch access levels of groups and users. AWS Single Sign-On is currently the only available mode. Your users and groups must exist in an AWS SSO identity source in order to use this mode. Valid Values are `AWS_SSO` or `NONE`.
     * 
     */
    public Output<String> userGroupResolutionMode() {
        return this.userGroupResolutionMode;
    }

    private IndexUserGroupResolutionConfigurationArgs() {}

    private IndexUserGroupResolutionConfigurationArgs(IndexUserGroupResolutionConfigurationArgs $) {
        this.userGroupResolutionMode = $.userGroupResolutionMode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IndexUserGroupResolutionConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IndexUserGroupResolutionConfigurationArgs $;

        public Builder() {
            $ = new IndexUserGroupResolutionConfigurationArgs();
        }

        public Builder(IndexUserGroupResolutionConfigurationArgs defaults) {
            $ = new IndexUserGroupResolutionConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param userGroupResolutionMode The identity store provider (mode) you want to use to fetch access levels of groups and users. AWS Single Sign-On is currently the only available mode. Your users and groups must exist in an AWS SSO identity source in order to use this mode. Valid Values are `AWS_SSO` or `NONE`.
         * 
         * @return builder
         * 
         */
        public Builder userGroupResolutionMode(Output<String> userGroupResolutionMode) {
            $.userGroupResolutionMode = userGroupResolutionMode;
            return this;
        }

        /**
         * @param userGroupResolutionMode The identity store provider (mode) you want to use to fetch access levels of groups and users. AWS Single Sign-On is currently the only available mode. Your users and groups must exist in an AWS SSO identity source in order to use this mode. Valid Values are `AWS_SSO` or `NONE`.
         * 
         * @return builder
         * 
         */
        public Builder userGroupResolutionMode(String userGroupResolutionMode) {
            return userGroupResolutionMode(Output.of(userGroupResolutionMode));
        }

        public IndexUserGroupResolutionConfigurationArgs build() {
            if ($.userGroupResolutionMode == null) {
                throw new MissingRequiredPropertyException("IndexUserGroupResolutionConfigurationArgs", "userGroupResolutionMode");
            }
            return $;
        }
    }

}
