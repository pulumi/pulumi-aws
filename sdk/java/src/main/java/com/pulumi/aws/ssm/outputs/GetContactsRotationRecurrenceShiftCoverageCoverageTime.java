// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ssm.outputs;

import com.pulumi.aws.ssm.outputs.GetContactsRotationRecurrenceShiftCoverageCoverageTimeEnd;
import com.pulumi.aws.ssm.outputs.GetContactsRotationRecurrenceShiftCoverageCoverageTimeStart;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetContactsRotationRecurrenceShiftCoverageCoverageTime {
    private List<GetContactsRotationRecurrenceShiftCoverageCoverageTimeEnd> ends;
    private List<GetContactsRotationRecurrenceShiftCoverageCoverageTimeStart> starts;

    private GetContactsRotationRecurrenceShiftCoverageCoverageTime() {}
    public List<GetContactsRotationRecurrenceShiftCoverageCoverageTimeEnd> ends() {
        return this.ends;
    }
    public List<GetContactsRotationRecurrenceShiftCoverageCoverageTimeStart> starts() {
        return this.starts;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetContactsRotationRecurrenceShiftCoverageCoverageTime defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetContactsRotationRecurrenceShiftCoverageCoverageTimeEnd> ends;
        private List<GetContactsRotationRecurrenceShiftCoverageCoverageTimeStart> starts;
        public Builder() {}
        public Builder(GetContactsRotationRecurrenceShiftCoverageCoverageTime defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ends = defaults.ends;
    	      this.starts = defaults.starts;
        }

        @CustomType.Setter
        public Builder ends(List<GetContactsRotationRecurrenceShiftCoverageCoverageTimeEnd> ends) {
            if (ends == null) {
              throw new MissingRequiredPropertyException("GetContactsRotationRecurrenceShiftCoverageCoverageTime", "ends");
            }
            this.ends = ends;
            return this;
        }
        public Builder ends(GetContactsRotationRecurrenceShiftCoverageCoverageTimeEnd... ends) {
            return ends(List.of(ends));
        }
        @CustomType.Setter
        public Builder starts(List<GetContactsRotationRecurrenceShiftCoverageCoverageTimeStart> starts) {
            if (starts == null) {
              throw new MissingRequiredPropertyException("GetContactsRotationRecurrenceShiftCoverageCoverageTime", "starts");
            }
            this.starts = starts;
            return this;
        }
        public Builder starts(GetContactsRotationRecurrenceShiftCoverageCoverageTimeStart... starts) {
            return starts(List.of(starts));
        }
        public GetContactsRotationRecurrenceShiftCoverageCoverageTime build() {
            final var _resultValue = new GetContactsRotationRecurrenceShiftCoverageCoverageTime();
            _resultValue.ends = ends;
            _resultValue.starts = starts;
            return _resultValue;
        }
    }
}
