// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dataexchange.outputs;

import com.pulumi.aws.dataexchange.outputs.RevisionAssetsAssetImportAssetsFromS3AssetSource;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RevisionAssetsAssetImportAssetsFromS3 {
    /**
     * @return A block specifying the source bucket and key for the asset. This block supports the following:
     * 
     */
    private @Nullable RevisionAssetsAssetImportAssetsFromS3AssetSource assetSource;

    private RevisionAssetsAssetImportAssetsFromS3() {}
    /**
     * @return A block specifying the source bucket and key for the asset. This block supports the following:
     * 
     */
    public Optional<RevisionAssetsAssetImportAssetsFromS3AssetSource> assetSource() {
        return Optional.ofNullable(this.assetSource);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RevisionAssetsAssetImportAssetsFromS3 defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable RevisionAssetsAssetImportAssetsFromS3AssetSource assetSource;
        public Builder() {}
        public Builder(RevisionAssetsAssetImportAssetsFromS3 defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assetSource = defaults.assetSource;
        }

        @CustomType.Setter
        public Builder assetSource(@Nullable RevisionAssetsAssetImportAssetsFromS3AssetSource assetSource) {

            this.assetSource = assetSource;
            return this;
        }
        public RevisionAssetsAssetImportAssetsFromS3 build() {
            final var _resultValue = new RevisionAssetsAssetImportAssetsFromS3();
            _resultValue.assetSource = assetSource;
            return _resultValue;
        }
    }
}
