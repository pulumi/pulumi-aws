// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.secretsmanager.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRandomPasswordPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRandomPasswordPlainArgs Empty = new GetRandomPasswordPlainArgs();

    @Import(name="excludeCharacters")
    private @Nullable String excludeCharacters;

    public Optional<String> excludeCharacters() {
        return Optional.ofNullable(this.excludeCharacters);
    }

    @Import(name="excludeLowercase")
    private @Nullable Boolean excludeLowercase;

    public Optional<Boolean> excludeLowercase() {
        return Optional.ofNullable(this.excludeLowercase);
    }

    @Import(name="excludeNumbers")
    private @Nullable Boolean excludeNumbers;

    public Optional<Boolean> excludeNumbers() {
        return Optional.ofNullable(this.excludeNumbers);
    }

    @Import(name="excludePunctuation")
    private @Nullable Boolean excludePunctuation;

    public Optional<Boolean> excludePunctuation() {
        return Optional.ofNullable(this.excludePunctuation);
    }

    @Import(name="excludeUppercase")
    private @Nullable Boolean excludeUppercase;

    public Optional<Boolean> excludeUppercase() {
        return Optional.ofNullable(this.excludeUppercase);
    }

    @Import(name="includeSpace")
    private @Nullable Boolean includeSpace;

    public Optional<Boolean> includeSpace() {
        return Optional.ofNullable(this.includeSpace);
    }

    @Import(name="passwordLength")
    private @Nullable Integer passwordLength;

    public Optional<Integer> passwordLength() {
        return Optional.ofNullable(this.passwordLength);
    }

    @Import(name="randomPassword")
    private @Nullable String randomPassword;

    public Optional<String> randomPassword() {
        return Optional.ofNullable(this.randomPassword);
    }

    @Import(name="requireEachIncludedType")
    private @Nullable Boolean requireEachIncludedType;

    public Optional<Boolean> requireEachIncludedType() {
        return Optional.ofNullable(this.requireEachIncludedType);
    }

    private GetRandomPasswordPlainArgs() {}

    private GetRandomPasswordPlainArgs(GetRandomPasswordPlainArgs $) {
        this.excludeCharacters = $.excludeCharacters;
        this.excludeLowercase = $.excludeLowercase;
        this.excludeNumbers = $.excludeNumbers;
        this.excludePunctuation = $.excludePunctuation;
        this.excludeUppercase = $.excludeUppercase;
        this.includeSpace = $.includeSpace;
        this.passwordLength = $.passwordLength;
        this.randomPassword = $.randomPassword;
        this.requireEachIncludedType = $.requireEachIncludedType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRandomPasswordPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRandomPasswordPlainArgs $;

        public Builder() {
            $ = new GetRandomPasswordPlainArgs();
        }

        public Builder(GetRandomPasswordPlainArgs defaults) {
            $ = new GetRandomPasswordPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder excludeCharacters(@Nullable String excludeCharacters) {
            $.excludeCharacters = excludeCharacters;
            return this;
        }

        public Builder excludeLowercase(@Nullable Boolean excludeLowercase) {
            $.excludeLowercase = excludeLowercase;
            return this;
        }

        public Builder excludeNumbers(@Nullable Boolean excludeNumbers) {
            $.excludeNumbers = excludeNumbers;
            return this;
        }

        public Builder excludePunctuation(@Nullable Boolean excludePunctuation) {
            $.excludePunctuation = excludePunctuation;
            return this;
        }

        public Builder excludeUppercase(@Nullable Boolean excludeUppercase) {
            $.excludeUppercase = excludeUppercase;
            return this;
        }

        public Builder includeSpace(@Nullable Boolean includeSpace) {
            $.includeSpace = includeSpace;
            return this;
        }

        public Builder passwordLength(@Nullable Integer passwordLength) {
            $.passwordLength = passwordLength;
            return this;
        }

        public Builder randomPassword(@Nullable String randomPassword) {
            $.randomPassword = randomPassword;
            return this;
        }

        public Builder requireEachIncludedType(@Nullable Boolean requireEachIncludedType) {
            $.requireEachIncludedType = requireEachIncludedType;
            return this;
        }

        public GetRandomPasswordPlainArgs build() {
            return $;
        }
    }

}
