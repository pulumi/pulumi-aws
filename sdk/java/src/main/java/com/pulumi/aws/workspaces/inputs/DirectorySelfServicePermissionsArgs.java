// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.workspaces.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DirectorySelfServicePermissionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DirectorySelfServicePermissionsArgs Empty = new DirectorySelfServicePermissionsArgs();

    @Import(name="changeComputeType")
    private @Nullable Output<Boolean> changeComputeType;

    public Optional<Output<Boolean>> changeComputeType() {
        return Optional.ofNullable(this.changeComputeType);
    }

    @Import(name="increaseVolumeSize")
    private @Nullable Output<Boolean> increaseVolumeSize;

    public Optional<Output<Boolean>> increaseVolumeSize() {
        return Optional.ofNullable(this.increaseVolumeSize);
    }

    @Import(name="rebuildWorkspace")
    private @Nullable Output<Boolean> rebuildWorkspace;

    public Optional<Output<Boolean>> rebuildWorkspace() {
        return Optional.ofNullable(this.rebuildWorkspace);
    }

    @Import(name="restartWorkspace")
    private @Nullable Output<Boolean> restartWorkspace;

    public Optional<Output<Boolean>> restartWorkspace() {
        return Optional.ofNullable(this.restartWorkspace);
    }

    @Import(name="switchRunningMode")
    private @Nullable Output<Boolean> switchRunningMode;

    public Optional<Output<Boolean>> switchRunningMode() {
        return Optional.ofNullable(this.switchRunningMode);
    }

    private DirectorySelfServicePermissionsArgs() {}

    private DirectorySelfServicePermissionsArgs(DirectorySelfServicePermissionsArgs $) {
        this.changeComputeType = $.changeComputeType;
        this.increaseVolumeSize = $.increaseVolumeSize;
        this.rebuildWorkspace = $.rebuildWorkspace;
        this.restartWorkspace = $.restartWorkspace;
        this.switchRunningMode = $.switchRunningMode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DirectorySelfServicePermissionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DirectorySelfServicePermissionsArgs $;

        public Builder() {
            $ = new DirectorySelfServicePermissionsArgs();
        }

        public Builder(DirectorySelfServicePermissionsArgs defaults) {
            $ = new DirectorySelfServicePermissionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder changeComputeType(@Nullable Output<Boolean> changeComputeType) {
            $.changeComputeType = changeComputeType;
            return this;
        }

        public Builder changeComputeType(Boolean changeComputeType) {
            return changeComputeType(Output.of(changeComputeType));
        }

        public Builder increaseVolumeSize(@Nullable Output<Boolean> increaseVolumeSize) {
            $.increaseVolumeSize = increaseVolumeSize;
            return this;
        }

        public Builder increaseVolumeSize(Boolean increaseVolumeSize) {
            return increaseVolumeSize(Output.of(increaseVolumeSize));
        }

        public Builder rebuildWorkspace(@Nullable Output<Boolean> rebuildWorkspace) {
            $.rebuildWorkspace = rebuildWorkspace;
            return this;
        }

        public Builder rebuildWorkspace(Boolean rebuildWorkspace) {
            return rebuildWorkspace(Output.of(rebuildWorkspace));
        }

        public Builder restartWorkspace(@Nullable Output<Boolean> restartWorkspace) {
            $.restartWorkspace = restartWorkspace;
            return this;
        }

        public Builder restartWorkspace(Boolean restartWorkspace) {
            return restartWorkspace(Output.of(restartWorkspace));
        }

        public Builder switchRunningMode(@Nullable Output<Boolean> switchRunningMode) {
            $.switchRunningMode = switchRunningMode;
            return this;
        }

        public Builder switchRunningMode(Boolean switchRunningMode) {
            return switchRunningMode(Output.of(switchRunningMode));
        }

        public DirectorySelfServicePermissionsArgs build() {
            return $;
        }
    }

}
