// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3.inputs;

import com.pulumi.aws.s3.inputs.BucketV2ReplicationConfigurationRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class BucketV2ReplicationConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketV2ReplicationConfigurationArgs Empty = new BucketV2ReplicationConfigurationArgs();

    /**
     * ARN of the IAM role for Amazon S3 to assume when replicating the objects.
     * 
     */
    @Import(name="role", required=true)
    private Output<String> role;

    /**
     * @return ARN of the IAM role for Amazon S3 to assume when replicating the objects.
     * 
     */
    public Output<String> role() {
        return this.role;
    }

    /**
     * Specifies the rules managing the replication (documented below).
     * 
     */
    @Import(name="rules", required=true)
    private Output<List<BucketV2ReplicationConfigurationRuleArgs>> rules;

    /**
     * @return Specifies the rules managing the replication (documented below).
     * 
     */
    public Output<List<BucketV2ReplicationConfigurationRuleArgs>> rules() {
        return this.rules;
    }

    private BucketV2ReplicationConfigurationArgs() {}

    private BucketV2ReplicationConfigurationArgs(BucketV2ReplicationConfigurationArgs $) {
        this.role = $.role;
        this.rules = $.rules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketV2ReplicationConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketV2ReplicationConfigurationArgs $;

        public Builder() {
            $ = new BucketV2ReplicationConfigurationArgs();
        }

        public Builder(BucketV2ReplicationConfigurationArgs defaults) {
            $ = new BucketV2ReplicationConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param role ARN of the IAM role for Amazon S3 to assume when replicating the objects.
         * 
         * @return builder
         * 
         */
        public Builder role(Output<String> role) {
            $.role = role;
            return this;
        }

        /**
         * @param role ARN of the IAM role for Amazon S3 to assume when replicating the objects.
         * 
         * @return builder
         * 
         */
        public Builder role(String role) {
            return role(Output.of(role));
        }

        /**
         * @param rules Specifies the rules managing the replication (documented below).
         * 
         * @return builder
         * 
         */
        public Builder rules(Output<List<BucketV2ReplicationConfigurationRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules Specifies the rules managing the replication (documented below).
         * 
         * @return builder
         * 
         */
        public Builder rules(List<BucketV2ReplicationConfigurationRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules Specifies the rules managing the replication (documented below).
         * 
         * @return builder
         * 
         */
        public Builder rules(BucketV2ReplicationConfigurationRuleArgs... rules) {
            return rules(List.of(rules));
        }

        public BucketV2ReplicationConfigurationArgs build() {
            $.role = Objects.requireNonNull($.role, "expected parameter 'role' to be non-null");
            $.rules = Objects.requireNonNull($.rules, "expected parameter 'rules' to be non-null");
            return $;
        }
    }

}
