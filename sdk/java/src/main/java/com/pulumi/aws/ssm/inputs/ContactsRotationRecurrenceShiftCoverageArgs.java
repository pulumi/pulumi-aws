// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ssm.inputs;

import com.pulumi.aws.ssm.inputs.ContactsRotationRecurrenceShiftCoverageCoverageTimeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ContactsRotationRecurrenceShiftCoverageArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContactsRotationRecurrenceShiftCoverageArgs Empty = new ContactsRotationRecurrenceShiftCoverageArgs();

    /**
     * (Required) Information about when an on-call shift begins and ends. See Coverage Times for more details.
     * 
     */
    @Import(name="coverageTimes")
    private @Nullable Output<List<ContactsRotationRecurrenceShiftCoverageCoverageTimeArgs>> coverageTimes;

    /**
     * @return (Required) Information about when an on-call shift begins and ends. See Coverage Times for more details.
     * 
     */
    public Optional<Output<List<ContactsRotationRecurrenceShiftCoverageCoverageTimeArgs>>> coverageTimes() {
        return Optional.ofNullable(this.coverageTimes);
    }

    @Import(name="mapBlockKey", required=true)
    private Output<String> mapBlockKey;

    public Output<String> mapBlockKey() {
        return this.mapBlockKey;
    }

    private ContactsRotationRecurrenceShiftCoverageArgs() {}

    private ContactsRotationRecurrenceShiftCoverageArgs(ContactsRotationRecurrenceShiftCoverageArgs $) {
        this.coverageTimes = $.coverageTimes;
        this.mapBlockKey = $.mapBlockKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContactsRotationRecurrenceShiftCoverageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContactsRotationRecurrenceShiftCoverageArgs $;

        public Builder() {
            $ = new ContactsRotationRecurrenceShiftCoverageArgs();
        }

        public Builder(ContactsRotationRecurrenceShiftCoverageArgs defaults) {
            $ = new ContactsRotationRecurrenceShiftCoverageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param coverageTimes (Required) Information about when an on-call shift begins and ends. See Coverage Times for more details.
         * 
         * @return builder
         * 
         */
        public Builder coverageTimes(@Nullable Output<List<ContactsRotationRecurrenceShiftCoverageCoverageTimeArgs>> coverageTimes) {
            $.coverageTimes = coverageTimes;
            return this;
        }

        /**
         * @param coverageTimes (Required) Information about when an on-call shift begins and ends. See Coverage Times for more details.
         * 
         * @return builder
         * 
         */
        public Builder coverageTimes(List<ContactsRotationRecurrenceShiftCoverageCoverageTimeArgs> coverageTimes) {
            return coverageTimes(Output.of(coverageTimes));
        }

        /**
         * @param coverageTimes (Required) Information about when an on-call shift begins and ends. See Coverage Times for more details.
         * 
         * @return builder
         * 
         */
        public Builder coverageTimes(ContactsRotationRecurrenceShiftCoverageCoverageTimeArgs... coverageTimes) {
            return coverageTimes(List.of(coverageTimes));
        }

        public Builder mapBlockKey(Output<String> mapBlockKey) {
            $.mapBlockKey = mapBlockKey;
            return this;
        }

        public Builder mapBlockKey(String mapBlockKey) {
            return mapBlockKey(Output.of(mapBlockKey));
        }

        public ContactsRotationRecurrenceShiftCoverageArgs build() {
            if ($.mapBlockKey == null) {
                throw new MissingRequiredPropertyException("ContactsRotationRecurrenceShiftCoverageArgs", "mapBlockKey");
            }
            return $;
        }
    }

}
