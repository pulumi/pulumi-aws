// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cleanrooms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;


public final class CollaborationDataEncryptionMetadataArgs extends com.pulumi.resources.ResourceArgs {

    public static final CollaborationDataEncryptionMetadataArgs Empty = new CollaborationDataEncryptionMetadataArgs();

    @Import(name="allowClearText", required=true)
    private Output<Boolean> allowClearText;

    public Output<Boolean> allowClearText() {
        return this.allowClearText;
    }

    @Import(name="allowDuplicates", required=true)
    private Output<Boolean> allowDuplicates;

    public Output<Boolean> allowDuplicates() {
        return this.allowDuplicates;
    }

    @Import(name="allowJoinsOnColumnsWithDifferentNames", required=true)
    private Output<Boolean> allowJoinsOnColumnsWithDifferentNames;

    public Output<Boolean> allowJoinsOnColumnsWithDifferentNames() {
        return this.allowJoinsOnColumnsWithDifferentNames;
    }

    @Import(name="preserveNulls", required=true)
    private Output<Boolean> preserveNulls;

    public Output<Boolean> preserveNulls() {
        return this.preserveNulls;
    }

    private CollaborationDataEncryptionMetadataArgs() {}

    private CollaborationDataEncryptionMetadataArgs(CollaborationDataEncryptionMetadataArgs $) {
        this.allowClearText = $.allowClearText;
        this.allowDuplicates = $.allowDuplicates;
        this.allowJoinsOnColumnsWithDifferentNames = $.allowJoinsOnColumnsWithDifferentNames;
        this.preserveNulls = $.preserveNulls;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CollaborationDataEncryptionMetadataArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CollaborationDataEncryptionMetadataArgs $;

        public Builder() {
            $ = new CollaborationDataEncryptionMetadataArgs();
        }

        public Builder(CollaborationDataEncryptionMetadataArgs defaults) {
            $ = new CollaborationDataEncryptionMetadataArgs(Objects.requireNonNull(defaults));
        }

        public Builder allowClearText(Output<Boolean> allowClearText) {
            $.allowClearText = allowClearText;
            return this;
        }

        public Builder allowClearText(Boolean allowClearText) {
            return allowClearText(Output.of(allowClearText));
        }

        public Builder allowDuplicates(Output<Boolean> allowDuplicates) {
            $.allowDuplicates = allowDuplicates;
            return this;
        }

        public Builder allowDuplicates(Boolean allowDuplicates) {
            return allowDuplicates(Output.of(allowDuplicates));
        }

        public Builder allowJoinsOnColumnsWithDifferentNames(Output<Boolean> allowJoinsOnColumnsWithDifferentNames) {
            $.allowJoinsOnColumnsWithDifferentNames = allowJoinsOnColumnsWithDifferentNames;
            return this;
        }

        public Builder allowJoinsOnColumnsWithDifferentNames(Boolean allowJoinsOnColumnsWithDifferentNames) {
            return allowJoinsOnColumnsWithDifferentNames(Output.of(allowJoinsOnColumnsWithDifferentNames));
        }

        public Builder preserveNulls(Output<Boolean> preserveNulls) {
            $.preserveNulls = preserveNulls;
            return this;
        }

        public Builder preserveNulls(Boolean preserveNulls) {
            return preserveNulls(Output.of(preserveNulls));
        }

        public CollaborationDataEncryptionMetadataArgs build() {
            if ($.allowClearText == null) {
                throw new MissingRequiredPropertyException("CollaborationDataEncryptionMetadataArgs", "allowClearText");
            }
            if ($.allowDuplicates == null) {
                throw new MissingRequiredPropertyException("CollaborationDataEncryptionMetadataArgs", "allowDuplicates");
            }
            if ($.allowJoinsOnColumnsWithDifferentNames == null) {
                throw new MissingRequiredPropertyException("CollaborationDataEncryptionMetadataArgs", "allowJoinsOnColumnsWithDifferentNames");
            }
            if ($.preserveNulls == null) {
                throw new MissingRequiredPropertyException("CollaborationDataEncryptionMetadataArgs", "preserveNulls");
            }
            return $;
        }
    }

}
