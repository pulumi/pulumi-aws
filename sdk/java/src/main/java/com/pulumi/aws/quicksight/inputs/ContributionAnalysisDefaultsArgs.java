// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.ContributionAnalysisDefaultsContributorDimensionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class ContributionAnalysisDefaultsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContributionAnalysisDefaultsArgs Empty = new ContributionAnalysisDefaultsArgs();

    @Import(name="contributorDimensions", required=true)
    private Output<List<ContributionAnalysisDefaultsContributorDimensionArgs>> contributorDimensions;

    public Output<List<ContributionAnalysisDefaultsContributorDimensionArgs>> contributorDimensions() {
        return this.contributorDimensions;
    }

    @Import(name="measureFieldId", required=true)
    private Output<String> measureFieldId;

    public Output<String> measureFieldId() {
        return this.measureFieldId;
    }

    private ContributionAnalysisDefaultsArgs() {}

    private ContributionAnalysisDefaultsArgs(ContributionAnalysisDefaultsArgs $) {
        this.contributorDimensions = $.contributorDimensions;
        this.measureFieldId = $.measureFieldId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContributionAnalysisDefaultsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContributionAnalysisDefaultsArgs $;

        public Builder() {
            $ = new ContributionAnalysisDefaultsArgs();
        }

        public Builder(ContributionAnalysisDefaultsArgs defaults) {
            $ = new ContributionAnalysisDefaultsArgs(Objects.requireNonNull(defaults));
        }

        public Builder contributorDimensions(Output<List<ContributionAnalysisDefaultsContributorDimensionArgs>> contributorDimensions) {
            $.contributorDimensions = contributorDimensions;
            return this;
        }

        public Builder contributorDimensions(List<ContributionAnalysisDefaultsContributorDimensionArgs> contributorDimensions) {
            return contributorDimensions(Output.of(contributorDimensions));
        }

        public Builder contributorDimensions(ContributionAnalysisDefaultsContributorDimensionArgs... contributorDimensions) {
            return contributorDimensions(List.of(contributorDimensions));
        }

        public Builder measureFieldId(Output<String> measureFieldId) {
            $.measureFieldId = measureFieldId;
            return this;
        }

        public Builder measureFieldId(String measureFieldId) {
            return measureFieldId(Output.of(measureFieldId));
        }

        public ContributionAnalysisDefaultsArgs build() {
            if ($.contributorDimensions == null) {
                throw new MissingRequiredPropertyException("ContributionAnalysisDefaultsArgs", "contributorDimensions");
            }
            if ($.measureFieldId == null) {
                throw new MissingRequiredPropertyException("ContributionAnalysisDefaultsArgs", "measureFieldId");
            }
            return $;
        }
    }

}
