// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lambda;

import com.pulumi.aws.lambda.inputs.FunctionEventInvokeConfigDestinationConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FunctionEventInvokeConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final FunctionEventInvokeConfigArgs Empty = new FunctionEventInvokeConfigArgs();

    @Import(name="destinationConfig")
    private @Nullable Output<FunctionEventInvokeConfigDestinationConfigArgs> destinationConfig;

    public Optional<Output<FunctionEventInvokeConfigDestinationConfigArgs>> destinationConfig() {
        return Optional.ofNullable(this.destinationConfig);
    }

    @Import(name="functionName", required=true)
    private Output<String> functionName;

    public Output<String> functionName() {
        return this.functionName;
    }

    @Import(name="maximumEventAgeInSeconds")
    private @Nullable Output<Integer> maximumEventAgeInSeconds;

    public Optional<Output<Integer>> maximumEventAgeInSeconds() {
        return Optional.ofNullable(this.maximumEventAgeInSeconds);
    }

    @Import(name="maximumRetryAttempts")
    private @Nullable Output<Integer> maximumRetryAttempts;

    public Optional<Output<Integer>> maximumRetryAttempts() {
        return Optional.ofNullable(this.maximumRetryAttempts);
    }

    @Import(name="qualifier")
    private @Nullable Output<String> qualifier;

    public Optional<Output<String>> qualifier() {
        return Optional.ofNullable(this.qualifier);
    }

    private FunctionEventInvokeConfigArgs() {}

    private FunctionEventInvokeConfigArgs(FunctionEventInvokeConfigArgs $) {
        this.destinationConfig = $.destinationConfig;
        this.functionName = $.functionName;
        this.maximumEventAgeInSeconds = $.maximumEventAgeInSeconds;
        this.maximumRetryAttempts = $.maximumRetryAttempts;
        this.qualifier = $.qualifier;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FunctionEventInvokeConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FunctionEventInvokeConfigArgs $;

        public Builder() {
            $ = new FunctionEventInvokeConfigArgs();
        }

        public Builder(FunctionEventInvokeConfigArgs defaults) {
            $ = new FunctionEventInvokeConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder destinationConfig(@Nullable Output<FunctionEventInvokeConfigDestinationConfigArgs> destinationConfig) {
            $.destinationConfig = destinationConfig;
            return this;
        }

        public Builder destinationConfig(FunctionEventInvokeConfigDestinationConfigArgs destinationConfig) {
            return destinationConfig(Output.of(destinationConfig));
        }

        public Builder functionName(Output<String> functionName) {
            $.functionName = functionName;
            return this;
        }

        public Builder functionName(String functionName) {
            return functionName(Output.of(functionName));
        }

        public Builder maximumEventAgeInSeconds(@Nullable Output<Integer> maximumEventAgeInSeconds) {
            $.maximumEventAgeInSeconds = maximumEventAgeInSeconds;
            return this;
        }

        public Builder maximumEventAgeInSeconds(Integer maximumEventAgeInSeconds) {
            return maximumEventAgeInSeconds(Output.of(maximumEventAgeInSeconds));
        }

        public Builder maximumRetryAttempts(@Nullable Output<Integer> maximumRetryAttempts) {
            $.maximumRetryAttempts = maximumRetryAttempts;
            return this;
        }

        public Builder maximumRetryAttempts(Integer maximumRetryAttempts) {
            return maximumRetryAttempts(Output.of(maximumRetryAttempts));
        }

        public Builder qualifier(@Nullable Output<String> qualifier) {
            $.qualifier = qualifier;
            return this;
        }

        public Builder qualifier(String qualifier) {
            return qualifier(Output.of(qualifier));
        }

        public FunctionEventInvokeConfigArgs build() {
            $.functionName = Objects.requireNonNull($.functionName, "expected parameter 'functionName' to be non-null");
            return $;
        }
    }

}
