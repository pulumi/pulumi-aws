// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.alb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ListenerMutualAuthenticationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ListenerMutualAuthenticationArgs Empty = new ListenerMutualAuthenticationArgs();

    /**
     * Whether client certificate expiry is ignored. Default is `false`.
     * 
     */
    @Import(name="ignoreClientCertificateExpiry")
    private @Nullable Output<Boolean> ignoreClientCertificateExpiry;

    /**
     * @return Whether client certificate expiry is ignored. Default is `false`.
     * 
     */
    public Optional<Output<Boolean>> ignoreClientCertificateExpiry() {
        return Optional.ofNullable(this.ignoreClientCertificateExpiry);
    }

    /**
     * Valid values are `off`, `verify` and `passthrough`.
     * 
     */
    @Import(name="mode", required=true)
    private Output<String> mode;

    /**
     * @return Valid values are `off`, `verify` and `passthrough`.
     * 
     */
    public Output<String> mode() {
        return this.mode;
    }

    /**
     * ARN of the elbv2 Trust Store.
     * 
     */
    @Import(name="trustStoreArn")
    private @Nullable Output<String> trustStoreArn;

    /**
     * @return ARN of the elbv2 Trust Store.
     * 
     */
    public Optional<Output<String>> trustStoreArn() {
        return Optional.ofNullable(this.trustStoreArn);
    }

    private ListenerMutualAuthenticationArgs() {}

    private ListenerMutualAuthenticationArgs(ListenerMutualAuthenticationArgs $) {
        this.ignoreClientCertificateExpiry = $.ignoreClientCertificateExpiry;
        this.mode = $.mode;
        this.trustStoreArn = $.trustStoreArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ListenerMutualAuthenticationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ListenerMutualAuthenticationArgs $;

        public Builder() {
            $ = new ListenerMutualAuthenticationArgs();
        }

        public Builder(ListenerMutualAuthenticationArgs defaults) {
            $ = new ListenerMutualAuthenticationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ignoreClientCertificateExpiry Whether client certificate expiry is ignored. Default is `false`.
         * 
         * @return builder
         * 
         */
        public Builder ignoreClientCertificateExpiry(@Nullable Output<Boolean> ignoreClientCertificateExpiry) {
            $.ignoreClientCertificateExpiry = ignoreClientCertificateExpiry;
            return this;
        }

        /**
         * @param ignoreClientCertificateExpiry Whether client certificate expiry is ignored. Default is `false`.
         * 
         * @return builder
         * 
         */
        public Builder ignoreClientCertificateExpiry(Boolean ignoreClientCertificateExpiry) {
            return ignoreClientCertificateExpiry(Output.of(ignoreClientCertificateExpiry));
        }

        /**
         * @param mode Valid values are `off`, `verify` and `passthrough`.
         * 
         * @return builder
         * 
         */
        public Builder mode(Output<String> mode) {
            $.mode = mode;
            return this;
        }

        /**
         * @param mode Valid values are `off`, `verify` and `passthrough`.
         * 
         * @return builder
         * 
         */
        public Builder mode(String mode) {
            return mode(Output.of(mode));
        }

        /**
         * @param trustStoreArn ARN of the elbv2 Trust Store.
         * 
         * @return builder
         * 
         */
        public Builder trustStoreArn(@Nullable Output<String> trustStoreArn) {
            $.trustStoreArn = trustStoreArn;
            return this;
        }

        /**
         * @param trustStoreArn ARN of the elbv2 Trust Store.
         * 
         * @return builder
         * 
         */
        public Builder trustStoreArn(String trustStoreArn) {
            return trustStoreArn(Output.of(trustStoreArn));
        }

        public ListenerMutualAuthenticationArgs build() {
            if ($.mode == null) {
                throw new MissingRequiredPropertyException("ListenerMutualAuthenticationArgs", "mode");
            }
            return $;
        }
    }

}
