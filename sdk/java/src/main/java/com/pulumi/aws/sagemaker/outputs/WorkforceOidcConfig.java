// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class WorkforceOidcConfig {
    private String authorizationEndpoint;
    private String clientId;
    private String clientSecret;
    private String issuer;
    private String jwksUri;
    private String logoutEndpoint;
    private String tokenEndpoint;
    private String userInfoEndpoint;

    private WorkforceOidcConfig() {}
    public String authorizationEndpoint() {
        return this.authorizationEndpoint;
    }
    public String clientId() {
        return this.clientId;
    }
    public String clientSecret() {
        return this.clientSecret;
    }
    public String issuer() {
        return this.issuer;
    }
    public String jwksUri() {
        return this.jwksUri;
    }
    public String logoutEndpoint() {
        return this.logoutEndpoint;
    }
    public String tokenEndpoint() {
        return this.tokenEndpoint;
    }
    public String userInfoEndpoint() {
        return this.userInfoEndpoint;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkforceOidcConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String authorizationEndpoint;
        private String clientId;
        private String clientSecret;
        private String issuer;
        private String jwksUri;
        private String logoutEndpoint;
        private String tokenEndpoint;
        private String userInfoEndpoint;
        public Builder() {}
        public Builder(WorkforceOidcConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizationEndpoint = defaults.authorizationEndpoint;
    	      this.clientId = defaults.clientId;
    	      this.clientSecret = defaults.clientSecret;
    	      this.issuer = defaults.issuer;
    	      this.jwksUri = defaults.jwksUri;
    	      this.logoutEndpoint = defaults.logoutEndpoint;
    	      this.tokenEndpoint = defaults.tokenEndpoint;
    	      this.userInfoEndpoint = defaults.userInfoEndpoint;
        }

        @CustomType.Setter
        public Builder authorizationEndpoint(String authorizationEndpoint) {
            this.authorizationEndpoint = Objects.requireNonNull(authorizationEndpoint);
            return this;
        }
        @CustomType.Setter
        public Builder clientId(String clientId) {
            this.clientId = Objects.requireNonNull(clientId);
            return this;
        }
        @CustomType.Setter
        public Builder clientSecret(String clientSecret) {
            this.clientSecret = Objects.requireNonNull(clientSecret);
            return this;
        }
        @CustomType.Setter
        public Builder issuer(String issuer) {
            this.issuer = Objects.requireNonNull(issuer);
            return this;
        }
        @CustomType.Setter
        public Builder jwksUri(String jwksUri) {
            this.jwksUri = Objects.requireNonNull(jwksUri);
            return this;
        }
        @CustomType.Setter
        public Builder logoutEndpoint(String logoutEndpoint) {
            this.logoutEndpoint = Objects.requireNonNull(logoutEndpoint);
            return this;
        }
        @CustomType.Setter
        public Builder tokenEndpoint(String tokenEndpoint) {
            this.tokenEndpoint = Objects.requireNonNull(tokenEndpoint);
            return this;
        }
        @CustomType.Setter
        public Builder userInfoEndpoint(String userInfoEndpoint) {
            this.userInfoEndpoint = Objects.requireNonNull(userInfoEndpoint);
            return this;
        }
        public WorkforceOidcConfig build() {
            final var o = new WorkforceOidcConfig();
            o.authorizationEndpoint = authorizationEndpoint;
            o.clientId = clientId;
            o.clientSecret = clientSecret;
            o.issuer = issuer;
            o.jwksUri = jwksUri;
            o.logoutEndpoint = logoutEndpoint;
            o.tokenEndpoint = tokenEndpoint;
            o.userInfoEndpoint = userInfoEndpoint;
            return o;
        }
    }
}
