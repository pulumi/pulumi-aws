// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elasticache.inputs;

import com.pulumi.aws.elasticache.inputs.ServerlessCacheCacheUsageLimitsDataStorageArgs;
import com.pulumi.aws.elasticache.inputs.ServerlessCacheCacheUsageLimitsEcpuPerSecondArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServerlessCacheCacheUsageLimitsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServerlessCacheCacheUsageLimitsArgs Empty = new ServerlessCacheCacheUsageLimitsArgs();

    @Import(name="dataStorage")
    private @Nullable Output<ServerlessCacheCacheUsageLimitsDataStorageArgs> dataStorage;

    public Optional<Output<ServerlessCacheCacheUsageLimitsDataStorageArgs>> dataStorage() {
        return Optional.ofNullable(this.dataStorage);
    }

    @Import(name="ecpuPerSeconds")
    private @Nullable Output<List<ServerlessCacheCacheUsageLimitsEcpuPerSecondArgs>> ecpuPerSeconds;

    public Optional<Output<List<ServerlessCacheCacheUsageLimitsEcpuPerSecondArgs>>> ecpuPerSeconds() {
        return Optional.ofNullable(this.ecpuPerSeconds);
    }

    private ServerlessCacheCacheUsageLimitsArgs() {}

    private ServerlessCacheCacheUsageLimitsArgs(ServerlessCacheCacheUsageLimitsArgs $) {
        this.dataStorage = $.dataStorage;
        this.ecpuPerSeconds = $.ecpuPerSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServerlessCacheCacheUsageLimitsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServerlessCacheCacheUsageLimitsArgs $;

        public Builder() {
            $ = new ServerlessCacheCacheUsageLimitsArgs();
        }

        public Builder(ServerlessCacheCacheUsageLimitsArgs defaults) {
            $ = new ServerlessCacheCacheUsageLimitsArgs(Objects.requireNonNull(defaults));
        }

        public Builder dataStorage(@Nullable Output<ServerlessCacheCacheUsageLimitsDataStorageArgs> dataStorage) {
            $.dataStorage = dataStorage;
            return this;
        }

        public Builder dataStorage(ServerlessCacheCacheUsageLimitsDataStorageArgs dataStorage) {
            return dataStorage(Output.of(dataStorage));
        }

        public Builder ecpuPerSeconds(@Nullable Output<List<ServerlessCacheCacheUsageLimitsEcpuPerSecondArgs>> ecpuPerSeconds) {
            $.ecpuPerSeconds = ecpuPerSeconds;
            return this;
        }

        public Builder ecpuPerSeconds(List<ServerlessCacheCacheUsageLimitsEcpuPerSecondArgs> ecpuPerSeconds) {
            return ecpuPerSeconds(Output.of(ecpuPerSeconds));
        }

        public Builder ecpuPerSeconds(ServerlessCacheCacheUsageLimitsEcpuPerSecondArgs... ecpuPerSeconds) {
            return ecpuPerSeconds(List.of(ecpuPerSeconds));
        }

        public ServerlessCacheCacheUsageLimitsArgs build() {
            return $;
        }
    }

}
