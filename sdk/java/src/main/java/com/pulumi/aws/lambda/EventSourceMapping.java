// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lambda;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.lambda.EventSourceMappingArgs;
import com.pulumi.aws.lambda.inputs.EventSourceMappingState;
import com.pulumi.aws.lambda.outputs.EventSourceMappingAmazonManagedKafkaEventSourceConfig;
import com.pulumi.aws.lambda.outputs.EventSourceMappingDestinationConfig;
import com.pulumi.aws.lambda.outputs.EventSourceMappingFilterCriteria;
import com.pulumi.aws.lambda.outputs.EventSourceMappingSelfManagedEventSource;
import com.pulumi.aws.lambda.outputs.EventSourceMappingSelfManagedKafkaEventSourceConfig;
import com.pulumi.aws.lambda.outputs.EventSourceMappingSourceAccessConfiguration;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="aws:lambda/eventSourceMapping:EventSourceMapping")
public class EventSourceMapping extends com.pulumi.resources.CustomResource {
    @Export(name="amazonManagedKafkaEventSourceConfig", refs={EventSourceMappingAmazonManagedKafkaEventSourceConfig.class}, tree="[0]")
    private Output<EventSourceMappingAmazonManagedKafkaEventSourceConfig> amazonManagedKafkaEventSourceConfig;

    public Output<EventSourceMappingAmazonManagedKafkaEventSourceConfig> amazonManagedKafkaEventSourceConfig() {
        return this.amazonManagedKafkaEventSourceConfig;
    }
    @Export(name="batchSize", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> batchSize;

    public Output<Optional<Integer>> batchSize() {
        return Codegen.optional(this.batchSize);
    }
    @Export(name="bisectBatchOnFunctionError", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> bisectBatchOnFunctionError;

    public Output<Optional<Boolean>> bisectBatchOnFunctionError() {
        return Codegen.optional(this.bisectBatchOnFunctionError);
    }
    @Export(name="destinationConfig", refs={EventSourceMappingDestinationConfig.class}, tree="[0]")
    private Output</* @Nullable */ EventSourceMappingDestinationConfig> destinationConfig;

    public Output<Optional<EventSourceMappingDestinationConfig>> destinationConfig() {
        return Codegen.optional(this.destinationConfig);
    }
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enabled;

    public Output<Optional<Boolean>> enabled() {
        return Codegen.optional(this.enabled);
    }
    @Export(name="eventSourceArn", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> eventSourceArn;

    public Output<Optional<String>> eventSourceArn() {
        return Codegen.optional(this.eventSourceArn);
    }
    @Export(name="filterCriteria", refs={EventSourceMappingFilterCriteria.class}, tree="[0]")
    private Output</* @Nullable */ EventSourceMappingFilterCriteria> filterCriteria;

    public Output<Optional<EventSourceMappingFilterCriteria>> filterCriteria() {
        return Codegen.optional(this.filterCriteria);
    }
    @Export(name="functionArn", refs={String.class}, tree="[0]")
    private Output<String> functionArn;

    public Output<String> functionArn() {
        return this.functionArn;
    }
    @Export(name="functionName", refs={String.class}, tree="[0]")
    private Output<String> functionName;

    public Output<String> functionName() {
        return this.functionName;
    }
    @Export(name="functionResponseTypes", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> functionResponseTypes;

    public Output<Optional<List<String>>> functionResponseTypes() {
        return Codegen.optional(this.functionResponseTypes);
    }
    @Export(name="lastModified", refs={String.class}, tree="[0]")
    private Output<String> lastModified;

    public Output<String> lastModified() {
        return this.lastModified;
    }
    @Export(name="lastProcessingResult", refs={String.class}, tree="[0]")
    private Output<String> lastProcessingResult;

    public Output<String> lastProcessingResult() {
        return this.lastProcessingResult;
    }
    @Export(name="maximumBatchingWindowInSeconds", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> maximumBatchingWindowInSeconds;

    public Output<Optional<Integer>> maximumBatchingWindowInSeconds() {
        return Codegen.optional(this.maximumBatchingWindowInSeconds);
    }
    @Export(name="maximumRecordAgeInSeconds", refs={Integer.class}, tree="[0]")
    private Output<Integer> maximumRecordAgeInSeconds;

    public Output<Integer> maximumRecordAgeInSeconds() {
        return this.maximumRecordAgeInSeconds;
    }
    @Export(name="maximumRetryAttempts", refs={Integer.class}, tree="[0]")
    private Output<Integer> maximumRetryAttempts;

    public Output<Integer> maximumRetryAttempts() {
        return this.maximumRetryAttempts;
    }
    @Export(name="parallelizationFactor", refs={Integer.class}, tree="[0]")
    private Output<Integer> parallelizationFactor;

    public Output<Integer> parallelizationFactor() {
        return this.parallelizationFactor;
    }
    @Export(name="queues", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> queues;

    public Output<Optional<List<String>>> queues() {
        return Codegen.optional(this.queues);
    }
    @Export(name="selfManagedEventSource", refs={EventSourceMappingSelfManagedEventSource.class}, tree="[0]")
    private Output</* @Nullable */ EventSourceMappingSelfManagedEventSource> selfManagedEventSource;

    public Output<Optional<EventSourceMappingSelfManagedEventSource>> selfManagedEventSource() {
        return Codegen.optional(this.selfManagedEventSource);
    }
    @Export(name="selfManagedKafkaEventSourceConfig", refs={EventSourceMappingSelfManagedKafkaEventSourceConfig.class}, tree="[0]")
    private Output<EventSourceMappingSelfManagedKafkaEventSourceConfig> selfManagedKafkaEventSourceConfig;

    public Output<EventSourceMappingSelfManagedKafkaEventSourceConfig> selfManagedKafkaEventSourceConfig() {
        return this.selfManagedKafkaEventSourceConfig;
    }
    @Export(name="sourceAccessConfigurations", refs={List.class,EventSourceMappingSourceAccessConfiguration.class}, tree="[0,1]")
    private Output</* @Nullable */ List<EventSourceMappingSourceAccessConfiguration>> sourceAccessConfigurations;

    public Output<Optional<List<EventSourceMappingSourceAccessConfiguration>>> sourceAccessConfigurations() {
        return Codegen.optional(this.sourceAccessConfigurations);
    }
    @Export(name="startingPosition", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> startingPosition;

    public Output<Optional<String>> startingPosition() {
        return Codegen.optional(this.startingPosition);
    }
    @Export(name="startingPositionTimestamp", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> startingPositionTimestamp;

    public Output<Optional<String>> startingPositionTimestamp() {
        return Codegen.optional(this.startingPositionTimestamp);
    }
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    public Output<String> state() {
        return this.state;
    }
    @Export(name="stateTransitionReason", refs={String.class}, tree="[0]")
    private Output<String> stateTransitionReason;

    public Output<String> stateTransitionReason() {
        return this.stateTransitionReason;
    }
    @Export(name="topics", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> topics;

    public Output<Optional<List<String>>> topics() {
        return Codegen.optional(this.topics);
    }
    @Export(name="tumblingWindowInSeconds", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> tumblingWindowInSeconds;

    public Output<Optional<Integer>> tumblingWindowInSeconds() {
        return Codegen.optional(this.tumblingWindowInSeconds);
    }
    @Export(name="uuid", refs={String.class}, tree="[0]")
    private Output<String> uuid;

    public Output<String> uuid() {
        return this.uuid;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public EventSourceMapping(String name) {
        this(name, EventSourceMappingArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public EventSourceMapping(String name, EventSourceMappingArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public EventSourceMapping(String name, EventSourceMappingArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:lambda/eventSourceMapping:EventSourceMapping", name, args == null ? EventSourceMappingArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private EventSourceMapping(String name, Output<String> id, @Nullable EventSourceMappingState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:lambda/eventSourceMapping:EventSourceMapping", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static EventSourceMapping get(String name, Output<String> id, @Nullable EventSourceMappingState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new EventSourceMapping(name, id, state, options);
    }
}
