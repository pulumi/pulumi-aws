// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.pipes.outputs;

import com.pulumi.aws.pipes.outputs.PipeTargetParametersBatchJobParameters;
import com.pulumi.aws.pipes.outputs.PipeTargetParametersCloudwatchLogsParameters;
import com.pulumi.aws.pipes.outputs.PipeTargetParametersEcsTaskParameters;
import com.pulumi.aws.pipes.outputs.PipeTargetParametersEventbridgeEventBusParameters;
import com.pulumi.aws.pipes.outputs.PipeTargetParametersHttpParameters;
import com.pulumi.aws.pipes.outputs.PipeTargetParametersKinesisStreamParameters;
import com.pulumi.aws.pipes.outputs.PipeTargetParametersLambdaFunctionParameters;
import com.pulumi.aws.pipes.outputs.PipeTargetParametersRedshiftDataParameters;
import com.pulumi.aws.pipes.outputs.PipeTargetParametersSagemakerPipelineParameters;
import com.pulumi.aws.pipes.outputs.PipeTargetParametersSqsQueueParameters;
import com.pulumi.aws.pipes.outputs.PipeTargetParametersStepFunctionStateMachineParameters;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PipeTargetParameters {
    /**
     * @return The parameters for using an AWS Batch job as a target. Detailed below.
     * 
     */
    private @Nullable PipeTargetParametersBatchJobParameters batchJobParameters;
    /**
     * @return The parameters for using an CloudWatch Logs log stream as a target. Detailed below.
     * 
     */
    private @Nullable PipeTargetParametersCloudwatchLogsParameters cloudwatchLogsParameters;
    /**
     * @return The parameters for using an Amazon ECS task as a target. Detailed below.
     * 
     */
    private @Nullable PipeTargetParametersEcsTaskParameters ecsTaskParameters;
    /**
     * @return The parameters for using an EventBridge event bus as a target. Detailed below.
     * 
     */
    private @Nullable PipeTargetParametersEventbridgeEventBusParameters eventbridgeEventBusParameters;
    /**
     * @return These are custom parameter to be used when the target is an API Gateway REST APIs or EventBridge ApiDestinations. Detailed below.
     * 
     */
    private @Nullable PipeTargetParametersHttpParameters httpParameters;
    /**
     * @return Valid JSON text passed to the target. In this case, nothing from the event itself is passed to the target. Maximum length of 8192 characters.
     * 
     */
    private @Nullable String inputTemplate;
    /**
     * @return The parameters for using a Kinesis stream as a source. Detailed below.
     * 
     */
    private @Nullable PipeTargetParametersKinesisStreamParameters kinesisStreamParameters;
    /**
     * @return The parameters for using a Lambda function as a target. Detailed below.
     * 
     */
    private @Nullable PipeTargetParametersLambdaFunctionParameters lambdaFunctionParameters;
    /**
     * @return These are custom parameters to be used when the target is a Amazon Redshift cluster to invoke the Amazon Redshift Data API BatchExecuteStatement. Detailed below.
     * 
     */
    private @Nullable PipeTargetParametersRedshiftDataParameters redshiftDataParameters;
    /**
     * @return The parameters for using a SageMaker pipeline as a target. Detailed below.
     * 
     */
    private @Nullable PipeTargetParametersSagemakerPipelineParameters sagemakerPipelineParameters;
    /**
     * @return The parameters for using a Amazon SQS stream as a target. Detailed below.
     * 
     */
    private @Nullable PipeTargetParametersSqsQueueParameters sqsQueueParameters;
    /**
     * @return The parameters for using a Step Functions state machine as a target. Detailed below.
     * 
     */
    private @Nullable PipeTargetParametersStepFunctionStateMachineParameters stepFunctionStateMachineParameters;

    private PipeTargetParameters() {}
    /**
     * @return The parameters for using an AWS Batch job as a target. Detailed below.
     * 
     */
    public Optional<PipeTargetParametersBatchJobParameters> batchJobParameters() {
        return Optional.ofNullable(this.batchJobParameters);
    }
    /**
     * @return The parameters for using an CloudWatch Logs log stream as a target. Detailed below.
     * 
     */
    public Optional<PipeTargetParametersCloudwatchLogsParameters> cloudwatchLogsParameters() {
        return Optional.ofNullable(this.cloudwatchLogsParameters);
    }
    /**
     * @return The parameters for using an Amazon ECS task as a target. Detailed below.
     * 
     */
    public Optional<PipeTargetParametersEcsTaskParameters> ecsTaskParameters() {
        return Optional.ofNullable(this.ecsTaskParameters);
    }
    /**
     * @return The parameters for using an EventBridge event bus as a target. Detailed below.
     * 
     */
    public Optional<PipeTargetParametersEventbridgeEventBusParameters> eventbridgeEventBusParameters() {
        return Optional.ofNullable(this.eventbridgeEventBusParameters);
    }
    /**
     * @return These are custom parameter to be used when the target is an API Gateway REST APIs or EventBridge ApiDestinations. Detailed below.
     * 
     */
    public Optional<PipeTargetParametersHttpParameters> httpParameters() {
        return Optional.ofNullable(this.httpParameters);
    }
    /**
     * @return Valid JSON text passed to the target. In this case, nothing from the event itself is passed to the target. Maximum length of 8192 characters.
     * 
     */
    public Optional<String> inputTemplate() {
        return Optional.ofNullable(this.inputTemplate);
    }
    /**
     * @return The parameters for using a Kinesis stream as a source. Detailed below.
     * 
     */
    public Optional<PipeTargetParametersKinesisStreamParameters> kinesisStreamParameters() {
        return Optional.ofNullable(this.kinesisStreamParameters);
    }
    /**
     * @return The parameters for using a Lambda function as a target. Detailed below.
     * 
     */
    public Optional<PipeTargetParametersLambdaFunctionParameters> lambdaFunctionParameters() {
        return Optional.ofNullable(this.lambdaFunctionParameters);
    }
    /**
     * @return These are custom parameters to be used when the target is a Amazon Redshift cluster to invoke the Amazon Redshift Data API BatchExecuteStatement. Detailed below.
     * 
     */
    public Optional<PipeTargetParametersRedshiftDataParameters> redshiftDataParameters() {
        return Optional.ofNullable(this.redshiftDataParameters);
    }
    /**
     * @return The parameters for using a SageMaker pipeline as a target. Detailed below.
     * 
     */
    public Optional<PipeTargetParametersSagemakerPipelineParameters> sagemakerPipelineParameters() {
        return Optional.ofNullable(this.sagemakerPipelineParameters);
    }
    /**
     * @return The parameters for using a Amazon SQS stream as a target. Detailed below.
     * 
     */
    public Optional<PipeTargetParametersSqsQueueParameters> sqsQueueParameters() {
        return Optional.ofNullable(this.sqsQueueParameters);
    }
    /**
     * @return The parameters for using a Step Functions state machine as a target. Detailed below.
     * 
     */
    public Optional<PipeTargetParametersStepFunctionStateMachineParameters> stepFunctionStateMachineParameters() {
        return Optional.ofNullable(this.stepFunctionStateMachineParameters);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PipeTargetParameters defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable PipeTargetParametersBatchJobParameters batchJobParameters;
        private @Nullable PipeTargetParametersCloudwatchLogsParameters cloudwatchLogsParameters;
        private @Nullable PipeTargetParametersEcsTaskParameters ecsTaskParameters;
        private @Nullable PipeTargetParametersEventbridgeEventBusParameters eventbridgeEventBusParameters;
        private @Nullable PipeTargetParametersHttpParameters httpParameters;
        private @Nullable String inputTemplate;
        private @Nullable PipeTargetParametersKinesisStreamParameters kinesisStreamParameters;
        private @Nullable PipeTargetParametersLambdaFunctionParameters lambdaFunctionParameters;
        private @Nullable PipeTargetParametersRedshiftDataParameters redshiftDataParameters;
        private @Nullable PipeTargetParametersSagemakerPipelineParameters sagemakerPipelineParameters;
        private @Nullable PipeTargetParametersSqsQueueParameters sqsQueueParameters;
        private @Nullable PipeTargetParametersStepFunctionStateMachineParameters stepFunctionStateMachineParameters;
        public Builder() {}
        public Builder(PipeTargetParameters defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.batchJobParameters = defaults.batchJobParameters;
    	      this.cloudwatchLogsParameters = defaults.cloudwatchLogsParameters;
    	      this.ecsTaskParameters = defaults.ecsTaskParameters;
    	      this.eventbridgeEventBusParameters = defaults.eventbridgeEventBusParameters;
    	      this.httpParameters = defaults.httpParameters;
    	      this.inputTemplate = defaults.inputTemplate;
    	      this.kinesisStreamParameters = defaults.kinesisStreamParameters;
    	      this.lambdaFunctionParameters = defaults.lambdaFunctionParameters;
    	      this.redshiftDataParameters = defaults.redshiftDataParameters;
    	      this.sagemakerPipelineParameters = defaults.sagemakerPipelineParameters;
    	      this.sqsQueueParameters = defaults.sqsQueueParameters;
    	      this.stepFunctionStateMachineParameters = defaults.stepFunctionStateMachineParameters;
        }

        @CustomType.Setter
        public Builder batchJobParameters(@Nullable PipeTargetParametersBatchJobParameters batchJobParameters) {
            this.batchJobParameters = batchJobParameters;
            return this;
        }
        @CustomType.Setter
        public Builder cloudwatchLogsParameters(@Nullable PipeTargetParametersCloudwatchLogsParameters cloudwatchLogsParameters) {
            this.cloudwatchLogsParameters = cloudwatchLogsParameters;
            return this;
        }
        @CustomType.Setter
        public Builder ecsTaskParameters(@Nullable PipeTargetParametersEcsTaskParameters ecsTaskParameters) {
            this.ecsTaskParameters = ecsTaskParameters;
            return this;
        }
        @CustomType.Setter
        public Builder eventbridgeEventBusParameters(@Nullable PipeTargetParametersEventbridgeEventBusParameters eventbridgeEventBusParameters) {
            this.eventbridgeEventBusParameters = eventbridgeEventBusParameters;
            return this;
        }
        @CustomType.Setter
        public Builder httpParameters(@Nullable PipeTargetParametersHttpParameters httpParameters) {
            this.httpParameters = httpParameters;
            return this;
        }
        @CustomType.Setter
        public Builder inputTemplate(@Nullable String inputTemplate) {
            this.inputTemplate = inputTemplate;
            return this;
        }
        @CustomType.Setter
        public Builder kinesisStreamParameters(@Nullable PipeTargetParametersKinesisStreamParameters kinesisStreamParameters) {
            this.kinesisStreamParameters = kinesisStreamParameters;
            return this;
        }
        @CustomType.Setter
        public Builder lambdaFunctionParameters(@Nullable PipeTargetParametersLambdaFunctionParameters lambdaFunctionParameters) {
            this.lambdaFunctionParameters = lambdaFunctionParameters;
            return this;
        }
        @CustomType.Setter
        public Builder redshiftDataParameters(@Nullable PipeTargetParametersRedshiftDataParameters redshiftDataParameters) {
            this.redshiftDataParameters = redshiftDataParameters;
            return this;
        }
        @CustomType.Setter
        public Builder sagemakerPipelineParameters(@Nullable PipeTargetParametersSagemakerPipelineParameters sagemakerPipelineParameters) {
            this.sagemakerPipelineParameters = sagemakerPipelineParameters;
            return this;
        }
        @CustomType.Setter
        public Builder sqsQueueParameters(@Nullable PipeTargetParametersSqsQueueParameters sqsQueueParameters) {
            this.sqsQueueParameters = sqsQueueParameters;
            return this;
        }
        @CustomType.Setter
        public Builder stepFunctionStateMachineParameters(@Nullable PipeTargetParametersStepFunctionStateMachineParameters stepFunctionStateMachineParameters) {
            this.stepFunctionStateMachineParameters = stepFunctionStateMachineParameters;
            return this;
        }
        public PipeTargetParameters build() {
            final var o = new PipeTargetParameters();
            o.batchJobParameters = batchJobParameters;
            o.cloudwatchLogsParameters = cloudwatchLogsParameters;
            o.ecsTaskParameters = ecsTaskParameters;
            o.eventbridgeEventBusParameters = eventbridgeEventBusParameters;
            o.httpParameters = httpParameters;
            o.inputTemplate = inputTemplate;
            o.kinesisStreamParameters = kinesisStreamParameters;
            o.lambdaFunctionParameters = lambdaFunctionParameters;
            o.redshiftDataParameters = redshiftDataParameters;
            o.sagemakerPipelineParameters = sagemakerPipelineParameters;
            o.sqsQueueParameters = sqsQueueParameters;
            o.stepFunctionStateMachineParameters = stepFunctionStateMachineParameters;
            return o;
        }
    }
}
