// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sns;

import com.pulumi.aws.sns.inputs.PolicyDocumentArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TopicPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final TopicPolicyArgs Empty = new TopicPolicyArgs();

    /**
     * The ARN of the SNS topic
     * 
     */
    @Import(name="arn", required=true)
    private Output<String> arn;

    /**
     * @return The ARN of the SNS topic
     * 
     */
    public Output<String> arn() {
        return this.arn;
    }

    /**
     * The fully-formed AWS policy as JSON.
     * 
     */
    @Import(name="policy", required=true)
    private Output<Either<String,PolicyDocumentArgs>> policy;

    /**
     * @return The fully-formed AWS policy as JSON.
     * 
     */
    public Output<Either<String,PolicyDocumentArgs>> policy() {
        return this.policy;
    }

    /**
     * The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    private TopicPolicyArgs() {}

    private TopicPolicyArgs(TopicPolicyArgs $) {
        this.arn = $.arn;
        this.policy = $.policy;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TopicPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TopicPolicyArgs $;

        public Builder() {
            $ = new TopicPolicyArgs();
        }

        public Builder(TopicPolicyArgs defaults) {
            $ = new TopicPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn The ARN of the SNS topic
         * 
         * @return builder
         * 
         */
        public Builder arn(Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn The ARN of the SNS topic
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param policy The fully-formed AWS policy as JSON.
         * 
         * @return builder
         * 
         */
        public Builder policy(Output<Either<String,PolicyDocumentArgs>> policy) {
            $.policy = policy;
            return this;
        }

        /**
         * @param policy The fully-formed AWS policy as JSON.
         * 
         * @return builder
         * 
         */
        public Builder policy(Either<String,PolicyDocumentArgs> policy) {
            return policy(Output.of(policy));
        }

        /**
         * @param policy The fully-formed AWS policy as JSON.
         * 
         * @return builder
         * 
         */
        public Builder policy(String policy) {
            return policy(Either.ofLeft(policy));
        }

        /**
         * @param policy The fully-formed AWS policy as JSON.
         * 
         * @return builder
         * 
         */
        public Builder policy(PolicyDocumentArgs policy) {
            return policy(Either.ofRight(policy));
        }

        /**
         * @param region The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public TopicPolicyArgs build() {
            if ($.arn == null) {
                throw new MissingRequiredPropertyException("TopicPolicyArgs", "arn");
            }
            if ($.policy == null) {
                throw new MissingRequiredPropertyException("TopicPolicyArgs", "policy");
            }
            return $;
        }
    }

}
