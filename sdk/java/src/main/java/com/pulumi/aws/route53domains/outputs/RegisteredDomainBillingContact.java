// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.route53domains.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RegisteredDomainBillingContact {
    private @Nullable String addressLine1;
    private @Nullable String addressLine2;
    private @Nullable String city;
    private @Nullable String contactType;
    private @Nullable String countryCode;
    private @Nullable String email;
    private @Nullable Map<String,String> extraParams;
    private @Nullable String fax;
    private @Nullable String firstName;
    private @Nullable String lastName;
    private @Nullable String organizationName;
    private @Nullable String phoneNumber;
    private @Nullable String state;
    private @Nullable String zipCode;

    private RegisteredDomainBillingContact() {}
    public Optional<String> addressLine1() {
        return Optional.ofNullable(this.addressLine1);
    }
    public Optional<String> addressLine2() {
        return Optional.ofNullable(this.addressLine2);
    }
    public Optional<String> city() {
        return Optional.ofNullable(this.city);
    }
    public Optional<String> contactType() {
        return Optional.ofNullable(this.contactType);
    }
    public Optional<String> countryCode() {
        return Optional.ofNullable(this.countryCode);
    }
    public Optional<String> email() {
        return Optional.ofNullable(this.email);
    }
    public Map<String,String> extraParams() {
        return this.extraParams == null ? Map.of() : this.extraParams;
    }
    public Optional<String> fax() {
        return Optional.ofNullable(this.fax);
    }
    public Optional<String> firstName() {
        return Optional.ofNullable(this.firstName);
    }
    public Optional<String> lastName() {
        return Optional.ofNullable(this.lastName);
    }
    public Optional<String> organizationName() {
        return Optional.ofNullable(this.organizationName);
    }
    public Optional<String> phoneNumber() {
        return Optional.ofNullable(this.phoneNumber);
    }
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    public Optional<String> zipCode() {
        return Optional.ofNullable(this.zipCode);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RegisteredDomainBillingContact defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String addressLine1;
        private @Nullable String addressLine2;
        private @Nullable String city;
        private @Nullable String contactType;
        private @Nullable String countryCode;
        private @Nullable String email;
        private @Nullable Map<String,String> extraParams;
        private @Nullable String fax;
        private @Nullable String firstName;
        private @Nullable String lastName;
        private @Nullable String organizationName;
        private @Nullable String phoneNumber;
        private @Nullable String state;
        private @Nullable String zipCode;
        public Builder() {}
        public Builder(RegisteredDomainBillingContact defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addressLine1 = defaults.addressLine1;
    	      this.addressLine2 = defaults.addressLine2;
    	      this.city = defaults.city;
    	      this.contactType = defaults.contactType;
    	      this.countryCode = defaults.countryCode;
    	      this.email = defaults.email;
    	      this.extraParams = defaults.extraParams;
    	      this.fax = defaults.fax;
    	      this.firstName = defaults.firstName;
    	      this.lastName = defaults.lastName;
    	      this.organizationName = defaults.organizationName;
    	      this.phoneNumber = defaults.phoneNumber;
    	      this.state = defaults.state;
    	      this.zipCode = defaults.zipCode;
        }

        @CustomType.Setter
        public Builder addressLine1(@Nullable String addressLine1) {

            this.addressLine1 = addressLine1;
            return this;
        }
        @CustomType.Setter
        public Builder addressLine2(@Nullable String addressLine2) {

            this.addressLine2 = addressLine2;
            return this;
        }
        @CustomType.Setter
        public Builder city(@Nullable String city) {

            this.city = city;
            return this;
        }
        @CustomType.Setter
        public Builder contactType(@Nullable String contactType) {

            this.contactType = contactType;
            return this;
        }
        @CustomType.Setter
        public Builder countryCode(@Nullable String countryCode) {

            this.countryCode = countryCode;
            return this;
        }
        @CustomType.Setter
        public Builder email(@Nullable String email) {

            this.email = email;
            return this;
        }
        @CustomType.Setter
        public Builder extraParams(@Nullable Map<String,String> extraParams) {

            this.extraParams = extraParams;
            return this;
        }
        @CustomType.Setter
        public Builder fax(@Nullable String fax) {

            this.fax = fax;
            return this;
        }
        @CustomType.Setter
        public Builder firstName(@Nullable String firstName) {

            this.firstName = firstName;
            return this;
        }
        @CustomType.Setter
        public Builder lastName(@Nullable String lastName) {

            this.lastName = lastName;
            return this;
        }
        @CustomType.Setter
        public Builder organizationName(@Nullable String organizationName) {

            this.organizationName = organizationName;
            return this;
        }
        @CustomType.Setter
        public Builder phoneNumber(@Nullable String phoneNumber) {

            this.phoneNumber = phoneNumber;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder zipCode(@Nullable String zipCode) {

            this.zipCode = zipCode;
            return this;
        }
        public RegisteredDomainBillingContact build() {
            final var _resultValue = new RegisteredDomainBillingContact();
            _resultValue.addressLine1 = addressLine1;
            _resultValue.addressLine2 = addressLine2;
            _resultValue.city = city;
            _resultValue.contactType = contactType;
            _resultValue.countryCode = countryCode;
            _resultValue.email = email;
            _resultValue.extraParams = extraParams;
            _resultValue.fax = fax;
            _resultValue.firstName = firstName;
            _resultValue.lastName = lastName;
            _resultValue.organizationName = organizationName;
            _resultValue.phoneNumber = phoneNumber;
            _resultValue.state = state;
            _resultValue.zipCode = zipCode;
            return _resultValue;
        }
    }
}
