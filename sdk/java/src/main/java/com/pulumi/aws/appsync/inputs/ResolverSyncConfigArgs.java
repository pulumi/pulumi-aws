// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appsync.inputs;

import com.pulumi.aws.appsync.inputs.ResolverSyncConfigLambdaConflictHandlerConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResolverSyncConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResolverSyncConfigArgs Empty = new ResolverSyncConfigArgs();

    @Import(name="conflictDetection")
    private @Nullable Output<String> conflictDetection;

    public Optional<Output<String>> conflictDetection() {
        return Optional.ofNullable(this.conflictDetection);
    }

    @Import(name="conflictHandler")
    private @Nullable Output<String> conflictHandler;

    public Optional<Output<String>> conflictHandler() {
        return Optional.ofNullable(this.conflictHandler);
    }

    @Import(name="lambdaConflictHandlerConfig")
    private @Nullable Output<ResolverSyncConfigLambdaConflictHandlerConfigArgs> lambdaConflictHandlerConfig;

    public Optional<Output<ResolverSyncConfigLambdaConflictHandlerConfigArgs>> lambdaConflictHandlerConfig() {
        return Optional.ofNullable(this.lambdaConflictHandlerConfig);
    }

    private ResolverSyncConfigArgs() {}

    private ResolverSyncConfigArgs(ResolverSyncConfigArgs $) {
        this.conflictDetection = $.conflictDetection;
        this.conflictHandler = $.conflictHandler;
        this.lambdaConflictHandlerConfig = $.lambdaConflictHandlerConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResolverSyncConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResolverSyncConfigArgs $;

        public Builder() {
            $ = new ResolverSyncConfigArgs();
        }

        public Builder(ResolverSyncConfigArgs defaults) {
            $ = new ResolverSyncConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder conflictDetection(@Nullable Output<String> conflictDetection) {
            $.conflictDetection = conflictDetection;
            return this;
        }

        public Builder conflictDetection(String conflictDetection) {
            return conflictDetection(Output.of(conflictDetection));
        }

        public Builder conflictHandler(@Nullable Output<String> conflictHandler) {
            $.conflictHandler = conflictHandler;
            return this;
        }

        public Builder conflictHandler(String conflictHandler) {
            return conflictHandler(Output.of(conflictHandler));
        }

        public Builder lambdaConflictHandlerConfig(@Nullable Output<ResolverSyncConfigLambdaConflictHandlerConfigArgs> lambdaConflictHandlerConfig) {
            $.lambdaConflictHandlerConfig = lambdaConflictHandlerConfig;
            return this;
        }

        public Builder lambdaConflictHandlerConfig(ResolverSyncConfigLambdaConflictHandlerConfigArgs lambdaConflictHandlerConfig) {
            return lambdaConflictHandlerConfig(Output.of(lambdaConflictHandlerConfig));
        }

        public ResolverSyncConfigArgs build() {
            return $;
        }
    }

}
