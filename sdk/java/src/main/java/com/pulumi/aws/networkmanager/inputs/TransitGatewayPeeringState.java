// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.networkmanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TransitGatewayPeeringState extends com.pulumi.resources.ResourceArgs {

    public static final TransitGatewayPeeringState Empty = new TransitGatewayPeeringState();

    /**
     * Peering Amazon Resource Name (ARN).
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return Peering Amazon Resource Name (ARN).
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * The ARN of the core network.
     * 
     */
    @Import(name="coreNetworkArn")
    private @Nullable Output<String> coreNetworkArn;

    /**
     * @return The ARN of the core network.
     * 
     */
    public Optional<Output<String>> coreNetworkArn() {
        return Optional.ofNullable(this.coreNetworkArn);
    }

    /**
     * The ID of a core network.
     * 
     */
    @Import(name="coreNetworkId")
    private @Nullable Output<String> coreNetworkId;

    /**
     * @return The ID of a core network.
     * 
     */
    public Optional<Output<String>> coreNetworkId() {
        return Optional.ofNullable(this.coreNetworkId);
    }

    /**
     * The edge location for the peer.
     * 
     */
    @Import(name="edgeLocation")
    private @Nullable Output<String> edgeLocation;

    /**
     * @return The edge location for the peer.
     * 
     */
    public Optional<Output<String>> edgeLocation() {
        return Optional.ofNullable(this.edgeLocation);
    }

    /**
     * The ID of the account owner.
     * 
     */
    @Import(name="ownerAccountId")
    private @Nullable Output<String> ownerAccountId;

    /**
     * @return The ID of the account owner.
     * 
     */
    public Optional<Output<String>> ownerAccountId() {
        return Optional.ofNullable(this.ownerAccountId);
    }

    /**
     * The type of peering. This will be `TRANSIT_GATEWAY`.
     * 
     */
    @Import(name="peeringType")
    private @Nullable Output<String> peeringType;

    /**
     * @return The type of peering. This will be `TRANSIT_GATEWAY`.
     * 
     */
    public Optional<Output<String>> peeringType() {
        return Optional.ofNullable(this.peeringType);
    }

    /**
     * The resource ARN of the peer.
     * 
     */
    @Import(name="resourceArn")
    private @Nullable Output<String> resourceArn;

    /**
     * @return The resource ARN of the peer.
     * 
     */
    public Optional<Output<String>> resourceArn() {
        return Optional.ofNullable(this.resourceArn);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    /**
     * The ARN of the transit gateway for the peering request.
     * 
     */
    @Import(name="transitGatewayArn")
    private @Nullable Output<String> transitGatewayArn;

    /**
     * @return The ARN of the transit gateway for the peering request.
     * 
     */
    public Optional<Output<String>> transitGatewayArn() {
        return Optional.ofNullable(this.transitGatewayArn);
    }

    /**
     * The ID of the transit gateway peering attachment.
     * 
     */
    @Import(name="transitGatewayPeeringAttachmentId")
    private @Nullable Output<String> transitGatewayPeeringAttachmentId;

    /**
     * @return The ID of the transit gateway peering attachment.
     * 
     */
    public Optional<Output<String>> transitGatewayPeeringAttachmentId() {
        return Optional.ofNullable(this.transitGatewayPeeringAttachmentId);
    }

    private TransitGatewayPeeringState() {}

    private TransitGatewayPeeringState(TransitGatewayPeeringState $) {
        this.arn = $.arn;
        this.coreNetworkArn = $.coreNetworkArn;
        this.coreNetworkId = $.coreNetworkId;
        this.edgeLocation = $.edgeLocation;
        this.ownerAccountId = $.ownerAccountId;
        this.peeringType = $.peeringType;
        this.resourceArn = $.resourceArn;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.transitGatewayArn = $.transitGatewayArn;
        this.transitGatewayPeeringAttachmentId = $.transitGatewayPeeringAttachmentId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TransitGatewayPeeringState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TransitGatewayPeeringState $;

        public Builder() {
            $ = new TransitGatewayPeeringState();
        }

        public Builder(TransitGatewayPeeringState defaults) {
            $ = new TransitGatewayPeeringState(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn Peering Amazon Resource Name (ARN).
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn Peering Amazon Resource Name (ARN).
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param coreNetworkArn The ARN of the core network.
         * 
         * @return builder
         * 
         */
        public Builder coreNetworkArn(@Nullable Output<String> coreNetworkArn) {
            $.coreNetworkArn = coreNetworkArn;
            return this;
        }

        /**
         * @param coreNetworkArn The ARN of the core network.
         * 
         * @return builder
         * 
         */
        public Builder coreNetworkArn(String coreNetworkArn) {
            return coreNetworkArn(Output.of(coreNetworkArn));
        }

        /**
         * @param coreNetworkId The ID of a core network.
         * 
         * @return builder
         * 
         */
        public Builder coreNetworkId(@Nullable Output<String> coreNetworkId) {
            $.coreNetworkId = coreNetworkId;
            return this;
        }

        /**
         * @param coreNetworkId The ID of a core network.
         * 
         * @return builder
         * 
         */
        public Builder coreNetworkId(String coreNetworkId) {
            return coreNetworkId(Output.of(coreNetworkId));
        }

        /**
         * @param edgeLocation The edge location for the peer.
         * 
         * @return builder
         * 
         */
        public Builder edgeLocation(@Nullable Output<String> edgeLocation) {
            $.edgeLocation = edgeLocation;
            return this;
        }

        /**
         * @param edgeLocation The edge location for the peer.
         * 
         * @return builder
         * 
         */
        public Builder edgeLocation(String edgeLocation) {
            return edgeLocation(Output.of(edgeLocation));
        }

        /**
         * @param ownerAccountId The ID of the account owner.
         * 
         * @return builder
         * 
         */
        public Builder ownerAccountId(@Nullable Output<String> ownerAccountId) {
            $.ownerAccountId = ownerAccountId;
            return this;
        }

        /**
         * @param ownerAccountId The ID of the account owner.
         * 
         * @return builder
         * 
         */
        public Builder ownerAccountId(String ownerAccountId) {
            return ownerAccountId(Output.of(ownerAccountId));
        }

        /**
         * @param peeringType The type of peering. This will be `TRANSIT_GATEWAY`.
         * 
         * @return builder
         * 
         */
        public Builder peeringType(@Nullable Output<String> peeringType) {
            $.peeringType = peeringType;
            return this;
        }

        /**
         * @param peeringType The type of peering. This will be `TRANSIT_GATEWAY`.
         * 
         * @return builder
         * 
         */
        public Builder peeringType(String peeringType) {
            return peeringType(Output.of(peeringType));
        }

        /**
         * @param resourceArn The resource ARN of the peer.
         * 
         * @return builder
         * 
         */
        public Builder resourceArn(@Nullable Output<String> resourceArn) {
            $.resourceArn = resourceArn;
            return this;
        }

        /**
         * @param resourceArn The resource ARN of the peer.
         * 
         * @return builder
         * 
         */
        public Builder resourceArn(String resourceArn) {
            return resourceArn(Output.of(resourceArn));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        /**
         * @param transitGatewayArn The ARN of the transit gateway for the peering request.
         * 
         * @return builder
         * 
         */
        public Builder transitGatewayArn(@Nullable Output<String> transitGatewayArn) {
            $.transitGatewayArn = transitGatewayArn;
            return this;
        }

        /**
         * @param transitGatewayArn The ARN of the transit gateway for the peering request.
         * 
         * @return builder
         * 
         */
        public Builder transitGatewayArn(String transitGatewayArn) {
            return transitGatewayArn(Output.of(transitGatewayArn));
        }

        /**
         * @param transitGatewayPeeringAttachmentId The ID of the transit gateway peering attachment.
         * 
         * @return builder
         * 
         */
        public Builder transitGatewayPeeringAttachmentId(@Nullable Output<String> transitGatewayPeeringAttachmentId) {
            $.transitGatewayPeeringAttachmentId = transitGatewayPeeringAttachmentId;
            return this;
        }

        /**
         * @param transitGatewayPeeringAttachmentId The ID of the transit gateway peering attachment.
         * 
         * @return builder
         * 
         */
        public Builder transitGatewayPeeringAttachmentId(String transitGatewayPeeringAttachmentId) {
            return transitGatewayPeeringAttachmentId(Output.of(transitGatewayPeeringAttachmentId));
        }

        public TransitGatewayPeeringState build() {
            return $;
        }
    }

}
