// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lambda;

import com.pulumi.aws.lambda.inputs.CodeSigningConfigAllowedPublishersArgs;
import com.pulumi.aws.lambda.inputs.CodeSigningConfigPoliciesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CodeSigningConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final CodeSigningConfigArgs Empty = new CodeSigningConfigArgs();

    @Import(name="allowedPublishers", required=true)
    private Output<CodeSigningConfigAllowedPublishersArgs> allowedPublishers;

    public Output<CodeSigningConfigAllowedPublishersArgs> allowedPublishers() {
        return this.allowedPublishers;
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="policies")
    private @Nullable Output<CodeSigningConfigPoliciesArgs> policies;

    public Optional<Output<CodeSigningConfigPoliciesArgs>> policies() {
        return Optional.ofNullable(this.policies);
    }

    private CodeSigningConfigArgs() {}

    private CodeSigningConfigArgs(CodeSigningConfigArgs $) {
        this.allowedPublishers = $.allowedPublishers;
        this.description = $.description;
        this.policies = $.policies;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CodeSigningConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CodeSigningConfigArgs $;

        public Builder() {
            $ = new CodeSigningConfigArgs();
        }

        public Builder(CodeSigningConfigArgs defaults) {
            $ = new CodeSigningConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder allowedPublishers(Output<CodeSigningConfigAllowedPublishersArgs> allowedPublishers) {
            $.allowedPublishers = allowedPublishers;
            return this;
        }

        public Builder allowedPublishers(CodeSigningConfigAllowedPublishersArgs allowedPublishers) {
            return allowedPublishers(Output.of(allowedPublishers));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder policies(@Nullable Output<CodeSigningConfigPoliciesArgs> policies) {
            $.policies = policies;
            return this;
        }

        public Builder policies(CodeSigningConfigPoliciesArgs policies) {
            return policies(Output.of(policies));
        }

        public CodeSigningConfigArgs build() {
            $.allowedPublishers = Objects.requireNonNull($.allowedPublishers, "expected parameter 'allowedPublishers' to be non-null");
            return $;
        }
    }

}
