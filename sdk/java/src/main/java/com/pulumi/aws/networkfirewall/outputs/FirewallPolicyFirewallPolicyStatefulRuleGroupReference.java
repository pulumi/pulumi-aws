// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.networkfirewall.outputs;

import com.pulumi.aws.networkfirewall.outputs.FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverride;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FirewallPolicyFirewallPolicyStatefulRuleGroupReference {
    /**
     * @return Whether to enable deep threat inspection, which allows AWS to analyze service logs of network traffic processed by these rule groups to identify threat indicators across customers. AWS will use these threat indicators to improve the active threat defense managed rule groups and protect the security of AWS customers and services. This only applies to active threat defense maanaged rule groups.
     * 
     * For details, refer to [AWS active threat defense for AWS Network Firewall](https://docs.aws.amazon.com/network-firewall/latest/developerguide/aws-managed-rule-groups-atd.html) in the AWS Network Firewall Developer Guide.
     * 
     */
    private @Nullable String deepThreatInspection;
    /**
     * @return Configuration block for override values
     * 
     */
    private @Nullable FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverride override;
    /**
     * @return An integer setting that indicates the order in which to apply the stateful rule groups in a single policy. This argument must be specified if the policy has a `stateful_engine_options` block with a `rule_order` value of `STRICT_ORDER`. AWS Network Firewall applies each stateful rule group to a packet starting with the group that has the lowest priority setting.
     * 
     */
    private @Nullable Integer priority;
    /**
     * @return The Amazon Resource Name (ARN) of the stateful rule group.
     * 
     */
    private String resourceArn;

    private FirewallPolicyFirewallPolicyStatefulRuleGroupReference() {}
    /**
     * @return Whether to enable deep threat inspection, which allows AWS to analyze service logs of network traffic processed by these rule groups to identify threat indicators across customers. AWS will use these threat indicators to improve the active threat defense managed rule groups and protect the security of AWS customers and services. This only applies to active threat defense maanaged rule groups.
     * 
     * For details, refer to [AWS active threat defense for AWS Network Firewall](https://docs.aws.amazon.com/network-firewall/latest/developerguide/aws-managed-rule-groups-atd.html) in the AWS Network Firewall Developer Guide.
     * 
     */
    public Optional<String> deepThreatInspection() {
        return Optional.ofNullable(this.deepThreatInspection);
    }
    /**
     * @return Configuration block for override values
     * 
     */
    public Optional<FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverride> override() {
        return Optional.ofNullable(this.override);
    }
    /**
     * @return An integer setting that indicates the order in which to apply the stateful rule groups in a single policy. This argument must be specified if the policy has a `stateful_engine_options` block with a `rule_order` value of `STRICT_ORDER`. AWS Network Firewall applies each stateful rule group to a packet starting with the group that has the lowest priority setting.
     * 
     */
    public Optional<Integer> priority() {
        return Optional.ofNullable(this.priority);
    }
    /**
     * @return The Amazon Resource Name (ARN) of the stateful rule group.
     * 
     */
    public String resourceArn() {
        return this.resourceArn;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FirewallPolicyFirewallPolicyStatefulRuleGroupReference defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String deepThreatInspection;
        private @Nullable FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverride override;
        private @Nullable Integer priority;
        private String resourceArn;
        public Builder() {}
        public Builder(FirewallPolicyFirewallPolicyStatefulRuleGroupReference defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deepThreatInspection = defaults.deepThreatInspection;
    	      this.override = defaults.override;
    	      this.priority = defaults.priority;
    	      this.resourceArn = defaults.resourceArn;
        }

        @CustomType.Setter
        public Builder deepThreatInspection(@Nullable String deepThreatInspection) {

            this.deepThreatInspection = deepThreatInspection;
            return this;
        }
        @CustomType.Setter
        public Builder override(@Nullable FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverride override) {

            this.override = override;
            return this;
        }
        @CustomType.Setter
        public Builder priority(@Nullable Integer priority) {

            this.priority = priority;
            return this;
        }
        @CustomType.Setter
        public Builder resourceArn(String resourceArn) {
            if (resourceArn == null) {
              throw new MissingRequiredPropertyException("FirewallPolicyFirewallPolicyStatefulRuleGroupReference", "resourceArn");
            }
            this.resourceArn = resourceArn;
            return this;
        }
        public FirewallPolicyFirewallPolicyStatefulRuleGroupReference build() {
            final var _resultValue = new FirewallPolicyFirewallPolicyStatefulRuleGroupReference();
            _resultValue.deepThreatInspection = deepThreatInspection;
            _resultValue.override = override;
            _resultValue.priority = priority;
            _resultValue.resourceArn = resourceArn;
            return _resultValue;
        }
    }
}
