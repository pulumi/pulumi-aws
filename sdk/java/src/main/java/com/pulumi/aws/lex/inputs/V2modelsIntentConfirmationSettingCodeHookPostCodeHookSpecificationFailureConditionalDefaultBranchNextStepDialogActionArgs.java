// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lex.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class V2modelsIntentConfirmationSettingCodeHookPostCodeHookSpecificationFailureConditionalDefaultBranchNextStepDialogActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final V2modelsIntentConfirmationSettingCodeHookPostCodeHookSpecificationFailureConditionalDefaultBranchNextStepDialogActionArgs Empty = new V2modelsIntentConfirmationSettingCodeHookPostCodeHookSpecificationFailureConditionalDefaultBranchNextStepDialogActionArgs();

    /**
     * If the dialog action is `ElicitSlot`, defines the slot to elicit from the user.
     * 
     */
    @Import(name="slotToElicit")
    private @Nullable Output<String> slotToElicit;

    /**
     * @return If the dialog action is `ElicitSlot`, defines the slot to elicit from the user.
     * 
     */
    public Optional<Output<String>> slotToElicit() {
        return Optional.ofNullable(this.slotToElicit);
    }

    /**
     * Whether the next message for the intent is _not_ used.
     * 
     */
    @Import(name="suppressNextMessage")
    private @Nullable Output<Boolean> suppressNextMessage;

    /**
     * @return Whether the next message for the intent is _not_ used.
     * 
     */
    public Optional<Output<Boolean>> suppressNextMessage() {
        return Optional.ofNullable(this.suppressNextMessage);
    }

    /**
     * Action that the bot should execute. Valid values are `ElicitIntent`, `StartIntent`, `ElicitSlot`, `EvaluateConditional`, `InvokeDialogCodeHook`, `ConfirmIntent`, `FulfillIntent`, `CloseIntent`, `EndConversation`.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Action that the bot should execute. Valid values are `ElicitIntent`, `StartIntent`, `ElicitSlot`, `EvaluateConditional`, `InvokeDialogCodeHook`, `ConfirmIntent`, `FulfillIntent`, `CloseIntent`, `EndConversation`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private V2modelsIntentConfirmationSettingCodeHookPostCodeHookSpecificationFailureConditionalDefaultBranchNextStepDialogActionArgs() {}

    private V2modelsIntentConfirmationSettingCodeHookPostCodeHookSpecificationFailureConditionalDefaultBranchNextStepDialogActionArgs(V2modelsIntentConfirmationSettingCodeHookPostCodeHookSpecificationFailureConditionalDefaultBranchNextStepDialogActionArgs $) {
        this.slotToElicit = $.slotToElicit;
        this.suppressNextMessage = $.suppressNextMessage;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(V2modelsIntentConfirmationSettingCodeHookPostCodeHookSpecificationFailureConditionalDefaultBranchNextStepDialogActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private V2modelsIntentConfirmationSettingCodeHookPostCodeHookSpecificationFailureConditionalDefaultBranchNextStepDialogActionArgs $;

        public Builder() {
            $ = new V2modelsIntentConfirmationSettingCodeHookPostCodeHookSpecificationFailureConditionalDefaultBranchNextStepDialogActionArgs();
        }

        public Builder(V2modelsIntentConfirmationSettingCodeHookPostCodeHookSpecificationFailureConditionalDefaultBranchNextStepDialogActionArgs defaults) {
            $ = new V2modelsIntentConfirmationSettingCodeHookPostCodeHookSpecificationFailureConditionalDefaultBranchNextStepDialogActionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param slotToElicit If the dialog action is `ElicitSlot`, defines the slot to elicit from the user.
         * 
         * @return builder
         * 
         */
        public Builder slotToElicit(@Nullable Output<String> slotToElicit) {
            $.slotToElicit = slotToElicit;
            return this;
        }

        /**
         * @param slotToElicit If the dialog action is `ElicitSlot`, defines the slot to elicit from the user.
         * 
         * @return builder
         * 
         */
        public Builder slotToElicit(String slotToElicit) {
            return slotToElicit(Output.of(slotToElicit));
        }

        /**
         * @param suppressNextMessage Whether the next message for the intent is _not_ used.
         * 
         * @return builder
         * 
         */
        public Builder suppressNextMessage(@Nullable Output<Boolean> suppressNextMessage) {
            $.suppressNextMessage = suppressNextMessage;
            return this;
        }

        /**
         * @param suppressNextMessage Whether the next message for the intent is _not_ used.
         * 
         * @return builder
         * 
         */
        public Builder suppressNextMessage(Boolean suppressNextMessage) {
            return suppressNextMessage(Output.of(suppressNextMessage));
        }

        /**
         * @param type Action that the bot should execute. Valid values are `ElicitIntent`, `StartIntent`, `ElicitSlot`, `EvaluateConditional`, `InvokeDialogCodeHook`, `ConfirmIntent`, `FulfillIntent`, `CloseIntent`, `EndConversation`.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Action that the bot should execute. Valid values are `ElicitIntent`, `StartIntent`, `ElicitSlot`, `EvaluateConditional`, `InvokeDialogCodeHook`, `ConfirmIntent`, `FulfillIntent`, `CloseIntent`, `EndConversation`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public V2modelsIntentConfirmationSettingCodeHookPostCodeHookSpecificationFailureConditionalDefaultBranchNextStepDialogActionArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("V2modelsIntentConfirmationSettingCodeHookPostCodeHookSpecificationFailureConditionalDefaultBranchNextStepDialogActionArgs", "type");
            }
            return $;
        }
    }

}
