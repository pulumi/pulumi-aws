// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EndpointMongodbSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final EndpointMongodbSettingsArgs Empty = new EndpointMongodbSettingsArgs();

    /**
     * Authentication mechanism to access the MongoDB source endpoint. Default is `default`.
     * 
     */
    @Import(name="authMechanism")
    private @Nullable Output<String> authMechanism;

    /**
     * @return Authentication mechanism to access the MongoDB source endpoint. Default is `default`.
     * 
     */
    public Optional<Output<String>> authMechanism() {
        return Optional.ofNullable(this.authMechanism);
    }

    /**
     * Authentication database name. Not used when `auth_type` is `no`. Default is `admin`.
     * 
     */
    @Import(name="authSource")
    private @Nullable Output<String> authSource;

    /**
     * @return Authentication database name. Not used when `auth_type` is `no`. Default is `admin`.
     * 
     */
    public Optional<Output<String>> authSource() {
        return Optional.ofNullable(this.authSource);
    }

    /**
     * The type of authentication to perform when connecting to a Redis target. Options include `none`, `auth-token`, and `auth-role`. The `auth-token` option requires an `auth_password` value to be provided. The `auth-role` option requires `auth_user_name` and `auth_password` values to be provided.
     * 
     */
    @Import(name="authType")
    private @Nullable Output<String> authType;

    /**
     * @return The type of authentication to perform when connecting to a Redis target. Options include `none`, `auth-token`, and `auth-role`. The `auth-token` option requires an `auth_password` value to be provided. The `auth-role` option requires `auth_user_name` and `auth_password` values to be provided.
     * 
     */
    public Optional<Output<String>> authType() {
        return Optional.ofNullable(this.authType);
    }

    /**
     * Number of documents to preview to determine the document organization. Use this setting when `nesting_level` is set to `one`. Default is `1000`.
     * 
     */
    @Import(name="docsToInvestigate")
    private @Nullable Output<String> docsToInvestigate;

    /**
     * @return Number of documents to preview to determine the document organization. Use this setting when `nesting_level` is set to `one`. Default is `1000`.
     * 
     */
    public Optional<Output<String>> docsToInvestigate() {
        return Optional.ofNullable(this.docsToInvestigate);
    }

    /**
     * Document ID. Use this setting when `nesting_level` is set to `none`. Default is `false`.
     * 
     */
    @Import(name="extractDocId")
    private @Nullable Output<String> extractDocId;

    /**
     * @return Document ID. Use this setting when `nesting_level` is set to `none`. Default is `false`.
     * 
     */
    public Optional<Output<String>> extractDocId() {
        return Optional.ofNullable(this.extractDocId);
    }

    /**
     * Specifies either document or table mode. Default is `none`. Valid values are `one` (table mode) and `none` (document mode).
     * 
     */
    @Import(name="nestingLevel")
    private @Nullable Output<String> nestingLevel;

    /**
     * @return Specifies either document or table mode. Default is `none`. Valid values are `one` (table mode) and `none` (document mode).
     * 
     */
    public Optional<Output<String>> nestingLevel() {
        return Optional.ofNullable(this.nestingLevel);
    }

    private EndpointMongodbSettingsArgs() {}

    private EndpointMongodbSettingsArgs(EndpointMongodbSettingsArgs $) {
        this.authMechanism = $.authMechanism;
        this.authSource = $.authSource;
        this.authType = $.authType;
        this.docsToInvestigate = $.docsToInvestigate;
        this.extractDocId = $.extractDocId;
        this.nestingLevel = $.nestingLevel;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EndpointMongodbSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EndpointMongodbSettingsArgs $;

        public Builder() {
            $ = new EndpointMongodbSettingsArgs();
        }

        public Builder(EndpointMongodbSettingsArgs defaults) {
            $ = new EndpointMongodbSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authMechanism Authentication mechanism to access the MongoDB source endpoint. Default is `default`.
         * 
         * @return builder
         * 
         */
        public Builder authMechanism(@Nullable Output<String> authMechanism) {
            $.authMechanism = authMechanism;
            return this;
        }

        /**
         * @param authMechanism Authentication mechanism to access the MongoDB source endpoint. Default is `default`.
         * 
         * @return builder
         * 
         */
        public Builder authMechanism(String authMechanism) {
            return authMechanism(Output.of(authMechanism));
        }

        /**
         * @param authSource Authentication database name. Not used when `auth_type` is `no`. Default is `admin`.
         * 
         * @return builder
         * 
         */
        public Builder authSource(@Nullable Output<String> authSource) {
            $.authSource = authSource;
            return this;
        }

        /**
         * @param authSource Authentication database name. Not used when `auth_type` is `no`. Default is `admin`.
         * 
         * @return builder
         * 
         */
        public Builder authSource(String authSource) {
            return authSource(Output.of(authSource));
        }

        /**
         * @param authType The type of authentication to perform when connecting to a Redis target. Options include `none`, `auth-token`, and `auth-role`. The `auth-token` option requires an `auth_password` value to be provided. The `auth-role` option requires `auth_user_name` and `auth_password` values to be provided.
         * 
         * @return builder
         * 
         */
        public Builder authType(@Nullable Output<String> authType) {
            $.authType = authType;
            return this;
        }

        /**
         * @param authType The type of authentication to perform when connecting to a Redis target. Options include `none`, `auth-token`, and `auth-role`. The `auth-token` option requires an `auth_password` value to be provided. The `auth-role` option requires `auth_user_name` and `auth_password` values to be provided.
         * 
         * @return builder
         * 
         */
        public Builder authType(String authType) {
            return authType(Output.of(authType));
        }

        /**
         * @param docsToInvestigate Number of documents to preview to determine the document organization. Use this setting when `nesting_level` is set to `one`. Default is `1000`.
         * 
         * @return builder
         * 
         */
        public Builder docsToInvestigate(@Nullable Output<String> docsToInvestigate) {
            $.docsToInvestigate = docsToInvestigate;
            return this;
        }

        /**
         * @param docsToInvestigate Number of documents to preview to determine the document organization. Use this setting when `nesting_level` is set to `one`. Default is `1000`.
         * 
         * @return builder
         * 
         */
        public Builder docsToInvestigate(String docsToInvestigate) {
            return docsToInvestigate(Output.of(docsToInvestigate));
        }

        /**
         * @param extractDocId Document ID. Use this setting when `nesting_level` is set to `none`. Default is `false`.
         * 
         * @return builder
         * 
         */
        public Builder extractDocId(@Nullable Output<String> extractDocId) {
            $.extractDocId = extractDocId;
            return this;
        }

        /**
         * @param extractDocId Document ID. Use this setting when `nesting_level` is set to `none`. Default is `false`.
         * 
         * @return builder
         * 
         */
        public Builder extractDocId(String extractDocId) {
            return extractDocId(Output.of(extractDocId));
        }

        /**
         * @param nestingLevel Specifies either document or table mode. Default is `none`. Valid values are `one` (table mode) and `none` (document mode).
         * 
         * @return builder
         * 
         */
        public Builder nestingLevel(@Nullable Output<String> nestingLevel) {
            $.nestingLevel = nestingLevel;
            return this;
        }

        /**
         * @param nestingLevel Specifies either document or table mode. Default is `none`. Valid values are `one` (table mode) and `none` (document mode).
         * 
         * @return builder
         * 
         */
        public Builder nestingLevel(String nestingLevel) {
            return nestingLevel(Output.of(nestingLevel));
        }

        public EndpointMongodbSettingsArgs build() {
            return $;
        }
    }

}
