// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.inputs;

import com.pulumi.aws.bedrock.inputs.AgentAgentCollaboratorAgentDescriptorArgs;
import com.pulumi.aws.bedrock.inputs.AgentAgentCollaboratorTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AgentAgentCollaboratorState extends com.pulumi.resources.ResourceArgs {

    public static final AgentAgentCollaboratorState Empty = new AgentAgentCollaboratorState();

    @Import(name="agentDescriptor")
    private @Nullable Output<AgentAgentCollaboratorAgentDescriptorArgs> agentDescriptor;

    public Optional<Output<AgentAgentCollaboratorAgentDescriptorArgs>> agentDescriptor() {
        return Optional.ofNullable(this.agentDescriptor);
    }

    /**
     * ID if the agent to associate the collaborator.
     * 
     */
    @Import(name="agentId")
    private @Nullable Output<String> agentId;

    /**
     * @return ID if the agent to associate the collaborator.
     * 
     */
    public Optional<Output<String>> agentId() {
        return Optional.ofNullable(this.agentId);
    }

    @Import(name="agentVersion")
    private @Nullable Output<String> agentVersion;

    public Optional<Output<String>> agentVersion() {
        return Optional.ofNullable(this.agentVersion);
    }

    /**
     * Instruction to give the collaborator.
     * 
     */
    @Import(name="collaborationInstruction")
    private @Nullable Output<String> collaborationInstruction;

    /**
     * @return Instruction to give the collaborator.
     * 
     */
    public Optional<Output<String>> collaborationInstruction() {
        return Optional.ofNullable(this.collaborationInstruction);
    }

    /**
     * ID of the Agent Collaborator.
     * 
     */
    @Import(name="collaboratorId")
    private @Nullable Output<String> collaboratorId;

    /**
     * @return ID of the Agent Collaborator.
     * 
     */
    public Optional<Output<String>> collaboratorId() {
        return Optional.ofNullable(this.collaboratorId);
    }

    @Import(name="collaboratorName")
    private @Nullable Output<String> collaboratorName;

    public Optional<Output<String>> collaboratorName() {
        return Optional.ofNullable(this.collaboratorName);
    }

    /**
     * Whether to prepare the agent after creation or modification. Defaults to `true`.
     * 
     */
    @Import(name="prepareAgent")
    private @Nullable Output<Boolean> prepareAgent;

    /**
     * @return Whether to prepare the agent after creation or modification. Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> prepareAgent() {
        return Optional.ofNullable(this.prepareAgent);
    }

    /**
     * Configure relaying the history to the collaborator.
     * 
     */
    @Import(name="relayConversationHistory")
    private @Nullable Output<String> relayConversationHistory;

    /**
     * @return Configure relaying the history to the collaborator.
     * 
     */
    public Optional<Output<String>> relayConversationHistory() {
        return Optional.ofNullable(this.relayConversationHistory);
    }

    @Import(name="timeouts")
    private @Nullable Output<AgentAgentCollaboratorTimeoutsArgs> timeouts;

    public Optional<Output<AgentAgentCollaboratorTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private AgentAgentCollaboratorState() {}

    private AgentAgentCollaboratorState(AgentAgentCollaboratorState $) {
        this.agentDescriptor = $.agentDescriptor;
        this.agentId = $.agentId;
        this.agentVersion = $.agentVersion;
        this.collaborationInstruction = $.collaborationInstruction;
        this.collaboratorId = $.collaboratorId;
        this.collaboratorName = $.collaboratorName;
        this.prepareAgent = $.prepareAgent;
        this.relayConversationHistory = $.relayConversationHistory;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentAgentCollaboratorState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentAgentCollaboratorState $;

        public Builder() {
            $ = new AgentAgentCollaboratorState();
        }

        public Builder(AgentAgentCollaboratorState defaults) {
            $ = new AgentAgentCollaboratorState(Objects.requireNonNull(defaults));
        }

        public Builder agentDescriptor(@Nullable Output<AgentAgentCollaboratorAgentDescriptorArgs> agentDescriptor) {
            $.agentDescriptor = agentDescriptor;
            return this;
        }

        public Builder agentDescriptor(AgentAgentCollaboratorAgentDescriptorArgs agentDescriptor) {
            return agentDescriptor(Output.of(agentDescriptor));
        }

        /**
         * @param agentId ID if the agent to associate the collaborator.
         * 
         * @return builder
         * 
         */
        public Builder agentId(@Nullable Output<String> agentId) {
            $.agentId = agentId;
            return this;
        }

        /**
         * @param agentId ID if the agent to associate the collaborator.
         * 
         * @return builder
         * 
         */
        public Builder agentId(String agentId) {
            return agentId(Output.of(agentId));
        }

        public Builder agentVersion(@Nullable Output<String> agentVersion) {
            $.agentVersion = agentVersion;
            return this;
        }

        public Builder agentVersion(String agentVersion) {
            return agentVersion(Output.of(agentVersion));
        }

        /**
         * @param collaborationInstruction Instruction to give the collaborator.
         * 
         * @return builder
         * 
         */
        public Builder collaborationInstruction(@Nullable Output<String> collaborationInstruction) {
            $.collaborationInstruction = collaborationInstruction;
            return this;
        }

        /**
         * @param collaborationInstruction Instruction to give the collaborator.
         * 
         * @return builder
         * 
         */
        public Builder collaborationInstruction(String collaborationInstruction) {
            return collaborationInstruction(Output.of(collaborationInstruction));
        }

        /**
         * @param collaboratorId ID of the Agent Collaborator.
         * 
         * @return builder
         * 
         */
        public Builder collaboratorId(@Nullable Output<String> collaboratorId) {
            $.collaboratorId = collaboratorId;
            return this;
        }

        /**
         * @param collaboratorId ID of the Agent Collaborator.
         * 
         * @return builder
         * 
         */
        public Builder collaboratorId(String collaboratorId) {
            return collaboratorId(Output.of(collaboratorId));
        }

        public Builder collaboratorName(@Nullable Output<String> collaboratorName) {
            $.collaboratorName = collaboratorName;
            return this;
        }

        public Builder collaboratorName(String collaboratorName) {
            return collaboratorName(Output.of(collaboratorName));
        }

        /**
         * @param prepareAgent Whether to prepare the agent after creation or modification. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder prepareAgent(@Nullable Output<Boolean> prepareAgent) {
            $.prepareAgent = prepareAgent;
            return this;
        }

        /**
         * @param prepareAgent Whether to prepare the agent after creation or modification. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder prepareAgent(Boolean prepareAgent) {
            return prepareAgent(Output.of(prepareAgent));
        }

        /**
         * @param relayConversationHistory Configure relaying the history to the collaborator.
         * 
         * @return builder
         * 
         */
        public Builder relayConversationHistory(@Nullable Output<String> relayConversationHistory) {
            $.relayConversationHistory = relayConversationHistory;
            return this;
        }

        /**
         * @param relayConversationHistory Configure relaying the history to the collaborator.
         * 
         * @return builder
         * 
         */
        public Builder relayConversationHistory(String relayConversationHistory) {
            return relayConversationHistory(Output.of(relayConversationHistory));
        }

        public Builder timeouts(@Nullable Output<AgentAgentCollaboratorTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(AgentAgentCollaboratorTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public AgentAgentCollaboratorState build() {
            return $;
        }
    }

}
