// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ssm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class ContactsRotationRecurrenceWeeklySettingHandOffTime {
    /**
     * @return (Required) The hour of the day.
     * 
     */
    private Integer hourOfDay;
    /**
     * @return (Required) The minutes of the hour.
     * 
     */
    private Integer minuteOfHour;

    private ContactsRotationRecurrenceWeeklySettingHandOffTime() {}
    /**
     * @return (Required) The hour of the day.
     * 
     */
    public Integer hourOfDay() {
        return this.hourOfDay;
    }
    /**
     * @return (Required) The minutes of the hour.
     * 
     */
    public Integer minuteOfHour() {
        return this.minuteOfHour;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContactsRotationRecurrenceWeeklySettingHandOffTime defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer hourOfDay;
        private Integer minuteOfHour;
        public Builder() {}
        public Builder(ContactsRotationRecurrenceWeeklySettingHandOffTime defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hourOfDay = defaults.hourOfDay;
    	      this.minuteOfHour = defaults.minuteOfHour;
        }

        @CustomType.Setter
        public Builder hourOfDay(Integer hourOfDay) {
            if (hourOfDay == null) {
              throw new MissingRequiredPropertyException("ContactsRotationRecurrenceWeeklySettingHandOffTime", "hourOfDay");
            }
            this.hourOfDay = hourOfDay;
            return this;
        }
        @CustomType.Setter
        public Builder minuteOfHour(Integer minuteOfHour) {
            if (minuteOfHour == null) {
              throw new MissingRequiredPropertyException("ContactsRotationRecurrenceWeeklySettingHandOffTime", "minuteOfHour");
            }
            this.minuteOfHour = minuteOfHour;
            return this;
        }
        public ContactsRotationRecurrenceWeeklySettingHandOffTime build() {
            final var _resultValue = new ContactsRotationRecurrenceWeeklySettingHandOffTime();
            _resultValue.hourOfDay = hourOfDay;
            _resultValue.minuteOfHour = minuteOfHour;
            return _resultValue;
        }
    }
}
