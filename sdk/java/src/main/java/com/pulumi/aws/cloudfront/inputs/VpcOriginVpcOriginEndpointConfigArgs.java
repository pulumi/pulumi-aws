// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudfront.inputs;

import com.pulumi.aws.cloudfront.inputs.VpcOriginVpcOriginEndpointConfigOriginSslProtocolsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpcOriginVpcOriginEndpointConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final VpcOriginVpcOriginEndpointConfigArgs Empty = new VpcOriginVpcOriginEndpointConfigArgs();

    /**
     * The VPC origin ARN.
     * 
     */
    @Import(name="arn", required=true)
    private Output<String> arn;

    /**
     * @return The VPC origin ARN.
     * 
     */
    public Output<String> arn() {
        return this.arn;
    }

    /**
     * The HTTP port for the CloudFront VPC origin endpoint configuration.
     * 
     */
    @Import(name="httpPort", required=true)
    private Output<Integer> httpPort;

    /**
     * @return The HTTP port for the CloudFront VPC origin endpoint configuration.
     * 
     */
    public Output<Integer> httpPort() {
        return this.httpPort;
    }

    /**
     * The HTTPS port for the CloudFront VPC origin endpoint configuration.
     * 
     */
    @Import(name="httpsPort", required=true)
    private Output<Integer> httpsPort;

    /**
     * @return The HTTPS port for the CloudFront VPC origin endpoint configuration.
     * 
     */
    public Output<Integer> httpsPort() {
        return this.httpsPort;
    }

    /**
     * The name of the CloudFront VPC origin endpoint configuration.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the CloudFront VPC origin endpoint configuration.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The origin protocol policy for the CloudFront VPC origin endpoint configuration.
     * 
     */
    @Import(name="originProtocolPolicy", required=true)
    private Output<String> originProtocolPolicy;

    /**
     * @return The origin protocol policy for the CloudFront VPC origin endpoint configuration.
     * 
     */
    public Output<String> originProtocolPolicy() {
        return this.originProtocolPolicy;
    }

    /**
     * A complex type that contains information about the SSL/TLS protocols that CloudFront can use when establishing an HTTPS connection with your origin.
     * 
     */
    @Import(name="originSslProtocols")
    private @Nullable Output<VpcOriginVpcOriginEndpointConfigOriginSslProtocolsArgs> originSslProtocols;

    /**
     * @return A complex type that contains information about the SSL/TLS protocols that CloudFront can use when establishing an HTTPS connection with your origin.
     * 
     */
    public Optional<Output<VpcOriginVpcOriginEndpointConfigOriginSslProtocolsArgs>> originSslProtocols() {
        return Optional.ofNullable(this.originSslProtocols);
    }

    private VpcOriginVpcOriginEndpointConfigArgs() {}

    private VpcOriginVpcOriginEndpointConfigArgs(VpcOriginVpcOriginEndpointConfigArgs $) {
        this.arn = $.arn;
        this.httpPort = $.httpPort;
        this.httpsPort = $.httpsPort;
        this.name = $.name;
        this.originProtocolPolicy = $.originProtocolPolicy;
        this.originSslProtocols = $.originSslProtocols;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpcOriginVpcOriginEndpointConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpcOriginVpcOriginEndpointConfigArgs $;

        public Builder() {
            $ = new VpcOriginVpcOriginEndpointConfigArgs();
        }

        public Builder(VpcOriginVpcOriginEndpointConfigArgs defaults) {
            $ = new VpcOriginVpcOriginEndpointConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn The VPC origin ARN.
         * 
         * @return builder
         * 
         */
        public Builder arn(Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn The VPC origin ARN.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param httpPort The HTTP port for the CloudFront VPC origin endpoint configuration.
         * 
         * @return builder
         * 
         */
        public Builder httpPort(Output<Integer> httpPort) {
            $.httpPort = httpPort;
            return this;
        }

        /**
         * @param httpPort The HTTP port for the CloudFront VPC origin endpoint configuration.
         * 
         * @return builder
         * 
         */
        public Builder httpPort(Integer httpPort) {
            return httpPort(Output.of(httpPort));
        }

        /**
         * @param httpsPort The HTTPS port for the CloudFront VPC origin endpoint configuration.
         * 
         * @return builder
         * 
         */
        public Builder httpsPort(Output<Integer> httpsPort) {
            $.httpsPort = httpsPort;
            return this;
        }

        /**
         * @param httpsPort The HTTPS port for the CloudFront VPC origin endpoint configuration.
         * 
         * @return builder
         * 
         */
        public Builder httpsPort(Integer httpsPort) {
            return httpsPort(Output.of(httpsPort));
        }

        /**
         * @param name The name of the CloudFront VPC origin endpoint configuration.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the CloudFront VPC origin endpoint configuration.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param originProtocolPolicy The origin protocol policy for the CloudFront VPC origin endpoint configuration.
         * 
         * @return builder
         * 
         */
        public Builder originProtocolPolicy(Output<String> originProtocolPolicy) {
            $.originProtocolPolicy = originProtocolPolicy;
            return this;
        }

        /**
         * @param originProtocolPolicy The origin protocol policy for the CloudFront VPC origin endpoint configuration.
         * 
         * @return builder
         * 
         */
        public Builder originProtocolPolicy(String originProtocolPolicy) {
            return originProtocolPolicy(Output.of(originProtocolPolicy));
        }

        /**
         * @param originSslProtocols A complex type that contains information about the SSL/TLS protocols that CloudFront can use when establishing an HTTPS connection with your origin.
         * 
         * @return builder
         * 
         */
        public Builder originSslProtocols(@Nullable Output<VpcOriginVpcOriginEndpointConfigOriginSslProtocolsArgs> originSslProtocols) {
            $.originSslProtocols = originSslProtocols;
            return this;
        }

        /**
         * @param originSslProtocols A complex type that contains information about the SSL/TLS protocols that CloudFront can use when establishing an HTTPS connection with your origin.
         * 
         * @return builder
         * 
         */
        public Builder originSslProtocols(VpcOriginVpcOriginEndpointConfigOriginSslProtocolsArgs originSslProtocols) {
            return originSslProtocols(Output.of(originSslProtocols));
        }

        public VpcOriginVpcOriginEndpointConfigArgs build() {
            if ($.arn == null) {
                throw new MissingRequiredPropertyException("VpcOriginVpcOriginEndpointConfigArgs", "arn");
            }
            if ($.httpPort == null) {
                throw new MissingRequiredPropertyException("VpcOriginVpcOriginEndpointConfigArgs", "httpPort");
            }
            if ($.httpsPort == null) {
                throw new MissingRequiredPropertyException("VpcOriginVpcOriginEndpointConfigArgs", "httpsPort");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("VpcOriginVpcOriginEndpointConfigArgs", "name");
            }
            if ($.originProtocolPolicy == null) {
                throw new MissingRequiredPropertyException("VpcOriginVpcOriginEndpointConfigArgs", "originProtocolPolicy");
            }
            return $;
        }
    }

}
