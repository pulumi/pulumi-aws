// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.connect.inputs;

import com.pulumi.aws.connect.inputs.InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceStorageConfigStorageConfigS3ConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceStorageConfigStorageConfigS3ConfigArgs Empty = new InstanceStorageConfigStorageConfigS3ConfigArgs();

    /**
     * The S3 bucket name.
     * 
     */
    @Import(name="bucketName", required=true)
    private Output<String> bucketName;

    /**
     * @return The S3 bucket name.
     * 
     */
    public Output<String> bucketName() {
        return this.bucketName;
    }

    /**
     * The S3 bucket prefix.
     * 
     */
    @Import(name="bucketPrefix", required=true)
    private Output<String> bucketPrefix;

    /**
     * @return The S3 bucket prefix.
     * 
     */
    public Output<String> bucketPrefix() {
        return this.bucketPrefix;
    }

    /**
     * The encryption configuration. Documented below.
     * 
     */
    @Import(name="encryptionConfig")
    private @Nullable Output<InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs> encryptionConfig;

    /**
     * @return The encryption configuration. Documented below.
     * 
     */
    public Optional<Output<InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs>> encryptionConfig() {
        return Optional.ofNullable(this.encryptionConfig);
    }

    private InstanceStorageConfigStorageConfigS3ConfigArgs() {}

    private InstanceStorageConfigStorageConfigS3ConfigArgs(InstanceStorageConfigStorageConfigS3ConfigArgs $) {
        this.bucketName = $.bucketName;
        this.bucketPrefix = $.bucketPrefix;
        this.encryptionConfig = $.encryptionConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceStorageConfigStorageConfigS3ConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceStorageConfigStorageConfigS3ConfigArgs $;

        public Builder() {
            $ = new InstanceStorageConfigStorageConfigS3ConfigArgs();
        }

        public Builder(InstanceStorageConfigStorageConfigS3ConfigArgs defaults) {
            $ = new InstanceStorageConfigStorageConfigS3ConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucketName The S3 bucket name.
         * 
         * @return builder
         * 
         */
        public Builder bucketName(Output<String> bucketName) {
            $.bucketName = bucketName;
            return this;
        }

        /**
         * @param bucketName The S3 bucket name.
         * 
         * @return builder
         * 
         */
        public Builder bucketName(String bucketName) {
            return bucketName(Output.of(bucketName));
        }

        /**
         * @param bucketPrefix The S3 bucket prefix.
         * 
         * @return builder
         * 
         */
        public Builder bucketPrefix(Output<String> bucketPrefix) {
            $.bucketPrefix = bucketPrefix;
            return this;
        }

        /**
         * @param bucketPrefix The S3 bucket prefix.
         * 
         * @return builder
         * 
         */
        public Builder bucketPrefix(String bucketPrefix) {
            return bucketPrefix(Output.of(bucketPrefix));
        }

        /**
         * @param encryptionConfig The encryption configuration. Documented below.
         * 
         * @return builder
         * 
         */
        public Builder encryptionConfig(@Nullable Output<InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs> encryptionConfig) {
            $.encryptionConfig = encryptionConfig;
            return this;
        }

        /**
         * @param encryptionConfig The encryption configuration. Documented below.
         * 
         * @return builder
         * 
         */
        public Builder encryptionConfig(InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs encryptionConfig) {
            return encryptionConfig(Output.of(encryptionConfig));
        }

        public InstanceStorageConfigStorageConfigS3ConfigArgs build() {
            $.bucketName = Objects.requireNonNull($.bucketName, "expected parameter 'bucketName' to be non-null");
            $.bucketPrefix = Objects.requireNonNull($.bucketPrefix, "expected parameter 'bucketPrefix' to be non-null");
            return $;
        }
    }

}
