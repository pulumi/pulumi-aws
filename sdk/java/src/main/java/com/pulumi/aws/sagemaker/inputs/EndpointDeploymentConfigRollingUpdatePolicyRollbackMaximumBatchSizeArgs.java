// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeArgs extends com.pulumi.resources.ResourceArgs {

    public static final EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeArgs Empty = new EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeArgs();

    /**
     * Specifies the endpoint capacity type. Valid values are: `INSTANCE_COUNT`, or `CAPACITY_PERCENT`.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Specifies the endpoint capacity type. Valid values are: `INSTANCE_COUNT`, or `CAPACITY_PERCENT`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     * Defines the capacity size, either as a number of instances or a capacity percentage.
     * 
     */
    @Import(name="value", required=true)
    private Output<Integer> value;

    /**
     * @return Defines the capacity size, either as a number of instances or a capacity percentage.
     * 
     */
    public Output<Integer> value() {
        return this.value;
    }

    private EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeArgs() {}

    private EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeArgs(EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeArgs $) {
        this.type = $.type;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeArgs $;

        public Builder() {
            $ = new EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeArgs();
        }

        public Builder(EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeArgs defaults) {
            $ = new EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param type Specifies the endpoint capacity type. Valid values are: `INSTANCE_COUNT`, or `CAPACITY_PERCENT`.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Specifies the endpoint capacity type. Valid values are: `INSTANCE_COUNT`, or `CAPACITY_PERCENT`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param value Defines the capacity size, either as a number of instances or a capacity percentage.
         * 
         * @return builder
         * 
         */
        public Builder value(Output<Integer> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value Defines the capacity size, either as a number of instances or a capacity percentage.
         * 
         * @return builder
         * 
         */
        public Builder value(Integer value) {
            return value(Output.of(value));
        }

        public EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeArgs", "type");
            }
            if ($.value == null) {
                throw new MissingRequiredPropertyException("EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeArgs", "value");
            }
            return $;
        }
    }

}
