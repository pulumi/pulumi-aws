// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.batch.outputs;

import com.pulumi.aws.batch.outputs.ComputeEnvironmentComputeResourcesEc2Configuration;
import com.pulumi.aws.batch.outputs.ComputeEnvironmentComputeResourcesLaunchTemplate;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ComputeEnvironmentComputeResources {
    private @Nullable String allocationStrategy;
    private @Nullable Integer bidPercentage;
    private @Nullable Integer desiredVcpus;
    private @Nullable ComputeEnvironmentComputeResourcesEc2Configuration ec2Configuration;
    private @Nullable String ec2KeyPair;
    private @Nullable String imageId;
    private @Nullable String instanceRole;
    private @Nullable List<String> instanceTypes;
    private @Nullable ComputeEnvironmentComputeResourcesLaunchTemplate launchTemplate;
    private Integer maxVcpus;
    private @Nullable Integer minVcpus;
    private @Nullable List<String> securityGroupIds;
    private @Nullable String spotIamFleetRole;
    private List<String> subnets;
    private @Nullable Map<String,String> tags;
    private String type;

    private ComputeEnvironmentComputeResources() {}
    public Optional<String> allocationStrategy() {
        return Optional.ofNullable(this.allocationStrategy);
    }
    public Optional<Integer> bidPercentage() {
        return Optional.ofNullable(this.bidPercentage);
    }
    public Optional<Integer> desiredVcpus() {
        return Optional.ofNullable(this.desiredVcpus);
    }
    public Optional<ComputeEnvironmentComputeResourcesEc2Configuration> ec2Configuration() {
        return Optional.ofNullable(this.ec2Configuration);
    }
    public Optional<String> ec2KeyPair() {
        return Optional.ofNullable(this.ec2KeyPair);
    }
    public Optional<String> imageId() {
        return Optional.ofNullable(this.imageId);
    }
    public Optional<String> instanceRole() {
        return Optional.ofNullable(this.instanceRole);
    }
    public List<String> instanceTypes() {
        return this.instanceTypes == null ? List.of() : this.instanceTypes;
    }
    public Optional<ComputeEnvironmentComputeResourcesLaunchTemplate> launchTemplate() {
        return Optional.ofNullable(this.launchTemplate);
    }
    public Integer maxVcpus() {
        return this.maxVcpus;
    }
    public Optional<Integer> minVcpus() {
        return Optional.ofNullable(this.minVcpus);
    }
    public List<String> securityGroupIds() {
        return this.securityGroupIds == null ? List.of() : this.securityGroupIds;
    }
    public Optional<String> spotIamFleetRole() {
        return Optional.ofNullable(this.spotIamFleetRole);
    }
    public List<String> subnets() {
        return this.subnets;
    }
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ComputeEnvironmentComputeResources defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String allocationStrategy;
        private @Nullable Integer bidPercentage;
        private @Nullable Integer desiredVcpus;
        private @Nullable ComputeEnvironmentComputeResourcesEc2Configuration ec2Configuration;
        private @Nullable String ec2KeyPair;
        private @Nullable String imageId;
        private @Nullable String instanceRole;
        private @Nullable List<String> instanceTypes;
        private @Nullable ComputeEnvironmentComputeResourcesLaunchTemplate launchTemplate;
        private Integer maxVcpus;
        private @Nullable Integer minVcpus;
        private @Nullable List<String> securityGroupIds;
        private @Nullable String spotIamFleetRole;
        private List<String> subnets;
        private @Nullable Map<String,String> tags;
        private String type;
        public Builder() {}
        public Builder(ComputeEnvironmentComputeResources defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allocationStrategy = defaults.allocationStrategy;
    	      this.bidPercentage = defaults.bidPercentage;
    	      this.desiredVcpus = defaults.desiredVcpus;
    	      this.ec2Configuration = defaults.ec2Configuration;
    	      this.ec2KeyPair = defaults.ec2KeyPair;
    	      this.imageId = defaults.imageId;
    	      this.instanceRole = defaults.instanceRole;
    	      this.instanceTypes = defaults.instanceTypes;
    	      this.launchTemplate = defaults.launchTemplate;
    	      this.maxVcpus = defaults.maxVcpus;
    	      this.minVcpus = defaults.minVcpus;
    	      this.securityGroupIds = defaults.securityGroupIds;
    	      this.spotIamFleetRole = defaults.spotIamFleetRole;
    	      this.subnets = defaults.subnets;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder allocationStrategy(@Nullable String allocationStrategy) {
            this.allocationStrategy = allocationStrategy;
            return this;
        }
        @CustomType.Setter
        public Builder bidPercentage(@Nullable Integer bidPercentage) {
            this.bidPercentage = bidPercentage;
            return this;
        }
        @CustomType.Setter
        public Builder desiredVcpus(@Nullable Integer desiredVcpus) {
            this.desiredVcpus = desiredVcpus;
            return this;
        }
        @CustomType.Setter
        public Builder ec2Configuration(@Nullable ComputeEnvironmentComputeResourcesEc2Configuration ec2Configuration) {
            this.ec2Configuration = ec2Configuration;
            return this;
        }
        @CustomType.Setter
        public Builder ec2KeyPair(@Nullable String ec2KeyPair) {
            this.ec2KeyPair = ec2KeyPair;
            return this;
        }
        @CustomType.Setter
        public Builder imageId(@Nullable String imageId) {
            this.imageId = imageId;
            return this;
        }
        @CustomType.Setter
        public Builder instanceRole(@Nullable String instanceRole) {
            this.instanceRole = instanceRole;
            return this;
        }
        @CustomType.Setter
        public Builder instanceTypes(@Nullable List<String> instanceTypes) {
            this.instanceTypes = instanceTypes;
            return this;
        }
        public Builder instanceTypes(String... instanceTypes) {
            return instanceTypes(List.of(instanceTypes));
        }
        @CustomType.Setter
        public Builder launchTemplate(@Nullable ComputeEnvironmentComputeResourcesLaunchTemplate launchTemplate) {
            this.launchTemplate = launchTemplate;
            return this;
        }
        @CustomType.Setter
        public Builder maxVcpus(Integer maxVcpus) {
            this.maxVcpus = Objects.requireNonNull(maxVcpus);
            return this;
        }
        @CustomType.Setter
        public Builder minVcpus(@Nullable Integer minVcpus) {
            this.minVcpus = minVcpus;
            return this;
        }
        @CustomType.Setter
        public Builder securityGroupIds(@Nullable List<String> securityGroupIds) {
            this.securityGroupIds = securityGroupIds;
            return this;
        }
        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }
        @CustomType.Setter
        public Builder spotIamFleetRole(@Nullable String spotIamFleetRole) {
            this.spotIamFleetRole = spotIamFleetRole;
            return this;
        }
        @CustomType.Setter
        public Builder subnets(List<String> subnets) {
            this.subnets = Objects.requireNonNull(subnets);
            return this;
        }
        public Builder subnets(String... subnets) {
            return subnets(List.of(subnets));
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public ComputeEnvironmentComputeResources build() {
            final var o = new ComputeEnvironmentComputeResources();
            o.allocationStrategy = allocationStrategy;
            o.bidPercentage = bidPercentage;
            o.desiredVcpus = desiredVcpus;
            o.ec2Configuration = ec2Configuration;
            o.ec2KeyPair = ec2KeyPair;
            o.imageId = imageId;
            o.instanceRole = instanceRole;
            o.instanceTypes = instanceTypes;
            o.launchTemplate = launchTemplate;
            o.maxVcpus = maxVcpus;
            o.minVcpus = minVcpus;
            o.securityGroupIds = securityGroupIds;
            o.spotIamFleetRole = spotIamFleetRole;
            o.subnets = subnets;
            o.tags = tags;
            o.type = type;
            return o;
        }
    }
}
