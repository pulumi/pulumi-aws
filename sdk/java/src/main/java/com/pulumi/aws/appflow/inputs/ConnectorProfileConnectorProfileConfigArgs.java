// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appflow.inputs;

import com.pulumi.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs;
import com.pulumi.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.Objects;


public final class ConnectorProfileConnectorProfileConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectorProfileConnectorProfileConfigArgs Empty = new ConnectorProfileConnectorProfileConfigArgs();

    /**
     * The connector-specific credentials required by each connector. See Connector Profile Credentials for more details.
     * 
     */
    @Import(name="connectorProfileCredentials", required=true)
    private Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs> connectorProfileCredentials;

    /**
     * @return The connector-specific credentials required by each connector. See Connector Profile Credentials for more details.
     * 
     */
    public Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs> connectorProfileCredentials() {
        return this.connectorProfileCredentials;
    }

    /**
     * The connector-specific properties of the profile configuration. See Connector Profile Properties for more details.
     * 
     */
    @Import(name="connectorProfileProperties", required=true)
    private Output<ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs> connectorProfileProperties;

    /**
     * @return The connector-specific properties of the profile configuration. See Connector Profile Properties for more details.
     * 
     */
    public Output<ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs> connectorProfileProperties() {
        return this.connectorProfileProperties;
    }

    private ConnectorProfileConnectorProfileConfigArgs() {}

    private ConnectorProfileConnectorProfileConfigArgs(ConnectorProfileConnectorProfileConfigArgs $) {
        this.connectorProfileCredentials = $.connectorProfileCredentials;
        this.connectorProfileProperties = $.connectorProfileProperties;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectorProfileConnectorProfileConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectorProfileConnectorProfileConfigArgs $;

        public Builder() {
            $ = new ConnectorProfileConnectorProfileConfigArgs();
        }

        public Builder(ConnectorProfileConnectorProfileConfigArgs defaults) {
            $ = new ConnectorProfileConnectorProfileConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectorProfileCredentials The connector-specific credentials required by each connector. See Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder connectorProfileCredentials(Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs> connectorProfileCredentials) {
            $.connectorProfileCredentials = connectorProfileCredentials;
            return this;
        }

        /**
         * @param connectorProfileCredentials The connector-specific credentials required by each connector. See Connector Profile Credentials for more details.
         * 
         * @return builder
         * 
         */
        public Builder connectorProfileCredentials(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs connectorProfileCredentials) {
            return connectorProfileCredentials(Output.of(connectorProfileCredentials));
        }

        /**
         * @param connectorProfileProperties The connector-specific properties of the profile configuration. See Connector Profile Properties for more details.
         * 
         * @return builder
         * 
         */
        public Builder connectorProfileProperties(Output<ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs> connectorProfileProperties) {
            $.connectorProfileProperties = connectorProfileProperties;
            return this;
        }

        /**
         * @param connectorProfileProperties The connector-specific properties of the profile configuration. See Connector Profile Properties for more details.
         * 
         * @return builder
         * 
         */
        public Builder connectorProfileProperties(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs connectorProfileProperties) {
            return connectorProfileProperties(Output.of(connectorProfileProperties));
        }

        public ConnectorProfileConnectorProfileConfigArgs build() {
            if ($.connectorProfileCredentials == null) {
                throw new MissingRequiredPropertyException("ConnectorProfileConnectorProfileConfigArgs", "connectorProfileCredentials");
            }
            if ($.connectorProfileProperties == null) {
                throw new MissingRequiredPropertyException("ConnectorProfileConnectorProfileConfigArgs", "connectorProfileProperties");
            }
            return $;
        }
    }

}
