// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.pinpoint.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppLimitsArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppLimitsArgs Empty = new AppLimitsArgs();

    @Import(name="daily")
    private @Nullable Output<Integer> daily;

    public Optional<Output<Integer>> daily() {
        return Optional.ofNullable(this.daily);
    }

    @Import(name="maximumDuration")
    private @Nullable Output<Integer> maximumDuration;

    public Optional<Output<Integer>> maximumDuration() {
        return Optional.ofNullable(this.maximumDuration);
    }

    @Import(name="messagesPerSecond")
    private @Nullable Output<Integer> messagesPerSecond;

    public Optional<Output<Integer>> messagesPerSecond() {
        return Optional.ofNullable(this.messagesPerSecond);
    }

    @Import(name="total")
    private @Nullable Output<Integer> total;

    public Optional<Output<Integer>> total() {
        return Optional.ofNullable(this.total);
    }

    private AppLimitsArgs() {}

    private AppLimitsArgs(AppLimitsArgs $) {
        this.daily = $.daily;
        this.maximumDuration = $.maximumDuration;
        this.messagesPerSecond = $.messagesPerSecond;
        this.total = $.total;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppLimitsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppLimitsArgs $;

        public Builder() {
            $ = new AppLimitsArgs();
        }

        public Builder(AppLimitsArgs defaults) {
            $ = new AppLimitsArgs(Objects.requireNonNull(defaults));
        }

        public Builder daily(@Nullable Output<Integer> daily) {
            $.daily = daily;
            return this;
        }

        public Builder daily(Integer daily) {
            return daily(Output.of(daily));
        }

        public Builder maximumDuration(@Nullable Output<Integer> maximumDuration) {
            $.maximumDuration = maximumDuration;
            return this;
        }

        public Builder maximumDuration(Integer maximumDuration) {
            return maximumDuration(Output.of(maximumDuration));
        }

        public Builder messagesPerSecond(@Nullable Output<Integer> messagesPerSecond) {
            $.messagesPerSecond = messagesPerSecond;
            return this;
        }

        public Builder messagesPerSecond(Integer messagesPerSecond) {
            return messagesPerSecond(Output.of(messagesPerSecond));
        }

        public Builder total(@Nullable Output<Integer> total) {
            $.total = total;
            return this;
        }

        public Builder total(Integer total) {
            return total(Output.of(total));
        }

        public AppLimitsArgs build() {
            return $;
        }
    }

}
