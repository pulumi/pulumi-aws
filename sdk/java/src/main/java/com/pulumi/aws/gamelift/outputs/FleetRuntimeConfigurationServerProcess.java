// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.gamelift.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FleetRuntimeConfigurationServerProcess {
    /**
     * @return Number of server processes using this configuration to run concurrently on an instance.
     * 
     */
    private Integer concurrentExecutions;
    /**
     * @return Location of the server executable in a game build. All game builds are installed on instances at the root : for Windows instances `C:\game`, and for Linux instances `/local/game`.
     * 
     */
    private String launchPath;
    /**
     * @return Optional list of parameters to pass to the server executable on launch.
     * 
     */
    private @Nullable String parameters;

    private FleetRuntimeConfigurationServerProcess() {}
    /**
     * @return Number of server processes using this configuration to run concurrently on an instance.
     * 
     */
    public Integer concurrentExecutions() {
        return this.concurrentExecutions;
    }
    /**
     * @return Location of the server executable in a game build. All game builds are installed on instances at the root : for Windows instances `C:\game`, and for Linux instances `/local/game`.
     * 
     */
    public String launchPath() {
        return this.launchPath;
    }
    /**
     * @return Optional list of parameters to pass to the server executable on launch.
     * 
     */
    public Optional<String> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FleetRuntimeConfigurationServerProcess defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer concurrentExecutions;
        private String launchPath;
        private @Nullable String parameters;
        public Builder() {}
        public Builder(FleetRuntimeConfigurationServerProcess defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.concurrentExecutions = defaults.concurrentExecutions;
    	      this.launchPath = defaults.launchPath;
    	      this.parameters = defaults.parameters;
        }

        @CustomType.Setter
        public Builder concurrentExecutions(Integer concurrentExecutions) {
            if (concurrentExecutions == null) {
              throw new MissingRequiredPropertyException("FleetRuntimeConfigurationServerProcess", "concurrentExecutions");
            }
            this.concurrentExecutions = concurrentExecutions;
            return this;
        }
        @CustomType.Setter
        public Builder launchPath(String launchPath) {
            if (launchPath == null) {
              throw new MissingRequiredPropertyException("FleetRuntimeConfigurationServerProcess", "launchPath");
            }
            this.launchPath = launchPath;
            return this;
        }
        @CustomType.Setter
        public Builder parameters(@Nullable String parameters) {

            this.parameters = parameters;
            return this;
        }
        public FleetRuntimeConfigurationServerProcess build() {
            final var _resultValue = new FleetRuntimeConfigurationServerProcess();
            _resultValue.concurrentExecutions = concurrentExecutions;
            _resultValue.launchPath = launchPath;
            _resultValue.parameters = parameters;
            return _resultValue;
        }
    }
}
