// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.ChartAxisLabelOptions;
import com.pulumi.aws.quicksight.outputs.ContributionAnalysisDefaults;
import com.pulumi.aws.quicksight.outputs.DataLabelsOptions;
import com.pulumi.aws.quicksight.outputs.LegendOptions;
import com.pulumi.aws.quicksight.outputs.SmallMultiplesOptions;
import com.pulumi.aws.quicksight.outputs.TooltipOptions;
import com.pulumi.aws.quicksight.outputs.VisualPalette;
import com.pulumi.aws.quicksight.outputs.VisualsPieChartVisualChartConfigurationDonutOptions;
import com.pulumi.aws.quicksight.outputs.VisualsPieChartVisualChartConfigurationFieldWells;
import com.pulumi.aws.quicksight.outputs.VisualsPieChartVisualChartConfigurationSortConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VisualsPieChartVisualChartConfiguration {
    private @Nullable ChartAxisLabelOptions categoryLabelOptions;
    private @Nullable List<ContributionAnalysisDefaults> contributionAnalysisDefaults;
    private @Nullable DataLabelsOptions dataLabels;
    private @Nullable VisualsPieChartVisualChartConfigurationDonutOptions donutOptions;
    private @Nullable VisualsPieChartVisualChartConfigurationFieldWells fieldWells;
    private @Nullable LegendOptions legend;
    private @Nullable SmallMultiplesOptions smallMultiplesOptions;
    private @Nullable VisualsPieChartVisualChartConfigurationSortConfiguration sortConfiguration;
    private @Nullable TooltipOptions tooltip;
    private @Nullable ChartAxisLabelOptions valueLabelOptions;
    private @Nullable VisualPalette visualPalette;

    private VisualsPieChartVisualChartConfiguration() {}
    public Optional<ChartAxisLabelOptions> categoryLabelOptions() {
        return Optional.ofNullable(this.categoryLabelOptions);
    }
    public List<ContributionAnalysisDefaults> contributionAnalysisDefaults() {
        return this.contributionAnalysisDefaults == null ? List.of() : this.contributionAnalysisDefaults;
    }
    public Optional<DataLabelsOptions> dataLabels() {
        return Optional.ofNullable(this.dataLabels);
    }
    public Optional<VisualsPieChartVisualChartConfigurationDonutOptions> donutOptions() {
        return Optional.ofNullable(this.donutOptions);
    }
    public Optional<VisualsPieChartVisualChartConfigurationFieldWells> fieldWells() {
        return Optional.ofNullable(this.fieldWells);
    }
    public Optional<LegendOptions> legend() {
        return Optional.ofNullable(this.legend);
    }
    public Optional<SmallMultiplesOptions> smallMultiplesOptions() {
        return Optional.ofNullable(this.smallMultiplesOptions);
    }
    public Optional<VisualsPieChartVisualChartConfigurationSortConfiguration> sortConfiguration() {
        return Optional.ofNullable(this.sortConfiguration);
    }
    public Optional<TooltipOptions> tooltip() {
        return Optional.ofNullable(this.tooltip);
    }
    public Optional<ChartAxisLabelOptions> valueLabelOptions() {
        return Optional.ofNullable(this.valueLabelOptions);
    }
    public Optional<VisualPalette> visualPalette() {
        return Optional.ofNullable(this.visualPalette);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VisualsPieChartVisualChartConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ChartAxisLabelOptions categoryLabelOptions;
        private @Nullable List<ContributionAnalysisDefaults> contributionAnalysisDefaults;
        private @Nullable DataLabelsOptions dataLabels;
        private @Nullable VisualsPieChartVisualChartConfigurationDonutOptions donutOptions;
        private @Nullable VisualsPieChartVisualChartConfigurationFieldWells fieldWells;
        private @Nullable LegendOptions legend;
        private @Nullable SmallMultiplesOptions smallMultiplesOptions;
        private @Nullable VisualsPieChartVisualChartConfigurationSortConfiguration sortConfiguration;
        private @Nullable TooltipOptions tooltip;
        private @Nullable ChartAxisLabelOptions valueLabelOptions;
        private @Nullable VisualPalette visualPalette;
        public Builder() {}
        public Builder(VisualsPieChartVisualChartConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.categoryLabelOptions = defaults.categoryLabelOptions;
    	      this.contributionAnalysisDefaults = defaults.contributionAnalysisDefaults;
    	      this.dataLabels = defaults.dataLabels;
    	      this.donutOptions = defaults.donutOptions;
    	      this.fieldWells = defaults.fieldWells;
    	      this.legend = defaults.legend;
    	      this.smallMultiplesOptions = defaults.smallMultiplesOptions;
    	      this.sortConfiguration = defaults.sortConfiguration;
    	      this.tooltip = defaults.tooltip;
    	      this.valueLabelOptions = defaults.valueLabelOptions;
    	      this.visualPalette = defaults.visualPalette;
        }

        @CustomType.Setter
        public Builder categoryLabelOptions(@Nullable ChartAxisLabelOptions categoryLabelOptions) {

            this.categoryLabelOptions = categoryLabelOptions;
            return this;
        }
        @CustomType.Setter
        public Builder contributionAnalysisDefaults(@Nullable List<ContributionAnalysisDefaults> contributionAnalysisDefaults) {

            this.contributionAnalysisDefaults = contributionAnalysisDefaults;
            return this;
        }
        public Builder contributionAnalysisDefaults(ContributionAnalysisDefaults... contributionAnalysisDefaults) {
            return contributionAnalysisDefaults(List.of(contributionAnalysisDefaults));
        }
        @CustomType.Setter
        public Builder dataLabels(@Nullable DataLabelsOptions dataLabels) {

            this.dataLabels = dataLabels;
            return this;
        }
        @CustomType.Setter
        public Builder donutOptions(@Nullable VisualsPieChartVisualChartConfigurationDonutOptions donutOptions) {

            this.donutOptions = donutOptions;
            return this;
        }
        @CustomType.Setter
        public Builder fieldWells(@Nullable VisualsPieChartVisualChartConfigurationFieldWells fieldWells) {

            this.fieldWells = fieldWells;
            return this;
        }
        @CustomType.Setter
        public Builder legend(@Nullable LegendOptions legend) {

            this.legend = legend;
            return this;
        }
        @CustomType.Setter
        public Builder smallMultiplesOptions(@Nullable SmallMultiplesOptions smallMultiplesOptions) {

            this.smallMultiplesOptions = smallMultiplesOptions;
            return this;
        }
        @CustomType.Setter
        public Builder sortConfiguration(@Nullable VisualsPieChartVisualChartConfigurationSortConfiguration sortConfiguration) {

            this.sortConfiguration = sortConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder tooltip(@Nullable TooltipOptions tooltip) {

            this.tooltip = tooltip;
            return this;
        }
        @CustomType.Setter
        public Builder valueLabelOptions(@Nullable ChartAxisLabelOptions valueLabelOptions) {

            this.valueLabelOptions = valueLabelOptions;
            return this;
        }
        @CustomType.Setter
        public Builder visualPalette(@Nullable VisualPalette visualPalette) {

            this.visualPalette = visualPalette;
            return this;
        }
        public VisualsPieChartVisualChartConfiguration build() {
            final var _resultValue = new VisualsPieChartVisualChartConfiguration();
            _resultValue.categoryLabelOptions = categoryLabelOptions;
            _resultValue.contributionAnalysisDefaults = contributionAnalysisDefaults;
            _resultValue.dataLabels = dataLabels;
            _resultValue.donutOptions = donutOptions;
            _resultValue.fieldWells = fieldWells;
            _resultValue.legend = legend;
            _resultValue.smallMultiplesOptions = smallMultiplesOptions;
            _resultValue.sortConfiguration = sortConfiguration;
            _resultValue.tooltip = tooltip;
            _resultValue.valueLabelOptions = valueLabelOptions;
            _resultValue.visualPalette = visualPalette;
            return _resultValue;
        }
    }
}
