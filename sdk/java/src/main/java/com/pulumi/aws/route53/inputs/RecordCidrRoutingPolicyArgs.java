// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.route53.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class RecordCidrRoutingPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final RecordCidrRoutingPolicyArgs Empty = new RecordCidrRoutingPolicyArgs();

    /**
     * The CIDR collection ID. See the `aws.route53.CidrCollection` resource for more details.
     * 
     */
    @Import(name="collectionId", required=true)
    private Output<String> collectionId;

    /**
     * @return The CIDR collection ID. See the `aws.route53.CidrCollection` resource for more details.
     * 
     */
    public Output<String> collectionId() {
        return this.collectionId;
    }

    /**
     * The CIDR collection location name. See the `aws.route53.CidrLocation` resource for more details. A `location_name` with an asterisk `&#34;*&#34;` can be used to create a default CIDR record. `collection_id` is still required for default record.
     * 
     */
    @Import(name="locationName", required=true)
    private Output<String> locationName;

    /**
     * @return The CIDR collection location name. See the `aws.route53.CidrLocation` resource for more details. A `location_name` with an asterisk `&#34;*&#34;` can be used to create a default CIDR record. `collection_id` is still required for default record.
     * 
     */
    public Output<String> locationName() {
        return this.locationName;
    }

    private RecordCidrRoutingPolicyArgs() {}

    private RecordCidrRoutingPolicyArgs(RecordCidrRoutingPolicyArgs $) {
        this.collectionId = $.collectionId;
        this.locationName = $.locationName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RecordCidrRoutingPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RecordCidrRoutingPolicyArgs $;

        public Builder() {
            $ = new RecordCidrRoutingPolicyArgs();
        }

        public Builder(RecordCidrRoutingPolicyArgs defaults) {
            $ = new RecordCidrRoutingPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param collectionId The CIDR collection ID. See the `aws.route53.CidrCollection` resource for more details.
         * 
         * @return builder
         * 
         */
        public Builder collectionId(Output<String> collectionId) {
            $.collectionId = collectionId;
            return this;
        }

        /**
         * @param collectionId The CIDR collection ID. See the `aws.route53.CidrCollection` resource for more details.
         * 
         * @return builder
         * 
         */
        public Builder collectionId(String collectionId) {
            return collectionId(Output.of(collectionId));
        }

        /**
         * @param locationName The CIDR collection location name. See the `aws.route53.CidrLocation` resource for more details. A `location_name` with an asterisk `&#34;*&#34;` can be used to create a default CIDR record. `collection_id` is still required for default record.
         * 
         * @return builder
         * 
         */
        public Builder locationName(Output<String> locationName) {
            $.locationName = locationName;
            return this;
        }

        /**
         * @param locationName The CIDR collection location name. See the `aws.route53.CidrLocation` resource for more details. A `location_name` with an asterisk `&#34;*&#34;` can be used to create a default CIDR record. `collection_id` is still required for default record.
         * 
         * @return builder
         * 
         */
        public Builder locationName(String locationName) {
            return locationName(Output.of(locationName));
        }

        public RecordCidrRoutingPolicyArgs build() {
            if ($.collectionId == null) {
                throw new MissingRequiredPropertyException("RecordCidrRoutingPolicyArgs", "collectionId");
            }
            if ($.locationName == null) {
                throw new MissingRequiredPropertyException("RecordCidrRoutingPolicyArgs", "locationName");
            }
            return $;
        }
    }

}
