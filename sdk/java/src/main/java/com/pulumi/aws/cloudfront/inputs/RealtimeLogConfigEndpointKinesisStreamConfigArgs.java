// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudfront.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class RealtimeLogConfigEndpointKinesisStreamConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final RealtimeLogConfigEndpointKinesisStreamConfigArgs Empty = new RealtimeLogConfigEndpointKinesisStreamConfigArgs();

    /**
     * The ARN of an IAM role that CloudFront can use to send real-time log data to the Kinesis data stream.
     * See the [AWS documentation](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-iam-role) for more information.
     * 
     */
    @Import(name="roleArn", required=true)
    private Output<String> roleArn;

    /**
     * @return The ARN of an IAM role that CloudFront can use to send real-time log data to the Kinesis data stream.
     * See the [AWS documentation](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-iam-role) for more information.
     * 
     */
    public Output<String> roleArn() {
        return this.roleArn;
    }

    /**
     * The ARN of the Kinesis data stream.
     * 
     */
    @Import(name="streamArn", required=true)
    private Output<String> streamArn;

    /**
     * @return The ARN of the Kinesis data stream.
     * 
     */
    public Output<String> streamArn() {
        return this.streamArn;
    }

    private RealtimeLogConfigEndpointKinesisStreamConfigArgs() {}

    private RealtimeLogConfigEndpointKinesisStreamConfigArgs(RealtimeLogConfigEndpointKinesisStreamConfigArgs $) {
        this.roleArn = $.roleArn;
        this.streamArn = $.streamArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RealtimeLogConfigEndpointKinesisStreamConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RealtimeLogConfigEndpointKinesisStreamConfigArgs $;

        public Builder() {
            $ = new RealtimeLogConfigEndpointKinesisStreamConfigArgs();
        }

        public Builder(RealtimeLogConfigEndpointKinesisStreamConfigArgs defaults) {
            $ = new RealtimeLogConfigEndpointKinesisStreamConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param roleArn The ARN of an IAM role that CloudFront can use to send real-time log data to the Kinesis data stream.
         * See the [AWS documentation](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-iam-role) for more information.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn The ARN of an IAM role that CloudFront can use to send real-time log data to the Kinesis data stream.
         * See the [AWS documentation](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-iam-role) for more information.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        /**
         * @param streamArn The ARN of the Kinesis data stream.
         * 
         * @return builder
         * 
         */
        public Builder streamArn(Output<String> streamArn) {
            $.streamArn = streamArn;
            return this;
        }

        /**
         * @param streamArn The ARN of the Kinesis data stream.
         * 
         * @return builder
         * 
         */
        public Builder streamArn(String streamArn) {
            return streamArn(Output.of(streamArn));
        }

        public RealtimeLogConfigEndpointKinesisStreamConfigArgs build() {
            if ($.roleArn == null) {
                throw new MissingRequiredPropertyException("RealtimeLogConfigEndpointKinesisStreamConfigArgs", "roleArn");
            }
            if ($.streamArn == null) {
                throw new MissingRequiredPropertyException("RealtimeLogConfigEndpointKinesisStreamConfigArgs", "streamArn");
            }
            return $;
        }
    }

}
