// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.IamPolicyAssignmentIdentitiesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IamPolicyAssignmentState extends com.pulumi.resources.ResourceArgs {

    public static final IamPolicyAssignmentState Empty = new IamPolicyAssignmentState();

    /**
     * Assignment ID.
     * 
     */
    @Import(name="assignmentId")
    private @Nullable Output<String> assignmentId;

    /**
     * @return Assignment ID.
     * 
     */
    public Optional<Output<String>> assignmentId() {
        return Optional.ofNullable(this.assignmentId);
    }

    /**
     * Name of the assignment.
     * 
     */
    @Import(name="assignmentName")
    private @Nullable Output<String> assignmentName;

    /**
     * @return Name of the assignment.
     * 
     */
    public Optional<Output<String>> assignmentName() {
        return Optional.ofNullable(this.assignmentName);
    }

    /**
     * Status of the assignment. Valid values are `ENABLED`, `DISABLED`, and `DRAFT`.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="assignmentStatus")
    private @Nullable Output<String> assignmentStatus;

    /**
     * @return Status of the assignment. Valid values are `ENABLED`, `DISABLED`, and `DRAFT`.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<String>> assignmentStatus() {
        return Optional.ofNullable(this.assignmentStatus);
    }

    /**
     * AWS account ID.
     * 
     */
    @Import(name="awsAccountId")
    private @Nullable Output<String> awsAccountId;

    /**
     * @return AWS account ID.
     * 
     */
    public Optional<Output<String>> awsAccountId() {
        return Optional.ofNullable(this.awsAccountId);
    }

    /**
     * Amazon QuickSight users, groups, or both to assign the policy to. See `identities` block.
     * 
     */
    @Import(name="identities")
    private @Nullable Output<IamPolicyAssignmentIdentitiesArgs> identities;

    /**
     * @return Amazon QuickSight users, groups, or both to assign the policy to. See `identities` block.
     * 
     */
    public Optional<Output<IamPolicyAssignmentIdentitiesArgs>> identities() {
        return Optional.ofNullable(this.identities);
    }

    /**
     * Namespace that contains the assignment. Defaults to `default`.
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return Namespace that contains the assignment. Defaults to `default`.
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * ARN of the IAM policy to apply to the Amazon QuickSight users and groups specified in this assignment.
     * 
     */
    @Import(name="policyArn")
    private @Nullable Output<String> policyArn;

    /**
     * @return ARN of the IAM policy to apply to the Amazon QuickSight users and groups specified in this assignment.
     * 
     */
    public Optional<Output<String>> policyArn() {
        return Optional.ofNullable(this.policyArn);
    }

    private IamPolicyAssignmentState() {}

    private IamPolicyAssignmentState(IamPolicyAssignmentState $) {
        this.assignmentId = $.assignmentId;
        this.assignmentName = $.assignmentName;
        this.assignmentStatus = $.assignmentStatus;
        this.awsAccountId = $.awsAccountId;
        this.identities = $.identities;
        this.namespace = $.namespace;
        this.policyArn = $.policyArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IamPolicyAssignmentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IamPolicyAssignmentState $;

        public Builder() {
            $ = new IamPolicyAssignmentState();
        }

        public Builder(IamPolicyAssignmentState defaults) {
            $ = new IamPolicyAssignmentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param assignmentId Assignment ID.
         * 
         * @return builder
         * 
         */
        public Builder assignmentId(@Nullable Output<String> assignmentId) {
            $.assignmentId = assignmentId;
            return this;
        }

        /**
         * @param assignmentId Assignment ID.
         * 
         * @return builder
         * 
         */
        public Builder assignmentId(String assignmentId) {
            return assignmentId(Output.of(assignmentId));
        }

        /**
         * @param assignmentName Name of the assignment.
         * 
         * @return builder
         * 
         */
        public Builder assignmentName(@Nullable Output<String> assignmentName) {
            $.assignmentName = assignmentName;
            return this;
        }

        /**
         * @param assignmentName Name of the assignment.
         * 
         * @return builder
         * 
         */
        public Builder assignmentName(String assignmentName) {
            return assignmentName(Output.of(assignmentName));
        }

        /**
         * @param assignmentStatus Status of the assignment. Valid values are `ENABLED`, `DISABLED`, and `DRAFT`.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder assignmentStatus(@Nullable Output<String> assignmentStatus) {
            $.assignmentStatus = assignmentStatus;
            return this;
        }

        /**
         * @param assignmentStatus Status of the assignment. Valid values are `ENABLED`, `DISABLED`, and `DRAFT`.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder assignmentStatus(String assignmentStatus) {
            return assignmentStatus(Output.of(assignmentStatus));
        }

        /**
         * @param awsAccountId AWS account ID.
         * 
         * @return builder
         * 
         */
        public Builder awsAccountId(@Nullable Output<String> awsAccountId) {
            $.awsAccountId = awsAccountId;
            return this;
        }

        /**
         * @param awsAccountId AWS account ID.
         * 
         * @return builder
         * 
         */
        public Builder awsAccountId(String awsAccountId) {
            return awsAccountId(Output.of(awsAccountId));
        }

        /**
         * @param identities Amazon QuickSight users, groups, or both to assign the policy to. See `identities` block.
         * 
         * @return builder
         * 
         */
        public Builder identities(@Nullable Output<IamPolicyAssignmentIdentitiesArgs> identities) {
            $.identities = identities;
            return this;
        }

        /**
         * @param identities Amazon QuickSight users, groups, or both to assign the policy to. See `identities` block.
         * 
         * @return builder
         * 
         */
        public Builder identities(IamPolicyAssignmentIdentitiesArgs identities) {
            return identities(Output.of(identities));
        }

        /**
         * @param namespace Namespace that contains the assignment. Defaults to `default`.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace Namespace that contains the assignment. Defaults to `default`.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param policyArn ARN of the IAM policy to apply to the Amazon QuickSight users and groups specified in this assignment.
         * 
         * @return builder
         * 
         */
        public Builder policyArn(@Nullable Output<String> policyArn) {
            $.policyArn = policyArn;
            return this;
        }

        /**
         * @param policyArn ARN of the IAM policy to apply to the Amazon QuickSight users and groups specified in this assignment.
         * 
         * @return builder
         * 
         */
        public Builder policyArn(String policyArn) {
            return policyArn(Output.of(policyArn));
        }

        public IamPolicyAssignmentState build() {
            return $;
        }
    }

}
