// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2transitgateway.inputs;

import com.pulumi.aws.ec2transitgateway.inputs.GetRouteTableRoutesFilterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetRouteTableRoutesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRouteTableRoutesArgs Empty = new GetRouteTableRoutesArgs();

    /**
     * Custom filter block as described below.
     * 
     */
    @Import(name="filters", required=true)
    private Output<List<GetRouteTableRoutesFilterArgs>> filters;

    /**
     * @return Custom filter block as described below.
     * 
     */
    public Output<List<GetRouteTableRoutesFilterArgs>> filters() {
        return this.filters;
    }

    /**
     * Identifier of EC2 Transit Gateway Route Table.
     * 
     * More complex filters can be expressed using one or more `filter` sub-blocks,
     * which take the following arguments:
     * 
     */
    @Import(name="transitGatewayRouteTableId", required=true)
    private Output<String> transitGatewayRouteTableId;

    /**
     * @return Identifier of EC2 Transit Gateway Route Table.
     * 
     * More complex filters can be expressed using one or more `filter` sub-blocks,
     * which take the following arguments:
     * 
     */
    public Output<String> transitGatewayRouteTableId() {
        return this.transitGatewayRouteTableId;
    }

    private GetRouteTableRoutesArgs() {}

    private GetRouteTableRoutesArgs(GetRouteTableRoutesArgs $) {
        this.filters = $.filters;
        this.transitGatewayRouteTableId = $.transitGatewayRouteTableId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRouteTableRoutesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRouteTableRoutesArgs $;

        public Builder() {
            $ = new GetRouteTableRoutesArgs();
        }

        public Builder(GetRouteTableRoutesArgs defaults) {
            $ = new GetRouteTableRoutesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filters Custom filter block as described below.
         * 
         * @return builder
         * 
         */
        public Builder filters(Output<List<GetRouteTableRoutesFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        /**
         * @param filters Custom filter block as described below.
         * 
         * @return builder
         * 
         */
        public Builder filters(List<GetRouteTableRoutesFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        /**
         * @param filters Custom filter block as described below.
         * 
         * @return builder
         * 
         */
        public Builder filters(GetRouteTableRoutesFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param transitGatewayRouteTableId Identifier of EC2 Transit Gateway Route Table.
         * 
         * More complex filters can be expressed using one or more `filter` sub-blocks,
         * which take the following arguments:
         * 
         * @return builder
         * 
         */
        public Builder transitGatewayRouteTableId(Output<String> transitGatewayRouteTableId) {
            $.transitGatewayRouteTableId = transitGatewayRouteTableId;
            return this;
        }

        /**
         * @param transitGatewayRouteTableId Identifier of EC2 Transit Gateway Route Table.
         * 
         * More complex filters can be expressed using one or more `filter` sub-blocks,
         * which take the following arguments:
         * 
         * @return builder
         * 
         */
        public Builder transitGatewayRouteTableId(String transitGatewayRouteTableId) {
            return transitGatewayRouteTableId(Output.of(transitGatewayRouteTableId));
        }

        public GetRouteTableRoutesArgs build() {
            if ($.filters == null) {
                throw new MissingRequiredPropertyException("GetRouteTableRoutesArgs", "filters");
            }
            if ($.transitGatewayRouteTableId == null) {
                throw new MissingRequiredPropertyException("GetRouteTableRoutesArgs", "transitGatewayRouteTableId");
            }
            return $;
        }
    }

}
