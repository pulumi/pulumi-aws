// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sqs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class RedrivePolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final RedrivePolicyArgs Empty = new RedrivePolicyArgs();

    @Import(name="queueUrl", required=true)
    private Output<String> queueUrl;

    public Output<String> queueUrl() {
        return this.queueUrl;
    }

    @Import(name="redrivePolicy", required=true)
    private Output<String> redrivePolicy;

    public Output<String> redrivePolicy() {
        return this.redrivePolicy;
    }

    private RedrivePolicyArgs() {}

    private RedrivePolicyArgs(RedrivePolicyArgs $) {
        this.queueUrl = $.queueUrl;
        this.redrivePolicy = $.redrivePolicy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RedrivePolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RedrivePolicyArgs $;

        public Builder() {
            $ = new RedrivePolicyArgs();
        }

        public Builder(RedrivePolicyArgs defaults) {
            $ = new RedrivePolicyArgs(Objects.requireNonNull(defaults));
        }

        public Builder queueUrl(Output<String> queueUrl) {
            $.queueUrl = queueUrl;
            return this;
        }

        public Builder queueUrl(String queueUrl) {
            return queueUrl(Output.of(queueUrl));
        }

        public Builder redrivePolicy(Output<String> redrivePolicy) {
            $.redrivePolicy = redrivePolicy;
            return this;
        }

        public Builder redrivePolicy(String redrivePolicy) {
            return redrivePolicy(Output.of(redrivePolicy));
        }

        public RedrivePolicyArgs build() {
            $.queueUrl = Objects.requireNonNull($.queueUrl, "expected parameter 'queueUrl' to be non-null");
            $.redrivePolicy = Objects.requireNonNull($.redrivePolicy, "expected parameter 'redrivePolicy' to be non-null");
            return $;
        }
    }

}
