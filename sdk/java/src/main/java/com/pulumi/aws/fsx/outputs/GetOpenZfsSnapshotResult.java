// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.fsx.outputs;

import com.pulumi.aws.fsx.outputs.GetOpenZfsSnapshotFilter;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetOpenZfsSnapshotResult {
    /**
     * @return Amazon Resource Name of the snapshot.
     * 
     */
    private String arn;
    /**
     * @return Time that the resource was created.
     * 
     */
    private String creationTime;
    private @Nullable List<GetOpenZfsSnapshotFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable Boolean mostRecent;
    /**
     * @return Name of the snapshot.
     * 
     */
    private @Nullable String name;
    /**
     * @return ID of the snapshot.
     * 
     */
    private String snapshotId;
    private @Nullable List<String> snapshotIds;
    /**
     * @return List of Tag values, with a maximum of 50 elements.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return ID of the volume that the snapshot is of.
     * 
     */
    private String volumeId;

    private GetOpenZfsSnapshotResult() {}
    /**
     * @return Amazon Resource Name of the snapshot.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return Time that the resource was created.
     * 
     */
    public String creationTime() {
        return this.creationTime;
    }
    public List<GetOpenZfsSnapshotFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<Boolean> mostRecent() {
        return Optional.ofNullable(this.mostRecent);
    }
    /**
     * @return Name of the snapshot.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return ID of the snapshot.
     * 
     */
    public String snapshotId() {
        return this.snapshotId;
    }
    public List<String> snapshotIds() {
        return this.snapshotIds == null ? List.of() : this.snapshotIds;
    }
    /**
     * @return List of Tag values, with a maximum of 50 elements.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return ID of the volume that the snapshot is of.
     * 
     */
    public String volumeId() {
        return this.volumeId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOpenZfsSnapshotResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private String creationTime;
        private @Nullable List<GetOpenZfsSnapshotFilter> filters;
        private String id;
        private @Nullable Boolean mostRecent;
        private @Nullable String name;
        private String snapshotId;
        private @Nullable List<String> snapshotIds;
        private Map<String,String> tags;
        private String volumeId;
        public Builder() {}
        public Builder(GetOpenZfsSnapshotResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.creationTime = defaults.creationTime;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.mostRecent = defaults.mostRecent;
    	      this.name = defaults.name;
    	      this.snapshotId = defaults.snapshotId;
    	      this.snapshotIds = defaults.snapshotIds;
    	      this.tags = defaults.tags;
    	      this.volumeId = defaults.volumeId;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder creationTime(String creationTime) {
            this.creationTime = Objects.requireNonNull(creationTime);
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetOpenZfsSnapshotFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetOpenZfsSnapshotFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder mostRecent(@Nullable Boolean mostRecent) {
            this.mostRecent = mostRecent;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder snapshotId(String snapshotId) {
            this.snapshotId = Objects.requireNonNull(snapshotId);
            return this;
        }
        @CustomType.Setter
        public Builder snapshotIds(@Nullable List<String> snapshotIds) {
            this.snapshotIds = snapshotIds;
            return this;
        }
        public Builder snapshotIds(String... snapshotIds) {
            return snapshotIds(List.of(snapshotIds));
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder volumeId(String volumeId) {
            this.volumeId = Objects.requireNonNull(volumeId);
            return this;
        }
        public GetOpenZfsSnapshotResult build() {
            final var o = new GetOpenZfsSnapshotResult();
            o.arn = arn;
            o.creationTime = creationTime;
            o.filters = filters;
            o.id = id;
            o.mostRecent = mostRecent;
            o.name = name;
            o.snapshotId = snapshotId;
            o.snapshotIds = snapshotIds;
            o.tags = tags;
            o.volumeId = volumeId;
            return o;
        }
    }
}
