// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrockfoundation.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetModelsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetModelsArgs Empty = new GetModelsArgs();

    /**
     * Customization type to filter on. Valid values are `FINE_TUNING`.
     * 
     */
    @Import(name="byCustomizationType")
    private @Nullable Output<String> byCustomizationType;

    /**
     * @return Customization type to filter on. Valid values are `FINE_TUNING`.
     * 
     */
    public Optional<Output<String>> byCustomizationType() {
        return Optional.ofNullable(this.byCustomizationType);
    }

    /**
     * Inference type to filter on. Valid values are `ON_DEMAND` and `PROVISIONED`.
     * 
     */
    @Import(name="byInferenceType")
    private @Nullable Output<String> byInferenceType;

    /**
     * @return Inference type to filter on. Valid values are `ON_DEMAND` and `PROVISIONED`.
     * 
     */
    public Optional<Output<String>> byInferenceType() {
        return Optional.ofNullable(this.byInferenceType);
    }

    /**
     * Output modality to filter on. Valid values are `TEXT`, `IMAGE`, and `EMBEDDING`.
     * 
     */
    @Import(name="byOutputModality")
    private @Nullable Output<String> byOutputModality;

    /**
     * @return Output modality to filter on. Valid values are `TEXT`, `IMAGE`, and `EMBEDDING`.
     * 
     */
    public Optional<Output<String>> byOutputModality() {
        return Optional.ofNullable(this.byOutputModality);
    }

    /**
     * Model provider to filter on.
     * 
     */
    @Import(name="byProvider")
    private @Nullable Output<String> byProvider;

    /**
     * @return Model provider to filter on.
     * 
     */
    public Optional<Output<String>> byProvider() {
        return Optional.ofNullable(this.byProvider);
    }

    private GetModelsArgs() {}

    private GetModelsArgs(GetModelsArgs $) {
        this.byCustomizationType = $.byCustomizationType;
        this.byInferenceType = $.byInferenceType;
        this.byOutputModality = $.byOutputModality;
        this.byProvider = $.byProvider;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetModelsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetModelsArgs $;

        public Builder() {
            $ = new GetModelsArgs();
        }

        public Builder(GetModelsArgs defaults) {
            $ = new GetModelsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param byCustomizationType Customization type to filter on. Valid values are `FINE_TUNING`.
         * 
         * @return builder
         * 
         */
        public Builder byCustomizationType(@Nullable Output<String> byCustomizationType) {
            $.byCustomizationType = byCustomizationType;
            return this;
        }

        /**
         * @param byCustomizationType Customization type to filter on. Valid values are `FINE_TUNING`.
         * 
         * @return builder
         * 
         */
        public Builder byCustomizationType(String byCustomizationType) {
            return byCustomizationType(Output.of(byCustomizationType));
        }

        /**
         * @param byInferenceType Inference type to filter on. Valid values are `ON_DEMAND` and `PROVISIONED`.
         * 
         * @return builder
         * 
         */
        public Builder byInferenceType(@Nullable Output<String> byInferenceType) {
            $.byInferenceType = byInferenceType;
            return this;
        }

        /**
         * @param byInferenceType Inference type to filter on. Valid values are `ON_DEMAND` and `PROVISIONED`.
         * 
         * @return builder
         * 
         */
        public Builder byInferenceType(String byInferenceType) {
            return byInferenceType(Output.of(byInferenceType));
        }

        /**
         * @param byOutputModality Output modality to filter on. Valid values are `TEXT`, `IMAGE`, and `EMBEDDING`.
         * 
         * @return builder
         * 
         */
        public Builder byOutputModality(@Nullable Output<String> byOutputModality) {
            $.byOutputModality = byOutputModality;
            return this;
        }

        /**
         * @param byOutputModality Output modality to filter on. Valid values are `TEXT`, `IMAGE`, and `EMBEDDING`.
         * 
         * @return builder
         * 
         */
        public Builder byOutputModality(String byOutputModality) {
            return byOutputModality(Output.of(byOutputModality));
        }

        /**
         * @param byProvider Model provider to filter on.
         * 
         * @return builder
         * 
         */
        public Builder byProvider(@Nullable Output<String> byProvider) {
            $.byProvider = byProvider;
            return this;
        }

        /**
         * @param byProvider Model provider to filter on.
         * 
         * @return builder
         * 
         */
        public Builder byProvider(String byProvider) {
            return byProvider(Output.of(byProvider));
        }

        public GetModelsArgs build() {
            return $;
        }
    }

}
