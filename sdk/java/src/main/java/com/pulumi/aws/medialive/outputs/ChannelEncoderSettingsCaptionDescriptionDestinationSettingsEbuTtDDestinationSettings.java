// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.medialive.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ChannelEncoderSettingsCaptionDescriptionDestinationSettingsEbuTtDDestinationSettings {
    /**
     * @return Complete this field if you want to include the name of the copyright holder in the copyright tag in the captions metadata.
     * 
     */
    private @Nullable String copyrightHolder;
    /**
     * @return Specifies how to handle the gap between the lines (in multi-line captions). - enabled: Fill with the captions background color (as specified in the input captions). - disabled: Leave the gap unfilled.
     * 
     */
    private @Nullable String fillLineGap;
    /**
     * @return Specifies the font family to include in the font data attached to the EBU-TT captions. Valid only if styleControl is set to include. If you leave this field empty, the font family is set to “monospaced”. (If styleControl is set to exclude, the font family is always set to “monospaced”.) You specify only the font family. All other style information (color, bold, position and so on) is copied from the input captions. The size is always set to 100% to allow the downstream player to choose the size. - Enter a list of font families, as a comma-separated list of font names, in order of preference. The name can be a font family (such as “Arial”), or a generic font family (such as “serif”), or “default” (to let the downstream player choose the font). - Leave blank to set the family to “monospace”.
     * 
     */
    private @Nullable String fontFamily;
    /**
     * @return Specifies the style information (font color, font position, and so on) to include in the font data that is attached to the EBU-TT captions. - include: Take the style information (font color, font position, and so on) from the source captions and include that information in the font data attached to the EBU-TT captions. This option is valid only if the source captions are Embedded or Teletext. - exclude: In the font data attached to the EBU-TT captions, set the font family to “monospaced”. Do not include any other style information.
     * 
     */
    private @Nullable String styleControl;

    private ChannelEncoderSettingsCaptionDescriptionDestinationSettingsEbuTtDDestinationSettings() {}
    /**
     * @return Complete this field if you want to include the name of the copyright holder in the copyright tag in the captions metadata.
     * 
     */
    public Optional<String> copyrightHolder() {
        return Optional.ofNullable(this.copyrightHolder);
    }
    /**
     * @return Specifies how to handle the gap between the lines (in multi-line captions). - enabled: Fill with the captions background color (as specified in the input captions). - disabled: Leave the gap unfilled.
     * 
     */
    public Optional<String> fillLineGap() {
        return Optional.ofNullable(this.fillLineGap);
    }
    /**
     * @return Specifies the font family to include in the font data attached to the EBU-TT captions. Valid only if styleControl is set to include. If you leave this field empty, the font family is set to “monospaced”. (If styleControl is set to exclude, the font family is always set to “monospaced”.) You specify only the font family. All other style information (color, bold, position and so on) is copied from the input captions. The size is always set to 100% to allow the downstream player to choose the size. - Enter a list of font families, as a comma-separated list of font names, in order of preference. The name can be a font family (such as “Arial”), or a generic font family (such as “serif”), or “default” (to let the downstream player choose the font). - Leave blank to set the family to “monospace”.
     * 
     */
    public Optional<String> fontFamily() {
        return Optional.ofNullable(this.fontFamily);
    }
    /**
     * @return Specifies the style information (font color, font position, and so on) to include in the font data that is attached to the EBU-TT captions. - include: Take the style information (font color, font position, and so on) from the source captions and include that information in the font data attached to the EBU-TT captions. This option is valid only if the source captions are Embedded or Teletext. - exclude: In the font data attached to the EBU-TT captions, set the font family to “monospaced”. Do not include any other style information.
     * 
     */
    public Optional<String> styleControl() {
        return Optional.ofNullable(this.styleControl);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ChannelEncoderSettingsCaptionDescriptionDestinationSettingsEbuTtDDestinationSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String copyrightHolder;
        private @Nullable String fillLineGap;
        private @Nullable String fontFamily;
        private @Nullable String styleControl;
        public Builder() {}
        public Builder(ChannelEncoderSettingsCaptionDescriptionDestinationSettingsEbuTtDDestinationSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.copyrightHolder = defaults.copyrightHolder;
    	      this.fillLineGap = defaults.fillLineGap;
    	      this.fontFamily = defaults.fontFamily;
    	      this.styleControl = defaults.styleControl;
        }

        @CustomType.Setter
        public Builder copyrightHolder(@Nullable String copyrightHolder) {
            this.copyrightHolder = copyrightHolder;
            return this;
        }
        @CustomType.Setter
        public Builder fillLineGap(@Nullable String fillLineGap) {
            this.fillLineGap = fillLineGap;
            return this;
        }
        @CustomType.Setter
        public Builder fontFamily(@Nullable String fontFamily) {
            this.fontFamily = fontFamily;
            return this;
        }
        @CustomType.Setter
        public Builder styleControl(@Nullable String styleControl) {
            this.styleControl = styleControl;
            return this;
        }
        public ChannelEncoderSettingsCaptionDescriptionDestinationSettingsEbuTtDDestinationSettings build() {
            final var o = new ChannelEncoderSettingsCaptionDescriptionDestinationSettingsEbuTtDDestinationSettings();
            o.copyrightHolder = copyrightHolder;
            o.fillLineGap = fillLineGap;
            o.fontFamily = fontFamily;
            o.styleControl = styleControl;
            return o;
        }
    }
}
