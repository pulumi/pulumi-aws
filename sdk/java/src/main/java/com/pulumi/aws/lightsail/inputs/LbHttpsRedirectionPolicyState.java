// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lightsail.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LbHttpsRedirectionPolicyState extends com.pulumi.resources.ResourceArgs {

    public static final LbHttpsRedirectionPolicyState Empty = new LbHttpsRedirectionPolicyState();

    /**
     * Whether to enable HTTP to HTTPS redirection. `true` to activate HTTP to HTTPS redirection or `false` to deactivate HTTP to HTTPS redirection.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Whether to enable HTTP to HTTPS redirection. `true` to activate HTTP to HTTPS redirection or `false` to deactivate HTTP to HTTPS redirection.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Name of the load balancer to which you want to enable HTTP to HTTPS redirection.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="lbName")
    private @Nullable Output<String> lbName;

    /**
     * @return Name of the load balancer to which you want to enable HTTP to HTTPS redirection.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<String>> lbName() {
        return Optional.ofNullable(this.lbName);
    }

    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    private LbHttpsRedirectionPolicyState() {}

    private LbHttpsRedirectionPolicyState(LbHttpsRedirectionPolicyState $) {
        this.enabled = $.enabled;
        this.lbName = $.lbName;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LbHttpsRedirectionPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LbHttpsRedirectionPolicyState $;

        public Builder() {
            $ = new LbHttpsRedirectionPolicyState();
        }

        public Builder(LbHttpsRedirectionPolicyState defaults) {
            $ = new LbHttpsRedirectionPolicyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Whether to enable HTTP to HTTPS redirection. `true` to activate HTTP to HTTPS redirection or `false` to deactivate HTTP to HTTPS redirection.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether to enable HTTP to HTTPS redirection. `true` to activate HTTP to HTTPS redirection or `false` to deactivate HTTP to HTTPS redirection.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param lbName Name of the load balancer to which you want to enable HTTP to HTTPS redirection.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder lbName(@Nullable Output<String> lbName) {
            $.lbName = lbName;
            return this;
        }

        /**
         * @param lbName Name of the load balancer to which you want to enable HTTP to HTTPS redirection.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder lbName(String lbName) {
            return lbName(Output.of(lbName));
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public LbHttpsRedirectionPolicyState build() {
            return $;
        }
    }

}
