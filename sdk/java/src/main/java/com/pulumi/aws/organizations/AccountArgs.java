// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.organizations;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccountArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccountArgs Empty = new AccountArgs();

    @Import(name="closeOnDeletion")
    private @Nullable Output<Boolean> closeOnDeletion;

    public Optional<Output<Boolean>> closeOnDeletion() {
        return Optional.ofNullable(this.closeOnDeletion);
    }

    @Import(name="createGovcloud")
    private @Nullable Output<Boolean> createGovcloud;

    public Optional<Output<Boolean>> createGovcloud() {
        return Optional.ofNullable(this.createGovcloud);
    }

    @Import(name="email", required=true)
    private Output<String> email;

    public Output<String> email() {
        return this.email;
    }

    @Import(name="iamUserAccessToBilling")
    private @Nullable Output<String> iamUserAccessToBilling;

    public Optional<Output<String>> iamUserAccessToBilling() {
        return Optional.ofNullable(this.iamUserAccessToBilling);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="parentId")
    private @Nullable Output<String> parentId;

    public Optional<Output<String>> parentId() {
        return Optional.ofNullable(this.parentId);
    }

    @Import(name="roleName")
    private @Nullable Output<String> roleName;

    public Optional<Output<String>> roleName() {
        return Optional.ofNullable(this.roleName);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private AccountArgs() {}

    private AccountArgs(AccountArgs $) {
        this.closeOnDeletion = $.closeOnDeletion;
        this.createGovcloud = $.createGovcloud;
        this.email = $.email;
        this.iamUserAccessToBilling = $.iamUserAccessToBilling;
        this.name = $.name;
        this.parentId = $.parentId;
        this.roleName = $.roleName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccountArgs $;

        public Builder() {
            $ = new AccountArgs();
        }

        public Builder(AccountArgs defaults) {
            $ = new AccountArgs(Objects.requireNonNull(defaults));
        }

        public Builder closeOnDeletion(@Nullable Output<Boolean> closeOnDeletion) {
            $.closeOnDeletion = closeOnDeletion;
            return this;
        }

        public Builder closeOnDeletion(Boolean closeOnDeletion) {
            return closeOnDeletion(Output.of(closeOnDeletion));
        }

        public Builder createGovcloud(@Nullable Output<Boolean> createGovcloud) {
            $.createGovcloud = createGovcloud;
            return this;
        }

        public Builder createGovcloud(Boolean createGovcloud) {
            return createGovcloud(Output.of(createGovcloud));
        }

        public Builder email(Output<String> email) {
            $.email = email;
            return this;
        }

        public Builder email(String email) {
            return email(Output.of(email));
        }

        public Builder iamUserAccessToBilling(@Nullable Output<String> iamUserAccessToBilling) {
            $.iamUserAccessToBilling = iamUserAccessToBilling;
            return this;
        }

        public Builder iamUserAccessToBilling(String iamUserAccessToBilling) {
            return iamUserAccessToBilling(Output.of(iamUserAccessToBilling));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder parentId(@Nullable Output<String> parentId) {
            $.parentId = parentId;
            return this;
        }

        public Builder parentId(String parentId) {
            return parentId(Output.of(parentId));
        }

        public Builder roleName(@Nullable Output<String> roleName) {
            $.roleName = roleName;
            return this;
        }

        public Builder roleName(String roleName) {
            return roleName(Output.of(roleName));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public AccountArgs build() {
            $.email = Objects.requireNonNull($.email, "expected parameter 'email' to be non-null");
            return $;
        }
    }

}
