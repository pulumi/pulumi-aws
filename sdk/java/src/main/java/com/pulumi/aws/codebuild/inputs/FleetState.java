// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codebuild.inputs;

import com.pulumi.aws.codebuild.inputs.FleetComputeConfigurationArgs;
import com.pulumi.aws.codebuild.inputs.FleetScalingConfigurationArgs;
import com.pulumi.aws.codebuild.inputs.FleetStatusArgs;
import com.pulumi.aws.codebuild.inputs.FleetVpcConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FleetState extends com.pulumi.resources.ResourceArgs {

    public static final FleetState Empty = new FleetState();

    /**
     * ARN of the Fleet.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return ARN of the Fleet.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * Number of machines allocated to the ﬂeet.
     * 
     */
    @Import(name="baseCapacity")
    private @Nullable Output<Integer> baseCapacity;

    /**
     * @return Number of machines allocated to the ﬂeet.
     * 
     */
    public Optional<Output<Integer>> baseCapacity() {
        return Optional.ofNullable(this.baseCapacity);
    }

    /**
     * The compute configuration of the compute fleet. This is only required if `compute_type` is set to `ATTRIBUTE_BASED_COMPUTE`. See `compute_configuration` below.
     * 
     */
    @Import(name="computeConfiguration")
    private @Nullable Output<FleetComputeConfigurationArgs> computeConfiguration;

    /**
     * @return The compute configuration of the compute fleet. This is only required if `compute_type` is set to `ATTRIBUTE_BASED_COMPUTE`. See `compute_configuration` below.
     * 
     */
    public Optional<Output<FleetComputeConfigurationArgs>> computeConfiguration() {
        return Optional.ofNullable(this.computeConfiguration);
    }

    /**
     * Compute resources the compute fleet uses. See [compute types](https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html#environment.types) for more information and valid values.
     * 
     */
    @Import(name="computeType")
    private @Nullable Output<String> computeType;

    /**
     * @return Compute resources the compute fleet uses. See [compute types](https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html#environment.types) for more information and valid values.
     * 
     */
    public Optional<Output<String>> computeType() {
        return Optional.ofNullable(this.computeType);
    }

    /**
     * Creation time of the fleet.
     * 
     */
    @Import(name="created")
    private @Nullable Output<String> created;

    /**
     * @return Creation time of the fleet.
     * 
     */
    public Optional<Output<String>> created() {
        return Optional.ofNullable(this.created);
    }

    /**
     * Environment type of the compute fleet. See [environment types](https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html#environment.types) for more information and valid values.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="environmentType")
    private @Nullable Output<String> environmentType;

    /**
     * @return Environment type of the compute fleet. See [environment types](https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html#environment.types) for more information and valid values.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<String>> environmentType() {
        return Optional.ofNullable(this.environmentType);
    }

    /**
     * The service role associated with the compute fleet.
     * 
     */
    @Import(name="fleetServiceRole")
    private @Nullable Output<String> fleetServiceRole;

    /**
     * @return The service role associated with the compute fleet.
     * 
     */
    public Optional<Output<String>> fleetServiceRole() {
        return Optional.ofNullable(this.fleetServiceRole);
    }

    /**
     * The Amazon Machine Image (AMI) of the compute fleet.
     * 
     */
    @Import(name="imageId")
    private @Nullable Output<String> imageId;

    /**
     * @return The Amazon Machine Image (AMI) of the compute fleet.
     * 
     */
    public Optional<Output<String>> imageId() {
        return Optional.ofNullable(this.imageId);
    }

    /**
     * Last modification time of the fleet.
     * 
     */
    @Import(name="lastModified")
    private @Nullable Output<String> lastModified;

    /**
     * @return Last modification time of the fleet.
     * 
     */
    public Optional<Output<String>> lastModified() {
        return Optional.ofNullable(this.lastModified);
    }

    /**
     * Fleet name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Fleet name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Overflow behavior for compute fleet. Valid values: `ON_DEMAND`, `QUEUE`.
     * 
     */
    @Import(name="overflowBehavior")
    private @Nullable Output<String> overflowBehavior;

    /**
     * @return Overflow behavior for compute fleet. Valid values: `ON_DEMAND`, `QUEUE`.
     * 
     */
    public Optional<Output<String>> overflowBehavior() {
        return Optional.ofNullable(this.overflowBehavior);
    }

    /**
     * Configuration block. This option is only valid when your overflow behavior is `QUEUE`. See `scaling_configuration` below.
     * 
     */
    @Import(name="scalingConfiguration")
    private @Nullable Output<FleetScalingConfigurationArgs> scalingConfiguration;

    /**
     * @return Configuration block. This option is only valid when your overflow behavior is `QUEUE`. See `scaling_configuration` below.
     * 
     */
    public Optional<Output<FleetScalingConfigurationArgs>> scalingConfiguration() {
        return Optional.ofNullable(this.scalingConfiguration);
    }

    /**
     * Nested attribute containing information about the current status of the fleet.
     * 
     */
    @Import(name="statuses")
    private @Nullable Output<List<FleetStatusArgs>> statuses;

    /**
     * @return Nested attribute containing information about the current status of the fleet.
     * 
     */
    public Optional<Output<List<FleetStatusArgs>>> statuses() {
        return Optional.ofNullable(this.statuses);
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    /**
     * Configuration block. See `vpc_config` below.
     * 
     */
    @Import(name="vpcConfigs")
    private @Nullable Output<List<FleetVpcConfigArgs>> vpcConfigs;

    /**
     * @return Configuration block. See `vpc_config` below.
     * 
     */
    public Optional<Output<List<FleetVpcConfigArgs>>> vpcConfigs() {
        return Optional.ofNullable(this.vpcConfigs);
    }

    private FleetState() {}

    private FleetState(FleetState $) {
        this.arn = $.arn;
        this.baseCapacity = $.baseCapacity;
        this.computeConfiguration = $.computeConfiguration;
        this.computeType = $.computeType;
        this.created = $.created;
        this.environmentType = $.environmentType;
        this.fleetServiceRole = $.fleetServiceRole;
        this.imageId = $.imageId;
        this.lastModified = $.lastModified;
        this.name = $.name;
        this.overflowBehavior = $.overflowBehavior;
        this.scalingConfiguration = $.scalingConfiguration;
        this.statuses = $.statuses;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.vpcConfigs = $.vpcConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FleetState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FleetState $;

        public Builder() {
            $ = new FleetState();
        }

        public Builder(FleetState defaults) {
            $ = new FleetState(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn ARN of the Fleet.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn ARN of the Fleet.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param baseCapacity Number of machines allocated to the ﬂeet.
         * 
         * @return builder
         * 
         */
        public Builder baseCapacity(@Nullable Output<Integer> baseCapacity) {
            $.baseCapacity = baseCapacity;
            return this;
        }

        /**
         * @param baseCapacity Number of machines allocated to the ﬂeet.
         * 
         * @return builder
         * 
         */
        public Builder baseCapacity(Integer baseCapacity) {
            return baseCapacity(Output.of(baseCapacity));
        }

        /**
         * @param computeConfiguration The compute configuration of the compute fleet. This is only required if `compute_type` is set to `ATTRIBUTE_BASED_COMPUTE`. See `compute_configuration` below.
         * 
         * @return builder
         * 
         */
        public Builder computeConfiguration(@Nullable Output<FleetComputeConfigurationArgs> computeConfiguration) {
            $.computeConfiguration = computeConfiguration;
            return this;
        }

        /**
         * @param computeConfiguration The compute configuration of the compute fleet. This is only required if `compute_type` is set to `ATTRIBUTE_BASED_COMPUTE`. See `compute_configuration` below.
         * 
         * @return builder
         * 
         */
        public Builder computeConfiguration(FleetComputeConfigurationArgs computeConfiguration) {
            return computeConfiguration(Output.of(computeConfiguration));
        }

        /**
         * @param computeType Compute resources the compute fleet uses. See [compute types](https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html#environment.types) for more information and valid values.
         * 
         * @return builder
         * 
         */
        public Builder computeType(@Nullable Output<String> computeType) {
            $.computeType = computeType;
            return this;
        }

        /**
         * @param computeType Compute resources the compute fleet uses. See [compute types](https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html#environment.types) for more information and valid values.
         * 
         * @return builder
         * 
         */
        public Builder computeType(String computeType) {
            return computeType(Output.of(computeType));
        }

        /**
         * @param created Creation time of the fleet.
         * 
         * @return builder
         * 
         */
        public Builder created(@Nullable Output<String> created) {
            $.created = created;
            return this;
        }

        /**
         * @param created Creation time of the fleet.
         * 
         * @return builder
         * 
         */
        public Builder created(String created) {
            return created(Output.of(created));
        }

        /**
         * @param environmentType Environment type of the compute fleet. See [environment types](https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html#environment.types) for more information and valid values.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder environmentType(@Nullable Output<String> environmentType) {
            $.environmentType = environmentType;
            return this;
        }

        /**
         * @param environmentType Environment type of the compute fleet. See [environment types](https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html#environment.types) for more information and valid values.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder environmentType(String environmentType) {
            return environmentType(Output.of(environmentType));
        }

        /**
         * @param fleetServiceRole The service role associated with the compute fleet.
         * 
         * @return builder
         * 
         */
        public Builder fleetServiceRole(@Nullable Output<String> fleetServiceRole) {
            $.fleetServiceRole = fleetServiceRole;
            return this;
        }

        /**
         * @param fleetServiceRole The service role associated with the compute fleet.
         * 
         * @return builder
         * 
         */
        public Builder fleetServiceRole(String fleetServiceRole) {
            return fleetServiceRole(Output.of(fleetServiceRole));
        }

        /**
         * @param imageId The Amazon Machine Image (AMI) of the compute fleet.
         * 
         * @return builder
         * 
         */
        public Builder imageId(@Nullable Output<String> imageId) {
            $.imageId = imageId;
            return this;
        }

        /**
         * @param imageId The Amazon Machine Image (AMI) of the compute fleet.
         * 
         * @return builder
         * 
         */
        public Builder imageId(String imageId) {
            return imageId(Output.of(imageId));
        }

        /**
         * @param lastModified Last modification time of the fleet.
         * 
         * @return builder
         * 
         */
        public Builder lastModified(@Nullable Output<String> lastModified) {
            $.lastModified = lastModified;
            return this;
        }

        /**
         * @param lastModified Last modification time of the fleet.
         * 
         * @return builder
         * 
         */
        public Builder lastModified(String lastModified) {
            return lastModified(Output.of(lastModified));
        }

        /**
         * @param name Fleet name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Fleet name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param overflowBehavior Overflow behavior for compute fleet. Valid values: `ON_DEMAND`, `QUEUE`.
         * 
         * @return builder
         * 
         */
        public Builder overflowBehavior(@Nullable Output<String> overflowBehavior) {
            $.overflowBehavior = overflowBehavior;
            return this;
        }

        /**
         * @param overflowBehavior Overflow behavior for compute fleet. Valid values: `ON_DEMAND`, `QUEUE`.
         * 
         * @return builder
         * 
         */
        public Builder overflowBehavior(String overflowBehavior) {
            return overflowBehavior(Output.of(overflowBehavior));
        }

        /**
         * @param scalingConfiguration Configuration block. This option is only valid when your overflow behavior is `QUEUE`. See `scaling_configuration` below.
         * 
         * @return builder
         * 
         */
        public Builder scalingConfiguration(@Nullable Output<FleetScalingConfigurationArgs> scalingConfiguration) {
            $.scalingConfiguration = scalingConfiguration;
            return this;
        }

        /**
         * @param scalingConfiguration Configuration block. This option is only valid when your overflow behavior is `QUEUE`. See `scaling_configuration` below.
         * 
         * @return builder
         * 
         */
        public Builder scalingConfiguration(FleetScalingConfigurationArgs scalingConfiguration) {
            return scalingConfiguration(Output.of(scalingConfiguration));
        }

        /**
         * @param statuses Nested attribute containing information about the current status of the fleet.
         * 
         * @return builder
         * 
         */
        public Builder statuses(@Nullable Output<List<FleetStatusArgs>> statuses) {
            $.statuses = statuses;
            return this;
        }

        /**
         * @param statuses Nested attribute containing information about the current status of the fleet.
         * 
         * @return builder
         * 
         */
        public Builder statuses(List<FleetStatusArgs> statuses) {
            return statuses(Output.of(statuses));
        }

        /**
         * @param statuses Nested attribute containing information about the current status of the fleet.
         * 
         * @return builder
         * 
         */
        public Builder statuses(FleetStatusArgs... statuses) {
            return statuses(List.of(statuses));
        }

        /**
         * @param tags Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        /**
         * @param vpcConfigs Configuration block. See `vpc_config` below.
         * 
         * @return builder
         * 
         */
        public Builder vpcConfigs(@Nullable Output<List<FleetVpcConfigArgs>> vpcConfigs) {
            $.vpcConfigs = vpcConfigs;
            return this;
        }

        /**
         * @param vpcConfigs Configuration block. See `vpc_config` below.
         * 
         * @return builder
         * 
         */
        public Builder vpcConfigs(List<FleetVpcConfigArgs> vpcConfigs) {
            return vpcConfigs(Output.of(vpcConfigs));
        }

        /**
         * @param vpcConfigs Configuration block. See `vpc_config` below.
         * 
         * @return builder
         * 
         */
        public Builder vpcConfigs(FleetVpcConfigArgs... vpcConfigs) {
            return vpcConfigs(List.of(vpcConfigs));
        }

        public FleetState build() {
            return $;
        }
    }

}
