// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.datapipeline.inputs;

import com.pulumi.aws.datapipeline.inputs.PipelineDefinitionParameterObjectAttributeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipelineDefinitionParameterObjectArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipelineDefinitionParameterObjectArgs Empty = new PipelineDefinitionParameterObjectArgs();

    /**
     * Configuration block for attributes of the parameter object. See below
     * 
     */
    @Import(name="attributes")
    private @Nullable Output<List<PipelineDefinitionParameterObjectAttributeArgs>> attributes;

    /**
     * @return Configuration block for attributes of the parameter object. See below
     * 
     */
    public Optional<Output<List<PipelineDefinitionParameterObjectAttributeArgs>>> attributes() {
        return Optional.ofNullable(this.attributes);
    }

    /**
     * ID of the parameter object.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return ID of the parameter object.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    private PipelineDefinitionParameterObjectArgs() {}

    private PipelineDefinitionParameterObjectArgs(PipelineDefinitionParameterObjectArgs $) {
        this.attributes = $.attributes;
        this.id = $.id;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineDefinitionParameterObjectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineDefinitionParameterObjectArgs $;

        public Builder() {
            $ = new PipelineDefinitionParameterObjectArgs();
        }

        public Builder(PipelineDefinitionParameterObjectArgs defaults) {
            $ = new PipelineDefinitionParameterObjectArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param attributes Configuration block for attributes of the parameter object. See below
         * 
         * @return builder
         * 
         */
        public Builder attributes(@Nullable Output<List<PipelineDefinitionParameterObjectAttributeArgs>> attributes) {
            $.attributes = attributes;
            return this;
        }

        /**
         * @param attributes Configuration block for attributes of the parameter object. See below
         * 
         * @return builder
         * 
         */
        public Builder attributes(List<PipelineDefinitionParameterObjectAttributeArgs> attributes) {
            return attributes(Output.of(attributes));
        }

        /**
         * @param attributes Configuration block for attributes of the parameter object. See below
         * 
         * @return builder
         * 
         */
        public Builder attributes(PipelineDefinitionParameterObjectAttributeArgs... attributes) {
            return attributes(List.of(attributes));
        }

        /**
         * @param id ID of the parameter object.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id ID of the parameter object.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        public PipelineDefinitionParameterObjectArgs build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            return $;
        }
    }

}
