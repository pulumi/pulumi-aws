// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3tables.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TableMetadataIcebergSchemaField {
    /**
     * @return The name of the field.
     * 
     */
    private String name;
    /**
     * @return A Boolean value that specifies whether values are required for each row in this field. Defaults to `false`.
     * 
     */
    private @Nullable Boolean required;
    /**
     * @return The field type. S3 Tables supports all Apache Iceberg primitive types including: `boolean`, `int`, `long`, `float`, `double`, `decimal(precision,scale)`, `date`, `time`, `timestamp`, `timestamptz`, `string`, `uuid`, `fixed(length)`, `binary`.
     * 
     */
    private String type;

    private TableMetadataIcebergSchemaField() {}
    /**
     * @return The name of the field.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A Boolean value that specifies whether values are required for each row in this field. Defaults to `false`.
     * 
     */
    public Optional<Boolean> required() {
        return Optional.ofNullable(this.required);
    }
    /**
     * @return The field type. S3 Tables supports all Apache Iceberg primitive types including: `boolean`, `int`, `long`, `float`, `double`, `decimal(precision,scale)`, `date`, `time`, `timestamp`, `timestamptz`, `string`, `uuid`, `fixed(length)`, `binary`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TableMetadataIcebergSchemaField defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String name;
        private @Nullable Boolean required;
        private String type;
        public Builder() {}
        public Builder(TableMetadataIcebergSchemaField defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.required = defaults.required;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("TableMetadataIcebergSchemaField", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder required(@Nullable Boolean required) {

            this.required = required;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("TableMetadataIcebergSchemaField", "type");
            }
            this.type = type;
            return this;
        }
        public TableMetadataIcebergSchemaField build() {
            final var _resultValue = new TableMetadataIcebergSchemaField();
            _resultValue.name = name;
            _resultValue.required = required;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
