// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.athena.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PreparedStatementState extends com.pulumi.resources.ResourceArgs {

    public static final PreparedStatementState Empty = new PreparedStatementState();

    /**
     * Brief explanation of prepared statement. Maximum length of 1024.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Brief explanation of prepared statement. Maximum length of 1024.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The name of the prepared statement. Maximum length of 256.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the prepared statement. Maximum length of 256.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The query string for the prepared statement.
     * 
     */
    @Import(name="queryStatement")
    private @Nullable Output<String> queryStatement;

    /**
     * @return The query string for the prepared statement.
     * 
     */
    public Optional<Output<String>> queryStatement() {
        return Optional.ofNullable(this.queryStatement);
    }

    /**
     * The name of the workgroup to which the prepared statement belongs.
     * 
     */
    @Import(name="workgroup")
    private @Nullable Output<String> workgroup;

    /**
     * @return The name of the workgroup to which the prepared statement belongs.
     * 
     */
    public Optional<Output<String>> workgroup() {
        return Optional.ofNullable(this.workgroup);
    }

    private PreparedStatementState() {}

    private PreparedStatementState(PreparedStatementState $) {
        this.description = $.description;
        this.name = $.name;
        this.queryStatement = $.queryStatement;
        this.workgroup = $.workgroup;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PreparedStatementState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PreparedStatementState $;

        public Builder() {
            $ = new PreparedStatementState();
        }

        public Builder(PreparedStatementState defaults) {
            $ = new PreparedStatementState(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Brief explanation of prepared statement. Maximum length of 1024.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Brief explanation of prepared statement. Maximum length of 1024.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name The name of the prepared statement. Maximum length of 256.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the prepared statement. Maximum length of 256.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param queryStatement The query string for the prepared statement.
         * 
         * @return builder
         * 
         */
        public Builder queryStatement(@Nullable Output<String> queryStatement) {
            $.queryStatement = queryStatement;
            return this;
        }

        /**
         * @param queryStatement The query string for the prepared statement.
         * 
         * @return builder
         * 
         */
        public Builder queryStatement(String queryStatement) {
            return queryStatement(Output.of(queryStatement));
        }

        /**
         * @param workgroup The name of the workgroup to which the prepared statement belongs.
         * 
         * @return builder
         * 
         */
        public Builder workgroup(@Nullable Output<String> workgroup) {
            $.workgroup = workgroup;
            return this;
        }

        /**
         * @param workgroup The name of the workgroup to which the prepared statement belongs.
         * 
         * @return builder
         * 
         */
        public Builder workgroup(String workgroup) {
            return workgroup(Output.of(workgroup));
        }

        public PreparedStatementState build() {
            return $;
        }
    }

}
