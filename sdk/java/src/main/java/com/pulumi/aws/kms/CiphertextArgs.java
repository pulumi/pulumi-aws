// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kms;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CiphertextArgs extends com.pulumi.resources.ResourceArgs {

    public static final CiphertextArgs Empty = new CiphertextArgs();

    @Import(name="context")
    private @Nullable Output<Map<String,String>> context;

    public Optional<Output<Map<String,String>>> context() {
        return Optional.ofNullable(this.context);
    }

    @Import(name="keyId", required=true)
    private Output<String> keyId;

    public Output<String> keyId() {
        return this.keyId;
    }

    @Import(name="plaintext", required=true)
    private Output<String> plaintext;

    public Output<String> plaintext() {
        return this.plaintext;
    }

    private CiphertextArgs() {}

    private CiphertextArgs(CiphertextArgs $) {
        this.context = $.context;
        this.keyId = $.keyId;
        this.plaintext = $.plaintext;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CiphertextArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CiphertextArgs $;

        public Builder() {
            $ = new CiphertextArgs();
        }

        public Builder(CiphertextArgs defaults) {
            $ = new CiphertextArgs(Objects.requireNonNull(defaults));
        }

        public Builder context(@Nullable Output<Map<String,String>> context) {
            $.context = context;
            return this;
        }

        public Builder context(Map<String,String> context) {
            return context(Output.of(context));
        }

        public Builder keyId(Output<String> keyId) {
            $.keyId = keyId;
            return this;
        }

        public Builder keyId(String keyId) {
            return keyId(Output.of(keyId));
        }

        public Builder plaintext(Output<String> plaintext) {
            $.plaintext = plaintext;
            return this;
        }

        public Builder plaintext(String plaintext) {
            return plaintext(Output.of(plaintext));
        }

        public CiphertextArgs build() {
            $.keyId = Objects.requireNonNull($.keyId, "expected parameter 'keyId' to be non-null");
            $.plaintext = Objects.requireNonNull($.plaintext, "expected parameter 'plaintext' to be non-null");
            return $;
        }
    }

}
