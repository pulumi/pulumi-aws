// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elasticache;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.elasticache.ReservedCacheNodeArgs;
import com.pulumi.aws.elasticache.inputs.ReservedCacheNodeState;
import com.pulumi.aws.elasticache.outputs.ReservedCacheNodeRecurringCharge;
import com.pulumi.aws.elasticache.outputs.ReservedCacheNodeTimeouts;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages an ElastiCache Reserved Cache Node.
 * 
 * &gt; **NOTE:** Once created, a reservation is valid for the `duration` of the provided `offering_id` and cannot be deleted. Performing a `destroy` will only remove the resource from state. For more information see [ElastiCache Reserved Nodes Documentation](https://aws.amazon.com/elasticache/reserved-cache-nodes/) and [PurchaseReservedCacheNodesOffering](https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_PurchaseReservedCacheNodesOffering.html).
 * 
 * &gt; **NOTE:** Due to the expense of testing this resource, we provide it as best effort. If you find it useful, and have the ability to help test or notice issues, consider reaching out to us on GitHub.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Using `pulumi import`, import ElastiCache Reserved Cache Node using the `id`. For example:
 * 
 * ```sh
 * $ pulumi import aws:elasticache/reservedCacheNode:ReservedCacheNode example CustomReservationID
 * ```
 * 
 */
@ResourceType(type="aws:elasticache/reservedCacheNode:ReservedCacheNode")
public class ReservedCacheNode extends com.pulumi.resources.CustomResource {
    /**
     * ARN for the reserved cache node.
     * 
     */
    @Export(name="arn", refs={String.class}, tree="[0]")
    private Output<String> arn;

    /**
     * @return ARN for the reserved cache node.
     * 
     */
    public Output<String> arn() {
        return this.arn;
    }
    @Export(name="cacheNodeCount", refs={Double.class}, tree="[0]")
    private Output<Double> cacheNodeCount;

    public Output<Double> cacheNodeCount() {
        return this.cacheNodeCount;
    }
    /**
     * Node type for the reserved cache nodes.
     * 
     */
    @Export(name="cacheNodeType", refs={String.class}, tree="[0]")
    private Output<String> cacheNodeType;

    /**
     * @return Node type for the reserved cache nodes.
     * 
     */
    public Output<String> cacheNodeType() {
        return this.cacheNodeType;
    }
    /**
     * Duration of the reservation as an RFC3339 duration.
     * 
     */
    @Export(name="duration", refs={String.class}, tree="[0]")
    private Output<String> duration;

    /**
     * @return Duration of the reservation as an RFC3339 duration.
     * 
     */
    public Output<String> duration() {
        return this.duration;
    }
    /**
     * Fixed price charged for this reserved cache node.
     * 
     */
    @Export(name="fixedPrice", refs={Double.class}, tree="[0]")
    private Output<Double> fixedPrice;

    /**
     * @return Fixed price charged for this reserved cache node.
     * 
     */
    public Output<Double> fixedPrice() {
        return this.fixedPrice;
    }
    /**
     * Offering type of this reserved cache node.
     * 
     */
    @Export(name="offeringType", refs={String.class}, tree="[0]")
    private Output<String> offeringType;

    /**
     * @return Offering type of this reserved cache node.
     * 
     */
    public Output<String> offeringType() {
        return this.offeringType;
    }
    /**
     * Engine type for the reserved cache node.
     * 
     */
    @Export(name="productDescription", refs={String.class}, tree="[0]")
    private Output<String> productDescription;

    /**
     * @return Engine type for the reserved cache node.
     * 
     */
    public Output<String> productDescription() {
        return this.productDescription;
    }
    /**
     * Recurring price charged to run this reserved cache node.
     * 
     */
    @Export(name="recurringCharges", refs={List.class,ReservedCacheNodeRecurringCharge.class}, tree="[0,1]")
    private Output<List<ReservedCacheNodeRecurringCharge>> recurringCharges;

    /**
     * @return Recurring price charged to run this reserved cache node.
     * 
     */
    public Output<List<ReservedCacheNodeRecurringCharge>> recurringCharges() {
        return this.recurringCharges;
    }
    /**
     * ID of the reserved cache node offering to purchase.
     * To determine an `reserved_cache_nodes_offering_id`, see the `aws.elasticache.getReservedCacheNodeOffering` data source.
     * 
     * The following arguments are optional:
     * 
     */
    @Export(name="reservedCacheNodesOfferingId", refs={String.class}, tree="[0]")
    private Output<String> reservedCacheNodesOfferingId;

    /**
     * @return ID of the reserved cache node offering to purchase.
     * To determine an `reserved_cache_nodes_offering_id`, see the `aws.elasticache.getReservedCacheNodeOffering` data source.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<String> reservedCacheNodesOfferingId() {
        return this.reservedCacheNodesOfferingId;
    }
    /**
     * Time the reservation started.
     * 
     */
    @Export(name="startTime", refs={String.class}, tree="[0]")
    private Output<String> startTime;

    /**
     * @return Time the reservation started.
     * 
     */
    public Output<String> startTime() {
        return this.startTime;
    }
    /**
     * State of the reserved cache node.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return State of the reserved cache node.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * Map of tags to assign to the reservation. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Map of tags to assign to the reservation. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Export(name="tagsAll", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> tagsAll;

    /**
     * @return Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll;
    }
    @Export(name="timeouts", refs={ReservedCacheNodeTimeouts.class}, tree="[0]")
    private Output</* @Nullable */ ReservedCacheNodeTimeouts> timeouts;

    public Output<Optional<ReservedCacheNodeTimeouts>> timeouts() {
        return Codegen.optional(this.timeouts);
    }
    /**
     * Hourly price charged for this reserved cache node.
     * 
     */
    @Export(name="usagePrice", refs={Double.class}, tree="[0]")
    private Output<Double> usagePrice;

    /**
     * @return Hourly price charged for this reserved cache node.
     * 
     */
    public Output<Double> usagePrice() {
        return this.usagePrice;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ReservedCacheNode(java.lang.String name) {
        this(name, ReservedCacheNodeArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ReservedCacheNode(java.lang.String name, ReservedCacheNodeArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ReservedCacheNode(java.lang.String name, ReservedCacheNodeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:elasticache/reservedCacheNode:ReservedCacheNode", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ReservedCacheNode(java.lang.String name, Output<java.lang.String> id, @Nullable ReservedCacheNodeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:elasticache/reservedCacheNode:ReservedCacheNode", name, state, makeResourceOptions(options, id), false);
    }

    private static ReservedCacheNodeArgs makeArgs(ReservedCacheNodeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ReservedCacheNodeArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ReservedCacheNode get(java.lang.String name, Output<java.lang.String> id, @Nullable ReservedCacheNodeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ReservedCacheNode(name, id, state, options);
    }
}
