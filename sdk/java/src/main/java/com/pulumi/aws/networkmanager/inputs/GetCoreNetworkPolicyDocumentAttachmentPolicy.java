// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.networkmanager.inputs;

import com.pulumi.aws.networkmanager.inputs.GetCoreNetworkPolicyDocumentAttachmentPolicyAction;
import com.pulumi.aws.networkmanager.inputs.GetCoreNetworkPolicyDocumentAttachmentPolicyCondition;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCoreNetworkPolicyDocumentAttachmentPolicy extends com.pulumi.resources.InvokeArgs {

    public static final GetCoreNetworkPolicyDocumentAttachmentPolicy Empty = new GetCoreNetworkPolicyDocumentAttachmentPolicy();

    @Import(name="action", required=true)
    private GetCoreNetworkPolicyDocumentAttachmentPolicyAction action;

    public GetCoreNetworkPolicyDocumentAttachmentPolicyAction action() {
        return this.action;
    }

    @Import(name="conditionLogic")
    private @Nullable String conditionLogic;

    public Optional<String> conditionLogic() {
        return Optional.ofNullable(this.conditionLogic);
    }

    @Import(name="conditions", required=true)
    private List<GetCoreNetworkPolicyDocumentAttachmentPolicyCondition> conditions;

    public List<GetCoreNetworkPolicyDocumentAttachmentPolicyCondition> conditions() {
        return this.conditions;
    }

    @Import(name="description")
    private @Nullable String description;

    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="ruleNumber", required=true)
    private Integer ruleNumber;

    public Integer ruleNumber() {
        return this.ruleNumber;
    }

    private GetCoreNetworkPolicyDocumentAttachmentPolicy() {}

    private GetCoreNetworkPolicyDocumentAttachmentPolicy(GetCoreNetworkPolicyDocumentAttachmentPolicy $) {
        this.action = $.action;
        this.conditionLogic = $.conditionLogic;
        this.conditions = $.conditions;
        this.description = $.description;
        this.ruleNumber = $.ruleNumber;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCoreNetworkPolicyDocumentAttachmentPolicy defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCoreNetworkPolicyDocumentAttachmentPolicy $;

        public Builder() {
            $ = new GetCoreNetworkPolicyDocumentAttachmentPolicy();
        }

        public Builder(GetCoreNetworkPolicyDocumentAttachmentPolicy defaults) {
            $ = new GetCoreNetworkPolicyDocumentAttachmentPolicy(Objects.requireNonNull(defaults));
        }

        public Builder action(GetCoreNetworkPolicyDocumentAttachmentPolicyAction action) {
            $.action = action;
            return this;
        }

        public Builder conditionLogic(@Nullable String conditionLogic) {
            $.conditionLogic = conditionLogic;
            return this;
        }

        public Builder conditions(List<GetCoreNetworkPolicyDocumentAttachmentPolicyCondition> conditions) {
            $.conditions = conditions;
            return this;
        }

        public Builder conditions(GetCoreNetworkPolicyDocumentAttachmentPolicyCondition... conditions) {
            return conditions(List.of(conditions));
        }

        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        public Builder ruleNumber(Integer ruleNumber) {
            $.ruleNumber = ruleNumber;
            return this;
        }

        public GetCoreNetworkPolicyDocumentAttachmentPolicy build() {
            $.action = Objects.requireNonNull($.action, "expected parameter 'action' to be non-null");
            $.conditions = Objects.requireNonNull($.conditions, "expected parameter 'conditions' to be non-null");
            $.ruleNumber = Objects.requireNonNull($.ruleNumber, "expected parameter 'ruleNumber' to be non-null");
            return $;
        }
    }

}
