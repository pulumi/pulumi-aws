// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class DataSourceParametersSqlServer {
    /**
     * @return The database to which to connect.
     * 
     */
    private String database;
    /**
     * @return The host to which to connect.
     * 
     */
    private String host;
    /**
     * @return The warehouse to which to connect.
     * 
     */
    private Integer port;

    private DataSourceParametersSqlServer() {}
    /**
     * @return The database to which to connect.
     * 
     */
    public String database() {
        return this.database;
    }
    /**
     * @return The host to which to connect.
     * 
     */
    public String host() {
        return this.host;
    }
    /**
     * @return The warehouse to which to connect.
     * 
     */
    public Integer port() {
        return this.port;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataSourceParametersSqlServer defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String database;
        private String host;
        private Integer port;
        public Builder() {}
        public Builder(DataSourceParametersSqlServer defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.database = defaults.database;
    	      this.host = defaults.host;
    	      this.port = defaults.port;
        }

        @CustomType.Setter
        public Builder database(String database) {
            if (database == null) {
              throw new MissingRequiredPropertyException("DataSourceParametersSqlServer", "database");
            }
            this.database = database;
            return this;
        }
        @CustomType.Setter
        public Builder host(String host) {
            if (host == null) {
              throw new MissingRequiredPropertyException("DataSourceParametersSqlServer", "host");
            }
            this.host = host;
            return this;
        }
        @CustomType.Setter
        public Builder port(Integer port) {
            if (port == null) {
              throw new MissingRequiredPropertyException("DataSourceParametersSqlServer", "port");
            }
            this.port = port;
            return this;
        }
        public DataSourceParametersSqlServer build() {
            final var _resultValue = new DataSourceParametersSqlServer();
            _resultValue.database = database;
            _resultValue.host = host;
            _resultValue.port = port;
            return _resultValue;
        }
    }
}
