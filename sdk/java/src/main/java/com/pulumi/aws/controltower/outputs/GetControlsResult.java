// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.controltower.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetControlsResult {
    /**
     * @return List of all the ARNs for the controls applied to the `target_identifier`.
     * 
     */
    private List<String> enabledControls;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String targetIdentifier;

    private GetControlsResult() {}
    /**
     * @return List of all the ARNs for the controls applied to the `target_identifier`.
     * 
     */
    public List<String> enabledControls() {
        return this.enabledControls;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String targetIdentifier() {
        return this.targetIdentifier;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetControlsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> enabledControls;
        private String id;
        private String targetIdentifier;
        public Builder() {}
        public Builder(GetControlsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabledControls = defaults.enabledControls;
    	      this.id = defaults.id;
    	      this.targetIdentifier = defaults.targetIdentifier;
        }

        @CustomType.Setter
        public Builder enabledControls(List<String> enabledControls) {
            this.enabledControls = Objects.requireNonNull(enabledControls);
            return this;
        }
        public Builder enabledControls(String... enabledControls) {
            return enabledControls(List.of(enabledControls));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder targetIdentifier(String targetIdentifier) {
            this.targetIdentifier = Objects.requireNonNull(targetIdentifier);
            return this;
        }
        public GetControlsResult build() {
            final var o = new GetControlsResult();
            o.enabledControls = enabledControls;
            o.id = id;
            o.targetIdentifier = targetIdentifier;
            return o;
        }
    }
}
