// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.inputs;

import com.pulumi.aws.appmesh.inputs.VirtualNodeSpecListenerConnectionPoolGrpcArgs;
import com.pulumi.aws.appmesh.inputs.VirtualNodeSpecListenerConnectionPoolHttp2Args;
import com.pulumi.aws.appmesh.inputs.VirtualNodeSpecListenerConnectionPoolHttpArgs;
import com.pulumi.aws.appmesh.inputs.VirtualNodeSpecListenerConnectionPoolTcpArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VirtualNodeSpecListenerConnectionPoolArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualNodeSpecListenerConnectionPoolArgs Empty = new VirtualNodeSpecListenerConnectionPoolArgs();

    /**
     * Connection pool information for gRPC listeners.
     * 
     */
    @Import(name="grpc")
    private @Nullable Output<VirtualNodeSpecListenerConnectionPoolGrpcArgs> grpc;

    /**
     * @return Connection pool information for gRPC listeners.
     * 
     */
    public Optional<Output<VirtualNodeSpecListenerConnectionPoolGrpcArgs>> grpc() {
        return Optional.ofNullable(this.grpc);
    }

    /**
     * Connection pool information for HTTP listeners.
     * 
     */
    @Import(name="http")
    private @Nullable Output<VirtualNodeSpecListenerConnectionPoolHttpArgs> http;

    /**
     * @return Connection pool information for HTTP listeners.
     * 
     */
    public Optional<Output<VirtualNodeSpecListenerConnectionPoolHttpArgs>> http() {
        return Optional.ofNullable(this.http);
    }

    /**
     * Connection pool information for HTTP2 listeners.
     * 
     */
    @Import(name="http2")
    private @Nullable Output<VirtualNodeSpecListenerConnectionPoolHttp2Args> http2;

    /**
     * @return Connection pool information for HTTP2 listeners.
     * 
     */
    public Optional<Output<VirtualNodeSpecListenerConnectionPoolHttp2Args>> http2() {
        return Optional.ofNullable(this.http2);
    }

    /**
     * Connection pool information for TCP listeners.
     * 
     */
    @Import(name="tcp")
    private @Nullable Output<VirtualNodeSpecListenerConnectionPoolTcpArgs> tcp;

    /**
     * @return Connection pool information for TCP listeners.
     * 
     */
    public Optional<Output<VirtualNodeSpecListenerConnectionPoolTcpArgs>> tcp() {
        return Optional.ofNullable(this.tcp);
    }

    private VirtualNodeSpecListenerConnectionPoolArgs() {}

    private VirtualNodeSpecListenerConnectionPoolArgs(VirtualNodeSpecListenerConnectionPoolArgs $) {
        this.grpc = $.grpc;
        this.http = $.http;
        this.http2 = $.http2;
        this.tcp = $.tcp;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualNodeSpecListenerConnectionPoolArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualNodeSpecListenerConnectionPoolArgs $;

        public Builder() {
            $ = new VirtualNodeSpecListenerConnectionPoolArgs();
        }

        public Builder(VirtualNodeSpecListenerConnectionPoolArgs defaults) {
            $ = new VirtualNodeSpecListenerConnectionPoolArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param grpc Connection pool information for gRPC listeners.
         * 
         * @return builder
         * 
         */
        public Builder grpc(@Nullable Output<VirtualNodeSpecListenerConnectionPoolGrpcArgs> grpc) {
            $.grpc = grpc;
            return this;
        }

        /**
         * @param grpc Connection pool information for gRPC listeners.
         * 
         * @return builder
         * 
         */
        public Builder grpc(VirtualNodeSpecListenerConnectionPoolGrpcArgs grpc) {
            return grpc(Output.of(grpc));
        }

        /**
         * @param http Connection pool information for HTTP listeners.
         * 
         * @return builder
         * 
         */
        public Builder http(@Nullable Output<VirtualNodeSpecListenerConnectionPoolHttpArgs> http) {
            $.http = http;
            return this;
        }

        /**
         * @param http Connection pool information for HTTP listeners.
         * 
         * @return builder
         * 
         */
        public Builder http(VirtualNodeSpecListenerConnectionPoolHttpArgs http) {
            return http(Output.of(http));
        }

        /**
         * @param http2 Connection pool information for HTTP2 listeners.
         * 
         * @return builder
         * 
         */
        public Builder http2(@Nullable Output<VirtualNodeSpecListenerConnectionPoolHttp2Args> http2) {
            $.http2 = http2;
            return this;
        }

        /**
         * @param http2 Connection pool information for HTTP2 listeners.
         * 
         * @return builder
         * 
         */
        public Builder http2(VirtualNodeSpecListenerConnectionPoolHttp2Args http2) {
            return http2(Output.of(http2));
        }

        /**
         * @param tcp Connection pool information for TCP listeners.
         * 
         * @return builder
         * 
         */
        public Builder tcp(@Nullable Output<VirtualNodeSpecListenerConnectionPoolTcpArgs> tcp) {
            $.tcp = tcp;
            return this;
        }

        /**
         * @param tcp Connection pool information for TCP listeners.
         * 
         * @return builder
         * 
         */
        public Builder tcp(VirtualNodeSpecListenerConnectionPoolTcpArgs tcp) {
            return tcp(Output.of(tcp));
        }

        public VirtualNodeSpecListenerConnectionPoolArgs build() {
            return $;
        }
    }

}
