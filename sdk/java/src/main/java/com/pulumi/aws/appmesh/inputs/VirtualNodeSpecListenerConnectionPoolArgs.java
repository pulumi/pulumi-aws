// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.inputs;

import com.pulumi.aws.appmesh.inputs.VirtualNodeSpecListenerConnectionPoolGrpcArgs;
import com.pulumi.aws.appmesh.inputs.VirtualNodeSpecListenerConnectionPoolHttp2Args;
import com.pulumi.aws.appmesh.inputs.VirtualNodeSpecListenerConnectionPoolHttpArgs;
import com.pulumi.aws.appmesh.inputs.VirtualNodeSpecListenerConnectionPoolTcpArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VirtualNodeSpecListenerConnectionPoolArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualNodeSpecListenerConnectionPoolArgs Empty = new VirtualNodeSpecListenerConnectionPoolArgs();

    /**
     * Connection pool information for gRPC listeners.
     * 
     */
    @Import(name="grpc")
    private @Nullable Output<VirtualNodeSpecListenerConnectionPoolGrpcArgs> grpc;

    /**
     * @return Connection pool information for gRPC listeners.
     * 
     */
    public Optional<Output<VirtualNodeSpecListenerConnectionPoolGrpcArgs>> grpc() {
        return Optional.ofNullable(this.grpc);
    }

    /**
     * Connection pool information for HTTP2 listeners.
     * 
     */
    @Import(name="http2s")
    private @Nullable Output<List<VirtualNodeSpecListenerConnectionPoolHttp2Args>> http2s;

    /**
     * @return Connection pool information for HTTP2 listeners.
     * 
     */
    public Optional<Output<List<VirtualNodeSpecListenerConnectionPoolHttp2Args>>> http2s() {
        return Optional.ofNullable(this.http2s);
    }

    /**
     * Connection pool information for HTTP listeners.
     * 
     */
    @Import(name="https")
    private @Nullable Output<List<VirtualNodeSpecListenerConnectionPoolHttpArgs>> https;

    /**
     * @return Connection pool information for HTTP listeners.
     * 
     */
    public Optional<Output<List<VirtualNodeSpecListenerConnectionPoolHttpArgs>>> https() {
        return Optional.ofNullable(this.https);
    }

    /**
     * Connection pool information for TCP listeners.
     * 
     */
    @Import(name="tcps")
    private @Nullable Output<List<VirtualNodeSpecListenerConnectionPoolTcpArgs>> tcps;

    /**
     * @return Connection pool information for TCP listeners.
     * 
     */
    public Optional<Output<List<VirtualNodeSpecListenerConnectionPoolTcpArgs>>> tcps() {
        return Optional.ofNullable(this.tcps);
    }

    private VirtualNodeSpecListenerConnectionPoolArgs() {}

    private VirtualNodeSpecListenerConnectionPoolArgs(VirtualNodeSpecListenerConnectionPoolArgs $) {
        this.grpc = $.grpc;
        this.http2s = $.http2s;
        this.https = $.https;
        this.tcps = $.tcps;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualNodeSpecListenerConnectionPoolArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualNodeSpecListenerConnectionPoolArgs $;

        public Builder() {
            $ = new VirtualNodeSpecListenerConnectionPoolArgs();
        }

        public Builder(VirtualNodeSpecListenerConnectionPoolArgs defaults) {
            $ = new VirtualNodeSpecListenerConnectionPoolArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param grpc Connection pool information for gRPC listeners.
         * 
         * @return builder
         * 
         */
        public Builder grpc(@Nullable Output<VirtualNodeSpecListenerConnectionPoolGrpcArgs> grpc) {
            $.grpc = grpc;
            return this;
        }

        /**
         * @param grpc Connection pool information for gRPC listeners.
         * 
         * @return builder
         * 
         */
        public Builder grpc(VirtualNodeSpecListenerConnectionPoolGrpcArgs grpc) {
            return grpc(Output.of(grpc));
        }

        /**
         * @param http2s Connection pool information for HTTP2 listeners.
         * 
         * @return builder
         * 
         */
        public Builder http2s(@Nullable Output<List<VirtualNodeSpecListenerConnectionPoolHttp2Args>> http2s) {
            $.http2s = http2s;
            return this;
        }

        /**
         * @param http2s Connection pool information for HTTP2 listeners.
         * 
         * @return builder
         * 
         */
        public Builder http2s(List<VirtualNodeSpecListenerConnectionPoolHttp2Args> http2s) {
            return http2s(Output.of(http2s));
        }

        /**
         * @param http2s Connection pool information for HTTP2 listeners.
         * 
         * @return builder
         * 
         */
        public Builder http2s(VirtualNodeSpecListenerConnectionPoolHttp2Args... http2s) {
            return http2s(List.of(http2s));
        }

        /**
         * @param https Connection pool information for HTTP listeners.
         * 
         * @return builder
         * 
         */
        public Builder https(@Nullable Output<List<VirtualNodeSpecListenerConnectionPoolHttpArgs>> https) {
            $.https = https;
            return this;
        }

        /**
         * @param https Connection pool information for HTTP listeners.
         * 
         * @return builder
         * 
         */
        public Builder https(List<VirtualNodeSpecListenerConnectionPoolHttpArgs> https) {
            return https(Output.of(https));
        }

        /**
         * @param https Connection pool information for HTTP listeners.
         * 
         * @return builder
         * 
         */
        public Builder https(VirtualNodeSpecListenerConnectionPoolHttpArgs... https) {
            return https(List.of(https));
        }

        /**
         * @param tcps Connection pool information for TCP listeners.
         * 
         * @return builder
         * 
         */
        public Builder tcps(@Nullable Output<List<VirtualNodeSpecListenerConnectionPoolTcpArgs>> tcps) {
            $.tcps = tcps;
            return this;
        }

        /**
         * @param tcps Connection pool information for TCP listeners.
         * 
         * @return builder
         * 
         */
        public Builder tcps(List<VirtualNodeSpecListenerConnectionPoolTcpArgs> tcps) {
            return tcps(Output.of(tcps));
        }

        /**
         * @param tcps Connection pool information for TCP listeners.
         * 
         * @return builder
         * 
         */
        public Builder tcps(VirtualNodeSpecListenerConnectionPoolTcpArgs... tcps) {
            return tcps(List.of(tcps));
        }

        public VirtualNodeSpecListenerConnectionPoolArgs build() {
            return $;
        }
    }

}
