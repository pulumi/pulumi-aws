// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.controltower.inputs;

import com.pulumi.aws.controltower.inputs.LandingZoneDriftStatusArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LandingZoneState extends com.pulumi.resources.ResourceArgs {

    public static final LandingZoneState Empty = new LandingZoneState();

    /**
     * The ARN of the landing zone.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return The ARN of the landing zone.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * The drift status summary of the landing zone.
     * 
     */
    @Import(name="driftStatuses")
    private @Nullable Output<List<LandingZoneDriftStatusArgs>> driftStatuses;

    /**
     * @return The drift status summary of the landing zone.
     * 
     */
    public Optional<Output<List<LandingZoneDriftStatusArgs>>> driftStatuses() {
        return Optional.ofNullable(this.driftStatuses);
    }

    /**
     * The latest available version of the landing zone.
     * 
     */
    @Import(name="latestAvailableVersion")
    private @Nullable Output<String> latestAvailableVersion;

    /**
     * @return The latest available version of the landing zone.
     * 
     */
    public Optional<Output<String>> latestAvailableVersion() {
        return Optional.ofNullable(this.latestAvailableVersion);
    }

    /**
     * The manifest JSON file is a text file that describes your AWS resources. For examples, review [Launch your landing zone](https://docs.aws.amazon.com/controltower/latest/userguide/lz-api-launch).
     * 
     */
    @Import(name="manifestJson")
    private @Nullable Output<String> manifestJson;

    /**
     * @return The manifest JSON file is a text file that describes your AWS resources. For examples, review [Launch your landing zone](https://docs.aws.amazon.com/controltower/latest/userguide/lz-api-launch).
     * 
     */
    public Optional<Output<String>> manifestJson() {
        return Optional.ofNullable(this.manifestJson);
    }

    /**
     * Tags to apply to the landing zone. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Tags to apply to the landing zone. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A map of tags assigned to the landing zone, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the landing zone, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    /**
     * The landing zone version.
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return The landing zone version.
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private LandingZoneState() {}

    private LandingZoneState(LandingZoneState $) {
        this.arn = $.arn;
        this.driftStatuses = $.driftStatuses;
        this.latestAvailableVersion = $.latestAvailableVersion;
        this.manifestJson = $.manifestJson;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LandingZoneState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LandingZoneState $;

        public Builder() {
            $ = new LandingZoneState();
        }

        public Builder(LandingZoneState defaults) {
            $ = new LandingZoneState(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn The ARN of the landing zone.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn The ARN of the landing zone.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param driftStatuses The drift status summary of the landing zone.
         * 
         * @return builder
         * 
         */
        public Builder driftStatuses(@Nullable Output<List<LandingZoneDriftStatusArgs>> driftStatuses) {
            $.driftStatuses = driftStatuses;
            return this;
        }

        /**
         * @param driftStatuses The drift status summary of the landing zone.
         * 
         * @return builder
         * 
         */
        public Builder driftStatuses(List<LandingZoneDriftStatusArgs> driftStatuses) {
            return driftStatuses(Output.of(driftStatuses));
        }

        /**
         * @param driftStatuses The drift status summary of the landing zone.
         * 
         * @return builder
         * 
         */
        public Builder driftStatuses(LandingZoneDriftStatusArgs... driftStatuses) {
            return driftStatuses(List.of(driftStatuses));
        }

        /**
         * @param latestAvailableVersion The latest available version of the landing zone.
         * 
         * @return builder
         * 
         */
        public Builder latestAvailableVersion(@Nullable Output<String> latestAvailableVersion) {
            $.latestAvailableVersion = latestAvailableVersion;
            return this;
        }

        /**
         * @param latestAvailableVersion The latest available version of the landing zone.
         * 
         * @return builder
         * 
         */
        public Builder latestAvailableVersion(String latestAvailableVersion) {
            return latestAvailableVersion(Output.of(latestAvailableVersion));
        }

        /**
         * @param manifestJson The manifest JSON file is a text file that describes your AWS resources. For examples, review [Launch your landing zone](https://docs.aws.amazon.com/controltower/latest/userguide/lz-api-launch).
         * 
         * @return builder
         * 
         */
        public Builder manifestJson(@Nullable Output<String> manifestJson) {
            $.manifestJson = manifestJson;
            return this;
        }

        /**
         * @param manifestJson The manifest JSON file is a text file that describes your AWS resources. For examples, review [Launch your landing zone](https://docs.aws.amazon.com/controltower/latest/userguide/lz-api-launch).
         * 
         * @return builder
         * 
         */
        public Builder manifestJson(String manifestJson) {
            return manifestJson(Output.of(manifestJson));
        }

        /**
         * @param tags Tags to apply to the landing zone. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Tags to apply to the landing zone. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tagsAll A map of tags assigned to the landing zone, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @param tagsAll A map of tags assigned to the landing zone, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        /**
         * @param version The landing zone version.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The landing zone version.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public LandingZoneState build() {
            return $;
        }
    }

}
