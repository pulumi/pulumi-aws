// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.route53;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CidrLocationArgs extends com.pulumi.resources.ResourceArgs {

    public static final CidrLocationArgs Empty = new CidrLocationArgs();

    /**
     * CIDR blocks for the location.
     * 
     */
    @Import(name="cidrBlocks", required=true)
    private Output<List<String>> cidrBlocks;

    /**
     * @return CIDR blocks for the location.
     * 
     */
    public Output<List<String>> cidrBlocks() {
        return this.cidrBlocks;
    }

    /**
     * The ID of the CIDR collection to update.
     * 
     */
    @Import(name="cidrCollectionId", required=true)
    private Output<String> cidrCollectionId;

    /**
     * @return The ID of the CIDR collection to update.
     * 
     */
    public Output<String> cidrCollectionId() {
        return this.cidrCollectionId;
    }

    /**
     * Name for the CIDR location.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name for the CIDR location.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private CidrLocationArgs() {}

    private CidrLocationArgs(CidrLocationArgs $) {
        this.cidrBlocks = $.cidrBlocks;
        this.cidrCollectionId = $.cidrCollectionId;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CidrLocationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CidrLocationArgs $;

        public Builder() {
            $ = new CidrLocationArgs();
        }

        public Builder(CidrLocationArgs defaults) {
            $ = new CidrLocationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cidrBlocks CIDR blocks for the location.
         * 
         * @return builder
         * 
         */
        public Builder cidrBlocks(Output<List<String>> cidrBlocks) {
            $.cidrBlocks = cidrBlocks;
            return this;
        }

        /**
         * @param cidrBlocks CIDR blocks for the location.
         * 
         * @return builder
         * 
         */
        public Builder cidrBlocks(List<String> cidrBlocks) {
            return cidrBlocks(Output.of(cidrBlocks));
        }

        /**
         * @param cidrBlocks CIDR blocks for the location.
         * 
         * @return builder
         * 
         */
        public Builder cidrBlocks(String... cidrBlocks) {
            return cidrBlocks(List.of(cidrBlocks));
        }

        /**
         * @param cidrCollectionId The ID of the CIDR collection to update.
         * 
         * @return builder
         * 
         */
        public Builder cidrCollectionId(Output<String> cidrCollectionId) {
            $.cidrCollectionId = cidrCollectionId;
            return this;
        }

        /**
         * @param cidrCollectionId The ID of the CIDR collection to update.
         * 
         * @return builder
         * 
         */
        public Builder cidrCollectionId(String cidrCollectionId) {
            return cidrCollectionId(Output.of(cidrCollectionId));
        }

        /**
         * @param name Name for the CIDR location.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name for the CIDR location.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public CidrLocationArgs build() {
            $.cidrBlocks = Objects.requireNonNull($.cidrBlocks, "expected parameter 'cidrBlocks' to be non-null");
            $.cidrCollectionId = Objects.requireNonNull($.cidrCollectionId, "expected parameter 'cidrCollectionId' to be non-null");
            return $;
        }
    }

}
