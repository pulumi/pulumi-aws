// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.batch.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.Object;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetJobDefinitionNodeProperty {
    /**
     * @return Specifies the node index for the main node of a multi-node parallel job. This node index value must be fewer than the number of nodes.
     * 
     */
    private Integer mainNode;
    /**
     * @return A list of node ranges and their properties that are associated with a multi-node parallel job.
     * 
     */
    private List<Object> nodeRangeProperties;
    /**
     * @return The number of nodes that are associated with a multi-node parallel job.
     * 
     */
    private Integer numNodes;

    private GetJobDefinitionNodeProperty() {}
    /**
     * @return Specifies the node index for the main node of a multi-node parallel job. This node index value must be fewer than the number of nodes.
     * 
     */
    public Integer mainNode() {
        return this.mainNode;
    }
    /**
     * @return A list of node ranges and their properties that are associated with a multi-node parallel job.
     * 
     */
    public List<Object> nodeRangeProperties() {
        return this.nodeRangeProperties;
    }
    /**
     * @return The number of nodes that are associated with a multi-node parallel job.
     * 
     */
    public Integer numNodes() {
        return this.numNodes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJobDefinitionNodeProperty defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer mainNode;
        private List<Object> nodeRangeProperties;
        private Integer numNodes;
        public Builder() {}
        public Builder(GetJobDefinitionNodeProperty defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.mainNode = defaults.mainNode;
    	      this.nodeRangeProperties = defaults.nodeRangeProperties;
    	      this.numNodes = defaults.numNodes;
        }

        @CustomType.Setter
        public Builder mainNode(Integer mainNode) {
            if (mainNode == null) {
              throw new MissingRequiredPropertyException("GetJobDefinitionNodeProperty", "mainNode");
            }
            this.mainNode = mainNode;
            return this;
        }
        @CustomType.Setter
        public Builder nodeRangeProperties(List<Object> nodeRangeProperties) {
            if (nodeRangeProperties == null) {
              throw new MissingRequiredPropertyException("GetJobDefinitionNodeProperty", "nodeRangeProperties");
            }
            this.nodeRangeProperties = nodeRangeProperties;
            return this;
        }
        public Builder nodeRangeProperties(Object... nodeRangeProperties) {
            return nodeRangeProperties(List.of(nodeRangeProperties));
        }
        @CustomType.Setter
        public Builder numNodes(Integer numNodes) {
            if (numNodes == null) {
              throw new MissingRequiredPropertyException("GetJobDefinitionNodeProperty", "numNodes");
            }
            this.numNodes = numNodes;
            return this;
        }
        public GetJobDefinitionNodeProperty build() {
            final var _resultValue = new GetJobDefinitionNodeProperty();
            _resultValue.mainNode = mainNode;
            _resultValue.nodeRangeProperties = nodeRangeProperties;
            _resultValue.numNodes = numNodes;
            return _resultValue;
        }
    }
}
