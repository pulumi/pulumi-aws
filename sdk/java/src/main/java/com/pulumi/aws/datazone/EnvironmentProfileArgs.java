// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.datazone;

import com.pulumi.aws.datazone.inputs.EnvironmentProfileUserParameterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EnvironmentProfileArgs extends com.pulumi.resources.ResourceArgs {

    public static final EnvironmentProfileArgs Empty = new EnvironmentProfileArgs();

    /**
     * Id of the AWS account being used.
     * 
     */
    @Import(name="awsAccountId")
    private @Nullable Output<String> awsAccountId;

    /**
     * @return Id of the AWS account being used.
     * 
     */
    public Optional<Output<String>> awsAccountId() {
        return Optional.ofNullable(this.awsAccountId);
    }

    /**
     * Desired region for environment profile.
     * 
     */
    @Import(name="awsAccountRegion", required=true)
    private Output<String> awsAccountRegion;

    /**
     * @return Desired region for environment profile.
     * 
     */
    public Output<String> awsAccountRegion() {
        return this.awsAccountRegion;
    }

    /**
     * Description of environment profile.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of environment profile.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Domain Identifier for environment profile.
     * 
     */
    @Import(name="domainIdentifier", required=true)
    private Output<String> domainIdentifier;

    /**
     * @return Domain Identifier for environment profile.
     * 
     */
    public Output<String> domainIdentifier() {
        return this.domainIdentifier;
    }

    /**
     * ID of the blueprint which the environment will be created with.
     * 
     */
    @Import(name="environmentBlueprintIdentifier", required=true)
    private Output<String> environmentBlueprintIdentifier;

    /**
     * @return ID of the blueprint which the environment will be created with.
     * 
     */
    public Output<String> environmentBlueprintIdentifier() {
        return this.environmentBlueprintIdentifier;
    }

    /**
     * Name of the environment profile.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the environment profile.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Project identifier for environment profile.
     * 
     */
    @Import(name="projectIdentifier", required=true)
    private Output<String> projectIdentifier;

    /**
     * @return Project identifier for environment profile.
     * 
     */
    public Output<String> projectIdentifier() {
        return this.projectIdentifier;
    }

    /**
     * Array of user parameters of the environment profile with the following attributes:
     * 
     */
    @Import(name="userParameters")
    private @Nullable Output<List<EnvironmentProfileUserParameterArgs>> userParameters;

    /**
     * @return Array of user parameters of the environment profile with the following attributes:
     * 
     */
    public Optional<Output<List<EnvironmentProfileUserParameterArgs>>> userParameters() {
        return Optional.ofNullable(this.userParameters);
    }

    private EnvironmentProfileArgs() {}

    private EnvironmentProfileArgs(EnvironmentProfileArgs $) {
        this.awsAccountId = $.awsAccountId;
        this.awsAccountRegion = $.awsAccountRegion;
        this.description = $.description;
        this.domainIdentifier = $.domainIdentifier;
        this.environmentBlueprintIdentifier = $.environmentBlueprintIdentifier;
        this.name = $.name;
        this.projectIdentifier = $.projectIdentifier;
        this.userParameters = $.userParameters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnvironmentProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnvironmentProfileArgs $;

        public Builder() {
            $ = new EnvironmentProfileArgs();
        }

        public Builder(EnvironmentProfileArgs defaults) {
            $ = new EnvironmentProfileArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param awsAccountId Id of the AWS account being used.
         * 
         * @return builder
         * 
         */
        public Builder awsAccountId(@Nullable Output<String> awsAccountId) {
            $.awsAccountId = awsAccountId;
            return this;
        }

        /**
         * @param awsAccountId Id of the AWS account being used.
         * 
         * @return builder
         * 
         */
        public Builder awsAccountId(String awsAccountId) {
            return awsAccountId(Output.of(awsAccountId));
        }

        /**
         * @param awsAccountRegion Desired region for environment profile.
         * 
         * @return builder
         * 
         */
        public Builder awsAccountRegion(Output<String> awsAccountRegion) {
            $.awsAccountRegion = awsAccountRegion;
            return this;
        }

        /**
         * @param awsAccountRegion Desired region for environment profile.
         * 
         * @return builder
         * 
         */
        public Builder awsAccountRegion(String awsAccountRegion) {
            return awsAccountRegion(Output.of(awsAccountRegion));
        }

        /**
         * @param description Description of environment profile.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of environment profile.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param domainIdentifier Domain Identifier for environment profile.
         * 
         * @return builder
         * 
         */
        public Builder domainIdentifier(Output<String> domainIdentifier) {
            $.domainIdentifier = domainIdentifier;
            return this;
        }

        /**
         * @param domainIdentifier Domain Identifier for environment profile.
         * 
         * @return builder
         * 
         */
        public Builder domainIdentifier(String domainIdentifier) {
            return domainIdentifier(Output.of(domainIdentifier));
        }

        /**
         * @param environmentBlueprintIdentifier ID of the blueprint which the environment will be created with.
         * 
         * @return builder
         * 
         */
        public Builder environmentBlueprintIdentifier(Output<String> environmentBlueprintIdentifier) {
            $.environmentBlueprintIdentifier = environmentBlueprintIdentifier;
            return this;
        }

        /**
         * @param environmentBlueprintIdentifier ID of the blueprint which the environment will be created with.
         * 
         * @return builder
         * 
         */
        public Builder environmentBlueprintIdentifier(String environmentBlueprintIdentifier) {
            return environmentBlueprintIdentifier(Output.of(environmentBlueprintIdentifier));
        }

        /**
         * @param name Name of the environment profile.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the environment profile.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param projectIdentifier Project identifier for environment profile.
         * 
         * @return builder
         * 
         */
        public Builder projectIdentifier(Output<String> projectIdentifier) {
            $.projectIdentifier = projectIdentifier;
            return this;
        }

        /**
         * @param projectIdentifier Project identifier for environment profile.
         * 
         * @return builder
         * 
         */
        public Builder projectIdentifier(String projectIdentifier) {
            return projectIdentifier(Output.of(projectIdentifier));
        }

        /**
         * @param userParameters Array of user parameters of the environment profile with the following attributes:
         * 
         * @return builder
         * 
         */
        public Builder userParameters(@Nullable Output<List<EnvironmentProfileUserParameterArgs>> userParameters) {
            $.userParameters = userParameters;
            return this;
        }

        /**
         * @param userParameters Array of user parameters of the environment profile with the following attributes:
         * 
         * @return builder
         * 
         */
        public Builder userParameters(List<EnvironmentProfileUserParameterArgs> userParameters) {
            return userParameters(Output.of(userParameters));
        }

        /**
         * @param userParameters Array of user parameters of the environment profile with the following attributes:
         * 
         * @return builder
         * 
         */
        public Builder userParameters(EnvironmentProfileUserParameterArgs... userParameters) {
            return userParameters(List.of(userParameters));
        }

        public EnvironmentProfileArgs build() {
            if ($.awsAccountRegion == null) {
                throw new MissingRequiredPropertyException("EnvironmentProfileArgs", "awsAccountRegion");
            }
            if ($.domainIdentifier == null) {
                throw new MissingRequiredPropertyException("EnvironmentProfileArgs", "domainIdentifier");
            }
            if ($.environmentBlueprintIdentifier == null) {
                throw new MissingRequiredPropertyException("EnvironmentProfileArgs", "environmentBlueprintIdentifier");
            }
            if ($.projectIdentifier == null) {
                throw new MissingRequiredPropertyException("EnvironmentProfileArgs", "projectIdentifier");
            }
            return $;
        }
    }

}
