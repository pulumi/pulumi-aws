// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.servicequotas.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;


public final class GetTemplatesTemplate extends com.pulumi.resources.InvokeArgs {

    public static final GetTemplatesTemplate Empty = new GetTemplatesTemplate();

    /**
     * Indicates whether the quota is global.
     * 
     */
    @Import(name="globalQuota", required=true)
    private Boolean globalQuota;

    /**
     * @return Indicates whether the quota is global.
     * 
     */
    public Boolean globalQuota() {
        return this.globalQuota;
    }

    /**
     * Quota identifier.
     * 
     */
    @Import(name="quotaCode", required=true)
    private String quotaCode;

    /**
     * @return Quota identifier.
     * 
     */
    public String quotaCode() {
        return this.quotaCode;
    }

    /**
     * Quota name.
     * 
     */
    @Import(name="quotaName", required=true)
    private String quotaName;

    /**
     * @return Quota name.
     * 
     */
    public String quotaName() {
        return this.quotaName;
    }

    /**
     * AWS Region to which the quota increases apply.
     * 
     */
    @Import(name="region", required=true)
    private String region;

    /**
     * @return AWS Region to which the quota increases apply.
     * 
     */
    public String region() {
        return this.region;
    }

    /**
     * (Required) Service identifier.
     * 
     */
    @Import(name="serviceCode", required=true)
    private String serviceCode;

    /**
     * @return (Required) Service identifier.
     * 
     */
    public String serviceCode() {
        return this.serviceCode;
    }

    /**
     * Service name.
     * 
     */
    @Import(name="serviceName", required=true)
    private String serviceName;

    /**
     * @return Service name.
     * 
     */
    public String serviceName() {
        return this.serviceName;
    }

    /**
     * Unit of measurement.
     * 
     */
    @Import(name="unit", required=true)
    private String unit;

    /**
     * @return Unit of measurement.
     * 
     */
    public String unit() {
        return this.unit;
    }

    /**
     * (Required) The new, increased value for the quota.
     * 
     */
    @Import(name="value", required=true)
    private Double value;

    /**
     * @return (Required) The new, increased value for the quota.
     * 
     */
    public Double value() {
        return this.value;
    }

    private GetTemplatesTemplate() {}

    private GetTemplatesTemplate(GetTemplatesTemplate $) {
        this.globalQuota = $.globalQuota;
        this.quotaCode = $.quotaCode;
        this.quotaName = $.quotaName;
        this.region = $.region;
        this.serviceCode = $.serviceCode;
        this.serviceName = $.serviceName;
        this.unit = $.unit;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTemplatesTemplate defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTemplatesTemplate $;

        public Builder() {
            $ = new GetTemplatesTemplate();
        }

        public Builder(GetTemplatesTemplate defaults) {
            $ = new GetTemplatesTemplate(Objects.requireNonNull(defaults));
        }

        /**
         * @param globalQuota Indicates whether the quota is global.
         * 
         * @return builder
         * 
         */
        public Builder globalQuota(Boolean globalQuota) {
            $.globalQuota = globalQuota;
            return this;
        }

        /**
         * @param quotaCode Quota identifier.
         * 
         * @return builder
         * 
         */
        public Builder quotaCode(String quotaCode) {
            $.quotaCode = quotaCode;
            return this;
        }

        /**
         * @param quotaName Quota name.
         * 
         * @return builder
         * 
         */
        public Builder quotaName(String quotaName) {
            $.quotaName = quotaName;
            return this;
        }

        /**
         * @param region AWS Region to which the quota increases apply.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            $.region = region;
            return this;
        }

        /**
         * @param serviceCode (Required) Service identifier.
         * 
         * @return builder
         * 
         */
        public Builder serviceCode(String serviceCode) {
            $.serviceCode = serviceCode;
            return this;
        }

        /**
         * @param serviceName Service name.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param unit Unit of measurement.
         * 
         * @return builder
         * 
         */
        public Builder unit(String unit) {
            $.unit = unit;
            return this;
        }

        /**
         * @param value (Required) The new, increased value for the quota.
         * 
         * @return builder
         * 
         */
        public Builder value(Double value) {
            $.value = value;
            return this;
        }

        public GetTemplatesTemplate build() {
            if ($.globalQuota == null) {
                throw new MissingRequiredPropertyException("GetTemplatesTemplate", "globalQuota");
            }
            if ($.quotaCode == null) {
                throw new MissingRequiredPropertyException("GetTemplatesTemplate", "quotaCode");
            }
            if ($.quotaName == null) {
                throw new MissingRequiredPropertyException("GetTemplatesTemplate", "quotaName");
            }
            if ($.region == null) {
                throw new MissingRequiredPropertyException("GetTemplatesTemplate", "region");
            }
            if ($.serviceCode == null) {
                throw new MissingRequiredPropertyException("GetTemplatesTemplate", "serviceCode");
            }
            if ($.serviceName == null) {
                throw new MissingRequiredPropertyException("GetTemplatesTemplate", "serviceName");
            }
            if ($.unit == null) {
                throw new MissingRequiredPropertyException("GetTemplatesTemplate", "unit");
            }
            if ($.value == null) {
                throw new MissingRequiredPropertyException("GetTemplatesTemplate", "value");
            }
            return $;
        }
    }

}
