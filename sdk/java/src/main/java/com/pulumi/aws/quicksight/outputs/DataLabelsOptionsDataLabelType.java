// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.DataLabelsOptionsDataLabelTypeDataPathLabelType;
import com.pulumi.aws.quicksight.outputs.DataLabelsOptionsDataLabelTypeFieldLabelType;
import com.pulumi.aws.quicksight.outputs.SelectAllOptions;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DataLabelsOptionsDataLabelType {
    private @Nullable DataLabelsOptionsDataLabelTypeDataPathLabelType dataPathLabelType;
    private @Nullable DataLabelsOptionsDataLabelTypeFieldLabelType fieldLabelType;
    private @Nullable SelectAllOptions maximumLabelType;
    private @Nullable SelectAllOptions minimumLabelType;
    private @Nullable SelectAllOptions rangeEndsLabelType;

    private DataLabelsOptionsDataLabelType() {}
    public Optional<DataLabelsOptionsDataLabelTypeDataPathLabelType> dataPathLabelType() {
        return Optional.ofNullable(this.dataPathLabelType);
    }
    public Optional<DataLabelsOptionsDataLabelTypeFieldLabelType> fieldLabelType() {
        return Optional.ofNullable(this.fieldLabelType);
    }
    public Optional<SelectAllOptions> maximumLabelType() {
        return Optional.ofNullable(this.maximumLabelType);
    }
    public Optional<SelectAllOptions> minimumLabelType() {
        return Optional.ofNullable(this.minimumLabelType);
    }
    public Optional<SelectAllOptions> rangeEndsLabelType() {
        return Optional.ofNullable(this.rangeEndsLabelType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataLabelsOptionsDataLabelType defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable DataLabelsOptionsDataLabelTypeDataPathLabelType dataPathLabelType;
        private @Nullable DataLabelsOptionsDataLabelTypeFieldLabelType fieldLabelType;
        private @Nullable SelectAllOptions maximumLabelType;
        private @Nullable SelectAllOptions minimumLabelType;
        private @Nullable SelectAllOptions rangeEndsLabelType;
        public Builder() {}
        public Builder(DataLabelsOptionsDataLabelType defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataPathLabelType = defaults.dataPathLabelType;
    	      this.fieldLabelType = defaults.fieldLabelType;
    	      this.maximumLabelType = defaults.maximumLabelType;
    	      this.minimumLabelType = defaults.minimumLabelType;
    	      this.rangeEndsLabelType = defaults.rangeEndsLabelType;
        }

        @CustomType.Setter
        public Builder dataPathLabelType(@Nullable DataLabelsOptionsDataLabelTypeDataPathLabelType dataPathLabelType) {

            this.dataPathLabelType = dataPathLabelType;
            return this;
        }
        @CustomType.Setter
        public Builder fieldLabelType(@Nullable DataLabelsOptionsDataLabelTypeFieldLabelType fieldLabelType) {

            this.fieldLabelType = fieldLabelType;
            return this;
        }
        @CustomType.Setter
        public Builder maximumLabelType(@Nullable SelectAllOptions maximumLabelType) {

            this.maximumLabelType = maximumLabelType;
            return this;
        }
        @CustomType.Setter
        public Builder minimumLabelType(@Nullable SelectAllOptions minimumLabelType) {

            this.minimumLabelType = minimumLabelType;
            return this;
        }
        @CustomType.Setter
        public Builder rangeEndsLabelType(@Nullable SelectAllOptions rangeEndsLabelType) {

            this.rangeEndsLabelType = rangeEndsLabelType;
            return this;
        }
        public DataLabelsOptionsDataLabelType build() {
            final var _resultValue = new DataLabelsOptionsDataLabelType();
            _resultValue.dataPathLabelType = dataPathLabelType;
            _resultValue.fieldLabelType = fieldLabelType;
            _resultValue.maximumLabelType = maximumLabelType;
            _resultValue.minimumLabelType = minimumLabelType;
            _resultValue.rangeEndsLabelType = rangeEndsLabelType;
            return _resultValue;
        }
    }
}
