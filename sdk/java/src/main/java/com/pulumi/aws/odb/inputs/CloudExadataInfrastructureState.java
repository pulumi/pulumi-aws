// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.odb.inputs;

import com.pulumi.aws.odb.inputs.CloudExadataInfrastructureCustomerContactsToSendToOciArgs;
import com.pulumi.aws.odb.inputs.CloudExadataInfrastructureMaintenanceWindowArgs;
import com.pulumi.aws.odb.inputs.CloudExadataInfrastructureTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudExadataInfrastructureState extends com.pulumi.resources.ResourceArgs {

    public static final CloudExadataInfrastructureState Empty = new CloudExadataInfrastructureState();

    /**
     * The number of storage servers requested for the Exadata infrastructure.
     * 
     */
    @Import(name="activatedStorageCount")
    private @Nullable Output<Integer> activatedStorageCount;

    /**
     * @return The number of storage servers requested for the Exadata infrastructure.
     * 
     */
    public Optional<Output<Integer>> activatedStorageCount() {
        return Optional.ofNullable(this.activatedStorageCount);
    }

    /**
     * The number of storage servers requested for the Exadata infrastructure.
     * 
     */
    @Import(name="additionalStorageCount")
    private @Nullable Output<Integer> additionalStorageCount;

    /**
     * @return The number of storage servers requested for the Exadata infrastructure.
     * 
     */
    public Optional<Output<Integer>> additionalStorageCount() {
        return Optional.ofNullable(this.additionalStorageCount);
    }

    /**
     * Amazon Resource Name (ARN) of the Exadata infrastructure.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return Amazon Resource Name (ARN) of the Exadata infrastructure.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="availabilityZone")
    private @Nullable Output<String> availabilityZone;

    public Optional<Output<String>> availabilityZone() {
        return Optional.ofNullable(this.availabilityZone);
    }

    @Import(name="availabilityZoneId")
    private @Nullable Output<String> availabilityZoneId;

    public Optional<Output<String>> availabilityZoneId() {
        return Optional.ofNullable(this.availabilityZoneId);
    }

    /**
     * The amount of available storage, in gigabytes (GB), for the Exadata infrastructure.
     * 
     */
    @Import(name="availableStorageSizeInGbs")
    private @Nullable Output<Integer> availableStorageSizeInGbs;

    /**
     * @return The amount of available storage, in gigabytes (GB), for the Exadata infrastructure.
     * 
     */
    public Optional<Output<Integer>> availableStorageSizeInGbs() {
        return Optional.ofNullable(this.availableStorageSizeInGbs);
    }

    /**
     * The number of compute instances that the Exadata infrastructure is located
     * 
     */
    @Import(name="computeCount")
    private @Nullable Output<Integer> computeCount;

    /**
     * @return The number of compute instances that the Exadata infrastructure is located
     * 
     */
    public Optional<Output<Integer>> computeCount() {
        return Optional.ofNullable(this.computeCount);
    }

    /**
     * The OCI model compute model used when you create or clone an instance: ECPU or OCPU.
     * 
     */
    @Import(name="computeModel")
    private @Nullable Output<String> computeModel;

    /**
     * @return The OCI model compute model used when you create or clone an instance: ECPU or OCPU.
     * 
     */
    public Optional<Output<String>> computeModel() {
        return Optional.ofNullable(this.computeModel);
    }

    /**
     * The total number of CPU cores that are allocated to the Exadata infrastructure.
     * 
     */
    @Import(name="cpuCount")
    private @Nullable Output<Integer> cpuCount;

    /**
     * @return The total number of CPU cores that are allocated to the Exadata infrastructure.
     * 
     */
    public Optional<Output<Integer>> cpuCount() {
        return Optional.ofNullable(this.cpuCount);
    }

    /**
     * The time when the Exadata infrastructure was created.
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return The time when the Exadata infrastructure was created.
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    @Import(name="customerContactsToSendToOcis")
    private @Nullable Output<List<CloudExadataInfrastructureCustomerContactsToSendToOciArgs>> customerContactsToSendToOcis;

    public Optional<Output<List<CloudExadataInfrastructureCustomerContactsToSendToOciArgs>>> customerContactsToSendToOcis() {
        return Optional.ofNullable(this.customerContactsToSendToOcis);
    }

    /**
     * The size of the Exadata infrastructure&#39;s data disk group, in terabytes (TB).
     * 
     */
    @Import(name="dataStorageSizeInTbs")
    private @Nullable Output<Double> dataStorageSizeInTbs;

    /**
     * @return The size of the Exadata infrastructure&#39;s data disk group, in terabytes (TB).
     * 
     */
    public Optional<Output<Double>> dataStorageSizeInTbs() {
        return Optional.ofNullable(this.dataStorageSizeInTbs);
    }

    /**
     * The database server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation
     * 
     */
    @Import(name="databaseServerType")
    private @Nullable Output<String> databaseServerType;

    /**
     * @return The database server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation
     * 
     */
    public Optional<Output<String>> databaseServerType() {
        return Optional.ofNullable(this.databaseServerType);
    }

    /**
     * The size of the Exadata infrastructure&#39;s local node storage, in gigabytes (GB).
     * 
     */
    @Import(name="dbNodeStorageSizeInGbs")
    private @Nullable Output<Integer> dbNodeStorageSizeInGbs;

    /**
     * @return The size of the Exadata infrastructure&#39;s local node storage, in gigabytes (GB).
     * 
     */
    public Optional<Output<Integer>> dbNodeStorageSizeInGbs() {
        return Optional.ofNullable(this.dbNodeStorageSizeInGbs);
    }

    /**
     * The software version of the database servers (dom0) in the Exadata infrastructure.
     * 
     */
    @Import(name="dbServerVersion")
    private @Nullable Output<String> dbServerVersion;

    /**
     * @return The software version of the database servers (dom0) in the Exadata infrastructure.
     * 
     */
    public Optional<Output<String>> dbServerVersion() {
        return Optional.ofNullable(this.dbServerVersion);
    }

    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The Oracle Cloud Identifier (OCID) of the last maintenance run for the Exadata infrastructure.
     * 
     */
    @Import(name="lastMaintenanceRunId")
    private @Nullable Output<String> lastMaintenanceRunId;

    /**
     * @return The Oracle Cloud Identifier (OCID) of the last maintenance run for the Exadata infrastructure.
     * 
     */
    public Optional<Output<String>> lastMaintenanceRunId() {
        return Optional.ofNullable(this.lastMaintenanceRunId);
    }

    /**
     * The scheduling details for the maintenance window. Patching and system updates take place during the maintenance window
     * 
     */
    @Import(name="maintenanceWindow")
    private @Nullable Output<CloudExadataInfrastructureMaintenanceWindowArgs> maintenanceWindow;

    /**
     * @return The scheduling details for the maintenance window. Patching and system updates take place during the maintenance window
     * 
     */
    public Optional<Output<CloudExadataInfrastructureMaintenanceWindowArgs>> maintenanceWindow() {
        return Optional.ofNullable(this.maintenanceWindow);
    }

    /**
     * The total number of CPU cores available on the Exadata infrastructure.
     * 
     */
    @Import(name="maxCpuCount")
    private @Nullable Output<Integer> maxCpuCount;

    /**
     * @return The total number of CPU cores available on the Exadata infrastructure.
     * 
     */
    public Optional<Output<Integer>> maxCpuCount() {
        return Optional.ofNullable(this.maxCpuCount);
    }

    /**
     * The total amount of data disk group storage, in terabytes (TB), that&#39;s available on the Exadata infrastructure.
     * 
     */
    @Import(name="maxDataStorageInTbs")
    private @Nullable Output<Double> maxDataStorageInTbs;

    /**
     * @return The total amount of data disk group storage, in terabytes (TB), that&#39;s available on the Exadata infrastructure.
     * 
     */
    public Optional<Output<Double>> maxDataStorageInTbs() {
        return Optional.ofNullable(this.maxDataStorageInTbs);
    }

    /**
     * The total amount of local node storage, in gigabytes (GB), that&#39;s available on the Exadata infrastructure.
     * 
     */
    @Import(name="maxDbNodeStorageSizeInGbs")
    private @Nullable Output<Integer> maxDbNodeStorageSizeInGbs;

    /**
     * @return The total amount of local node storage, in gigabytes (GB), that&#39;s available on the Exadata infrastructure.
     * 
     */
    public Optional<Output<Integer>> maxDbNodeStorageSizeInGbs() {
        return Optional.ofNullable(this.maxDbNodeStorageSizeInGbs);
    }

    /**
     * The total amount of memory in gigabytes (GB) available on the Exadata infrastructure.
     * 
     */
    @Import(name="maxMemoryInGbs")
    private @Nullable Output<Integer> maxMemoryInGbs;

    /**
     * @return The total amount of memory in gigabytes (GB) available on the Exadata infrastructure.
     * 
     */
    public Optional<Output<Integer>> maxMemoryInGbs() {
        return Optional.ofNullable(this.maxMemoryInGbs);
    }

    /**
     * The amount of memory, in gigabytes (GB), that&#39;s allocated on the Exadata infrastructure
     * 
     */
    @Import(name="memorySizeInGbs")
    private @Nullable Output<Integer> memorySizeInGbs;

    /**
     * @return The amount of memory, in gigabytes (GB), that&#39;s allocated on the Exadata infrastructure
     * 
     */
    public Optional<Output<Integer>> memorySizeInGbs() {
        return Optional.ofNullable(this.memorySizeInGbs);
    }

    /**
     * The monthly software version of the database servers in the Exadata infrastructure.
     * 
     */
    @Import(name="monthlyDbServerVersion")
    private @Nullable Output<String> monthlyDbServerVersion;

    /**
     * @return The monthly software version of the database servers in the Exadata infrastructure.
     * 
     */
    public Optional<Output<String>> monthlyDbServerVersion() {
        return Optional.ofNullable(this.monthlyDbServerVersion);
    }

    /**
     * The monthly software version of the storage servers installed on the Exadata infrastructure.
     * 
     */
    @Import(name="monthlyStorageServerVersion")
    private @Nullable Output<String> monthlyStorageServerVersion;

    /**
     * @return The monthly software version of the storage servers installed on the Exadata infrastructure.
     * 
     */
    public Optional<Output<String>> monthlyStorageServerVersion() {
        return Optional.ofNullable(this.monthlyStorageServerVersion);
    }

    /**
     * The OCID of the next maintenance run for the Exadata infrastructure.
     * 
     */
    @Import(name="nextMaintenanceRunId")
    private @Nullable Output<String> nextMaintenanceRunId;

    /**
     * @return The OCID of the next maintenance run for the Exadata infrastructure.
     * 
     */
    public Optional<Output<String>> nextMaintenanceRunId() {
        return Optional.ofNullable(this.nextMaintenanceRunId);
    }

    /**
     * The name of the OCI resource anchor for the Exadata infrastructure.
     * 
     */
    @Import(name="ociResourceAnchorName")
    private @Nullable Output<String> ociResourceAnchorName;

    /**
     * @return The name of the OCI resource anchor for the Exadata infrastructure.
     * 
     */
    public Optional<Output<String>> ociResourceAnchorName() {
        return Optional.ofNullable(this.ociResourceAnchorName);
    }

    /**
     * The HTTPS link to the Exadata infrastructure in OCI
     * 
     */
    @Import(name="ociUrl")
    private @Nullable Output<String> ociUrl;

    /**
     * @return The HTTPS link to the Exadata infrastructure in OCI
     * 
     */
    public Optional<Output<String>> ociUrl() {
        return Optional.ofNullable(this.ociUrl);
    }

    /**
     * The OCID of the Exadata infrastructure.
     * 
     */
    @Import(name="ocid")
    private @Nullable Output<String> ocid;

    /**
     * @return The OCID of the Exadata infrastructure.
     * 
     */
    public Optional<Output<String>> ocid() {
        return Optional.ofNullable(this.ocid);
    }

    /**
     * The amount of progress made on the current operation on the Exadata infrastructure, expressed as a percentage.
     * 
     */
    @Import(name="percentProgress")
    private @Nullable Output<Double> percentProgress;

    /**
     * @return The amount of progress made on the current operation on the Exadata infrastructure, expressed as a percentage.
     * 
     */
    public Optional<Output<Double>> percentProgress() {
        return Optional.ofNullable(this.percentProgress);
    }

    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    @Import(name="shape")
    private @Nullable Output<String> shape;

    public Optional<Output<String>> shape() {
        return Optional.ofNullable(this.shape);
    }

    /**
     * The current status of the Exadata infrastructure.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The current status of the Exadata infrastructure.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Additional information about the status of the Exadata infrastructure.
     * 
     */
    @Import(name="statusReason")
    private @Nullable Output<String> statusReason;

    /**
     * @return Additional information about the status of the Exadata infrastructure.
     * 
     */
    public Optional<Output<String>> statusReason() {
        return Optional.ofNullable(this.statusReason);
    }

    /**
     * TThe number of storage servers that are activated for the Exadata infrastructure
     * 
     */
    @Import(name="storageCount")
    private @Nullable Output<Integer> storageCount;

    /**
     * @return TThe number of storage servers that are activated for the Exadata infrastructure
     * 
     */
    public Optional<Output<Integer>> storageCount() {
        return Optional.ofNullable(this.storageCount);
    }

    /**
     * The storage server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation
     * 
     */
    @Import(name="storageServerType")
    private @Nullable Output<String> storageServerType;

    /**
     * @return The storage server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation
     * 
     */
    public Optional<Output<String>> storageServerType() {
        return Optional.ofNullable(this.storageServerType);
    }

    /**
     * The software version of the storage servers on the Exadata infrastructure.
     * 
     */
    @Import(name="storageServerVersion")
    private @Nullable Output<String> storageServerVersion;

    /**
     * @return The software version of the storage servers on the Exadata infrastructure.
     * 
     */
    public Optional<Output<String>> storageServerVersion() {
        return Optional.ofNullable(this.storageServerVersion);
    }

    /**
     * A map of tags to assign to the exadata infrastructure. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the exadata infrastructure. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="timeouts")
    private @Nullable Output<CloudExadataInfrastructureTimeoutsArgs> timeouts;

    public Optional<Output<CloudExadataInfrastructureTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    /**
     * The total amount of storage, in gigabytes (GB), on the Exadata infrastructure.
     * 
     */
    @Import(name="totalStorageSizeInGbs")
    private @Nullable Output<Integer> totalStorageSizeInGbs;

    /**
     * @return The total amount of storage, in gigabytes (GB), on the Exadata infrastructure.
     * 
     */
    public Optional<Output<Integer>> totalStorageSizeInGbs() {
        return Optional.ofNullable(this.totalStorageSizeInGbs);
    }

    private CloudExadataInfrastructureState() {}

    private CloudExadataInfrastructureState(CloudExadataInfrastructureState $) {
        this.activatedStorageCount = $.activatedStorageCount;
        this.additionalStorageCount = $.additionalStorageCount;
        this.arn = $.arn;
        this.availabilityZone = $.availabilityZone;
        this.availabilityZoneId = $.availabilityZoneId;
        this.availableStorageSizeInGbs = $.availableStorageSizeInGbs;
        this.computeCount = $.computeCount;
        this.computeModel = $.computeModel;
        this.cpuCount = $.cpuCount;
        this.createdAt = $.createdAt;
        this.customerContactsToSendToOcis = $.customerContactsToSendToOcis;
        this.dataStorageSizeInTbs = $.dataStorageSizeInTbs;
        this.databaseServerType = $.databaseServerType;
        this.dbNodeStorageSizeInGbs = $.dbNodeStorageSizeInGbs;
        this.dbServerVersion = $.dbServerVersion;
        this.displayName = $.displayName;
        this.lastMaintenanceRunId = $.lastMaintenanceRunId;
        this.maintenanceWindow = $.maintenanceWindow;
        this.maxCpuCount = $.maxCpuCount;
        this.maxDataStorageInTbs = $.maxDataStorageInTbs;
        this.maxDbNodeStorageSizeInGbs = $.maxDbNodeStorageSizeInGbs;
        this.maxMemoryInGbs = $.maxMemoryInGbs;
        this.memorySizeInGbs = $.memorySizeInGbs;
        this.monthlyDbServerVersion = $.monthlyDbServerVersion;
        this.monthlyStorageServerVersion = $.monthlyStorageServerVersion;
        this.nextMaintenanceRunId = $.nextMaintenanceRunId;
        this.ociResourceAnchorName = $.ociResourceAnchorName;
        this.ociUrl = $.ociUrl;
        this.ocid = $.ocid;
        this.percentProgress = $.percentProgress;
        this.region = $.region;
        this.shape = $.shape;
        this.status = $.status;
        this.statusReason = $.statusReason;
        this.storageCount = $.storageCount;
        this.storageServerType = $.storageServerType;
        this.storageServerVersion = $.storageServerVersion;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.timeouts = $.timeouts;
        this.totalStorageSizeInGbs = $.totalStorageSizeInGbs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudExadataInfrastructureState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudExadataInfrastructureState $;

        public Builder() {
            $ = new CloudExadataInfrastructureState();
        }

        public Builder(CloudExadataInfrastructureState defaults) {
            $ = new CloudExadataInfrastructureState(Objects.requireNonNull(defaults));
        }

        /**
         * @param activatedStorageCount The number of storage servers requested for the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder activatedStorageCount(@Nullable Output<Integer> activatedStorageCount) {
            $.activatedStorageCount = activatedStorageCount;
            return this;
        }

        /**
         * @param activatedStorageCount The number of storage servers requested for the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder activatedStorageCount(Integer activatedStorageCount) {
            return activatedStorageCount(Output.of(activatedStorageCount));
        }

        /**
         * @param additionalStorageCount The number of storage servers requested for the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder additionalStorageCount(@Nullable Output<Integer> additionalStorageCount) {
            $.additionalStorageCount = additionalStorageCount;
            return this;
        }

        /**
         * @param additionalStorageCount The number of storage servers requested for the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder additionalStorageCount(Integer additionalStorageCount) {
            return additionalStorageCount(Output.of(additionalStorageCount));
        }

        /**
         * @param arn Amazon Resource Name (ARN) of the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn Amazon Resource Name (ARN) of the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder availabilityZone(@Nullable Output<String> availabilityZone) {
            $.availabilityZone = availabilityZone;
            return this;
        }

        public Builder availabilityZone(String availabilityZone) {
            return availabilityZone(Output.of(availabilityZone));
        }

        public Builder availabilityZoneId(@Nullable Output<String> availabilityZoneId) {
            $.availabilityZoneId = availabilityZoneId;
            return this;
        }

        public Builder availabilityZoneId(String availabilityZoneId) {
            return availabilityZoneId(Output.of(availabilityZoneId));
        }

        /**
         * @param availableStorageSizeInGbs The amount of available storage, in gigabytes (GB), for the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder availableStorageSizeInGbs(@Nullable Output<Integer> availableStorageSizeInGbs) {
            $.availableStorageSizeInGbs = availableStorageSizeInGbs;
            return this;
        }

        /**
         * @param availableStorageSizeInGbs The amount of available storage, in gigabytes (GB), for the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder availableStorageSizeInGbs(Integer availableStorageSizeInGbs) {
            return availableStorageSizeInGbs(Output.of(availableStorageSizeInGbs));
        }

        /**
         * @param computeCount The number of compute instances that the Exadata infrastructure is located
         * 
         * @return builder
         * 
         */
        public Builder computeCount(@Nullable Output<Integer> computeCount) {
            $.computeCount = computeCount;
            return this;
        }

        /**
         * @param computeCount The number of compute instances that the Exadata infrastructure is located
         * 
         * @return builder
         * 
         */
        public Builder computeCount(Integer computeCount) {
            return computeCount(Output.of(computeCount));
        }

        /**
         * @param computeModel The OCI model compute model used when you create or clone an instance: ECPU or OCPU.
         * 
         * @return builder
         * 
         */
        public Builder computeModel(@Nullable Output<String> computeModel) {
            $.computeModel = computeModel;
            return this;
        }

        /**
         * @param computeModel The OCI model compute model used when you create or clone an instance: ECPU or OCPU.
         * 
         * @return builder
         * 
         */
        public Builder computeModel(String computeModel) {
            return computeModel(Output.of(computeModel));
        }

        /**
         * @param cpuCount The total number of CPU cores that are allocated to the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder cpuCount(@Nullable Output<Integer> cpuCount) {
            $.cpuCount = cpuCount;
            return this;
        }

        /**
         * @param cpuCount The total number of CPU cores that are allocated to the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder cpuCount(Integer cpuCount) {
            return cpuCount(Output.of(cpuCount));
        }

        /**
         * @param createdAt The time when the Exadata infrastructure was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt The time when the Exadata infrastructure was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        public Builder customerContactsToSendToOcis(@Nullable Output<List<CloudExadataInfrastructureCustomerContactsToSendToOciArgs>> customerContactsToSendToOcis) {
            $.customerContactsToSendToOcis = customerContactsToSendToOcis;
            return this;
        }

        public Builder customerContactsToSendToOcis(List<CloudExadataInfrastructureCustomerContactsToSendToOciArgs> customerContactsToSendToOcis) {
            return customerContactsToSendToOcis(Output.of(customerContactsToSendToOcis));
        }

        public Builder customerContactsToSendToOcis(CloudExadataInfrastructureCustomerContactsToSendToOciArgs... customerContactsToSendToOcis) {
            return customerContactsToSendToOcis(List.of(customerContactsToSendToOcis));
        }

        /**
         * @param dataStorageSizeInTbs The size of the Exadata infrastructure&#39;s data disk group, in terabytes (TB).
         * 
         * @return builder
         * 
         */
        public Builder dataStorageSizeInTbs(@Nullable Output<Double> dataStorageSizeInTbs) {
            $.dataStorageSizeInTbs = dataStorageSizeInTbs;
            return this;
        }

        /**
         * @param dataStorageSizeInTbs The size of the Exadata infrastructure&#39;s data disk group, in terabytes (TB).
         * 
         * @return builder
         * 
         */
        public Builder dataStorageSizeInTbs(Double dataStorageSizeInTbs) {
            return dataStorageSizeInTbs(Output.of(dataStorageSizeInTbs));
        }

        /**
         * @param databaseServerType The database server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation
         * 
         * @return builder
         * 
         */
        public Builder databaseServerType(@Nullable Output<String> databaseServerType) {
            $.databaseServerType = databaseServerType;
            return this;
        }

        /**
         * @param databaseServerType The database server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation
         * 
         * @return builder
         * 
         */
        public Builder databaseServerType(String databaseServerType) {
            return databaseServerType(Output.of(databaseServerType));
        }

        /**
         * @param dbNodeStorageSizeInGbs The size of the Exadata infrastructure&#39;s local node storage, in gigabytes (GB).
         * 
         * @return builder
         * 
         */
        public Builder dbNodeStorageSizeInGbs(@Nullable Output<Integer> dbNodeStorageSizeInGbs) {
            $.dbNodeStorageSizeInGbs = dbNodeStorageSizeInGbs;
            return this;
        }

        /**
         * @param dbNodeStorageSizeInGbs The size of the Exadata infrastructure&#39;s local node storage, in gigabytes (GB).
         * 
         * @return builder
         * 
         */
        public Builder dbNodeStorageSizeInGbs(Integer dbNodeStorageSizeInGbs) {
            return dbNodeStorageSizeInGbs(Output.of(dbNodeStorageSizeInGbs));
        }

        /**
         * @param dbServerVersion The software version of the database servers (dom0) in the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder dbServerVersion(@Nullable Output<String> dbServerVersion) {
            $.dbServerVersion = dbServerVersion;
            return this;
        }

        /**
         * @param dbServerVersion The software version of the database servers (dom0) in the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder dbServerVersion(String dbServerVersion) {
            return dbServerVersion(Output.of(dbServerVersion));
        }

        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param lastMaintenanceRunId The Oracle Cloud Identifier (OCID) of the last maintenance run for the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder lastMaintenanceRunId(@Nullable Output<String> lastMaintenanceRunId) {
            $.lastMaintenanceRunId = lastMaintenanceRunId;
            return this;
        }

        /**
         * @param lastMaintenanceRunId The Oracle Cloud Identifier (OCID) of the last maintenance run for the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder lastMaintenanceRunId(String lastMaintenanceRunId) {
            return lastMaintenanceRunId(Output.of(lastMaintenanceRunId));
        }

        /**
         * @param maintenanceWindow The scheduling details for the maintenance window. Patching and system updates take place during the maintenance window
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindow(@Nullable Output<CloudExadataInfrastructureMaintenanceWindowArgs> maintenanceWindow) {
            $.maintenanceWindow = maintenanceWindow;
            return this;
        }

        /**
         * @param maintenanceWindow The scheduling details for the maintenance window. Patching and system updates take place during the maintenance window
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindow(CloudExadataInfrastructureMaintenanceWindowArgs maintenanceWindow) {
            return maintenanceWindow(Output.of(maintenanceWindow));
        }

        /**
         * @param maxCpuCount The total number of CPU cores available on the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder maxCpuCount(@Nullable Output<Integer> maxCpuCount) {
            $.maxCpuCount = maxCpuCount;
            return this;
        }

        /**
         * @param maxCpuCount The total number of CPU cores available on the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder maxCpuCount(Integer maxCpuCount) {
            return maxCpuCount(Output.of(maxCpuCount));
        }

        /**
         * @param maxDataStorageInTbs The total amount of data disk group storage, in terabytes (TB), that&#39;s available on the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder maxDataStorageInTbs(@Nullable Output<Double> maxDataStorageInTbs) {
            $.maxDataStorageInTbs = maxDataStorageInTbs;
            return this;
        }

        /**
         * @param maxDataStorageInTbs The total amount of data disk group storage, in terabytes (TB), that&#39;s available on the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder maxDataStorageInTbs(Double maxDataStorageInTbs) {
            return maxDataStorageInTbs(Output.of(maxDataStorageInTbs));
        }

        /**
         * @param maxDbNodeStorageSizeInGbs The total amount of local node storage, in gigabytes (GB), that&#39;s available on the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder maxDbNodeStorageSizeInGbs(@Nullable Output<Integer> maxDbNodeStorageSizeInGbs) {
            $.maxDbNodeStorageSizeInGbs = maxDbNodeStorageSizeInGbs;
            return this;
        }

        /**
         * @param maxDbNodeStorageSizeInGbs The total amount of local node storage, in gigabytes (GB), that&#39;s available on the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder maxDbNodeStorageSizeInGbs(Integer maxDbNodeStorageSizeInGbs) {
            return maxDbNodeStorageSizeInGbs(Output.of(maxDbNodeStorageSizeInGbs));
        }

        /**
         * @param maxMemoryInGbs The total amount of memory in gigabytes (GB) available on the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder maxMemoryInGbs(@Nullable Output<Integer> maxMemoryInGbs) {
            $.maxMemoryInGbs = maxMemoryInGbs;
            return this;
        }

        /**
         * @param maxMemoryInGbs The total amount of memory in gigabytes (GB) available on the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder maxMemoryInGbs(Integer maxMemoryInGbs) {
            return maxMemoryInGbs(Output.of(maxMemoryInGbs));
        }

        /**
         * @param memorySizeInGbs The amount of memory, in gigabytes (GB), that&#39;s allocated on the Exadata infrastructure
         * 
         * @return builder
         * 
         */
        public Builder memorySizeInGbs(@Nullable Output<Integer> memorySizeInGbs) {
            $.memorySizeInGbs = memorySizeInGbs;
            return this;
        }

        /**
         * @param memorySizeInGbs The amount of memory, in gigabytes (GB), that&#39;s allocated on the Exadata infrastructure
         * 
         * @return builder
         * 
         */
        public Builder memorySizeInGbs(Integer memorySizeInGbs) {
            return memorySizeInGbs(Output.of(memorySizeInGbs));
        }

        /**
         * @param monthlyDbServerVersion The monthly software version of the database servers in the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder monthlyDbServerVersion(@Nullable Output<String> monthlyDbServerVersion) {
            $.monthlyDbServerVersion = monthlyDbServerVersion;
            return this;
        }

        /**
         * @param monthlyDbServerVersion The monthly software version of the database servers in the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder monthlyDbServerVersion(String monthlyDbServerVersion) {
            return monthlyDbServerVersion(Output.of(monthlyDbServerVersion));
        }

        /**
         * @param monthlyStorageServerVersion The monthly software version of the storage servers installed on the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder monthlyStorageServerVersion(@Nullable Output<String> monthlyStorageServerVersion) {
            $.monthlyStorageServerVersion = monthlyStorageServerVersion;
            return this;
        }

        /**
         * @param monthlyStorageServerVersion The monthly software version of the storage servers installed on the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder monthlyStorageServerVersion(String monthlyStorageServerVersion) {
            return monthlyStorageServerVersion(Output.of(monthlyStorageServerVersion));
        }

        /**
         * @param nextMaintenanceRunId The OCID of the next maintenance run for the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder nextMaintenanceRunId(@Nullable Output<String> nextMaintenanceRunId) {
            $.nextMaintenanceRunId = nextMaintenanceRunId;
            return this;
        }

        /**
         * @param nextMaintenanceRunId The OCID of the next maintenance run for the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder nextMaintenanceRunId(String nextMaintenanceRunId) {
            return nextMaintenanceRunId(Output.of(nextMaintenanceRunId));
        }

        /**
         * @param ociResourceAnchorName The name of the OCI resource anchor for the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder ociResourceAnchorName(@Nullable Output<String> ociResourceAnchorName) {
            $.ociResourceAnchorName = ociResourceAnchorName;
            return this;
        }

        /**
         * @param ociResourceAnchorName The name of the OCI resource anchor for the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder ociResourceAnchorName(String ociResourceAnchorName) {
            return ociResourceAnchorName(Output.of(ociResourceAnchorName));
        }

        /**
         * @param ociUrl The HTTPS link to the Exadata infrastructure in OCI
         * 
         * @return builder
         * 
         */
        public Builder ociUrl(@Nullable Output<String> ociUrl) {
            $.ociUrl = ociUrl;
            return this;
        }

        /**
         * @param ociUrl The HTTPS link to the Exadata infrastructure in OCI
         * 
         * @return builder
         * 
         */
        public Builder ociUrl(String ociUrl) {
            return ociUrl(Output.of(ociUrl));
        }

        /**
         * @param ocid The OCID of the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder ocid(@Nullable Output<String> ocid) {
            $.ocid = ocid;
            return this;
        }

        /**
         * @param ocid The OCID of the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder ocid(String ocid) {
            return ocid(Output.of(ocid));
        }

        /**
         * @param percentProgress The amount of progress made on the current operation on the Exadata infrastructure, expressed as a percentage.
         * 
         * @return builder
         * 
         */
        public Builder percentProgress(@Nullable Output<Double> percentProgress) {
            $.percentProgress = percentProgress;
            return this;
        }

        /**
         * @param percentProgress The amount of progress made on the current operation on the Exadata infrastructure, expressed as a percentage.
         * 
         * @return builder
         * 
         */
        public Builder percentProgress(Double percentProgress) {
            return percentProgress(Output.of(percentProgress));
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public Builder shape(@Nullable Output<String> shape) {
            $.shape = shape;
            return this;
        }

        public Builder shape(String shape) {
            return shape(Output.of(shape));
        }

        /**
         * @param status The current status of the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The current status of the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param statusReason Additional information about the status of the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder statusReason(@Nullable Output<String> statusReason) {
            $.statusReason = statusReason;
            return this;
        }

        /**
         * @param statusReason Additional information about the status of the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder statusReason(String statusReason) {
            return statusReason(Output.of(statusReason));
        }

        /**
         * @param storageCount TThe number of storage servers that are activated for the Exadata infrastructure
         * 
         * @return builder
         * 
         */
        public Builder storageCount(@Nullable Output<Integer> storageCount) {
            $.storageCount = storageCount;
            return this;
        }

        /**
         * @param storageCount TThe number of storage servers that are activated for the Exadata infrastructure
         * 
         * @return builder
         * 
         */
        public Builder storageCount(Integer storageCount) {
            return storageCount(Output.of(storageCount));
        }

        /**
         * @param storageServerType The storage server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation
         * 
         * @return builder
         * 
         */
        public Builder storageServerType(@Nullable Output<String> storageServerType) {
            $.storageServerType = storageServerType;
            return this;
        }

        /**
         * @param storageServerType The storage server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation
         * 
         * @return builder
         * 
         */
        public Builder storageServerType(String storageServerType) {
            return storageServerType(Output.of(storageServerType));
        }

        /**
         * @param storageServerVersion The software version of the storage servers on the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder storageServerVersion(@Nullable Output<String> storageServerVersion) {
            $.storageServerVersion = storageServerVersion;
            return this;
        }

        /**
         * @param storageServerVersion The software version of the storage servers on the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder storageServerVersion(String storageServerVersion) {
            return storageServerVersion(Output.of(storageServerVersion));
        }

        /**
         * @param tags A map of tags to assign to the exadata infrastructure. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A map of tags to assign to the exadata infrastructure. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder timeouts(@Nullable Output<CloudExadataInfrastructureTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(CloudExadataInfrastructureTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        /**
         * @param totalStorageSizeInGbs The total amount of storage, in gigabytes (GB), on the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder totalStorageSizeInGbs(@Nullable Output<Integer> totalStorageSizeInGbs) {
            $.totalStorageSizeInGbs = totalStorageSizeInGbs;
            return this;
        }

        /**
         * @param totalStorageSizeInGbs The total amount of storage, in gigabytes (GB), on the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder totalStorageSizeInGbs(Integer totalStorageSizeInGbs) {
            return totalStorageSizeInGbs(Output.of(totalStorageSizeInGbs));
        }

        public CloudExadataInfrastructureState build() {
            return $;
        }
    }

}
