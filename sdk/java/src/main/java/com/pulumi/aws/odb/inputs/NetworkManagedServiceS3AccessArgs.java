// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.odb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class NetworkManagedServiceS3AccessArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkManagedServiceS3AccessArgs Empty = new NetworkManagedServiceS3AccessArgs();

    @Import(name="domainName", required=true)
    private Output<String> domainName;

    public Output<String> domainName() {
        return this.domainName;
    }

    @Import(name="ipv4Addresses", required=true)
    private Output<List<String>> ipv4Addresses;

    public Output<List<String>> ipv4Addresses() {
        return this.ipv4Addresses;
    }

    /**
     * Specifies the endpoint policy for Amazon S3 access from the ODB network.
     * 
     */
    @Import(name="s3PolicyDocument", required=true)
    private Output<String> s3PolicyDocument;

    /**
     * @return Specifies the endpoint policy for Amazon S3 access from the ODB network.
     * 
     */
    public Output<String> s3PolicyDocument() {
        return this.s3PolicyDocument;
    }

    /**
     * The status of the network resource.
     * 
     */
    @Import(name="status", required=true)
    private Output<String> status;

    /**
     * @return The status of the network resource.
     * 
     */
    public Output<String> status() {
        return this.status;
    }

    private NetworkManagedServiceS3AccessArgs() {}

    private NetworkManagedServiceS3AccessArgs(NetworkManagedServiceS3AccessArgs $) {
        this.domainName = $.domainName;
        this.ipv4Addresses = $.ipv4Addresses;
        this.s3PolicyDocument = $.s3PolicyDocument;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkManagedServiceS3AccessArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkManagedServiceS3AccessArgs $;

        public Builder() {
            $ = new NetworkManagedServiceS3AccessArgs();
        }

        public Builder(NetworkManagedServiceS3AccessArgs defaults) {
            $ = new NetworkManagedServiceS3AccessArgs(Objects.requireNonNull(defaults));
        }

        public Builder domainName(Output<String> domainName) {
            $.domainName = domainName;
            return this;
        }

        public Builder domainName(String domainName) {
            return domainName(Output.of(domainName));
        }

        public Builder ipv4Addresses(Output<List<String>> ipv4Addresses) {
            $.ipv4Addresses = ipv4Addresses;
            return this;
        }

        public Builder ipv4Addresses(List<String> ipv4Addresses) {
            return ipv4Addresses(Output.of(ipv4Addresses));
        }

        public Builder ipv4Addresses(String... ipv4Addresses) {
            return ipv4Addresses(List.of(ipv4Addresses));
        }

        /**
         * @param s3PolicyDocument Specifies the endpoint policy for Amazon S3 access from the ODB network.
         * 
         * @return builder
         * 
         */
        public Builder s3PolicyDocument(Output<String> s3PolicyDocument) {
            $.s3PolicyDocument = s3PolicyDocument;
            return this;
        }

        /**
         * @param s3PolicyDocument Specifies the endpoint policy for Amazon S3 access from the ODB network.
         * 
         * @return builder
         * 
         */
        public Builder s3PolicyDocument(String s3PolicyDocument) {
            return s3PolicyDocument(Output.of(s3PolicyDocument));
        }

        /**
         * @param status The status of the network resource.
         * 
         * @return builder
         * 
         */
        public Builder status(Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the network resource.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public NetworkManagedServiceS3AccessArgs build() {
            if ($.domainName == null) {
                throw new MissingRequiredPropertyException("NetworkManagedServiceS3AccessArgs", "domainName");
            }
            if ($.ipv4Addresses == null) {
                throw new MissingRequiredPropertyException("NetworkManagedServiceS3AccessArgs", "ipv4Addresses");
            }
            if ($.s3PolicyDocument == null) {
                throw new MissingRequiredPropertyException("NetworkManagedServiceS3AccessArgs", "s3PolicyDocument");
            }
            if ($.status == null) {
                throw new MissingRequiredPropertyException("NetworkManagedServiceS3AccessArgs", "status");
            }
            return $;
        }
    }

}
