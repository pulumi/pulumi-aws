// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appflow.inputs;

import com.pulumi.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs Empty = new ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs();

    @Import(name="accessToken")
    private @Nullable Output<String> accessToken;

    public Optional<Output<String>> accessToken() {
        return Optional.ofNullable(this.accessToken);
    }

    @Import(name="clientId", required=true)
    private Output<String> clientId;

    public Output<String> clientId() {
        return this.clientId;
    }

    @Import(name="clientSecret", required=true)
    private Output<String> clientSecret;

    public Output<String> clientSecret() {
        return this.clientSecret;
    }

    @Import(name="oauthRequest")
    private @Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestArgs> oauthRequest;

    public Optional<Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestArgs>> oauthRequest() {
        return Optional.ofNullable(this.oauthRequest);
    }

    private ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs() {}

    private ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs $) {
        this.accessToken = $.accessToken;
        this.clientId = $.clientId;
        this.clientSecret = $.clientSecret;
        this.oauthRequest = $.oauthRequest;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs $;

        public Builder() {
            $ = new ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs();
        }

        public Builder(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs defaults) {
            $ = new ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs(Objects.requireNonNull(defaults));
        }

        public Builder accessToken(@Nullable Output<String> accessToken) {
            $.accessToken = accessToken;
            return this;
        }

        public Builder accessToken(String accessToken) {
            return accessToken(Output.of(accessToken));
        }

        public Builder clientId(Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        public Builder clientSecret(Output<String> clientSecret) {
            $.clientSecret = clientSecret;
            return this;
        }

        public Builder clientSecret(String clientSecret) {
            return clientSecret(Output.of(clientSecret));
        }

        public Builder oauthRequest(@Nullable Output<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestArgs> oauthRequest) {
            $.oauthRequest = oauthRequest;
            return this;
        }

        public Builder oauthRequest(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestArgs oauthRequest) {
            return oauthRequest(Output.of(oauthRequest));
        }

        public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs build() {
            if ($.clientId == null) {
                throw new MissingRequiredPropertyException("ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs", "clientId");
            }
            if ($.clientSecret == null) {
                throw new MissingRequiredPropertyException("ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs", "clientSecret");
            }
            return $;
        }
    }

}
