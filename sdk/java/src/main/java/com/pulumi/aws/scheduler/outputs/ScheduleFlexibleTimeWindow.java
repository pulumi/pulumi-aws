// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.scheduler.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ScheduleFlexibleTimeWindow {
    /**
     * @return Maximum time window during which a schedule can be invoked. Ranges from `1` to `1440` minutes.
     * 
     */
    private @Nullable Integer maximumWindowInMinutes;
    /**
     * @return Determines whether the schedule is invoked within a flexible time window. One of: `OFF`, `FLEXIBLE`.
     * 
     */
    private String mode;

    private ScheduleFlexibleTimeWindow() {}
    /**
     * @return Maximum time window during which a schedule can be invoked. Ranges from `1` to `1440` minutes.
     * 
     */
    public Optional<Integer> maximumWindowInMinutes() {
        return Optional.ofNullable(this.maximumWindowInMinutes);
    }
    /**
     * @return Determines whether the schedule is invoked within a flexible time window. One of: `OFF`, `FLEXIBLE`.
     * 
     */
    public String mode() {
        return this.mode;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ScheduleFlexibleTimeWindow defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer maximumWindowInMinutes;
        private String mode;
        public Builder() {}
        public Builder(ScheduleFlexibleTimeWindow defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maximumWindowInMinutes = defaults.maximumWindowInMinutes;
    	      this.mode = defaults.mode;
        }

        @CustomType.Setter
        public Builder maximumWindowInMinutes(@Nullable Integer maximumWindowInMinutes) {
            this.maximumWindowInMinutes = maximumWindowInMinutes;
            return this;
        }
        @CustomType.Setter
        public Builder mode(String mode) {
            this.mode = Objects.requireNonNull(mode);
            return this;
        }
        public ScheduleFlexibleTimeWindow build() {
            final var o = new ScheduleFlexibleTimeWindow();
            o.maximumWindowInMinutes = maximumWindowInMinutes;
            o.mode = mode;
            return o;
        }
    }
}
