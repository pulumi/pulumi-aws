// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elasticache;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class UserGroupAssociationArgs extends com.pulumi.resources.ResourceArgs {

    public static final UserGroupAssociationArgs Empty = new UserGroupAssociationArgs();

    /**
     * ID of the user group.
     * 
     */
    @Import(name="userGroupId", required=true)
    private Output<String> userGroupId;

    /**
     * @return ID of the user group.
     * 
     */
    public Output<String> userGroupId() {
        return this.userGroupId;
    }

    /**
     * ID of the user to associated with the user group.
     * 
     */
    @Import(name="userId", required=true)
    private Output<String> userId;

    /**
     * @return ID of the user to associated with the user group.
     * 
     */
    public Output<String> userId() {
        return this.userId;
    }

    private UserGroupAssociationArgs() {}

    private UserGroupAssociationArgs(UserGroupAssociationArgs $) {
        this.userGroupId = $.userGroupId;
        this.userId = $.userId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserGroupAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserGroupAssociationArgs $;

        public Builder() {
            $ = new UserGroupAssociationArgs();
        }

        public Builder(UserGroupAssociationArgs defaults) {
            $ = new UserGroupAssociationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param userGroupId ID of the user group.
         * 
         * @return builder
         * 
         */
        public Builder userGroupId(Output<String> userGroupId) {
            $.userGroupId = userGroupId;
            return this;
        }

        /**
         * @param userGroupId ID of the user group.
         * 
         * @return builder
         * 
         */
        public Builder userGroupId(String userGroupId) {
            return userGroupId(Output.of(userGroupId));
        }

        /**
         * @param userId ID of the user to associated with the user group.
         * 
         * @return builder
         * 
         */
        public Builder userId(Output<String> userId) {
            $.userId = userId;
            return this;
        }

        /**
         * @param userId ID of the user to associated with the user group.
         * 
         * @return builder
         * 
         */
        public Builder userId(String userId) {
            return userId(Output.of(userId));
        }

        public UserGroupAssociationArgs build() {
            if ($.userGroupId == null) {
                throw new MissingRequiredPropertyException("UserGroupAssociationArgs", "userGroupId");
            }
            if ($.userId == null) {
                throw new MissingRequiredPropertyException("UserGroupAssociationArgs", "userId");
            }
            return $;
        }
    }

}
