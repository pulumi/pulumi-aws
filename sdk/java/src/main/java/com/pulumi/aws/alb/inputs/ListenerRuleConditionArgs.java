// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.alb.inputs;

import com.pulumi.aws.alb.inputs.ListenerRuleConditionHostHeaderArgs;
import com.pulumi.aws.alb.inputs.ListenerRuleConditionHttpHeaderArgs;
import com.pulumi.aws.alb.inputs.ListenerRuleConditionHttpRequestMethodArgs;
import com.pulumi.aws.alb.inputs.ListenerRuleConditionPathPatternArgs;
import com.pulumi.aws.alb.inputs.ListenerRuleConditionQueryStringArgs;
import com.pulumi.aws.alb.inputs.ListenerRuleConditionSourceIpArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ListenerRuleConditionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ListenerRuleConditionArgs Empty = new ListenerRuleConditionArgs();

    @Import(name="hostHeader")
    private @Nullable Output<ListenerRuleConditionHostHeaderArgs> hostHeader;

    public Optional<Output<ListenerRuleConditionHostHeaderArgs>> hostHeader() {
        return Optional.ofNullable(this.hostHeader);
    }

    @Import(name="httpHeader")
    private @Nullable Output<ListenerRuleConditionHttpHeaderArgs> httpHeader;

    public Optional<Output<ListenerRuleConditionHttpHeaderArgs>> httpHeader() {
        return Optional.ofNullable(this.httpHeader);
    }

    @Import(name="httpRequestMethod")
    private @Nullable Output<ListenerRuleConditionHttpRequestMethodArgs> httpRequestMethod;

    public Optional<Output<ListenerRuleConditionHttpRequestMethodArgs>> httpRequestMethod() {
        return Optional.ofNullable(this.httpRequestMethod);
    }

    @Import(name="pathPattern")
    private @Nullable Output<ListenerRuleConditionPathPatternArgs> pathPattern;

    public Optional<Output<ListenerRuleConditionPathPatternArgs>> pathPattern() {
        return Optional.ofNullable(this.pathPattern);
    }

    @Import(name="queryStrings")
    private @Nullable Output<List<ListenerRuleConditionQueryStringArgs>> queryStrings;

    public Optional<Output<List<ListenerRuleConditionQueryStringArgs>>> queryStrings() {
        return Optional.ofNullable(this.queryStrings);
    }

    @Import(name="sourceIp")
    private @Nullable Output<ListenerRuleConditionSourceIpArgs> sourceIp;

    public Optional<Output<ListenerRuleConditionSourceIpArgs>> sourceIp() {
        return Optional.ofNullable(this.sourceIp);
    }

    private ListenerRuleConditionArgs() {}

    private ListenerRuleConditionArgs(ListenerRuleConditionArgs $) {
        this.hostHeader = $.hostHeader;
        this.httpHeader = $.httpHeader;
        this.httpRequestMethod = $.httpRequestMethod;
        this.pathPattern = $.pathPattern;
        this.queryStrings = $.queryStrings;
        this.sourceIp = $.sourceIp;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ListenerRuleConditionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ListenerRuleConditionArgs $;

        public Builder() {
            $ = new ListenerRuleConditionArgs();
        }

        public Builder(ListenerRuleConditionArgs defaults) {
            $ = new ListenerRuleConditionArgs(Objects.requireNonNull(defaults));
        }

        public Builder hostHeader(@Nullable Output<ListenerRuleConditionHostHeaderArgs> hostHeader) {
            $.hostHeader = hostHeader;
            return this;
        }

        public Builder hostHeader(ListenerRuleConditionHostHeaderArgs hostHeader) {
            return hostHeader(Output.of(hostHeader));
        }

        public Builder httpHeader(@Nullable Output<ListenerRuleConditionHttpHeaderArgs> httpHeader) {
            $.httpHeader = httpHeader;
            return this;
        }

        public Builder httpHeader(ListenerRuleConditionHttpHeaderArgs httpHeader) {
            return httpHeader(Output.of(httpHeader));
        }

        public Builder httpRequestMethod(@Nullable Output<ListenerRuleConditionHttpRequestMethodArgs> httpRequestMethod) {
            $.httpRequestMethod = httpRequestMethod;
            return this;
        }

        public Builder httpRequestMethod(ListenerRuleConditionHttpRequestMethodArgs httpRequestMethod) {
            return httpRequestMethod(Output.of(httpRequestMethod));
        }

        public Builder pathPattern(@Nullable Output<ListenerRuleConditionPathPatternArgs> pathPattern) {
            $.pathPattern = pathPattern;
            return this;
        }

        public Builder pathPattern(ListenerRuleConditionPathPatternArgs pathPattern) {
            return pathPattern(Output.of(pathPattern));
        }

        public Builder queryStrings(@Nullable Output<List<ListenerRuleConditionQueryStringArgs>> queryStrings) {
            $.queryStrings = queryStrings;
            return this;
        }

        public Builder queryStrings(List<ListenerRuleConditionQueryStringArgs> queryStrings) {
            return queryStrings(Output.of(queryStrings));
        }

        public Builder queryStrings(ListenerRuleConditionQueryStringArgs... queryStrings) {
            return queryStrings(List.of(queryStrings));
        }

        public Builder sourceIp(@Nullable Output<ListenerRuleConditionSourceIpArgs> sourceIp) {
            $.sourceIp = sourceIp;
            return this;
        }

        public Builder sourceIp(ListenerRuleConditionSourceIpArgs sourceIp) {
            return sourceIp(Output.of(sourceIp));
        }

        public ListenerRuleConditionArgs build() {
            return $;
        }
    }

}
