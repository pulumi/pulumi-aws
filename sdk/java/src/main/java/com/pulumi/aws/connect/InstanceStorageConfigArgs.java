// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.connect;

import com.pulumi.aws.connect.inputs.InstanceStorageConfigStorageConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class InstanceStorageConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceStorageConfigArgs Empty = new InstanceStorageConfigArgs();

    @Import(name="instanceId", required=true)
    private Output<String> instanceId;

    public Output<String> instanceId() {
        return this.instanceId;
    }

    @Import(name="resourceType", required=true)
    private Output<String> resourceType;

    public Output<String> resourceType() {
        return this.resourceType;
    }

    @Import(name="storageConfig", required=true)
    private Output<InstanceStorageConfigStorageConfigArgs> storageConfig;

    public Output<InstanceStorageConfigStorageConfigArgs> storageConfig() {
        return this.storageConfig;
    }

    private InstanceStorageConfigArgs() {}

    private InstanceStorageConfigArgs(InstanceStorageConfigArgs $) {
        this.instanceId = $.instanceId;
        this.resourceType = $.resourceType;
        this.storageConfig = $.storageConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceStorageConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceStorageConfigArgs $;

        public Builder() {
            $ = new InstanceStorageConfigArgs();
        }

        public Builder(InstanceStorageConfigArgs defaults) {
            $ = new InstanceStorageConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder instanceId(Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        public Builder resourceType(Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        public Builder storageConfig(Output<InstanceStorageConfigStorageConfigArgs> storageConfig) {
            $.storageConfig = storageConfig;
            return this;
        }

        public Builder storageConfig(InstanceStorageConfigStorageConfigArgs storageConfig) {
            return storageConfig(Output.of(storageConfig));
        }

        public InstanceStorageConfigArgs build() {
            $.instanceId = Objects.requireNonNull($.instanceId, "expected parameter 'instanceId' to be non-null");
            $.resourceType = Objects.requireNonNull($.resourceType, "expected parameter 'resourceType' to be non-null");
            $.storageConfig = Objects.requireNonNull($.storageConfig, "expected parameter 'storageConfig' to be non-null");
            return $;
        }
    }

}
