// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetInstanceTypeInstanceDisk {
    private @Nullable Integer count;
    private @Nullable Integer size;
    private @Nullable String type;

    private GetInstanceTypeInstanceDisk() {}
    public Optional<Integer> count() {
        return Optional.ofNullable(this.count);
    }
    public Optional<Integer> size() {
        return Optional.ofNullable(this.size);
    }
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceTypeInstanceDisk defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer count;
        private @Nullable Integer size;
        private @Nullable String type;
        public Builder() {}
        public Builder(GetInstanceTypeInstanceDisk defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.count = defaults.count;
    	      this.size = defaults.size;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder count(@Nullable Integer count) {
            this.count = count;
            return this;
        }
        @CustomType.Setter
        public Builder size(@Nullable Integer size) {
            this.size = size;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        public GetInstanceTypeInstanceDisk build() {
            final var o = new GetInstanceTypeInstanceDisk();
            o.count = count;
            o.size = size;
            o.type = type;
            return o;
        }
    }
}
