// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sesv2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConfigurationSetTrackingOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConfigurationSetTrackingOptionsArgs Empty = new ConfigurationSetTrackingOptionsArgs();

    /**
     * The domain to use for tracking open and click events.
     * 
     */
    @Import(name="customRedirectDomain", required=true)
    private Output<String> customRedirectDomain;

    /**
     * @return The domain to use for tracking open and click events.
     * 
     */
    public Output<String> customRedirectDomain() {
        return this.customRedirectDomain;
    }

    /**
     * The https policy to use for tracking open and click events. Valid values are `REQUIRE`, `REQUIRE_OPEN_ONLY` or `OPTIONAL`.
     * 
     */
    @Import(name="httpsPolicy")
    private @Nullable Output<String> httpsPolicy;

    /**
     * @return The https policy to use for tracking open and click events. Valid values are `REQUIRE`, `REQUIRE_OPEN_ONLY` or `OPTIONAL`.
     * 
     */
    public Optional<Output<String>> httpsPolicy() {
        return Optional.ofNullable(this.httpsPolicy);
    }

    private ConfigurationSetTrackingOptionsArgs() {}

    private ConfigurationSetTrackingOptionsArgs(ConfigurationSetTrackingOptionsArgs $) {
        this.customRedirectDomain = $.customRedirectDomain;
        this.httpsPolicy = $.httpsPolicy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigurationSetTrackingOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigurationSetTrackingOptionsArgs $;

        public Builder() {
            $ = new ConfigurationSetTrackingOptionsArgs();
        }

        public Builder(ConfigurationSetTrackingOptionsArgs defaults) {
            $ = new ConfigurationSetTrackingOptionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customRedirectDomain The domain to use for tracking open and click events.
         * 
         * @return builder
         * 
         */
        public Builder customRedirectDomain(Output<String> customRedirectDomain) {
            $.customRedirectDomain = customRedirectDomain;
            return this;
        }

        /**
         * @param customRedirectDomain The domain to use for tracking open and click events.
         * 
         * @return builder
         * 
         */
        public Builder customRedirectDomain(String customRedirectDomain) {
            return customRedirectDomain(Output.of(customRedirectDomain));
        }

        /**
         * @param httpsPolicy The https policy to use for tracking open and click events. Valid values are `REQUIRE`, `REQUIRE_OPEN_ONLY` or `OPTIONAL`.
         * 
         * @return builder
         * 
         */
        public Builder httpsPolicy(@Nullable Output<String> httpsPolicy) {
            $.httpsPolicy = httpsPolicy;
            return this;
        }

        /**
         * @param httpsPolicy The https policy to use for tracking open and click events. Valid values are `REQUIRE`, `REQUIRE_OPEN_ONLY` or `OPTIONAL`.
         * 
         * @return builder
         * 
         */
        public Builder httpsPolicy(String httpsPolicy) {
            return httpsPolicy(Output.of(httpsPolicy));
        }

        public ConfigurationSetTrackingOptionsArgs build() {
            if ($.customRedirectDomain == null) {
                throw new MissingRequiredPropertyException("ConfigurationSetTrackingOptionsArgs", "customRedirectDomain");
            }
            return $;
        }
    }

}
