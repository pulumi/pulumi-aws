// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudwatch;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LogDestinationArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogDestinationArgs Empty = new LogDestinationArgs();

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="roleArn", required=true)
    private Output<String> roleArn;

    public Output<String> roleArn() {
        return this.roleArn;
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="targetArn", required=true)
    private Output<String> targetArn;

    public Output<String> targetArn() {
        return this.targetArn;
    }

    private LogDestinationArgs() {}

    private LogDestinationArgs(LogDestinationArgs $) {
        this.name = $.name;
        this.roleArn = $.roleArn;
        this.tags = $.tags;
        this.targetArn = $.targetArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogDestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogDestinationArgs $;

        public Builder() {
            $ = new LogDestinationArgs();
        }

        public Builder(LogDestinationArgs defaults) {
            $ = new LogDestinationArgs(Objects.requireNonNull(defaults));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder roleArn(Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder targetArn(Output<String> targetArn) {
            $.targetArn = targetArn;
            return this;
        }

        public Builder targetArn(String targetArn) {
            return targetArn(Output.of(targetArn));
        }

        public LogDestinationArgs build() {
            $.roleArn = Objects.requireNonNull($.roleArn, "expected parameter 'roleArn' to be non-null");
            $.targetArn = Objects.requireNonNull($.targetArn, "expected parameter 'targetArn' to be non-null");
            return $;
        }
    }

}
