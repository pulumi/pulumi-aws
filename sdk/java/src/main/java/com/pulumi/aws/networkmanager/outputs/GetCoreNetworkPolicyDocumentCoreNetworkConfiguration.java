// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.networkmanager.outputs;

import com.pulumi.aws.networkmanager.outputs.GetCoreNetworkPolicyDocumentCoreNetworkConfigurationEdgeLocation;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCoreNetworkPolicyDocumentCoreNetworkConfiguration {
    /**
     * @return List of strings containing Autonomous System Numbers (ASNs) to assign to Core Network Edges. By default, the core network automatically assigns an ASN for each Core Network Edge but you can optionally define the ASN in the edge-locations for each Region. The ASN uses an array of integer ranges only from `64512` to `65534` and `4200000000` to `4294967294` expressed as a string like `&#34;64512-65534&#34;`. No other ASN ranges can be used.
     * 
     */
    private List<String> asnRanges;
    /**
     * @return A block value of AWS Region locations where you&#39;re creating Core Network Edges. Detailed below.
     * 
     */
    private List<GetCoreNetworkPolicyDocumentCoreNetworkConfigurationEdgeLocation> edgeLocations;
    /**
     * @return The Classless Inter-Domain Routing (CIDR) block range used to create tunnels for AWS Transit Gateway Connect. The format is standard AWS CIDR range (for example, `10.0.1.0/24`). You can optionally define the inside CIDR in the Core Network Edges section per Region. The minimum is a `/24` for IPv4 or `/64` for IPv6. You can provide multiple `/24` subnets or a larger CIDR range. If you define a larger CIDR range, new Core Network Edges will be automatically assigned `/24` and `/64` subnets from the larger CIDR. an Inside CIDR block is required for attaching Connect attachments to a Core Network Edge.
     * 
     */
    private @Nullable List<String> insideCidrBlocks;
    /**
     * @return Indicates whether the core network forwards traffic over multiple equal-cost routes using VPN. The value can be either `true` or `false`. The default is `true`.
     * 
     */
    private @Nullable Boolean vpnEcmpSupport;

    private GetCoreNetworkPolicyDocumentCoreNetworkConfiguration() {}
    /**
     * @return List of strings containing Autonomous System Numbers (ASNs) to assign to Core Network Edges. By default, the core network automatically assigns an ASN for each Core Network Edge but you can optionally define the ASN in the edge-locations for each Region. The ASN uses an array of integer ranges only from `64512` to `65534` and `4200000000` to `4294967294` expressed as a string like `&#34;64512-65534&#34;`. No other ASN ranges can be used.
     * 
     */
    public List<String> asnRanges() {
        return this.asnRanges;
    }
    /**
     * @return A block value of AWS Region locations where you&#39;re creating Core Network Edges. Detailed below.
     * 
     */
    public List<GetCoreNetworkPolicyDocumentCoreNetworkConfigurationEdgeLocation> edgeLocations() {
        return this.edgeLocations;
    }
    /**
     * @return The Classless Inter-Domain Routing (CIDR) block range used to create tunnels for AWS Transit Gateway Connect. The format is standard AWS CIDR range (for example, `10.0.1.0/24`). You can optionally define the inside CIDR in the Core Network Edges section per Region. The minimum is a `/24` for IPv4 or `/64` for IPv6. You can provide multiple `/24` subnets or a larger CIDR range. If you define a larger CIDR range, new Core Network Edges will be automatically assigned `/24` and `/64` subnets from the larger CIDR. an Inside CIDR block is required for attaching Connect attachments to a Core Network Edge.
     * 
     */
    public List<String> insideCidrBlocks() {
        return this.insideCidrBlocks == null ? List.of() : this.insideCidrBlocks;
    }
    /**
     * @return Indicates whether the core network forwards traffic over multiple equal-cost routes using VPN. The value can be either `true` or `false`. The default is `true`.
     * 
     */
    public Optional<Boolean> vpnEcmpSupport() {
        return Optional.ofNullable(this.vpnEcmpSupport);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCoreNetworkPolicyDocumentCoreNetworkConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> asnRanges;
        private List<GetCoreNetworkPolicyDocumentCoreNetworkConfigurationEdgeLocation> edgeLocations;
        private @Nullable List<String> insideCidrBlocks;
        private @Nullable Boolean vpnEcmpSupport;
        public Builder() {}
        public Builder(GetCoreNetworkPolicyDocumentCoreNetworkConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.asnRanges = defaults.asnRanges;
    	      this.edgeLocations = defaults.edgeLocations;
    	      this.insideCidrBlocks = defaults.insideCidrBlocks;
    	      this.vpnEcmpSupport = defaults.vpnEcmpSupport;
        }

        @CustomType.Setter
        public Builder asnRanges(List<String> asnRanges) {
            this.asnRanges = Objects.requireNonNull(asnRanges);
            return this;
        }
        public Builder asnRanges(String... asnRanges) {
            return asnRanges(List.of(asnRanges));
        }
        @CustomType.Setter
        public Builder edgeLocations(List<GetCoreNetworkPolicyDocumentCoreNetworkConfigurationEdgeLocation> edgeLocations) {
            this.edgeLocations = Objects.requireNonNull(edgeLocations);
            return this;
        }
        public Builder edgeLocations(GetCoreNetworkPolicyDocumentCoreNetworkConfigurationEdgeLocation... edgeLocations) {
            return edgeLocations(List.of(edgeLocations));
        }
        @CustomType.Setter
        public Builder insideCidrBlocks(@Nullable List<String> insideCidrBlocks) {
            this.insideCidrBlocks = insideCidrBlocks;
            return this;
        }
        public Builder insideCidrBlocks(String... insideCidrBlocks) {
            return insideCidrBlocks(List.of(insideCidrBlocks));
        }
        @CustomType.Setter
        public Builder vpnEcmpSupport(@Nullable Boolean vpnEcmpSupport) {
            this.vpnEcmpSupport = vpnEcmpSupport;
            return this;
        }
        public GetCoreNetworkPolicyDocumentCoreNetworkConfiguration build() {
            final var o = new GetCoreNetworkPolicyDocumentCoreNetworkConfiguration();
            o.asnRanges = asnRanges;
            o.edgeLocations = edgeLocations;
            o.insideCidrBlocks = insideCidrBlocks;
            o.vpnEcmpSupport = vpnEcmpSupport;
            return o;
        }
    }
}
