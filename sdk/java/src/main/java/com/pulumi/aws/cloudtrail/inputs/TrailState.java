// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudtrail.inputs;

import com.pulumi.aws.cloudtrail.inputs.TrailAdvancedEventSelectorArgs;
import com.pulumi.aws.cloudtrail.inputs.TrailEventSelectorArgs;
import com.pulumi.aws.cloudtrail.inputs.TrailInsightSelectorArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TrailState extends com.pulumi.resources.ResourceArgs {

    public static final TrailState Empty = new TrailState();

    @Import(name="advancedEventSelectors")
    private @Nullable Output<List<TrailAdvancedEventSelectorArgs>> advancedEventSelectors;

    public Optional<Output<List<TrailAdvancedEventSelectorArgs>>> advancedEventSelectors() {
        return Optional.ofNullable(this.advancedEventSelectors);
    }

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="cloudWatchLogsGroupArn")
    private @Nullable Output<String> cloudWatchLogsGroupArn;

    public Optional<Output<String>> cloudWatchLogsGroupArn() {
        return Optional.ofNullable(this.cloudWatchLogsGroupArn);
    }

    @Import(name="cloudWatchLogsRoleArn")
    private @Nullable Output<String> cloudWatchLogsRoleArn;

    public Optional<Output<String>> cloudWatchLogsRoleArn() {
        return Optional.ofNullable(this.cloudWatchLogsRoleArn);
    }

    @Import(name="enableLogFileValidation")
    private @Nullable Output<Boolean> enableLogFileValidation;

    public Optional<Output<Boolean>> enableLogFileValidation() {
        return Optional.ofNullable(this.enableLogFileValidation);
    }

    @Import(name="enableLogging")
    private @Nullable Output<Boolean> enableLogging;

    public Optional<Output<Boolean>> enableLogging() {
        return Optional.ofNullable(this.enableLogging);
    }

    @Import(name="eventSelectors")
    private @Nullable Output<List<TrailEventSelectorArgs>> eventSelectors;

    public Optional<Output<List<TrailEventSelectorArgs>>> eventSelectors() {
        return Optional.ofNullable(this.eventSelectors);
    }

    @Import(name="homeRegion")
    private @Nullable Output<String> homeRegion;

    public Optional<Output<String>> homeRegion() {
        return Optional.ofNullable(this.homeRegion);
    }

    @Import(name="includeGlobalServiceEvents")
    private @Nullable Output<Boolean> includeGlobalServiceEvents;

    public Optional<Output<Boolean>> includeGlobalServiceEvents() {
        return Optional.ofNullable(this.includeGlobalServiceEvents);
    }

    @Import(name="insightSelectors")
    private @Nullable Output<List<TrailInsightSelectorArgs>> insightSelectors;

    public Optional<Output<List<TrailInsightSelectorArgs>>> insightSelectors() {
        return Optional.ofNullable(this.insightSelectors);
    }

    @Import(name="isMultiRegionTrail")
    private @Nullable Output<Boolean> isMultiRegionTrail;

    public Optional<Output<Boolean>> isMultiRegionTrail() {
        return Optional.ofNullable(this.isMultiRegionTrail);
    }

    @Import(name="isOrganizationTrail")
    private @Nullable Output<Boolean> isOrganizationTrail;

    public Optional<Output<Boolean>> isOrganizationTrail() {
        return Optional.ofNullable(this.isOrganizationTrail);
    }

    @Import(name="kmsKeyId")
    private @Nullable Output<String> kmsKeyId;

    public Optional<Output<String>> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="s3BucketName")
    private @Nullable Output<String> s3BucketName;

    public Optional<Output<String>> s3BucketName() {
        return Optional.ofNullable(this.s3BucketName);
    }

    @Import(name="s3KeyPrefix")
    private @Nullable Output<String> s3KeyPrefix;

    public Optional<Output<String>> s3KeyPrefix() {
        return Optional.ofNullable(this.s3KeyPrefix);
    }

    @Import(name="snsTopicName")
    private @Nullable Output<String> snsTopicName;

    public Optional<Output<String>> snsTopicName() {
        return Optional.ofNullable(this.snsTopicName);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private TrailState() {}

    private TrailState(TrailState $) {
        this.advancedEventSelectors = $.advancedEventSelectors;
        this.arn = $.arn;
        this.cloudWatchLogsGroupArn = $.cloudWatchLogsGroupArn;
        this.cloudWatchLogsRoleArn = $.cloudWatchLogsRoleArn;
        this.enableLogFileValidation = $.enableLogFileValidation;
        this.enableLogging = $.enableLogging;
        this.eventSelectors = $.eventSelectors;
        this.homeRegion = $.homeRegion;
        this.includeGlobalServiceEvents = $.includeGlobalServiceEvents;
        this.insightSelectors = $.insightSelectors;
        this.isMultiRegionTrail = $.isMultiRegionTrail;
        this.isOrganizationTrail = $.isOrganizationTrail;
        this.kmsKeyId = $.kmsKeyId;
        this.name = $.name;
        this.s3BucketName = $.s3BucketName;
        this.s3KeyPrefix = $.s3KeyPrefix;
        this.snsTopicName = $.snsTopicName;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TrailState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TrailState $;

        public Builder() {
            $ = new TrailState();
        }

        public Builder(TrailState defaults) {
            $ = new TrailState(Objects.requireNonNull(defaults));
        }

        public Builder advancedEventSelectors(@Nullable Output<List<TrailAdvancedEventSelectorArgs>> advancedEventSelectors) {
            $.advancedEventSelectors = advancedEventSelectors;
            return this;
        }

        public Builder advancedEventSelectors(List<TrailAdvancedEventSelectorArgs> advancedEventSelectors) {
            return advancedEventSelectors(Output.of(advancedEventSelectors));
        }

        public Builder advancedEventSelectors(TrailAdvancedEventSelectorArgs... advancedEventSelectors) {
            return advancedEventSelectors(List.of(advancedEventSelectors));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder cloudWatchLogsGroupArn(@Nullable Output<String> cloudWatchLogsGroupArn) {
            $.cloudWatchLogsGroupArn = cloudWatchLogsGroupArn;
            return this;
        }

        public Builder cloudWatchLogsGroupArn(String cloudWatchLogsGroupArn) {
            return cloudWatchLogsGroupArn(Output.of(cloudWatchLogsGroupArn));
        }

        public Builder cloudWatchLogsRoleArn(@Nullable Output<String> cloudWatchLogsRoleArn) {
            $.cloudWatchLogsRoleArn = cloudWatchLogsRoleArn;
            return this;
        }

        public Builder cloudWatchLogsRoleArn(String cloudWatchLogsRoleArn) {
            return cloudWatchLogsRoleArn(Output.of(cloudWatchLogsRoleArn));
        }

        public Builder enableLogFileValidation(@Nullable Output<Boolean> enableLogFileValidation) {
            $.enableLogFileValidation = enableLogFileValidation;
            return this;
        }

        public Builder enableLogFileValidation(Boolean enableLogFileValidation) {
            return enableLogFileValidation(Output.of(enableLogFileValidation));
        }

        public Builder enableLogging(@Nullable Output<Boolean> enableLogging) {
            $.enableLogging = enableLogging;
            return this;
        }

        public Builder enableLogging(Boolean enableLogging) {
            return enableLogging(Output.of(enableLogging));
        }

        public Builder eventSelectors(@Nullable Output<List<TrailEventSelectorArgs>> eventSelectors) {
            $.eventSelectors = eventSelectors;
            return this;
        }

        public Builder eventSelectors(List<TrailEventSelectorArgs> eventSelectors) {
            return eventSelectors(Output.of(eventSelectors));
        }

        public Builder eventSelectors(TrailEventSelectorArgs... eventSelectors) {
            return eventSelectors(List.of(eventSelectors));
        }

        public Builder homeRegion(@Nullable Output<String> homeRegion) {
            $.homeRegion = homeRegion;
            return this;
        }

        public Builder homeRegion(String homeRegion) {
            return homeRegion(Output.of(homeRegion));
        }

        public Builder includeGlobalServiceEvents(@Nullable Output<Boolean> includeGlobalServiceEvents) {
            $.includeGlobalServiceEvents = includeGlobalServiceEvents;
            return this;
        }

        public Builder includeGlobalServiceEvents(Boolean includeGlobalServiceEvents) {
            return includeGlobalServiceEvents(Output.of(includeGlobalServiceEvents));
        }

        public Builder insightSelectors(@Nullable Output<List<TrailInsightSelectorArgs>> insightSelectors) {
            $.insightSelectors = insightSelectors;
            return this;
        }

        public Builder insightSelectors(List<TrailInsightSelectorArgs> insightSelectors) {
            return insightSelectors(Output.of(insightSelectors));
        }

        public Builder insightSelectors(TrailInsightSelectorArgs... insightSelectors) {
            return insightSelectors(List.of(insightSelectors));
        }

        public Builder isMultiRegionTrail(@Nullable Output<Boolean> isMultiRegionTrail) {
            $.isMultiRegionTrail = isMultiRegionTrail;
            return this;
        }

        public Builder isMultiRegionTrail(Boolean isMultiRegionTrail) {
            return isMultiRegionTrail(Output.of(isMultiRegionTrail));
        }

        public Builder isOrganizationTrail(@Nullable Output<Boolean> isOrganizationTrail) {
            $.isOrganizationTrail = isOrganizationTrail;
            return this;
        }

        public Builder isOrganizationTrail(Boolean isOrganizationTrail) {
            return isOrganizationTrail(Output.of(isOrganizationTrail));
        }

        public Builder kmsKeyId(@Nullable Output<String> kmsKeyId) {
            $.kmsKeyId = kmsKeyId;
            return this;
        }

        public Builder kmsKeyId(String kmsKeyId) {
            return kmsKeyId(Output.of(kmsKeyId));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder s3BucketName(@Nullable Output<String> s3BucketName) {
            $.s3BucketName = s3BucketName;
            return this;
        }

        public Builder s3BucketName(String s3BucketName) {
            return s3BucketName(Output.of(s3BucketName));
        }

        public Builder s3KeyPrefix(@Nullable Output<String> s3KeyPrefix) {
            $.s3KeyPrefix = s3KeyPrefix;
            return this;
        }

        public Builder s3KeyPrefix(String s3KeyPrefix) {
            return s3KeyPrefix(Output.of(s3KeyPrefix));
        }

        public Builder snsTopicName(@Nullable Output<String> snsTopicName) {
            $.snsTopicName = snsTopicName;
            return this;
        }

        public Builder snsTopicName(String snsTopicName) {
            return snsTopicName(Output.of(snsTopicName));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public TrailState build() {
            return $;
        }
    }

}
