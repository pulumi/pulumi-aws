// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ssm.outputs;

import com.pulumi.aws.ssm.outputs.GetContactsRotationRecurrenceMonthlySettingHandOffTime;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetContactsRotationRecurrenceMonthlySetting {
    private Integer dayOfMonth;
    private List<GetContactsRotationRecurrenceMonthlySettingHandOffTime> handOffTimes;

    private GetContactsRotationRecurrenceMonthlySetting() {}
    public Integer dayOfMonth() {
        return this.dayOfMonth;
    }
    public List<GetContactsRotationRecurrenceMonthlySettingHandOffTime> handOffTimes() {
        return this.handOffTimes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetContactsRotationRecurrenceMonthlySetting defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer dayOfMonth;
        private List<GetContactsRotationRecurrenceMonthlySettingHandOffTime> handOffTimes;
        public Builder() {}
        public Builder(GetContactsRotationRecurrenceMonthlySetting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dayOfMonth = defaults.dayOfMonth;
    	      this.handOffTimes = defaults.handOffTimes;
        }

        @CustomType.Setter
        public Builder dayOfMonth(Integer dayOfMonth) {
            if (dayOfMonth == null) {
              throw new MissingRequiredPropertyException("GetContactsRotationRecurrenceMonthlySetting", "dayOfMonth");
            }
            this.dayOfMonth = dayOfMonth;
            return this;
        }
        @CustomType.Setter
        public Builder handOffTimes(List<GetContactsRotationRecurrenceMonthlySettingHandOffTime> handOffTimes) {
            if (handOffTimes == null) {
              throw new MissingRequiredPropertyException("GetContactsRotationRecurrenceMonthlySetting", "handOffTimes");
            }
            this.handOffTimes = handOffTimes;
            return this;
        }
        public Builder handOffTimes(GetContactsRotationRecurrenceMonthlySettingHandOffTime... handOffTimes) {
            return handOffTimes(List.of(handOffTimes));
        }
        public GetContactsRotationRecurrenceMonthlySetting build() {
            final var _resultValue = new GetContactsRotationRecurrenceMonthlySetting();
            _resultValue.dayOfMonth = dayOfMonth;
            _resultValue.handOffTimes = handOffTimes;
            return _resultValue;
        }
    }
}
