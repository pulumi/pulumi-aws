// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.batch.inputs;

import com.pulumi.aws.batch.inputs.JobDefinitionEksPropertiesPodPropertiesContainersArgs;
import com.pulumi.aws.batch.inputs.JobDefinitionEksPropertiesPodPropertiesImagePullSecretArgs;
import com.pulumi.aws.batch.inputs.JobDefinitionEksPropertiesPodPropertiesInitContainerArgs;
import com.pulumi.aws.batch.inputs.JobDefinitionEksPropertiesPodPropertiesMetadataArgs;
import com.pulumi.aws.batch.inputs.JobDefinitionEksPropertiesPodPropertiesVolumeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobDefinitionEksPropertiesPodPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobDefinitionEksPropertiesPodPropertiesArgs Empty = new JobDefinitionEksPropertiesPodPropertiesArgs();

    /**
     * Properties of the container that&#39;s used on the Amazon EKS pod. See containers below.
     * 
     */
    @Import(name="containers", required=true)
    private Output<JobDefinitionEksPropertiesPodPropertiesContainersArgs> containers;

    /**
     * @return Properties of the container that&#39;s used on the Amazon EKS pod. See containers below.
     * 
     */
    public Output<JobDefinitionEksPropertiesPodPropertiesContainersArgs> containers() {
        return this.containers;
    }

    /**
     * DNS policy for the pod. The default value is `ClusterFirst`. If the `host_network` argument is not specified, the default is `ClusterFirstWithHostNet`. `ClusterFirst` indicates that any DNS query that does not match the configured cluster domain suffix is forwarded to the upstream nameserver inherited from the node. For more information, see Pod&#39;s DNS policy in the Kubernetes documentation.
     * 
     */
    @Import(name="dnsPolicy")
    private @Nullable Output<String> dnsPolicy;

    /**
     * @return DNS policy for the pod. The default value is `ClusterFirst`. If the `host_network` argument is not specified, the default is `ClusterFirstWithHostNet`. `ClusterFirst` indicates that any DNS query that does not match the configured cluster domain suffix is forwarded to the upstream nameserver inherited from the node. For more information, see Pod&#39;s DNS policy in the Kubernetes documentation.
     * 
     */
    public Optional<Output<String>> dnsPolicy() {
        return Optional.ofNullable(this.dnsPolicy);
    }

    /**
     * Whether the pod uses the hosts&#39; network IP address. The default value is `true`. Setting this to `false` enables the Kubernetes pod networking model. Most AWS Batch workloads are egress-only and don&#39;t require the overhead of IP allocation for each pod for incoming connections.
     * 
     */
    @Import(name="hostNetwork")
    private @Nullable Output<Boolean> hostNetwork;

    /**
     * @return Whether the pod uses the hosts&#39; network IP address. The default value is `true`. Setting this to `false` enables the Kubernetes pod networking model. Most AWS Batch workloads are egress-only and don&#39;t require the overhead of IP allocation for each pod for incoming connections.
     * 
     */
    public Optional<Output<Boolean>> hostNetwork() {
        return Optional.ofNullable(this.hostNetwork);
    }

    /**
     * List of Kubernetes secret resources. See `image_pull_secret` below.
     * 
     */
    @Import(name="imagePullSecrets")
    private @Nullable Output<List<JobDefinitionEksPropertiesPodPropertiesImagePullSecretArgs>> imagePullSecrets;

    /**
     * @return List of Kubernetes secret resources. See `image_pull_secret` below.
     * 
     */
    public Optional<Output<List<JobDefinitionEksPropertiesPodPropertiesImagePullSecretArgs>>> imagePullSecrets() {
        return Optional.ofNullable(this.imagePullSecrets);
    }

    /**
     * Containers which run before application containers, always runs to completion, and must complete successfully before the next container starts. These containers are registered with the Amazon EKS Connector agent and persists the registration information in the Kubernetes backend data store. See containers below.
     * 
     */
    @Import(name="initContainers")
    private @Nullable Output<List<JobDefinitionEksPropertiesPodPropertiesInitContainerArgs>> initContainers;

    /**
     * @return Containers which run before application containers, always runs to completion, and must complete successfully before the next container starts. These containers are registered with the Amazon EKS Connector agent and persists the registration information in the Kubernetes backend data store. See containers below.
     * 
     */
    public Optional<Output<List<JobDefinitionEksPropertiesPodPropertiesInitContainerArgs>>> initContainers() {
        return Optional.ofNullable(this.initContainers);
    }

    /**
     * Metadata about the Kubernetes pod.
     * 
     */
    @Import(name="metadata")
    private @Nullable Output<JobDefinitionEksPropertiesPodPropertiesMetadataArgs> metadata;

    /**
     * @return Metadata about the Kubernetes pod.
     * 
     */
    public Optional<Output<JobDefinitionEksPropertiesPodPropertiesMetadataArgs>> metadata() {
        return Optional.ofNullable(this.metadata);
    }

    /**
     * Name of the service account that&#39;s used to run the pod.
     * 
     */
    @Import(name="serviceAccountName")
    private @Nullable Output<String> serviceAccountName;

    /**
     * @return Name of the service account that&#39;s used to run the pod.
     * 
     */
    public Optional<Output<String>> serviceAccountName() {
        return Optional.ofNullable(this.serviceAccountName);
    }

    /**
     * Indicates if the processes in a container are shared, or visible, to other containers in the same pod.
     * 
     */
    @Import(name="shareProcessNamespace")
    private @Nullable Output<Boolean> shareProcessNamespace;

    /**
     * @return Indicates if the processes in a container are shared, or visible, to other containers in the same pod.
     * 
     */
    public Optional<Output<Boolean>> shareProcessNamespace() {
        return Optional.ofNullable(this.shareProcessNamespace);
    }

    /**
     * Volumes for a job definition that uses Amazon EKS resources. AWS Batch supports emptyDir, hostPath, and secret volume types.
     * 
     */
    @Import(name="volumes")
    private @Nullable Output<List<JobDefinitionEksPropertiesPodPropertiesVolumeArgs>> volumes;

    /**
     * @return Volumes for a job definition that uses Amazon EKS resources. AWS Batch supports emptyDir, hostPath, and secret volume types.
     * 
     */
    public Optional<Output<List<JobDefinitionEksPropertiesPodPropertiesVolumeArgs>>> volumes() {
        return Optional.ofNullable(this.volumes);
    }

    private JobDefinitionEksPropertiesPodPropertiesArgs() {}

    private JobDefinitionEksPropertiesPodPropertiesArgs(JobDefinitionEksPropertiesPodPropertiesArgs $) {
        this.containers = $.containers;
        this.dnsPolicy = $.dnsPolicy;
        this.hostNetwork = $.hostNetwork;
        this.imagePullSecrets = $.imagePullSecrets;
        this.initContainers = $.initContainers;
        this.metadata = $.metadata;
        this.serviceAccountName = $.serviceAccountName;
        this.shareProcessNamespace = $.shareProcessNamespace;
        this.volumes = $.volumes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobDefinitionEksPropertiesPodPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobDefinitionEksPropertiesPodPropertiesArgs $;

        public Builder() {
            $ = new JobDefinitionEksPropertiesPodPropertiesArgs();
        }

        public Builder(JobDefinitionEksPropertiesPodPropertiesArgs defaults) {
            $ = new JobDefinitionEksPropertiesPodPropertiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param containers Properties of the container that&#39;s used on the Amazon EKS pod. See containers below.
         * 
         * @return builder
         * 
         */
        public Builder containers(Output<JobDefinitionEksPropertiesPodPropertiesContainersArgs> containers) {
            $.containers = containers;
            return this;
        }

        /**
         * @param containers Properties of the container that&#39;s used on the Amazon EKS pod. See containers below.
         * 
         * @return builder
         * 
         */
        public Builder containers(JobDefinitionEksPropertiesPodPropertiesContainersArgs containers) {
            return containers(Output.of(containers));
        }

        /**
         * @param dnsPolicy DNS policy for the pod. The default value is `ClusterFirst`. If the `host_network` argument is not specified, the default is `ClusterFirstWithHostNet`. `ClusterFirst` indicates that any DNS query that does not match the configured cluster domain suffix is forwarded to the upstream nameserver inherited from the node. For more information, see Pod&#39;s DNS policy in the Kubernetes documentation.
         * 
         * @return builder
         * 
         */
        public Builder dnsPolicy(@Nullable Output<String> dnsPolicy) {
            $.dnsPolicy = dnsPolicy;
            return this;
        }

        /**
         * @param dnsPolicy DNS policy for the pod. The default value is `ClusterFirst`. If the `host_network` argument is not specified, the default is `ClusterFirstWithHostNet`. `ClusterFirst` indicates that any DNS query that does not match the configured cluster domain suffix is forwarded to the upstream nameserver inherited from the node. For more information, see Pod&#39;s DNS policy in the Kubernetes documentation.
         * 
         * @return builder
         * 
         */
        public Builder dnsPolicy(String dnsPolicy) {
            return dnsPolicy(Output.of(dnsPolicy));
        }

        /**
         * @param hostNetwork Whether the pod uses the hosts&#39; network IP address. The default value is `true`. Setting this to `false` enables the Kubernetes pod networking model. Most AWS Batch workloads are egress-only and don&#39;t require the overhead of IP allocation for each pod for incoming connections.
         * 
         * @return builder
         * 
         */
        public Builder hostNetwork(@Nullable Output<Boolean> hostNetwork) {
            $.hostNetwork = hostNetwork;
            return this;
        }

        /**
         * @param hostNetwork Whether the pod uses the hosts&#39; network IP address. The default value is `true`. Setting this to `false` enables the Kubernetes pod networking model. Most AWS Batch workloads are egress-only and don&#39;t require the overhead of IP allocation for each pod for incoming connections.
         * 
         * @return builder
         * 
         */
        public Builder hostNetwork(Boolean hostNetwork) {
            return hostNetwork(Output.of(hostNetwork));
        }

        /**
         * @param imagePullSecrets List of Kubernetes secret resources. See `image_pull_secret` below.
         * 
         * @return builder
         * 
         */
        public Builder imagePullSecrets(@Nullable Output<List<JobDefinitionEksPropertiesPodPropertiesImagePullSecretArgs>> imagePullSecrets) {
            $.imagePullSecrets = imagePullSecrets;
            return this;
        }

        /**
         * @param imagePullSecrets List of Kubernetes secret resources. See `image_pull_secret` below.
         * 
         * @return builder
         * 
         */
        public Builder imagePullSecrets(List<JobDefinitionEksPropertiesPodPropertiesImagePullSecretArgs> imagePullSecrets) {
            return imagePullSecrets(Output.of(imagePullSecrets));
        }

        /**
         * @param imagePullSecrets List of Kubernetes secret resources. See `image_pull_secret` below.
         * 
         * @return builder
         * 
         */
        public Builder imagePullSecrets(JobDefinitionEksPropertiesPodPropertiesImagePullSecretArgs... imagePullSecrets) {
            return imagePullSecrets(List.of(imagePullSecrets));
        }

        /**
         * @param initContainers Containers which run before application containers, always runs to completion, and must complete successfully before the next container starts. These containers are registered with the Amazon EKS Connector agent and persists the registration information in the Kubernetes backend data store. See containers below.
         * 
         * @return builder
         * 
         */
        public Builder initContainers(@Nullable Output<List<JobDefinitionEksPropertiesPodPropertiesInitContainerArgs>> initContainers) {
            $.initContainers = initContainers;
            return this;
        }

        /**
         * @param initContainers Containers which run before application containers, always runs to completion, and must complete successfully before the next container starts. These containers are registered with the Amazon EKS Connector agent and persists the registration information in the Kubernetes backend data store. See containers below.
         * 
         * @return builder
         * 
         */
        public Builder initContainers(List<JobDefinitionEksPropertiesPodPropertiesInitContainerArgs> initContainers) {
            return initContainers(Output.of(initContainers));
        }

        /**
         * @param initContainers Containers which run before application containers, always runs to completion, and must complete successfully before the next container starts. These containers are registered with the Amazon EKS Connector agent and persists the registration information in the Kubernetes backend data store. See containers below.
         * 
         * @return builder
         * 
         */
        public Builder initContainers(JobDefinitionEksPropertiesPodPropertiesInitContainerArgs... initContainers) {
            return initContainers(List.of(initContainers));
        }

        /**
         * @param metadata Metadata about the Kubernetes pod.
         * 
         * @return builder
         * 
         */
        public Builder metadata(@Nullable Output<JobDefinitionEksPropertiesPodPropertiesMetadataArgs> metadata) {
            $.metadata = metadata;
            return this;
        }

        /**
         * @param metadata Metadata about the Kubernetes pod.
         * 
         * @return builder
         * 
         */
        public Builder metadata(JobDefinitionEksPropertiesPodPropertiesMetadataArgs metadata) {
            return metadata(Output.of(metadata));
        }

        /**
         * @param serviceAccountName Name of the service account that&#39;s used to run the pod.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccountName(@Nullable Output<String> serviceAccountName) {
            $.serviceAccountName = serviceAccountName;
            return this;
        }

        /**
         * @param serviceAccountName Name of the service account that&#39;s used to run the pod.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccountName(String serviceAccountName) {
            return serviceAccountName(Output.of(serviceAccountName));
        }

        /**
         * @param shareProcessNamespace Indicates if the processes in a container are shared, or visible, to other containers in the same pod.
         * 
         * @return builder
         * 
         */
        public Builder shareProcessNamespace(@Nullable Output<Boolean> shareProcessNamespace) {
            $.shareProcessNamespace = shareProcessNamespace;
            return this;
        }

        /**
         * @param shareProcessNamespace Indicates if the processes in a container are shared, or visible, to other containers in the same pod.
         * 
         * @return builder
         * 
         */
        public Builder shareProcessNamespace(Boolean shareProcessNamespace) {
            return shareProcessNamespace(Output.of(shareProcessNamespace));
        }

        /**
         * @param volumes Volumes for a job definition that uses Amazon EKS resources. AWS Batch supports emptyDir, hostPath, and secret volume types.
         * 
         * @return builder
         * 
         */
        public Builder volumes(@Nullable Output<List<JobDefinitionEksPropertiesPodPropertiesVolumeArgs>> volumes) {
            $.volumes = volumes;
            return this;
        }

        /**
         * @param volumes Volumes for a job definition that uses Amazon EKS resources. AWS Batch supports emptyDir, hostPath, and secret volume types.
         * 
         * @return builder
         * 
         */
        public Builder volumes(List<JobDefinitionEksPropertiesPodPropertiesVolumeArgs> volumes) {
            return volumes(Output.of(volumes));
        }

        /**
         * @param volumes Volumes for a job definition that uses Amazon EKS resources. AWS Batch supports emptyDir, hostPath, and secret volume types.
         * 
         * @return builder
         * 
         */
        public Builder volumes(JobDefinitionEksPropertiesPodPropertiesVolumeArgs... volumes) {
            return volumes(List.of(volumes));
        }

        public JobDefinitionEksPropertiesPodPropertiesArgs build() {
            if ($.containers == null) {
                throw new MissingRequiredPropertyException("JobDefinitionEksPropertiesPodPropertiesArgs", "containers");
            }
            return $;
        }
    }

}
