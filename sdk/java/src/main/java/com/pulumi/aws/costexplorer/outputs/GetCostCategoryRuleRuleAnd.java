// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.costexplorer.outputs;

import com.pulumi.aws.costexplorer.outputs.GetCostCategoryRuleRuleAndCostCategory;
import com.pulumi.aws.costexplorer.outputs.GetCostCategoryRuleRuleAndDimension;
import com.pulumi.aws.costexplorer.outputs.GetCostCategoryRuleRuleAndTag;
import com.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetCostCategoryRuleRuleAnd {
    /**
     * @return Configuration block for the filter that&#39;s based on `CostCategory` values. See below.
     * 
     */
    private @Nullable List<GetCostCategoryRuleRuleAndCostCategory> costCategories;
    /**
     * @return Configuration block for the specific `Dimension` to use for `Expression`. See below.
     * 
     */
    private @Nullable List<GetCostCategoryRuleRuleAndDimension> dimensions;
    /**
     * @return Configuration block for the specific `Tag` to use for `Expression`. See below.
     * 
     */
    private @Nullable List<GetCostCategoryRuleRuleAndTag> tags;

    private GetCostCategoryRuleRuleAnd() {}
    /**
     * @return Configuration block for the filter that&#39;s based on `CostCategory` values. See below.
     * 
     */
    public List<GetCostCategoryRuleRuleAndCostCategory> costCategories() {
        return this.costCategories == null ? List.of() : this.costCategories;
    }
    /**
     * @return Configuration block for the specific `Dimension` to use for `Expression`. See below.
     * 
     */
    public List<GetCostCategoryRuleRuleAndDimension> dimensions() {
        return this.dimensions == null ? List.of() : this.dimensions;
    }
    /**
     * @return Configuration block for the specific `Tag` to use for `Expression`. See below.
     * 
     */
    public List<GetCostCategoryRuleRuleAndTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCostCategoryRuleRuleAnd defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetCostCategoryRuleRuleAndCostCategory> costCategories;
        private @Nullable List<GetCostCategoryRuleRuleAndDimension> dimensions;
        private @Nullable List<GetCostCategoryRuleRuleAndTag> tags;
        public Builder() {}
        public Builder(GetCostCategoryRuleRuleAnd defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.costCategories = defaults.costCategories;
    	      this.dimensions = defaults.dimensions;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder costCategories(@Nullable List<GetCostCategoryRuleRuleAndCostCategory> costCategories) {
            this.costCategories = costCategories;
            return this;
        }
        public Builder costCategories(GetCostCategoryRuleRuleAndCostCategory... costCategories) {
            return costCategories(List.of(costCategories));
        }
        @CustomType.Setter
        public Builder dimensions(@Nullable List<GetCostCategoryRuleRuleAndDimension> dimensions) {
            this.dimensions = dimensions;
            return this;
        }
        public Builder dimensions(GetCostCategoryRuleRuleAndDimension... dimensions) {
            return dimensions(List.of(dimensions));
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<GetCostCategoryRuleRuleAndTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(GetCostCategoryRuleRuleAndTag... tags) {
            return tags(List.of(tags));
        }
        public GetCostCategoryRuleRuleAnd build() {
            final var o = new GetCostCategoryRuleRuleAnd();
            o.costCategories = costCategories;
            o.dimensions = dimensions;
            o.tags = tags;
            return o;
        }
    }
}
