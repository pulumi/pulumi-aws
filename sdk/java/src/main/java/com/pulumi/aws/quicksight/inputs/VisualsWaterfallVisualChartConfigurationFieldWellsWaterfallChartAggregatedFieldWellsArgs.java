// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.DimensionFieldSchemaArgs;
import com.pulumi.aws.quicksight.inputs.MeasureFieldSchemaArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VisualsWaterfallVisualChartConfigurationFieldWellsWaterfallChartAggregatedFieldWellsArgs extends com.pulumi.resources.ResourceArgs {

    public static final VisualsWaterfallVisualChartConfigurationFieldWellsWaterfallChartAggregatedFieldWellsArgs Empty = new VisualsWaterfallVisualChartConfigurationFieldWellsWaterfallChartAggregatedFieldWellsArgs();

    @Import(name="breakdowns")
    private @Nullable Output<List<DimensionFieldSchemaArgs>> breakdowns;

    public Optional<Output<List<DimensionFieldSchemaArgs>>> breakdowns() {
        return Optional.ofNullable(this.breakdowns);
    }

    @Import(name="categories")
    private @Nullable Output<List<DimensionFieldSchemaArgs>> categories;

    public Optional<Output<List<DimensionFieldSchemaArgs>>> categories() {
        return Optional.ofNullable(this.categories);
    }

    @Import(name="values")
    private @Nullable Output<List<MeasureFieldSchemaArgs>> values;

    public Optional<Output<List<MeasureFieldSchemaArgs>>> values() {
        return Optional.ofNullable(this.values);
    }

    private VisualsWaterfallVisualChartConfigurationFieldWellsWaterfallChartAggregatedFieldWellsArgs() {}

    private VisualsWaterfallVisualChartConfigurationFieldWellsWaterfallChartAggregatedFieldWellsArgs(VisualsWaterfallVisualChartConfigurationFieldWellsWaterfallChartAggregatedFieldWellsArgs $) {
        this.breakdowns = $.breakdowns;
        this.categories = $.categories;
        this.values = $.values;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VisualsWaterfallVisualChartConfigurationFieldWellsWaterfallChartAggregatedFieldWellsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VisualsWaterfallVisualChartConfigurationFieldWellsWaterfallChartAggregatedFieldWellsArgs $;

        public Builder() {
            $ = new VisualsWaterfallVisualChartConfigurationFieldWellsWaterfallChartAggregatedFieldWellsArgs();
        }

        public Builder(VisualsWaterfallVisualChartConfigurationFieldWellsWaterfallChartAggregatedFieldWellsArgs defaults) {
            $ = new VisualsWaterfallVisualChartConfigurationFieldWellsWaterfallChartAggregatedFieldWellsArgs(Objects.requireNonNull(defaults));
        }

        public Builder breakdowns(@Nullable Output<List<DimensionFieldSchemaArgs>> breakdowns) {
            $.breakdowns = breakdowns;
            return this;
        }

        public Builder breakdowns(List<DimensionFieldSchemaArgs> breakdowns) {
            return breakdowns(Output.of(breakdowns));
        }

        public Builder breakdowns(DimensionFieldSchemaArgs... breakdowns) {
            return breakdowns(List.of(breakdowns));
        }

        public Builder categories(@Nullable Output<List<DimensionFieldSchemaArgs>> categories) {
            $.categories = categories;
            return this;
        }

        public Builder categories(List<DimensionFieldSchemaArgs> categories) {
            return categories(Output.of(categories));
        }

        public Builder categories(DimensionFieldSchemaArgs... categories) {
            return categories(List.of(categories));
        }

        public Builder values(@Nullable Output<List<MeasureFieldSchemaArgs>> values) {
            $.values = values;
            return this;
        }

        public Builder values(List<MeasureFieldSchemaArgs> values) {
            return values(Output.of(values));
        }

        public Builder values(MeasureFieldSchemaArgs... values) {
            return values(List.of(values));
        }

        public VisualsWaterfallVisualChartConfigurationFieldWellsWaterfallChartAggregatedFieldWellsArgs build() {
            return $;
        }
    }

}
