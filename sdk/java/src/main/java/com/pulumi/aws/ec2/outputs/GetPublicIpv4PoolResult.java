// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.outputs;

import com.pulumi.aws.ec2.outputs.GetPublicIpv4PoolPoolAddressRange;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetPublicIpv4PoolResult {
    /**
     * @return Description of the pool, if any.
     * 
     */
    private String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Name of the location from which the address pool is advertised.
     * * pool_address_ranges` - List of Address Ranges in the Pool; each address range record contains:
     * 
     */
    private String networkBorderGroup;
    private List<GetPublicIpv4PoolPoolAddressRange> poolAddressRanges;
    private String poolId;
    /**
     * @return Any tags for the address pool.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return Total number of addresses in the pool.
     * 
     */
    private Integer totalAddressCount;
    /**
     * @return Total number of available addresses in the pool.
     * 
     */
    private Integer totalAvailableAddressCount;

    private GetPublicIpv4PoolResult() {}
    /**
     * @return Description of the pool, if any.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Name of the location from which the address pool is advertised.
     * * pool_address_ranges` - List of Address Ranges in the Pool; each address range record contains:
     * 
     */
    public String networkBorderGroup() {
        return this.networkBorderGroup;
    }
    public List<GetPublicIpv4PoolPoolAddressRange> poolAddressRanges() {
        return this.poolAddressRanges;
    }
    public String poolId() {
        return this.poolId;
    }
    /**
     * @return Any tags for the address pool.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return Total number of addresses in the pool.
     * 
     */
    public Integer totalAddressCount() {
        return this.totalAddressCount;
    }
    /**
     * @return Total number of available addresses in the pool.
     * 
     */
    public Integer totalAvailableAddressCount() {
        return this.totalAvailableAddressCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPublicIpv4PoolResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String id;
        private String networkBorderGroup;
        private List<GetPublicIpv4PoolPoolAddressRange> poolAddressRanges;
        private String poolId;
        private Map<String,String> tags;
        private Integer totalAddressCount;
        private Integer totalAvailableAddressCount;
        public Builder() {}
        public Builder(GetPublicIpv4PoolResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.networkBorderGroup = defaults.networkBorderGroup;
    	      this.poolAddressRanges = defaults.poolAddressRanges;
    	      this.poolId = defaults.poolId;
    	      this.tags = defaults.tags;
    	      this.totalAddressCount = defaults.totalAddressCount;
    	      this.totalAvailableAddressCount = defaults.totalAvailableAddressCount;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetPublicIpv4PoolResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPublicIpv4PoolResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder networkBorderGroup(String networkBorderGroup) {
            if (networkBorderGroup == null) {
              throw new MissingRequiredPropertyException("GetPublicIpv4PoolResult", "networkBorderGroup");
            }
            this.networkBorderGroup = networkBorderGroup;
            return this;
        }
        @CustomType.Setter
        public Builder poolAddressRanges(List<GetPublicIpv4PoolPoolAddressRange> poolAddressRanges) {
            if (poolAddressRanges == null) {
              throw new MissingRequiredPropertyException("GetPublicIpv4PoolResult", "poolAddressRanges");
            }
            this.poolAddressRanges = poolAddressRanges;
            return this;
        }
        public Builder poolAddressRanges(GetPublicIpv4PoolPoolAddressRange... poolAddressRanges) {
            return poolAddressRanges(List.of(poolAddressRanges));
        }
        @CustomType.Setter
        public Builder poolId(String poolId) {
            if (poolId == null) {
              throw new MissingRequiredPropertyException("GetPublicIpv4PoolResult", "poolId");
            }
            this.poolId = poolId;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetPublicIpv4PoolResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder totalAddressCount(Integer totalAddressCount) {
            if (totalAddressCount == null) {
              throw new MissingRequiredPropertyException("GetPublicIpv4PoolResult", "totalAddressCount");
            }
            this.totalAddressCount = totalAddressCount;
            return this;
        }
        @CustomType.Setter
        public Builder totalAvailableAddressCount(Integer totalAvailableAddressCount) {
            if (totalAvailableAddressCount == null) {
              throw new MissingRequiredPropertyException("GetPublicIpv4PoolResult", "totalAvailableAddressCount");
            }
            this.totalAvailableAddressCount = totalAvailableAddressCount;
            return this;
        }
        public GetPublicIpv4PoolResult build() {
            final var _resultValue = new GetPublicIpv4PoolResult();
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.networkBorderGroup = networkBorderGroup;
            _resultValue.poolAddressRanges = poolAddressRanges;
            _resultValue.poolId = poolId;
            _resultValue.tags = tags;
            _resultValue.totalAddressCount = totalAddressCount;
            _resultValue.totalAvailableAddressCount = totalAvailableAddressCount;
            return _resultValue;
        }
    }
}
