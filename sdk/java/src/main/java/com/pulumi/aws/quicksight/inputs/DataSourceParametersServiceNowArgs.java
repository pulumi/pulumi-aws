// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class DataSourceParametersServiceNowArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataSourceParametersServiceNowArgs Empty = new DataSourceParametersServiceNowArgs();

    /**
     * The base URL of the Jira instance&#39;s site to which to connect.
     * 
     */
    @Import(name="siteBaseUrl", required=true)
    private Output<String> siteBaseUrl;

    /**
     * @return The base URL of the Jira instance&#39;s site to which to connect.
     * 
     */
    public Output<String> siteBaseUrl() {
        return this.siteBaseUrl;
    }

    private DataSourceParametersServiceNowArgs() {}

    private DataSourceParametersServiceNowArgs(DataSourceParametersServiceNowArgs $) {
        this.siteBaseUrl = $.siteBaseUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataSourceParametersServiceNowArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataSourceParametersServiceNowArgs $;

        public Builder() {
            $ = new DataSourceParametersServiceNowArgs();
        }

        public Builder(DataSourceParametersServiceNowArgs defaults) {
            $ = new DataSourceParametersServiceNowArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param siteBaseUrl The base URL of the Jira instance&#39;s site to which to connect.
         * 
         * @return builder
         * 
         */
        public Builder siteBaseUrl(Output<String> siteBaseUrl) {
            $.siteBaseUrl = siteBaseUrl;
            return this;
        }

        /**
         * @param siteBaseUrl The base URL of the Jira instance&#39;s site to which to connect.
         * 
         * @return builder
         * 
         */
        public Builder siteBaseUrl(String siteBaseUrl) {
            return siteBaseUrl(Output.of(siteBaseUrl));
        }

        public DataSourceParametersServiceNowArgs build() {
            $.siteBaseUrl = Objects.requireNonNull($.siteBaseUrl, "expected parameter 'siteBaseUrl' to be non-null");
            return $;
        }
    }

}
