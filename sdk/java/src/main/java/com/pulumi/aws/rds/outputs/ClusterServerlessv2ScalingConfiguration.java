// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.rds.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterServerlessv2ScalingConfiguration {
    /**
     * @return Maximum capacity for an Aurora DB cluster in `provisioned` DB engine mode. The maximum capacity must be greater than or equal to the minimum capacity. Valid capacity values are in a range of `0` up to `256` in steps of `0.5`.
     * 
     */
    private Double maxCapacity;
    /**
     * @return Minimum capacity for an Aurora DB cluster in `provisioned` DB engine mode. The minimum capacity must be lesser than or equal to the maximum capacity. Valid capacity values are in a range of `0` up to `256` in steps of `0.5`.
     * 
     */
    private Double minCapacity;
    /**
     * @return Time, in seconds, before an Aurora DB cluster in `provisioned` DB engine mode is paused. Valid values are `300` through `86400`.
     * 
     */
    private @Nullable Integer secondsUntilAutoPause;

    private ClusterServerlessv2ScalingConfiguration() {}
    /**
     * @return Maximum capacity for an Aurora DB cluster in `provisioned` DB engine mode. The maximum capacity must be greater than or equal to the minimum capacity. Valid capacity values are in a range of `0` up to `256` in steps of `0.5`.
     * 
     */
    public Double maxCapacity() {
        return this.maxCapacity;
    }
    /**
     * @return Minimum capacity for an Aurora DB cluster in `provisioned` DB engine mode. The minimum capacity must be lesser than or equal to the maximum capacity. Valid capacity values are in a range of `0` up to `256` in steps of `0.5`.
     * 
     */
    public Double minCapacity() {
        return this.minCapacity;
    }
    /**
     * @return Time, in seconds, before an Aurora DB cluster in `provisioned` DB engine mode is paused. Valid values are `300` through `86400`.
     * 
     */
    public Optional<Integer> secondsUntilAutoPause() {
        return Optional.ofNullable(this.secondsUntilAutoPause);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterServerlessv2ScalingConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double maxCapacity;
        private Double minCapacity;
        private @Nullable Integer secondsUntilAutoPause;
        public Builder() {}
        public Builder(ClusterServerlessv2ScalingConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxCapacity = defaults.maxCapacity;
    	      this.minCapacity = defaults.minCapacity;
    	      this.secondsUntilAutoPause = defaults.secondsUntilAutoPause;
        }

        @CustomType.Setter
        public Builder maxCapacity(Double maxCapacity) {
            if (maxCapacity == null) {
              throw new MissingRequiredPropertyException("ClusterServerlessv2ScalingConfiguration", "maxCapacity");
            }
            this.maxCapacity = maxCapacity;
            return this;
        }
        @CustomType.Setter
        public Builder minCapacity(Double minCapacity) {
            if (minCapacity == null) {
              throw new MissingRequiredPropertyException("ClusterServerlessv2ScalingConfiguration", "minCapacity");
            }
            this.minCapacity = minCapacity;
            return this;
        }
        @CustomType.Setter
        public Builder secondsUntilAutoPause(@Nullable Integer secondsUntilAutoPause) {

            this.secondsUntilAutoPause = secondsUntilAutoPause;
            return this;
        }
        public ClusterServerlessv2ScalingConfiguration build() {
            final var _resultValue = new ClusterServerlessv2ScalingConfiguration();
            _resultValue.maxCapacity = maxCapacity;
            _resultValue.minCapacity = minCapacity;
            _resultValue.secondsUntilAutoPause = secondsUntilAutoPause;
            return _resultValue;
        }
    }
}
