// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kinesisanalyticsv2.inputs;

import com.pulumi.aws.kinesisanalyticsv2.inputs.ApplicationApplicationConfigurationArgs;
import com.pulumi.aws.kinesisanalyticsv2.inputs.ApplicationCloudwatchLoggingOptionsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationState extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationState Empty = new ApplicationState();

    @Import(name="applicationConfiguration")
    private @Nullable Output<ApplicationApplicationConfigurationArgs> applicationConfiguration;

    public Optional<Output<ApplicationApplicationConfigurationArgs>> applicationConfiguration() {
        return Optional.ofNullable(this.applicationConfiguration);
    }

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="cloudwatchLoggingOptions")
    private @Nullable Output<ApplicationCloudwatchLoggingOptionsArgs> cloudwatchLoggingOptions;

    public Optional<Output<ApplicationCloudwatchLoggingOptionsArgs>> cloudwatchLoggingOptions() {
        return Optional.ofNullable(this.cloudwatchLoggingOptions);
    }

    @Import(name="createTimestamp")
    private @Nullable Output<String> createTimestamp;

    public Optional<Output<String>> createTimestamp() {
        return Optional.ofNullable(this.createTimestamp);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="forceStop")
    private @Nullable Output<Boolean> forceStop;

    public Optional<Output<Boolean>> forceStop() {
        return Optional.ofNullable(this.forceStop);
    }

    @Import(name="lastUpdateTimestamp")
    private @Nullable Output<String> lastUpdateTimestamp;

    public Optional<Output<String>> lastUpdateTimestamp() {
        return Optional.ofNullable(this.lastUpdateTimestamp);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="runtimeEnvironment")
    private @Nullable Output<String> runtimeEnvironment;

    public Optional<Output<String>> runtimeEnvironment() {
        return Optional.ofNullable(this.runtimeEnvironment);
    }

    @Import(name="serviceExecutionRole")
    private @Nullable Output<String> serviceExecutionRole;

    public Optional<Output<String>> serviceExecutionRole() {
        return Optional.ofNullable(this.serviceExecutionRole);
    }

    @Import(name="startApplication")
    private @Nullable Output<Boolean> startApplication;

    public Optional<Output<Boolean>> startApplication() {
        return Optional.ofNullable(this.startApplication);
    }

    @Import(name="status")
    private @Nullable Output<String> status;

    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="versionId")
    private @Nullable Output<Integer> versionId;

    public Optional<Output<Integer>> versionId() {
        return Optional.ofNullable(this.versionId);
    }

    private ApplicationState() {}

    private ApplicationState(ApplicationState $) {
        this.applicationConfiguration = $.applicationConfiguration;
        this.arn = $.arn;
        this.cloudwatchLoggingOptions = $.cloudwatchLoggingOptions;
        this.createTimestamp = $.createTimestamp;
        this.description = $.description;
        this.forceStop = $.forceStop;
        this.lastUpdateTimestamp = $.lastUpdateTimestamp;
        this.name = $.name;
        this.runtimeEnvironment = $.runtimeEnvironment;
        this.serviceExecutionRole = $.serviceExecutionRole;
        this.startApplication = $.startApplication;
        this.status = $.status;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.versionId = $.versionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationState $;

        public Builder() {
            $ = new ApplicationState();
        }

        public Builder(ApplicationState defaults) {
            $ = new ApplicationState(Objects.requireNonNull(defaults));
        }

        public Builder applicationConfiguration(@Nullable Output<ApplicationApplicationConfigurationArgs> applicationConfiguration) {
            $.applicationConfiguration = applicationConfiguration;
            return this;
        }

        public Builder applicationConfiguration(ApplicationApplicationConfigurationArgs applicationConfiguration) {
            return applicationConfiguration(Output.of(applicationConfiguration));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder cloudwatchLoggingOptions(@Nullable Output<ApplicationCloudwatchLoggingOptionsArgs> cloudwatchLoggingOptions) {
            $.cloudwatchLoggingOptions = cloudwatchLoggingOptions;
            return this;
        }

        public Builder cloudwatchLoggingOptions(ApplicationCloudwatchLoggingOptionsArgs cloudwatchLoggingOptions) {
            return cloudwatchLoggingOptions(Output.of(cloudwatchLoggingOptions));
        }

        public Builder createTimestamp(@Nullable Output<String> createTimestamp) {
            $.createTimestamp = createTimestamp;
            return this;
        }

        public Builder createTimestamp(String createTimestamp) {
            return createTimestamp(Output.of(createTimestamp));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder forceStop(@Nullable Output<Boolean> forceStop) {
            $.forceStop = forceStop;
            return this;
        }

        public Builder forceStop(Boolean forceStop) {
            return forceStop(Output.of(forceStop));
        }

        public Builder lastUpdateTimestamp(@Nullable Output<String> lastUpdateTimestamp) {
            $.lastUpdateTimestamp = lastUpdateTimestamp;
            return this;
        }

        public Builder lastUpdateTimestamp(String lastUpdateTimestamp) {
            return lastUpdateTimestamp(Output.of(lastUpdateTimestamp));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder runtimeEnvironment(@Nullable Output<String> runtimeEnvironment) {
            $.runtimeEnvironment = runtimeEnvironment;
            return this;
        }

        public Builder runtimeEnvironment(String runtimeEnvironment) {
            return runtimeEnvironment(Output.of(runtimeEnvironment));
        }

        public Builder serviceExecutionRole(@Nullable Output<String> serviceExecutionRole) {
            $.serviceExecutionRole = serviceExecutionRole;
            return this;
        }

        public Builder serviceExecutionRole(String serviceExecutionRole) {
            return serviceExecutionRole(Output.of(serviceExecutionRole));
        }

        public Builder startApplication(@Nullable Output<Boolean> startApplication) {
            $.startApplication = startApplication;
            return this;
        }

        public Builder startApplication(Boolean startApplication) {
            return startApplication(Output.of(startApplication));
        }

        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        public Builder status(String status) {
            return status(Output.of(status));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder versionId(@Nullable Output<Integer> versionId) {
            $.versionId = versionId;
            return this;
        }

        public Builder versionId(Integer versionId) {
            return versionId(Output.of(versionId));
        }

        public ApplicationState build() {
            return $;
        }
    }

}
