// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ssm.outputs;

import com.pulumi.aws.ssm.outputs.ContactsRotationRecurrenceMonthlySettingHandOffTime;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ContactsRotationRecurrenceMonthlySetting {
    /**
     * @return (Required) The day of the month when monthly recurring on-call rotations begin.
     * 
     */
    private Integer dayOfMonth;
    /**
     * @return (Required) The hand off time. See Hand Off Time for more details.
     * 
     */
    private @Nullable ContactsRotationRecurrenceMonthlySettingHandOffTime handOffTime;

    private ContactsRotationRecurrenceMonthlySetting() {}
    /**
     * @return (Required) The day of the month when monthly recurring on-call rotations begin.
     * 
     */
    public Integer dayOfMonth() {
        return this.dayOfMonth;
    }
    /**
     * @return (Required) The hand off time. See Hand Off Time for more details.
     * 
     */
    public Optional<ContactsRotationRecurrenceMonthlySettingHandOffTime> handOffTime() {
        return Optional.ofNullable(this.handOffTime);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContactsRotationRecurrenceMonthlySetting defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer dayOfMonth;
        private @Nullable ContactsRotationRecurrenceMonthlySettingHandOffTime handOffTime;
        public Builder() {}
        public Builder(ContactsRotationRecurrenceMonthlySetting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dayOfMonth = defaults.dayOfMonth;
    	      this.handOffTime = defaults.handOffTime;
        }

        @CustomType.Setter
        public Builder dayOfMonth(Integer dayOfMonth) {
            if (dayOfMonth == null) {
              throw new MissingRequiredPropertyException("ContactsRotationRecurrenceMonthlySetting", "dayOfMonth");
            }
            this.dayOfMonth = dayOfMonth;
            return this;
        }
        @CustomType.Setter
        public Builder handOffTime(@Nullable ContactsRotationRecurrenceMonthlySettingHandOffTime handOffTime) {

            this.handOffTime = handOffTime;
            return this;
        }
        public ContactsRotationRecurrenceMonthlySetting build() {
            final var _resultValue = new ContactsRotationRecurrenceMonthlySetting();
            _resultValue.dayOfMonth = dayOfMonth;
            _resultValue.handOffTime = handOffTime;
            return _resultValue;
        }
    }
}
