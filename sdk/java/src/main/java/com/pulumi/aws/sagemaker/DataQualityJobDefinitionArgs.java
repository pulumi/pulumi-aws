// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker;

import com.pulumi.aws.sagemaker.inputs.DataQualityJobDefinitionDataQualityAppSpecificationArgs;
import com.pulumi.aws.sagemaker.inputs.DataQualityJobDefinitionDataQualityBaselineConfigArgs;
import com.pulumi.aws.sagemaker.inputs.DataQualityJobDefinitionDataQualityJobInputArgs;
import com.pulumi.aws.sagemaker.inputs.DataQualityJobDefinitionDataQualityJobOutputConfigArgs;
import com.pulumi.aws.sagemaker.inputs.DataQualityJobDefinitionJobResourcesArgs;
import com.pulumi.aws.sagemaker.inputs.DataQualityJobDefinitionNetworkConfigArgs;
import com.pulumi.aws.sagemaker.inputs.DataQualityJobDefinitionStoppingConditionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataQualityJobDefinitionArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataQualityJobDefinitionArgs Empty = new DataQualityJobDefinitionArgs();

    /**
     * Specifies the container that runs the monitoring job. Fields are documented below.
     * 
     */
    @Import(name="dataQualityAppSpecification", required=true)
    private Output<DataQualityJobDefinitionDataQualityAppSpecificationArgs> dataQualityAppSpecification;

    /**
     * @return Specifies the container that runs the monitoring job. Fields are documented below.
     * 
     */
    public Output<DataQualityJobDefinitionDataQualityAppSpecificationArgs> dataQualityAppSpecification() {
        return this.dataQualityAppSpecification;
    }

    /**
     * Configures the constraints and baselines for the monitoring job. Fields are documented below.
     * 
     */
    @Import(name="dataQualityBaselineConfig")
    private @Nullable Output<DataQualityJobDefinitionDataQualityBaselineConfigArgs> dataQualityBaselineConfig;

    /**
     * @return Configures the constraints and baselines for the monitoring job. Fields are documented below.
     * 
     */
    public Optional<Output<DataQualityJobDefinitionDataQualityBaselineConfigArgs>> dataQualityBaselineConfig() {
        return Optional.ofNullable(this.dataQualityBaselineConfig);
    }

    /**
     * A list of inputs for the monitoring job. Fields are documented below.
     * 
     */
    @Import(name="dataQualityJobInput", required=true)
    private Output<DataQualityJobDefinitionDataQualityJobInputArgs> dataQualityJobInput;

    /**
     * @return A list of inputs for the monitoring job. Fields are documented below.
     * 
     */
    public Output<DataQualityJobDefinitionDataQualityJobInputArgs> dataQualityJobInput() {
        return this.dataQualityJobInput;
    }

    /**
     * The output configuration for monitoring jobs. Fields are documented below.
     * 
     */
    @Import(name="dataQualityJobOutputConfig", required=true)
    private Output<DataQualityJobDefinitionDataQualityJobOutputConfigArgs> dataQualityJobOutputConfig;

    /**
     * @return The output configuration for monitoring jobs. Fields are documented below.
     * 
     */
    public Output<DataQualityJobDefinitionDataQualityJobOutputConfigArgs> dataQualityJobOutputConfig() {
        return this.dataQualityJobOutputConfig;
    }

    /**
     * Identifies the resources to deploy for a monitoring job. Fields are documented below.
     * 
     */
    @Import(name="jobResources", required=true)
    private Output<DataQualityJobDefinitionJobResourcesArgs> jobResources;

    /**
     * @return Identifies the resources to deploy for a monitoring job. Fields are documented below.
     * 
     */
    public Output<DataQualityJobDefinitionJobResourcesArgs> jobResources() {
        return this.jobResources;
    }

    /**
     * The name of the data quality job definition. If omitted, the provider will assign a random, unique name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the data quality job definition. If omitted, the provider will assign a random, unique name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specifies networking configuration for the monitoring job. Fields are documented below.
     * 
     */
    @Import(name="networkConfig")
    private @Nullable Output<DataQualityJobDefinitionNetworkConfigArgs> networkConfig;

    /**
     * @return Specifies networking configuration for the monitoring job. Fields are documented below.
     * 
     */
    public Optional<Output<DataQualityJobDefinitionNetworkConfigArgs>> networkConfig() {
        return Optional.ofNullable(this.networkConfig);
    }

    /**
     * The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
     * 
     */
    @Import(name="roleArn", required=true)
    private Output<String> roleArn;

    /**
     * @return The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
     * 
     */
    public Output<String> roleArn() {
        return this.roleArn;
    }

    /**
     * A time limit for how long the monitoring job is allowed to run before stopping. Fields are documented below.
     * 
     */
    @Import(name="stoppingCondition")
    private @Nullable Output<DataQualityJobDefinitionStoppingConditionArgs> stoppingCondition;

    /**
     * @return A time limit for how long the monitoring job is allowed to run before stopping. Fields are documented below.
     * 
     */
    public Optional<Output<DataQualityJobDefinitionStoppingConditionArgs>> stoppingCondition() {
        return Optional.ofNullable(this.stoppingCondition);
    }

    /**
     * A mapping of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private DataQualityJobDefinitionArgs() {}

    private DataQualityJobDefinitionArgs(DataQualityJobDefinitionArgs $) {
        this.dataQualityAppSpecification = $.dataQualityAppSpecification;
        this.dataQualityBaselineConfig = $.dataQualityBaselineConfig;
        this.dataQualityJobInput = $.dataQualityJobInput;
        this.dataQualityJobOutputConfig = $.dataQualityJobOutputConfig;
        this.jobResources = $.jobResources;
        this.name = $.name;
        this.networkConfig = $.networkConfig;
        this.roleArn = $.roleArn;
        this.stoppingCondition = $.stoppingCondition;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataQualityJobDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataQualityJobDefinitionArgs $;

        public Builder() {
            $ = new DataQualityJobDefinitionArgs();
        }

        public Builder(DataQualityJobDefinitionArgs defaults) {
            $ = new DataQualityJobDefinitionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataQualityAppSpecification Specifies the container that runs the monitoring job. Fields are documented below.
         * 
         * @return builder
         * 
         */
        public Builder dataQualityAppSpecification(Output<DataQualityJobDefinitionDataQualityAppSpecificationArgs> dataQualityAppSpecification) {
            $.dataQualityAppSpecification = dataQualityAppSpecification;
            return this;
        }

        /**
         * @param dataQualityAppSpecification Specifies the container that runs the monitoring job. Fields are documented below.
         * 
         * @return builder
         * 
         */
        public Builder dataQualityAppSpecification(DataQualityJobDefinitionDataQualityAppSpecificationArgs dataQualityAppSpecification) {
            return dataQualityAppSpecification(Output.of(dataQualityAppSpecification));
        }

        /**
         * @param dataQualityBaselineConfig Configures the constraints and baselines for the monitoring job. Fields are documented below.
         * 
         * @return builder
         * 
         */
        public Builder dataQualityBaselineConfig(@Nullable Output<DataQualityJobDefinitionDataQualityBaselineConfigArgs> dataQualityBaselineConfig) {
            $.dataQualityBaselineConfig = dataQualityBaselineConfig;
            return this;
        }

        /**
         * @param dataQualityBaselineConfig Configures the constraints and baselines for the monitoring job. Fields are documented below.
         * 
         * @return builder
         * 
         */
        public Builder dataQualityBaselineConfig(DataQualityJobDefinitionDataQualityBaselineConfigArgs dataQualityBaselineConfig) {
            return dataQualityBaselineConfig(Output.of(dataQualityBaselineConfig));
        }

        /**
         * @param dataQualityJobInput A list of inputs for the monitoring job. Fields are documented below.
         * 
         * @return builder
         * 
         */
        public Builder dataQualityJobInput(Output<DataQualityJobDefinitionDataQualityJobInputArgs> dataQualityJobInput) {
            $.dataQualityJobInput = dataQualityJobInput;
            return this;
        }

        /**
         * @param dataQualityJobInput A list of inputs for the monitoring job. Fields are documented below.
         * 
         * @return builder
         * 
         */
        public Builder dataQualityJobInput(DataQualityJobDefinitionDataQualityJobInputArgs dataQualityJobInput) {
            return dataQualityJobInput(Output.of(dataQualityJobInput));
        }

        /**
         * @param dataQualityJobOutputConfig The output configuration for monitoring jobs. Fields are documented below.
         * 
         * @return builder
         * 
         */
        public Builder dataQualityJobOutputConfig(Output<DataQualityJobDefinitionDataQualityJobOutputConfigArgs> dataQualityJobOutputConfig) {
            $.dataQualityJobOutputConfig = dataQualityJobOutputConfig;
            return this;
        }

        /**
         * @param dataQualityJobOutputConfig The output configuration for monitoring jobs. Fields are documented below.
         * 
         * @return builder
         * 
         */
        public Builder dataQualityJobOutputConfig(DataQualityJobDefinitionDataQualityJobOutputConfigArgs dataQualityJobOutputConfig) {
            return dataQualityJobOutputConfig(Output.of(dataQualityJobOutputConfig));
        }

        /**
         * @param jobResources Identifies the resources to deploy for a monitoring job. Fields are documented below.
         * 
         * @return builder
         * 
         */
        public Builder jobResources(Output<DataQualityJobDefinitionJobResourcesArgs> jobResources) {
            $.jobResources = jobResources;
            return this;
        }

        /**
         * @param jobResources Identifies the resources to deploy for a monitoring job. Fields are documented below.
         * 
         * @return builder
         * 
         */
        public Builder jobResources(DataQualityJobDefinitionJobResourcesArgs jobResources) {
            return jobResources(Output.of(jobResources));
        }

        /**
         * @param name The name of the data quality job definition. If omitted, the provider will assign a random, unique name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the data quality job definition. If omitted, the provider will assign a random, unique name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkConfig Specifies networking configuration for the monitoring job. Fields are documented below.
         * 
         * @return builder
         * 
         */
        public Builder networkConfig(@Nullable Output<DataQualityJobDefinitionNetworkConfigArgs> networkConfig) {
            $.networkConfig = networkConfig;
            return this;
        }

        /**
         * @param networkConfig Specifies networking configuration for the monitoring job. Fields are documented below.
         * 
         * @return builder
         * 
         */
        public Builder networkConfig(DataQualityJobDefinitionNetworkConfigArgs networkConfig) {
            return networkConfig(Output.of(networkConfig));
        }

        /**
         * @param roleArn The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        /**
         * @param stoppingCondition A time limit for how long the monitoring job is allowed to run before stopping. Fields are documented below.
         * 
         * @return builder
         * 
         */
        public Builder stoppingCondition(@Nullable Output<DataQualityJobDefinitionStoppingConditionArgs> stoppingCondition) {
            $.stoppingCondition = stoppingCondition;
            return this;
        }

        /**
         * @param stoppingCondition A time limit for how long the monitoring job is allowed to run before stopping. Fields are documented below.
         * 
         * @return builder
         * 
         */
        public Builder stoppingCondition(DataQualityJobDefinitionStoppingConditionArgs stoppingCondition) {
            return stoppingCondition(Output.of(stoppingCondition));
        }

        /**
         * @param tags A mapping of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public DataQualityJobDefinitionArgs build() {
            $.dataQualityAppSpecification = Objects.requireNonNull($.dataQualityAppSpecification, "expected parameter 'dataQualityAppSpecification' to be non-null");
            $.dataQualityJobInput = Objects.requireNonNull($.dataQualityJobInput, "expected parameter 'dataQualityJobInput' to be non-null");
            $.dataQualityJobOutputConfig = Objects.requireNonNull($.dataQualityJobOutputConfig, "expected parameter 'dataQualityJobOutputConfig' to be non-null");
            $.jobResources = Objects.requireNonNull($.jobResources, "expected parameter 'jobResources' to be non-null");
            $.roleArn = Objects.requireNonNull($.roleArn, "expected parameter 'roleArn' to be non-null");
            return $;
        }
    }

}
