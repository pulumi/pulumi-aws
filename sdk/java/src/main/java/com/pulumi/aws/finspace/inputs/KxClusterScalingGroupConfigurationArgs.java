// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.finspace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KxClusterScalingGroupConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final KxClusterScalingGroupConfigurationArgs Empty = new KxClusterScalingGroupConfigurationArgs();

    /**
     * The number of vCPUs that you want to reserve for each node of this kdb cluster on the scaling group host.
     * 
     */
    @Import(name="cpu")
    private @Nullable Output<Double> cpu;

    /**
     * @return The number of vCPUs that you want to reserve for each node of this kdb cluster on the scaling group host.
     * 
     */
    public Optional<Output<Double>> cpu() {
        return Optional.ofNullable(this.cpu);
    }

    /**
     * An optional hard limit on the amount of memory a kdb cluster can use.
     * 
     */
    @Import(name="memoryLimit")
    private @Nullable Output<Integer> memoryLimit;

    /**
     * @return An optional hard limit on the amount of memory a kdb cluster can use.
     * 
     */
    public Optional<Output<Integer>> memoryLimit() {
        return Optional.ofNullable(this.memoryLimit);
    }

    /**
     * A reservation of the minimum amount of memory that should be available on the scaling group for a kdb cluster to be successfully placed in a scaling group.
     * 
     */
    @Import(name="memoryReservation", required=true)
    private Output<Integer> memoryReservation;

    /**
     * @return A reservation of the minimum amount of memory that should be available on the scaling group for a kdb cluster to be successfully placed in a scaling group.
     * 
     */
    public Output<Integer> memoryReservation() {
        return this.memoryReservation;
    }

    /**
     * The number of kdb cluster nodes.
     * 
     */
    @Import(name="nodeCount", required=true)
    private Output<Integer> nodeCount;

    /**
     * @return The number of kdb cluster nodes.
     * 
     */
    public Output<Integer> nodeCount() {
        return this.nodeCount;
    }

    /**
     * A unique identifier for the kdb scaling group.
     * 
     */
    @Import(name="scalingGroupName", required=true)
    private Output<String> scalingGroupName;

    /**
     * @return A unique identifier for the kdb scaling group.
     * 
     */
    public Output<String> scalingGroupName() {
        return this.scalingGroupName;
    }

    private KxClusterScalingGroupConfigurationArgs() {}

    private KxClusterScalingGroupConfigurationArgs(KxClusterScalingGroupConfigurationArgs $) {
        this.cpu = $.cpu;
        this.memoryLimit = $.memoryLimit;
        this.memoryReservation = $.memoryReservation;
        this.nodeCount = $.nodeCount;
        this.scalingGroupName = $.scalingGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KxClusterScalingGroupConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KxClusterScalingGroupConfigurationArgs $;

        public Builder() {
            $ = new KxClusterScalingGroupConfigurationArgs();
        }

        public Builder(KxClusterScalingGroupConfigurationArgs defaults) {
            $ = new KxClusterScalingGroupConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cpu The number of vCPUs that you want to reserve for each node of this kdb cluster on the scaling group host.
         * 
         * @return builder
         * 
         */
        public Builder cpu(@Nullable Output<Double> cpu) {
            $.cpu = cpu;
            return this;
        }

        /**
         * @param cpu The number of vCPUs that you want to reserve for each node of this kdb cluster on the scaling group host.
         * 
         * @return builder
         * 
         */
        public Builder cpu(Double cpu) {
            return cpu(Output.of(cpu));
        }

        /**
         * @param memoryLimit An optional hard limit on the amount of memory a kdb cluster can use.
         * 
         * @return builder
         * 
         */
        public Builder memoryLimit(@Nullable Output<Integer> memoryLimit) {
            $.memoryLimit = memoryLimit;
            return this;
        }

        /**
         * @param memoryLimit An optional hard limit on the amount of memory a kdb cluster can use.
         * 
         * @return builder
         * 
         */
        public Builder memoryLimit(Integer memoryLimit) {
            return memoryLimit(Output.of(memoryLimit));
        }

        /**
         * @param memoryReservation A reservation of the minimum amount of memory that should be available on the scaling group for a kdb cluster to be successfully placed in a scaling group.
         * 
         * @return builder
         * 
         */
        public Builder memoryReservation(Output<Integer> memoryReservation) {
            $.memoryReservation = memoryReservation;
            return this;
        }

        /**
         * @param memoryReservation A reservation of the minimum amount of memory that should be available on the scaling group for a kdb cluster to be successfully placed in a scaling group.
         * 
         * @return builder
         * 
         */
        public Builder memoryReservation(Integer memoryReservation) {
            return memoryReservation(Output.of(memoryReservation));
        }

        /**
         * @param nodeCount The number of kdb cluster nodes.
         * 
         * @return builder
         * 
         */
        public Builder nodeCount(Output<Integer> nodeCount) {
            $.nodeCount = nodeCount;
            return this;
        }

        /**
         * @param nodeCount The number of kdb cluster nodes.
         * 
         * @return builder
         * 
         */
        public Builder nodeCount(Integer nodeCount) {
            return nodeCount(Output.of(nodeCount));
        }

        /**
         * @param scalingGroupName A unique identifier for the kdb scaling group.
         * 
         * @return builder
         * 
         */
        public Builder scalingGroupName(Output<String> scalingGroupName) {
            $.scalingGroupName = scalingGroupName;
            return this;
        }

        /**
         * @param scalingGroupName A unique identifier for the kdb scaling group.
         * 
         * @return builder
         * 
         */
        public Builder scalingGroupName(String scalingGroupName) {
            return scalingGroupName(Output.of(scalingGroupName));
        }

        public KxClusterScalingGroupConfigurationArgs build() {
            $.memoryReservation = Objects.requireNonNull($.memoryReservation, "expected parameter 'memoryReservation' to be non-null");
            $.nodeCount = Objects.requireNonNull($.nodeCount, "expected parameter 'nodeCount' to be non-null");
            $.scalingGroupName = Objects.requireNonNull($.scalingGroupName, "expected parameter 'scalingGroupName' to be non-null");
            return $;
        }
    }

}
