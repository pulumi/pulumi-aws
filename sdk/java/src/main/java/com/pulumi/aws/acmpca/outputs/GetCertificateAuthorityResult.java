// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.acmpca.outputs;

import com.pulumi.aws.acmpca.outputs.GetCertificateAuthorityRevocationConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetCertificateAuthorityResult {
    private String arn;
    private String certificate;
    private String certificateChain;
    private String certificateSigningRequest;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String notAfter;
    private String notBefore;
    private List<GetCertificateAuthorityRevocationConfiguration> revocationConfigurations;
    private String serial;
    private String status;
    private Map<String,String> tags;
    private String type;
    private String usageMode;

    private GetCertificateAuthorityResult() {}
    public String arn() {
        return this.arn;
    }
    public String certificate() {
        return this.certificate;
    }
    public String certificateChain() {
        return this.certificateChain;
    }
    public String certificateSigningRequest() {
        return this.certificateSigningRequest;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String notAfter() {
        return this.notAfter;
    }
    public String notBefore() {
        return this.notBefore;
    }
    public List<GetCertificateAuthorityRevocationConfiguration> revocationConfigurations() {
        return this.revocationConfigurations;
    }
    public String serial() {
        return this.serial;
    }
    public String status() {
        return this.status;
    }
    public Map<String,String> tags() {
        return this.tags;
    }
    public String type() {
        return this.type;
    }
    public String usageMode() {
        return this.usageMode;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCertificateAuthorityResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private String certificate;
        private String certificateChain;
        private String certificateSigningRequest;
        private String id;
        private String notAfter;
        private String notBefore;
        private List<GetCertificateAuthorityRevocationConfiguration> revocationConfigurations;
        private String serial;
        private String status;
        private Map<String,String> tags;
        private String type;
        private String usageMode;
        public Builder() {}
        public Builder(GetCertificateAuthorityResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.certificate = defaults.certificate;
    	      this.certificateChain = defaults.certificateChain;
    	      this.certificateSigningRequest = defaults.certificateSigningRequest;
    	      this.id = defaults.id;
    	      this.notAfter = defaults.notAfter;
    	      this.notBefore = defaults.notBefore;
    	      this.revocationConfigurations = defaults.revocationConfigurations;
    	      this.serial = defaults.serial;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.usageMode = defaults.usageMode;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder certificate(String certificate) {
            this.certificate = Objects.requireNonNull(certificate);
            return this;
        }
        @CustomType.Setter
        public Builder certificateChain(String certificateChain) {
            this.certificateChain = Objects.requireNonNull(certificateChain);
            return this;
        }
        @CustomType.Setter
        public Builder certificateSigningRequest(String certificateSigningRequest) {
            this.certificateSigningRequest = Objects.requireNonNull(certificateSigningRequest);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder notAfter(String notAfter) {
            this.notAfter = Objects.requireNonNull(notAfter);
            return this;
        }
        @CustomType.Setter
        public Builder notBefore(String notBefore) {
            this.notBefore = Objects.requireNonNull(notBefore);
            return this;
        }
        @CustomType.Setter
        public Builder revocationConfigurations(List<GetCertificateAuthorityRevocationConfiguration> revocationConfigurations) {
            this.revocationConfigurations = Objects.requireNonNull(revocationConfigurations);
            return this;
        }
        public Builder revocationConfigurations(GetCertificateAuthorityRevocationConfiguration... revocationConfigurations) {
            return revocationConfigurations(List.of(revocationConfigurations));
        }
        @CustomType.Setter
        public Builder serial(String serial) {
            this.serial = Objects.requireNonNull(serial);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder usageMode(String usageMode) {
            this.usageMode = Objects.requireNonNull(usageMode);
            return this;
        }
        public GetCertificateAuthorityResult build() {
            final var o = new GetCertificateAuthorityResult();
            o.arn = arn;
            o.certificate = certificate;
            o.certificateChain = certificateChain;
            o.certificateSigningRequest = certificateSigningRequest;
            o.id = id;
            o.notAfter = notAfter;
            o.notBefore = notBefore;
            o.revocationConfigurations = revocationConfigurations;
            o.serial = serial;
            o.status = status;
            o.tags = tags;
            o.type = type;
            o.usageMode = usageMode;
            return o;
        }
    }
}
