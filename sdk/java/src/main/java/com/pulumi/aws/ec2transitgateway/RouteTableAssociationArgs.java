// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2transitgateway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RouteTableAssociationArgs extends com.pulumi.resources.ResourceArgs {

    public static final RouteTableAssociationArgs Empty = new RouteTableAssociationArgs();

    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Boolean whether the Gateway Attachment should remove any current Route Table association before associating with the specified Route Table. Default value: `false`. This argument is intended for use with EC2 Transit Gateways shared into the current account, otherwise the `transitGatewayDefaultRouteTableAssociation` argument of the `aws.ec2transitgateway.VpcAttachment` resource should be used.
     * 
     */
    @Import(name="replaceExistingAssociation")
    private @Nullable Output<Boolean> replaceExistingAssociation;

    /**
     * @return Boolean whether the Gateway Attachment should remove any current Route Table association before associating with the specified Route Table. Default value: `false`. This argument is intended for use with EC2 Transit Gateways shared into the current account, otherwise the `transitGatewayDefaultRouteTableAssociation` argument of the `aws.ec2transitgateway.VpcAttachment` resource should be used.
     * 
     */
    public Optional<Output<Boolean>> replaceExistingAssociation() {
        return Optional.ofNullable(this.replaceExistingAssociation);
    }

    /**
     * Identifier of EC2 Transit Gateway Attachment.
     * 
     */
    @Import(name="transitGatewayAttachmentId", required=true)
    private Output<String> transitGatewayAttachmentId;

    /**
     * @return Identifier of EC2 Transit Gateway Attachment.
     * 
     */
    public Output<String> transitGatewayAttachmentId() {
        return this.transitGatewayAttachmentId;
    }

    /**
     * Identifier of EC2 Transit Gateway Route Table.
     * 
     */
    @Import(name="transitGatewayRouteTableId", required=true)
    private Output<String> transitGatewayRouteTableId;

    /**
     * @return Identifier of EC2 Transit Gateway Route Table.
     * 
     */
    public Output<String> transitGatewayRouteTableId() {
        return this.transitGatewayRouteTableId;
    }

    private RouteTableAssociationArgs() {}

    private RouteTableAssociationArgs(RouteTableAssociationArgs $) {
        this.region = $.region;
        this.replaceExistingAssociation = $.replaceExistingAssociation;
        this.transitGatewayAttachmentId = $.transitGatewayAttachmentId;
        this.transitGatewayRouteTableId = $.transitGatewayRouteTableId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouteTableAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouteTableAssociationArgs $;

        public Builder() {
            $ = new RouteTableAssociationArgs();
        }

        public Builder(RouteTableAssociationArgs defaults) {
            $ = new RouteTableAssociationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param replaceExistingAssociation Boolean whether the Gateway Attachment should remove any current Route Table association before associating with the specified Route Table. Default value: `false`. This argument is intended for use with EC2 Transit Gateways shared into the current account, otherwise the `transitGatewayDefaultRouteTableAssociation` argument of the `aws.ec2transitgateway.VpcAttachment` resource should be used.
         * 
         * @return builder
         * 
         */
        public Builder replaceExistingAssociation(@Nullable Output<Boolean> replaceExistingAssociation) {
            $.replaceExistingAssociation = replaceExistingAssociation;
            return this;
        }

        /**
         * @param replaceExistingAssociation Boolean whether the Gateway Attachment should remove any current Route Table association before associating with the specified Route Table. Default value: `false`. This argument is intended for use with EC2 Transit Gateways shared into the current account, otherwise the `transitGatewayDefaultRouteTableAssociation` argument of the `aws.ec2transitgateway.VpcAttachment` resource should be used.
         * 
         * @return builder
         * 
         */
        public Builder replaceExistingAssociation(Boolean replaceExistingAssociation) {
            return replaceExistingAssociation(Output.of(replaceExistingAssociation));
        }

        /**
         * @param transitGatewayAttachmentId Identifier of EC2 Transit Gateway Attachment.
         * 
         * @return builder
         * 
         */
        public Builder transitGatewayAttachmentId(Output<String> transitGatewayAttachmentId) {
            $.transitGatewayAttachmentId = transitGatewayAttachmentId;
            return this;
        }

        /**
         * @param transitGatewayAttachmentId Identifier of EC2 Transit Gateway Attachment.
         * 
         * @return builder
         * 
         */
        public Builder transitGatewayAttachmentId(String transitGatewayAttachmentId) {
            return transitGatewayAttachmentId(Output.of(transitGatewayAttachmentId));
        }

        /**
         * @param transitGatewayRouteTableId Identifier of EC2 Transit Gateway Route Table.
         * 
         * @return builder
         * 
         */
        public Builder transitGatewayRouteTableId(Output<String> transitGatewayRouteTableId) {
            $.transitGatewayRouteTableId = transitGatewayRouteTableId;
            return this;
        }

        /**
         * @param transitGatewayRouteTableId Identifier of EC2 Transit Gateway Route Table.
         * 
         * @return builder
         * 
         */
        public Builder transitGatewayRouteTableId(String transitGatewayRouteTableId) {
            return transitGatewayRouteTableId(Output.of(transitGatewayRouteTableId));
        }

        public RouteTableAssociationArgs build() {
            if ($.transitGatewayAttachmentId == null) {
                throw new MissingRequiredPropertyException("RouteTableAssociationArgs", "transitGatewayAttachmentId");
            }
            if ($.transitGatewayRouteTableId == null) {
                throw new MissingRequiredPropertyException("RouteTableAssociationArgs", "transitGatewayRouteTableId");
            }
            return $;
        }
    }

}
