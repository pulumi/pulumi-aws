// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpcIpamOrganizationAdminAccountState extends com.pulumi.resources.ResourceArgs {

    public static final VpcIpamOrganizationAdminAccountState Empty = new VpcIpamOrganizationAdminAccountState();

    /**
     * The Organizations ARN for the delegate account.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return The Organizations ARN for the delegate account.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="delegatedAdminAccountId")
    private @Nullable Output<String> delegatedAdminAccountId;

    public Optional<Output<String>> delegatedAdminAccountId() {
        return Optional.ofNullable(this.delegatedAdminAccountId);
    }

    /**
     * The Organizations email for the delegate account.
     * 
     */
    @Import(name="email")
    private @Nullable Output<String> email;

    /**
     * @return The Organizations email for the delegate account.
     * 
     */
    public Optional<Output<String>> email() {
        return Optional.ofNullable(this.email);
    }

    /**
     * The Organizations name for the delegate account.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The Organizations name for the delegate account.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The AWS service principal.
     * 
     */
    @Import(name="servicePrincipal")
    private @Nullable Output<String> servicePrincipal;

    /**
     * @return The AWS service principal.
     * 
     */
    public Optional<Output<String>> servicePrincipal() {
        return Optional.ofNullable(this.servicePrincipal);
    }

    private VpcIpamOrganizationAdminAccountState() {}

    private VpcIpamOrganizationAdminAccountState(VpcIpamOrganizationAdminAccountState $) {
        this.arn = $.arn;
        this.delegatedAdminAccountId = $.delegatedAdminAccountId;
        this.email = $.email;
        this.name = $.name;
        this.servicePrincipal = $.servicePrincipal;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpcIpamOrganizationAdminAccountState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpcIpamOrganizationAdminAccountState $;

        public Builder() {
            $ = new VpcIpamOrganizationAdminAccountState();
        }

        public Builder(VpcIpamOrganizationAdminAccountState defaults) {
            $ = new VpcIpamOrganizationAdminAccountState(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn The Organizations ARN for the delegate account.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn The Organizations ARN for the delegate account.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder delegatedAdminAccountId(@Nullable Output<String> delegatedAdminAccountId) {
            $.delegatedAdminAccountId = delegatedAdminAccountId;
            return this;
        }

        public Builder delegatedAdminAccountId(String delegatedAdminAccountId) {
            return delegatedAdminAccountId(Output.of(delegatedAdminAccountId));
        }

        /**
         * @param email The Organizations email for the delegate account.
         * 
         * @return builder
         * 
         */
        public Builder email(@Nullable Output<String> email) {
            $.email = email;
            return this;
        }

        /**
         * @param email The Organizations email for the delegate account.
         * 
         * @return builder
         * 
         */
        public Builder email(String email) {
            return email(Output.of(email));
        }

        /**
         * @param name The Organizations name for the delegate account.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The Organizations name for the delegate account.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param servicePrincipal The AWS service principal.
         * 
         * @return builder
         * 
         */
        public Builder servicePrincipal(@Nullable Output<String> servicePrincipal) {
            $.servicePrincipal = servicePrincipal;
            return this;
        }

        /**
         * @param servicePrincipal The AWS service principal.
         * 
         * @return builder
         * 
         */
        public Builder servicePrincipal(String servicePrincipal) {
            return servicePrincipal(Output.of(servicePrincipal));
        }

        public VpcIpamOrganizationAdminAccountState build() {
            return $;
        }
    }

}
