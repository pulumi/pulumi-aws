// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetVpcEndpointDnsOption {
    /**
     * @return The DNS records created for the endpoint.
     * 
     */
    private String dnsRecordIpType;
    /**
     * @return Indicates whether to enable private DNS only for inbound endpoints.
     * 
     */
    private Boolean privateDnsOnlyForInboundResolverEndpoint;

    private GetVpcEndpointDnsOption() {}
    /**
     * @return The DNS records created for the endpoint.
     * 
     */
    public String dnsRecordIpType() {
        return this.dnsRecordIpType;
    }
    /**
     * @return Indicates whether to enable private DNS only for inbound endpoints.
     * 
     */
    public Boolean privateDnsOnlyForInboundResolverEndpoint() {
        return this.privateDnsOnlyForInboundResolverEndpoint;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVpcEndpointDnsOption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String dnsRecordIpType;
        private Boolean privateDnsOnlyForInboundResolverEndpoint;
        public Builder() {}
        public Builder(GetVpcEndpointDnsOption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dnsRecordIpType = defaults.dnsRecordIpType;
    	      this.privateDnsOnlyForInboundResolverEndpoint = defaults.privateDnsOnlyForInboundResolverEndpoint;
        }

        @CustomType.Setter
        public Builder dnsRecordIpType(String dnsRecordIpType) {
            this.dnsRecordIpType = Objects.requireNonNull(dnsRecordIpType);
            return this;
        }
        @CustomType.Setter
        public Builder privateDnsOnlyForInboundResolverEndpoint(Boolean privateDnsOnlyForInboundResolverEndpoint) {
            this.privateDnsOnlyForInboundResolverEndpoint = Objects.requireNonNull(privateDnsOnlyForInboundResolverEndpoint);
            return this;
        }
        public GetVpcEndpointDnsOption build() {
            final var _resultValue = new GetVpcEndpointDnsOption();
            _resultValue.dnsRecordIpType = dnsRecordIpType;
            _resultValue.privateDnsOnlyForInboundResolverEndpoint = privateDnsOnlyForInboundResolverEndpoint;
            return _resultValue;
        }
    }
}
