// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.pinpoint;

import com.pulumi.aws.pinpoint.inputs.Smsvoicev2PhoneNumberTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class Smsvoicev2PhoneNumberArgs extends com.pulumi.resources.ResourceArgs {

    public static final Smsvoicev2PhoneNumberArgs Empty = new Smsvoicev2PhoneNumberArgs();

    /**
     * By default this is set to `false`. When set to true the phone number can’t be deleted.
     * 
     */
    @Import(name="deletionProtectionEnabled")
    private @Nullable Output<Boolean> deletionProtectionEnabled;

    /**
     * @return By default this is set to `false`. When set to true the phone number can’t be deleted.
     * 
     */
    public Optional<Output<Boolean>> deletionProtectionEnabled() {
        return Optional.ofNullable(this.deletionProtectionEnabled);
    }

    /**
     * The two-character code, in ISO 3166-1 alpha-2 format, for the country or region.
     * 
     */
    @Import(name="isoCountryCode", required=true)
    private Output<String> isoCountryCode;

    /**
     * @return The two-character code, in ISO 3166-1 alpha-2 format, for the country or region.
     * 
     */
    public Output<String> isoCountryCode() {
        return this.isoCountryCode;
    }

    /**
     * The type of message. Valid values are `TRANSACTIONAL` for messages that are critical or time-sensitive and `PROMOTIONAL` for messages that aren’t critical or time-sensitive.
     * 
     */
    @Import(name="messageType", required=true)
    private Output<String> messageType;

    /**
     * @return The type of message. Valid values are `TRANSACTIONAL` for messages that are critical or time-sensitive and `PROMOTIONAL` for messages that aren’t critical or time-sensitive.
     * 
     */
    public Output<String> messageType() {
        return this.messageType;
    }

    /**
     * Describes if the origination identity can be used for text messages, voice calls or both. valid values are `SMS` and `VOICE`.
     * 
     */
    @Import(name="numberCapabilities", required=true)
    private Output<List<String>> numberCapabilities;

    /**
     * @return Describes if the origination identity can be used for text messages, voice calls or both. valid values are `SMS` and `VOICE`.
     * 
     */
    public Output<List<String>> numberCapabilities() {
        return this.numberCapabilities;
    }

    /**
     * The type of phone number to request. Possible values are `LONG_CODE`, `TOLL_FREE`, `TEN_DLC`, or `SIMULATOR`.
     * 
     */
    @Import(name="numberType", required=true)
    private Output<String> numberType;

    /**
     * @return The type of phone number to request. Possible values are `LONG_CODE`, `TOLL_FREE`, `TEN_DLC`, or `SIMULATOR`.
     * 
     */
    public Output<String> numberType() {
        return this.numberType;
    }

    /**
     * The name of the opt-out list to associate with the phone number.
     * 
     */
    @Import(name="optOutListName")
    private @Nullable Output<String> optOutListName;

    /**
     * @return The name of the opt-out list to associate with the phone number.
     * 
     */
    public Optional<Output<String>> optOutListName() {
        return Optional.ofNullable(this.optOutListName);
    }

    /**
     * Use this field to attach your phone number for an external registration process.
     * 
     */
    @Import(name="registrationId")
    private @Nullable Output<String> registrationId;

    /**
     * @return Use this field to attach your phone number for an external registration process.
     * 
     */
    public Optional<Output<String>> registrationId() {
        return Optional.ofNullable(this.registrationId);
    }

    /**
     * When set to `false` an end recipient sends a message that begins with HELP or STOP to one of your dedicated numbers, AWS End User Messaging SMS and Voice automatically replies with a customizable message and adds the end recipient to the opt-out list. When set to true you’re responsible for responding to HELP and STOP requests. You’re also responsible for tracking and honoring opt-out request.
     * 
     */
    @Import(name="selfManagedOptOutsEnabled")
    private @Nullable Output<Boolean> selfManagedOptOutsEnabled;

    /**
     * @return When set to `false` an end recipient sends a message that begins with HELP or STOP to one of your dedicated numbers, AWS End User Messaging SMS and Voice automatically replies with a customizable message and adds the end recipient to the opt-out list. When set to true you’re responsible for responding to HELP and STOP requests. You’re also responsible for tracking and honoring opt-out request.
     * 
     */
    public Optional<Output<Boolean>> selfManagedOptOutsEnabled() {
        return Optional.ofNullable(this.selfManagedOptOutsEnabled);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="timeouts")
    private @Nullable Output<Smsvoicev2PhoneNumberTimeoutsArgs> timeouts;

    public Optional<Output<Smsvoicev2PhoneNumberTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    /**
     * The Amazon Resource Name (ARN) of the two way channel.
     * 
     */
    @Import(name="twoWayChannelArn")
    private @Nullable Output<String> twoWayChannelArn;

    /**
     * @return The Amazon Resource Name (ARN) of the two way channel.
     * 
     */
    public Optional<Output<String>> twoWayChannelArn() {
        return Optional.ofNullable(this.twoWayChannelArn);
    }

    /**
     * By default this is set to `false`. When set to `true` you can receive incoming text messages from your end recipients.
     * 
     */
    @Import(name="twoWayChannelEnabled")
    private @Nullable Output<Boolean> twoWayChannelEnabled;

    /**
     * @return By default this is set to `false`. When set to `true` you can receive incoming text messages from your end recipients.
     * 
     */
    public Optional<Output<Boolean>> twoWayChannelEnabled() {
        return Optional.ofNullable(this.twoWayChannelEnabled);
    }

    private Smsvoicev2PhoneNumberArgs() {}

    private Smsvoicev2PhoneNumberArgs(Smsvoicev2PhoneNumberArgs $) {
        this.deletionProtectionEnabled = $.deletionProtectionEnabled;
        this.isoCountryCode = $.isoCountryCode;
        this.messageType = $.messageType;
        this.numberCapabilities = $.numberCapabilities;
        this.numberType = $.numberType;
        this.optOutListName = $.optOutListName;
        this.registrationId = $.registrationId;
        this.selfManagedOptOutsEnabled = $.selfManagedOptOutsEnabled;
        this.tags = $.tags;
        this.timeouts = $.timeouts;
        this.twoWayChannelArn = $.twoWayChannelArn;
        this.twoWayChannelEnabled = $.twoWayChannelEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(Smsvoicev2PhoneNumberArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Smsvoicev2PhoneNumberArgs $;

        public Builder() {
            $ = new Smsvoicev2PhoneNumberArgs();
        }

        public Builder(Smsvoicev2PhoneNumberArgs defaults) {
            $ = new Smsvoicev2PhoneNumberArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deletionProtectionEnabled By default this is set to `false`. When set to true the phone number can’t be deleted.
         * 
         * @return builder
         * 
         */
        public Builder deletionProtectionEnabled(@Nullable Output<Boolean> deletionProtectionEnabled) {
            $.deletionProtectionEnabled = deletionProtectionEnabled;
            return this;
        }

        /**
         * @param deletionProtectionEnabled By default this is set to `false`. When set to true the phone number can’t be deleted.
         * 
         * @return builder
         * 
         */
        public Builder deletionProtectionEnabled(Boolean deletionProtectionEnabled) {
            return deletionProtectionEnabled(Output.of(deletionProtectionEnabled));
        }

        /**
         * @param isoCountryCode The two-character code, in ISO 3166-1 alpha-2 format, for the country or region.
         * 
         * @return builder
         * 
         */
        public Builder isoCountryCode(Output<String> isoCountryCode) {
            $.isoCountryCode = isoCountryCode;
            return this;
        }

        /**
         * @param isoCountryCode The two-character code, in ISO 3166-1 alpha-2 format, for the country or region.
         * 
         * @return builder
         * 
         */
        public Builder isoCountryCode(String isoCountryCode) {
            return isoCountryCode(Output.of(isoCountryCode));
        }

        /**
         * @param messageType The type of message. Valid values are `TRANSACTIONAL` for messages that are critical or time-sensitive and `PROMOTIONAL` for messages that aren’t critical or time-sensitive.
         * 
         * @return builder
         * 
         */
        public Builder messageType(Output<String> messageType) {
            $.messageType = messageType;
            return this;
        }

        /**
         * @param messageType The type of message. Valid values are `TRANSACTIONAL` for messages that are critical or time-sensitive and `PROMOTIONAL` for messages that aren’t critical or time-sensitive.
         * 
         * @return builder
         * 
         */
        public Builder messageType(String messageType) {
            return messageType(Output.of(messageType));
        }

        /**
         * @param numberCapabilities Describes if the origination identity can be used for text messages, voice calls or both. valid values are `SMS` and `VOICE`.
         * 
         * @return builder
         * 
         */
        public Builder numberCapabilities(Output<List<String>> numberCapabilities) {
            $.numberCapabilities = numberCapabilities;
            return this;
        }

        /**
         * @param numberCapabilities Describes if the origination identity can be used for text messages, voice calls or both. valid values are `SMS` and `VOICE`.
         * 
         * @return builder
         * 
         */
        public Builder numberCapabilities(List<String> numberCapabilities) {
            return numberCapabilities(Output.of(numberCapabilities));
        }

        /**
         * @param numberCapabilities Describes if the origination identity can be used for text messages, voice calls or both. valid values are `SMS` and `VOICE`.
         * 
         * @return builder
         * 
         */
        public Builder numberCapabilities(String... numberCapabilities) {
            return numberCapabilities(List.of(numberCapabilities));
        }

        /**
         * @param numberType The type of phone number to request. Possible values are `LONG_CODE`, `TOLL_FREE`, `TEN_DLC`, or `SIMULATOR`.
         * 
         * @return builder
         * 
         */
        public Builder numberType(Output<String> numberType) {
            $.numberType = numberType;
            return this;
        }

        /**
         * @param numberType The type of phone number to request. Possible values are `LONG_CODE`, `TOLL_FREE`, `TEN_DLC`, or `SIMULATOR`.
         * 
         * @return builder
         * 
         */
        public Builder numberType(String numberType) {
            return numberType(Output.of(numberType));
        }

        /**
         * @param optOutListName The name of the opt-out list to associate with the phone number.
         * 
         * @return builder
         * 
         */
        public Builder optOutListName(@Nullable Output<String> optOutListName) {
            $.optOutListName = optOutListName;
            return this;
        }

        /**
         * @param optOutListName The name of the opt-out list to associate with the phone number.
         * 
         * @return builder
         * 
         */
        public Builder optOutListName(String optOutListName) {
            return optOutListName(Output.of(optOutListName));
        }

        /**
         * @param registrationId Use this field to attach your phone number for an external registration process.
         * 
         * @return builder
         * 
         */
        public Builder registrationId(@Nullable Output<String> registrationId) {
            $.registrationId = registrationId;
            return this;
        }

        /**
         * @param registrationId Use this field to attach your phone number for an external registration process.
         * 
         * @return builder
         * 
         */
        public Builder registrationId(String registrationId) {
            return registrationId(Output.of(registrationId));
        }

        /**
         * @param selfManagedOptOutsEnabled When set to `false` an end recipient sends a message that begins with HELP or STOP to one of your dedicated numbers, AWS End User Messaging SMS and Voice automatically replies with a customizable message and adds the end recipient to the opt-out list. When set to true you’re responsible for responding to HELP and STOP requests. You’re also responsible for tracking and honoring opt-out request.
         * 
         * @return builder
         * 
         */
        public Builder selfManagedOptOutsEnabled(@Nullable Output<Boolean> selfManagedOptOutsEnabled) {
            $.selfManagedOptOutsEnabled = selfManagedOptOutsEnabled;
            return this;
        }

        /**
         * @param selfManagedOptOutsEnabled When set to `false` an end recipient sends a message that begins with HELP or STOP to one of your dedicated numbers, AWS End User Messaging SMS and Voice automatically replies with a customizable message and adds the end recipient to the opt-out list. When set to true you’re responsible for responding to HELP and STOP requests. You’re also responsible for tracking and honoring opt-out request.
         * 
         * @return builder
         * 
         */
        public Builder selfManagedOptOutsEnabled(Boolean selfManagedOptOutsEnabled) {
            return selfManagedOptOutsEnabled(Output.of(selfManagedOptOutsEnabled));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder timeouts(@Nullable Output<Smsvoicev2PhoneNumberTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(Smsvoicev2PhoneNumberTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        /**
         * @param twoWayChannelArn The Amazon Resource Name (ARN) of the two way channel.
         * 
         * @return builder
         * 
         */
        public Builder twoWayChannelArn(@Nullable Output<String> twoWayChannelArn) {
            $.twoWayChannelArn = twoWayChannelArn;
            return this;
        }

        /**
         * @param twoWayChannelArn The Amazon Resource Name (ARN) of the two way channel.
         * 
         * @return builder
         * 
         */
        public Builder twoWayChannelArn(String twoWayChannelArn) {
            return twoWayChannelArn(Output.of(twoWayChannelArn));
        }

        /**
         * @param twoWayChannelEnabled By default this is set to `false`. When set to `true` you can receive incoming text messages from your end recipients.
         * 
         * @return builder
         * 
         */
        public Builder twoWayChannelEnabled(@Nullable Output<Boolean> twoWayChannelEnabled) {
            $.twoWayChannelEnabled = twoWayChannelEnabled;
            return this;
        }

        /**
         * @param twoWayChannelEnabled By default this is set to `false`. When set to `true` you can receive incoming text messages from your end recipients.
         * 
         * @return builder
         * 
         */
        public Builder twoWayChannelEnabled(Boolean twoWayChannelEnabled) {
            return twoWayChannelEnabled(Output.of(twoWayChannelEnabled));
        }

        public Smsvoicev2PhoneNumberArgs build() {
            if ($.isoCountryCode == null) {
                throw new MissingRequiredPropertyException("Smsvoicev2PhoneNumberArgs", "isoCountryCode");
            }
            if ($.messageType == null) {
                throw new MissingRequiredPropertyException("Smsvoicev2PhoneNumberArgs", "messageType");
            }
            if ($.numberCapabilities == null) {
                throw new MissingRequiredPropertyException("Smsvoicev2PhoneNumberArgs", "numberCapabilities");
            }
            if ($.numberType == null) {
                throw new MissingRequiredPropertyException("Smsvoicev2PhoneNumberArgs", "numberType");
            }
            return $;
        }
    }

}
