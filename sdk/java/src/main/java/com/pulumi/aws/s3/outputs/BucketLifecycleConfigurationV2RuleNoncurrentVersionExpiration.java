// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BucketLifecycleConfigurationV2RuleNoncurrentVersionExpiration {
    private @Nullable String newerNoncurrentVersions;
    private @Nullable Integer noncurrentDays;

    private BucketLifecycleConfigurationV2RuleNoncurrentVersionExpiration() {}
    public Optional<String> newerNoncurrentVersions() {
        return Optional.ofNullable(this.newerNoncurrentVersions);
    }
    public Optional<Integer> noncurrentDays() {
        return Optional.ofNullable(this.noncurrentDays);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketLifecycleConfigurationV2RuleNoncurrentVersionExpiration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String newerNoncurrentVersions;
        private @Nullable Integer noncurrentDays;
        public Builder() {}
        public Builder(BucketLifecycleConfigurationV2RuleNoncurrentVersionExpiration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.newerNoncurrentVersions = defaults.newerNoncurrentVersions;
    	      this.noncurrentDays = defaults.noncurrentDays;
        }

        @CustomType.Setter
        public Builder newerNoncurrentVersions(@Nullable String newerNoncurrentVersions) {
            this.newerNoncurrentVersions = newerNoncurrentVersions;
            return this;
        }
        @CustomType.Setter
        public Builder noncurrentDays(@Nullable Integer noncurrentDays) {
            this.noncurrentDays = noncurrentDays;
            return this;
        }
        public BucketLifecycleConfigurationV2RuleNoncurrentVersionExpiration build() {
            final var o = new BucketLifecycleConfigurationV2RuleNoncurrentVersionExpiration();
            o.newerNoncurrentVersions = newerNoncurrentVersions;
            o.noncurrentDays = noncurrentDays;
            return o;
        }
    }
}
