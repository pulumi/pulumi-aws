// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dataexchange;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataSetArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataSetArgs Empty = new DataSetArgs();

    @Import(name="assetType", required=true)
    private Output<String> assetType;

    public Output<String> assetType() {
        return this.assetType;
    }

    @Import(name="description", required=true)
    private Output<String> description;

    public Output<String> description() {
        return this.description;
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private DataSetArgs() {}

    private DataSetArgs(DataSetArgs $) {
        this.assetType = $.assetType;
        this.description = $.description;
        this.name = $.name;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataSetArgs $;

        public Builder() {
            $ = new DataSetArgs();
        }

        public Builder(DataSetArgs defaults) {
            $ = new DataSetArgs(Objects.requireNonNull(defaults));
        }

        public Builder assetType(Output<String> assetType) {
            $.assetType = assetType;
            return this;
        }

        public Builder assetType(String assetType) {
            return assetType(Output.of(assetType));
        }

        public Builder description(Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public DataSetArgs build() {
            $.assetType = Objects.requireNonNull($.assetType, "expected parameter 'assetType' to be non-null");
            $.description = Objects.requireNonNull($.description, "expected parameter 'description' to be non-null");
            return $;
        }
    }

}
