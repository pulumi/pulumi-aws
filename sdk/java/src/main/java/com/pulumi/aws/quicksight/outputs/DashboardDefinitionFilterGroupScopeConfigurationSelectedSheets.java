// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.DashboardDefinitionFilterGroupScopeConfigurationSelectedSheetsSheetVisualScopingConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class DashboardDefinitionFilterGroupScopeConfigurationSelectedSheets {
    private @Nullable List<DashboardDefinitionFilterGroupScopeConfigurationSelectedSheetsSheetVisualScopingConfiguration> sheetVisualScopingConfigurations;

    private DashboardDefinitionFilterGroupScopeConfigurationSelectedSheets() {}
    public List<DashboardDefinitionFilterGroupScopeConfigurationSelectedSheetsSheetVisualScopingConfiguration> sheetVisualScopingConfigurations() {
        return this.sheetVisualScopingConfigurations == null ? List.of() : this.sheetVisualScopingConfigurations;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardDefinitionFilterGroupScopeConfigurationSelectedSheets defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<DashboardDefinitionFilterGroupScopeConfigurationSelectedSheetsSheetVisualScopingConfiguration> sheetVisualScopingConfigurations;
        public Builder() {}
        public Builder(DashboardDefinitionFilterGroupScopeConfigurationSelectedSheets defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.sheetVisualScopingConfigurations = defaults.sheetVisualScopingConfigurations;
        }

        @CustomType.Setter
        public Builder sheetVisualScopingConfigurations(@Nullable List<DashboardDefinitionFilterGroupScopeConfigurationSelectedSheetsSheetVisualScopingConfiguration> sheetVisualScopingConfigurations) {

            this.sheetVisualScopingConfigurations = sheetVisualScopingConfigurations;
            return this;
        }
        public Builder sheetVisualScopingConfigurations(DashboardDefinitionFilterGroupScopeConfigurationSelectedSheetsSheetVisualScopingConfiguration... sheetVisualScopingConfigurations) {
            return sheetVisualScopingConfigurations(List.of(sheetVisualScopingConfigurations));
        }
        public DashboardDefinitionFilterGroupScopeConfigurationSelectedSheets build() {
            final var _resultValue = new DashboardDefinitionFilterGroupScopeConfigurationSelectedSheets();
            _resultValue.sheetVisualScopingConfigurations = sheetVisualScopingConfigurations;
            return _resultValue;
        }
    }
}
