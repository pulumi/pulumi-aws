// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.FontConfigurationArgs;
import com.pulumi.aws.quicksight.inputs.ReferenceLineLabelConfigurationCustomLabelConfigurationArgs;
import com.pulumi.aws.quicksight.inputs.ReferenceLineLabelConfigurationValueLabelConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ReferenceLineLabelConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ReferenceLineLabelConfigurationArgs Empty = new ReferenceLineLabelConfigurationArgs();

    @Import(name="customLabelConfiguration")
    private @Nullable Output<ReferenceLineLabelConfigurationCustomLabelConfigurationArgs> customLabelConfiguration;

    public Optional<Output<ReferenceLineLabelConfigurationCustomLabelConfigurationArgs>> customLabelConfiguration() {
        return Optional.ofNullable(this.customLabelConfiguration);
    }

    @Import(name="fontColor")
    private @Nullable Output<String> fontColor;

    public Optional<Output<String>> fontColor() {
        return Optional.ofNullable(this.fontColor);
    }

    @Import(name="fontConfiguration")
    private @Nullable Output<FontConfigurationArgs> fontConfiguration;

    public Optional<Output<FontConfigurationArgs>> fontConfiguration() {
        return Optional.ofNullable(this.fontConfiguration);
    }

    @Import(name="horizontalPosition")
    private @Nullable Output<String> horizontalPosition;

    public Optional<Output<String>> horizontalPosition() {
        return Optional.ofNullable(this.horizontalPosition);
    }

    @Import(name="valueLabelConfiguration")
    private @Nullable Output<ReferenceLineLabelConfigurationValueLabelConfigurationArgs> valueLabelConfiguration;

    public Optional<Output<ReferenceLineLabelConfigurationValueLabelConfigurationArgs>> valueLabelConfiguration() {
        return Optional.ofNullable(this.valueLabelConfiguration);
    }

    @Import(name="verticalPosition")
    private @Nullable Output<String> verticalPosition;

    public Optional<Output<String>> verticalPosition() {
        return Optional.ofNullable(this.verticalPosition);
    }

    private ReferenceLineLabelConfigurationArgs() {}

    private ReferenceLineLabelConfigurationArgs(ReferenceLineLabelConfigurationArgs $) {
        this.customLabelConfiguration = $.customLabelConfiguration;
        this.fontColor = $.fontColor;
        this.fontConfiguration = $.fontConfiguration;
        this.horizontalPosition = $.horizontalPosition;
        this.valueLabelConfiguration = $.valueLabelConfiguration;
        this.verticalPosition = $.verticalPosition;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReferenceLineLabelConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReferenceLineLabelConfigurationArgs $;

        public Builder() {
            $ = new ReferenceLineLabelConfigurationArgs();
        }

        public Builder(ReferenceLineLabelConfigurationArgs defaults) {
            $ = new ReferenceLineLabelConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder customLabelConfiguration(@Nullable Output<ReferenceLineLabelConfigurationCustomLabelConfigurationArgs> customLabelConfiguration) {
            $.customLabelConfiguration = customLabelConfiguration;
            return this;
        }

        public Builder customLabelConfiguration(ReferenceLineLabelConfigurationCustomLabelConfigurationArgs customLabelConfiguration) {
            return customLabelConfiguration(Output.of(customLabelConfiguration));
        }

        public Builder fontColor(@Nullable Output<String> fontColor) {
            $.fontColor = fontColor;
            return this;
        }

        public Builder fontColor(String fontColor) {
            return fontColor(Output.of(fontColor));
        }

        public Builder fontConfiguration(@Nullable Output<FontConfigurationArgs> fontConfiguration) {
            $.fontConfiguration = fontConfiguration;
            return this;
        }

        public Builder fontConfiguration(FontConfigurationArgs fontConfiguration) {
            return fontConfiguration(Output.of(fontConfiguration));
        }

        public Builder horizontalPosition(@Nullable Output<String> horizontalPosition) {
            $.horizontalPosition = horizontalPosition;
            return this;
        }

        public Builder horizontalPosition(String horizontalPosition) {
            return horizontalPosition(Output.of(horizontalPosition));
        }

        public Builder valueLabelConfiguration(@Nullable Output<ReferenceLineLabelConfigurationValueLabelConfigurationArgs> valueLabelConfiguration) {
            $.valueLabelConfiguration = valueLabelConfiguration;
            return this;
        }

        public Builder valueLabelConfiguration(ReferenceLineLabelConfigurationValueLabelConfigurationArgs valueLabelConfiguration) {
            return valueLabelConfiguration(Output.of(valueLabelConfiguration));
        }

        public Builder verticalPosition(@Nullable Output<String> verticalPosition) {
            $.verticalPosition = verticalPosition;
            return this;
        }

        public Builder verticalPosition(String verticalPosition) {
            return verticalPosition(Output.of(verticalPosition));
        }

        public ReferenceLineLabelConfigurationArgs build() {
            return $;
        }
    }

}
