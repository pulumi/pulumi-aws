// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.DashboardDashboardPublishOptionsAdHocFilteringOption;
import com.pulumi.aws.quicksight.outputs.DashboardDashboardPublishOptionsDataPointDrillUpDownOption;
import com.pulumi.aws.quicksight.outputs.DashboardDashboardPublishOptionsDataPointMenuLabelOption;
import com.pulumi.aws.quicksight.outputs.DashboardDashboardPublishOptionsDataPointTooltipOption;
import com.pulumi.aws.quicksight.outputs.DashboardDashboardPublishOptionsExportToCsvOption;
import com.pulumi.aws.quicksight.outputs.DashboardDashboardPublishOptionsExportWithHiddenFieldsOption;
import com.pulumi.aws.quicksight.outputs.DashboardDashboardPublishOptionsSheetControlsOption;
import com.pulumi.aws.quicksight.outputs.DashboardDashboardPublishOptionsSheetLayoutElementMaximizationOption;
import com.pulumi.aws.quicksight.outputs.DashboardDashboardPublishOptionsVisualAxisSortOption;
import com.pulumi.aws.quicksight.outputs.DashboardDashboardPublishOptionsVisualMenuOption;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DashboardDashboardPublishOptions {
    /**
     * @return Ad hoc (one-time) filtering option. See ad_hoc_filtering_option.
     * 
     */
    private @Nullable DashboardDashboardPublishOptionsAdHocFilteringOption adHocFilteringOption;
    /**
     * @return The drill-down options of data points in a dashboard. See data_point_drill_up_down_option.
     * 
     */
    private @Nullable DashboardDashboardPublishOptionsDataPointDrillUpDownOption dataPointDrillUpDownOption;
    /**
     * @return The data point menu label options of a dashboard. See data_point_menu_label_option.
     * 
     */
    private @Nullable DashboardDashboardPublishOptionsDataPointMenuLabelOption dataPointMenuLabelOption;
    /**
     * @return The data point tool tip options of a dashboard. See data_point_tooltip_option.
     * 
     */
    private @Nullable DashboardDashboardPublishOptionsDataPointTooltipOption dataPointTooltipOption;
    /**
     * @return Export to .csv option. See export_to_csv_option.
     * 
     */
    private @Nullable DashboardDashboardPublishOptionsExportToCsvOption exportToCsvOption;
    /**
     * @return Determines if hidden fields are exported with a dashboard. See export_with_hidden_fields_option.
     * 
     */
    private @Nullable DashboardDashboardPublishOptionsExportWithHiddenFieldsOption exportWithHiddenFieldsOption;
    /**
     * @return Sheet controls option. See sheet_controls_option.
     * 
     */
    private @Nullable DashboardDashboardPublishOptionsSheetControlsOption sheetControlsOption;
    /**
     * @return The sheet layout maximization options of a dashboard. See sheet_layout_element_maximization_option.
     * 
     */
    private @Nullable DashboardDashboardPublishOptionsSheetLayoutElementMaximizationOption sheetLayoutElementMaximizationOption;
    /**
     * @return The axis sort options of a dashboard. See visual_axis_sort_option.
     * 
     */
    private @Nullable DashboardDashboardPublishOptionsVisualAxisSortOption visualAxisSortOption;
    /**
     * @return The menu options of a visual in a dashboard. See visual_menu_option.
     * 
     */
    private @Nullable DashboardDashboardPublishOptionsVisualMenuOption visualMenuOption;

    private DashboardDashboardPublishOptions() {}
    /**
     * @return Ad hoc (one-time) filtering option. See ad_hoc_filtering_option.
     * 
     */
    public Optional<DashboardDashboardPublishOptionsAdHocFilteringOption> adHocFilteringOption() {
        return Optional.ofNullable(this.adHocFilteringOption);
    }
    /**
     * @return The drill-down options of data points in a dashboard. See data_point_drill_up_down_option.
     * 
     */
    public Optional<DashboardDashboardPublishOptionsDataPointDrillUpDownOption> dataPointDrillUpDownOption() {
        return Optional.ofNullable(this.dataPointDrillUpDownOption);
    }
    /**
     * @return The data point menu label options of a dashboard. See data_point_menu_label_option.
     * 
     */
    public Optional<DashboardDashboardPublishOptionsDataPointMenuLabelOption> dataPointMenuLabelOption() {
        return Optional.ofNullable(this.dataPointMenuLabelOption);
    }
    /**
     * @return The data point tool tip options of a dashboard. See data_point_tooltip_option.
     * 
     */
    public Optional<DashboardDashboardPublishOptionsDataPointTooltipOption> dataPointTooltipOption() {
        return Optional.ofNullable(this.dataPointTooltipOption);
    }
    /**
     * @return Export to .csv option. See export_to_csv_option.
     * 
     */
    public Optional<DashboardDashboardPublishOptionsExportToCsvOption> exportToCsvOption() {
        return Optional.ofNullable(this.exportToCsvOption);
    }
    /**
     * @return Determines if hidden fields are exported with a dashboard. See export_with_hidden_fields_option.
     * 
     */
    public Optional<DashboardDashboardPublishOptionsExportWithHiddenFieldsOption> exportWithHiddenFieldsOption() {
        return Optional.ofNullable(this.exportWithHiddenFieldsOption);
    }
    /**
     * @return Sheet controls option. See sheet_controls_option.
     * 
     */
    public Optional<DashboardDashboardPublishOptionsSheetControlsOption> sheetControlsOption() {
        return Optional.ofNullable(this.sheetControlsOption);
    }
    /**
     * @return The sheet layout maximization options of a dashboard. See sheet_layout_element_maximization_option.
     * 
     */
    public Optional<DashboardDashboardPublishOptionsSheetLayoutElementMaximizationOption> sheetLayoutElementMaximizationOption() {
        return Optional.ofNullable(this.sheetLayoutElementMaximizationOption);
    }
    /**
     * @return The axis sort options of a dashboard. See visual_axis_sort_option.
     * 
     */
    public Optional<DashboardDashboardPublishOptionsVisualAxisSortOption> visualAxisSortOption() {
        return Optional.ofNullable(this.visualAxisSortOption);
    }
    /**
     * @return The menu options of a visual in a dashboard. See visual_menu_option.
     * 
     */
    public Optional<DashboardDashboardPublishOptionsVisualMenuOption> visualMenuOption() {
        return Optional.ofNullable(this.visualMenuOption);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardDashboardPublishOptions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable DashboardDashboardPublishOptionsAdHocFilteringOption adHocFilteringOption;
        private @Nullable DashboardDashboardPublishOptionsDataPointDrillUpDownOption dataPointDrillUpDownOption;
        private @Nullable DashboardDashboardPublishOptionsDataPointMenuLabelOption dataPointMenuLabelOption;
        private @Nullable DashboardDashboardPublishOptionsDataPointTooltipOption dataPointTooltipOption;
        private @Nullable DashboardDashboardPublishOptionsExportToCsvOption exportToCsvOption;
        private @Nullable DashboardDashboardPublishOptionsExportWithHiddenFieldsOption exportWithHiddenFieldsOption;
        private @Nullable DashboardDashboardPublishOptionsSheetControlsOption sheetControlsOption;
        private @Nullable DashboardDashboardPublishOptionsSheetLayoutElementMaximizationOption sheetLayoutElementMaximizationOption;
        private @Nullable DashboardDashboardPublishOptionsVisualAxisSortOption visualAxisSortOption;
        private @Nullable DashboardDashboardPublishOptionsVisualMenuOption visualMenuOption;
        public Builder() {}
        public Builder(DashboardDashboardPublishOptions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adHocFilteringOption = defaults.adHocFilteringOption;
    	      this.dataPointDrillUpDownOption = defaults.dataPointDrillUpDownOption;
    	      this.dataPointMenuLabelOption = defaults.dataPointMenuLabelOption;
    	      this.dataPointTooltipOption = defaults.dataPointTooltipOption;
    	      this.exportToCsvOption = defaults.exportToCsvOption;
    	      this.exportWithHiddenFieldsOption = defaults.exportWithHiddenFieldsOption;
    	      this.sheetControlsOption = defaults.sheetControlsOption;
    	      this.sheetLayoutElementMaximizationOption = defaults.sheetLayoutElementMaximizationOption;
    	      this.visualAxisSortOption = defaults.visualAxisSortOption;
    	      this.visualMenuOption = defaults.visualMenuOption;
        }

        @CustomType.Setter
        public Builder adHocFilteringOption(@Nullable DashboardDashboardPublishOptionsAdHocFilteringOption adHocFilteringOption) {

            this.adHocFilteringOption = adHocFilteringOption;
            return this;
        }
        @CustomType.Setter
        public Builder dataPointDrillUpDownOption(@Nullable DashboardDashboardPublishOptionsDataPointDrillUpDownOption dataPointDrillUpDownOption) {

            this.dataPointDrillUpDownOption = dataPointDrillUpDownOption;
            return this;
        }
        @CustomType.Setter
        public Builder dataPointMenuLabelOption(@Nullable DashboardDashboardPublishOptionsDataPointMenuLabelOption dataPointMenuLabelOption) {

            this.dataPointMenuLabelOption = dataPointMenuLabelOption;
            return this;
        }
        @CustomType.Setter
        public Builder dataPointTooltipOption(@Nullable DashboardDashboardPublishOptionsDataPointTooltipOption dataPointTooltipOption) {

            this.dataPointTooltipOption = dataPointTooltipOption;
            return this;
        }
        @CustomType.Setter
        public Builder exportToCsvOption(@Nullable DashboardDashboardPublishOptionsExportToCsvOption exportToCsvOption) {

            this.exportToCsvOption = exportToCsvOption;
            return this;
        }
        @CustomType.Setter
        public Builder exportWithHiddenFieldsOption(@Nullable DashboardDashboardPublishOptionsExportWithHiddenFieldsOption exportWithHiddenFieldsOption) {

            this.exportWithHiddenFieldsOption = exportWithHiddenFieldsOption;
            return this;
        }
        @CustomType.Setter
        public Builder sheetControlsOption(@Nullable DashboardDashboardPublishOptionsSheetControlsOption sheetControlsOption) {

            this.sheetControlsOption = sheetControlsOption;
            return this;
        }
        @CustomType.Setter
        public Builder sheetLayoutElementMaximizationOption(@Nullable DashboardDashboardPublishOptionsSheetLayoutElementMaximizationOption sheetLayoutElementMaximizationOption) {

            this.sheetLayoutElementMaximizationOption = sheetLayoutElementMaximizationOption;
            return this;
        }
        @CustomType.Setter
        public Builder visualAxisSortOption(@Nullable DashboardDashboardPublishOptionsVisualAxisSortOption visualAxisSortOption) {

            this.visualAxisSortOption = visualAxisSortOption;
            return this;
        }
        @CustomType.Setter
        public Builder visualMenuOption(@Nullable DashboardDashboardPublishOptionsVisualMenuOption visualMenuOption) {

            this.visualMenuOption = visualMenuOption;
            return this;
        }
        public DashboardDashboardPublishOptions build() {
            final var _resultValue = new DashboardDashboardPublishOptions();
            _resultValue.adHocFilteringOption = adHocFilteringOption;
            _resultValue.dataPointDrillUpDownOption = dataPointDrillUpDownOption;
            _resultValue.dataPointMenuLabelOption = dataPointMenuLabelOption;
            _resultValue.dataPointTooltipOption = dataPointTooltipOption;
            _resultValue.exportToCsvOption = exportToCsvOption;
            _resultValue.exportWithHiddenFieldsOption = exportWithHiddenFieldsOption;
            _resultValue.sheetControlsOption = sheetControlsOption;
            _resultValue.sheetLayoutElementMaximizationOption = sheetLayoutElementMaximizationOption;
            _resultValue.visualAxisSortOption = visualAxisSortOption;
            _resultValue.visualMenuOption = visualMenuOption;
            return _resultValue;
        }
    }
}
