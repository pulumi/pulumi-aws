// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cognito.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UserPoolDomainState extends com.pulumi.resources.ResourceArgs {

    public static final UserPoolDomainState Empty = new UserPoolDomainState();

    @Import(name="awsAccountId")
    private @Nullable Output<String> awsAccountId;

    public Optional<Output<String>> awsAccountId() {
        return Optional.ofNullable(this.awsAccountId);
    }

    @Import(name="certificateArn")
    private @Nullable Output<String> certificateArn;

    public Optional<Output<String>> certificateArn() {
        return Optional.ofNullable(this.certificateArn);
    }

    @Import(name="cloudfrontDistributionArn")
    private @Nullable Output<String> cloudfrontDistributionArn;

    public Optional<Output<String>> cloudfrontDistributionArn() {
        return Optional.ofNullable(this.cloudfrontDistributionArn);
    }

    @Import(name="domain")
    private @Nullable Output<String> domain;

    public Optional<Output<String>> domain() {
        return Optional.ofNullable(this.domain);
    }

    @Import(name="s3Bucket")
    private @Nullable Output<String> s3Bucket;

    public Optional<Output<String>> s3Bucket() {
        return Optional.ofNullable(this.s3Bucket);
    }

    @Import(name="userPoolId")
    private @Nullable Output<String> userPoolId;

    public Optional<Output<String>> userPoolId() {
        return Optional.ofNullable(this.userPoolId);
    }

    @Import(name="version")
    private @Nullable Output<String> version;

    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private UserPoolDomainState() {}

    private UserPoolDomainState(UserPoolDomainState $) {
        this.awsAccountId = $.awsAccountId;
        this.certificateArn = $.certificateArn;
        this.cloudfrontDistributionArn = $.cloudfrontDistributionArn;
        this.domain = $.domain;
        this.s3Bucket = $.s3Bucket;
        this.userPoolId = $.userPoolId;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserPoolDomainState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserPoolDomainState $;

        public Builder() {
            $ = new UserPoolDomainState();
        }

        public Builder(UserPoolDomainState defaults) {
            $ = new UserPoolDomainState(Objects.requireNonNull(defaults));
        }

        public Builder awsAccountId(@Nullable Output<String> awsAccountId) {
            $.awsAccountId = awsAccountId;
            return this;
        }

        public Builder awsAccountId(String awsAccountId) {
            return awsAccountId(Output.of(awsAccountId));
        }

        public Builder certificateArn(@Nullable Output<String> certificateArn) {
            $.certificateArn = certificateArn;
            return this;
        }

        public Builder certificateArn(String certificateArn) {
            return certificateArn(Output.of(certificateArn));
        }

        public Builder cloudfrontDistributionArn(@Nullable Output<String> cloudfrontDistributionArn) {
            $.cloudfrontDistributionArn = cloudfrontDistributionArn;
            return this;
        }

        public Builder cloudfrontDistributionArn(String cloudfrontDistributionArn) {
            return cloudfrontDistributionArn(Output.of(cloudfrontDistributionArn));
        }

        public Builder domain(@Nullable Output<String> domain) {
            $.domain = domain;
            return this;
        }

        public Builder domain(String domain) {
            return domain(Output.of(domain));
        }

        public Builder s3Bucket(@Nullable Output<String> s3Bucket) {
            $.s3Bucket = s3Bucket;
            return this;
        }

        public Builder s3Bucket(String s3Bucket) {
            return s3Bucket(Output.of(s3Bucket));
        }

        public Builder userPoolId(@Nullable Output<String> userPoolId) {
            $.userPoolId = userPoolId;
            return this;
        }

        public Builder userPoolId(String userPoolId) {
            return userPoolId(Output.of(userPoolId));
        }

        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        public Builder version(String version) {
            return version(Output.of(version));
        }

        public UserPoolDomainState build() {
            return $;
        }
    }

}
