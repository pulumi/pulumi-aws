// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.costexplorer.outputs;

import com.pulumi.aws.costexplorer.outputs.GetCostCategoryRuleRuleOrOrCostCategory;
import com.pulumi.aws.costexplorer.outputs.GetCostCategoryRuleRuleOrOrDimension;
import com.pulumi.aws.costexplorer.outputs.GetCostCategoryRuleRuleOrOrTag;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCostCategoryRuleRuleOrOr {
    /**
     * @return Configuration block for the filter that&#39;s based on `CostCategory` values. See below.
     * 
     */
    private List<GetCostCategoryRuleRuleOrOrCostCategory> costCategories;
    /**
     * @return Configuration block for the specific `Dimension` to use for `Expression`. See below.
     * 
     */
    private List<GetCostCategoryRuleRuleOrOrDimension> dimensions;
    /**
     * @return Configuration block for the specific `Tag` to use for `Expression`. See below.
     * 
     */
    private List<GetCostCategoryRuleRuleOrOrTag> tags;

    private GetCostCategoryRuleRuleOrOr() {}
    /**
     * @return Configuration block for the filter that&#39;s based on `CostCategory` values. See below.
     * 
     */
    public List<GetCostCategoryRuleRuleOrOrCostCategory> costCategories() {
        return this.costCategories;
    }
    /**
     * @return Configuration block for the specific `Dimension` to use for `Expression`. See below.
     * 
     */
    public List<GetCostCategoryRuleRuleOrOrDimension> dimensions() {
        return this.dimensions;
    }
    /**
     * @return Configuration block for the specific `Tag` to use for `Expression`. See below.
     * 
     */
    public List<GetCostCategoryRuleRuleOrOrTag> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCostCategoryRuleRuleOrOr defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetCostCategoryRuleRuleOrOrCostCategory> costCategories;
        private List<GetCostCategoryRuleRuleOrOrDimension> dimensions;
        private List<GetCostCategoryRuleRuleOrOrTag> tags;
        public Builder() {}
        public Builder(GetCostCategoryRuleRuleOrOr defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.costCategories = defaults.costCategories;
    	      this.dimensions = defaults.dimensions;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder costCategories(List<GetCostCategoryRuleRuleOrOrCostCategory> costCategories) {
            if (costCategories == null) {
              throw new MissingRequiredPropertyException("GetCostCategoryRuleRuleOrOr", "costCategories");
            }
            this.costCategories = costCategories;
            return this;
        }
        public Builder costCategories(GetCostCategoryRuleRuleOrOrCostCategory... costCategories) {
            return costCategories(List.of(costCategories));
        }
        @CustomType.Setter
        public Builder dimensions(List<GetCostCategoryRuleRuleOrOrDimension> dimensions) {
            if (dimensions == null) {
              throw new MissingRequiredPropertyException("GetCostCategoryRuleRuleOrOr", "dimensions");
            }
            this.dimensions = dimensions;
            return this;
        }
        public Builder dimensions(GetCostCategoryRuleRuleOrOrDimension... dimensions) {
            return dimensions(List.of(dimensions));
        }
        @CustomType.Setter
        public Builder tags(List<GetCostCategoryRuleRuleOrOrTag> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetCostCategoryRuleRuleOrOr", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(GetCostCategoryRuleRuleOrOrTag... tags) {
            return tags(List.of(tags));
        }
        public GetCostCategoryRuleRuleOrOr build() {
            final var _resultValue = new GetCostCategoryRuleRuleOrOr();
            _resultValue.costCategories = costCategories;
            _resultValue.dimensions = dimensions;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
