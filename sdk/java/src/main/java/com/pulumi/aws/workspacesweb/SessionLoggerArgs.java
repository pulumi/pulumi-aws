// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.workspacesweb;

import com.pulumi.aws.workspacesweb.inputs.SessionLoggerEventFilterArgs;
import com.pulumi.aws.workspacesweb.inputs.SessionLoggerLogConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SessionLoggerArgs extends com.pulumi.resources.ResourceArgs {

    public static final SessionLoggerArgs Empty = new SessionLoggerArgs();

    /**
     * Map of additional encryption context key-value pairs.
     * 
     */
    @Import(name="additionalEncryptionContext")
    private @Nullable Output<Map<String,String>> additionalEncryptionContext;

    /**
     * @return Map of additional encryption context key-value pairs.
     * 
     */
    public Optional<Output<Map<String,String>>> additionalEncryptionContext() {
        return Optional.ofNullable(this.additionalEncryptionContext);
    }

    /**
     * ARN of the customer managed KMS key used to encrypt sensitive information.
     * 
     */
    @Import(name="customerManagedKey")
    private @Nullable Output<String> customerManagedKey;

    /**
     * @return ARN of the customer managed KMS key used to encrypt sensitive information.
     * 
     */
    public Optional<Output<String>> customerManagedKey() {
        return Optional.ofNullable(this.customerManagedKey);
    }

    /**
     * Human-readable display name for the session logger resource. Forces replacement if changed.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return Human-readable display name for the session logger resource. Forces replacement if changed.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Event filter that determines which events are logged. See Event Filter below.
     * 
     */
    @Import(name="eventFilter")
    private @Nullable Output<SessionLoggerEventFilterArgs> eventFilter;

    /**
     * @return Event filter that determines which events are logged. See Event Filter below.
     * 
     */
    public Optional<Output<SessionLoggerEventFilterArgs>> eventFilter() {
        return Optional.ofNullable(this.eventFilter);
    }

    /**
     * Configuration block for specifying where logs are delivered. See Log Configuration below.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="logConfiguration")
    private @Nullable Output<SessionLoggerLogConfigurationArgs> logConfiguration;

    /**
     * @return Configuration block for specifying where logs are delivered. See Log Configuration below.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<SessionLoggerLogConfigurationArgs>> logConfiguration() {
        return Optional.ofNullable(this.logConfiguration);
    }

    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private SessionLoggerArgs() {}

    private SessionLoggerArgs(SessionLoggerArgs $) {
        this.additionalEncryptionContext = $.additionalEncryptionContext;
        this.customerManagedKey = $.customerManagedKey;
        this.displayName = $.displayName;
        this.eventFilter = $.eventFilter;
        this.logConfiguration = $.logConfiguration;
        this.region = $.region;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SessionLoggerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SessionLoggerArgs $;

        public Builder() {
            $ = new SessionLoggerArgs();
        }

        public Builder(SessionLoggerArgs defaults) {
            $ = new SessionLoggerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param additionalEncryptionContext Map of additional encryption context key-value pairs.
         * 
         * @return builder
         * 
         */
        public Builder additionalEncryptionContext(@Nullable Output<Map<String,String>> additionalEncryptionContext) {
            $.additionalEncryptionContext = additionalEncryptionContext;
            return this;
        }

        /**
         * @param additionalEncryptionContext Map of additional encryption context key-value pairs.
         * 
         * @return builder
         * 
         */
        public Builder additionalEncryptionContext(Map<String,String> additionalEncryptionContext) {
            return additionalEncryptionContext(Output.of(additionalEncryptionContext));
        }

        /**
         * @param customerManagedKey ARN of the customer managed KMS key used to encrypt sensitive information.
         * 
         * @return builder
         * 
         */
        public Builder customerManagedKey(@Nullable Output<String> customerManagedKey) {
            $.customerManagedKey = customerManagedKey;
            return this;
        }

        /**
         * @param customerManagedKey ARN of the customer managed KMS key used to encrypt sensitive information.
         * 
         * @return builder
         * 
         */
        public Builder customerManagedKey(String customerManagedKey) {
            return customerManagedKey(Output.of(customerManagedKey));
        }

        /**
         * @param displayName Human-readable display name for the session logger resource. Forces replacement if changed.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Human-readable display name for the session logger resource. Forces replacement if changed.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param eventFilter Event filter that determines which events are logged. See Event Filter below.
         * 
         * @return builder
         * 
         */
        public Builder eventFilter(@Nullable Output<SessionLoggerEventFilterArgs> eventFilter) {
            $.eventFilter = eventFilter;
            return this;
        }

        /**
         * @param eventFilter Event filter that determines which events are logged. See Event Filter below.
         * 
         * @return builder
         * 
         */
        public Builder eventFilter(SessionLoggerEventFilterArgs eventFilter) {
            return eventFilter(Output.of(eventFilter));
        }

        /**
         * @param logConfiguration Configuration block for specifying where logs are delivered. See Log Configuration below.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder logConfiguration(@Nullable Output<SessionLoggerLogConfigurationArgs> logConfiguration) {
            $.logConfiguration = logConfiguration;
            return this;
        }

        /**
         * @param logConfiguration Configuration block for specifying where logs are delivered. See Log Configuration below.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder logConfiguration(SessionLoggerLogConfigurationArgs logConfiguration) {
            return logConfiguration(Output.of(logConfiguration));
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param tags Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public SessionLoggerArgs build() {
            return $;
        }
    }

}
