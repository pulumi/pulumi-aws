// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker;

import com.pulumi.aws.sagemaker.inputs.SpaceSpaceSettingsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SpaceArgs extends com.pulumi.resources.ResourceArgs {

    public static final SpaceArgs Empty = new SpaceArgs();

    /**
     * The ID of the associated Domain.
     * 
     */
    @Import(name="domainId", required=true)
    private Output<String> domainId;

    /**
     * @return The ID of the associated Domain.
     * 
     */
    public Output<String> domainId() {
        return this.domainId;
    }

    /**
     * The name of the space that appears in the SageMaker Studio UI.
     * 
     */
    @Import(name="spaceDisplayName")
    private @Nullable Output<String> spaceDisplayName;

    /**
     * @return The name of the space that appears in the SageMaker Studio UI.
     * 
     */
    public Optional<Output<String>> spaceDisplayName() {
        return Optional.ofNullable(this.spaceDisplayName);
    }

    /**
     * The name of the space.
     * 
     */
    @Import(name="spaceName", required=true)
    private Output<String> spaceName;

    /**
     * @return The name of the space.
     * 
     */
    public Output<String> spaceName() {
        return this.spaceName;
    }

    /**
     * A collection of space settings. See Space Settings below.
     * 
     */
    @Import(name="spaceSettings")
    private @Nullable Output<SpaceSpaceSettingsArgs> spaceSettings;

    /**
     * @return A collection of space settings. See Space Settings below.
     * 
     */
    public Optional<Output<SpaceSpaceSettingsArgs>> spaceSettings() {
        return Optional.ofNullable(this.spaceSettings);
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private SpaceArgs() {}

    private SpaceArgs(SpaceArgs $) {
        this.domainId = $.domainId;
        this.spaceDisplayName = $.spaceDisplayName;
        this.spaceName = $.spaceName;
        this.spaceSettings = $.spaceSettings;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SpaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SpaceArgs $;

        public Builder() {
            $ = new SpaceArgs();
        }

        public Builder(SpaceArgs defaults) {
            $ = new SpaceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param domainId The ID of the associated Domain.
         * 
         * @return builder
         * 
         */
        public Builder domainId(Output<String> domainId) {
            $.domainId = domainId;
            return this;
        }

        /**
         * @param domainId The ID of the associated Domain.
         * 
         * @return builder
         * 
         */
        public Builder domainId(String domainId) {
            return domainId(Output.of(domainId));
        }

        /**
         * @param spaceDisplayName The name of the space that appears in the SageMaker Studio UI.
         * 
         * @return builder
         * 
         */
        public Builder spaceDisplayName(@Nullable Output<String> spaceDisplayName) {
            $.spaceDisplayName = spaceDisplayName;
            return this;
        }

        /**
         * @param spaceDisplayName The name of the space that appears in the SageMaker Studio UI.
         * 
         * @return builder
         * 
         */
        public Builder spaceDisplayName(String spaceDisplayName) {
            return spaceDisplayName(Output.of(spaceDisplayName));
        }

        /**
         * @param spaceName The name of the space.
         * 
         * @return builder
         * 
         */
        public Builder spaceName(Output<String> spaceName) {
            $.spaceName = spaceName;
            return this;
        }

        /**
         * @param spaceName The name of the space.
         * 
         * @return builder
         * 
         */
        public Builder spaceName(String spaceName) {
            return spaceName(Output.of(spaceName));
        }

        /**
         * @param spaceSettings A collection of space settings. See Space Settings below.
         * 
         * @return builder
         * 
         */
        public Builder spaceSettings(@Nullable Output<SpaceSpaceSettingsArgs> spaceSettings) {
            $.spaceSettings = spaceSettings;
            return this;
        }

        /**
         * @param spaceSettings A collection of space settings. See Space Settings below.
         * 
         * @return builder
         * 
         */
        public Builder spaceSettings(SpaceSpaceSettingsArgs spaceSettings) {
            return spaceSettings(Output.of(spaceSettings));
        }

        /**
         * @param tags A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public SpaceArgs build() {
            if ($.domainId == null) {
                throw new MissingRequiredPropertyException("SpaceArgs", "domainId");
            }
            if ($.spaceName == null) {
                throw new MissingRequiredPropertyException("SpaceArgs", "spaceName");
            }
            return $;
        }
    }

}
