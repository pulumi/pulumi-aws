// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cognito.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetUserGroupResult {
    /**
     * @return Description of the user group.
     * 
     */
    private String description;
    /**
     * @return A comma-delimited string concatenating `name` and `user_pool_id`.
     * 
     */
    private String id;
    private String name;
    /**
     * @return Precedence of the user group.
     * 
     */
    private Integer precedence;
    /**
     * @return ARN of the IAM role to be associated with the user group.
     * 
     */
    private String roleArn;
    private String userPoolId;

    private GetUserGroupResult() {}
    /**
     * @return Description of the user group.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A comma-delimited string concatenating `name` and `user_pool_id`.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return Precedence of the user group.
     * 
     */
    public Integer precedence() {
        return this.precedence;
    }
    /**
     * @return ARN of the IAM role to be associated with the user group.
     * 
     */
    public String roleArn() {
        return this.roleArn;
    }
    public String userPoolId() {
        return this.userPoolId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUserGroupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String id;
        private String name;
        private Integer precedence;
        private String roleArn;
        private String userPoolId;
        public Builder() {}
        public Builder(GetUserGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.precedence = defaults.precedence;
    	      this.roleArn = defaults.roleArn;
    	      this.userPoolId = defaults.userPoolId;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetUserGroupResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetUserGroupResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetUserGroupResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder precedence(Integer precedence) {
            if (precedence == null) {
              throw new MissingRequiredPropertyException("GetUserGroupResult", "precedence");
            }
            this.precedence = precedence;
            return this;
        }
        @CustomType.Setter
        public Builder roleArn(String roleArn) {
            if (roleArn == null) {
              throw new MissingRequiredPropertyException("GetUserGroupResult", "roleArn");
            }
            this.roleArn = roleArn;
            return this;
        }
        @CustomType.Setter
        public Builder userPoolId(String userPoolId) {
            if (userPoolId == null) {
              throw new MissingRequiredPropertyException("GetUserGroupResult", "userPoolId");
            }
            this.userPoolId = userPoolId;
            return this;
        }
        public GetUserGroupResult build() {
            final var _resultValue = new GetUserGroupResult();
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.precedence = precedence;
            _resultValue.roleArn = roleArn;
            _resultValue.userPoolId = userPoolId;
            return _resultValue;
        }
    }
}
