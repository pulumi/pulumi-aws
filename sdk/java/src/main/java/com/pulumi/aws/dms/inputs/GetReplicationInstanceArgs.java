// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetReplicationInstanceArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetReplicationInstanceArgs Empty = new GetReplicationInstanceArgs();

    /**
     * The replication instance identifier. This parameter is stored as a lowercase string.
     * 
     * - Must contain from 1 to 63 alphanumeric characters or hyphens.
     * - First character must be a letter.
     * - Cannot end with a hyphen
     * - Cannot contain two consecutive hyphens.
     * 
     */
    @Import(name="replicationInstanceId", required=true)
    private Output<String> replicationInstanceId;

    /**
     * @return The replication instance identifier. This parameter is stored as a lowercase string.
     * 
     * - Must contain from 1 to 63 alphanumeric characters or hyphens.
     * - First character must be a letter.
     * - Cannot end with a hyphen
     * - Cannot contain two consecutive hyphens.
     * 
     */
    public Output<String> replicationInstanceId() {
        return this.replicationInstanceId;
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private GetReplicationInstanceArgs() {}

    private GetReplicationInstanceArgs(GetReplicationInstanceArgs $) {
        this.replicationInstanceId = $.replicationInstanceId;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetReplicationInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetReplicationInstanceArgs $;

        public Builder() {
            $ = new GetReplicationInstanceArgs();
        }

        public Builder(GetReplicationInstanceArgs defaults) {
            $ = new GetReplicationInstanceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param replicationInstanceId The replication instance identifier. This parameter is stored as a lowercase string.
         * 
         * - Must contain from 1 to 63 alphanumeric characters or hyphens.
         * - First character must be a letter.
         * - Cannot end with a hyphen
         * - Cannot contain two consecutive hyphens.
         * 
         * @return builder
         * 
         */
        public Builder replicationInstanceId(Output<String> replicationInstanceId) {
            $.replicationInstanceId = replicationInstanceId;
            return this;
        }

        /**
         * @param replicationInstanceId The replication instance identifier. This parameter is stored as a lowercase string.
         * 
         * - Must contain from 1 to 63 alphanumeric characters or hyphens.
         * - First character must be a letter.
         * - Cannot end with a hyphen
         * - Cannot contain two consecutive hyphens.
         * 
         * @return builder
         * 
         */
        public Builder replicationInstanceId(String replicationInstanceId) {
            return replicationInstanceId(Output.of(replicationInstanceId));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public GetReplicationInstanceArgs build() {
            $.replicationInstanceId = Objects.requireNonNull($.replicationInstanceId, "expected parameter 'replicationInstanceId' to be non-null");
            return $;
        }
    }

}
