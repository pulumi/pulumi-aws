// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudformation.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StackInstancesStackInstanceSummaryArgs extends com.pulumi.resources.ResourceArgs {

    public static final StackInstancesStackInstanceSummaryArgs Empty = new StackInstancesStackInstanceSummaryArgs();

    /**
     * Account ID in which the instance is deployed.
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return Account ID in which the instance is deployed.
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * Detailed status of the stack instance. Values include `PENDING`, `RUNNING`, `SUCCEEDED`, `FAILED`, `CANCELLED`, `INOPERABLE`, `SKIPPED_SUSPENDED_ACCOUNT`, `FAILED_IMPORT`.
     * 
     */
    @Import(name="detailedStatus")
    private @Nullable Output<String> detailedStatus;

    /**
     * @return Detailed status of the stack instance. Values include `PENDING`, `RUNNING`, `SUCCEEDED`, `FAILED`, `CANCELLED`, `INOPERABLE`, `SKIPPED_SUSPENDED_ACCOUNT`, `FAILED_IMPORT`.
     * 
     */
    public Optional<Output<String>> detailedStatus() {
        return Optional.ofNullable(this.detailedStatus);
    }

    /**
     * Status of the stack instance&#39;s actual configuration compared to the expected template and parameter configuration of the stack set to which it belongs. Values include `DRIFTED`, `IN_SYNC`, `UNKNOWN`, `NOT_CHECKED`.
     * 
     */
    @Import(name="driftStatus")
    private @Nullable Output<String> driftStatus;

    /**
     * @return Status of the stack instance&#39;s actual configuration compared to the expected template and parameter configuration of the stack set to which it belongs. Values include `DRIFTED`, `IN_SYNC`, `UNKNOWN`, `NOT_CHECKED`.
     * 
     */
    public Optional<Output<String>> driftStatus() {
        return Optional.ofNullable(this.driftStatus);
    }

    /**
     * Organization root ID or organizational unit (OU) IDs that you specified for `deployment_targets`.
     * 
     */
    @Import(name="organizationalUnitId")
    private @Nullable Output<String> organizationalUnitId;

    /**
     * @return Organization root ID or organizational unit (OU) IDs that you specified for `deployment_targets`.
     * 
     */
    public Optional<Output<String>> organizationalUnitId() {
        return Optional.ofNullable(this.organizationalUnitId);
    }

    /**
     * Region that the stack instance is associated with.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region that the stack instance is associated with.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * ID of the stack instance.
     * 
     */
    @Import(name="stackId")
    private @Nullable Output<String> stackId;

    /**
     * @return ID of the stack instance.
     * 
     */
    public Optional<Output<String>> stackId() {
        return Optional.ofNullable(this.stackId);
    }

    /**
     * Name or unique ID of the stack set that the stack instance is associated with.
     * 
     */
    @Import(name="stackSetId")
    private @Nullable Output<String> stackSetId;

    /**
     * @return Name or unique ID of the stack set that the stack instance is associated with.
     * 
     */
    public Optional<Output<String>> stackSetId() {
        return Optional.ofNullable(this.stackSetId);
    }

    /**
     * Status of the stack instance, in terms of its synchronization with its associated stack set. Values include `CURRENT`, `OUTDATED`, `INOPERABLE`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Status of the stack instance, in terms of its synchronization with its associated stack set. Values include `CURRENT`, `OUTDATED`, `INOPERABLE`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Explanation for the specific status code assigned to this stack instance.
     * 
     */
    @Import(name="statusReason")
    private @Nullable Output<String> statusReason;

    /**
     * @return Explanation for the specific status code assigned to this stack instance.
     * 
     */
    public Optional<Output<String>> statusReason() {
        return Optional.ofNullable(this.statusReason);
    }

    private StackInstancesStackInstanceSummaryArgs() {}

    private StackInstancesStackInstanceSummaryArgs(StackInstancesStackInstanceSummaryArgs $) {
        this.accountId = $.accountId;
        this.detailedStatus = $.detailedStatus;
        this.driftStatus = $.driftStatus;
        this.organizationalUnitId = $.organizationalUnitId;
        this.region = $.region;
        this.stackId = $.stackId;
        this.stackSetId = $.stackSetId;
        this.status = $.status;
        this.statusReason = $.statusReason;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StackInstancesStackInstanceSummaryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StackInstancesStackInstanceSummaryArgs $;

        public Builder() {
            $ = new StackInstancesStackInstanceSummaryArgs();
        }

        public Builder(StackInstancesStackInstanceSummaryArgs defaults) {
            $ = new StackInstancesStackInstanceSummaryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Account ID in which the instance is deployed.
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Account ID in which the instance is deployed.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param detailedStatus Detailed status of the stack instance. Values include `PENDING`, `RUNNING`, `SUCCEEDED`, `FAILED`, `CANCELLED`, `INOPERABLE`, `SKIPPED_SUSPENDED_ACCOUNT`, `FAILED_IMPORT`.
         * 
         * @return builder
         * 
         */
        public Builder detailedStatus(@Nullable Output<String> detailedStatus) {
            $.detailedStatus = detailedStatus;
            return this;
        }

        /**
         * @param detailedStatus Detailed status of the stack instance. Values include `PENDING`, `RUNNING`, `SUCCEEDED`, `FAILED`, `CANCELLED`, `INOPERABLE`, `SKIPPED_SUSPENDED_ACCOUNT`, `FAILED_IMPORT`.
         * 
         * @return builder
         * 
         */
        public Builder detailedStatus(String detailedStatus) {
            return detailedStatus(Output.of(detailedStatus));
        }

        /**
         * @param driftStatus Status of the stack instance&#39;s actual configuration compared to the expected template and parameter configuration of the stack set to which it belongs. Values include `DRIFTED`, `IN_SYNC`, `UNKNOWN`, `NOT_CHECKED`.
         * 
         * @return builder
         * 
         */
        public Builder driftStatus(@Nullable Output<String> driftStatus) {
            $.driftStatus = driftStatus;
            return this;
        }

        /**
         * @param driftStatus Status of the stack instance&#39;s actual configuration compared to the expected template and parameter configuration of the stack set to which it belongs. Values include `DRIFTED`, `IN_SYNC`, `UNKNOWN`, `NOT_CHECKED`.
         * 
         * @return builder
         * 
         */
        public Builder driftStatus(String driftStatus) {
            return driftStatus(Output.of(driftStatus));
        }

        /**
         * @param organizationalUnitId Organization root ID or organizational unit (OU) IDs that you specified for `deployment_targets`.
         * 
         * @return builder
         * 
         */
        public Builder organizationalUnitId(@Nullable Output<String> organizationalUnitId) {
            $.organizationalUnitId = organizationalUnitId;
            return this;
        }

        /**
         * @param organizationalUnitId Organization root ID or organizational unit (OU) IDs that you specified for `deployment_targets`.
         * 
         * @return builder
         * 
         */
        public Builder organizationalUnitId(String organizationalUnitId) {
            return organizationalUnitId(Output.of(organizationalUnitId));
        }

        /**
         * @param region Region that the stack instance is associated with.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region that the stack instance is associated with.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param stackId ID of the stack instance.
         * 
         * @return builder
         * 
         */
        public Builder stackId(@Nullable Output<String> stackId) {
            $.stackId = stackId;
            return this;
        }

        /**
         * @param stackId ID of the stack instance.
         * 
         * @return builder
         * 
         */
        public Builder stackId(String stackId) {
            return stackId(Output.of(stackId));
        }

        /**
         * @param stackSetId Name or unique ID of the stack set that the stack instance is associated with.
         * 
         * @return builder
         * 
         */
        public Builder stackSetId(@Nullable Output<String> stackSetId) {
            $.stackSetId = stackSetId;
            return this;
        }

        /**
         * @param stackSetId Name or unique ID of the stack set that the stack instance is associated with.
         * 
         * @return builder
         * 
         */
        public Builder stackSetId(String stackSetId) {
            return stackSetId(Output.of(stackSetId));
        }

        /**
         * @param status Status of the stack instance, in terms of its synchronization with its associated stack set. Values include `CURRENT`, `OUTDATED`, `INOPERABLE`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Status of the stack instance, in terms of its synchronization with its associated stack set. Values include `CURRENT`, `OUTDATED`, `INOPERABLE`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param statusReason Explanation for the specific status code assigned to this stack instance.
         * 
         * @return builder
         * 
         */
        public Builder statusReason(@Nullable Output<String> statusReason) {
            $.statusReason = statusReason;
            return this;
        }

        /**
         * @param statusReason Explanation for the specific status code assigned to this stack instance.
         * 
         * @return builder
         * 
         */
        public Builder statusReason(String statusReason) {
            return statusReason(Output.of(statusReason));
        }

        public StackInstancesStackInstanceSummaryArgs build() {
            return $;
        }
    }

}
