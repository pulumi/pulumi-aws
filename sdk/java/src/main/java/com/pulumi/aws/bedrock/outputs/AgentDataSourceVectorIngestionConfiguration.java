// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.outputs;

import com.pulumi.aws.bedrock.outputs.AgentDataSourceVectorIngestionConfigurationChunkingConfiguration;
import com.pulumi.aws.bedrock.outputs.AgentDataSourceVectorIngestionConfigurationCustomTransformationConfiguration;
import com.pulumi.aws.bedrock.outputs.AgentDataSourceVectorIngestionConfigurationParsingConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AgentDataSourceVectorIngestionConfiguration {
    /**
     * @return Details about how to chunk the documents in the data source. A chunk refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried. See `chunking_configuration` block for details.
     * 
     */
    private @Nullable AgentDataSourceVectorIngestionConfigurationChunkingConfiguration chunkingConfiguration;
    /**
     * @return Configuration for custom transformation of data source documents.
     * 
     */
    private @Nullable AgentDataSourceVectorIngestionConfigurationCustomTransformationConfiguration customTransformationConfiguration;
    /**
     * @return Configuration for custom parsing of data source documents. See `parsing_configuration` block for details.
     * 
     */
    private @Nullable AgentDataSourceVectorIngestionConfigurationParsingConfiguration parsingConfiguration;

    private AgentDataSourceVectorIngestionConfiguration() {}
    /**
     * @return Details about how to chunk the documents in the data source. A chunk refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried. See `chunking_configuration` block for details.
     * 
     */
    public Optional<AgentDataSourceVectorIngestionConfigurationChunkingConfiguration> chunkingConfiguration() {
        return Optional.ofNullable(this.chunkingConfiguration);
    }
    /**
     * @return Configuration for custom transformation of data source documents.
     * 
     */
    public Optional<AgentDataSourceVectorIngestionConfigurationCustomTransformationConfiguration> customTransformationConfiguration() {
        return Optional.ofNullable(this.customTransformationConfiguration);
    }
    /**
     * @return Configuration for custom parsing of data source documents. See `parsing_configuration` block for details.
     * 
     */
    public Optional<AgentDataSourceVectorIngestionConfigurationParsingConfiguration> parsingConfiguration() {
        return Optional.ofNullable(this.parsingConfiguration);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AgentDataSourceVectorIngestionConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable AgentDataSourceVectorIngestionConfigurationChunkingConfiguration chunkingConfiguration;
        private @Nullable AgentDataSourceVectorIngestionConfigurationCustomTransformationConfiguration customTransformationConfiguration;
        private @Nullable AgentDataSourceVectorIngestionConfigurationParsingConfiguration parsingConfiguration;
        public Builder() {}
        public Builder(AgentDataSourceVectorIngestionConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.chunkingConfiguration = defaults.chunkingConfiguration;
    	      this.customTransformationConfiguration = defaults.customTransformationConfiguration;
    	      this.parsingConfiguration = defaults.parsingConfiguration;
        }

        @CustomType.Setter
        public Builder chunkingConfiguration(@Nullable AgentDataSourceVectorIngestionConfigurationChunkingConfiguration chunkingConfiguration) {

            this.chunkingConfiguration = chunkingConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder customTransformationConfiguration(@Nullable AgentDataSourceVectorIngestionConfigurationCustomTransformationConfiguration customTransformationConfiguration) {

            this.customTransformationConfiguration = customTransformationConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder parsingConfiguration(@Nullable AgentDataSourceVectorIngestionConfigurationParsingConfiguration parsingConfiguration) {

            this.parsingConfiguration = parsingConfiguration;
            return this;
        }
        public AgentDataSourceVectorIngestionConfiguration build() {
            final var _resultValue = new AgentDataSourceVectorIngestionConfiguration();
            _resultValue.chunkingConfiguration = chunkingConfiguration;
            _resultValue.customTransformationConfiguration = customTransformationConfiguration;
            _resultValue.parsingConfiguration = parsingConfiguration;
            return _resultValue;
        }
    }
}
