// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.identitystore;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.identitystore.inputs.GetGroupArgs;
import com.pulumi.aws.identitystore.inputs.GetGroupPlainArgs;
import com.pulumi.aws.identitystore.inputs.GetGroupsArgs;
import com.pulumi.aws.identitystore.inputs.GetGroupsPlainArgs;
import com.pulumi.aws.identitystore.inputs.GetUserArgs;
import com.pulumi.aws.identitystore.inputs.GetUserPlainArgs;
import com.pulumi.aws.identitystore.outputs.GetGroupResult;
import com.pulumi.aws.identitystore.outputs.GetGroupsResult;
import com.pulumi.aws.identitystore.outputs.GetUserResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import java.util.concurrent.CompletableFuture;

public final class IdentitystoreFunctions {
    /**
     * Use this data source to get an Identity Store Group.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.ssoadmin.SsoadminFunctions;
     * import com.pulumi.aws.identitystore.IdentitystoreFunctions;
     * import com.pulumi.aws.identitystore.inputs.GetGroupArgs;
     * import com.pulumi.aws.identitystore.inputs.GetGroupAlternateIdentifierArgs;
     * import com.pulumi.aws.identitystore.inputs.GetGroupAlternateIdentifierUniqueAttributeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = SsoadminFunctions.getInstances();
     * 
     *         final var exampleGetGroup = IdentitystoreFunctions.getGroup(GetGroupArgs.builder()
     *             .identityStoreId(example.applyValue(getInstancesResult -> getInstancesResult.identityStoreIds()[0]))
     *             .alternateIdentifier(GetGroupAlternateIdentifierArgs.builder()
     *                 .uniqueAttribute(GetGroupAlternateIdentifierUniqueAttributeArgs.builder()
     *                     .attributePath("DisplayName")
     *                     .attributeValue("ExampleGroup")
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         ctx.export("groupId", exampleGetGroup.applyValue(getGroupResult -> getGroupResult.groupId()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetGroupResult> getGroup(GetGroupArgs args) {
        return getGroup(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get an Identity Store Group.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.ssoadmin.SsoadminFunctions;
     * import com.pulumi.aws.identitystore.IdentitystoreFunctions;
     * import com.pulumi.aws.identitystore.inputs.GetGroupArgs;
     * import com.pulumi.aws.identitystore.inputs.GetGroupAlternateIdentifierArgs;
     * import com.pulumi.aws.identitystore.inputs.GetGroupAlternateIdentifierUniqueAttributeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = SsoadminFunctions.getInstances();
     * 
     *         final var exampleGetGroup = IdentitystoreFunctions.getGroup(GetGroupArgs.builder()
     *             .identityStoreId(example.applyValue(getInstancesResult -> getInstancesResult.identityStoreIds()[0]))
     *             .alternateIdentifier(GetGroupAlternateIdentifierArgs.builder()
     *                 .uniqueAttribute(GetGroupAlternateIdentifierUniqueAttributeArgs.builder()
     *                     .attributePath("DisplayName")
     *                     .attributeValue("ExampleGroup")
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         ctx.export("groupId", exampleGetGroup.applyValue(getGroupResult -> getGroupResult.groupId()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetGroupResult> getGroupPlain(GetGroupPlainArgs args) {
        return getGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get an Identity Store Group.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.ssoadmin.SsoadminFunctions;
     * import com.pulumi.aws.identitystore.IdentitystoreFunctions;
     * import com.pulumi.aws.identitystore.inputs.GetGroupArgs;
     * import com.pulumi.aws.identitystore.inputs.GetGroupAlternateIdentifierArgs;
     * import com.pulumi.aws.identitystore.inputs.GetGroupAlternateIdentifierUniqueAttributeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = SsoadminFunctions.getInstances();
     * 
     *         final var exampleGetGroup = IdentitystoreFunctions.getGroup(GetGroupArgs.builder()
     *             .identityStoreId(example.applyValue(getInstancesResult -> getInstancesResult.identityStoreIds()[0]))
     *             .alternateIdentifier(GetGroupAlternateIdentifierArgs.builder()
     *                 .uniqueAttribute(GetGroupAlternateIdentifierUniqueAttributeArgs.builder()
     *                     .attributePath("DisplayName")
     *                     .attributeValue("ExampleGroup")
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         ctx.export("groupId", exampleGetGroup.applyValue(getGroupResult -> getGroupResult.groupId()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetGroupResult> getGroup(GetGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:identitystore/getGroup:getGroup", TypeShape.of(GetGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get an Identity Store Group.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.ssoadmin.SsoadminFunctions;
     * import com.pulumi.aws.identitystore.IdentitystoreFunctions;
     * import com.pulumi.aws.identitystore.inputs.GetGroupArgs;
     * import com.pulumi.aws.identitystore.inputs.GetGroupAlternateIdentifierArgs;
     * import com.pulumi.aws.identitystore.inputs.GetGroupAlternateIdentifierUniqueAttributeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = SsoadminFunctions.getInstances();
     * 
     *         final var exampleGetGroup = IdentitystoreFunctions.getGroup(GetGroupArgs.builder()
     *             .identityStoreId(example.applyValue(getInstancesResult -> getInstancesResult.identityStoreIds()[0]))
     *             .alternateIdentifier(GetGroupAlternateIdentifierArgs.builder()
     *                 .uniqueAttribute(GetGroupAlternateIdentifierUniqueAttributeArgs.builder()
     *                     .attributePath("DisplayName")
     *                     .attributeValue("ExampleGroup")
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         ctx.export("groupId", exampleGetGroup.applyValue(getGroupResult -> getGroupResult.groupId()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetGroupResult> getGroup(GetGroupArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("aws:identitystore/getGroup:getGroup", TypeShape.of(GetGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get an Identity Store Group.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.ssoadmin.SsoadminFunctions;
     * import com.pulumi.aws.identitystore.IdentitystoreFunctions;
     * import com.pulumi.aws.identitystore.inputs.GetGroupArgs;
     * import com.pulumi.aws.identitystore.inputs.GetGroupAlternateIdentifierArgs;
     * import com.pulumi.aws.identitystore.inputs.GetGroupAlternateIdentifierUniqueAttributeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = SsoadminFunctions.getInstances();
     * 
     *         final var exampleGetGroup = IdentitystoreFunctions.getGroup(GetGroupArgs.builder()
     *             .identityStoreId(example.applyValue(getInstancesResult -> getInstancesResult.identityStoreIds()[0]))
     *             .alternateIdentifier(GetGroupAlternateIdentifierArgs.builder()
     *                 .uniqueAttribute(GetGroupAlternateIdentifierUniqueAttributeArgs.builder()
     *                     .attributePath("DisplayName")
     *                     .attributeValue("ExampleGroup")
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         ctx.export("groupId", exampleGetGroup.applyValue(getGroupResult -> getGroupResult.groupId()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetGroupResult> getGroupPlain(GetGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:identitystore/getGroup:getGroup", TypeShape.of(GetGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for managing an AWS SSO Identity Store Groups.
     * 
     * ## Example Usage
     * 
     * ### Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.ssoadmin.SsoadminFunctions;
     * import com.pulumi.aws.identitystore.IdentitystoreFunctions;
     * import com.pulumi.aws.identitystore.inputs.GetGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = SsoadminFunctions.getInstances();
     * 
     *         final var exampleGetGroups = IdentitystoreFunctions.getGroups(GetGroupsArgs.builder()
     *             .identityStoreId(example.applyValue(getInstancesResult -> getInstancesResult.identityStoreIds()[0]))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetGroupsResult> getGroups(GetGroupsArgs args) {
        return getGroups(args, InvokeOptions.Empty);
    }
    /**
     * Data source for managing an AWS SSO Identity Store Groups.
     * 
     * ## Example Usage
     * 
     * ### Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.ssoadmin.SsoadminFunctions;
     * import com.pulumi.aws.identitystore.IdentitystoreFunctions;
     * import com.pulumi.aws.identitystore.inputs.GetGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = SsoadminFunctions.getInstances();
     * 
     *         final var exampleGetGroups = IdentitystoreFunctions.getGroups(GetGroupsArgs.builder()
     *             .identityStoreId(example.applyValue(getInstancesResult -> getInstancesResult.identityStoreIds()[0]))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetGroupsResult> getGroupsPlain(GetGroupsPlainArgs args) {
        return getGroupsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for managing an AWS SSO Identity Store Groups.
     * 
     * ## Example Usage
     * 
     * ### Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.ssoadmin.SsoadminFunctions;
     * import com.pulumi.aws.identitystore.IdentitystoreFunctions;
     * import com.pulumi.aws.identitystore.inputs.GetGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = SsoadminFunctions.getInstances();
     * 
     *         final var exampleGetGroups = IdentitystoreFunctions.getGroups(GetGroupsArgs.builder()
     *             .identityStoreId(example.applyValue(getInstancesResult -> getInstancesResult.identityStoreIds()[0]))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetGroupsResult> getGroups(GetGroupsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:identitystore/getGroups:getGroups", TypeShape.of(GetGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for managing an AWS SSO Identity Store Groups.
     * 
     * ## Example Usage
     * 
     * ### Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.ssoadmin.SsoadminFunctions;
     * import com.pulumi.aws.identitystore.IdentitystoreFunctions;
     * import com.pulumi.aws.identitystore.inputs.GetGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = SsoadminFunctions.getInstances();
     * 
     *         final var exampleGetGroups = IdentitystoreFunctions.getGroups(GetGroupsArgs.builder()
     *             .identityStoreId(example.applyValue(getInstancesResult -> getInstancesResult.identityStoreIds()[0]))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetGroupsResult> getGroups(GetGroupsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("aws:identitystore/getGroups:getGroups", TypeShape.of(GetGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for managing an AWS SSO Identity Store Groups.
     * 
     * ## Example Usage
     * 
     * ### Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.ssoadmin.SsoadminFunctions;
     * import com.pulumi.aws.identitystore.IdentitystoreFunctions;
     * import com.pulumi.aws.identitystore.inputs.GetGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = SsoadminFunctions.getInstances();
     * 
     *         final var exampleGetGroups = IdentitystoreFunctions.getGroups(GetGroupsArgs.builder()
     *             .identityStoreId(example.applyValue(getInstancesResult -> getInstancesResult.identityStoreIds()[0]))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetGroupsResult> getGroupsPlain(GetGroupsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:identitystore/getGroups:getGroups", TypeShape.of(GetGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get an Identity Store User.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.ssoadmin.SsoadminFunctions;
     * import com.pulumi.aws.identitystore.IdentitystoreFunctions;
     * import com.pulumi.aws.identitystore.inputs.GetUserArgs;
     * import com.pulumi.aws.identitystore.inputs.GetUserAlternateIdentifierArgs;
     * import com.pulumi.aws.identitystore.inputs.GetUserAlternateIdentifierUniqueAttributeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = SsoadminFunctions.getInstances();
     * 
     *         final var exampleGetUser = IdentitystoreFunctions.getUser(GetUserArgs.builder()
     *             .identityStoreId(example.applyValue(getInstancesResult -> getInstancesResult.identityStoreIds()[0]))
     *             .alternateIdentifier(GetUserAlternateIdentifierArgs.builder()
     *                 .uniqueAttribute(GetUserAlternateIdentifierUniqueAttributeArgs.builder()
     *                     .attributePath("UserName")
     *                     .attributeValue("ExampleUser")
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         ctx.export("userId", exampleGetUser.applyValue(getUserResult -> getUserResult.userId()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUserResult> getUser(GetUserArgs args) {
        return getUser(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get an Identity Store User.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.ssoadmin.SsoadminFunctions;
     * import com.pulumi.aws.identitystore.IdentitystoreFunctions;
     * import com.pulumi.aws.identitystore.inputs.GetUserArgs;
     * import com.pulumi.aws.identitystore.inputs.GetUserAlternateIdentifierArgs;
     * import com.pulumi.aws.identitystore.inputs.GetUserAlternateIdentifierUniqueAttributeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = SsoadminFunctions.getInstances();
     * 
     *         final var exampleGetUser = IdentitystoreFunctions.getUser(GetUserArgs.builder()
     *             .identityStoreId(example.applyValue(getInstancesResult -> getInstancesResult.identityStoreIds()[0]))
     *             .alternateIdentifier(GetUserAlternateIdentifierArgs.builder()
     *                 .uniqueAttribute(GetUserAlternateIdentifierUniqueAttributeArgs.builder()
     *                     .attributePath("UserName")
     *                     .attributeValue("ExampleUser")
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         ctx.export("userId", exampleGetUser.applyValue(getUserResult -> getUserResult.userId()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUserResult> getUserPlain(GetUserPlainArgs args) {
        return getUserPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get an Identity Store User.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.ssoadmin.SsoadminFunctions;
     * import com.pulumi.aws.identitystore.IdentitystoreFunctions;
     * import com.pulumi.aws.identitystore.inputs.GetUserArgs;
     * import com.pulumi.aws.identitystore.inputs.GetUserAlternateIdentifierArgs;
     * import com.pulumi.aws.identitystore.inputs.GetUserAlternateIdentifierUniqueAttributeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = SsoadminFunctions.getInstances();
     * 
     *         final var exampleGetUser = IdentitystoreFunctions.getUser(GetUserArgs.builder()
     *             .identityStoreId(example.applyValue(getInstancesResult -> getInstancesResult.identityStoreIds()[0]))
     *             .alternateIdentifier(GetUserAlternateIdentifierArgs.builder()
     *                 .uniqueAttribute(GetUserAlternateIdentifierUniqueAttributeArgs.builder()
     *                     .attributePath("UserName")
     *                     .attributeValue("ExampleUser")
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         ctx.export("userId", exampleGetUser.applyValue(getUserResult -> getUserResult.userId()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUserResult> getUser(GetUserArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:identitystore/getUser:getUser", TypeShape.of(GetUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get an Identity Store User.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.ssoadmin.SsoadminFunctions;
     * import com.pulumi.aws.identitystore.IdentitystoreFunctions;
     * import com.pulumi.aws.identitystore.inputs.GetUserArgs;
     * import com.pulumi.aws.identitystore.inputs.GetUserAlternateIdentifierArgs;
     * import com.pulumi.aws.identitystore.inputs.GetUserAlternateIdentifierUniqueAttributeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = SsoadminFunctions.getInstances();
     * 
     *         final var exampleGetUser = IdentitystoreFunctions.getUser(GetUserArgs.builder()
     *             .identityStoreId(example.applyValue(getInstancesResult -> getInstancesResult.identityStoreIds()[0]))
     *             .alternateIdentifier(GetUserAlternateIdentifierArgs.builder()
     *                 .uniqueAttribute(GetUserAlternateIdentifierUniqueAttributeArgs.builder()
     *                     .attributePath("UserName")
     *                     .attributeValue("ExampleUser")
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         ctx.export("userId", exampleGetUser.applyValue(getUserResult -> getUserResult.userId()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUserResult> getUser(GetUserArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("aws:identitystore/getUser:getUser", TypeShape.of(GetUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get an Identity Store User.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.ssoadmin.SsoadminFunctions;
     * import com.pulumi.aws.identitystore.IdentitystoreFunctions;
     * import com.pulumi.aws.identitystore.inputs.GetUserArgs;
     * import com.pulumi.aws.identitystore.inputs.GetUserAlternateIdentifierArgs;
     * import com.pulumi.aws.identitystore.inputs.GetUserAlternateIdentifierUniqueAttributeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = SsoadminFunctions.getInstances();
     * 
     *         final var exampleGetUser = IdentitystoreFunctions.getUser(GetUserArgs.builder()
     *             .identityStoreId(example.applyValue(getInstancesResult -> getInstancesResult.identityStoreIds()[0]))
     *             .alternateIdentifier(GetUserAlternateIdentifierArgs.builder()
     *                 .uniqueAttribute(GetUserAlternateIdentifierUniqueAttributeArgs.builder()
     *                     .attributePath("UserName")
     *                     .attributeValue("ExampleUser")
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         ctx.export("userId", exampleGetUser.applyValue(getUserResult -> getUserResult.userId()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUserResult> getUserPlain(GetUserPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:identitystore/getUser:getUser", TypeShape.of(GetUserResult.class), args, Utilities.withVersion(options));
    }
}
