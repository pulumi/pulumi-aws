// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codepipeline.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PipelineStageOnFailureRetryConfiguration {
    /**
     * @return The method that you want to configure for automatic stage retry on stage failure. You can specify to retry only failed action in the stage or all actions in the stage. Possible values are `FAILED_ACTIONS` and `ALL_ACTIONS`.
     * 
     */
    private @Nullable String retryMode;

    private PipelineStageOnFailureRetryConfiguration() {}
    /**
     * @return The method that you want to configure for automatic stage retry on stage failure. You can specify to retry only failed action in the stage or all actions in the stage. Possible values are `FAILED_ACTIONS` and `ALL_ACTIONS`.
     * 
     */
    public Optional<String> retryMode() {
        return Optional.ofNullable(this.retryMode);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PipelineStageOnFailureRetryConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String retryMode;
        public Builder() {}
        public Builder(PipelineStageOnFailureRetryConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.retryMode = defaults.retryMode;
        }

        @CustomType.Setter
        public Builder retryMode(@Nullable String retryMode) {

            this.retryMode = retryMode;
            return this;
        }
        public PipelineStageOnFailureRetryConfiguration build() {
            final var _resultValue = new PipelineStageOnFailureRetryConfiguration();
            _resultValue.retryMode = retryMode;
            return _resultValue;
        }
    }
}
