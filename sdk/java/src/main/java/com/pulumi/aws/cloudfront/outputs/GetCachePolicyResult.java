// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudfront.outputs;

import com.pulumi.aws.cloudfront.outputs.GetCachePolicyParametersInCacheKeyAndForwardedToOrigin;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCachePolicyResult {
    /**
     * @return Comment to describe the cache policy.
     * 
     */
    private @Nullable String comment;
    /**
     * @return Default amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
     * 
     */
    private @Nullable Integer defaultTtl;
    /**
     * @return Current version of the cache policy.
     * 
     */
    private @Nullable String etag;
    private @Nullable String id;
    /**
     * @return Maximum amount of time, in seconds, that objects stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
     * 
     */
    private @Nullable Integer maxTtl;
    /**
     * @return Minimum amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
     * 
     */
    private @Nullable Integer minTtl;
    private @Nullable String name;
    /**
     * @return The HTTP headers, cookies, and URL query strings to include in the cache key. See Parameters In Cache Key And Forwarded To Origin for more information.
     * 
     */
    private @Nullable List<GetCachePolicyParametersInCacheKeyAndForwardedToOrigin> parametersInCacheKeyAndForwardedToOrigins;

    private GetCachePolicyResult() {}
    /**
     * @return Comment to describe the cache policy.
     * 
     */
    public Optional<String> comment() {
        return Optional.ofNullable(this.comment);
    }
    /**
     * @return Default amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
     * 
     */
    public Optional<Integer> defaultTtl() {
        return Optional.ofNullable(this.defaultTtl);
    }
    /**
     * @return Current version of the cache policy.
     * 
     */
    public Optional<String> etag() {
        return Optional.ofNullable(this.etag);
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Maximum amount of time, in seconds, that objects stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
     * 
     */
    public Optional<Integer> maxTtl() {
        return Optional.ofNullable(this.maxTtl);
    }
    /**
     * @return Minimum amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
     * 
     */
    public Optional<Integer> minTtl() {
        return Optional.ofNullable(this.minTtl);
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The HTTP headers, cookies, and URL query strings to include in the cache key. See Parameters In Cache Key And Forwarded To Origin for more information.
     * 
     */
    public List<GetCachePolicyParametersInCacheKeyAndForwardedToOrigin> parametersInCacheKeyAndForwardedToOrigins() {
        return this.parametersInCacheKeyAndForwardedToOrigins == null ? List.of() : this.parametersInCacheKeyAndForwardedToOrigins;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCachePolicyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String comment;
        private @Nullable Integer defaultTtl;
        private @Nullable String etag;
        private @Nullable String id;
        private @Nullable Integer maxTtl;
        private @Nullable Integer minTtl;
        private @Nullable String name;
        private @Nullable List<GetCachePolicyParametersInCacheKeyAndForwardedToOrigin> parametersInCacheKeyAndForwardedToOrigins;
        public Builder() {}
        public Builder(GetCachePolicyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.comment = defaults.comment;
    	      this.defaultTtl = defaults.defaultTtl;
    	      this.etag = defaults.etag;
    	      this.id = defaults.id;
    	      this.maxTtl = defaults.maxTtl;
    	      this.minTtl = defaults.minTtl;
    	      this.name = defaults.name;
    	      this.parametersInCacheKeyAndForwardedToOrigins = defaults.parametersInCacheKeyAndForwardedToOrigins;
        }

        @CustomType.Setter
        public Builder comment(@Nullable String comment) {
            this.comment = comment;
            return this;
        }
        @CustomType.Setter
        public Builder defaultTtl(@Nullable Integer defaultTtl) {
            this.defaultTtl = defaultTtl;
            return this;
        }
        @CustomType.Setter
        public Builder etag(@Nullable String etag) {
            this.etag = etag;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder maxTtl(@Nullable Integer maxTtl) {
            this.maxTtl = maxTtl;
            return this;
        }
        @CustomType.Setter
        public Builder minTtl(@Nullable Integer minTtl) {
            this.minTtl = minTtl;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder parametersInCacheKeyAndForwardedToOrigins(@Nullable List<GetCachePolicyParametersInCacheKeyAndForwardedToOrigin> parametersInCacheKeyAndForwardedToOrigins) {
            this.parametersInCacheKeyAndForwardedToOrigins = parametersInCacheKeyAndForwardedToOrigins;
            return this;
        }
        public Builder parametersInCacheKeyAndForwardedToOrigins(GetCachePolicyParametersInCacheKeyAndForwardedToOrigin... parametersInCacheKeyAndForwardedToOrigins) {
            return parametersInCacheKeyAndForwardedToOrigins(List.of(parametersInCacheKeyAndForwardedToOrigins));
        }
        public GetCachePolicyResult build() {
            final var o = new GetCachePolicyResult();
            o.comment = comment;
            o.defaultTtl = defaultTtl;
            o.etag = etag;
            o.id = id;
            o.maxTtl = maxTtl;
            o.minTtl = minTtl;
            o.name = name;
            o.parametersInCacheKeyAndForwardedToOrigins = parametersInCacheKeyAndForwardedToOrigins;
            return o;
        }
    }
}
