// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.medialive.outputs;

import com.pulumi.aws.medialive.outputs.ChannelEncoderSettingsAvailBlankingAvailBlankingImage;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ChannelEncoderSettingsAvailBlanking {
    /**
     * @return Blanking image to be used. See Avail Blanking Image for more details.
     * 
     */
    private @Nullable ChannelEncoderSettingsAvailBlankingAvailBlankingImage availBlankingImage;
    /**
     * @return When set to enabled, causes video, audio and captions to be blanked when insertion metadata is added.
     * 
     */
    private @Nullable String state;

    private ChannelEncoderSettingsAvailBlanking() {}
    /**
     * @return Blanking image to be used. See Avail Blanking Image for more details.
     * 
     */
    public Optional<ChannelEncoderSettingsAvailBlankingAvailBlankingImage> availBlankingImage() {
        return Optional.ofNullable(this.availBlankingImage);
    }
    /**
     * @return When set to enabled, causes video, audio and captions to be blanked when insertion metadata is added.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ChannelEncoderSettingsAvailBlanking defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ChannelEncoderSettingsAvailBlankingAvailBlankingImage availBlankingImage;
        private @Nullable String state;
        public Builder() {}
        public Builder(ChannelEncoderSettingsAvailBlanking defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availBlankingImage = defaults.availBlankingImage;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder availBlankingImage(@Nullable ChannelEncoderSettingsAvailBlankingAvailBlankingImage availBlankingImage) {

            this.availBlankingImage = availBlankingImage;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        public ChannelEncoderSettingsAvailBlanking build() {
            final var _resultValue = new ChannelEncoderSettingsAvailBlanking();
            _resultValue.availBlankingImage = availBlankingImage;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
