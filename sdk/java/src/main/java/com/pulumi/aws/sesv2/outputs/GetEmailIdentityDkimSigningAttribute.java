// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sesv2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetEmailIdentityDkimSigningAttribute {
    /**
     * @return [Easy DKIM] The key length of the DKIM key pair in use.
     * 
     */
    private String currentSigningKeyLength;
    private String domainSigningPrivateKey;
    private String domainSigningSelector;
    /**
     * @return [Easy DKIM] The last time a key pair was generated for this identity.
     * 
     */
    private String lastKeyGenerationTimestamp;
    /**
     * @return [Easy DKIM] The key length of the future DKIM key pair to be generated. This can be changed at most once per day.
     * 
     */
    private String nextSigningKeyLength;
    /**
     * @return A string that indicates how DKIM was configured for the identity. `AWS_SES` indicates that DKIM was configured for the identity by using Easy DKIM. `EXTERNAL` indicates that DKIM was configured for the identity by using Bring Your Own DKIM (BYODKIM).
     * 
     */
    private String signingAttributesOrigin;
    /**
     * @return Describes whether or not Amazon SES has successfully located the DKIM records in the DNS records for the domain. See the [AWS SES API v2 Reference](https://docs.aws.amazon.com/ses/latest/APIReference-V2/API_DkimAttributes.html#SES-Type-DkimAttributes-Status) for supported statuses.
     * 
     */
    private String status;
    /**
     * @return If you used Easy DKIM to configure DKIM authentication for the domain, then this object contains a set of unique strings that you use to create a set of CNAME records that you add to the DNS configuration for your domain. When Amazon SES detects these records in the DNS configuration for your domain, the DKIM authentication process is complete. If you configured DKIM authentication for the domain by providing your own public-private key pair, then this object contains the selector for the public key.
     * 
     */
    private List<String> tokens;

    private GetEmailIdentityDkimSigningAttribute() {}
    /**
     * @return [Easy DKIM] The key length of the DKIM key pair in use.
     * 
     */
    public String currentSigningKeyLength() {
        return this.currentSigningKeyLength;
    }
    public String domainSigningPrivateKey() {
        return this.domainSigningPrivateKey;
    }
    public String domainSigningSelector() {
        return this.domainSigningSelector;
    }
    /**
     * @return [Easy DKIM] The last time a key pair was generated for this identity.
     * 
     */
    public String lastKeyGenerationTimestamp() {
        return this.lastKeyGenerationTimestamp;
    }
    /**
     * @return [Easy DKIM] The key length of the future DKIM key pair to be generated. This can be changed at most once per day.
     * 
     */
    public String nextSigningKeyLength() {
        return this.nextSigningKeyLength;
    }
    /**
     * @return A string that indicates how DKIM was configured for the identity. `AWS_SES` indicates that DKIM was configured for the identity by using Easy DKIM. `EXTERNAL` indicates that DKIM was configured for the identity by using Bring Your Own DKIM (BYODKIM).
     * 
     */
    public String signingAttributesOrigin() {
        return this.signingAttributesOrigin;
    }
    /**
     * @return Describes whether or not Amazon SES has successfully located the DKIM records in the DNS records for the domain. See the [AWS SES API v2 Reference](https://docs.aws.amazon.com/ses/latest/APIReference-V2/API_DkimAttributes.html#SES-Type-DkimAttributes-Status) for supported statuses.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return If you used Easy DKIM to configure DKIM authentication for the domain, then this object contains a set of unique strings that you use to create a set of CNAME records that you add to the DNS configuration for your domain. When Amazon SES detects these records in the DNS configuration for your domain, the DKIM authentication process is complete. If you configured DKIM authentication for the domain by providing your own public-private key pair, then this object contains the selector for the public key.
     * 
     */
    public List<String> tokens() {
        return this.tokens;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEmailIdentityDkimSigningAttribute defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String currentSigningKeyLength;
        private String domainSigningPrivateKey;
        private String domainSigningSelector;
        private String lastKeyGenerationTimestamp;
        private String nextSigningKeyLength;
        private String signingAttributesOrigin;
        private String status;
        private List<String> tokens;
        public Builder() {}
        public Builder(GetEmailIdentityDkimSigningAttribute defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.currentSigningKeyLength = defaults.currentSigningKeyLength;
    	      this.domainSigningPrivateKey = defaults.domainSigningPrivateKey;
    	      this.domainSigningSelector = defaults.domainSigningSelector;
    	      this.lastKeyGenerationTimestamp = defaults.lastKeyGenerationTimestamp;
    	      this.nextSigningKeyLength = defaults.nextSigningKeyLength;
    	      this.signingAttributesOrigin = defaults.signingAttributesOrigin;
    	      this.status = defaults.status;
    	      this.tokens = defaults.tokens;
        }

        @CustomType.Setter
        public Builder currentSigningKeyLength(String currentSigningKeyLength) {
            this.currentSigningKeyLength = Objects.requireNonNull(currentSigningKeyLength);
            return this;
        }
        @CustomType.Setter
        public Builder domainSigningPrivateKey(String domainSigningPrivateKey) {
            this.domainSigningPrivateKey = Objects.requireNonNull(domainSigningPrivateKey);
            return this;
        }
        @CustomType.Setter
        public Builder domainSigningSelector(String domainSigningSelector) {
            this.domainSigningSelector = Objects.requireNonNull(domainSigningSelector);
            return this;
        }
        @CustomType.Setter
        public Builder lastKeyGenerationTimestamp(String lastKeyGenerationTimestamp) {
            this.lastKeyGenerationTimestamp = Objects.requireNonNull(lastKeyGenerationTimestamp);
            return this;
        }
        @CustomType.Setter
        public Builder nextSigningKeyLength(String nextSigningKeyLength) {
            this.nextSigningKeyLength = Objects.requireNonNull(nextSigningKeyLength);
            return this;
        }
        @CustomType.Setter
        public Builder signingAttributesOrigin(String signingAttributesOrigin) {
            this.signingAttributesOrigin = Objects.requireNonNull(signingAttributesOrigin);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder tokens(List<String> tokens) {
            this.tokens = Objects.requireNonNull(tokens);
            return this;
        }
        public Builder tokens(String... tokens) {
            return tokens(List.of(tokens));
        }
        public GetEmailIdentityDkimSigningAttribute build() {
            final var o = new GetEmailIdentityDkimSigningAttribute();
            o.currentSigningKeyLength = currentSigningKeyLength;
            o.domainSigningPrivateKey = domainSigningPrivateKey;
            o.domainSigningSelector = domainSigningSelector;
            o.lastKeyGenerationTimestamp = lastKeyGenerationTimestamp;
            o.nextSigningKeyLength = nextSigningKeyLength;
            o.signingAttributesOrigin = signingAttributesOrigin;
            o.status = status;
            o.tokens = tokens;
            return o;
        }
    }
}
