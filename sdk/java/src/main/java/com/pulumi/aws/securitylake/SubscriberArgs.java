// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.securitylake;

import com.pulumi.aws.securitylake.inputs.SubscriberSourceArgs;
import com.pulumi.aws.securitylake.inputs.SubscriberSubscriberIdentityArgs;
import com.pulumi.aws.securitylake.inputs.SubscriberTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SubscriberArgs extends com.pulumi.resources.ResourceArgs {

    public static final SubscriberArgs Empty = new SubscriberArgs();

    @Import(name="accessType")
    private @Nullable Output<String> accessType;

    public Optional<Output<String>> accessType() {
        return Optional.ofNullable(this.accessType);
    }

    /**
     * The supported AWS services from which logs and events are collected. Security Lake supports log and event collection for natively supported AWS services.
     * 
     */
    @Import(name="source")
    private @Nullable Output<SubscriberSourceArgs> source;

    /**
     * @return The supported AWS services from which logs and events are collected. Security Lake supports log and event collection for natively supported AWS services.
     * 
     */
    public Optional<Output<SubscriberSourceArgs>> source() {
        return Optional.ofNullable(this.source);
    }

    /**
     * The description for your subscriber account in Security Lake.
     * 
     */
    @Import(name="subscriberDescription")
    private @Nullable Output<String> subscriberDescription;

    /**
     * @return The description for your subscriber account in Security Lake.
     * 
     */
    public Optional<Output<String>> subscriberDescription() {
        return Optional.ofNullable(this.subscriberDescription);
    }

    /**
     * The AWS identity used to access your data.
     * 
     */
    @Import(name="subscriberIdentity")
    private @Nullable Output<SubscriberSubscriberIdentityArgs> subscriberIdentity;

    /**
     * @return The AWS identity used to access your data.
     * 
     */
    public Optional<Output<SubscriberSubscriberIdentityArgs>> subscriberIdentity() {
        return Optional.ofNullable(this.subscriberIdentity);
    }

    /**
     * The name of your Security Lake subscriber account.
     * 
     */
    @Import(name="subscriberName")
    private @Nullable Output<String> subscriberName;

    /**
     * @return The name of your Security Lake subscriber account.
     * 
     */
    public Optional<Output<String>> subscriberName() {
        return Optional.ofNullable(this.subscriberName);
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="timeouts")
    private @Nullable Output<SubscriberTimeoutsArgs> timeouts;

    public Optional<Output<SubscriberTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private SubscriberArgs() {}

    private SubscriberArgs(SubscriberArgs $) {
        this.accessType = $.accessType;
        this.source = $.source;
        this.subscriberDescription = $.subscriberDescription;
        this.subscriberIdentity = $.subscriberIdentity;
        this.subscriberName = $.subscriberName;
        this.tags = $.tags;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SubscriberArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SubscriberArgs $;

        public Builder() {
            $ = new SubscriberArgs();
        }

        public Builder(SubscriberArgs defaults) {
            $ = new SubscriberArgs(Objects.requireNonNull(defaults));
        }

        public Builder accessType(@Nullable Output<String> accessType) {
            $.accessType = accessType;
            return this;
        }

        public Builder accessType(String accessType) {
            return accessType(Output.of(accessType));
        }

        /**
         * @param source The supported AWS services from which logs and events are collected. Security Lake supports log and event collection for natively supported AWS services.
         * 
         * @return builder
         * 
         */
        public Builder source(@Nullable Output<SubscriberSourceArgs> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source The supported AWS services from which logs and events are collected. Security Lake supports log and event collection for natively supported AWS services.
         * 
         * @return builder
         * 
         */
        public Builder source(SubscriberSourceArgs source) {
            return source(Output.of(source));
        }

        /**
         * @param subscriberDescription The description for your subscriber account in Security Lake.
         * 
         * @return builder
         * 
         */
        public Builder subscriberDescription(@Nullable Output<String> subscriberDescription) {
            $.subscriberDescription = subscriberDescription;
            return this;
        }

        /**
         * @param subscriberDescription The description for your subscriber account in Security Lake.
         * 
         * @return builder
         * 
         */
        public Builder subscriberDescription(String subscriberDescription) {
            return subscriberDescription(Output.of(subscriberDescription));
        }

        /**
         * @param subscriberIdentity The AWS identity used to access your data.
         * 
         * @return builder
         * 
         */
        public Builder subscriberIdentity(@Nullable Output<SubscriberSubscriberIdentityArgs> subscriberIdentity) {
            $.subscriberIdentity = subscriberIdentity;
            return this;
        }

        /**
         * @param subscriberIdentity The AWS identity used to access your data.
         * 
         * @return builder
         * 
         */
        public Builder subscriberIdentity(SubscriberSubscriberIdentityArgs subscriberIdentity) {
            return subscriberIdentity(Output.of(subscriberIdentity));
        }

        /**
         * @param subscriberName The name of your Security Lake subscriber account.
         * 
         * @return builder
         * 
         */
        public Builder subscriberName(@Nullable Output<String> subscriberName) {
            $.subscriberName = subscriberName;
            return this;
        }

        /**
         * @param subscriberName The name of your Security Lake subscriber account.
         * 
         * @return builder
         * 
         */
        public Builder subscriberName(String subscriberName) {
            return subscriberName(Output.of(subscriberName));
        }

        /**
         * @param tags Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder timeouts(@Nullable Output<SubscriberTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(SubscriberTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public SubscriberArgs build() {
            return $;
        }
    }

}
