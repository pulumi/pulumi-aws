// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecr.inputs;

import com.pulumi.aws.ecr.inputs.RegistryScanningConfigurationRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RegistryScanningConfigurationState extends com.pulumi.resources.ResourceArgs {

    public static final RegistryScanningConfigurationState Empty = new RegistryScanningConfigurationState();

    @Import(name="registryId")
    private @Nullable Output<String> registryId;

    public Optional<Output<String>> registryId() {
        return Optional.ofNullable(this.registryId);
    }

    @Import(name="rules")
    private @Nullable Output<List<RegistryScanningConfigurationRuleArgs>> rules;

    public Optional<Output<List<RegistryScanningConfigurationRuleArgs>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    @Import(name="scanType")
    private @Nullable Output<String> scanType;

    public Optional<Output<String>> scanType() {
        return Optional.ofNullable(this.scanType);
    }

    private RegistryScanningConfigurationState() {}

    private RegistryScanningConfigurationState(RegistryScanningConfigurationState $) {
        this.registryId = $.registryId;
        this.rules = $.rules;
        this.scanType = $.scanType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RegistryScanningConfigurationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RegistryScanningConfigurationState $;

        public Builder() {
            $ = new RegistryScanningConfigurationState();
        }

        public Builder(RegistryScanningConfigurationState defaults) {
            $ = new RegistryScanningConfigurationState(Objects.requireNonNull(defaults));
        }

        public Builder registryId(@Nullable Output<String> registryId) {
            $.registryId = registryId;
            return this;
        }

        public Builder registryId(String registryId) {
            return registryId(Output.of(registryId));
        }

        public Builder rules(@Nullable Output<List<RegistryScanningConfigurationRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        public Builder rules(List<RegistryScanningConfigurationRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        public Builder rules(RegistryScanningConfigurationRuleArgs... rules) {
            return rules(List.of(rules));
        }

        public Builder scanType(@Nullable Output<String> scanType) {
            $.scanType = scanType;
            return this;
        }

        public Builder scanType(String scanType) {
            return scanType(Output.of(scanType));
        }

        public RegistryScanningConfigurationState build() {
            return $;
        }
    }

}
