// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudformation.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class StackInstancesStackInstanceSummary {
    /**
     * @return Account ID in which the instance is deployed.
     * 
     */
    private @Nullable String accountId;
    /**
     * @return Detailed status of the stack instance. Values include `PENDING`, `RUNNING`, `SUCCEEDED`, `FAILED`, `CANCELLED`, `INOPERABLE`, `SKIPPED_SUSPENDED_ACCOUNT`, `FAILED_IMPORT`.
     * 
     */
    private @Nullable String detailedStatus;
    /**
     * @return Status of the stack instance&#39;s actual configuration compared to the expected template and parameter configuration of the stack set to which it belongs. Values include `DRIFTED`, `IN_SYNC`, `UNKNOWN`, `NOT_CHECKED`.
     * 
     */
    private @Nullable String driftStatus;
    /**
     * @return Organization root ID or organizational unit (OU) IDs that you specified for `deployment_targets`.
     * 
     */
    private @Nullable String organizationalUnitId;
    /**
     * @return Region that the stack instance is associated with.
     * 
     */
    private @Nullable String region;
    /**
     * @return ID of the stack instance.
     * 
     */
    private @Nullable String stackId;
    /**
     * @return Name or unique ID of the stack set that the stack instance is associated with.
     * 
     */
    private @Nullable String stackSetId;
    /**
     * @return Status of the stack instance, in terms of its synchronization with its associated stack set. Values include `CURRENT`, `OUTDATED`, `INOPERABLE`.
     * 
     */
    private @Nullable String status;
    /**
     * @return Explanation for the specific status code assigned to this stack instance.
     * 
     */
    private @Nullable String statusReason;

    private StackInstancesStackInstanceSummary() {}
    /**
     * @return Account ID in which the instance is deployed.
     * 
     */
    public Optional<String> accountId() {
        return Optional.ofNullable(this.accountId);
    }
    /**
     * @return Detailed status of the stack instance. Values include `PENDING`, `RUNNING`, `SUCCEEDED`, `FAILED`, `CANCELLED`, `INOPERABLE`, `SKIPPED_SUSPENDED_ACCOUNT`, `FAILED_IMPORT`.
     * 
     */
    public Optional<String> detailedStatus() {
        return Optional.ofNullable(this.detailedStatus);
    }
    /**
     * @return Status of the stack instance&#39;s actual configuration compared to the expected template and parameter configuration of the stack set to which it belongs. Values include `DRIFTED`, `IN_SYNC`, `UNKNOWN`, `NOT_CHECKED`.
     * 
     */
    public Optional<String> driftStatus() {
        return Optional.ofNullable(this.driftStatus);
    }
    /**
     * @return Organization root ID or organizational unit (OU) IDs that you specified for `deployment_targets`.
     * 
     */
    public Optional<String> organizationalUnitId() {
        return Optional.ofNullable(this.organizationalUnitId);
    }
    /**
     * @return Region that the stack instance is associated with.
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    /**
     * @return ID of the stack instance.
     * 
     */
    public Optional<String> stackId() {
        return Optional.ofNullable(this.stackId);
    }
    /**
     * @return Name or unique ID of the stack set that the stack instance is associated with.
     * 
     */
    public Optional<String> stackSetId() {
        return Optional.ofNullable(this.stackSetId);
    }
    /**
     * @return Status of the stack instance, in terms of its synchronization with its associated stack set. Values include `CURRENT`, `OUTDATED`, `INOPERABLE`.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return Explanation for the specific status code assigned to this stack instance.
     * 
     */
    public Optional<String> statusReason() {
        return Optional.ofNullable(this.statusReason);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StackInstancesStackInstanceSummary defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accountId;
        private @Nullable String detailedStatus;
        private @Nullable String driftStatus;
        private @Nullable String organizationalUnitId;
        private @Nullable String region;
        private @Nullable String stackId;
        private @Nullable String stackSetId;
        private @Nullable String status;
        private @Nullable String statusReason;
        public Builder() {}
        public Builder(StackInstancesStackInstanceSummary defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.detailedStatus = defaults.detailedStatus;
    	      this.driftStatus = defaults.driftStatus;
    	      this.organizationalUnitId = defaults.organizationalUnitId;
    	      this.region = defaults.region;
    	      this.stackId = defaults.stackId;
    	      this.stackSetId = defaults.stackSetId;
    	      this.status = defaults.status;
    	      this.statusReason = defaults.statusReason;
        }

        @CustomType.Setter
        public Builder accountId(@Nullable String accountId) {

            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder detailedStatus(@Nullable String detailedStatus) {

            this.detailedStatus = detailedStatus;
            return this;
        }
        @CustomType.Setter
        public Builder driftStatus(@Nullable String driftStatus) {

            this.driftStatus = driftStatus;
            return this;
        }
        @CustomType.Setter
        public Builder organizationalUnitId(@Nullable String organizationalUnitId) {

            this.organizationalUnitId = organizationalUnitId;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {

            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder stackId(@Nullable String stackId) {

            this.stackId = stackId;
            return this;
        }
        @CustomType.Setter
        public Builder stackSetId(@Nullable String stackSetId) {

            this.stackSetId = stackSetId;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {

            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder statusReason(@Nullable String statusReason) {

            this.statusReason = statusReason;
            return this;
        }
        public StackInstancesStackInstanceSummary build() {
            final var _resultValue = new StackInstancesStackInstanceSummary();
            _resultValue.accountId = accountId;
            _resultValue.detailedStatus = detailedStatus;
            _resultValue.driftStatus = driftStatus;
            _resultValue.organizationalUnitId = organizationalUnitId;
            _resultValue.region = region;
            _resultValue.stackId = stackId;
            _resultValue.stackSetId = stackSetId;
            _resultValue.status = status;
            _resultValue.statusReason = statusReason;
            return _resultValue;
        }
    }
}
