// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ssoadmin.inputs;

import com.pulumi.aws.ssoadmin.inputs.GetApplicationAssignmentsApplicationAssignmentArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetApplicationAssignmentsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetApplicationAssignmentsArgs Empty = new GetApplicationAssignmentsArgs();

    /**
     * ARN of the application.
     * 
     */
    @Import(name="applicationArn", required=true)
    private Output<String> applicationArn;

    /**
     * @return ARN of the application.
     * 
     */
    public Output<String> applicationArn() {
        return this.applicationArn;
    }

    /**
     * List of principals assigned to the application. See the `application_assignments` attribute reference below.
     * 
     */
    @Import(name="applicationAssignments")
    private @Nullable Output<List<GetApplicationAssignmentsApplicationAssignmentArgs>> applicationAssignments;

    /**
     * @return List of principals assigned to the application. See the `application_assignments` attribute reference below.
     * 
     */
    public Optional<Output<List<GetApplicationAssignmentsApplicationAssignmentArgs>>> applicationAssignments() {
        return Optional.ofNullable(this.applicationAssignments);
    }

    private GetApplicationAssignmentsArgs() {}

    private GetApplicationAssignmentsArgs(GetApplicationAssignmentsArgs $) {
        this.applicationArn = $.applicationArn;
        this.applicationAssignments = $.applicationAssignments;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetApplicationAssignmentsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetApplicationAssignmentsArgs $;

        public Builder() {
            $ = new GetApplicationAssignmentsArgs();
        }

        public Builder(GetApplicationAssignmentsArgs defaults) {
            $ = new GetApplicationAssignmentsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationArn ARN of the application.
         * 
         * @return builder
         * 
         */
        public Builder applicationArn(Output<String> applicationArn) {
            $.applicationArn = applicationArn;
            return this;
        }

        /**
         * @param applicationArn ARN of the application.
         * 
         * @return builder
         * 
         */
        public Builder applicationArn(String applicationArn) {
            return applicationArn(Output.of(applicationArn));
        }

        /**
         * @param applicationAssignments List of principals assigned to the application. See the `application_assignments` attribute reference below.
         * 
         * @return builder
         * 
         */
        public Builder applicationAssignments(@Nullable Output<List<GetApplicationAssignmentsApplicationAssignmentArgs>> applicationAssignments) {
            $.applicationAssignments = applicationAssignments;
            return this;
        }

        /**
         * @param applicationAssignments List of principals assigned to the application. See the `application_assignments` attribute reference below.
         * 
         * @return builder
         * 
         */
        public Builder applicationAssignments(List<GetApplicationAssignmentsApplicationAssignmentArgs> applicationAssignments) {
            return applicationAssignments(Output.of(applicationAssignments));
        }

        /**
         * @param applicationAssignments List of principals assigned to the application. See the `application_assignments` attribute reference below.
         * 
         * @return builder
         * 
         */
        public Builder applicationAssignments(GetApplicationAssignmentsApplicationAssignmentArgs... applicationAssignments) {
            return applicationAssignments(List.of(applicationAssignments));
        }

        public GetApplicationAssignmentsArgs build() {
            if ($.applicationArn == null) {
                throw new MissingRequiredPropertyException("GetApplicationAssignmentsArgs", "applicationArn");
            }
            return $;
        }
    }

}
