// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudwatch;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ContributorInsightRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContributorInsightRuleArgs Empty = new ContributorInsightRuleArgs();

    /**
     * Definition of the rule, as a JSON object. For details on the valid syntax, see [Contributor Insights Rule Syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights-RuleSyntax.html).
     * 
     */
    @Import(name="ruleDefinition", required=true)
    private Output<String> ruleDefinition;

    /**
     * @return Definition of the rule, as a JSON object. For details on the valid syntax, see [Contributor Insights Rule Syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights-RuleSyntax.html).
     * 
     */
    public Output<String> ruleDefinition() {
        return this.ruleDefinition;
    }

    /**
     * Unique name of the rule.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="ruleName", required=true)
    private Output<String> ruleName;

    /**
     * @return Unique name of the rule.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<String> ruleName() {
        return this.ruleName;
    }

    /**
     * State of the rule. Valid values are `ENABLED` and `DISABLED`.
     * 
     */
    @Import(name="ruleState")
    private @Nullable Output<String> ruleState;

    /**
     * @return State of the rule. Valid values are `ENABLED` and `DISABLED`.
     * 
     */
    public Optional<Output<String>> ruleState() {
        return Optional.ofNullable(this.ruleState);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ContributorInsightRuleArgs() {}

    private ContributorInsightRuleArgs(ContributorInsightRuleArgs $) {
        this.ruleDefinition = $.ruleDefinition;
        this.ruleName = $.ruleName;
        this.ruleState = $.ruleState;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContributorInsightRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContributorInsightRuleArgs $;

        public Builder() {
            $ = new ContributorInsightRuleArgs();
        }

        public Builder(ContributorInsightRuleArgs defaults) {
            $ = new ContributorInsightRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ruleDefinition Definition of the rule, as a JSON object. For details on the valid syntax, see [Contributor Insights Rule Syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights-RuleSyntax.html).
         * 
         * @return builder
         * 
         */
        public Builder ruleDefinition(Output<String> ruleDefinition) {
            $.ruleDefinition = ruleDefinition;
            return this;
        }

        /**
         * @param ruleDefinition Definition of the rule, as a JSON object. For details on the valid syntax, see [Contributor Insights Rule Syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights-RuleSyntax.html).
         * 
         * @return builder
         * 
         */
        public Builder ruleDefinition(String ruleDefinition) {
            return ruleDefinition(Output.of(ruleDefinition));
        }

        /**
         * @param ruleName Unique name of the rule.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder ruleName(Output<String> ruleName) {
            $.ruleName = ruleName;
            return this;
        }

        /**
         * @param ruleName Unique name of the rule.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder ruleName(String ruleName) {
            return ruleName(Output.of(ruleName));
        }

        /**
         * @param ruleState State of the rule. Valid values are `ENABLED` and `DISABLED`.
         * 
         * @return builder
         * 
         */
        public Builder ruleState(@Nullable Output<String> ruleState) {
            $.ruleState = ruleState;
            return this;
        }

        /**
         * @param ruleState State of the rule. Valid values are `ENABLED` and `DISABLED`.
         * 
         * @return builder
         * 
         */
        public Builder ruleState(String ruleState) {
            return ruleState(Output.of(ruleState));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public ContributorInsightRuleArgs build() {
            if ($.ruleDefinition == null) {
                throw new MissingRequiredPropertyException("ContributorInsightRuleArgs", "ruleDefinition");
            }
            if ($.ruleName == null) {
                throw new MissingRequiredPropertyException("ContributorInsightRuleArgs", "ruleName");
            }
            return $;
        }
    }

}
