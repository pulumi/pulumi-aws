// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dlm.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LifecyclePolicyPolicyDetailsParameters {
    /**
     * @return Indicates whether to exclude the root volume from snapshots created using CreateSnapshots. The default is `false`.
     * 
     */
    private @Nullable Boolean excludeBootVolume;
    /**
     * @return Applies to AMI lifecycle policies only. Indicates whether targeted instances are rebooted when the lifecycle policy runs. `true` indicates that targeted instances are not rebooted when the policy runs. `false` indicates that target instances are rebooted when the policy runs. The default is `true` (instances are not rebooted).
     * 
     */
    private @Nullable Boolean noReboot;

    private LifecyclePolicyPolicyDetailsParameters() {}
    /**
     * @return Indicates whether to exclude the root volume from snapshots created using CreateSnapshots. The default is `false`.
     * 
     */
    public Optional<Boolean> excludeBootVolume() {
        return Optional.ofNullable(this.excludeBootVolume);
    }
    /**
     * @return Applies to AMI lifecycle policies only. Indicates whether targeted instances are rebooted when the lifecycle policy runs. `true` indicates that targeted instances are not rebooted when the policy runs. `false` indicates that target instances are rebooted when the policy runs. The default is `true` (instances are not rebooted).
     * 
     */
    public Optional<Boolean> noReboot() {
        return Optional.ofNullable(this.noReboot);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LifecyclePolicyPolicyDetailsParameters defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean excludeBootVolume;
        private @Nullable Boolean noReboot;
        public Builder() {}
        public Builder(LifecyclePolicyPolicyDetailsParameters defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.excludeBootVolume = defaults.excludeBootVolume;
    	      this.noReboot = defaults.noReboot;
        }

        @CustomType.Setter
        public Builder excludeBootVolume(@Nullable Boolean excludeBootVolume) {
            this.excludeBootVolume = excludeBootVolume;
            return this;
        }
        @CustomType.Setter
        public Builder noReboot(@Nullable Boolean noReboot) {
            this.noReboot = noReboot;
            return this;
        }
        public LifecyclePolicyPolicyDetailsParameters build() {
            final var o = new LifecyclePolicyPolicyDetailsParameters();
            o.excludeBootVolume = excludeBootVolume;
            o.noReboot = noReboot;
            return o;
        }
    }
}
