// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.workspacesweb.inputs;

import com.pulumi.aws.workspacesweb.inputs.SessionLoggerEventFilterAllArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SessionLoggerEventFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final SessionLoggerEventFilterArgs Empty = new SessionLoggerEventFilterArgs();

    /**
     * Block that specifies to monitor all events. Set to `{}` to monitor all events.
     * 
     */
    @Import(name="all")
    private @Nullable Output<SessionLoggerEventFilterAllArgs> all;

    /**
     * @return Block that specifies to monitor all events. Set to `{}` to monitor all events.
     * 
     */
    public Optional<Output<SessionLoggerEventFilterAllArgs>> all() {
        return Optional.ofNullable(this.all);
    }

    /**
     * List of specific events to monitor. Valid values include session events like `SessionStart`, `SessionEnd`, etc.
     * 
     */
    @Import(name="includes")
    private @Nullable Output<List<String>> includes;

    /**
     * @return List of specific events to monitor. Valid values include session events like `SessionStart`, `SessionEnd`, etc.
     * 
     */
    public Optional<Output<List<String>>> includes() {
        return Optional.ofNullable(this.includes);
    }

    private SessionLoggerEventFilterArgs() {}

    private SessionLoggerEventFilterArgs(SessionLoggerEventFilterArgs $) {
        this.all = $.all;
        this.includes = $.includes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SessionLoggerEventFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SessionLoggerEventFilterArgs $;

        public Builder() {
            $ = new SessionLoggerEventFilterArgs();
        }

        public Builder(SessionLoggerEventFilterArgs defaults) {
            $ = new SessionLoggerEventFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param all Block that specifies to monitor all events. Set to `{}` to monitor all events.
         * 
         * @return builder
         * 
         */
        public Builder all(@Nullable Output<SessionLoggerEventFilterAllArgs> all) {
            $.all = all;
            return this;
        }

        /**
         * @param all Block that specifies to monitor all events. Set to `{}` to monitor all events.
         * 
         * @return builder
         * 
         */
        public Builder all(SessionLoggerEventFilterAllArgs all) {
            return all(Output.of(all));
        }

        /**
         * @param includes List of specific events to monitor. Valid values include session events like `SessionStart`, `SessionEnd`, etc.
         * 
         * @return builder
         * 
         */
        public Builder includes(@Nullable Output<List<String>> includes) {
            $.includes = includes;
            return this;
        }

        /**
         * @param includes List of specific events to monitor. Valid values include session events like `SessionStart`, `SessionEnd`, etc.
         * 
         * @return builder
         * 
         */
        public Builder includes(List<String> includes) {
            return includes(Output.of(includes));
        }

        /**
         * @param includes List of specific events to monitor. Valid values include session events like `SessionStart`, `SessionEnd`, etc.
         * 
         * @return builder
         * 
         */
        public Builder includes(String... includes) {
            return includes(List.of(includes));
        }

        public SessionLoggerEventFilterArgs build() {
            return $;
        }
    }

}
