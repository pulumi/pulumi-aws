// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.imagebuilder.inputs;

import com.pulumi.aws.imagebuilder.inputs.ImageOutputResourceAmiArgs;
import com.pulumi.aws.imagebuilder.inputs.ImageOutputResourceContainerArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ImageOutputResourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ImageOutputResourceArgs Empty = new ImageOutputResourceArgs();

    /**
     * Set of objects with each Amazon Machine Image (AMI) created.
     * 
     */
    @Import(name="amis")
    private @Nullable Output<List<ImageOutputResourceAmiArgs>> amis;

    /**
     * @return Set of objects with each Amazon Machine Image (AMI) created.
     * 
     */
    public Optional<Output<List<ImageOutputResourceAmiArgs>>> amis() {
        return Optional.ofNullable(this.amis);
    }

    /**
     * Set of objects with each container image created and stored in the output repository.
     * 
     */
    @Import(name="containers")
    private @Nullable Output<List<ImageOutputResourceContainerArgs>> containers;

    /**
     * @return Set of objects with each container image created and stored in the output repository.
     * 
     */
    public Optional<Output<List<ImageOutputResourceContainerArgs>>> containers() {
        return Optional.ofNullable(this.containers);
    }

    private ImageOutputResourceArgs() {}

    private ImageOutputResourceArgs(ImageOutputResourceArgs $) {
        this.amis = $.amis;
        this.containers = $.containers;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ImageOutputResourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ImageOutputResourceArgs $;

        public Builder() {
            $ = new ImageOutputResourceArgs();
        }

        public Builder(ImageOutputResourceArgs defaults) {
            $ = new ImageOutputResourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param amis Set of objects with each Amazon Machine Image (AMI) created.
         * 
         * @return builder
         * 
         */
        public Builder amis(@Nullable Output<List<ImageOutputResourceAmiArgs>> amis) {
            $.amis = amis;
            return this;
        }

        /**
         * @param amis Set of objects with each Amazon Machine Image (AMI) created.
         * 
         * @return builder
         * 
         */
        public Builder amis(List<ImageOutputResourceAmiArgs> amis) {
            return amis(Output.of(amis));
        }

        /**
         * @param amis Set of objects with each Amazon Machine Image (AMI) created.
         * 
         * @return builder
         * 
         */
        public Builder amis(ImageOutputResourceAmiArgs... amis) {
            return amis(List.of(amis));
        }

        /**
         * @param containers Set of objects with each container image created and stored in the output repository.
         * 
         * @return builder
         * 
         */
        public Builder containers(@Nullable Output<List<ImageOutputResourceContainerArgs>> containers) {
            $.containers = containers;
            return this;
        }

        /**
         * @param containers Set of objects with each container image created and stored in the output repository.
         * 
         * @return builder
         * 
         */
        public Builder containers(List<ImageOutputResourceContainerArgs> containers) {
            return containers(Output.of(containers));
        }

        /**
         * @param containers Set of objects with each container image created and stored in the output repository.
         * 
         * @return builder
         * 
         */
        public Builder containers(ImageOutputResourceContainerArgs... containers) {
            return containers(List.of(containers));
        }

        public ImageOutputResourceArgs build() {
            return $;
        }
    }

}
