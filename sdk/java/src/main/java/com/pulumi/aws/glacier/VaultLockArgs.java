// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.glacier;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VaultLockArgs extends com.pulumi.resources.ResourceArgs {

    public static final VaultLockArgs Empty = new VaultLockArgs();

    @Import(name="completeLock", required=true)
    private Output<Boolean> completeLock;

    public Output<Boolean> completeLock() {
        return this.completeLock;
    }

    @Import(name="ignoreDeletionError")
    private @Nullable Output<Boolean> ignoreDeletionError;

    public Optional<Output<Boolean>> ignoreDeletionError() {
        return Optional.ofNullable(this.ignoreDeletionError);
    }

    @Import(name="policy", required=true)
    private Output<String> policy;

    public Output<String> policy() {
        return this.policy;
    }

    @Import(name="vaultName", required=true)
    private Output<String> vaultName;

    public Output<String> vaultName() {
        return this.vaultName;
    }

    private VaultLockArgs() {}

    private VaultLockArgs(VaultLockArgs $) {
        this.completeLock = $.completeLock;
        this.ignoreDeletionError = $.ignoreDeletionError;
        this.policy = $.policy;
        this.vaultName = $.vaultName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VaultLockArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VaultLockArgs $;

        public Builder() {
            $ = new VaultLockArgs();
        }

        public Builder(VaultLockArgs defaults) {
            $ = new VaultLockArgs(Objects.requireNonNull(defaults));
        }

        public Builder completeLock(Output<Boolean> completeLock) {
            $.completeLock = completeLock;
            return this;
        }

        public Builder completeLock(Boolean completeLock) {
            return completeLock(Output.of(completeLock));
        }

        public Builder ignoreDeletionError(@Nullable Output<Boolean> ignoreDeletionError) {
            $.ignoreDeletionError = ignoreDeletionError;
            return this;
        }

        public Builder ignoreDeletionError(Boolean ignoreDeletionError) {
            return ignoreDeletionError(Output.of(ignoreDeletionError));
        }

        public Builder policy(Output<String> policy) {
            $.policy = policy;
            return this;
        }

        public Builder policy(String policy) {
            return policy(Output.of(policy));
        }

        public Builder vaultName(Output<String> vaultName) {
            $.vaultName = vaultName;
            return this;
        }

        public Builder vaultName(String vaultName) {
            return vaultName(Output.of(vaultName));
        }

        public VaultLockArgs build() {
            $.completeLock = Objects.requireNonNull($.completeLock, "expected parameter 'completeLock' to be non-null");
            $.policy = Objects.requireNonNull($.policy, "expected parameter 'policy' to be non-null");
            $.vaultName = Objects.requireNonNull($.vaultName, "expected parameter 'vaultName' to be non-null");
            return $;
        }
    }

}
