// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.efs.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ReplicationConfigurationDestination {
    /**
     * @return The availability zone in which the replica should be created. If specified, the replica will be created with One Zone storage. If omitted, regional storage will be used.
     * 
     */
    private @Nullable String availabilityZoneName;
    private @Nullable String fileSystemId;
    /**
     * @return The Key ID, ARN, alias, or alias ARN of the KMS key that should be used to encrypt the replica file system. If omitted, the default KMS key for EFS `/aws/elasticfilesystem` will be used.
     * 
     */
    private @Nullable String kmsKeyId;
    /**
     * @return The region in which the replica should be created.
     * 
     */
    private @Nullable String region;
    private @Nullable String status;

    private ReplicationConfigurationDestination() {}
    /**
     * @return The availability zone in which the replica should be created. If specified, the replica will be created with One Zone storage. If omitted, regional storage will be used.
     * 
     */
    public Optional<String> availabilityZoneName() {
        return Optional.ofNullable(this.availabilityZoneName);
    }
    public Optional<String> fileSystemId() {
        return Optional.ofNullable(this.fileSystemId);
    }
    /**
     * @return The Key ID, ARN, alias, or alias ARN of the KMS key that should be used to encrypt the replica file system. If omitted, the default KMS key for EFS `/aws/elasticfilesystem` will be used.
     * 
     */
    public Optional<String> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }
    /**
     * @return The region in which the replica should be created.
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ReplicationConfigurationDestination defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String availabilityZoneName;
        private @Nullable String fileSystemId;
        private @Nullable String kmsKeyId;
        private @Nullable String region;
        private @Nullable String status;
        public Builder() {}
        public Builder(ReplicationConfigurationDestination defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityZoneName = defaults.availabilityZoneName;
    	      this.fileSystemId = defaults.fileSystemId;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.region = defaults.region;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder availabilityZoneName(@Nullable String availabilityZoneName) {

            this.availabilityZoneName = availabilityZoneName;
            return this;
        }
        @CustomType.Setter
        public Builder fileSystemId(@Nullable String fileSystemId) {

            this.fileSystemId = fileSystemId;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyId(@Nullable String kmsKeyId) {

            this.kmsKeyId = kmsKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {

            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {

            this.status = status;
            return this;
        }
        public ReplicationConfigurationDestination build() {
            final var _resultValue = new ReplicationConfigurationDestination();
            _resultValue.availabilityZoneName = availabilityZoneName;
            _resultValue.fileSystemId = fileSystemId;
            _resultValue.kmsKeyId = kmsKeyId;
            _resultValue.region = region;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
