// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecs.inputs;

import com.pulumi.aws.ecs.inputs.ServiceServiceConnectConfigurationServiceClientAliasArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceServiceConnectConfigurationServiceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceServiceConnectConfigurationServiceArgs Empty = new ServiceServiceConnectConfigurationServiceArgs();

    @Import(name="clientAliases", required=true)
    private Output<List<ServiceServiceConnectConfigurationServiceClientAliasArgs>> clientAliases;

    public Output<List<ServiceServiceConnectConfigurationServiceClientAliasArgs>> clientAliases() {
        return this.clientAliases;
    }

    @Import(name="discoveryName")
    private @Nullable Output<String> discoveryName;

    public Optional<Output<String>> discoveryName() {
        return Optional.ofNullable(this.discoveryName);
    }

    @Import(name="ingressPortOverride")
    private @Nullable Output<Integer> ingressPortOverride;

    public Optional<Output<Integer>> ingressPortOverride() {
        return Optional.ofNullable(this.ingressPortOverride);
    }

    @Import(name="portName", required=true)
    private Output<String> portName;

    public Output<String> portName() {
        return this.portName;
    }

    private ServiceServiceConnectConfigurationServiceArgs() {}

    private ServiceServiceConnectConfigurationServiceArgs(ServiceServiceConnectConfigurationServiceArgs $) {
        this.clientAliases = $.clientAliases;
        this.discoveryName = $.discoveryName;
        this.ingressPortOverride = $.ingressPortOverride;
        this.portName = $.portName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceServiceConnectConfigurationServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceServiceConnectConfigurationServiceArgs $;

        public Builder() {
            $ = new ServiceServiceConnectConfigurationServiceArgs();
        }

        public Builder(ServiceServiceConnectConfigurationServiceArgs defaults) {
            $ = new ServiceServiceConnectConfigurationServiceArgs(Objects.requireNonNull(defaults));
        }

        public Builder clientAliases(Output<List<ServiceServiceConnectConfigurationServiceClientAliasArgs>> clientAliases) {
            $.clientAliases = clientAliases;
            return this;
        }

        public Builder clientAliases(List<ServiceServiceConnectConfigurationServiceClientAliasArgs> clientAliases) {
            return clientAliases(Output.of(clientAliases));
        }

        public Builder clientAliases(ServiceServiceConnectConfigurationServiceClientAliasArgs... clientAliases) {
            return clientAliases(List.of(clientAliases));
        }

        public Builder discoveryName(@Nullable Output<String> discoveryName) {
            $.discoveryName = discoveryName;
            return this;
        }

        public Builder discoveryName(String discoveryName) {
            return discoveryName(Output.of(discoveryName));
        }

        public Builder ingressPortOverride(@Nullable Output<Integer> ingressPortOverride) {
            $.ingressPortOverride = ingressPortOverride;
            return this;
        }

        public Builder ingressPortOverride(Integer ingressPortOverride) {
            return ingressPortOverride(Output.of(ingressPortOverride));
        }

        public Builder portName(Output<String> portName) {
            $.portName = portName;
            return this;
        }

        public Builder portName(String portName) {
            return portName(Output.of(portName));
        }

        public ServiceServiceConnectConfigurationServiceArgs build() {
            $.clientAliases = Objects.requireNonNull($.clientAliases, "expected parameter 'clientAliases' to be non-null");
            $.portName = Objects.requireNonNull($.portName, "expected parameter 'portName' to be non-null");
            return $;
        }
    }

}
