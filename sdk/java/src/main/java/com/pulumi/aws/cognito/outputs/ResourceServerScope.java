// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cognito.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ResourceServerScope {
    /**
     * @return The scope description.
     * 
     */
    private String scopeDescription;
    /**
     * @return The scope name.
     * 
     */
    private String scopeName;

    private ResourceServerScope() {}
    /**
     * @return The scope description.
     * 
     */
    public String scopeDescription() {
        return this.scopeDescription;
    }
    /**
     * @return The scope name.
     * 
     */
    public String scopeName() {
        return this.scopeName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourceServerScope defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String scopeDescription;
        private String scopeName;
        public Builder() {}
        public Builder(ResourceServerScope defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.scopeDescription = defaults.scopeDescription;
    	      this.scopeName = defaults.scopeName;
        }

        @CustomType.Setter
        public Builder scopeDescription(String scopeDescription) {
            if (scopeDescription == null) {
              throw new MissingRequiredPropertyException("ResourceServerScope", "scopeDescription");
            }
            this.scopeDescription = scopeDescription;
            return this;
        }
        @CustomType.Setter
        public Builder scopeName(String scopeName) {
            if (scopeName == null) {
              throw new MissingRequiredPropertyException("ResourceServerScope", "scopeName");
            }
            this.scopeName = scopeName;
            return this;
        }
        public ResourceServerScope build() {
            final var _resultValue = new ResourceServerScope();
            _resultValue.scopeDescription = scopeDescription;
            _resultValue.scopeName = scopeName;
            return _resultValue;
        }
    }
}
