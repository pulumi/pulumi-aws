// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.medialive;

import com.pulumi.aws.medialive.inputs.InputDestinationArgs;
import com.pulumi.aws.medialive.inputs.InputInputDeviceArgs;
import com.pulumi.aws.medialive.inputs.InputMediaConnectFlowArgs;
import com.pulumi.aws.medialive.inputs.InputSourceArgs;
import com.pulumi.aws.medialive.inputs.InputVpcArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InputArgs extends com.pulumi.resources.ResourceArgs {

    public static final InputArgs Empty = new InputArgs();

    @Import(name="destinations")
    private @Nullable Output<List<InputDestinationArgs>> destinations;

    public Optional<Output<List<InputDestinationArgs>>> destinations() {
        return Optional.ofNullable(this.destinations);
    }

    @Import(name="inputDevices")
    private @Nullable Output<List<InputInputDeviceArgs>> inputDevices;

    public Optional<Output<List<InputInputDeviceArgs>>> inputDevices() {
        return Optional.ofNullable(this.inputDevices);
    }

    @Import(name="inputSecurityGroups")
    private @Nullable Output<List<String>> inputSecurityGroups;

    public Optional<Output<List<String>>> inputSecurityGroups() {
        return Optional.ofNullable(this.inputSecurityGroups);
    }

    @Import(name="mediaConnectFlows")
    private @Nullable Output<List<InputMediaConnectFlowArgs>> mediaConnectFlows;

    public Optional<Output<List<InputMediaConnectFlowArgs>>> mediaConnectFlows() {
        return Optional.ofNullable(this.mediaConnectFlows);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="roleArn")
    private @Nullable Output<String> roleArn;

    public Optional<Output<String>> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }

    @Import(name="sources")
    private @Nullable Output<List<InputSourceArgs>> sources;

    public Optional<Output<List<InputSourceArgs>>> sources() {
        return Optional.ofNullable(this.sources);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    @Import(name="vpc")
    private @Nullable Output<InputVpcArgs> vpc;

    public Optional<Output<InputVpcArgs>> vpc() {
        return Optional.ofNullable(this.vpc);
    }

    private InputArgs() {}

    private InputArgs(InputArgs $) {
        this.destinations = $.destinations;
        this.inputDevices = $.inputDevices;
        this.inputSecurityGroups = $.inputSecurityGroups;
        this.mediaConnectFlows = $.mediaConnectFlows;
        this.name = $.name;
        this.roleArn = $.roleArn;
        this.sources = $.sources;
        this.tags = $.tags;
        this.type = $.type;
        this.vpc = $.vpc;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InputArgs $;

        public Builder() {
            $ = new InputArgs();
        }

        public Builder(InputArgs defaults) {
            $ = new InputArgs(Objects.requireNonNull(defaults));
        }

        public Builder destinations(@Nullable Output<List<InputDestinationArgs>> destinations) {
            $.destinations = destinations;
            return this;
        }

        public Builder destinations(List<InputDestinationArgs> destinations) {
            return destinations(Output.of(destinations));
        }

        public Builder destinations(InputDestinationArgs... destinations) {
            return destinations(List.of(destinations));
        }

        public Builder inputDevices(@Nullable Output<List<InputInputDeviceArgs>> inputDevices) {
            $.inputDevices = inputDevices;
            return this;
        }

        public Builder inputDevices(List<InputInputDeviceArgs> inputDevices) {
            return inputDevices(Output.of(inputDevices));
        }

        public Builder inputDevices(InputInputDeviceArgs... inputDevices) {
            return inputDevices(List.of(inputDevices));
        }

        public Builder inputSecurityGroups(@Nullable Output<List<String>> inputSecurityGroups) {
            $.inputSecurityGroups = inputSecurityGroups;
            return this;
        }

        public Builder inputSecurityGroups(List<String> inputSecurityGroups) {
            return inputSecurityGroups(Output.of(inputSecurityGroups));
        }

        public Builder inputSecurityGroups(String... inputSecurityGroups) {
            return inputSecurityGroups(List.of(inputSecurityGroups));
        }

        public Builder mediaConnectFlows(@Nullable Output<List<InputMediaConnectFlowArgs>> mediaConnectFlows) {
            $.mediaConnectFlows = mediaConnectFlows;
            return this;
        }

        public Builder mediaConnectFlows(List<InputMediaConnectFlowArgs> mediaConnectFlows) {
            return mediaConnectFlows(Output.of(mediaConnectFlows));
        }

        public Builder mediaConnectFlows(InputMediaConnectFlowArgs... mediaConnectFlows) {
            return mediaConnectFlows(List.of(mediaConnectFlows));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder roleArn(@Nullable Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public Builder sources(@Nullable Output<List<InputSourceArgs>> sources) {
            $.sources = sources;
            return this;
        }

        public Builder sources(List<InputSourceArgs> sources) {
            return sources(Output.of(sources));
        }

        public Builder sources(InputSourceArgs... sources) {
            return sources(List.of(sources));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder vpc(@Nullable Output<InputVpcArgs> vpc) {
            $.vpc = vpc;
            return this;
        }

        public Builder vpc(InputVpcArgs vpc) {
            return vpc(Output.of(vpc));
        }

        public InputArgs build() {
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
