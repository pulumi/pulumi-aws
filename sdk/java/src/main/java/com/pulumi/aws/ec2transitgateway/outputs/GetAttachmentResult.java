// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2transitgateway.outputs;

import com.pulumi.aws.ec2transitgateway.outputs.GetAttachmentFilter;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetAttachmentResult {
    /**
     * @return ARN of the attachment.
     * 
     */
    private String arn;
    /**
     * @return The state of the association (see [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_TransitGatewayAttachmentAssociation.html) for valid values).
     * 
     */
    private String associationState;
    /**
     * @return The ID of the route table for the transit gateway.
     * 
     */
    private String associationTransitGatewayRouteTableId;
    private @Nullable List<GetAttachmentFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return ID of the resource.
     * 
     */
    private String resourceId;
    /**
     * @return ID of the AWS account that owns the resource.
     * 
     */
    private String resourceOwnerId;
    /**
     * @return Resource type.
     * 
     */
    private String resourceType;
    /**
     * @return Attachment state.
     * 
     */
    private String state;
    /**
     * @return Key-value tags for the attachment.
     * 
     */
    private Map<String,String> tags;
    private String transitGatewayAttachmentId;
    /**
     * @return ID of the transit gateway.
     * 
     */
    private String transitGatewayId;
    /**
     * @return The ID of the AWS account that owns the transit gateway.
     * 
     */
    private String transitGatewayOwnerId;

    private GetAttachmentResult() {}
    /**
     * @return ARN of the attachment.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return The state of the association (see [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_TransitGatewayAttachmentAssociation.html) for valid values).
     * 
     */
    public String associationState() {
        return this.associationState;
    }
    /**
     * @return The ID of the route table for the transit gateway.
     * 
     */
    public String associationTransitGatewayRouteTableId() {
        return this.associationTransitGatewayRouteTableId;
    }
    public List<GetAttachmentFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return ID of the resource.
     * 
     */
    public String resourceId() {
        return this.resourceId;
    }
    /**
     * @return ID of the AWS account that owns the resource.
     * 
     */
    public String resourceOwnerId() {
        return this.resourceOwnerId;
    }
    /**
     * @return Resource type.
     * 
     */
    public String resourceType() {
        return this.resourceType;
    }
    /**
     * @return Attachment state.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Key-value tags for the attachment.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    public String transitGatewayAttachmentId() {
        return this.transitGatewayAttachmentId;
    }
    /**
     * @return ID of the transit gateway.
     * 
     */
    public String transitGatewayId() {
        return this.transitGatewayId;
    }
    /**
     * @return The ID of the AWS account that owns the transit gateway.
     * 
     */
    public String transitGatewayOwnerId() {
        return this.transitGatewayOwnerId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAttachmentResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private String associationState;
        private String associationTransitGatewayRouteTableId;
        private @Nullable List<GetAttachmentFilter> filters;
        private String id;
        private String resourceId;
        private String resourceOwnerId;
        private String resourceType;
        private String state;
        private Map<String,String> tags;
        private String transitGatewayAttachmentId;
        private String transitGatewayId;
        private String transitGatewayOwnerId;
        public Builder() {}
        public Builder(GetAttachmentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.associationState = defaults.associationState;
    	      this.associationTransitGatewayRouteTableId = defaults.associationTransitGatewayRouteTableId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.resourceId = defaults.resourceId;
    	      this.resourceOwnerId = defaults.resourceOwnerId;
    	      this.resourceType = defaults.resourceType;
    	      this.state = defaults.state;
    	      this.tags = defaults.tags;
    	      this.transitGatewayAttachmentId = defaults.transitGatewayAttachmentId;
    	      this.transitGatewayId = defaults.transitGatewayId;
    	      this.transitGatewayOwnerId = defaults.transitGatewayOwnerId;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder associationState(String associationState) {
            this.associationState = Objects.requireNonNull(associationState);
            return this;
        }
        @CustomType.Setter
        public Builder associationTransitGatewayRouteTableId(String associationTransitGatewayRouteTableId) {
            this.associationTransitGatewayRouteTableId = Objects.requireNonNull(associationTransitGatewayRouteTableId);
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetAttachmentFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetAttachmentFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder resourceId(String resourceId) {
            this.resourceId = Objects.requireNonNull(resourceId);
            return this;
        }
        @CustomType.Setter
        public Builder resourceOwnerId(String resourceOwnerId) {
            this.resourceOwnerId = Objects.requireNonNull(resourceOwnerId);
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(String resourceType) {
            this.resourceType = Objects.requireNonNull(resourceType);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder transitGatewayAttachmentId(String transitGatewayAttachmentId) {
            this.transitGatewayAttachmentId = Objects.requireNonNull(transitGatewayAttachmentId);
            return this;
        }
        @CustomType.Setter
        public Builder transitGatewayId(String transitGatewayId) {
            this.transitGatewayId = Objects.requireNonNull(transitGatewayId);
            return this;
        }
        @CustomType.Setter
        public Builder transitGatewayOwnerId(String transitGatewayOwnerId) {
            this.transitGatewayOwnerId = Objects.requireNonNull(transitGatewayOwnerId);
            return this;
        }
        public GetAttachmentResult build() {
            final var o = new GetAttachmentResult();
            o.arn = arn;
            o.associationState = associationState;
            o.associationTransitGatewayRouteTableId = associationTransitGatewayRouteTableId;
            o.filters = filters;
            o.id = id;
            o.resourceId = resourceId;
            o.resourceOwnerId = resourceOwnerId;
            o.resourceType = resourceType;
            o.state = state;
            o.tags = tags;
            o.transitGatewayAttachmentId = transitGatewayAttachmentId;
            o.transitGatewayId = transitGatewayId;
            o.transitGatewayOwnerId = transitGatewayOwnerId;
            return o;
        }
    }
}
