// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dlm.inputs;

import com.pulumi.aws.dlm.inputs.LifecyclePolicyPolicyDetailsScheduleArchiveRuleArchiveRetainRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.Objects;


public final class LifecyclePolicyPolicyDetailsScheduleArchiveRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final LifecyclePolicyPolicyDetailsScheduleArchiveRuleArgs Empty = new LifecyclePolicyPolicyDetailsScheduleArchiveRuleArgs();

    /**
     * Information about the retention period for the snapshot archiving rule. See the `archive_retain_rule` block.
     * 
     */
    @Import(name="archiveRetainRule", required=true)
    private Output<LifecyclePolicyPolicyDetailsScheduleArchiveRuleArchiveRetainRuleArgs> archiveRetainRule;

    /**
     * @return Information about the retention period for the snapshot archiving rule. See the `archive_retain_rule` block.
     * 
     */
    public Output<LifecyclePolicyPolicyDetailsScheduleArchiveRuleArchiveRetainRuleArgs> archiveRetainRule() {
        return this.archiveRetainRule;
    }

    private LifecyclePolicyPolicyDetailsScheduleArchiveRuleArgs() {}

    private LifecyclePolicyPolicyDetailsScheduleArchiveRuleArgs(LifecyclePolicyPolicyDetailsScheduleArchiveRuleArgs $) {
        this.archiveRetainRule = $.archiveRetainRule;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LifecyclePolicyPolicyDetailsScheduleArchiveRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LifecyclePolicyPolicyDetailsScheduleArchiveRuleArgs $;

        public Builder() {
            $ = new LifecyclePolicyPolicyDetailsScheduleArchiveRuleArgs();
        }

        public Builder(LifecyclePolicyPolicyDetailsScheduleArchiveRuleArgs defaults) {
            $ = new LifecyclePolicyPolicyDetailsScheduleArchiveRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param archiveRetainRule Information about the retention period for the snapshot archiving rule. See the `archive_retain_rule` block.
         * 
         * @return builder
         * 
         */
        public Builder archiveRetainRule(Output<LifecyclePolicyPolicyDetailsScheduleArchiveRuleArchiveRetainRuleArgs> archiveRetainRule) {
            $.archiveRetainRule = archiveRetainRule;
            return this;
        }

        /**
         * @param archiveRetainRule Information about the retention period for the snapshot archiving rule. See the `archive_retain_rule` block.
         * 
         * @return builder
         * 
         */
        public Builder archiveRetainRule(LifecyclePolicyPolicyDetailsScheduleArchiveRuleArchiveRetainRuleArgs archiveRetainRule) {
            return archiveRetainRule(Output.of(archiveRetainRule));
        }

        public LifecyclePolicyPolicyDetailsScheduleArchiveRuleArgs build() {
            if ($.archiveRetainRule == null) {
                throw new MissingRequiredPropertyException("LifecyclePolicyPolicyDetailsScheduleArchiveRuleArgs", "archiveRetainRule");
            }
            return $;
        }
    }

}
