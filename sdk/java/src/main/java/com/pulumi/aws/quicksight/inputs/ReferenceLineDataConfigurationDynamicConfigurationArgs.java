// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.AggregationFunctionArgs;
import com.pulumi.aws.quicksight.inputs.ColumnArgs;
import com.pulumi.aws.quicksight.inputs.NumericalAggregationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.Objects;


public final class ReferenceLineDataConfigurationDynamicConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ReferenceLineDataConfigurationDynamicConfigurationArgs Empty = new ReferenceLineDataConfigurationDynamicConfigurationArgs();

    @Import(name="calculation", required=true)
    private Output<NumericalAggregationArgs> calculation;

    public Output<NumericalAggregationArgs> calculation() {
        return this.calculation;
    }

    @Import(name="column", required=true)
    private Output<ColumnArgs> column;

    public Output<ColumnArgs> column() {
        return this.column;
    }

    @Import(name="measureAggregationFunction", required=true)
    private Output<AggregationFunctionArgs> measureAggregationFunction;

    public Output<AggregationFunctionArgs> measureAggregationFunction() {
        return this.measureAggregationFunction;
    }

    private ReferenceLineDataConfigurationDynamicConfigurationArgs() {}

    private ReferenceLineDataConfigurationDynamicConfigurationArgs(ReferenceLineDataConfigurationDynamicConfigurationArgs $) {
        this.calculation = $.calculation;
        this.column = $.column;
        this.measureAggregationFunction = $.measureAggregationFunction;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReferenceLineDataConfigurationDynamicConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReferenceLineDataConfigurationDynamicConfigurationArgs $;

        public Builder() {
            $ = new ReferenceLineDataConfigurationDynamicConfigurationArgs();
        }

        public Builder(ReferenceLineDataConfigurationDynamicConfigurationArgs defaults) {
            $ = new ReferenceLineDataConfigurationDynamicConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder calculation(Output<NumericalAggregationArgs> calculation) {
            $.calculation = calculation;
            return this;
        }

        public Builder calculation(NumericalAggregationArgs calculation) {
            return calculation(Output.of(calculation));
        }

        public Builder column(Output<ColumnArgs> column) {
            $.column = column;
            return this;
        }

        public Builder column(ColumnArgs column) {
            return column(Output.of(column));
        }

        public Builder measureAggregationFunction(Output<AggregationFunctionArgs> measureAggregationFunction) {
            $.measureAggregationFunction = measureAggregationFunction;
            return this;
        }

        public Builder measureAggregationFunction(AggregationFunctionArgs measureAggregationFunction) {
            return measureAggregationFunction(Output.of(measureAggregationFunction));
        }

        public ReferenceLineDataConfigurationDynamicConfigurationArgs build() {
            if ($.calculation == null) {
                throw new MissingRequiredPropertyException("ReferenceLineDataConfigurationDynamicConfigurationArgs", "calculation");
            }
            if ($.column == null) {
                throw new MissingRequiredPropertyException("ReferenceLineDataConfigurationDynamicConfigurationArgs", "column");
            }
            if ($.measureAggregationFunction == null) {
                throw new MissingRequiredPropertyException("ReferenceLineDataConfigurationDynamicConfigurationArgs", "measureAggregationFunction");
            }
            return $;
        }
    }

}
