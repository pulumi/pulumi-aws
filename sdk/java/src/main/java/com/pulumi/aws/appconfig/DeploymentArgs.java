// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appconfig;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeploymentArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentArgs Empty = new DeploymentArgs();

    @Import(name="applicationId", required=true)
    private Output<String> applicationId;

    public Output<String> applicationId() {
        return this.applicationId;
    }

    @Import(name="configurationProfileId", required=true)
    private Output<String> configurationProfileId;

    public Output<String> configurationProfileId() {
        return this.configurationProfileId;
    }

    @Import(name="configurationVersion", required=true)
    private Output<String> configurationVersion;

    public Output<String> configurationVersion() {
        return this.configurationVersion;
    }

    @Import(name="deploymentStrategyId", required=true)
    private Output<String> deploymentStrategyId;

    public Output<String> deploymentStrategyId() {
        return this.deploymentStrategyId;
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="environmentId", required=true)
    private Output<String> environmentId;

    public Output<String> environmentId() {
        return this.environmentId;
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private DeploymentArgs() {}

    private DeploymentArgs(DeploymentArgs $) {
        this.applicationId = $.applicationId;
        this.configurationProfileId = $.configurationProfileId;
        this.configurationVersion = $.configurationVersion;
        this.deploymentStrategyId = $.deploymentStrategyId;
        this.description = $.description;
        this.environmentId = $.environmentId;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentArgs $;

        public Builder() {
            $ = new DeploymentArgs();
        }

        public Builder(DeploymentArgs defaults) {
            $ = new DeploymentArgs(Objects.requireNonNull(defaults));
        }

        public Builder applicationId(Output<String> applicationId) {
            $.applicationId = applicationId;
            return this;
        }

        public Builder applicationId(String applicationId) {
            return applicationId(Output.of(applicationId));
        }

        public Builder configurationProfileId(Output<String> configurationProfileId) {
            $.configurationProfileId = configurationProfileId;
            return this;
        }

        public Builder configurationProfileId(String configurationProfileId) {
            return configurationProfileId(Output.of(configurationProfileId));
        }

        public Builder configurationVersion(Output<String> configurationVersion) {
            $.configurationVersion = configurationVersion;
            return this;
        }

        public Builder configurationVersion(String configurationVersion) {
            return configurationVersion(Output.of(configurationVersion));
        }

        public Builder deploymentStrategyId(Output<String> deploymentStrategyId) {
            $.deploymentStrategyId = deploymentStrategyId;
            return this;
        }

        public Builder deploymentStrategyId(String deploymentStrategyId) {
            return deploymentStrategyId(Output.of(deploymentStrategyId));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder environmentId(Output<String> environmentId) {
            $.environmentId = environmentId;
            return this;
        }

        public Builder environmentId(String environmentId) {
            return environmentId(Output.of(environmentId));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public DeploymentArgs build() {
            $.applicationId = Objects.requireNonNull($.applicationId, "expected parameter 'applicationId' to be non-null");
            $.configurationProfileId = Objects.requireNonNull($.configurationProfileId, "expected parameter 'configurationProfileId' to be non-null");
            $.configurationVersion = Objects.requireNonNull($.configurationVersion, "expected parameter 'configurationVersion' to be non-null");
            $.deploymentStrategyId = Objects.requireNonNull($.deploymentStrategyId, "expected parameter 'deploymentStrategyId' to be non-null");
            $.environmentId = Objects.requireNonNull($.environmentId, "expected parameter 'environmentId' to be non-null");
            return $;
        }
    }

}
