// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpcIpamPreviewNextCidrArgs extends com.pulumi.resources.ResourceArgs {

    public static final VpcIpamPreviewNextCidrArgs Empty = new VpcIpamPreviewNextCidrArgs();

    /**
     * Exclude a particular CIDR range from being returned by the pool.
     * 
     */
    @Import(name="disallowedCidrs")
    private @Nullable Output<List<String>> disallowedCidrs;

    /**
     * @return Exclude a particular CIDR range from being returned by the pool.
     * 
     */
    public Optional<Output<List<String>>> disallowedCidrs() {
        return Optional.ofNullable(this.disallowedCidrs);
    }

    /**
     * The ID of the pool to which you want to assign a CIDR.
     * 
     */
    @Import(name="ipamPoolId", required=true)
    private Output<String> ipamPoolId;

    /**
     * @return The ID of the pool to which you want to assign a CIDR.
     * 
     */
    public Output<String> ipamPoolId() {
        return this.ipamPoolId;
    }

    /**
     * The netmask length of the CIDR you would like to preview from the IPAM pool.
     * 
     */
    @Import(name="netmaskLength")
    private @Nullable Output<Integer> netmaskLength;

    /**
     * @return The netmask length of the CIDR you would like to preview from the IPAM pool.
     * 
     */
    public Optional<Output<Integer>> netmaskLength() {
        return Optional.ofNullable(this.netmaskLength);
    }

    private VpcIpamPreviewNextCidrArgs() {}

    private VpcIpamPreviewNextCidrArgs(VpcIpamPreviewNextCidrArgs $) {
        this.disallowedCidrs = $.disallowedCidrs;
        this.ipamPoolId = $.ipamPoolId;
        this.netmaskLength = $.netmaskLength;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpcIpamPreviewNextCidrArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpcIpamPreviewNextCidrArgs $;

        public Builder() {
            $ = new VpcIpamPreviewNextCidrArgs();
        }

        public Builder(VpcIpamPreviewNextCidrArgs defaults) {
            $ = new VpcIpamPreviewNextCidrArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param disallowedCidrs Exclude a particular CIDR range from being returned by the pool.
         * 
         * @return builder
         * 
         */
        public Builder disallowedCidrs(@Nullable Output<List<String>> disallowedCidrs) {
            $.disallowedCidrs = disallowedCidrs;
            return this;
        }

        /**
         * @param disallowedCidrs Exclude a particular CIDR range from being returned by the pool.
         * 
         * @return builder
         * 
         */
        public Builder disallowedCidrs(List<String> disallowedCidrs) {
            return disallowedCidrs(Output.of(disallowedCidrs));
        }

        /**
         * @param disallowedCidrs Exclude a particular CIDR range from being returned by the pool.
         * 
         * @return builder
         * 
         */
        public Builder disallowedCidrs(String... disallowedCidrs) {
            return disallowedCidrs(List.of(disallowedCidrs));
        }

        /**
         * @param ipamPoolId The ID of the pool to which you want to assign a CIDR.
         * 
         * @return builder
         * 
         */
        public Builder ipamPoolId(Output<String> ipamPoolId) {
            $.ipamPoolId = ipamPoolId;
            return this;
        }

        /**
         * @param ipamPoolId The ID of the pool to which you want to assign a CIDR.
         * 
         * @return builder
         * 
         */
        public Builder ipamPoolId(String ipamPoolId) {
            return ipamPoolId(Output.of(ipamPoolId));
        }

        /**
         * @param netmaskLength The netmask length of the CIDR you would like to preview from the IPAM pool.
         * 
         * @return builder
         * 
         */
        public Builder netmaskLength(@Nullable Output<Integer> netmaskLength) {
            $.netmaskLength = netmaskLength;
            return this;
        }

        /**
         * @param netmaskLength The netmask length of the CIDR you would like to preview from the IPAM pool.
         * 
         * @return builder
         * 
         */
        public Builder netmaskLength(Integer netmaskLength) {
            return netmaskLength(Output.of(netmaskLength));
        }

        public VpcIpamPreviewNextCidrArgs build() {
            if ($.ipamPoolId == null) {
                throw new MissingRequiredPropertyException("VpcIpamPreviewNextCidrArgs", "ipamPoolId");
            }
            return $;
        }
    }

}
