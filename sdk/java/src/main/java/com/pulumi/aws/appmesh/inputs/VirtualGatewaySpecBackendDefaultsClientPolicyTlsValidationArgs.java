// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.inputs;

import com.pulumi.aws.appmesh.inputs.VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs;
import com.pulumi.aws.appmesh.inputs.VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs Empty = new VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs();

    /**
     * SANs for a virtual gateway&#39;s listener&#39;s Transport Layer Security (TLS) validation context.
     * 
     */
    @Import(name="subjectAlternativeNames")
    private @Nullable Output<VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs> subjectAlternativeNames;

    /**
     * @return SANs for a virtual gateway&#39;s listener&#39;s Transport Layer Security (TLS) validation context.
     * 
     */
    public Optional<Output<VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs>> subjectAlternativeNames() {
        return Optional.ofNullable(this.subjectAlternativeNames);
    }

    /**
     * TLS validation context trust.
     * 
     */
    @Import(name="trust", required=true)
    private Output<VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustArgs> trust;

    /**
     * @return TLS validation context trust.
     * 
     */
    public Output<VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustArgs> trust() {
        return this.trust;
    }

    private VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs() {}

    private VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs $) {
        this.subjectAlternativeNames = $.subjectAlternativeNames;
        this.trust = $.trust;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs $;

        public Builder() {
            $ = new VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs();
        }

        public Builder(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs defaults) {
            $ = new VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param subjectAlternativeNames SANs for a virtual gateway&#39;s listener&#39;s Transport Layer Security (TLS) validation context.
         * 
         * @return builder
         * 
         */
        public Builder subjectAlternativeNames(@Nullable Output<VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs> subjectAlternativeNames) {
            $.subjectAlternativeNames = subjectAlternativeNames;
            return this;
        }

        /**
         * @param subjectAlternativeNames SANs for a virtual gateway&#39;s listener&#39;s Transport Layer Security (TLS) validation context.
         * 
         * @return builder
         * 
         */
        public Builder subjectAlternativeNames(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs subjectAlternativeNames) {
            return subjectAlternativeNames(Output.of(subjectAlternativeNames));
        }

        /**
         * @param trust TLS validation context trust.
         * 
         * @return builder
         * 
         */
        public Builder trust(Output<VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustArgs> trust) {
            $.trust = trust;
            return this;
        }

        /**
         * @param trust TLS validation context trust.
         * 
         * @return builder
         * 
         */
        public Builder trust(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustArgs trust) {
            return trust(Output.of(trust));
        }

        public VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs build() {
            $.trust = Objects.requireNonNull($.trust, "expected parameter 'trust' to be non-null");
            return $;
        }
    }

}
