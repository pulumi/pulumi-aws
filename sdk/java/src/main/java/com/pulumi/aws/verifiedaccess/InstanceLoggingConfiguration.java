// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.verifiedaccess;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.verifiedaccess.InstanceLoggingConfigurationArgs;
import com.pulumi.aws.verifiedaccess.inputs.InstanceLoggingConfigurationState;
import com.pulumi.aws.verifiedaccess.outputs.InstanceLoggingConfigurationAccessLogs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Resource for managing a Verified Access Logging Configuration.
 * 
 * ## Example Usage
 * 
 * ### With CloudWatch Logging
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.verifiedaccess.InstanceLoggingConfiguration;
 * import com.pulumi.aws.verifiedaccess.InstanceLoggingConfigurationArgs;
 * import com.pulumi.aws.verifiedaccess.inputs.InstanceLoggingConfigurationAccessLogsArgs;
 * import com.pulumi.aws.verifiedaccess.inputs.InstanceLoggingConfigurationAccessLogsCloudwatchLogsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new InstanceLoggingConfiguration(&#34;example&#34;, InstanceLoggingConfigurationArgs.builder()        
 *             .accessLogs(InstanceLoggingConfigurationAccessLogsArgs.builder()
 *                 .cloudwatchLogs(InstanceLoggingConfigurationAccessLogsCloudwatchLogsArgs.builder()
 *                     .enabled(true)
 *                     .logGroup(exampleAwsCloudwatchLogGroup.id())
 *                     .build())
 *                 .build())
 *             .verifiedaccessInstanceId(exampleAwsVerifiedaccessInstance.id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### With Kinesis Data Firehose Logging
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.verifiedaccess.InstanceLoggingConfiguration;
 * import com.pulumi.aws.verifiedaccess.InstanceLoggingConfigurationArgs;
 * import com.pulumi.aws.verifiedaccess.inputs.InstanceLoggingConfigurationAccessLogsArgs;
 * import com.pulumi.aws.verifiedaccess.inputs.InstanceLoggingConfigurationAccessLogsKinesisDataFirehoseArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new InstanceLoggingConfiguration(&#34;example&#34;, InstanceLoggingConfigurationArgs.builder()        
 *             .accessLogs(InstanceLoggingConfigurationAccessLogsArgs.builder()
 *                 .kinesisDataFirehose(InstanceLoggingConfigurationAccessLogsKinesisDataFirehoseArgs.builder()
 *                     .deliveryStream(exampleAwsKinesisFirehoseDeliveryStream.name())
 *                     .enabled(true)
 *                     .build())
 *                 .build())
 *             .verifiedaccessInstanceId(exampleAwsVerifiedaccessInstance.id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### With S3 logging
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.verifiedaccess.InstanceLoggingConfiguration;
 * import com.pulumi.aws.verifiedaccess.InstanceLoggingConfigurationArgs;
 * import com.pulumi.aws.verifiedaccess.inputs.InstanceLoggingConfigurationAccessLogsArgs;
 * import com.pulumi.aws.verifiedaccess.inputs.InstanceLoggingConfigurationAccessLogsS3Args;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new InstanceLoggingConfiguration(&#34;example&#34;, InstanceLoggingConfigurationArgs.builder()        
 *             .accessLogs(InstanceLoggingConfigurationAccessLogsArgs.builder()
 *                 .s3(InstanceLoggingConfigurationAccessLogsS3Args.builder()
 *                     .bucketName(exampleAwsS3Bucket.id())
 *                     .enabled(true)
 *                     .prefix(&#34;example&#34;)
 *                     .build())
 *                 .build())
 *             .verifiedaccessInstanceId(exampleAwsVerifiedaccessInstance.id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### With all three logging options
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.verifiedaccess.InstanceLoggingConfiguration;
 * import com.pulumi.aws.verifiedaccess.InstanceLoggingConfigurationArgs;
 * import com.pulumi.aws.verifiedaccess.inputs.InstanceLoggingConfigurationAccessLogsArgs;
 * import com.pulumi.aws.verifiedaccess.inputs.InstanceLoggingConfigurationAccessLogsCloudwatchLogsArgs;
 * import com.pulumi.aws.verifiedaccess.inputs.InstanceLoggingConfigurationAccessLogsKinesisDataFirehoseArgs;
 * import com.pulumi.aws.verifiedaccess.inputs.InstanceLoggingConfigurationAccessLogsS3Args;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new InstanceLoggingConfiguration(&#34;example&#34;, InstanceLoggingConfigurationArgs.builder()        
 *             .accessLogs(InstanceLoggingConfigurationAccessLogsArgs.builder()
 *                 .cloudwatchLogs(InstanceLoggingConfigurationAccessLogsCloudwatchLogsArgs.builder()
 *                     .enabled(true)
 *                     .logGroup(exampleAwsCloudwatchLogGroup.id())
 *                     .build())
 *                 .kinesisDataFirehose(InstanceLoggingConfigurationAccessLogsKinesisDataFirehoseArgs.builder()
 *                     .deliveryStream(exampleAwsKinesisFirehoseDeliveryStream.name())
 *                     .enabled(true)
 *                     .build())
 *                 .s3(InstanceLoggingConfigurationAccessLogsS3Args.builder()
 *                     .bucketName(exampleAwsS3Bucket.id())
 *                     .enabled(true)
 *                     .build())
 *                 .build())
 *             .verifiedaccessInstanceId(exampleAwsVerifiedaccessInstance.id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### With `include_trust_context`
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.verifiedaccess.InstanceLoggingConfiguration;
 * import com.pulumi.aws.verifiedaccess.InstanceLoggingConfigurationArgs;
 * import com.pulumi.aws.verifiedaccess.inputs.InstanceLoggingConfigurationAccessLogsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new InstanceLoggingConfiguration(&#34;example&#34;, InstanceLoggingConfigurationArgs.builder()        
 *             .accessLogs(InstanceLoggingConfigurationAccessLogsArgs.builder()
 *                 .includeTrustContext(true)
 *                 .build())
 *             .verifiedaccessInstanceId(exampleAwsVerifiedaccessInstance.id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### With `log_version`
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.verifiedaccess.InstanceLoggingConfiguration;
 * import com.pulumi.aws.verifiedaccess.InstanceLoggingConfigurationArgs;
 * import com.pulumi.aws.verifiedaccess.inputs.InstanceLoggingConfigurationAccessLogsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new InstanceLoggingConfiguration(&#34;example&#34;, InstanceLoggingConfigurationArgs.builder()        
 *             .accessLogs(InstanceLoggingConfigurationAccessLogsArgs.builder()
 *                 .logVersion(&#34;ocsf-1.0.0-rc.2&#34;)
 *                 .build())
 *             .verifiedaccessInstanceId(exampleAwsVerifiedaccessInstance.id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Using `pulumi import`, import Verified Access Logging Configuration using the Verified Access Instance `id`. For example:
 * 
 * ```sh
 * $ pulumi import aws:verifiedaccess/instanceLoggingConfiguration:InstanceLoggingConfiguration example vai-1234567890abcdef0
 * ```
 * 
 */
@ResourceType(type="aws:verifiedaccess/instanceLoggingConfiguration:InstanceLoggingConfiguration")
public class InstanceLoggingConfiguration extends com.pulumi.resources.CustomResource {
    /**
     * A block that specifies the configuration options for Verified Access instances. Detailed below.
     * 
     */
    @Export(name="accessLogs", refs={InstanceLoggingConfigurationAccessLogs.class}, tree="[0]")
    private Output<InstanceLoggingConfigurationAccessLogs> accessLogs;

    /**
     * @return A block that specifies the configuration options for Verified Access instances. Detailed below.
     * 
     */
    public Output<InstanceLoggingConfigurationAccessLogs> accessLogs() {
        return this.accessLogs;
    }
    /**
     * The ID of the Verified Access instance.
     * 
     */
    @Export(name="verifiedaccessInstanceId", refs={String.class}, tree="[0]")
    private Output<String> verifiedaccessInstanceId;

    /**
     * @return The ID of the Verified Access instance.
     * 
     */
    public Output<String> verifiedaccessInstanceId() {
        return this.verifiedaccessInstanceId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public InstanceLoggingConfiguration(String name) {
        this(name, InstanceLoggingConfigurationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public InstanceLoggingConfiguration(String name, InstanceLoggingConfigurationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public InstanceLoggingConfiguration(String name, InstanceLoggingConfigurationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:verifiedaccess/instanceLoggingConfiguration:InstanceLoggingConfiguration", name, args == null ? InstanceLoggingConfigurationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private InstanceLoggingConfiguration(String name, Output<String> id, @Nullable InstanceLoggingConfigurationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:verifiedaccess/instanceLoggingConfiguration:InstanceLoggingConfiguration", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static InstanceLoggingConfiguration get(String name, Output<String> id, @Nullable InstanceLoggingConfigurationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new InstanceLoggingConfiguration(name, id, state, options);
    }
}
