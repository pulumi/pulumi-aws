// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kinesis.inputs;

import com.pulumi.aws.kinesis.inputs.FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs;
import com.pulumi.aws.kinesis.inputs.FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs;
import com.pulumi.aws.kinesis.inputs.FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FirehoseDeliveryStreamRedshiftConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final FirehoseDeliveryStreamRedshiftConfigurationArgs Empty = new FirehoseDeliveryStreamRedshiftConfigurationArgs();

    @Import(name="cloudwatchLoggingOptions")
    private @Nullable Output<FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs> cloudwatchLoggingOptions;

    public Optional<Output<FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs>> cloudwatchLoggingOptions() {
        return Optional.ofNullable(this.cloudwatchLoggingOptions);
    }

    @Import(name="clusterJdbcurl", required=true)
    private Output<String> clusterJdbcurl;

    public Output<String> clusterJdbcurl() {
        return this.clusterJdbcurl;
    }

    @Import(name="copyOptions")
    private @Nullable Output<String> copyOptions;

    public Optional<Output<String>> copyOptions() {
        return Optional.ofNullable(this.copyOptions);
    }

    @Import(name="dataTableColumns")
    private @Nullable Output<String> dataTableColumns;

    public Optional<Output<String>> dataTableColumns() {
        return Optional.ofNullable(this.dataTableColumns);
    }

    @Import(name="dataTableName", required=true)
    private Output<String> dataTableName;

    public Output<String> dataTableName() {
        return this.dataTableName;
    }

    @Import(name="password", required=true)
    private Output<String> password;

    public Output<String> password() {
        return this.password;
    }

    @Import(name="processingConfiguration")
    private @Nullable Output<FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs> processingConfiguration;

    public Optional<Output<FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs>> processingConfiguration() {
        return Optional.ofNullable(this.processingConfiguration);
    }

    @Import(name="retryDuration")
    private @Nullable Output<Integer> retryDuration;

    public Optional<Output<Integer>> retryDuration() {
        return Optional.ofNullable(this.retryDuration);
    }

    @Import(name="roleArn", required=true)
    private Output<String> roleArn;

    public Output<String> roleArn() {
        return this.roleArn;
    }

    @Import(name="s3BackupConfiguration")
    private @Nullable Output<FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs> s3BackupConfiguration;

    public Optional<Output<FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs>> s3BackupConfiguration() {
        return Optional.ofNullable(this.s3BackupConfiguration);
    }

    @Import(name="s3BackupMode")
    private @Nullable Output<String> s3BackupMode;

    public Optional<Output<String>> s3BackupMode() {
        return Optional.ofNullable(this.s3BackupMode);
    }

    @Import(name="username", required=true)
    private Output<String> username;

    public Output<String> username() {
        return this.username;
    }

    private FirehoseDeliveryStreamRedshiftConfigurationArgs() {}

    private FirehoseDeliveryStreamRedshiftConfigurationArgs(FirehoseDeliveryStreamRedshiftConfigurationArgs $) {
        this.cloudwatchLoggingOptions = $.cloudwatchLoggingOptions;
        this.clusterJdbcurl = $.clusterJdbcurl;
        this.copyOptions = $.copyOptions;
        this.dataTableColumns = $.dataTableColumns;
        this.dataTableName = $.dataTableName;
        this.password = $.password;
        this.processingConfiguration = $.processingConfiguration;
        this.retryDuration = $.retryDuration;
        this.roleArn = $.roleArn;
        this.s3BackupConfiguration = $.s3BackupConfiguration;
        this.s3BackupMode = $.s3BackupMode;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirehoseDeliveryStreamRedshiftConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirehoseDeliveryStreamRedshiftConfigurationArgs $;

        public Builder() {
            $ = new FirehoseDeliveryStreamRedshiftConfigurationArgs();
        }

        public Builder(FirehoseDeliveryStreamRedshiftConfigurationArgs defaults) {
            $ = new FirehoseDeliveryStreamRedshiftConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder cloudwatchLoggingOptions(@Nullable Output<FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs> cloudwatchLoggingOptions) {
            $.cloudwatchLoggingOptions = cloudwatchLoggingOptions;
            return this;
        }

        public Builder cloudwatchLoggingOptions(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs cloudwatchLoggingOptions) {
            return cloudwatchLoggingOptions(Output.of(cloudwatchLoggingOptions));
        }

        public Builder clusterJdbcurl(Output<String> clusterJdbcurl) {
            $.clusterJdbcurl = clusterJdbcurl;
            return this;
        }

        public Builder clusterJdbcurl(String clusterJdbcurl) {
            return clusterJdbcurl(Output.of(clusterJdbcurl));
        }

        public Builder copyOptions(@Nullable Output<String> copyOptions) {
            $.copyOptions = copyOptions;
            return this;
        }

        public Builder copyOptions(String copyOptions) {
            return copyOptions(Output.of(copyOptions));
        }

        public Builder dataTableColumns(@Nullable Output<String> dataTableColumns) {
            $.dataTableColumns = dataTableColumns;
            return this;
        }

        public Builder dataTableColumns(String dataTableColumns) {
            return dataTableColumns(Output.of(dataTableColumns));
        }

        public Builder dataTableName(Output<String> dataTableName) {
            $.dataTableName = dataTableName;
            return this;
        }

        public Builder dataTableName(String dataTableName) {
            return dataTableName(Output.of(dataTableName));
        }

        public Builder password(Output<String> password) {
            $.password = password;
            return this;
        }

        public Builder password(String password) {
            return password(Output.of(password));
        }

        public Builder processingConfiguration(@Nullable Output<FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs> processingConfiguration) {
            $.processingConfiguration = processingConfiguration;
            return this;
        }

        public Builder processingConfiguration(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs processingConfiguration) {
            return processingConfiguration(Output.of(processingConfiguration));
        }

        public Builder retryDuration(@Nullable Output<Integer> retryDuration) {
            $.retryDuration = retryDuration;
            return this;
        }

        public Builder retryDuration(Integer retryDuration) {
            return retryDuration(Output.of(retryDuration));
        }

        public Builder roleArn(Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public Builder s3BackupConfiguration(@Nullable Output<FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs> s3BackupConfiguration) {
            $.s3BackupConfiguration = s3BackupConfiguration;
            return this;
        }

        public Builder s3BackupConfiguration(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs s3BackupConfiguration) {
            return s3BackupConfiguration(Output.of(s3BackupConfiguration));
        }

        public Builder s3BackupMode(@Nullable Output<String> s3BackupMode) {
            $.s3BackupMode = s3BackupMode;
            return this;
        }

        public Builder s3BackupMode(String s3BackupMode) {
            return s3BackupMode(Output.of(s3BackupMode));
        }

        public Builder username(Output<String> username) {
            $.username = username;
            return this;
        }

        public Builder username(String username) {
            return username(Output.of(username));
        }

        public FirehoseDeliveryStreamRedshiftConfigurationArgs build() {
            $.clusterJdbcurl = Objects.requireNonNull($.clusterJdbcurl, "expected parameter 'clusterJdbcurl' to be non-null");
            $.dataTableName = Objects.requireNonNull($.dataTableName, "expected parameter 'dataTableName' to be non-null");
            $.password = Objects.requireNonNull($.password, "expected parameter 'password' to be non-null");
            $.roleArn = Objects.requireNonNull($.roleArn, "expected parameter 'roleArn' to be non-null");
            $.username = Objects.requireNonNull($.username, "expected parameter 'username' to be non-null");
            return $;
        }
    }

}
