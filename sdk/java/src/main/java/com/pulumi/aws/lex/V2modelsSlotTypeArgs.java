// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lex;

import com.pulumi.aws.lex.inputs.V2modelsSlotTypeCompositeSlotTypeSettingArgs;
import com.pulumi.aws.lex.inputs.V2modelsSlotTypeExternalSourceSettingArgs;
import com.pulumi.aws.lex.inputs.V2modelsSlotTypeSlotTypeValuesArgs;
import com.pulumi.aws.lex.inputs.V2modelsSlotTypeTimeoutsArgs;
import com.pulumi.aws.lex.inputs.V2modelsSlotTypeValueSelectionSettingArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class V2modelsSlotTypeArgs extends com.pulumi.resources.ResourceArgs {

    public static final V2modelsSlotTypeArgs Empty = new V2modelsSlotTypeArgs();

    /**
     * Identifier of the bot associated with this slot type.
     * 
     */
    @Import(name="botId", required=true)
    private Output<String> botId;

    /**
     * @return Identifier of the bot associated with this slot type.
     * 
     */
    public Output<String> botId() {
        return this.botId;
    }

    /**
     * Version of the bot associated with this slot type.
     * 
     */
    @Import(name="botVersion", required=true)
    private Output<String> botVersion;

    /**
     * @return Version of the bot associated with this slot type.
     * 
     */
    public Output<String> botVersion() {
        return this.botVersion;
    }

    /**
     * Specifications for a composite slot type. See `composite_slot_type_setting` argument reference below.
     * 
     */
    @Import(name="compositeSlotTypeSetting")
    private @Nullable Output<V2modelsSlotTypeCompositeSlotTypeSettingArgs> compositeSlotTypeSetting;

    /**
     * @return Specifications for a composite slot type. See `composite_slot_type_setting` argument reference below.
     * 
     */
    public Optional<Output<V2modelsSlotTypeCompositeSlotTypeSettingArgs>> compositeSlotTypeSetting() {
        return Optional.ofNullable(this.compositeSlotTypeSetting);
    }

    /**
     * Description of the slot type.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the slot type.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Type of external information used to create the slot type. See `external_source_setting` argument reference below.
     * 
     */
    @Import(name="externalSourceSetting")
    private @Nullable Output<V2modelsSlotTypeExternalSourceSettingArgs> externalSourceSetting;

    /**
     * @return Type of external information used to create the slot type. See `external_source_setting` argument reference below.
     * 
     */
    public Optional<Output<V2modelsSlotTypeExternalSourceSettingArgs>> externalSourceSetting() {
        return Optional.ofNullable(this.externalSourceSetting);
    }

    /**
     * Identifier of the language and locale where this slot type is used. All of the bots, slot types, and slots used by the intent must have the same locale.
     * 
     */
    @Import(name="localeId", required=true)
    private Output<String> localeId;

    /**
     * @return Identifier of the language and locale where this slot type is used. All of the bots, slot types, and slots used by the intent must have the same locale.
     * 
     */
    public Output<String> localeId() {
        return this.localeId;
    }

    /**
     * Name of the slot type
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the slot type
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Built-in slot type used as a parent of this slot type. When you define a parent slot type, the new slot type has the configuration of the parent slot type. Only AMAZON.AlphaNumeric is supported.
     * 
     */
    @Import(name="parentSlotTypeSignature")
    private @Nullable Output<String> parentSlotTypeSignature;

    /**
     * @return Built-in slot type used as a parent of this slot type. When you define a parent slot type, the new slot type has the configuration of the parent slot type. Only AMAZON.AlphaNumeric is supported.
     * 
     */
    public Optional<Output<String>> parentSlotTypeSignature() {
        return Optional.ofNullable(this.parentSlotTypeSignature);
    }

    /**
     * List of SlotTypeValue objects that defines the values that the slot type can take. Each value can have a list of synonyms, additional values that help train the machine learning model about the values that it resolves for a slot. See `slot_type_values` argument reference below.
     * 
     */
    @Import(name="slotTypeValues")
    private @Nullable Output<V2modelsSlotTypeSlotTypeValuesArgs> slotTypeValues;

    /**
     * @return List of SlotTypeValue objects that defines the values that the slot type can take. Each value can have a list of synonyms, additional values that help train the machine learning model about the values that it resolves for a slot. See `slot_type_values` argument reference below.
     * 
     */
    public Optional<Output<V2modelsSlotTypeSlotTypeValuesArgs>> slotTypeValues() {
        return Optional.ofNullable(this.slotTypeValues);
    }

    @Import(name="timeouts")
    private @Nullable Output<V2modelsSlotTypeTimeoutsArgs> timeouts;

    public Optional<Output<V2modelsSlotTypeTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    /**
     * Determines the strategy that Amazon Lex uses to select a value from the list of possible values. The field can be set to one of the following values: `ORIGINAL_VALUE` returns the value entered by the user, if the user value is similar to the slot value. `TOP_RESOLUTION` if there is a resolution list for the slot, return the first value in the resolution list. If there is no resolution list, return null. If you don&#39;t specify the valueSelectionSetting parameter, the default is ORIGINAL_VALUE. See `value_selection_setting` argument reference below.
     * 
     */
    @Import(name="valueSelectionSetting")
    private @Nullable Output<V2modelsSlotTypeValueSelectionSettingArgs> valueSelectionSetting;

    /**
     * @return Determines the strategy that Amazon Lex uses to select a value from the list of possible values. The field can be set to one of the following values: `ORIGINAL_VALUE` returns the value entered by the user, if the user value is similar to the slot value. `TOP_RESOLUTION` if there is a resolution list for the slot, return the first value in the resolution list. If there is no resolution list, return null. If you don&#39;t specify the valueSelectionSetting parameter, the default is ORIGINAL_VALUE. See `value_selection_setting` argument reference below.
     * 
     */
    public Optional<Output<V2modelsSlotTypeValueSelectionSettingArgs>> valueSelectionSetting() {
        return Optional.ofNullable(this.valueSelectionSetting);
    }

    private V2modelsSlotTypeArgs() {}

    private V2modelsSlotTypeArgs(V2modelsSlotTypeArgs $) {
        this.botId = $.botId;
        this.botVersion = $.botVersion;
        this.compositeSlotTypeSetting = $.compositeSlotTypeSetting;
        this.description = $.description;
        this.externalSourceSetting = $.externalSourceSetting;
        this.localeId = $.localeId;
        this.name = $.name;
        this.parentSlotTypeSignature = $.parentSlotTypeSignature;
        this.slotTypeValues = $.slotTypeValues;
        this.timeouts = $.timeouts;
        this.valueSelectionSetting = $.valueSelectionSetting;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(V2modelsSlotTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private V2modelsSlotTypeArgs $;

        public Builder() {
            $ = new V2modelsSlotTypeArgs();
        }

        public Builder(V2modelsSlotTypeArgs defaults) {
            $ = new V2modelsSlotTypeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param botId Identifier of the bot associated with this slot type.
         * 
         * @return builder
         * 
         */
        public Builder botId(Output<String> botId) {
            $.botId = botId;
            return this;
        }

        /**
         * @param botId Identifier of the bot associated with this slot type.
         * 
         * @return builder
         * 
         */
        public Builder botId(String botId) {
            return botId(Output.of(botId));
        }

        /**
         * @param botVersion Version of the bot associated with this slot type.
         * 
         * @return builder
         * 
         */
        public Builder botVersion(Output<String> botVersion) {
            $.botVersion = botVersion;
            return this;
        }

        /**
         * @param botVersion Version of the bot associated with this slot type.
         * 
         * @return builder
         * 
         */
        public Builder botVersion(String botVersion) {
            return botVersion(Output.of(botVersion));
        }

        /**
         * @param compositeSlotTypeSetting Specifications for a composite slot type. See `composite_slot_type_setting` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder compositeSlotTypeSetting(@Nullable Output<V2modelsSlotTypeCompositeSlotTypeSettingArgs> compositeSlotTypeSetting) {
            $.compositeSlotTypeSetting = compositeSlotTypeSetting;
            return this;
        }

        /**
         * @param compositeSlotTypeSetting Specifications for a composite slot type. See `composite_slot_type_setting` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder compositeSlotTypeSetting(V2modelsSlotTypeCompositeSlotTypeSettingArgs compositeSlotTypeSetting) {
            return compositeSlotTypeSetting(Output.of(compositeSlotTypeSetting));
        }

        /**
         * @param description Description of the slot type.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the slot type.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param externalSourceSetting Type of external information used to create the slot type. See `external_source_setting` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder externalSourceSetting(@Nullable Output<V2modelsSlotTypeExternalSourceSettingArgs> externalSourceSetting) {
            $.externalSourceSetting = externalSourceSetting;
            return this;
        }

        /**
         * @param externalSourceSetting Type of external information used to create the slot type. See `external_source_setting` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder externalSourceSetting(V2modelsSlotTypeExternalSourceSettingArgs externalSourceSetting) {
            return externalSourceSetting(Output.of(externalSourceSetting));
        }

        /**
         * @param localeId Identifier of the language and locale where this slot type is used. All of the bots, slot types, and slots used by the intent must have the same locale.
         * 
         * @return builder
         * 
         */
        public Builder localeId(Output<String> localeId) {
            $.localeId = localeId;
            return this;
        }

        /**
         * @param localeId Identifier of the language and locale where this slot type is used. All of the bots, slot types, and slots used by the intent must have the same locale.
         * 
         * @return builder
         * 
         */
        public Builder localeId(String localeId) {
            return localeId(Output.of(localeId));
        }

        /**
         * @param name Name of the slot type
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the slot type
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param parentSlotTypeSignature Built-in slot type used as a parent of this slot type. When you define a parent slot type, the new slot type has the configuration of the parent slot type. Only AMAZON.AlphaNumeric is supported.
         * 
         * @return builder
         * 
         */
        public Builder parentSlotTypeSignature(@Nullable Output<String> parentSlotTypeSignature) {
            $.parentSlotTypeSignature = parentSlotTypeSignature;
            return this;
        }

        /**
         * @param parentSlotTypeSignature Built-in slot type used as a parent of this slot type. When you define a parent slot type, the new slot type has the configuration of the parent slot type. Only AMAZON.AlphaNumeric is supported.
         * 
         * @return builder
         * 
         */
        public Builder parentSlotTypeSignature(String parentSlotTypeSignature) {
            return parentSlotTypeSignature(Output.of(parentSlotTypeSignature));
        }

        /**
         * @param slotTypeValues List of SlotTypeValue objects that defines the values that the slot type can take. Each value can have a list of synonyms, additional values that help train the machine learning model about the values that it resolves for a slot. See `slot_type_values` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder slotTypeValues(@Nullable Output<V2modelsSlotTypeSlotTypeValuesArgs> slotTypeValues) {
            $.slotTypeValues = slotTypeValues;
            return this;
        }

        /**
         * @param slotTypeValues List of SlotTypeValue objects that defines the values that the slot type can take. Each value can have a list of synonyms, additional values that help train the machine learning model about the values that it resolves for a slot. See `slot_type_values` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder slotTypeValues(V2modelsSlotTypeSlotTypeValuesArgs slotTypeValues) {
            return slotTypeValues(Output.of(slotTypeValues));
        }

        public Builder timeouts(@Nullable Output<V2modelsSlotTypeTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(V2modelsSlotTypeTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        /**
         * @param valueSelectionSetting Determines the strategy that Amazon Lex uses to select a value from the list of possible values. The field can be set to one of the following values: `ORIGINAL_VALUE` returns the value entered by the user, if the user value is similar to the slot value. `TOP_RESOLUTION` if there is a resolution list for the slot, return the first value in the resolution list. If there is no resolution list, return null. If you don&#39;t specify the valueSelectionSetting parameter, the default is ORIGINAL_VALUE. See `value_selection_setting` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder valueSelectionSetting(@Nullable Output<V2modelsSlotTypeValueSelectionSettingArgs> valueSelectionSetting) {
            $.valueSelectionSetting = valueSelectionSetting;
            return this;
        }

        /**
         * @param valueSelectionSetting Determines the strategy that Amazon Lex uses to select a value from the list of possible values. The field can be set to one of the following values: `ORIGINAL_VALUE` returns the value entered by the user, if the user value is similar to the slot value. `TOP_RESOLUTION` if there is a resolution list for the slot, return the first value in the resolution list. If there is no resolution list, return null. If you don&#39;t specify the valueSelectionSetting parameter, the default is ORIGINAL_VALUE. See `value_selection_setting` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder valueSelectionSetting(V2modelsSlotTypeValueSelectionSettingArgs valueSelectionSetting) {
            return valueSelectionSetting(Output.of(valueSelectionSetting));
        }

        public V2modelsSlotTypeArgs build() {
            if ($.botId == null) {
                throw new MissingRequiredPropertyException("V2modelsSlotTypeArgs", "botId");
            }
            if ($.botVersion == null) {
                throw new MissingRequiredPropertyException("V2modelsSlotTypeArgs", "botVersion");
            }
            if ($.localeId == null) {
                throw new MissingRequiredPropertyException("V2modelsSlotTypeArgs", "localeId");
            }
            return $;
        }
    }

}
