// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sesv2.inputs;

import com.pulumi.aws.sesv2.inputs.ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationArgs;
import com.pulumi.aws.sesv2.inputs.ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestinationArgs;
import com.pulumi.aws.sesv2.inputs.ConfigurationSetEventDestinationEventDestinationPinpointDestinationArgs;
import com.pulumi.aws.sesv2.inputs.ConfigurationSetEventDestinationEventDestinationSnsDestinationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConfigurationSetEventDestinationEventDestinationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConfigurationSetEventDestinationEventDestinationArgs Empty = new ConfigurationSetEventDestinationEventDestinationArgs();

    /**
     * An object that defines an Amazon CloudWatch destination for email events. See cloud_watch_destination below
     * 
     */
    @Import(name="cloudWatchDestination")
    private @Nullable Output<ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationArgs> cloudWatchDestination;

    /**
     * @return An object that defines an Amazon CloudWatch destination for email events. See cloud_watch_destination below
     * 
     */
    public Optional<Output<ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationArgs>> cloudWatchDestination() {
        return Optional.ofNullable(this.cloudWatchDestination);
    }

    /**
     * When the event destination is enabled, the specified event types are sent to the destinations. Default: `false`.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return When the event destination is enabled, the specified event types are sent to the destinations. Default: `false`.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * An object that defines an Amazon Kinesis Data Firehose destination for email events. See kinesis_firehose_destination below.
     * 
     */
    @Import(name="kinesisFirehoseDestination")
    private @Nullable Output<ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestinationArgs> kinesisFirehoseDestination;

    /**
     * @return An object that defines an Amazon Kinesis Data Firehose destination for email events. See kinesis_firehose_destination below.
     * 
     */
    public Optional<Output<ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestinationArgs>> kinesisFirehoseDestination() {
        return Optional.ofNullable(this.kinesisFirehoseDestination);
    }

    /**
     * An array that specifies which events the Amazon SES API v2 should send to the destinations. Valid values: `SEND`, `REJECT`, `BOUNCE`, `COMPLAINT`, `DELIVERY`, `OPEN`, `CLICK`, `RENDERING_FAILURE`, `DELIVERY_DELAY`, `SUBSCRIPTION`.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="matchingEventTypes", required=true)
    private Output<List<String>> matchingEventTypes;

    /**
     * @return An array that specifies which events the Amazon SES API v2 should send to the destinations. Valid values: `SEND`, `REJECT`, `BOUNCE`, `COMPLAINT`, `DELIVERY`, `OPEN`, `CLICK`, `RENDERING_FAILURE`, `DELIVERY_DELAY`, `SUBSCRIPTION`.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<List<String>> matchingEventTypes() {
        return this.matchingEventTypes;
    }

    /**
     * An object that defines an Amazon Pinpoint project destination for email events. See pinpoint_destination below.
     * 
     */
    @Import(name="pinpointDestination")
    private @Nullable Output<ConfigurationSetEventDestinationEventDestinationPinpointDestinationArgs> pinpointDestination;

    /**
     * @return An object that defines an Amazon Pinpoint project destination for email events. See pinpoint_destination below.
     * 
     */
    public Optional<Output<ConfigurationSetEventDestinationEventDestinationPinpointDestinationArgs>> pinpointDestination() {
        return Optional.ofNullable(this.pinpointDestination);
    }

    /**
     * An object that defines an Amazon SNS destination for email events. See sns_destination below.
     * 
     */
    @Import(name="snsDestination")
    private @Nullable Output<ConfigurationSetEventDestinationEventDestinationSnsDestinationArgs> snsDestination;

    /**
     * @return An object that defines an Amazon SNS destination for email events. See sns_destination below.
     * 
     */
    public Optional<Output<ConfigurationSetEventDestinationEventDestinationSnsDestinationArgs>> snsDestination() {
        return Optional.ofNullable(this.snsDestination);
    }

    private ConfigurationSetEventDestinationEventDestinationArgs() {}

    private ConfigurationSetEventDestinationEventDestinationArgs(ConfigurationSetEventDestinationEventDestinationArgs $) {
        this.cloudWatchDestination = $.cloudWatchDestination;
        this.enabled = $.enabled;
        this.kinesisFirehoseDestination = $.kinesisFirehoseDestination;
        this.matchingEventTypes = $.matchingEventTypes;
        this.pinpointDestination = $.pinpointDestination;
        this.snsDestination = $.snsDestination;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigurationSetEventDestinationEventDestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigurationSetEventDestinationEventDestinationArgs $;

        public Builder() {
            $ = new ConfigurationSetEventDestinationEventDestinationArgs();
        }

        public Builder(ConfigurationSetEventDestinationEventDestinationArgs defaults) {
            $ = new ConfigurationSetEventDestinationEventDestinationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudWatchDestination An object that defines an Amazon CloudWatch destination for email events. See cloud_watch_destination below
         * 
         * @return builder
         * 
         */
        public Builder cloudWatchDestination(@Nullable Output<ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationArgs> cloudWatchDestination) {
            $.cloudWatchDestination = cloudWatchDestination;
            return this;
        }

        /**
         * @param cloudWatchDestination An object that defines an Amazon CloudWatch destination for email events. See cloud_watch_destination below
         * 
         * @return builder
         * 
         */
        public Builder cloudWatchDestination(ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationArgs cloudWatchDestination) {
            return cloudWatchDestination(Output.of(cloudWatchDestination));
        }

        /**
         * @param enabled When the event destination is enabled, the specified event types are sent to the destinations. Default: `false`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled When the event destination is enabled, the specified event types are sent to the destinations. Default: `false`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param kinesisFirehoseDestination An object that defines an Amazon Kinesis Data Firehose destination for email events. See kinesis_firehose_destination below.
         * 
         * @return builder
         * 
         */
        public Builder kinesisFirehoseDestination(@Nullable Output<ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestinationArgs> kinesisFirehoseDestination) {
            $.kinesisFirehoseDestination = kinesisFirehoseDestination;
            return this;
        }

        /**
         * @param kinesisFirehoseDestination An object that defines an Amazon Kinesis Data Firehose destination for email events. See kinesis_firehose_destination below.
         * 
         * @return builder
         * 
         */
        public Builder kinesisFirehoseDestination(ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestinationArgs kinesisFirehoseDestination) {
            return kinesisFirehoseDestination(Output.of(kinesisFirehoseDestination));
        }

        /**
         * @param matchingEventTypes An array that specifies which events the Amazon SES API v2 should send to the destinations. Valid values: `SEND`, `REJECT`, `BOUNCE`, `COMPLAINT`, `DELIVERY`, `OPEN`, `CLICK`, `RENDERING_FAILURE`, `DELIVERY_DELAY`, `SUBSCRIPTION`.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder matchingEventTypes(Output<List<String>> matchingEventTypes) {
            $.matchingEventTypes = matchingEventTypes;
            return this;
        }

        /**
         * @param matchingEventTypes An array that specifies which events the Amazon SES API v2 should send to the destinations. Valid values: `SEND`, `REJECT`, `BOUNCE`, `COMPLAINT`, `DELIVERY`, `OPEN`, `CLICK`, `RENDERING_FAILURE`, `DELIVERY_DELAY`, `SUBSCRIPTION`.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder matchingEventTypes(List<String> matchingEventTypes) {
            return matchingEventTypes(Output.of(matchingEventTypes));
        }

        /**
         * @param matchingEventTypes An array that specifies which events the Amazon SES API v2 should send to the destinations. Valid values: `SEND`, `REJECT`, `BOUNCE`, `COMPLAINT`, `DELIVERY`, `OPEN`, `CLICK`, `RENDERING_FAILURE`, `DELIVERY_DELAY`, `SUBSCRIPTION`.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder matchingEventTypes(String... matchingEventTypes) {
            return matchingEventTypes(List.of(matchingEventTypes));
        }

        /**
         * @param pinpointDestination An object that defines an Amazon Pinpoint project destination for email events. See pinpoint_destination below.
         * 
         * @return builder
         * 
         */
        public Builder pinpointDestination(@Nullable Output<ConfigurationSetEventDestinationEventDestinationPinpointDestinationArgs> pinpointDestination) {
            $.pinpointDestination = pinpointDestination;
            return this;
        }

        /**
         * @param pinpointDestination An object that defines an Amazon Pinpoint project destination for email events. See pinpoint_destination below.
         * 
         * @return builder
         * 
         */
        public Builder pinpointDestination(ConfigurationSetEventDestinationEventDestinationPinpointDestinationArgs pinpointDestination) {
            return pinpointDestination(Output.of(pinpointDestination));
        }

        /**
         * @param snsDestination An object that defines an Amazon SNS destination for email events. See sns_destination below.
         * 
         * @return builder
         * 
         */
        public Builder snsDestination(@Nullable Output<ConfigurationSetEventDestinationEventDestinationSnsDestinationArgs> snsDestination) {
            $.snsDestination = snsDestination;
            return this;
        }

        /**
         * @param snsDestination An object that defines an Amazon SNS destination for email events. See sns_destination below.
         * 
         * @return builder
         * 
         */
        public Builder snsDestination(ConfigurationSetEventDestinationEventDestinationSnsDestinationArgs snsDestination) {
            return snsDestination(Output.of(snsDestination));
        }

        public ConfigurationSetEventDestinationEventDestinationArgs build() {
            if ($.matchingEventTypes == null) {
                throw new MissingRequiredPropertyException("ConfigurationSetEventDestinationEventDestinationArgs", "matchingEventTypes");
            }
            return $;
        }
    }

}
