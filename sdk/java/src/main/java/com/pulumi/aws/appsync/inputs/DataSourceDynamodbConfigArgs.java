// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appsync.inputs;

import com.pulumi.aws.appsync.inputs.DataSourceDynamodbConfigDeltaSyncConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataSourceDynamodbConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataSourceDynamodbConfigArgs Empty = new DataSourceDynamodbConfigArgs();

    @Import(name="deltaSyncConfig")
    private @Nullable Output<DataSourceDynamodbConfigDeltaSyncConfigArgs> deltaSyncConfig;

    public Optional<Output<DataSourceDynamodbConfigDeltaSyncConfigArgs>> deltaSyncConfig() {
        return Optional.ofNullable(this.deltaSyncConfig);
    }

    @Import(name="region")
    private @Nullable Output<String> region;

    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    @Import(name="tableName", required=true)
    private Output<String> tableName;

    public Output<String> tableName() {
        return this.tableName;
    }

    @Import(name="useCallerCredentials")
    private @Nullable Output<Boolean> useCallerCredentials;

    public Optional<Output<Boolean>> useCallerCredentials() {
        return Optional.ofNullable(this.useCallerCredentials);
    }

    @Import(name="versioned")
    private @Nullable Output<Boolean> versioned;

    public Optional<Output<Boolean>> versioned() {
        return Optional.ofNullable(this.versioned);
    }

    private DataSourceDynamodbConfigArgs() {}

    private DataSourceDynamodbConfigArgs(DataSourceDynamodbConfigArgs $) {
        this.deltaSyncConfig = $.deltaSyncConfig;
        this.region = $.region;
        this.tableName = $.tableName;
        this.useCallerCredentials = $.useCallerCredentials;
        this.versioned = $.versioned;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataSourceDynamodbConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataSourceDynamodbConfigArgs $;

        public Builder() {
            $ = new DataSourceDynamodbConfigArgs();
        }

        public Builder(DataSourceDynamodbConfigArgs defaults) {
            $ = new DataSourceDynamodbConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder deltaSyncConfig(@Nullable Output<DataSourceDynamodbConfigDeltaSyncConfigArgs> deltaSyncConfig) {
            $.deltaSyncConfig = deltaSyncConfig;
            return this;
        }

        public Builder deltaSyncConfig(DataSourceDynamodbConfigDeltaSyncConfigArgs deltaSyncConfig) {
            return deltaSyncConfig(Output.of(deltaSyncConfig));
        }

        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        public Builder region(String region) {
            return region(Output.of(region));
        }

        public Builder tableName(Output<String> tableName) {
            $.tableName = tableName;
            return this;
        }

        public Builder tableName(String tableName) {
            return tableName(Output.of(tableName));
        }

        public Builder useCallerCredentials(@Nullable Output<Boolean> useCallerCredentials) {
            $.useCallerCredentials = useCallerCredentials;
            return this;
        }

        public Builder useCallerCredentials(Boolean useCallerCredentials) {
            return useCallerCredentials(Output.of(useCallerCredentials));
        }

        public Builder versioned(@Nullable Output<Boolean> versioned) {
            $.versioned = versioned;
            return this;
        }

        public Builder versioned(Boolean versioned) {
            return versioned(Output.of(versioned));
        }

        public DataSourceDynamodbConfigArgs build() {
            $.tableName = Objects.requireNonNull($.tableName, "expected parameter 'tableName' to be non-null");
            return $;
        }
    }

}
