// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cfg.inputs;

import com.pulumi.aws.cfg.inputs.RecorderRecordingGroupExclusionByResourceTypeArgs;
import com.pulumi.aws.cfg.inputs.RecorderRecordingGroupRecordingStrategyArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RecorderRecordingGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final RecorderRecordingGroupArgs Empty = new RecorderRecordingGroupArgs();

    /**
     * Specifies whether AWS Config records configuration changes for every supported type of regional resource (which includes any new type that will become supported in the future). Conflicts with `resource_types`. Defaults to `true`.
     * 
     */
    @Import(name="allSupported")
    private @Nullable Output<Boolean> allSupported;

    /**
     * @return Specifies whether AWS Config records configuration changes for every supported type of regional resource (which includes any new type that will become supported in the future). Conflicts with `resource_types`. Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> allSupported() {
        return Optional.ofNullable(this.allSupported);
    }

    /**
     * An object that specifies how AWS Config excludes resource types from being recorded by the configuration recorder.To use this option, you must set the useOnly field of RecordingStrategy to `EXCLUSION_BY_RESOURCE_TYPES` Requires `all_supported = false`. Conflicts with `resource_types`.
     * 
     */
    @Import(name="exclusionByResourceTypes")
    private @Nullable Output<List<RecorderRecordingGroupExclusionByResourceTypeArgs>> exclusionByResourceTypes;

    /**
     * @return An object that specifies how AWS Config excludes resource types from being recorded by the configuration recorder.To use this option, you must set the useOnly field of RecordingStrategy to `EXCLUSION_BY_RESOURCE_TYPES` Requires `all_supported = false`. Conflicts with `resource_types`.
     * 
     */
    public Optional<Output<List<RecorderRecordingGroupExclusionByResourceTypeArgs>>> exclusionByResourceTypes() {
        return Optional.ofNullable(this.exclusionByResourceTypes);
    }

    /**
     * Specifies whether AWS Config includes all supported types of _global resources_ with the resources that it records. Requires `all_supported = true`. Conflicts with `resource_types`.
     * 
     */
    @Import(name="includeGlobalResourceTypes")
    private @Nullable Output<Boolean> includeGlobalResourceTypes;

    /**
     * @return Specifies whether AWS Config includes all supported types of _global resources_ with the resources that it records. Requires `all_supported = true`. Conflicts with `resource_types`.
     * 
     */
    public Optional<Output<Boolean>> includeGlobalResourceTypes() {
        return Optional.ofNullable(this.includeGlobalResourceTypes);
    }

    /**
     * Recording Strategy. Detailed below.
     * 
     */
    @Import(name="recordingStrategies")
    private @Nullable Output<List<RecorderRecordingGroupRecordingStrategyArgs>> recordingStrategies;

    /**
     * @return Recording Strategy. Detailed below.
     * 
     */
    public Optional<Output<List<RecorderRecordingGroupRecordingStrategyArgs>>> recordingStrategies() {
        return Optional.ofNullable(this.recordingStrategies);
    }

    /**
     * A list that specifies the types of AWS resources for which AWS Config records configuration changes (for example, `AWS::EC2::Instance` or `AWS::CloudTrail::Trail`). See [relevant part of AWS Docs](http://docs.aws.amazon.com/config/latest/APIReference/API_ResourceIdentifier.html#config-Type-ResourceIdentifier-resourceType) for available types. In order to use this attribute, `all_supported` must be set to false.
     * 
     */
    @Import(name="resourceTypes")
    private @Nullable Output<List<String>> resourceTypes;

    /**
     * @return A list that specifies the types of AWS resources for which AWS Config records configuration changes (for example, `AWS::EC2::Instance` or `AWS::CloudTrail::Trail`). See [relevant part of AWS Docs](http://docs.aws.amazon.com/config/latest/APIReference/API_ResourceIdentifier.html#config-Type-ResourceIdentifier-resourceType) for available types. In order to use this attribute, `all_supported` must be set to false.
     * 
     */
    public Optional<Output<List<String>>> resourceTypes() {
        return Optional.ofNullable(this.resourceTypes);
    }

    private RecorderRecordingGroupArgs() {}

    private RecorderRecordingGroupArgs(RecorderRecordingGroupArgs $) {
        this.allSupported = $.allSupported;
        this.exclusionByResourceTypes = $.exclusionByResourceTypes;
        this.includeGlobalResourceTypes = $.includeGlobalResourceTypes;
        this.recordingStrategies = $.recordingStrategies;
        this.resourceTypes = $.resourceTypes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RecorderRecordingGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RecorderRecordingGroupArgs $;

        public Builder() {
            $ = new RecorderRecordingGroupArgs();
        }

        public Builder(RecorderRecordingGroupArgs defaults) {
            $ = new RecorderRecordingGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allSupported Specifies whether AWS Config records configuration changes for every supported type of regional resource (which includes any new type that will become supported in the future). Conflicts with `resource_types`. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder allSupported(@Nullable Output<Boolean> allSupported) {
            $.allSupported = allSupported;
            return this;
        }

        /**
         * @param allSupported Specifies whether AWS Config records configuration changes for every supported type of regional resource (which includes any new type that will become supported in the future). Conflicts with `resource_types`. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder allSupported(Boolean allSupported) {
            return allSupported(Output.of(allSupported));
        }

        /**
         * @param exclusionByResourceTypes An object that specifies how AWS Config excludes resource types from being recorded by the configuration recorder.To use this option, you must set the useOnly field of RecordingStrategy to `EXCLUSION_BY_RESOURCE_TYPES` Requires `all_supported = false`. Conflicts with `resource_types`.
         * 
         * @return builder
         * 
         */
        public Builder exclusionByResourceTypes(@Nullable Output<List<RecorderRecordingGroupExclusionByResourceTypeArgs>> exclusionByResourceTypes) {
            $.exclusionByResourceTypes = exclusionByResourceTypes;
            return this;
        }

        /**
         * @param exclusionByResourceTypes An object that specifies how AWS Config excludes resource types from being recorded by the configuration recorder.To use this option, you must set the useOnly field of RecordingStrategy to `EXCLUSION_BY_RESOURCE_TYPES` Requires `all_supported = false`. Conflicts with `resource_types`.
         * 
         * @return builder
         * 
         */
        public Builder exclusionByResourceTypes(List<RecorderRecordingGroupExclusionByResourceTypeArgs> exclusionByResourceTypes) {
            return exclusionByResourceTypes(Output.of(exclusionByResourceTypes));
        }

        /**
         * @param exclusionByResourceTypes An object that specifies how AWS Config excludes resource types from being recorded by the configuration recorder.To use this option, you must set the useOnly field of RecordingStrategy to `EXCLUSION_BY_RESOURCE_TYPES` Requires `all_supported = false`. Conflicts with `resource_types`.
         * 
         * @return builder
         * 
         */
        public Builder exclusionByResourceTypes(RecorderRecordingGroupExclusionByResourceTypeArgs... exclusionByResourceTypes) {
            return exclusionByResourceTypes(List.of(exclusionByResourceTypes));
        }

        /**
         * @param includeGlobalResourceTypes Specifies whether AWS Config includes all supported types of _global resources_ with the resources that it records. Requires `all_supported = true`. Conflicts with `resource_types`.
         * 
         * @return builder
         * 
         */
        public Builder includeGlobalResourceTypes(@Nullable Output<Boolean> includeGlobalResourceTypes) {
            $.includeGlobalResourceTypes = includeGlobalResourceTypes;
            return this;
        }

        /**
         * @param includeGlobalResourceTypes Specifies whether AWS Config includes all supported types of _global resources_ with the resources that it records. Requires `all_supported = true`. Conflicts with `resource_types`.
         * 
         * @return builder
         * 
         */
        public Builder includeGlobalResourceTypes(Boolean includeGlobalResourceTypes) {
            return includeGlobalResourceTypes(Output.of(includeGlobalResourceTypes));
        }

        /**
         * @param recordingStrategies Recording Strategy. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder recordingStrategies(@Nullable Output<List<RecorderRecordingGroupRecordingStrategyArgs>> recordingStrategies) {
            $.recordingStrategies = recordingStrategies;
            return this;
        }

        /**
         * @param recordingStrategies Recording Strategy. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder recordingStrategies(List<RecorderRecordingGroupRecordingStrategyArgs> recordingStrategies) {
            return recordingStrategies(Output.of(recordingStrategies));
        }

        /**
         * @param recordingStrategies Recording Strategy. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder recordingStrategies(RecorderRecordingGroupRecordingStrategyArgs... recordingStrategies) {
            return recordingStrategies(List.of(recordingStrategies));
        }

        /**
         * @param resourceTypes A list that specifies the types of AWS resources for which AWS Config records configuration changes (for example, `AWS::EC2::Instance` or `AWS::CloudTrail::Trail`). See [relevant part of AWS Docs](http://docs.aws.amazon.com/config/latest/APIReference/API_ResourceIdentifier.html#config-Type-ResourceIdentifier-resourceType) for available types. In order to use this attribute, `all_supported` must be set to false.
         * 
         * @return builder
         * 
         */
        public Builder resourceTypes(@Nullable Output<List<String>> resourceTypes) {
            $.resourceTypes = resourceTypes;
            return this;
        }

        /**
         * @param resourceTypes A list that specifies the types of AWS resources for which AWS Config records configuration changes (for example, `AWS::EC2::Instance` or `AWS::CloudTrail::Trail`). See [relevant part of AWS Docs](http://docs.aws.amazon.com/config/latest/APIReference/API_ResourceIdentifier.html#config-Type-ResourceIdentifier-resourceType) for available types. In order to use this attribute, `all_supported` must be set to false.
         * 
         * @return builder
         * 
         */
        public Builder resourceTypes(List<String> resourceTypes) {
            return resourceTypes(Output.of(resourceTypes));
        }

        /**
         * @param resourceTypes A list that specifies the types of AWS resources for which AWS Config records configuration changes (for example, `AWS::EC2::Instance` or `AWS::CloudTrail::Trail`). See [relevant part of AWS Docs](http://docs.aws.amazon.com/config/latest/APIReference/API_ResourceIdentifier.html#config-Type-ResourceIdentifier-resourceType) for available types. In order to use this attribute, `all_supported` must be set to false.
         * 
         * @return builder
         * 
         */
        public Builder resourceTypes(String... resourceTypes) {
            return resourceTypes(List.of(resourceTypes));
        }

        public RecorderRecordingGroupArgs build() {
            return $;
        }
    }

}
