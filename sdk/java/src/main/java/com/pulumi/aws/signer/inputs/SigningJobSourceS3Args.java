// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.signer.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class SigningJobSourceS3Args extends com.pulumi.resources.ResourceArgs {

    public static final SigningJobSourceS3Args Empty = new SigningJobSourceS3Args();

    @Import(name="bucket", required=true)
    private Output<String> bucket;

    public Output<String> bucket() {
        return this.bucket;
    }

    @Import(name="key", required=true)
    private Output<String> key;

    public Output<String> key() {
        return this.key;
    }

    @Import(name="version", required=true)
    private Output<String> version;

    public Output<String> version() {
        return this.version;
    }

    private SigningJobSourceS3Args() {}

    private SigningJobSourceS3Args(SigningJobSourceS3Args $) {
        this.bucket = $.bucket;
        this.key = $.key;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SigningJobSourceS3Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SigningJobSourceS3Args $;

        public Builder() {
            $ = new SigningJobSourceS3Args();
        }

        public Builder(SigningJobSourceS3Args defaults) {
            $ = new SigningJobSourceS3Args(Objects.requireNonNull(defaults));
        }

        public Builder bucket(Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        public Builder key(Output<String> key) {
            $.key = key;
            return this;
        }

        public Builder key(String key) {
            return key(Output.of(key));
        }

        public Builder version(Output<String> version) {
            $.version = version;
            return this;
        }

        public Builder version(String version) {
            return version(Output.of(version));
        }

        public SigningJobSourceS3Args build() {
            if ($.bucket == null) {
                throw new MissingRequiredPropertyException("SigningJobSourceS3Args", "bucket");
            }
            if ($.key == null) {
                throw new MissingRequiredPropertyException("SigningJobSourceS3Args", "key");
            }
            if ($.version == null) {
                throw new MissingRequiredPropertyException("SigningJobSourceS3Args", "version");
            }
            return $;
        }
    }

}
