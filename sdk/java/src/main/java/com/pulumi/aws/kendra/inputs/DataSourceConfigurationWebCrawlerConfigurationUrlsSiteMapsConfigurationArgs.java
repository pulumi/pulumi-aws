// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kendra.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationArgs Empty = new DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationArgs();

    /**
     * The list of sitemap URLs of the websites you want to crawl. The list can include a maximum of `3` sitemap URLs.
     * 
     */
    @Import(name="siteMaps", required=true)
    private Output<List<String>> siteMaps;

    /**
     * @return The list of sitemap URLs of the websites you want to crawl. The list can include a maximum of `3` sitemap URLs.
     * 
     */
    public Output<List<String>> siteMaps() {
        return this.siteMaps;
    }

    private DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationArgs() {}

    private DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationArgs(DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationArgs $) {
        this.siteMaps = $.siteMaps;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationArgs $;

        public Builder() {
            $ = new DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationArgs();
        }

        public Builder(DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationArgs defaults) {
            $ = new DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param siteMaps The list of sitemap URLs of the websites you want to crawl. The list can include a maximum of `3` sitemap URLs.
         * 
         * @return builder
         * 
         */
        public Builder siteMaps(Output<List<String>> siteMaps) {
            $.siteMaps = siteMaps;
            return this;
        }

        /**
         * @param siteMaps The list of sitemap URLs of the websites you want to crawl. The list can include a maximum of `3` sitemap URLs.
         * 
         * @return builder
         * 
         */
        public Builder siteMaps(List<String> siteMaps) {
            return siteMaps(Output.of(siteMaps));
        }

        /**
         * @param siteMaps The list of sitemap URLs of the websites you want to crawl. The list can include a maximum of `3` sitemap URLs.
         * 
         * @return builder
         * 
         */
        public Builder siteMaps(String... siteMaps) {
            return siteMaps(List.of(siteMaps));
        }

        public DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationArgs build() {
            if ($.siteMaps == null) {
                throw new MissingRequiredPropertyException("DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationArgs", "siteMaps");
            }
            return $;
        }
    }

}
