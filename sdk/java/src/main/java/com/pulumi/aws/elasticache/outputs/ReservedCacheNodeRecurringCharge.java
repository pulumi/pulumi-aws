// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elasticache.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ReservedCacheNodeRecurringCharge {
    private Double recurringChargeAmount;
    private String recurringChargeFrequency;

    private ReservedCacheNodeRecurringCharge() {}
    public Double recurringChargeAmount() {
        return this.recurringChargeAmount;
    }
    public String recurringChargeFrequency() {
        return this.recurringChargeFrequency;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ReservedCacheNodeRecurringCharge defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double recurringChargeAmount;
        private String recurringChargeFrequency;
        public Builder() {}
        public Builder(ReservedCacheNodeRecurringCharge defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.recurringChargeAmount = defaults.recurringChargeAmount;
    	      this.recurringChargeFrequency = defaults.recurringChargeFrequency;
        }

        @CustomType.Setter
        public Builder recurringChargeAmount(Double recurringChargeAmount) {
            if (recurringChargeAmount == null) {
              throw new MissingRequiredPropertyException("ReservedCacheNodeRecurringCharge", "recurringChargeAmount");
            }
            this.recurringChargeAmount = recurringChargeAmount;
            return this;
        }
        @CustomType.Setter
        public Builder recurringChargeFrequency(String recurringChargeFrequency) {
            if (recurringChargeFrequency == null) {
              throw new MissingRequiredPropertyException("ReservedCacheNodeRecurringCharge", "recurringChargeFrequency");
            }
            this.recurringChargeFrequency = recurringChargeFrequency;
            return this;
        }
        public ReservedCacheNodeRecurringCharge build() {
            final var _resultValue = new ReservedCacheNodeRecurringCharge();
            _resultValue.recurringChargeAmount = recurringChargeAmount;
            _resultValue.recurringChargeFrequency = recurringChargeFrequency;
            return _resultValue;
        }
    }
}
