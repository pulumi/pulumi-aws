// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NotebookInstanceLifecycleConfigurationState extends com.pulumi.resources.ResourceArgs {

    public static final NotebookInstanceLifecycleConfigurationState Empty = new NotebookInstanceLifecycleConfigurationState();

    /**
     * The Amazon Resource Name (ARN) assigned by AWS to this lifecycle configuration.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return The Amazon Resource Name (ARN) assigned by AWS to this lifecycle configuration.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * The name of the lifecycle configuration (must be unique). If omitted, this provider will assign a random, unique name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the lifecycle configuration (must be unique). If omitted, this provider will assign a random, unique name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A shell script (base64-encoded) that runs only once when the SageMaker AI Notebook Instance is created.
     * 
     */
    @Import(name="onCreate")
    private @Nullable Output<String> onCreate;

    /**
     * @return A shell script (base64-encoded) that runs only once when the SageMaker AI Notebook Instance is created.
     * 
     */
    public Optional<Output<String>> onCreate() {
        return Optional.ofNullable(this.onCreate);
    }

    /**
     * A shell script (base64-encoded) that runs every time the SageMaker AI Notebook Instance is started including the time it&#39;s created.
     * 
     */
    @Import(name="onStart")
    private @Nullable Output<String> onStart;

    /**
     * @return A shell script (base64-encoded) that runs every time the SageMaker AI Notebook Instance is started including the time it&#39;s created.
     * 
     */
    public Optional<Output<String>> onStart() {
        return Optional.ofNullable(this.onStart);
    }

    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * A mapping of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private NotebookInstanceLifecycleConfigurationState() {}

    private NotebookInstanceLifecycleConfigurationState(NotebookInstanceLifecycleConfigurationState $) {
        this.arn = $.arn;
        this.name = $.name;
        this.onCreate = $.onCreate;
        this.onStart = $.onStart;
        this.region = $.region;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NotebookInstanceLifecycleConfigurationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NotebookInstanceLifecycleConfigurationState $;

        public Builder() {
            $ = new NotebookInstanceLifecycleConfigurationState();
        }

        public Builder(NotebookInstanceLifecycleConfigurationState defaults) {
            $ = new NotebookInstanceLifecycleConfigurationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn The Amazon Resource Name (ARN) assigned by AWS to this lifecycle configuration.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn The Amazon Resource Name (ARN) assigned by AWS to this lifecycle configuration.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param name The name of the lifecycle configuration (must be unique). If omitted, this provider will assign a random, unique name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the lifecycle configuration (must be unique). If omitted, this provider will assign a random, unique name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param onCreate A shell script (base64-encoded) that runs only once when the SageMaker AI Notebook Instance is created.
         * 
         * @return builder
         * 
         */
        public Builder onCreate(@Nullable Output<String> onCreate) {
            $.onCreate = onCreate;
            return this;
        }

        /**
         * @param onCreate A shell script (base64-encoded) that runs only once when the SageMaker AI Notebook Instance is created.
         * 
         * @return builder
         * 
         */
        public Builder onCreate(String onCreate) {
            return onCreate(Output.of(onCreate));
        }

        /**
         * @param onStart A shell script (base64-encoded) that runs every time the SageMaker AI Notebook Instance is started including the time it&#39;s created.
         * 
         * @return builder
         * 
         */
        public Builder onStart(@Nullable Output<String> onStart) {
            $.onStart = onStart;
            return this;
        }

        /**
         * @param onStart A shell script (base64-encoded) that runs every time the SageMaker AI Notebook Instance is started including the time it&#39;s created.
         * 
         * @return builder
         * 
         */
        public Builder onStart(String onStart) {
            return onStart(Output.of(onStart));
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param tags A mapping of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public NotebookInstanceLifecycleConfigurationState build() {
            return $;
        }
    }

}
