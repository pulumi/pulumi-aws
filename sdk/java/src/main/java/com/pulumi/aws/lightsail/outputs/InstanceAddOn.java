// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lightsail.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class InstanceAddOn {
    /**
     * @return The daily time when an automatic snapshot will be created. Must be in HH:00 format, and in an hourly increment and specified in Coordinated Universal Time (UTC). The snapshot will be automatically created between the time specified and up to 45 minutes after.
     * 
     */
    private String snapshotTime;
    /**
     * @return The status of the add on. Valid Values: `Enabled`, `Disabled`.
     * 
     */
    private String status;
    /**
     * @return The add-on type. There is currently only one valid type `AutoSnapshot`.
     * 
     */
    private String type;

    private InstanceAddOn() {}
    /**
     * @return The daily time when an automatic snapshot will be created. Must be in HH:00 format, and in an hourly increment and specified in Coordinated Universal Time (UTC). The snapshot will be automatically created between the time specified and up to 45 minutes after.
     * 
     */
    public String snapshotTime() {
        return this.snapshotTime;
    }
    /**
     * @return The status of the add on. Valid Values: `Enabled`, `Disabled`.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The add-on type. There is currently only one valid type `AutoSnapshot`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceAddOn defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String snapshotTime;
        private String status;
        private String type;
        public Builder() {}
        public Builder(InstanceAddOn defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.snapshotTime = defaults.snapshotTime;
    	      this.status = defaults.status;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder snapshotTime(String snapshotTime) {
            this.snapshotTime = Objects.requireNonNull(snapshotTime);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public InstanceAddOn build() {
            final var o = new InstanceAddOn();
            o.snapshotTime = snapshotTime;
            o.status = status;
            o.type = type;
            return o;
        }
    }
}
