// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appsync.inputs;

import com.pulumi.aws.appsync.inputs.ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ChannelNamespaceHandlerConfigsOnPublishIntegrationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ChannelNamespaceHandlerConfigsOnPublishIntegrationArgs Empty = new ChannelNamespaceHandlerConfigsOnPublishIntegrationArgs();

    /**
     * Unique name of the data source that has been configured on the API.
     * 
     */
    @Import(name="dataSourceName", required=true)
    private Output<String> dataSourceName;

    /**
     * @return Unique name of the data source that has been configured on the API.
     * 
     */
    public Output<String> dataSourceName() {
        return this.dataSourceName;
    }

    /**
     * Configuration for a Lambda data source. See Lambda Config below.
     * 
     */
    @Import(name="lambdaConfig")
    private @Nullable Output<ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigArgs> lambdaConfig;

    /**
     * @return Configuration for a Lambda data source. See Lambda Config below.
     * 
     */
    public Optional<Output<ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigArgs>> lambdaConfig() {
        return Optional.ofNullable(this.lambdaConfig);
    }

    private ChannelNamespaceHandlerConfigsOnPublishIntegrationArgs() {}

    private ChannelNamespaceHandlerConfigsOnPublishIntegrationArgs(ChannelNamespaceHandlerConfigsOnPublishIntegrationArgs $) {
        this.dataSourceName = $.dataSourceName;
        this.lambdaConfig = $.lambdaConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ChannelNamespaceHandlerConfigsOnPublishIntegrationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ChannelNamespaceHandlerConfigsOnPublishIntegrationArgs $;

        public Builder() {
            $ = new ChannelNamespaceHandlerConfigsOnPublishIntegrationArgs();
        }

        public Builder(ChannelNamespaceHandlerConfigsOnPublishIntegrationArgs defaults) {
            $ = new ChannelNamespaceHandlerConfigsOnPublishIntegrationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataSourceName Unique name of the data source that has been configured on the API.
         * 
         * @return builder
         * 
         */
        public Builder dataSourceName(Output<String> dataSourceName) {
            $.dataSourceName = dataSourceName;
            return this;
        }

        /**
         * @param dataSourceName Unique name of the data source that has been configured on the API.
         * 
         * @return builder
         * 
         */
        public Builder dataSourceName(String dataSourceName) {
            return dataSourceName(Output.of(dataSourceName));
        }

        /**
         * @param lambdaConfig Configuration for a Lambda data source. See Lambda Config below.
         * 
         * @return builder
         * 
         */
        public Builder lambdaConfig(@Nullable Output<ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigArgs> lambdaConfig) {
            $.lambdaConfig = lambdaConfig;
            return this;
        }

        /**
         * @param lambdaConfig Configuration for a Lambda data source. See Lambda Config below.
         * 
         * @return builder
         * 
         */
        public Builder lambdaConfig(ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigArgs lambdaConfig) {
            return lambdaConfig(Output.of(lambdaConfig));
        }

        public ChannelNamespaceHandlerConfigsOnPublishIntegrationArgs build() {
            if ($.dataSourceName == null) {
                throw new MissingRequiredPropertyException("ChannelNamespaceHandlerConfigsOnPublishIntegrationArgs", "dataSourceName");
            }
            return $;
        }
    }

}
