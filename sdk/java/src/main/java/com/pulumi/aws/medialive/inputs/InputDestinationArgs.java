// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.medialive.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class InputDestinationArgs extends com.pulumi.resources.ResourceArgs {

    public static final InputDestinationArgs Empty = new InputDestinationArgs();

    /**
     * A unique name for the location the RTMP stream is being pushed to.
     * 
     */
    @Import(name="streamName", required=true)
    private Output<String> streamName;

    /**
     * @return A unique name for the location the RTMP stream is being pushed to.
     * 
     */
    public Output<String> streamName() {
        return this.streamName;
    }

    private InputDestinationArgs() {}

    private InputDestinationArgs(InputDestinationArgs $) {
        this.streamName = $.streamName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InputDestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InputDestinationArgs $;

        public Builder() {
            $ = new InputDestinationArgs();
        }

        public Builder(InputDestinationArgs defaults) {
            $ = new InputDestinationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param streamName A unique name for the location the RTMP stream is being pushed to.
         * 
         * @return builder
         * 
         */
        public Builder streamName(Output<String> streamName) {
            $.streamName = streamName;
            return this;
        }

        /**
         * @param streamName A unique name for the location the RTMP stream is being pushed to.
         * 
         * @return builder
         * 
         */
        public Builder streamName(String streamName) {
            return streamName(Output.of(streamName));
        }

        public InputDestinationArgs build() {
            $.streamName = Objects.requireNonNull($.streamName, "expected parameter 'streamName' to be non-null");
            return $;
        }
    }

}
