// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TrustStoreRevocationState extends com.pulumi.resources.ResourceArgs {

    public static final TrustStoreRevocationState Empty = new TrustStoreRevocationState();

    /**
     * AWS assigned RevocationId, (number).
     * 
     */
    @Import(name="revocationId")
    private @Nullable Output<Integer> revocationId;

    /**
     * @return AWS assigned RevocationId, (number).
     * 
     */
    public Optional<Output<Integer>> revocationId() {
        return Optional.ofNullable(this.revocationId);
    }

    /**
     * S3 Bucket name holding the client certificate CA bundle.
     * 
     */
    @Import(name="revocationsS3Bucket")
    private @Nullable Output<String> revocationsS3Bucket;

    /**
     * @return S3 Bucket name holding the client certificate CA bundle.
     * 
     */
    public Optional<Output<String>> revocationsS3Bucket() {
        return Optional.ofNullable(this.revocationsS3Bucket);
    }

    /**
     * S3 Bucket name holding the client certificate CA bundle.
     * 
     */
    @Import(name="revocationsS3Key")
    private @Nullable Output<String> revocationsS3Key;

    /**
     * @return S3 Bucket name holding the client certificate CA bundle.
     * 
     */
    public Optional<Output<String>> revocationsS3Key() {
        return Optional.ofNullable(this.revocationsS3Key);
    }

    /**
     * Version Id of CA bundle S3 bucket object, if versioned, defaults to latest if omitted.
     * 
     */
    @Import(name="revocationsS3ObjectVersion")
    private @Nullable Output<String> revocationsS3ObjectVersion;

    /**
     * @return Version Id of CA bundle S3 bucket object, if versioned, defaults to latest if omitted.
     * 
     */
    public Optional<Output<String>> revocationsS3ObjectVersion() {
        return Optional.ofNullable(this.revocationsS3ObjectVersion);
    }

    /**
     * Trust Store ARN.
     * 
     */
    @Import(name="trustStoreArn")
    private @Nullable Output<String> trustStoreArn;

    /**
     * @return Trust Store ARN.
     * 
     */
    public Optional<Output<String>> trustStoreArn() {
        return Optional.ofNullable(this.trustStoreArn);
    }

    private TrustStoreRevocationState() {}

    private TrustStoreRevocationState(TrustStoreRevocationState $) {
        this.revocationId = $.revocationId;
        this.revocationsS3Bucket = $.revocationsS3Bucket;
        this.revocationsS3Key = $.revocationsS3Key;
        this.revocationsS3ObjectVersion = $.revocationsS3ObjectVersion;
        this.trustStoreArn = $.trustStoreArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TrustStoreRevocationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TrustStoreRevocationState $;

        public Builder() {
            $ = new TrustStoreRevocationState();
        }

        public Builder(TrustStoreRevocationState defaults) {
            $ = new TrustStoreRevocationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param revocationId AWS assigned RevocationId, (number).
         * 
         * @return builder
         * 
         */
        public Builder revocationId(@Nullable Output<Integer> revocationId) {
            $.revocationId = revocationId;
            return this;
        }

        /**
         * @param revocationId AWS assigned RevocationId, (number).
         * 
         * @return builder
         * 
         */
        public Builder revocationId(Integer revocationId) {
            return revocationId(Output.of(revocationId));
        }

        /**
         * @param revocationsS3Bucket S3 Bucket name holding the client certificate CA bundle.
         * 
         * @return builder
         * 
         */
        public Builder revocationsS3Bucket(@Nullable Output<String> revocationsS3Bucket) {
            $.revocationsS3Bucket = revocationsS3Bucket;
            return this;
        }

        /**
         * @param revocationsS3Bucket S3 Bucket name holding the client certificate CA bundle.
         * 
         * @return builder
         * 
         */
        public Builder revocationsS3Bucket(String revocationsS3Bucket) {
            return revocationsS3Bucket(Output.of(revocationsS3Bucket));
        }

        /**
         * @param revocationsS3Key S3 Bucket name holding the client certificate CA bundle.
         * 
         * @return builder
         * 
         */
        public Builder revocationsS3Key(@Nullable Output<String> revocationsS3Key) {
            $.revocationsS3Key = revocationsS3Key;
            return this;
        }

        /**
         * @param revocationsS3Key S3 Bucket name holding the client certificate CA bundle.
         * 
         * @return builder
         * 
         */
        public Builder revocationsS3Key(String revocationsS3Key) {
            return revocationsS3Key(Output.of(revocationsS3Key));
        }

        /**
         * @param revocationsS3ObjectVersion Version Id of CA bundle S3 bucket object, if versioned, defaults to latest if omitted.
         * 
         * @return builder
         * 
         */
        public Builder revocationsS3ObjectVersion(@Nullable Output<String> revocationsS3ObjectVersion) {
            $.revocationsS3ObjectVersion = revocationsS3ObjectVersion;
            return this;
        }

        /**
         * @param revocationsS3ObjectVersion Version Id of CA bundle S3 bucket object, if versioned, defaults to latest if omitted.
         * 
         * @return builder
         * 
         */
        public Builder revocationsS3ObjectVersion(String revocationsS3ObjectVersion) {
            return revocationsS3ObjectVersion(Output.of(revocationsS3ObjectVersion));
        }

        /**
         * @param trustStoreArn Trust Store ARN.
         * 
         * @return builder
         * 
         */
        public Builder trustStoreArn(@Nullable Output<String> trustStoreArn) {
            $.trustStoreArn = trustStoreArn;
            return this;
        }

        /**
         * @param trustStoreArn Trust Store ARN.
         * 
         * @return builder
         * 
         */
        public Builder trustStoreArn(String trustStoreArn) {
            return trustStoreArn(Output.of(trustStoreArn));
        }

        public TrustStoreRevocationState build() {
            return $;
        }
    }

}
