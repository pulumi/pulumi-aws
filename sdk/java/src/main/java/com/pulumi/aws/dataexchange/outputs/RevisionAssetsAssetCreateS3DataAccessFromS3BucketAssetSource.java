// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dataexchange.outputs;

import com.pulumi.aws.dataexchange.outputs.RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrant;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSource {
    /**
     * @return The name of the S3 bucket.
     * 
     */
    private String bucket;
    /**
     * @return List of key prefixes in the S3 bucket.
     * 
     */
    private @Nullable List<String> keyPrefixes;
    /**
     * @return List of object keys in the S3 bucket.
     * 
     */
    private @Nullable List<String> keys;
    private @Nullable List<RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrant> kmsKeysToGrants;

    private RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSource() {}
    /**
     * @return The name of the S3 bucket.
     * 
     */
    public String bucket() {
        return this.bucket;
    }
    /**
     * @return List of key prefixes in the S3 bucket.
     * 
     */
    public List<String> keyPrefixes() {
        return this.keyPrefixes == null ? List.of() : this.keyPrefixes;
    }
    /**
     * @return List of object keys in the S3 bucket.
     * 
     */
    public List<String> keys() {
        return this.keys == null ? List.of() : this.keys;
    }
    public List<RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrant> kmsKeysToGrants() {
        return this.kmsKeysToGrants == null ? List.of() : this.kmsKeysToGrants;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String bucket;
        private @Nullable List<String> keyPrefixes;
        private @Nullable List<String> keys;
        private @Nullable List<RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrant> kmsKeysToGrants;
        public Builder() {}
        public Builder(RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucket = defaults.bucket;
    	      this.keyPrefixes = defaults.keyPrefixes;
    	      this.keys = defaults.keys;
    	      this.kmsKeysToGrants = defaults.kmsKeysToGrants;
        }

        @CustomType.Setter
        public Builder bucket(String bucket) {
            if (bucket == null) {
              throw new MissingRequiredPropertyException("RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSource", "bucket");
            }
            this.bucket = bucket;
            return this;
        }
        @CustomType.Setter
        public Builder keyPrefixes(@Nullable List<String> keyPrefixes) {

            this.keyPrefixes = keyPrefixes;
            return this;
        }
        public Builder keyPrefixes(String... keyPrefixes) {
            return keyPrefixes(List.of(keyPrefixes));
        }
        @CustomType.Setter
        public Builder keys(@Nullable List<String> keys) {

            this.keys = keys;
            return this;
        }
        public Builder keys(String... keys) {
            return keys(List.of(keys));
        }
        @CustomType.Setter
        public Builder kmsKeysToGrants(@Nullable List<RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrant> kmsKeysToGrants) {

            this.kmsKeysToGrants = kmsKeysToGrants;
            return this;
        }
        public Builder kmsKeysToGrants(RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrant... kmsKeysToGrants) {
            return kmsKeysToGrants(List.of(kmsKeysToGrants));
        }
        public RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSource build() {
            final var _resultValue = new RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSource();
            _resultValue.bucket = bucket;
            _resultValue.keyPrefixes = keyPrefixes;
            _resultValue.keys = keys;
            _resultValue.kmsKeysToGrants = kmsKeysToGrants;
            return _resultValue;
        }
    }
}
