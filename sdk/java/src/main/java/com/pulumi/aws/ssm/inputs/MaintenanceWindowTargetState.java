// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ssm.inputs;

import com.pulumi.aws.ssm.inputs.MaintenanceWindowTargetTargetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MaintenanceWindowTargetState extends com.pulumi.resources.ResourceArgs {

    public static final MaintenanceWindowTargetState Empty = new MaintenanceWindowTargetState();

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="ownerInformation")
    private @Nullable Output<String> ownerInformation;

    public Optional<Output<String>> ownerInformation() {
        return Optional.ofNullable(this.ownerInformation);
    }

    @Import(name="resourceType")
    private @Nullable Output<String> resourceType;

    public Optional<Output<String>> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }

    @Import(name="targets")
    private @Nullable Output<List<MaintenanceWindowTargetTargetArgs>> targets;

    public Optional<Output<List<MaintenanceWindowTargetTargetArgs>>> targets() {
        return Optional.ofNullable(this.targets);
    }

    @Import(name="windowId")
    private @Nullable Output<String> windowId;

    public Optional<Output<String>> windowId() {
        return Optional.ofNullable(this.windowId);
    }

    private MaintenanceWindowTargetState() {}

    private MaintenanceWindowTargetState(MaintenanceWindowTargetState $) {
        this.description = $.description;
        this.name = $.name;
        this.ownerInformation = $.ownerInformation;
        this.resourceType = $.resourceType;
        this.targets = $.targets;
        this.windowId = $.windowId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MaintenanceWindowTargetState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MaintenanceWindowTargetState $;

        public Builder() {
            $ = new MaintenanceWindowTargetState();
        }

        public Builder(MaintenanceWindowTargetState defaults) {
            $ = new MaintenanceWindowTargetState(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder ownerInformation(@Nullable Output<String> ownerInformation) {
            $.ownerInformation = ownerInformation;
            return this;
        }

        public Builder ownerInformation(String ownerInformation) {
            return ownerInformation(Output.of(ownerInformation));
        }

        public Builder resourceType(@Nullable Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        public Builder targets(@Nullable Output<List<MaintenanceWindowTargetTargetArgs>> targets) {
            $.targets = targets;
            return this;
        }

        public Builder targets(List<MaintenanceWindowTargetTargetArgs> targets) {
            return targets(Output.of(targets));
        }

        public Builder targets(MaintenanceWindowTargetTargetArgs... targets) {
            return targets(List.of(targets));
        }

        public Builder windowId(@Nullable Output<String> windowId) {
            $.windowId = windowId;
            return this;
        }

        public Builder windowId(String windowId) {
            return windowId(Output.of(windowId));
        }

        public MaintenanceWindowTargetState build() {
            return $;
        }
    }

}
