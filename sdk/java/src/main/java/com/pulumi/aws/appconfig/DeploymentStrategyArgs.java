// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appconfig;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeploymentStrategyArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentStrategyArgs Empty = new DeploymentStrategyArgs();

    /**
     * Total amount of time for a deployment to last. Minimum value of 0, maximum value of 1440.
     * 
     */
    @Import(name="deploymentDurationInMinutes", required=true)
    private Output<Integer> deploymentDurationInMinutes;

    /**
     * @return Total amount of time for a deployment to last. Minimum value of 0, maximum value of 1440.
     * 
     */
    public Output<Integer> deploymentDurationInMinutes() {
        return this.deploymentDurationInMinutes;
    }

    /**
     * Description of the deployment strategy. Can be at most 1024 characters.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the deployment strategy. Can be at most 1024 characters.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Amount of time AWS AppConfig monitors for alarms before considering the deployment to be complete and no longer eligible for automatic roll back. Minimum value of 0, maximum value of 1440.
     * 
     */
    @Import(name="finalBakeTimeInMinutes")
    private @Nullable Output<Integer> finalBakeTimeInMinutes;

    /**
     * @return Amount of time AWS AppConfig monitors for alarms before considering the deployment to be complete and no longer eligible for automatic roll back. Minimum value of 0, maximum value of 1440.
     * 
     */
    public Optional<Output<Integer>> finalBakeTimeInMinutes() {
        return Optional.ofNullable(this.finalBakeTimeInMinutes);
    }

    /**
     * Percentage of targets to receive a deployed configuration during each interval. Minimum value of 1.0, maximum value of 100.0.
     * 
     */
    @Import(name="growthFactor", required=true)
    private Output<Double> growthFactor;

    /**
     * @return Percentage of targets to receive a deployed configuration during each interval. Minimum value of 1.0, maximum value of 100.0.
     * 
     */
    public Output<Double> growthFactor() {
        return this.growthFactor;
    }

    /**
     * Algorithm used to define how percentage grows over time. Valid value: `LINEAR` and `EXPONENTIAL`. Defaults to `LINEAR`.
     * 
     */
    @Import(name="growthType")
    private @Nullable Output<String> growthType;

    /**
     * @return Algorithm used to define how percentage grows over time. Valid value: `LINEAR` and `EXPONENTIAL`. Defaults to `LINEAR`.
     * 
     */
    public Optional<Output<String>> growthType() {
        return Optional.ofNullable(this.growthType);
    }

    /**
     * Name for the deployment strategy. Must be between 1 and 64 characters in length.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name for the deployment strategy. Must be between 1 and 64 characters in length.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Where to save the deployment strategy. Valid values: `NONE` and `SSM_DOCUMENT`.
     * 
     */
    @Import(name="replicateTo", required=true)
    private Output<String> replicateTo;

    /**
     * @return Where to save the deployment strategy. Valid values: `NONE` and `SSM_DOCUMENT`.
     * 
     */
    public Output<String> replicateTo() {
        return this.replicateTo;
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private DeploymentStrategyArgs() {}

    private DeploymentStrategyArgs(DeploymentStrategyArgs $) {
        this.deploymentDurationInMinutes = $.deploymentDurationInMinutes;
        this.description = $.description;
        this.finalBakeTimeInMinutes = $.finalBakeTimeInMinutes;
        this.growthFactor = $.growthFactor;
        this.growthType = $.growthType;
        this.name = $.name;
        this.replicateTo = $.replicateTo;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentStrategyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentStrategyArgs $;

        public Builder() {
            $ = new DeploymentStrategyArgs();
        }

        public Builder(DeploymentStrategyArgs defaults) {
            $ = new DeploymentStrategyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deploymentDurationInMinutes Total amount of time for a deployment to last. Minimum value of 0, maximum value of 1440.
         * 
         * @return builder
         * 
         */
        public Builder deploymentDurationInMinutes(Output<Integer> deploymentDurationInMinutes) {
            $.deploymentDurationInMinutes = deploymentDurationInMinutes;
            return this;
        }

        /**
         * @param deploymentDurationInMinutes Total amount of time for a deployment to last. Minimum value of 0, maximum value of 1440.
         * 
         * @return builder
         * 
         */
        public Builder deploymentDurationInMinutes(Integer deploymentDurationInMinutes) {
            return deploymentDurationInMinutes(Output.of(deploymentDurationInMinutes));
        }

        /**
         * @param description Description of the deployment strategy. Can be at most 1024 characters.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the deployment strategy. Can be at most 1024 characters.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param finalBakeTimeInMinutes Amount of time AWS AppConfig monitors for alarms before considering the deployment to be complete and no longer eligible for automatic roll back. Minimum value of 0, maximum value of 1440.
         * 
         * @return builder
         * 
         */
        public Builder finalBakeTimeInMinutes(@Nullable Output<Integer> finalBakeTimeInMinutes) {
            $.finalBakeTimeInMinutes = finalBakeTimeInMinutes;
            return this;
        }

        /**
         * @param finalBakeTimeInMinutes Amount of time AWS AppConfig monitors for alarms before considering the deployment to be complete and no longer eligible for automatic roll back. Minimum value of 0, maximum value of 1440.
         * 
         * @return builder
         * 
         */
        public Builder finalBakeTimeInMinutes(Integer finalBakeTimeInMinutes) {
            return finalBakeTimeInMinutes(Output.of(finalBakeTimeInMinutes));
        }

        /**
         * @param growthFactor Percentage of targets to receive a deployed configuration during each interval. Minimum value of 1.0, maximum value of 100.0.
         * 
         * @return builder
         * 
         */
        public Builder growthFactor(Output<Double> growthFactor) {
            $.growthFactor = growthFactor;
            return this;
        }

        /**
         * @param growthFactor Percentage of targets to receive a deployed configuration during each interval. Minimum value of 1.0, maximum value of 100.0.
         * 
         * @return builder
         * 
         */
        public Builder growthFactor(Double growthFactor) {
            return growthFactor(Output.of(growthFactor));
        }

        /**
         * @param growthType Algorithm used to define how percentage grows over time. Valid value: `LINEAR` and `EXPONENTIAL`. Defaults to `LINEAR`.
         * 
         * @return builder
         * 
         */
        public Builder growthType(@Nullable Output<String> growthType) {
            $.growthType = growthType;
            return this;
        }

        /**
         * @param growthType Algorithm used to define how percentage grows over time. Valid value: `LINEAR` and `EXPONENTIAL`. Defaults to `LINEAR`.
         * 
         * @return builder
         * 
         */
        public Builder growthType(String growthType) {
            return growthType(Output.of(growthType));
        }

        /**
         * @param name Name for the deployment strategy. Must be between 1 and 64 characters in length.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name for the deployment strategy. Must be between 1 and 64 characters in length.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param replicateTo Where to save the deployment strategy. Valid values: `NONE` and `SSM_DOCUMENT`.
         * 
         * @return builder
         * 
         */
        public Builder replicateTo(Output<String> replicateTo) {
            $.replicateTo = replicateTo;
            return this;
        }

        /**
         * @param replicateTo Where to save the deployment strategy. Valid values: `NONE` and `SSM_DOCUMENT`.
         * 
         * @return builder
         * 
         */
        public Builder replicateTo(String replicateTo) {
            return replicateTo(Output.of(replicateTo));
        }

        /**
         * @param tags Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public DeploymentStrategyArgs build() {
            $.deploymentDurationInMinutes = Objects.requireNonNull($.deploymentDurationInMinutes, "expected parameter 'deploymentDurationInMinutes' to be non-null");
            $.growthFactor = Objects.requireNonNull($.growthFactor, "expected parameter 'growthFactor' to be non-null");
            $.replicateTo = Objects.requireNonNull($.replicateTo, "expected parameter 'replicateTo' to be non-null");
            return $;
        }
    }

}
