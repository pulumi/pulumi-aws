// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3control.inputs;

import com.pulumi.aws.s3control.inputs.BucketLifecycleConfigurationRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketLifecycleConfigurationState extends com.pulumi.resources.ResourceArgs {

    public static final BucketLifecycleConfigurationState Empty = new BucketLifecycleConfigurationState();

    /**
     * Amazon Resource Name (ARN) of the bucket.
     * 
     */
    @Import(name="bucket")
    private @Nullable Output<String> bucket;

    /**
     * @return Amazon Resource Name (ARN) of the bucket.
     * 
     */
    public Optional<Output<String>> bucket() {
        return Optional.ofNullable(this.bucket);
    }

    /**
     * The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Configuration block(s) containing lifecycle rules for the bucket.
     * 
     */
    @Import(name="rules")
    private @Nullable Output<List<BucketLifecycleConfigurationRuleArgs>> rules;

    /**
     * @return Configuration block(s) containing lifecycle rules for the bucket.
     * 
     */
    public Optional<Output<List<BucketLifecycleConfigurationRuleArgs>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    private BucketLifecycleConfigurationState() {}

    private BucketLifecycleConfigurationState(BucketLifecycleConfigurationState $) {
        this.bucket = $.bucket;
        this.region = $.region;
        this.rules = $.rules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketLifecycleConfigurationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketLifecycleConfigurationState $;

        public Builder() {
            $ = new BucketLifecycleConfigurationState();
        }

        public Builder(BucketLifecycleConfigurationState defaults) {
            $ = new BucketLifecycleConfigurationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucket Amazon Resource Name (ARN) of the bucket.
         * 
         * @return builder
         * 
         */
        public Builder bucket(@Nullable Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param bucket Amazon Resource Name (ARN) of the bucket.
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        /**
         * @param region The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param rules Configuration block(s) containing lifecycle rules for the bucket.
         * 
         * @return builder
         * 
         */
        public Builder rules(@Nullable Output<List<BucketLifecycleConfigurationRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules Configuration block(s) containing lifecycle rules for the bucket.
         * 
         * @return builder
         * 
         */
        public Builder rules(List<BucketLifecycleConfigurationRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules Configuration block(s) containing lifecycle rules for the bucket.
         * 
         * @return builder
         * 
         */
        public Builder rules(BucketLifecycleConfigurationRuleArgs... rules) {
            return rules(List.of(rules));
        }

        public BucketLifecycleConfigurationState build() {
            return $;
        }
    }

}
