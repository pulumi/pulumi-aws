// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.fsx.inputs;

import com.pulumi.aws.fsx.inputs.OntapVolumeSnaplockConfigurationAutocommitPeriodArgs;
import com.pulumi.aws.fsx.inputs.OntapVolumeSnaplockConfigurationRetentionPeriodArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OntapVolumeSnaplockConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final OntapVolumeSnaplockConfigurationArgs Empty = new OntapVolumeSnaplockConfigurationArgs();

    /**
     * Enables or disables the audit log volume for an FSx for ONTAP SnapLock volume. The default value is `false`.
     * 
     */
    @Import(name="auditLogVolume")
    private @Nullable Output<Boolean> auditLogVolume;

    /**
     * @return Enables or disables the audit log volume for an FSx for ONTAP SnapLock volume. The default value is `false`.
     * 
     */
    public Optional<Output<Boolean>> auditLogVolume() {
        return Optional.ofNullable(this.auditLogVolume);
    }

    /**
     * The configuration object for setting the autocommit period of files in an FSx for ONTAP SnapLock volume. See Autocommit Period below.
     * 
     */
    @Import(name="autocommitPeriod")
    private @Nullable Output<OntapVolumeSnaplockConfigurationAutocommitPeriodArgs> autocommitPeriod;

    /**
     * @return The configuration object for setting the autocommit period of files in an FSx for ONTAP SnapLock volume. See Autocommit Period below.
     * 
     */
    public Optional<Output<OntapVolumeSnaplockConfigurationAutocommitPeriodArgs>> autocommitPeriod() {
        return Optional.ofNullable(this.autocommitPeriod);
    }

    /**
     * Enables, disables, or permanently disables privileged delete on an FSx for ONTAP SnapLock Enterprise volume. Valid values: `DISABLED`, `ENABLED`, `PERMANENTLY_DISABLED`. The default value is `DISABLED`.
     * 
     */
    @Import(name="privilegedDelete")
    private @Nullable Output<String> privilegedDelete;

    /**
     * @return Enables, disables, or permanently disables privileged delete on an FSx for ONTAP SnapLock Enterprise volume. Valid values: `DISABLED`, `ENABLED`, `PERMANENTLY_DISABLED`. The default value is `DISABLED`.
     * 
     */
    public Optional<Output<String>> privilegedDelete() {
        return Optional.ofNullable(this.privilegedDelete);
    }

    /**
     * The retention period of an FSx for ONTAP SnapLock volume. See SnapLock Retention Period below.
     * 
     */
    @Import(name="retentionPeriod")
    private @Nullable Output<OntapVolumeSnaplockConfigurationRetentionPeriodArgs> retentionPeriod;

    /**
     * @return The retention period of an FSx for ONTAP SnapLock volume. See SnapLock Retention Period below.
     * 
     */
    public Optional<Output<OntapVolumeSnaplockConfigurationRetentionPeriodArgs>> retentionPeriod() {
        return Optional.ofNullable(this.retentionPeriod);
    }

    /**
     * Specifies the retention mode of an FSx for ONTAP SnapLock volume. After it is set, it can&#39;t be changed. Valid values: `COMPLIANCE`, `ENTERPRISE`.
     * 
     */
    @Import(name="snaplockType", required=true)
    private Output<String> snaplockType;

    /**
     * @return Specifies the retention mode of an FSx for ONTAP SnapLock volume. After it is set, it can&#39;t be changed. Valid values: `COMPLIANCE`, `ENTERPRISE`.
     * 
     */
    public Output<String> snaplockType() {
        return this.snaplockType;
    }

    /**
     * Enables or disables volume-append mode on an FSx for ONTAP SnapLock volume. The default value is `false`.
     * 
     */
    @Import(name="volumeAppendModeEnabled")
    private @Nullable Output<Boolean> volumeAppendModeEnabled;

    /**
     * @return Enables or disables volume-append mode on an FSx for ONTAP SnapLock volume. The default value is `false`.
     * 
     */
    public Optional<Output<Boolean>> volumeAppendModeEnabled() {
        return Optional.ofNullable(this.volumeAppendModeEnabled);
    }

    private OntapVolumeSnaplockConfigurationArgs() {}

    private OntapVolumeSnaplockConfigurationArgs(OntapVolumeSnaplockConfigurationArgs $) {
        this.auditLogVolume = $.auditLogVolume;
        this.autocommitPeriod = $.autocommitPeriod;
        this.privilegedDelete = $.privilegedDelete;
        this.retentionPeriod = $.retentionPeriod;
        this.snaplockType = $.snaplockType;
        this.volumeAppendModeEnabled = $.volumeAppendModeEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OntapVolumeSnaplockConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OntapVolumeSnaplockConfigurationArgs $;

        public Builder() {
            $ = new OntapVolumeSnaplockConfigurationArgs();
        }

        public Builder(OntapVolumeSnaplockConfigurationArgs defaults) {
            $ = new OntapVolumeSnaplockConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param auditLogVolume Enables or disables the audit log volume for an FSx for ONTAP SnapLock volume. The default value is `false`.
         * 
         * @return builder
         * 
         */
        public Builder auditLogVolume(@Nullable Output<Boolean> auditLogVolume) {
            $.auditLogVolume = auditLogVolume;
            return this;
        }

        /**
         * @param auditLogVolume Enables or disables the audit log volume for an FSx for ONTAP SnapLock volume. The default value is `false`.
         * 
         * @return builder
         * 
         */
        public Builder auditLogVolume(Boolean auditLogVolume) {
            return auditLogVolume(Output.of(auditLogVolume));
        }

        /**
         * @param autocommitPeriod The configuration object for setting the autocommit period of files in an FSx for ONTAP SnapLock volume. See Autocommit Period below.
         * 
         * @return builder
         * 
         */
        public Builder autocommitPeriod(@Nullable Output<OntapVolumeSnaplockConfigurationAutocommitPeriodArgs> autocommitPeriod) {
            $.autocommitPeriod = autocommitPeriod;
            return this;
        }

        /**
         * @param autocommitPeriod The configuration object for setting the autocommit period of files in an FSx for ONTAP SnapLock volume. See Autocommit Period below.
         * 
         * @return builder
         * 
         */
        public Builder autocommitPeriod(OntapVolumeSnaplockConfigurationAutocommitPeriodArgs autocommitPeriod) {
            return autocommitPeriod(Output.of(autocommitPeriod));
        }

        /**
         * @param privilegedDelete Enables, disables, or permanently disables privileged delete on an FSx for ONTAP SnapLock Enterprise volume. Valid values: `DISABLED`, `ENABLED`, `PERMANENTLY_DISABLED`. The default value is `DISABLED`.
         * 
         * @return builder
         * 
         */
        public Builder privilegedDelete(@Nullable Output<String> privilegedDelete) {
            $.privilegedDelete = privilegedDelete;
            return this;
        }

        /**
         * @param privilegedDelete Enables, disables, or permanently disables privileged delete on an FSx for ONTAP SnapLock Enterprise volume. Valid values: `DISABLED`, `ENABLED`, `PERMANENTLY_DISABLED`. The default value is `DISABLED`.
         * 
         * @return builder
         * 
         */
        public Builder privilegedDelete(String privilegedDelete) {
            return privilegedDelete(Output.of(privilegedDelete));
        }

        /**
         * @param retentionPeriod The retention period of an FSx for ONTAP SnapLock volume. See SnapLock Retention Period below.
         * 
         * @return builder
         * 
         */
        public Builder retentionPeriod(@Nullable Output<OntapVolumeSnaplockConfigurationRetentionPeriodArgs> retentionPeriod) {
            $.retentionPeriod = retentionPeriod;
            return this;
        }

        /**
         * @param retentionPeriod The retention period of an FSx for ONTAP SnapLock volume. See SnapLock Retention Period below.
         * 
         * @return builder
         * 
         */
        public Builder retentionPeriod(OntapVolumeSnaplockConfigurationRetentionPeriodArgs retentionPeriod) {
            return retentionPeriod(Output.of(retentionPeriod));
        }

        /**
         * @param snaplockType Specifies the retention mode of an FSx for ONTAP SnapLock volume. After it is set, it can&#39;t be changed. Valid values: `COMPLIANCE`, `ENTERPRISE`.
         * 
         * @return builder
         * 
         */
        public Builder snaplockType(Output<String> snaplockType) {
            $.snaplockType = snaplockType;
            return this;
        }

        /**
         * @param snaplockType Specifies the retention mode of an FSx for ONTAP SnapLock volume. After it is set, it can&#39;t be changed. Valid values: `COMPLIANCE`, `ENTERPRISE`.
         * 
         * @return builder
         * 
         */
        public Builder snaplockType(String snaplockType) {
            return snaplockType(Output.of(snaplockType));
        }

        /**
         * @param volumeAppendModeEnabled Enables or disables volume-append mode on an FSx for ONTAP SnapLock volume. The default value is `false`.
         * 
         * @return builder
         * 
         */
        public Builder volumeAppendModeEnabled(@Nullable Output<Boolean> volumeAppendModeEnabled) {
            $.volumeAppendModeEnabled = volumeAppendModeEnabled;
            return this;
        }

        /**
         * @param volumeAppendModeEnabled Enables or disables volume-append mode on an FSx for ONTAP SnapLock volume. The default value is `false`.
         * 
         * @return builder
         * 
         */
        public Builder volumeAppendModeEnabled(Boolean volumeAppendModeEnabled) {
            return volumeAppendModeEnabled(Output.of(volumeAppendModeEnabled));
        }

        public OntapVolumeSnaplockConfigurationArgs build() {
            if ($.snaplockType == null) {
                throw new MissingRequiredPropertyException("OntapVolumeSnaplockConfigurationArgs", "snaplockType");
            }
            return $;
        }
    }

}
