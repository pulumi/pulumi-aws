// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.amplify.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DomainAssociationCertificateSettings {
    /**
     * @return DNS records for certificate verification in a space-delimited format (`&lt;record&gt; CNAME &lt;target&gt;`).
     * 
     */
    private @Nullable String certificateVerificationDnsRecord;
    /**
     * @return The Amazon resource name (ARN) for the custom certificate.
     * 
     */
    private @Nullable String customCertificateArn;
    /**
     * @return The certificate type. Valid values are `AMPLIFY_MANAGED` and `CUSTOM`.
     * 
     */
    private String type;

    private DomainAssociationCertificateSettings() {}
    /**
     * @return DNS records for certificate verification in a space-delimited format (`&lt;record&gt; CNAME &lt;target&gt;`).
     * 
     */
    public Optional<String> certificateVerificationDnsRecord() {
        return Optional.ofNullable(this.certificateVerificationDnsRecord);
    }
    /**
     * @return The Amazon resource name (ARN) for the custom certificate.
     * 
     */
    public Optional<String> customCertificateArn() {
        return Optional.ofNullable(this.customCertificateArn);
    }
    /**
     * @return The certificate type. Valid values are `AMPLIFY_MANAGED` and `CUSTOM`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainAssociationCertificateSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String certificateVerificationDnsRecord;
        private @Nullable String customCertificateArn;
        private String type;
        public Builder() {}
        public Builder(DomainAssociationCertificateSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateVerificationDnsRecord = defaults.certificateVerificationDnsRecord;
    	      this.customCertificateArn = defaults.customCertificateArn;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder certificateVerificationDnsRecord(@Nullable String certificateVerificationDnsRecord) {

            this.certificateVerificationDnsRecord = certificateVerificationDnsRecord;
            return this;
        }
        @CustomType.Setter
        public Builder customCertificateArn(@Nullable String customCertificateArn) {

            this.customCertificateArn = customCertificateArn;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("DomainAssociationCertificateSettings", "type");
            }
            this.type = type;
            return this;
        }
        public DomainAssociationCertificateSettings build() {
            final var _resultValue = new DomainAssociationCertificateSettings();
            _resultValue.certificateVerificationDnsRecord = certificateVerificationDnsRecord;
            _resultValue.customCertificateArn = customCertificateArn;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
