// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.medialive.inputs;

import com.pulumi.aws.medialive.inputs.ChannelDestinationMediaPackageSettingArgs;
import com.pulumi.aws.medialive.inputs.ChannelDestinationMultiplexSettingsArgs;
import com.pulumi.aws.medialive.inputs.ChannelDestinationSettingArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ChannelDestinationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ChannelDestinationArgs Empty = new ChannelDestinationArgs();

    @Import(name="id", required=true)
    private Output<String> id;

    public Output<String> id() {
        return this.id;
    }

    @Import(name="mediaPackageSettings")
    private @Nullable Output<List<ChannelDestinationMediaPackageSettingArgs>> mediaPackageSettings;

    public Optional<Output<List<ChannelDestinationMediaPackageSettingArgs>>> mediaPackageSettings() {
        return Optional.ofNullable(this.mediaPackageSettings);
    }

    @Import(name="multiplexSettings")
    private @Nullable Output<ChannelDestinationMultiplexSettingsArgs> multiplexSettings;

    public Optional<Output<ChannelDestinationMultiplexSettingsArgs>> multiplexSettings() {
        return Optional.ofNullable(this.multiplexSettings);
    }

    @Import(name="settings")
    private @Nullable Output<List<ChannelDestinationSettingArgs>> settings;

    public Optional<Output<List<ChannelDestinationSettingArgs>>> settings() {
        return Optional.ofNullable(this.settings);
    }

    private ChannelDestinationArgs() {}

    private ChannelDestinationArgs(ChannelDestinationArgs $) {
        this.id = $.id;
        this.mediaPackageSettings = $.mediaPackageSettings;
        this.multiplexSettings = $.multiplexSettings;
        this.settings = $.settings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ChannelDestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ChannelDestinationArgs $;

        public Builder() {
            $ = new ChannelDestinationArgs();
        }

        public Builder(ChannelDestinationArgs defaults) {
            $ = new ChannelDestinationArgs(Objects.requireNonNull(defaults));
        }

        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder mediaPackageSettings(@Nullable Output<List<ChannelDestinationMediaPackageSettingArgs>> mediaPackageSettings) {
            $.mediaPackageSettings = mediaPackageSettings;
            return this;
        }

        public Builder mediaPackageSettings(List<ChannelDestinationMediaPackageSettingArgs> mediaPackageSettings) {
            return mediaPackageSettings(Output.of(mediaPackageSettings));
        }

        public Builder mediaPackageSettings(ChannelDestinationMediaPackageSettingArgs... mediaPackageSettings) {
            return mediaPackageSettings(List.of(mediaPackageSettings));
        }

        public Builder multiplexSettings(@Nullable Output<ChannelDestinationMultiplexSettingsArgs> multiplexSettings) {
            $.multiplexSettings = multiplexSettings;
            return this;
        }

        public Builder multiplexSettings(ChannelDestinationMultiplexSettingsArgs multiplexSettings) {
            return multiplexSettings(Output.of(multiplexSettings));
        }

        public Builder settings(@Nullable Output<List<ChannelDestinationSettingArgs>> settings) {
            $.settings = settings;
            return this;
        }

        public Builder settings(List<ChannelDestinationSettingArgs> settings) {
            return settings(Output.of(settings));
        }

        public Builder settings(ChannelDestinationSettingArgs... settings) {
            return settings(List.of(settings));
        }

        public ChannelDestinationArgs build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            return $;
        }
    }

}
