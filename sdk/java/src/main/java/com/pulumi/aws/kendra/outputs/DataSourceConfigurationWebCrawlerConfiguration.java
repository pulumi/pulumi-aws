// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kendra.outputs;

import com.pulumi.aws.kendra.outputs.DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfiguration;
import com.pulumi.aws.kendra.outputs.DataSourceConfigurationWebCrawlerConfigurationProxyConfiguration;
import com.pulumi.aws.kendra.outputs.DataSourceConfigurationWebCrawlerConfigurationUrls;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DataSourceConfigurationWebCrawlerConfiguration {
    private @Nullable DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfiguration authenticationConfiguration;
    private @Nullable Integer crawlDepth;
    private @Nullable Double maxContentSizePerPageInMegaBytes;
    private @Nullable Integer maxLinksPerPage;
    private @Nullable Integer maxUrlsPerMinuteCrawlRate;
    private @Nullable DataSourceConfigurationWebCrawlerConfigurationProxyConfiguration proxyConfiguration;
    private @Nullable List<String> urlExclusionPatterns;
    private @Nullable List<String> urlInclusionPatterns;
    private DataSourceConfigurationWebCrawlerConfigurationUrls urls;

    private DataSourceConfigurationWebCrawlerConfiguration() {}
    public Optional<DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfiguration> authenticationConfiguration() {
        return Optional.ofNullable(this.authenticationConfiguration);
    }
    public Optional<Integer> crawlDepth() {
        return Optional.ofNullable(this.crawlDepth);
    }
    public Optional<Double> maxContentSizePerPageInMegaBytes() {
        return Optional.ofNullable(this.maxContentSizePerPageInMegaBytes);
    }
    public Optional<Integer> maxLinksPerPage() {
        return Optional.ofNullable(this.maxLinksPerPage);
    }
    public Optional<Integer> maxUrlsPerMinuteCrawlRate() {
        return Optional.ofNullable(this.maxUrlsPerMinuteCrawlRate);
    }
    public Optional<DataSourceConfigurationWebCrawlerConfigurationProxyConfiguration> proxyConfiguration() {
        return Optional.ofNullable(this.proxyConfiguration);
    }
    public List<String> urlExclusionPatterns() {
        return this.urlExclusionPatterns == null ? List.of() : this.urlExclusionPatterns;
    }
    public List<String> urlInclusionPatterns() {
        return this.urlInclusionPatterns == null ? List.of() : this.urlInclusionPatterns;
    }
    public DataSourceConfigurationWebCrawlerConfigurationUrls urls() {
        return this.urls;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataSourceConfigurationWebCrawlerConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfiguration authenticationConfiguration;
        private @Nullable Integer crawlDepth;
        private @Nullable Double maxContentSizePerPageInMegaBytes;
        private @Nullable Integer maxLinksPerPage;
        private @Nullable Integer maxUrlsPerMinuteCrawlRate;
        private @Nullable DataSourceConfigurationWebCrawlerConfigurationProxyConfiguration proxyConfiguration;
        private @Nullable List<String> urlExclusionPatterns;
        private @Nullable List<String> urlInclusionPatterns;
        private DataSourceConfigurationWebCrawlerConfigurationUrls urls;
        public Builder() {}
        public Builder(DataSourceConfigurationWebCrawlerConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authenticationConfiguration = defaults.authenticationConfiguration;
    	      this.crawlDepth = defaults.crawlDepth;
    	      this.maxContentSizePerPageInMegaBytes = defaults.maxContentSizePerPageInMegaBytes;
    	      this.maxLinksPerPage = defaults.maxLinksPerPage;
    	      this.maxUrlsPerMinuteCrawlRate = defaults.maxUrlsPerMinuteCrawlRate;
    	      this.proxyConfiguration = defaults.proxyConfiguration;
    	      this.urlExclusionPatterns = defaults.urlExclusionPatterns;
    	      this.urlInclusionPatterns = defaults.urlInclusionPatterns;
    	      this.urls = defaults.urls;
        }

        @CustomType.Setter
        public Builder authenticationConfiguration(@Nullable DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfiguration authenticationConfiguration) {
            this.authenticationConfiguration = authenticationConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder crawlDepth(@Nullable Integer crawlDepth) {
            this.crawlDepth = crawlDepth;
            return this;
        }
        @CustomType.Setter
        public Builder maxContentSizePerPageInMegaBytes(@Nullable Double maxContentSizePerPageInMegaBytes) {
            this.maxContentSizePerPageInMegaBytes = maxContentSizePerPageInMegaBytes;
            return this;
        }
        @CustomType.Setter
        public Builder maxLinksPerPage(@Nullable Integer maxLinksPerPage) {
            this.maxLinksPerPage = maxLinksPerPage;
            return this;
        }
        @CustomType.Setter
        public Builder maxUrlsPerMinuteCrawlRate(@Nullable Integer maxUrlsPerMinuteCrawlRate) {
            this.maxUrlsPerMinuteCrawlRate = maxUrlsPerMinuteCrawlRate;
            return this;
        }
        @CustomType.Setter
        public Builder proxyConfiguration(@Nullable DataSourceConfigurationWebCrawlerConfigurationProxyConfiguration proxyConfiguration) {
            this.proxyConfiguration = proxyConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder urlExclusionPatterns(@Nullable List<String> urlExclusionPatterns) {
            this.urlExclusionPatterns = urlExclusionPatterns;
            return this;
        }
        public Builder urlExclusionPatterns(String... urlExclusionPatterns) {
            return urlExclusionPatterns(List.of(urlExclusionPatterns));
        }
        @CustomType.Setter
        public Builder urlInclusionPatterns(@Nullable List<String> urlInclusionPatterns) {
            this.urlInclusionPatterns = urlInclusionPatterns;
            return this;
        }
        public Builder urlInclusionPatterns(String... urlInclusionPatterns) {
            return urlInclusionPatterns(List.of(urlInclusionPatterns));
        }
        @CustomType.Setter
        public Builder urls(DataSourceConfigurationWebCrawlerConfigurationUrls urls) {
            this.urls = Objects.requireNonNull(urls);
            return this;
        }
        public DataSourceConfigurationWebCrawlerConfiguration build() {
            final var o = new DataSourceConfigurationWebCrawlerConfiguration();
            o.authenticationConfiguration = authenticationConfiguration;
            o.crawlDepth = crawlDepth;
            o.maxContentSizePerPageInMegaBytes = maxContentSizePerPageInMegaBytes;
            o.maxLinksPerPage = maxLinksPerPage;
            o.maxUrlsPerMinuteCrawlRate = maxUrlsPerMinuteCrawlRate;
            o.proxyConfiguration = proxyConfiguration;
            o.urlExclusionPatterns = urlExclusionPatterns;
            o.urlInclusionPatterns = urlInclusionPatterns;
            o.urls = urls;
            return o;
        }
    }
}
