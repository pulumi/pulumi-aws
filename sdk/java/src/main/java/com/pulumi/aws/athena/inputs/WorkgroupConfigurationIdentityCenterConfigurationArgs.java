// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.athena.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkgroupConfigurationIdentityCenterConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkgroupConfigurationIdentityCenterConfigurationArgs Empty = new WorkgroupConfigurationIdentityCenterConfigurationArgs();

    /**
     * Specifies whether the workgroup is IAM Identity Center supported.
     * 
     */
    @Import(name="enableIdentityCenter")
    private @Nullable Output<Boolean> enableIdentityCenter;

    /**
     * @return Specifies whether the workgroup is IAM Identity Center supported.
     * 
     */
    public Optional<Output<Boolean>> enableIdentityCenter() {
        return Optional.ofNullable(this.enableIdentityCenter);
    }

    /**
     * The IAM Identity Center instance ARN that the workgroup associates to.
     * 
     */
    @Import(name="identityCenterInstanceArn")
    private @Nullable Output<String> identityCenterInstanceArn;

    /**
     * @return The IAM Identity Center instance ARN that the workgroup associates to.
     * 
     */
    public Optional<Output<String>> identityCenterInstanceArn() {
        return Optional.ofNullable(this.identityCenterInstanceArn);
    }

    private WorkgroupConfigurationIdentityCenterConfigurationArgs() {}

    private WorkgroupConfigurationIdentityCenterConfigurationArgs(WorkgroupConfigurationIdentityCenterConfigurationArgs $) {
        this.enableIdentityCenter = $.enableIdentityCenter;
        this.identityCenterInstanceArn = $.identityCenterInstanceArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkgroupConfigurationIdentityCenterConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkgroupConfigurationIdentityCenterConfigurationArgs $;

        public Builder() {
            $ = new WorkgroupConfigurationIdentityCenterConfigurationArgs();
        }

        public Builder(WorkgroupConfigurationIdentityCenterConfigurationArgs defaults) {
            $ = new WorkgroupConfigurationIdentityCenterConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enableIdentityCenter Specifies whether the workgroup is IAM Identity Center supported.
         * 
         * @return builder
         * 
         */
        public Builder enableIdentityCenter(@Nullable Output<Boolean> enableIdentityCenter) {
            $.enableIdentityCenter = enableIdentityCenter;
            return this;
        }

        /**
         * @param enableIdentityCenter Specifies whether the workgroup is IAM Identity Center supported.
         * 
         * @return builder
         * 
         */
        public Builder enableIdentityCenter(Boolean enableIdentityCenter) {
            return enableIdentityCenter(Output.of(enableIdentityCenter));
        }

        /**
         * @param identityCenterInstanceArn The IAM Identity Center instance ARN that the workgroup associates to.
         * 
         * @return builder
         * 
         */
        public Builder identityCenterInstanceArn(@Nullable Output<String> identityCenterInstanceArn) {
            $.identityCenterInstanceArn = identityCenterInstanceArn;
            return this;
        }

        /**
         * @param identityCenterInstanceArn The IAM Identity Center instance ARN that the workgroup associates to.
         * 
         * @return builder
         * 
         */
        public Builder identityCenterInstanceArn(String identityCenterInstanceArn) {
            return identityCenterInstanceArn(Output.of(identityCenterInstanceArn));
        }

        public WorkgroupConfigurationIdentityCenterConfigurationArgs build() {
            return $;
        }
    }

}
