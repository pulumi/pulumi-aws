// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.evidently.inputs;

import com.pulumi.aws.evidently.inputs.FeatureEvaluationRuleArgs;
import com.pulumi.aws.evidently.inputs.FeatureVariationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FeatureState extends com.pulumi.resources.ResourceArgs {

    public static final FeatureState Empty = new FeatureState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="createdTime")
    private @Nullable Output<String> createdTime;

    public Optional<Output<String>> createdTime() {
        return Optional.ofNullable(this.createdTime);
    }

    @Import(name="defaultVariation")
    private @Nullable Output<String> defaultVariation;

    public Optional<Output<String>> defaultVariation() {
        return Optional.ofNullable(this.defaultVariation);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="entityOverrides")
    private @Nullable Output<Map<String,String>> entityOverrides;

    public Optional<Output<Map<String,String>>> entityOverrides() {
        return Optional.ofNullable(this.entityOverrides);
    }

    @Import(name="evaluationRules")
    private @Nullable Output<List<FeatureEvaluationRuleArgs>> evaluationRules;

    public Optional<Output<List<FeatureEvaluationRuleArgs>>> evaluationRules() {
        return Optional.ofNullable(this.evaluationRules);
    }

    @Import(name="evaluationStrategy")
    private @Nullable Output<String> evaluationStrategy;

    public Optional<Output<String>> evaluationStrategy() {
        return Optional.ofNullable(this.evaluationStrategy);
    }

    @Import(name="lastUpdatedTime")
    private @Nullable Output<String> lastUpdatedTime;

    public Optional<Output<String>> lastUpdatedTime() {
        return Optional.ofNullable(this.lastUpdatedTime);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    @Import(name="status")
    private @Nullable Output<String> status;

    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="valueType")
    private @Nullable Output<String> valueType;

    public Optional<Output<String>> valueType() {
        return Optional.ofNullable(this.valueType);
    }

    @Import(name="variations")
    private @Nullable Output<List<FeatureVariationArgs>> variations;

    public Optional<Output<List<FeatureVariationArgs>>> variations() {
        return Optional.ofNullable(this.variations);
    }

    private FeatureState() {}

    private FeatureState(FeatureState $) {
        this.arn = $.arn;
        this.createdTime = $.createdTime;
        this.defaultVariation = $.defaultVariation;
        this.description = $.description;
        this.entityOverrides = $.entityOverrides;
        this.evaluationRules = $.evaluationRules;
        this.evaluationStrategy = $.evaluationStrategy;
        this.lastUpdatedTime = $.lastUpdatedTime;
        this.name = $.name;
        this.project = $.project;
        this.status = $.status;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.valueType = $.valueType;
        this.variations = $.variations;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FeatureState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FeatureState $;

        public Builder() {
            $ = new FeatureState();
        }

        public Builder(FeatureState defaults) {
            $ = new FeatureState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder createdTime(@Nullable Output<String> createdTime) {
            $.createdTime = createdTime;
            return this;
        }

        public Builder createdTime(String createdTime) {
            return createdTime(Output.of(createdTime));
        }

        public Builder defaultVariation(@Nullable Output<String> defaultVariation) {
            $.defaultVariation = defaultVariation;
            return this;
        }

        public Builder defaultVariation(String defaultVariation) {
            return defaultVariation(Output.of(defaultVariation));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder entityOverrides(@Nullable Output<Map<String,String>> entityOverrides) {
            $.entityOverrides = entityOverrides;
            return this;
        }

        public Builder entityOverrides(Map<String,String> entityOverrides) {
            return entityOverrides(Output.of(entityOverrides));
        }

        public Builder evaluationRules(@Nullable Output<List<FeatureEvaluationRuleArgs>> evaluationRules) {
            $.evaluationRules = evaluationRules;
            return this;
        }

        public Builder evaluationRules(List<FeatureEvaluationRuleArgs> evaluationRules) {
            return evaluationRules(Output.of(evaluationRules));
        }

        public Builder evaluationRules(FeatureEvaluationRuleArgs... evaluationRules) {
            return evaluationRules(List.of(evaluationRules));
        }

        public Builder evaluationStrategy(@Nullable Output<String> evaluationStrategy) {
            $.evaluationStrategy = evaluationStrategy;
            return this;
        }

        public Builder evaluationStrategy(String evaluationStrategy) {
            return evaluationStrategy(Output.of(evaluationStrategy));
        }

        public Builder lastUpdatedTime(@Nullable Output<String> lastUpdatedTime) {
            $.lastUpdatedTime = lastUpdatedTime;
            return this;
        }

        public Builder lastUpdatedTime(String lastUpdatedTime) {
            return lastUpdatedTime(Output.of(lastUpdatedTime));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        public Builder status(String status) {
            return status(Output.of(status));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder valueType(@Nullable Output<String> valueType) {
            $.valueType = valueType;
            return this;
        }

        public Builder valueType(String valueType) {
            return valueType(Output.of(valueType));
        }

        public Builder variations(@Nullable Output<List<FeatureVariationArgs>> variations) {
            $.variations = variations;
            return this;
        }

        public Builder variations(List<FeatureVariationArgs> variations) {
            return variations(Output.of(variations));
        }

        public Builder variations(FeatureVariationArgs... variations) {
            return variations(List.of(variations));
        }

        public FeatureState build() {
            return $;
        }
    }

}
