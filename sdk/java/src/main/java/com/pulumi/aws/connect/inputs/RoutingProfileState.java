// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.connect.inputs;

import com.pulumi.aws.connect.inputs.RoutingProfileMediaConcurrencyArgs;
import com.pulumi.aws.connect.inputs.RoutingProfileQueueConfigArgs;
import com.pulumi.aws.connect.inputs.RoutingProfileQueueConfigsAssociatedArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RoutingProfileState extends com.pulumi.resources.ResourceArgs {

    public static final RoutingProfileState Empty = new RoutingProfileState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="defaultOutboundQueueId")
    private @Nullable Output<String> defaultOutboundQueueId;

    public Optional<Output<String>> defaultOutboundQueueId() {
        return Optional.ofNullable(this.defaultOutboundQueueId);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="instanceId")
    private @Nullable Output<String> instanceId;

    public Optional<Output<String>> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }

    @Import(name="mediaConcurrencies")
    private @Nullable Output<List<RoutingProfileMediaConcurrencyArgs>> mediaConcurrencies;

    public Optional<Output<List<RoutingProfileMediaConcurrencyArgs>>> mediaConcurrencies() {
        return Optional.ofNullable(this.mediaConcurrencies);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="queueConfigs")
    private @Nullable Output<List<RoutingProfileQueueConfigArgs>> queueConfigs;

    public Optional<Output<List<RoutingProfileQueueConfigArgs>>> queueConfigs() {
        return Optional.ofNullable(this.queueConfigs);
    }

    @Import(name="queueConfigsAssociateds")
    private @Nullable Output<List<RoutingProfileQueueConfigsAssociatedArgs>> queueConfigsAssociateds;

    public Optional<Output<List<RoutingProfileQueueConfigsAssociatedArgs>>> queueConfigsAssociateds() {
        return Optional.ofNullable(this.queueConfigsAssociateds);
    }

    @Import(name="routingProfileId")
    private @Nullable Output<String> routingProfileId;

    public Optional<Output<String>> routingProfileId() {
        return Optional.ofNullable(this.routingProfileId);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private RoutingProfileState() {}

    private RoutingProfileState(RoutingProfileState $) {
        this.arn = $.arn;
        this.defaultOutboundQueueId = $.defaultOutboundQueueId;
        this.description = $.description;
        this.instanceId = $.instanceId;
        this.mediaConcurrencies = $.mediaConcurrencies;
        this.name = $.name;
        this.queueConfigs = $.queueConfigs;
        this.queueConfigsAssociateds = $.queueConfigsAssociateds;
        this.routingProfileId = $.routingProfileId;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RoutingProfileState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RoutingProfileState $;

        public Builder() {
            $ = new RoutingProfileState();
        }

        public Builder(RoutingProfileState defaults) {
            $ = new RoutingProfileState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder defaultOutboundQueueId(@Nullable Output<String> defaultOutboundQueueId) {
            $.defaultOutboundQueueId = defaultOutboundQueueId;
            return this;
        }

        public Builder defaultOutboundQueueId(String defaultOutboundQueueId) {
            return defaultOutboundQueueId(Output.of(defaultOutboundQueueId));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder instanceId(@Nullable Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        public Builder mediaConcurrencies(@Nullable Output<List<RoutingProfileMediaConcurrencyArgs>> mediaConcurrencies) {
            $.mediaConcurrencies = mediaConcurrencies;
            return this;
        }

        public Builder mediaConcurrencies(List<RoutingProfileMediaConcurrencyArgs> mediaConcurrencies) {
            return mediaConcurrencies(Output.of(mediaConcurrencies));
        }

        public Builder mediaConcurrencies(RoutingProfileMediaConcurrencyArgs... mediaConcurrencies) {
            return mediaConcurrencies(List.of(mediaConcurrencies));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder queueConfigs(@Nullable Output<List<RoutingProfileQueueConfigArgs>> queueConfigs) {
            $.queueConfigs = queueConfigs;
            return this;
        }

        public Builder queueConfigs(List<RoutingProfileQueueConfigArgs> queueConfigs) {
            return queueConfigs(Output.of(queueConfigs));
        }

        public Builder queueConfigs(RoutingProfileQueueConfigArgs... queueConfigs) {
            return queueConfigs(List.of(queueConfigs));
        }

        public Builder queueConfigsAssociateds(@Nullable Output<List<RoutingProfileQueueConfigsAssociatedArgs>> queueConfigsAssociateds) {
            $.queueConfigsAssociateds = queueConfigsAssociateds;
            return this;
        }

        public Builder queueConfigsAssociateds(List<RoutingProfileQueueConfigsAssociatedArgs> queueConfigsAssociateds) {
            return queueConfigsAssociateds(Output.of(queueConfigsAssociateds));
        }

        public Builder queueConfigsAssociateds(RoutingProfileQueueConfigsAssociatedArgs... queueConfigsAssociateds) {
            return queueConfigsAssociateds(List.of(queueConfigsAssociateds));
        }

        public Builder routingProfileId(@Nullable Output<String> routingProfileId) {
            $.routingProfileId = routingProfileId;
            return this;
        }

        public Builder routingProfileId(String routingProfileId) {
            return routingProfileId(Output.of(routingProfileId));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public RoutingProfileState build() {
            return $;
        }
    }

}
