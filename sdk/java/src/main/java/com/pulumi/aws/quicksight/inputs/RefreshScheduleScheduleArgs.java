// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.RefreshScheduleScheduleScheduleFrequencyArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RefreshScheduleScheduleArgs extends com.pulumi.resources.ResourceArgs {

    public static final RefreshScheduleScheduleArgs Empty = new RefreshScheduleScheduleArgs();

    /**
     * The type of refresh that the dataset undergoes. Valid values are `INCREMENTAL_REFRESH` and `FULL_REFRESH`.
     * 
     */
    @Import(name="refreshType", required=true)
    private Output<String> refreshType;

    /**
     * @return The type of refresh that the dataset undergoes. Valid values are `INCREMENTAL_REFRESH` and `FULL_REFRESH`.
     * 
     */
    public Output<String> refreshType() {
        return this.refreshType;
    }

    /**
     * The configuration of the [schedule frequency](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_RefreshFrequency.html). See schedule_frequency.
     * 
     */
    @Import(name="scheduleFrequency")
    private @Nullable Output<RefreshScheduleScheduleScheduleFrequencyArgs> scheduleFrequency;

    /**
     * @return The configuration of the [schedule frequency](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_RefreshFrequency.html). See schedule_frequency.
     * 
     */
    public Optional<Output<RefreshScheduleScheduleScheduleFrequencyArgs>> scheduleFrequency() {
        return Optional.ofNullable(this.scheduleFrequency);
    }

    /**
     * Time after which the refresh schedule can be started, expressed in `YYYY-MM-DDTHH:MM:SS` format.
     * 
     */
    @Import(name="startAfterDateTime")
    private @Nullable Output<String> startAfterDateTime;

    /**
     * @return Time after which the refresh schedule can be started, expressed in `YYYY-MM-DDTHH:MM:SS` format.
     * 
     */
    public Optional<Output<String>> startAfterDateTime() {
        return Optional.ofNullable(this.startAfterDateTime);
    }

    private RefreshScheduleScheduleArgs() {}

    private RefreshScheduleScheduleArgs(RefreshScheduleScheduleArgs $) {
        this.refreshType = $.refreshType;
        this.scheduleFrequency = $.scheduleFrequency;
        this.startAfterDateTime = $.startAfterDateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RefreshScheduleScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RefreshScheduleScheduleArgs $;

        public Builder() {
            $ = new RefreshScheduleScheduleArgs();
        }

        public Builder(RefreshScheduleScheduleArgs defaults) {
            $ = new RefreshScheduleScheduleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param refreshType The type of refresh that the dataset undergoes. Valid values are `INCREMENTAL_REFRESH` and `FULL_REFRESH`.
         * 
         * @return builder
         * 
         */
        public Builder refreshType(Output<String> refreshType) {
            $.refreshType = refreshType;
            return this;
        }

        /**
         * @param refreshType The type of refresh that the dataset undergoes. Valid values are `INCREMENTAL_REFRESH` and `FULL_REFRESH`.
         * 
         * @return builder
         * 
         */
        public Builder refreshType(String refreshType) {
            return refreshType(Output.of(refreshType));
        }

        /**
         * @param scheduleFrequency The configuration of the [schedule frequency](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_RefreshFrequency.html). See schedule_frequency.
         * 
         * @return builder
         * 
         */
        public Builder scheduleFrequency(@Nullable Output<RefreshScheduleScheduleScheduleFrequencyArgs> scheduleFrequency) {
            $.scheduleFrequency = scheduleFrequency;
            return this;
        }

        /**
         * @param scheduleFrequency The configuration of the [schedule frequency](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_RefreshFrequency.html). See schedule_frequency.
         * 
         * @return builder
         * 
         */
        public Builder scheduleFrequency(RefreshScheduleScheduleScheduleFrequencyArgs scheduleFrequency) {
            return scheduleFrequency(Output.of(scheduleFrequency));
        }

        /**
         * @param startAfterDateTime Time after which the refresh schedule can be started, expressed in `YYYY-MM-DDTHH:MM:SS` format.
         * 
         * @return builder
         * 
         */
        public Builder startAfterDateTime(@Nullable Output<String> startAfterDateTime) {
            $.startAfterDateTime = startAfterDateTime;
            return this;
        }

        /**
         * @param startAfterDateTime Time after which the refresh schedule can be started, expressed in `YYYY-MM-DDTHH:MM:SS` format.
         * 
         * @return builder
         * 
         */
        public Builder startAfterDateTime(String startAfterDateTime) {
            return startAfterDateTime(Output.of(startAfterDateTime));
        }

        public RefreshScheduleScheduleArgs build() {
            if ($.refreshType == null) {
                throw new MissingRequiredPropertyException("RefreshScheduleScheduleArgs", "refreshType");
            }
            return $;
        }
    }

}
