// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.CellStyleBorderSideSpecificBorder;
import com.pulumi.aws.quicksight.outputs.TableBorderOptions;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CellStyleBorder {
    private @Nullable CellStyleBorderSideSpecificBorder sideSpecificBorder;
    private TableBorderOptions uniformBorder;

    private CellStyleBorder() {}
    public Optional<CellStyleBorderSideSpecificBorder> sideSpecificBorder() {
        return Optional.ofNullable(this.sideSpecificBorder);
    }
    public TableBorderOptions uniformBorder() {
        return this.uniformBorder;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CellStyleBorder defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable CellStyleBorderSideSpecificBorder sideSpecificBorder;
        private TableBorderOptions uniformBorder;
        public Builder() {}
        public Builder(CellStyleBorder defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.sideSpecificBorder = defaults.sideSpecificBorder;
    	      this.uniformBorder = defaults.uniformBorder;
        }

        @CustomType.Setter
        public Builder sideSpecificBorder(@Nullable CellStyleBorderSideSpecificBorder sideSpecificBorder) {

            this.sideSpecificBorder = sideSpecificBorder;
            return this;
        }
        @CustomType.Setter
        public Builder uniformBorder(TableBorderOptions uniformBorder) {
            if (uniformBorder == null) {
              throw new MissingRequiredPropertyException("CellStyleBorder", "uniformBorder");
            }
            this.uniformBorder = uniformBorder;
            return this;
        }
        public CellStyleBorder build() {
            final var _resultValue = new CellStyleBorder();
            _resultValue.sideSpecificBorder = sideSpecificBorder;
            _resultValue.uniformBorder = uniformBorder;
            return _resultValue;
        }
    }
}
