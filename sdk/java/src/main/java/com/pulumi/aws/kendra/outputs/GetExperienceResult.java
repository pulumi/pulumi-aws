// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kendra.outputs;

import com.pulumi.aws.kendra.outputs.GetExperienceConfiguration;
import com.pulumi.aws.kendra.outputs.GetExperienceEndpoint;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetExperienceResult {
    /**
     * @return ARN of the Experience.
     * 
     */
    private @Nullable String arn;
    /**
     * @return Block that specifies the configuration information for your Amazon Kendra Experience. This includes `content_source_configuration`, which specifies the data source IDs and/or FAQ IDs, and `user_identity_configuration`, which specifies the user or group information to grant access to your Amazon Kendra Experience. Documented below.
     * 
     */
    private @Nullable List<GetExperienceConfiguration> configurations;
    /**
     * @return Unix datetime that the Experience was created.
     * 
     */
    private @Nullable String createdAt;
    /**
     * @return Description of the Experience.
     * 
     */
    private @Nullable String description;
    /**
     * @return Shows the endpoint URLs for your Amazon Kendra Experiences. The URLs are unique and fully hosted by AWS. Documented below.
     * 
     */
    private @Nullable List<GetExperienceEndpoint> endpoints;
    /**
     * @return Reason your Amazon Kendra Experience could not properly process.
     * 
     */
    private @Nullable String errorMessage;
    private String experienceId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private String indexId;
    /**
     * @return Name of the Experience.
     * 
     */
    private @Nullable String name;
    /**
     * @return Shows the ARN of a role with permission to access `Query` API, `QuerySuggestions` API, `SubmitFeedback` API, and AWS SSO that stores your user and group information.
     * 
     */
    private @Nullable String roleArn;
    /**
     * @return Current processing status of your Amazon Kendra Experience. When the status is `ACTIVE`, your Amazon Kendra Experience is ready to use. When the status is `FAILED`, the `error_message` field contains the reason that this failed.
     * 
     */
    private @Nullable String status;
    /**
     * @return Date and time that the Experience was last updated.
     * 
     */
    private @Nullable String updatedAt;

    private GetExperienceResult() {}
    /**
     * @return ARN of the Experience.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return Block that specifies the configuration information for your Amazon Kendra Experience. This includes `content_source_configuration`, which specifies the data source IDs and/or FAQ IDs, and `user_identity_configuration`, which specifies the user or group information to grant access to your Amazon Kendra Experience. Documented below.
     * 
     */
    public List<GetExperienceConfiguration> configurations() {
        return this.configurations == null ? List.of() : this.configurations;
    }
    /**
     * @return Unix datetime that the Experience was created.
     * 
     */
    public Optional<String> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }
    /**
     * @return Description of the Experience.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Shows the endpoint URLs for your Amazon Kendra Experiences. The URLs are unique and fully hosted by AWS. Documented below.
     * 
     */
    public List<GetExperienceEndpoint> endpoints() {
        return this.endpoints == null ? List.of() : this.endpoints;
    }
    /**
     * @return Reason your Amazon Kendra Experience could not properly process.
     * 
     */
    public Optional<String> errorMessage() {
        return Optional.ofNullable(this.errorMessage);
    }
    public String experienceId() {
        return this.experienceId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public String indexId() {
        return this.indexId;
    }
    /**
     * @return Name of the Experience.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Shows the ARN of a role with permission to access `Query` API, `QuerySuggestions` API, `SubmitFeedback` API, and AWS SSO that stores your user and group information.
     * 
     */
    public Optional<String> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }
    /**
     * @return Current processing status of your Amazon Kendra Experience. When the status is `ACTIVE`, your Amazon Kendra Experience is ready to use. When the status is `FAILED`, the `error_message` field contains the reason that this failed.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return Date and time that the Experience was last updated.
     * 
     */
    public Optional<String> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExperienceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable List<GetExperienceConfiguration> configurations;
        private @Nullable String createdAt;
        private @Nullable String description;
        private @Nullable List<GetExperienceEndpoint> endpoints;
        private @Nullable String errorMessage;
        private String experienceId;
        private @Nullable String id;
        private String indexId;
        private @Nullable String name;
        private @Nullable String roleArn;
        private @Nullable String status;
        private @Nullable String updatedAt;
        public Builder() {}
        public Builder(GetExperienceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.configurations = defaults.configurations;
    	      this.createdAt = defaults.createdAt;
    	      this.description = defaults.description;
    	      this.endpoints = defaults.endpoints;
    	      this.errorMessage = defaults.errorMessage;
    	      this.experienceId = defaults.experienceId;
    	      this.id = defaults.id;
    	      this.indexId = defaults.indexId;
    	      this.name = defaults.name;
    	      this.roleArn = defaults.roleArn;
    	      this.status = defaults.status;
    	      this.updatedAt = defaults.updatedAt;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder configurations(@Nullable List<GetExperienceConfiguration> configurations) {
            this.configurations = configurations;
            return this;
        }
        public Builder configurations(GetExperienceConfiguration... configurations) {
            return configurations(List.of(configurations));
        }
        @CustomType.Setter
        public Builder createdAt(@Nullable String createdAt) {
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder endpoints(@Nullable List<GetExperienceEndpoint> endpoints) {
            this.endpoints = endpoints;
            return this;
        }
        public Builder endpoints(GetExperienceEndpoint... endpoints) {
            return endpoints(List.of(endpoints));
        }
        @CustomType.Setter
        public Builder errorMessage(@Nullable String errorMessage) {
            this.errorMessage = errorMessage;
            return this;
        }
        @CustomType.Setter
        public Builder experienceId(String experienceId) {
            this.experienceId = Objects.requireNonNull(experienceId);
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder indexId(String indexId) {
            this.indexId = Objects.requireNonNull(indexId);
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder roleArn(@Nullable String roleArn) {
            this.roleArn = roleArn;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder updatedAt(@Nullable String updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }
        public GetExperienceResult build() {
            final var o = new GetExperienceResult();
            o.arn = arn;
            o.configurations = configurations;
            o.createdAt = createdAt;
            o.description = description;
            o.endpoints = endpoints;
            o.errorMessage = errorMessage;
            o.experienceId = experienceId;
            o.id = id;
            o.indexId = indexId;
            o.name = name;
            o.roleArn = roleArn;
            o.status = status;
            o.updatedAt = updatedAt;
            return o;
        }
    }
}
