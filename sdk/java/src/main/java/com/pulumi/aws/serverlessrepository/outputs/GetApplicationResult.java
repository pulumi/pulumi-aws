// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.serverlessrepository.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetApplicationResult {
    /**
     * @return ARN of the application.
     * 
     */
    private String applicationId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Name of the application.
     * 
     */
    private String name;
    /**
     * @return A list of capabilities describing the permissions needed to deploy the application.
     * 
     */
    private List<String> requiredCapabilities;
    private String semanticVersion;
    /**
     * @return URL pointing to the source code of the application version.
     * 
     */
    private String sourceCodeUrl;
    /**
     * @return URL pointing to the Cloud Formation template for the application version.
     * 
     */
    private String templateUrl;

    private GetApplicationResult() {}
    /**
     * @return ARN of the application.
     * 
     */
    public String applicationId() {
        return this.applicationId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Name of the application.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A list of capabilities describing the permissions needed to deploy the application.
     * 
     */
    public List<String> requiredCapabilities() {
        return this.requiredCapabilities;
    }
    public String semanticVersion() {
        return this.semanticVersion;
    }
    /**
     * @return URL pointing to the source code of the application version.
     * 
     */
    public String sourceCodeUrl() {
        return this.sourceCodeUrl;
    }
    /**
     * @return URL pointing to the Cloud Formation template for the application version.
     * 
     */
    public String templateUrl() {
        return this.templateUrl;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String applicationId;
        private String id;
        private String name;
        private List<String> requiredCapabilities;
        private String semanticVersion;
        private String sourceCodeUrl;
        private String templateUrl;
        public Builder() {}
        public Builder(GetApplicationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationId = defaults.applicationId;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.requiredCapabilities = defaults.requiredCapabilities;
    	      this.semanticVersion = defaults.semanticVersion;
    	      this.sourceCodeUrl = defaults.sourceCodeUrl;
    	      this.templateUrl = defaults.templateUrl;
        }

        @CustomType.Setter
        public Builder applicationId(String applicationId) {
            if (applicationId == null) {
              throw new MissingRequiredPropertyException("GetApplicationResult", "applicationId");
            }
            this.applicationId = applicationId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetApplicationResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetApplicationResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder requiredCapabilities(List<String> requiredCapabilities) {
            if (requiredCapabilities == null) {
              throw new MissingRequiredPropertyException("GetApplicationResult", "requiredCapabilities");
            }
            this.requiredCapabilities = requiredCapabilities;
            return this;
        }
        public Builder requiredCapabilities(String... requiredCapabilities) {
            return requiredCapabilities(List.of(requiredCapabilities));
        }
        @CustomType.Setter
        public Builder semanticVersion(String semanticVersion) {
            if (semanticVersion == null) {
              throw new MissingRequiredPropertyException("GetApplicationResult", "semanticVersion");
            }
            this.semanticVersion = semanticVersion;
            return this;
        }
        @CustomType.Setter
        public Builder sourceCodeUrl(String sourceCodeUrl) {
            if (sourceCodeUrl == null) {
              throw new MissingRequiredPropertyException("GetApplicationResult", "sourceCodeUrl");
            }
            this.sourceCodeUrl = sourceCodeUrl;
            return this;
        }
        @CustomType.Setter
        public Builder templateUrl(String templateUrl) {
            if (templateUrl == null) {
              throw new MissingRequiredPropertyException("GetApplicationResult", "templateUrl");
            }
            this.templateUrl = templateUrl;
            return this;
        }
        public GetApplicationResult build() {
            final var _resultValue = new GetApplicationResult();
            _resultValue.applicationId = applicationId;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.requiredCapabilities = requiredCapabilities;
            _resultValue.semanticVersion = semanticVersion;
            _resultValue.sourceCodeUrl = sourceCodeUrl;
            _resultValue.templateUrl = templateUrl;
            return _resultValue;
        }
    }
}
