// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.ColumnArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ChartAxisLabelOptionsAxisLabelOptionsApplyToArgs extends com.pulumi.resources.ResourceArgs {

    public static final ChartAxisLabelOptionsAxisLabelOptionsApplyToArgs Empty = new ChartAxisLabelOptionsAxisLabelOptionsApplyToArgs();

    @Import(name="column", required=true)
    private Output<ColumnArgs> column;

    public Output<ColumnArgs> column() {
        return this.column;
    }

    @Import(name="fieldId", required=true)
    private Output<String> fieldId;

    public Output<String> fieldId() {
        return this.fieldId;
    }

    private ChartAxisLabelOptionsAxisLabelOptionsApplyToArgs() {}

    private ChartAxisLabelOptionsAxisLabelOptionsApplyToArgs(ChartAxisLabelOptionsAxisLabelOptionsApplyToArgs $) {
        this.column = $.column;
        this.fieldId = $.fieldId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ChartAxisLabelOptionsAxisLabelOptionsApplyToArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ChartAxisLabelOptionsAxisLabelOptionsApplyToArgs $;

        public Builder() {
            $ = new ChartAxisLabelOptionsAxisLabelOptionsApplyToArgs();
        }

        public Builder(ChartAxisLabelOptionsAxisLabelOptionsApplyToArgs defaults) {
            $ = new ChartAxisLabelOptionsAxisLabelOptionsApplyToArgs(Objects.requireNonNull(defaults));
        }

        public Builder column(Output<ColumnArgs> column) {
            $.column = column;
            return this;
        }

        public Builder column(ColumnArgs column) {
            return column(Output.of(column));
        }

        public Builder fieldId(Output<String> fieldId) {
            $.fieldId = fieldId;
            return this;
        }

        public Builder fieldId(String fieldId) {
            return fieldId(Output.of(fieldId));
        }

        public ChartAxisLabelOptionsAxisLabelOptionsApplyToArgs build() {
            if ($.column == null) {
                throw new MissingRequiredPropertyException("ChartAxisLabelOptionsAxisLabelOptionsApplyToArgs", "column");
            }
            if ($.fieldId == null) {
                throw new MissingRequiredPropertyException("ChartAxisLabelOptionsAxisLabelOptionsApplyToArgs", "fieldId");
            }
            return $;
        }
    }

}
