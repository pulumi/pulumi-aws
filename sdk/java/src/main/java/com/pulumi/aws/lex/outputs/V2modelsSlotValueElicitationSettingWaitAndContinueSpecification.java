// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lex.outputs;

import com.pulumi.aws.lex.outputs.V2modelsSlotValueElicitationSettingWaitAndContinueSpecificationContinueResponse;
import com.pulumi.aws.lex.outputs.V2modelsSlotValueElicitationSettingWaitAndContinueSpecificationStillWaitingResponse;
import com.pulumi.aws.lex.outputs.V2modelsSlotValueElicitationSettingWaitAndContinueSpecificationWaitingResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class V2modelsSlotValueElicitationSettingWaitAndContinueSpecification {
    /**
     * @return Specifies whether the bot will wait for a user to respond.
     * When this field is `false`, wait and continue responses for a slot aren&#39;t used.
     * If the active field isn&#39;t specified, the default is `true`.
     * 
     */
    private @Nullable Boolean active;
    /**
     * @return Response that Amazon Lex sends to indicate that the bot is ready to continue the conversation.
     * See the `continue_response` argument reference below.
     * 
     */
    private @Nullable List<V2modelsSlotValueElicitationSettingWaitAndContinueSpecificationContinueResponse> continueResponses;
    /**
     * @return Response that Amazon Lex sends periodically to the user to indicate that the bot is still waiting for input from the user.
     * See the `still_waiting_response` argument reference below.
     * 
     */
    private @Nullable List<V2modelsSlotValueElicitationSettingWaitAndContinueSpecificationStillWaitingResponse> stillWaitingResponses;
    /**
     * @return Response that Amazon Lex sends to indicate that the bot is waiting for the conversation to continue.
     * See the `waiting_response` argument reference below.
     * 
     */
    private @Nullable List<V2modelsSlotValueElicitationSettingWaitAndContinueSpecificationWaitingResponse> waitingResponses;

    private V2modelsSlotValueElicitationSettingWaitAndContinueSpecification() {}
    /**
     * @return Specifies whether the bot will wait for a user to respond.
     * When this field is `false`, wait and continue responses for a slot aren&#39;t used.
     * If the active field isn&#39;t specified, the default is `true`.
     * 
     */
    public Optional<Boolean> active() {
        return Optional.ofNullable(this.active);
    }
    /**
     * @return Response that Amazon Lex sends to indicate that the bot is ready to continue the conversation.
     * See the `continue_response` argument reference below.
     * 
     */
    public List<V2modelsSlotValueElicitationSettingWaitAndContinueSpecificationContinueResponse> continueResponses() {
        return this.continueResponses == null ? List.of() : this.continueResponses;
    }
    /**
     * @return Response that Amazon Lex sends periodically to the user to indicate that the bot is still waiting for input from the user.
     * See the `still_waiting_response` argument reference below.
     * 
     */
    public List<V2modelsSlotValueElicitationSettingWaitAndContinueSpecificationStillWaitingResponse> stillWaitingResponses() {
        return this.stillWaitingResponses == null ? List.of() : this.stillWaitingResponses;
    }
    /**
     * @return Response that Amazon Lex sends to indicate that the bot is waiting for the conversation to continue.
     * See the `waiting_response` argument reference below.
     * 
     */
    public List<V2modelsSlotValueElicitationSettingWaitAndContinueSpecificationWaitingResponse> waitingResponses() {
        return this.waitingResponses == null ? List.of() : this.waitingResponses;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(V2modelsSlotValueElicitationSettingWaitAndContinueSpecification defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean active;
        private @Nullable List<V2modelsSlotValueElicitationSettingWaitAndContinueSpecificationContinueResponse> continueResponses;
        private @Nullable List<V2modelsSlotValueElicitationSettingWaitAndContinueSpecificationStillWaitingResponse> stillWaitingResponses;
        private @Nullable List<V2modelsSlotValueElicitationSettingWaitAndContinueSpecificationWaitingResponse> waitingResponses;
        public Builder() {}
        public Builder(V2modelsSlotValueElicitationSettingWaitAndContinueSpecification defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.active = defaults.active;
    	      this.continueResponses = defaults.continueResponses;
    	      this.stillWaitingResponses = defaults.stillWaitingResponses;
    	      this.waitingResponses = defaults.waitingResponses;
        }

        @CustomType.Setter
        public Builder active(@Nullable Boolean active) {

            this.active = active;
            return this;
        }
        @CustomType.Setter
        public Builder continueResponses(@Nullable List<V2modelsSlotValueElicitationSettingWaitAndContinueSpecificationContinueResponse> continueResponses) {

            this.continueResponses = continueResponses;
            return this;
        }
        public Builder continueResponses(V2modelsSlotValueElicitationSettingWaitAndContinueSpecificationContinueResponse... continueResponses) {
            return continueResponses(List.of(continueResponses));
        }
        @CustomType.Setter
        public Builder stillWaitingResponses(@Nullable List<V2modelsSlotValueElicitationSettingWaitAndContinueSpecificationStillWaitingResponse> stillWaitingResponses) {

            this.stillWaitingResponses = stillWaitingResponses;
            return this;
        }
        public Builder stillWaitingResponses(V2modelsSlotValueElicitationSettingWaitAndContinueSpecificationStillWaitingResponse... stillWaitingResponses) {
            return stillWaitingResponses(List.of(stillWaitingResponses));
        }
        @CustomType.Setter
        public Builder waitingResponses(@Nullable List<V2modelsSlotValueElicitationSettingWaitAndContinueSpecificationWaitingResponse> waitingResponses) {

            this.waitingResponses = waitingResponses;
            return this;
        }
        public Builder waitingResponses(V2modelsSlotValueElicitationSettingWaitAndContinueSpecificationWaitingResponse... waitingResponses) {
            return waitingResponses(List.of(waitingResponses));
        }
        public V2modelsSlotValueElicitationSettingWaitAndContinueSpecification build() {
            final var _resultValue = new V2modelsSlotValueElicitationSettingWaitAndContinueSpecification();
            _resultValue.active = active;
            _resultValue.continueResponses = continueResponses;
            _resultValue.stillWaitingResponses = stillWaitingResponses;
            _resultValue.waitingResponses = waitingResponses;
            return _resultValue;
        }
    }
}
