// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.securitylake.inputs;

import com.pulumi.aws.securitylake.inputs.DataLakeConfigurationArgs;
import com.pulumi.aws.securitylake.inputs.DataLakeTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataLakeState extends com.pulumi.resources.ResourceArgs {

    public static final DataLakeState Empty = new DataLakeState();

    /**
     * ARN of the Data Lake.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return ARN of the Data Lake.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * Specify the Region or Regions that will contribute data to the rollup region.
     * 
     */
    @Import(name="configuration")
    private @Nullable Output<DataLakeConfigurationArgs> configuration;

    /**
     * @return Specify the Region or Regions that will contribute data to the rollup region.
     * 
     */
    public Optional<Output<DataLakeConfigurationArgs>> configuration() {
        return Optional.ofNullable(this.configuration);
    }

    /**
     * The Amazon Resource Name (ARN) used to create and update the AWS Glue table. This table contains partitions generated by the ingestion and normalization of AWS log sources and custom sources.
     * 
     */
    @Import(name="metaStoreManagerRoleArn")
    private @Nullable Output<String> metaStoreManagerRoleArn;

    /**
     * @return The Amazon Resource Name (ARN) used to create and update the AWS Glue table. This table contains partitions generated by the ingestion and normalization of AWS log sources and custom sources.
     * 
     */
    public Optional<Output<String>> metaStoreManagerRoleArn() {
        return Optional.ofNullable(this.metaStoreManagerRoleArn);
    }

    /**
     * The ARN for the Amazon Security Lake Amazon S3 bucket.
     * 
     */
    @Import(name="s3BucketArn")
    private @Nullable Output<String> s3BucketArn;

    /**
     * @return The ARN for the Amazon Security Lake Amazon S3 bucket.
     * 
     */
    public Optional<Output<String>> s3BucketArn() {
        return Optional.ofNullable(this.s3BucketArn);
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="timeouts")
    private @Nullable Output<DataLakeTimeoutsArgs> timeouts;

    public Optional<Output<DataLakeTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private DataLakeState() {}

    private DataLakeState(DataLakeState $) {
        this.arn = $.arn;
        this.configuration = $.configuration;
        this.metaStoreManagerRoleArn = $.metaStoreManagerRoleArn;
        this.s3BucketArn = $.s3BucketArn;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataLakeState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataLakeState $;

        public Builder() {
            $ = new DataLakeState();
        }

        public Builder(DataLakeState defaults) {
            $ = new DataLakeState(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn ARN of the Data Lake.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn ARN of the Data Lake.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param configuration Specify the Region or Regions that will contribute data to the rollup region.
         * 
         * @return builder
         * 
         */
        public Builder configuration(@Nullable Output<DataLakeConfigurationArgs> configuration) {
            $.configuration = configuration;
            return this;
        }

        /**
         * @param configuration Specify the Region or Regions that will contribute data to the rollup region.
         * 
         * @return builder
         * 
         */
        public Builder configuration(DataLakeConfigurationArgs configuration) {
            return configuration(Output.of(configuration));
        }

        /**
         * @param metaStoreManagerRoleArn The Amazon Resource Name (ARN) used to create and update the AWS Glue table. This table contains partitions generated by the ingestion and normalization of AWS log sources and custom sources.
         * 
         * @return builder
         * 
         */
        public Builder metaStoreManagerRoleArn(@Nullable Output<String> metaStoreManagerRoleArn) {
            $.metaStoreManagerRoleArn = metaStoreManagerRoleArn;
            return this;
        }

        /**
         * @param metaStoreManagerRoleArn The Amazon Resource Name (ARN) used to create and update the AWS Glue table. This table contains partitions generated by the ingestion and normalization of AWS log sources and custom sources.
         * 
         * @return builder
         * 
         */
        public Builder metaStoreManagerRoleArn(String metaStoreManagerRoleArn) {
            return metaStoreManagerRoleArn(Output.of(metaStoreManagerRoleArn));
        }

        /**
         * @param s3BucketArn The ARN for the Amazon Security Lake Amazon S3 bucket.
         * 
         * @return builder
         * 
         */
        public Builder s3BucketArn(@Nullable Output<String> s3BucketArn) {
            $.s3BucketArn = s3BucketArn;
            return this;
        }

        /**
         * @param s3BucketArn The ARN for the Amazon Security Lake Amazon S3 bucket.
         * 
         * @return builder
         * 
         */
        public Builder s3BucketArn(String s3BucketArn) {
            return s3BucketArn(Output.of(s3BucketArn));
        }

        /**
         * @param tags Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder timeouts(@Nullable Output<DataLakeTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(DataLakeTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public DataLakeState build() {
            return $;
        }
    }

}
