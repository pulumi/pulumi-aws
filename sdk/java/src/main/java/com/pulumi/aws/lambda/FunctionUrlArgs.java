// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lambda;

import com.pulumi.aws.lambda.inputs.FunctionUrlCorsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FunctionUrlArgs extends com.pulumi.resources.ResourceArgs {

    public static final FunctionUrlArgs Empty = new FunctionUrlArgs();

    @Import(name="authorizationType", required=true)
    private Output<String> authorizationType;

    public Output<String> authorizationType() {
        return this.authorizationType;
    }

    @Import(name="cors")
    private @Nullable Output<FunctionUrlCorsArgs> cors;

    public Optional<Output<FunctionUrlCorsArgs>> cors() {
        return Optional.ofNullable(this.cors);
    }

    @Import(name="functionName", required=true)
    private Output<String> functionName;

    public Output<String> functionName() {
        return this.functionName;
    }

    @Import(name="qualifier")
    private @Nullable Output<String> qualifier;

    public Optional<Output<String>> qualifier() {
        return Optional.ofNullable(this.qualifier);
    }

    private FunctionUrlArgs() {}

    private FunctionUrlArgs(FunctionUrlArgs $) {
        this.authorizationType = $.authorizationType;
        this.cors = $.cors;
        this.functionName = $.functionName;
        this.qualifier = $.qualifier;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FunctionUrlArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FunctionUrlArgs $;

        public Builder() {
            $ = new FunctionUrlArgs();
        }

        public Builder(FunctionUrlArgs defaults) {
            $ = new FunctionUrlArgs(Objects.requireNonNull(defaults));
        }

        public Builder authorizationType(Output<String> authorizationType) {
            $.authorizationType = authorizationType;
            return this;
        }

        public Builder authorizationType(String authorizationType) {
            return authorizationType(Output.of(authorizationType));
        }

        public Builder cors(@Nullable Output<FunctionUrlCorsArgs> cors) {
            $.cors = cors;
            return this;
        }

        public Builder cors(FunctionUrlCorsArgs cors) {
            return cors(Output.of(cors));
        }

        public Builder functionName(Output<String> functionName) {
            $.functionName = functionName;
            return this;
        }

        public Builder functionName(String functionName) {
            return functionName(Output.of(functionName));
        }

        public Builder qualifier(@Nullable Output<String> qualifier) {
            $.qualifier = qualifier;
            return this;
        }

        public Builder qualifier(String qualifier) {
            return qualifier(Output.of(qualifier));
        }

        public FunctionUrlArgs build() {
            $.authorizationType = Objects.requireNonNull($.authorizationType, "expected parameter 'authorizationType' to be non-null");
            $.functionName = Objects.requireNonNull($.functionName, "expected parameter 'functionName' to be non-null");
            return $;
        }
    }

}
