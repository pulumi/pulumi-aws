// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.identitystore.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UserAddressesArgs extends com.pulumi.resources.ResourceArgs {

    public static final UserAddressesArgs Empty = new UserAddressesArgs();

    @Import(name="country")
    private @Nullable Output<String> country;

    public Optional<Output<String>> country() {
        return Optional.ofNullable(this.country);
    }

    @Import(name="formatted")
    private @Nullable Output<String> formatted;

    public Optional<Output<String>> formatted() {
        return Optional.ofNullable(this.formatted);
    }

    @Import(name="locality")
    private @Nullable Output<String> locality;

    public Optional<Output<String>> locality() {
        return Optional.ofNullable(this.locality);
    }

    @Import(name="postalCode")
    private @Nullable Output<String> postalCode;

    public Optional<Output<String>> postalCode() {
        return Optional.ofNullable(this.postalCode);
    }

    @Import(name="primary")
    private @Nullable Output<Boolean> primary;

    public Optional<Output<Boolean>> primary() {
        return Optional.ofNullable(this.primary);
    }

    @Import(name="region")
    private @Nullable Output<String> region;

    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    @Import(name="streetAddress")
    private @Nullable Output<String> streetAddress;

    public Optional<Output<String>> streetAddress() {
        return Optional.ofNullable(this.streetAddress);
    }

    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private UserAddressesArgs() {}

    private UserAddressesArgs(UserAddressesArgs $) {
        this.country = $.country;
        this.formatted = $.formatted;
        this.locality = $.locality;
        this.postalCode = $.postalCode;
        this.primary = $.primary;
        this.region = $.region;
        this.streetAddress = $.streetAddress;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserAddressesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserAddressesArgs $;

        public Builder() {
            $ = new UserAddressesArgs();
        }

        public Builder(UserAddressesArgs defaults) {
            $ = new UserAddressesArgs(Objects.requireNonNull(defaults));
        }

        public Builder country(@Nullable Output<String> country) {
            $.country = country;
            return this;
        }

        public Builder country(String country) {
            return country(Output.of(country));
        }

        public Builder formatted(@Nullable Output<String> formatted) {
            $.formatted = formatted;
            return this;
        }

        public Builder formatted(String formatted) {
            return formatted(Output.of(formatted));
        }

        public Builder locality(@Nullable Output<String> locality) {
            $.locality = locality;
            return this;
        }

        public Builder locality(String locality) {
            return locality(Output.of(locality));
        }

        public Builder postalCode(@Nullable Output<String> postalCode) {
            $.postalCode = postalCode;
            return this;
        }

        public Builder postalCode(String postalCode) {
            return postalCode(Output.of(postalCode));
        }

        public Builder primary(@Nullable Output<Boolean> primary) {
            $.primary = primary;
            return this;
        }

        public Builder primary(Boolean primary) {
            return primary(Output.of(primary));
        }

        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        public Builder region(String region) {
            return region(Output.of(region));
        }

        public Builder streetAddress(@Nullable Output<String> streetAddress) {
            $.streetAddress = streetAddress;
            return this;
        }

        public Builder streetAddress(String streetAddress) {
            return streetAddress(Output.of(streetAddress));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public UserAddressesArgs build() {
            return $;
        }
    }

}
