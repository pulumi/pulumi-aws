// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.redshift;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataShareAuthorizationArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataShareAuthorizationArgs Empty = new DataShareAuthorizationArgs();

    /**
     * Whether to allow write operations for a datashare.
     * 
     */
    @Import(name="allowWrites")
    private @Nullable Output<Boolean> allowWrites;

    /**
     * @return Whether to allow write operations for a datashare.
     * 
     */
    public Optional<Output<Boolean>> allowWrites() {
        return Optional.ofNullable(this.allowWrites);
    }

    /**
     * Identifier of the data consumer that is authorized to access the datashare. This identifier is an AWS account ID or a keyword, such as `ADX`.
     * 
     */
    @Import(name="consumerIdentifier", required=true)
    private Output<String> consumerIdentifier;

    /**
     * @return Identifier of the data consumer that is authorized to access the datashare. This identifier is an AWS account ID or a keyword, such as `ADX`.
     * 
     */
    public Output<String> consumerIdentifier() {
        return this.consumerIdentifier;
    }

    /**
     * Amazon Resource Name (ARN) of the datashare that producers are to authorize sharing for.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="dataShareArn", required=true)
    private Output<String> dataShareArn;

    /**
     * @return Amazon Resource Name (ARN) of the datashare that producers are to authorize sharing for.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<String> dataShareArn() {
        return this.dataShareArn;
    }

    private DataShareAuthorizationArgs() {}

    private DataShareAuthorizationArgs(DataShareAuthorizationArgs $) {
        this.allowWrites = $.allowWrites;
        this.consumerIdentifier = $.consumerIdentifier;
        this.dataShareArn = $.dataShareArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataShareAuthorizationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataShareAuthorizationArgs $;

        public Builder() {
            $ = new DataShareAuthorizationArgs();
        }

        public Builder(DataShareAuthorizationArgs defaults) {
            $ = new DataShareAuthorizationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowWrites Whether to allow write operations for a datashare.
         * 
         * @return builder
         * 
         */
        public Builder allowWrites(@Nullable Output<Boolean> allowWrites) {
            $.allowWrites = allowWrites;
            return this;
        }

        /**
         * @param allowWrites Whether to allow write operations for a datashare.
         * 
         * @return builder
         * 
         */
        public Builder allowWrites(Boolean allowWrites) {
            return allowWrites(Output.of(allowWrites));
        }

        /**
         * @param consumerIdentifier Identifier of the data consumer that is authorized to access the datashare. This identifier is an AWS account ID or a keyword, such as `ADX`.
         * 
         * @return builder
         * 
         */
        public Builder consumerIdentifier(Output<String> consumerIdentifier) {
            $.consumerIdentifier = consumerIdentifier;
            return this;
        }

        /**
         * @param consumerIdentifier Identifier of the data consumer that is authorized to access the datashare. This identifier is an AWS account ID or a keyword, such as `ADX`.
         * 
         * @return builder
         * 
         */
        public Builder consumerIdentifier(String consumerIdentifier) {
            return consumerIdentifier(Output.of(consumerIdentifier));
        }

        /**
         * @param dataShareArn Amazon Resource Name (ARN) of the datashare that producers are to authorize sharing for.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder dataShareArn(Output<String> dataShareArn) {
            $.dataShareArn = dataShareArn;
            return this;
        }

        /**
         * @param dataShareArn Amazon Resource Name (ARN) of the datashare that producers are to authorize sharing for.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder dataShareArn(String dataShareArn) {
            return dataShareArn(Output.of(dataShareArn));
        }

        public DataShareAuthorizationArgs build() {
            if ($.consumerIdentifier == null) {
                throw new MissingRequiredPropertyException("DataShareAuthorizationArgs", "consumerIdentifier");
            }
            if ($.dataShareArn == null) {
                throw new MissingRequiredPropertyException("DataShareAuthorizationArgs", "dataShareArn");
            }
            return $;
        }
    }

}
