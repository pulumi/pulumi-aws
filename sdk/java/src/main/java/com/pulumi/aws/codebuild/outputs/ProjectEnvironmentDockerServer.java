// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codebuild.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class ProjectEnvironmentDockerServer {
    /**
     * @return Compute type for the Docker server. Valid values: `BUILD_GENERAL1_SMALL`, `BUILD_GENERAL1_MEDIUM`, `BUILD_GENERAL1_LARGE`, `BUILD_GENERAL1_XLARGE`, and `BUILD_GENERAL1_2XLARGE`.
     * 
     */
    private String computeType;
    /**
     * @return List of security group IDs to assign to the Docker server.
     * 
     */
    private @Nullable List<String> securityGroupIds;

    private ProjectEnvironmentDockerServer() {}
    /**
     * @return Compute type for the Docker server. Valid values: `BUILD_GENERAL1_SMALL`, `BUILD_GENERAL1_MEDIUM`, `BUILD_GENERAL1_LARGE`, `BUILD_GENERAL1_XLARGE`, and `BUILD_GENERAL1_2XLARGE`.
     * 
     */
    public String computeType() {
        return this.computeType;
    }
    /**
     * @return List of security group IDs to assign to the Docker server.
     * 
     */
    public List<String> securityGroupIds() {
        return this.securityGroupIds == null ? List.of() : this.securityGroupIds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProjectEnvironmentDockerServer defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String computeType;
        private @Nullable List<String> securityGroupIds;
        public Builder() {}
        public Builder(ProjectEnvironmentDockerServer defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.computeType = defaults.computeType;
    	      this.securityGroupIds = defaults.securityGroupIds;
        }

        @CustomType.Setter
        public Builder computeType(String computeType) {
            if (computeType == null) {
              throw new MissingRequiredPropertyException("ProjectEnvironmentDockerServer", "computeType");
            }
            this.computeType = computeType;
            return this;
        }
        @CustomType.Setter
        public Builder securityGroupIds(@Nullable List<String> securityGroupIds) {

            this.securityGroupIds = securityGroupIds;
            return this;
        }
        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }
        public ProjectEnvironmentDockerServer build() {
            final var _resultValue = new ProjectEnvironmentDockerServer();
            _resultValue.computeType = computeType;
            _resultValue.securityGroupIds = securityGroupIds;
            return _resultValue;
        }
    }
}
