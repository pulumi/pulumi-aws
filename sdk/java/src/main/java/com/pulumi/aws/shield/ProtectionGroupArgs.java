// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.shield;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProtectionGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProtectionGroupArgs Empty = new ProtectionGroupArgs();

    @Import(name="aggregation", required=true)
    private Output<String> aggregation;

    public Output<String> aggregation() {
        return this.aggregation;
    }

    @Import(name="members")
    private @Nullable Output<List<String>> members;

    public Optional<Output<List<String>>> members() {
        return Optional.ofNullable(this.members);
    }

    @Import(name="pattern", required=true)
    private Output<String> pattern;

    public Output<String> pattern() {
        return this.pattern;
    }

    @Import(name="protectionGroupId", required=true)
    private Output<String> protectionGroupId;

    public Output<String> protectionGroupId() {
        return this.protectionGroupId;
    }

    @Import(name="resourceType")
    private @Nullable Output<String> resourceType;

    public Optional<Output<String>> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ProtectionGroupArgs() {}

    private ProtectionGroupArgs(ProtectionGroupArgs $) {
        this.aggregation = $.aggregation;
        this.members = $.members;
        this.pattern = $.pattern;
        this.protectionGroupId = $.protectionGroupId;
        this.resourceType = $.resourceType;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProtectionGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProtectionGroupArgs $;

        public Builder() {
            $ = new ProtectionGroupArgs();
        }

        public Builder(ProtectionGroupArgs defaults) {
            $ = new ProtectionGroupArgs(Objects.requireNonNull(defaults));
        }

        public Builder aggregation(Output<String> aggregation) {
            $.aggregation = aggregation;
            return this;
        }

        public Builder aggregation(String aggregation) {
            return aggregation(Output.of(aggregation));
        }

        public Builder members(@Nullable Output<List<String>> members) {
            $.members = members;
            return this;
        }

        public Builder members(List<String> members) {
            return members(Output.of(members));
        }

        public Builder members(String... members) {
            return members(List.of(members));
        }

        public Builder pattern(Output<String> pattern) {
            $.pattern = pattern;
            return this;
        }

        public Builder pattern(String pattern) {
            return pattern(Output.of(pattern));
        }

        public Builder protectionGroupId(Output<String> protectionGroupId) {
            $.protectionGroupId = protectionGroupId;
            return this;
        }

        public Builder protectionGroupId(String protectionGroupId) {
            return protectionGroupId(Output.of(protectionGroupId));
        }

        public Builder resourceType(@Nullable Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public ProtectionGroupArgs build() {
            $.aggregation = Objects.requireNonNull($.aggregation, "expected parameter 'aggregation' to be non-null");
            $.pattern = Objects.requireNonNull($.pattern, "expected parameter 'pattern' to be non-null");
            $.protectionGroupId = Objects.requireNonNull($.protectionGroupId, "expected parameter 'protectionGroupId' to be non-null");
            return $;
        }
    }

}
