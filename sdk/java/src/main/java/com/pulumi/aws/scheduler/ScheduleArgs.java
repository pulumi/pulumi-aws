// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.scheduler;

import com.pulumi.aws.scheduler.inputs.ScheduleFlexibleTimeWindowArgs;
import com.pulumi.aws.scheduler.inputs.ScheduleTargetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ScheduleArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScheduleArgs Empty = new ScheduleArgs();

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="endDate")
    private @Nullable Output<String> endDate;

    public Optional<Output<String>> endDate() {
        return Optional.ofNullable(this.endDate);
    }

    @Import(name="flexibleTimeWindow", required=true)
    private Output<ScheduleFlexibleTimeWindowArgs> flexibleTimeWindow;

    public Output<ScheduleFlexibleTimeWindowArgs> flexibleTimeWindow() {
        return this.flexibleTimeWindow;
    }

    @Import(name="groupName")
    private @Nullable Output<String> groupName;

    public Optional<Output<String>> groupName() {
        return Optional.ofNullable(this.groupName);
    }

    @Import(name="kmsKeyArn")
    private @Nullable Output<String> kmsKeyArn;

    public Optional<Output<String>> kmsKeyArn() {
        return Optional.ofNullable(this.kmsKeyArn);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="namePrefix")
    private @Nullable Output<String> namePrefix;

    public Optional<Output<String>> namePrefix() {
        return Optional.ofNullable(this.namePrefix);
    }

    @Import(name="scheduleExpression", required=true)
    private Output<String> scheduleExpression;

    public Output<String> scheduleExpression() {
        return this.scheduleExpression;
    }

    @Import(name="scheduleExpressionTimezone")
    private @Nullable Output<String> scheduleExpressionTimezone;

    public Optional<Output<String>> scheduleExpressionTimezone() {
        return Optional.ofNullable(this.scheduleExpressionTimezone);
    }

    @Import(name="startDate")
    private @Nullable Output<String> startDate;

    public Optional<Output<String>> startDate() {
        return Optional.ofNullable(this.startDate);
    }

    @Import(name="state")
    private @Nullable Output<String> state;

    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    @Import(name="target", required=true)
    private Output<ScheduleTargetArgs> target;

    public Output<ScheduleTargetArgs> target() {
        return this.target;
    }

    private ScheduleArgs() {}

    private ScheduleArgs(ScheduleArgs $) {
        this.description = $.description;
        this.endDate = $.endDate;
        this.flexibleTimeWindow = $.flexibleTimeWindow;
        this.groupName = $.groupName;
        this.kmsKeyArn = $.kmsKeyArn;
        this.name = $.name;
        this.namePrefix = $.namePrefix;
        this.scheduleExpression = $.scheduleExpression;
        this.scheduleExpressionTimezone = $.scheduleExpressionTimezone;
        this.startDate = $.startDate;
        this.state = $.state;
        this.target = $.target;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScheduleArgs $;

        public Builder() {
            $ = new ScheduleArgs();
        }

        public Builder(ScheduleArgs defaults) {
            $ = new ScheduleArgs(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder endDate(@Nullable Output<String> endDate) {
            $.endDate = endDate;
            return this;
        }

        public Builder endDate(String endDate) {
            return endDate(Output.of(endDate));
        }

        public Builder flexibleTimeWindow(Output<ScheduleFlexibleTimeWindowArgs> flexibleTimeWindow) {
            $.flexibleTimeWindow = flexibleTimeWindow;
            return this;
        }

        public Builder flexibleTimeWindow(ScheduleFlexibleTimeWindowArgs flexibleTimeWindow) {
            return flexibleTimeWindow(Output.of(flexibleTimeWindow));
        }

        public Builder groupName(@Nullable Output<String> groupName) {
            $.groupName = groupName;
            return this;
        }

        public Builder groupName(String groupName) {
            return groupName(Output.of(groupName));
        }

        public Builder kmsKeyArn(@Nullable Output<String> kmsKeyArn) {
            $.kmsKeyArn = kmsKeyArn;
            return this;
        }

        public Builder kmsKeyArn(String kmsKeyArn) {
            return kmsKeyArn(Output.of(kmsKeyArn));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder namePrefix(@Nullable Output<String> namePrefix) {
            $.namePrefix = namePrefix;
            return this;
        }

        public Builder namePrefix(String namePrefix) {
            return namePrefix(Output.of(namePrefix));
        }

        public Builder scheduleExpression(Output<String> scheduleExpression) {
            $.scheduleExpression = scheduleExpression;
            return this;
        }

        public Builder scheduleExpression(String scheduleExpression) {
            return scheduleExpression(Output.of(scheduleExpression));
        }

        public Builder scheduleExpressionTimezone(@Nullable Output<String> scheduleExpressionTimezone) {
            $.scheduleExpressionTimezone = scheduleExpressionTimezone;
            return this;
        }

        public Builder scheduleExpressionTimezone(String scheduleExpressionTimezone) {
            return scheduleExpressionTimezone(Output.of(scheduleExpressionTimezone));
        }

        public Builder startDate(@Nullable Output<String> startDate) {
            $.startDate = startDate;
            return this;
        }

        public Builder startDate(String startDate) {
            return startDate(Output.of(startDate));
        }

        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        public Builder state(String state) {
            return state(Output.of(state));
        }

        public Builder target(Output<ScheduleTargetArgs> target) {
            $.target = target;
            return this;
        }

        public Builder target(ScheduleTargetArgs target) {
            return target(Output.of(target));
        }

        public ScheduleArgs build() {
            $.flexibleTimeWindow = Objects.requireNonNull($.flexibleTimeWindow, "expected parameter 'flexibleTimeWindow' to be non-null");
            $.scheduleExpression = Objects.requireNonNull($.scheduleExpression, "expected parameter 'scheduleExpression' to be non-null");
            $.target = Objects.requireNonNull($.target, "expected parameter 'target' to be non-null");
            return $;
        }
    }

}
