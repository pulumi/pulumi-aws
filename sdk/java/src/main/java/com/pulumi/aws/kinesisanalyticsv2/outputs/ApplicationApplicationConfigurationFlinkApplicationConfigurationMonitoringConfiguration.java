// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kinesisanalyticsv2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration {
    /**
     * @return Describes whether to use the default CloudWatch logging configuration for an application. Valid values: `CUSTOM`, `DEFAULT`. Set this attribute to `CUSTOM` in order for any specified `log_level` or `metrics_level` attribute values to be effective.
     * 
     */
    private String configurationType;
    /**
     * @return Describes the verbosity of the CloudWatch Logs for an application. Valid values: `DEBUG`, `ERROR`, `INFO`, `WARN`.
     * 
     */
    private @Nullable String logLevel;
    /**
     * @return Describes the granularity of the CloudWatch Logs for an application. Valid values: `APPLICATION`, `OPERATOR`, `PARALLELISM`, `TASK`.
     * 
     */
    private @Nullable String metricsLevel;

    private ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration() {}
    /**
     * @return Describes whether to use the default CloudWatch logging configuration for an application. Valid values: `CUSTOM`, `DEFAULT`. Set this attribute to `CUSTOM` in order for any specified `log_level` or `metrics_level` attribute values to be effective.
     * 
     */
    public String configurationType() {
        return this.configurationType;
    }
    /**
     * @return Describes the verbosity of the CloudWatch Logs for an application. Valid values: `DEBUG`, `ERROR`, `INFO`, `WARN`.
     * 
     */
    public Optional<String> logLevel() {
        return Optional.ofNullable(this.logLevel);
    }
    /**
     * @return Describes the granularity of the CloudWatch Logs for an application. Valid values: `APPLICATION`, `OPERATOR`, `PARALLELISM`, `TASK`.
     * 
     */
    public Optional<String> metricsLevel() {
        return Optional.ofNullable(this.metricsLevel);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String configurationType;
        private @Nullable String logLevel;
        private @Nullable String metricsLevel;
        public Builder() {}
        public Builder(ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configurationType = defaults.configurationType;
    	      this.logLevel = defaults.logLevel;
    	      this.metricsLevel = defaults.metricsLevel;
        }

        @CustomType.Setter
        public Builder configurationType(String configurationType) {
            if (configurationType == null) {
              throw new MissingRequiredPropertyException("ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration", "configurationType");
            }
            this.configurationType = configurationType;
            return this;
        }
        @CustomType.Setter
        public Builder logLevel(@Nullable String logLevel) {

            this.logLevel = logLevel;
            return this;
        }
        @CustomType.Setter
        public Builder metricsLevel(@Nullable String metricsLevel) {

            this.metricsLevel = metricsLevel;
            return this;
        }
        public ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration build() {
            final var _resultValue = new ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration();
            _resultValue.configurationType = configurationType;
            _resultValue.logLevel = logLevel;
            _resultValue.metricsLevel = metricsLevel;
            return _resultValue;
        }
    }
}
