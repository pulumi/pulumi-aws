// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.mq.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetBrokerUser {
    private Boolean consoleAccess;
    private List<String> groups;
    private Boolean replicationUser;
    private String username;

    private GetBrokerUser() {}
    public Boolean consoleAccess() {
        return this.consoleAccess;
    }
    public List<String> groups() {
        return this.groups;
    }
    public Boolean replicationUser() {
        return this.replicationUser;
    }
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBrokerUser defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean consoleAccess;
        private List<String> groups;
        private Boolean replicationUser;
        private String username;
        public Builder() {}
        public Builder(GetBrokerUser defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.consoleAccess = defaults.consoleAccess;
    	      this.groups = defaults.groups;
    	      this.replicationUser = defaults.replicationUser;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder consoleAccess(Boolean consoleAccess) {
            if (consoleAccess == null) {
              throw new MissingRequiredPropertyException("GetBrokerUser", "consoleAccess");
            }
            this.consoleAccess = consoleAccess;
            return this;
        }
        @CustomType.Setter
        public Builder groups(List<String> groups) {
            if (groups == null) {
              throw new MissingRequiredPropertyException("GetBrokerUser", "groups");
            }
            this.groups = groups;
            return this;
        }
        public Builder groups(String... groups) {
            return groups(List.of(groups));
        }
        @CustomType.Setter
        public Builder replicationUser(Boolean replicationUser) {
            if (replicationUser == null) {
              throw new MissingRequiredPropertyException("GetBrokerUser", "replicationUser");
            }
            this.replicationUser = replicationUser;
            return this;
        }
        @CustomType.Setter
        public Builder username(String username) {
            if (username == null) {
              throw new MissingRequiredPropertyException("GetBrokerUser", "username");
            }
            this.username = username;
            return this;
        }
        public GetBrokerUser build() {
            final var _resultValue = new GetBrokerUser();
            _resultValue.consoleAccess = consoleAccess;
            _resultValue.groups = groups;
            _resultValue.replicationUser = replicationUser;
            _resultValue.username = username;
            return _resultValue;
        }
    }
}
