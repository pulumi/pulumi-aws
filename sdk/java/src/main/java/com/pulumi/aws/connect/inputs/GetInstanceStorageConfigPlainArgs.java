// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.connect.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetInstanceStorageConfigPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetInstanceStorageConfigPlainArgs Empty = new GetInstanceStorageConfigPlainArgs();

    @Import(name="associationId", required=true)
    private String associationId;

    public String associationId() {
        return this.associationId;
    }

    @Import(name="instanceId", required=true)
    private String instanceId;

    public String instanceId() {
        return this.instanceId;
    }

    @Import(name="resourceType", required=true)
    private String resourceType;

    public String resourceType() {
        return this.resourceType;
    }

    private GetInstanceStorageConfigPlainArgs() {}

    private GetInstanceStorageConfigPlainArgs(GetInstanceStorageConfigPlainArgs $) {
        this.associationId = $.associationId;
        this.instanceId = $.instanceId;
        this.resourceType = $.resourceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInstanceStorageConfigPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInstanceStorageConfigPlainArgs $;

        public Builder() {
            $ = new GetInstanceStorageConfigPlainArgs();
        }

        public Builder(GetInstanceStorageConfigPlainArgs defaults) {
            $ = new GetInstanceStorageConfigPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder associationId(String associationId) {
            $.associationId = associationId;
            return this;
        }

        public Builder instanceId(String instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        public Builder resourceType(String resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        public GetInstanceStorageConfigPlainArgs build() {
            $.associationId = Objects.requireNonNull($.associationId, "expected parameter 'associationId' to be non-null");
            $.instanceId = Objects.requireNonNull($.instanceId, "expected parameter 'instanceId' to be non-null");
            $.resourceType = Objects.requireNonNull($.resourceType, "expected parameter 'resourceType' to be non-null");
            return $;
        }
    }

}
