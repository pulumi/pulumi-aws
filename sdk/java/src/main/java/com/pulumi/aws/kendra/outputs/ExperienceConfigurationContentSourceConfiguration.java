// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kendra.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ExperienceConfigurationContentSourceConfiguration {
    /**
     * @return The identifiers of the data sources you want to use for your Amazon Kendra experience. Maximum number of 100 items.
     * 
     */
    private @Nullable List<String> dataSourceIds;
    /**
     * @return Whether to use documents you indexed directly using the `BatchPutDocument API`. Defaults to `false`.
     * 
     */
    private @Nullable Boolean directPutContent;
    /**
     * @return The identifier of the FAQs that you want to use for your Amazon Kendra experience. Maximum number of 100 items.
     * 
     */
    private @Nullable List<String> faqIds;

    private ExperienceConfigurationContentSourceConfiguration() {}
    /**
     * @return The identifiers of the data sources you want to use for your Amazon Kendra experience. Maximum number of 100 items.
     * 
     */
    public List<String> dataSourceIds() {
        return this.dataSourceIds == null ? List.of() : this.dataSourceIds;
    }
    /**
     * @return Whether to use documents you indexed directly using the `BatchPutDocument API`. Defaults to `false`.
     * 
     */
    public Optional<Boolean> directPutContent() {
        return Optional.ofNullable(this.directPutContent);
    }
    /**
     * @return The identifier of the FAQs that you want to use for your Amazon Kendra experience. Maximum number of 100 items.
     * 
     */
    public List<String> faqIds() {
        return this.faqIds == null ? List.of() : this.faqIds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ExperienceConfigurationContentSourceConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> dataSourceIds;
        private @Nullable Boolean directPutContent;
        private @Nullable List<String> faqIds;
        public Builder() {}
        public Builder(ExperienceConfigurationContentSourceConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataSourceIds = defaults.dataSourceIds;
    	      this.directPutContent = defaults.directPutContent;
    	      this.faqIds = defaults.faqIds;
        }

        @CustomType.Setter
        public Builder dataSourceIds(@Nullable List<String> dataSourceIds) {

            this.dataSourceIds = dataSourceIds;
            return this;
        }
        public Builder dataSourceIds(String... dataSourceIds) {
            return dataSourceIds(List.of(dataSourceIds));
        }
        @CustomType.Setter
        public Builder directPutContent(@Nullable Boolean directPutContent) {

            this.directPutContent = directPutContent;
            return this;
        }
        @CustomType.Setter
        public Builder faqIds(@Nullable List<String> faqIds) {

            this.faqIds = faqIds;
            return this;
        }
        public Builder faqIds(String... faqIds) {
            return faqIds(List.of(faqIds));
        }
        public ExperienceConfigurationContentSourceConfiguration build() {
            final var _resultValue = new ExperienceConfigurationContentSourceConfiguration();
            _resultValue.dataSourceIds = dataSourceIds;
            _resultValue.directPutContent = directPutContent;
            _resultValue.faqIds = faqIds;
            return _resultValue;
        }
    }
}
