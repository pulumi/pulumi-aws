// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2;

import com.pulumi.aws.ec2.inputs.DefaultCreditSpecificationTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DefaultCreditSpecificationArgs extends com.pulumi.resources.ResourceArgs {

    public static final DefaultCreditSpecificationArgs Empty = new DefaultCreditSpecificationArgs();

    /**
     * Credit option for CPU usage of the instance family. Valid values: `standard`, `unlimited`.
     * 
     */
    @Import(name="cpuCredits", required=true)
    private Output<String> cpuCredits;

    /**
     * @return Credit option for CPU usage of the instance family. Valid values: `standard`, `unlimited`.
     * 
     */
    public Output<String> cpuCredits() {
        return this.cpuCredits;
    }

    /**
     * Instance family. Valid values are `t2`, `t3`, `t3a`, `t4g`.
     * 
     */
    @Import(name="instanceFamily", required=true)
    private Output<String> instanceFamily;

    /**
     * @return Instance family. Valid values are `t2`, `t3`, `t3a`, `t4g`.
     * 
     */
    public Output<String> instanceFamily() {
        return this.instanceFamily;
    }

    @Import(name="timeouts")
    private @Nullable Output<DefaultCreditSpecificationTimeoutsArgs> timeouts;

    public Optional<Output<DefaultCreditSpecificationTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private DefaultCreditSpecificationArgs() {}

    private DefaultCreditSpecificationArgs(DefaultCreditSpecificationArgs $) {
        this.cpuCredits = $.cpuCredits;
        this.instanceFamily = $.instanceFamily;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DefaultCreditSpecificationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DefaultCreditSpecificationArgs $;

        public Builder() {
            $ = new DefaultCreditSpecificationArgs();
        }

        public Builder(DefaultCreditSpecificationArgs defaults) {
            $ = new DefaultCreditSpecificationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cpuCredits Credit option for CPU usage of the instance family. Valid values: `standard`, `unlimited`.
         * 
         * @return builder
         * 
         */
        public Builder cpuCredits(Output<String> cpuCredits) {
            $.cpuCredits = cpuCredits;
            return this;
        }

        /**
         * @param cpuCredits Credit option for CPU usage of the instance family. Valid values: `standard`, `unlimited`.
         * 
         * @return builder
         * 
         */
        public Builder cpuCredits(String cpuCredits) {
            return cpuCredits(Output.of(cpuCredits));
        }

        /**
         * @param instanceFamily Instance family. Valid values are `t2`, `t3`, `t3a`, `t4g`.
         * 
         * @return builder
         * 
         */
        public Builder instanceFamily(Output<String> instanceFamily) {
            $.instanceFamily = instanceFamily;
            return this;
        }

        /**
         * @param instanceFamily Instance family. Valid values are `t2`, `t3`, `t3a`, `t4g`.
         * 
         * @return builder
         * 
         */
        public Builder instanceFamily(String instanceFamily) {
            return instanceFamily(Output.of(instanceFamily));
        }

        public Builder timeouts(@Nullable Output<DefaultCreditSpecificationTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(DefaultCreditSpecificationTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public DefaultCreditSpecificationArgs build() {
            if ($.cpuCredits == null) {
                throw new MissingRequiredPropertyException("DefaultCreditSpecificationArgs", "cpuCredits");
            }
            if ($.instanceFamily == null) {
                throw new MissingRequiredPropertyException("DefaultCreditSpecificationArgs", "instanceFamily");
            }
            return $;
        }
    }

}
