// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dlm.outputs;

import com.pulumi.aws.dlm.outputs.LifecyclePolicyPolicyDetailsAction;
import com.pulumi.aws.dlm.outputs.LifecyclePolicyPolicyDetailsEventSource;
import com.pulumi.aws.dlm.outputs.LifecyclePolicyPolicyDetailsParameters;
import com.pulumi.aws.dlm.outputs.LifecyclePolicyPolicyDetailsSchedule;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LifecyclePolicyPolicyDetails {
    private @Nullable LifecyclePolicyPolicyDetailsAction action;
    private @Nullable LifecyclePolicyPolicyDetailsEventSource eventSource;
    private @Nullable LifecyclePolicyPolicyDetailsParameters parameters;
    private @Nullable String policyType;
    private @Nullable String resourceLocations;
    private @Nullable List<String> resourceTypes;
    private @Nullable List<LifecyclePolicyPolicyDetailsSchedule> schedules;
    private @Nullable Map<String,String> targetTags;

    private LifecyclePolicyPolicyDetails() {}
    public Optional<LifecyclePolicyPolicyDetailsAction> action() {
        return Optional.ofNullable(this.action);
    }
    public Optional<LifecyclePolicyPolicyDetailsEventSource> eventSource() {
        return Optional.ofNullable(this.eventSource);
    }
    public Optional<LifecyclePolicyPolicyDetailsParameters> parameters() {
        return Optional.ofNullable(this.parameters);
    }
    public Optional<String> policyType() {
        return Optional.ofNullable(this.policyType);
    }
    public Optional<String> resourceLocations() {
        return Optional.ofNullable(this.resourceLocations);
    }
    public List<String> resourceTypes() {
        return this.resourceTypes == null ? List.of() : this.resourceTypes;
    }
    public List<LifecyclePolicyPolicyDetailsSchedule> schedules() {
        return this.schedules == null ? List.of() : this.schedules;
    }
    public Map<String,String> targetTags() {
        return this.targetTags == null ? Map.of() : this.targetTags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LifecyclePolicyPolicyDetails defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable LifecyclePolicyPolicyDetailsAction action;
        private @Nullable LifecyclePolicyPolicyDetailsEventSource eventSource;
        private @Nullable LifecyclePolicyPolicyDetailsParameters parameters;
        private @Nullable String policyType;
        private @Nullable String resourceLocations;
        private @Nullable List<String> resourceTypes;
        private @Nullable List<LifecyclePolicyPolicyDetailsSchedule> schedules;
        private @Nullable Map<String,String> targetTags;
        public Builder() {}
        public Builder(LifecyclePolicyPolicyDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.eventSource = defaults.eventSource;
    	      this.parameters = defaults.parameters;
    	      this.policyType = defaults.policyType;
    	      this.resourceLocations = defaults.resourceLocations;
    	      this.resourceTypes = defaults.resourceTypes;
    	      this.schedules = defaults.schedules;
    	      this.targetTags = defaults.targetTags;
        }

        @CustomType.Setter
        public Builder action(@Nullable LifecyclePolicyPolicyDetailsAction action) {

            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder eventSource(@Nullable LifecyclePolicyPolicyDetailsEventSource eventSource) {

            this.eventSource = eventSource;
            return this;
        }
        @CustomType.Setter
        public Builder parameters(@Nullable LifecyclePolicyPolicyDetailsParameters parameters) {

            this.parameters = parameters;
            return this;
        }
        @CustomType.Setter
        public Builder policyType(@Nullable String policyType) {

            this.policyType = policyType;
            return this;
        }
        @CustomType.Setter
        public Builder resourceLocations(@Nullable String resourceLocations) {

            this.resourceLocations = resourceLocations;
            return this;
        }
        @CustomType.Setter
        public Builder resourceTypes(@Nullable List<String> resourceTypes) {

            this.resourceTypes = resourceTypes;
            return this;
        }
        public Builder resourceTypes(String... resourceTypes) {
            return resourceTypes(List.of(resourceTypes));
        }
        @CustomType.Setter
        public Builder schedules(@Nullable List<LifecyclePolicyPolicyDetailsSchedule> schedules) {

            this.schedules = schedules;
            return this;
        }
        public Builder schedules(LifecyclePolicyPolicyDetailsSchedule... schedules) {
            return schedules(List.of(schedules));
        }
        @CustomType.Setter
        public Builder targetTags(@Nullable Map<String,String> targetTags) {

            this.targetTags = targetTags;
            return this;
        }
        public LifecyclePolicyPolicyDetails build() {
            final var _resultValue = new LifecyclePolicyPolicyDetails();
            _resultValue.action = action;
            _resultValue.eventSource = eventSource;
            _resultValue.parameters = parameters;
            _resultValue.policyType = policyType;
            _resultValue.resourceLocations = resourceLocations;
            _resultValue.resourceTypes = resourceTypes;
            _resultValue.schedules = schedules;
            _resultValue.targetTags = targetTags;
            return _resultValue;
        }
    }
}
