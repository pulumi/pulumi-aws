// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.inputs;

import com.pulumi.aws.bedrock.inputs.AgentAgentActionGroupActionGroupExecutorArgs;
import com.pulumi.aws.bedrock.inputs.AgentAgentActionGroupApiSchemaArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AgentAgentActionGroupState extends com.pulumi.resources.ResourceArgs {

    public static final AgentAgentActionGroupState Empty = new AgentAgentActionGroupState();

    /**
     * Configuration of the executor for the Action Group.
     * 
     */
    @Import(name="actionGroupExecutor")
    private @Nullable Output<AgentAgentActionGroupActionGroupExecutorArgs> actionGroupExecutor;

    /**
     * @return Configuration of the executor for the Action Group.
     * 
     */
    public Optional<Output<AgentAgentActionGroupActionGroupExecutorArgs>> actionGroupExecutor() {
        return Optional.ofNullable(this.actionGroupExecutor);
    }

    @Import(name="actionGroupId")
    private @Nullable Output<String> actionGroupId;

    public Optional<Output<String>> actionGroupId() {
        return Optional.ofNullable(this.actionGroupId);
    }

    /**
     * Name of the Agent Action Group.
     * 
     */
    @Import(name="actionGroupName")
    private @Nullable Output<String> actionGroupName;

    /**
     * @return Name of the Agent Action Group.
     * 
     */
    public Optional<Output<String>> actionGroupName() {
        return Optional.ofNullable(this.actionGroupName);
    }

    @Import(name="actionGroupState")
    private @Nullable Output<String> actionGroupState;

    public Optional<Output<String>> actionGroupState() {
        return Optional.ofNullable(this.actionGroupState);
    }

    /**
     * Id of the Agent for the Action Group.
     * 
     */
    @Import(name="agentId")
    private @Nullable Output<String> agentId;

    /**
     * @return Id of the Agent for the Action Group.
     * 
     */
    public Optional<Output<String>> agentId() {
        return Optional.ofNullable(this.agentId);
    }

    /**
     * Version of the Agent to attach the Action Group to.
     * 
     */
    @Import(name="agentVersion")
    private @Nullable Output<String> agentVersion;

    /**
     * @return Version of the Agent to attach the Action Group to.
     * 
     */
    public Optional<Output<String>> agentVersion() {
        return Optional.ofNullable(this.agentVersion);
    }

    /**
     * Configuration of the API Schema for the Action Group.
     * 
     */
    @Import(name="apiSchema")
    private @Nullable Output<AgentAgentActionGroupApiSchemaArgs> apiSchema;

    /**
     * @return Configuration of the API Schema for the Action Group.
     * 
     */
    public Optional<Output<AgentAgentActionGroupApiSchemaArgs>> apiSchema() {
        return Optional.ofNullable(this.apiSchema);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="parentActionGroupSignature")
    private @Nullable Output<String> parentActionGroupSignature;

    public Optional<Output<String>> parentActionGroupSignature() {
        return Optional.ofNullable(this.parentActionGroupSignature);
    }

    @Import(name="skipResourceInUseCheck")
    private @Nullable Output<Boolean> skipResourceInUseCheck;

    public Optional<Output<Boolean>> skipResourceInUseCheck() {
        return Optional.ofNullable(this.skipResourceInUseCheck);
    }

    private AgentAgentActionGroupState() {}

    private AgentAgentActionGroupState(AgentAgentActionGroupState $) {
        this.actionGroupExecutor = $.actionGroupExecutor;
        this.actionGroupId = $.actionGroupId;
        this.actionGroupName = $.actionGroupName;
        this.actionGroupState = $.actionGroupState;
        this.agentId = $.agentId;
        this.agentVersion = $.agentVersion;
        this.apiSchema = $.apiSchema;
        this.description = $.description;
        this.parentActionGroupSignature = $.parentActionGroupSignature;
        this.skipResourceInUseCheck = $.skipResourceInUseCheck;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentAgentActionGroupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentAgentActionGroupState $;

        public Builder() {
            $ = new AgentAgentActionGroupState();
        }

        public Builder(AgentAgentActionGroupState defaults) {
            $ = new AgentAgentActionGroupState(Objects.requireNonNull(defaults));
        }

        /**
         * @param actionGroupExecutor Configuration of the executor for the Action Group.
         * 
         * @return builder
         * 
         */
        public Builder actionGroupExecutor(@Nullable Output<AgentAgentActionGroupActionGroupExecutorArgs> actionGroupExecutor) {
            $.actionGroupExecutor = actionGroupExecutor;
            return this;
        }

        /**
         * @param actionGroupExecutor Configuration of the executor for the Action Group.
         * 
         * @return builder
         * 
         */
        public Builder actionGroupExecutor(AgentAgentActionGroupActionGroupExecutorArgs actionGroupExecutor) {
            return actionGroupExecutor(Output.of(actionGroupExecutor));
        }

        public Builder actionGroupId(@Nullable Output<String> actionGroupId) {
            $.actionGroupId = actionGroupId;
            return this;
        }

        public Builder actionGroupId(String actionGroupId) {
            return actionGroupId(Output.of(actionGroupId));
        }

        /**
         * @param actionGroupName Name of the Agent Action Group.
         * 
         * @return builder
         * 
         */
        public Builder actionGroupName(@Nullable Output<String> actionGroupName) {
            $.actionGroupName = actionGroupName;
            return this;
        }

        /**
         * @param actionGroupName Name of the Agent Action Group.
         * 
         * @return builder
         * 
         */
        public Builder actionGroupName(String actionGroupName) {
            return actionGroupName(Output.of(actionGroupName));
        }

        public Builder actionGroupState(@Nullable Output<String> actionGroupState) {
            $.actionGroupState = actionGroupState;
            return this;
        }

        public Builder actionGroupState(String actionGroupState) {
            return actionGroupState(Output.of(actionGroupState));
        }

        /**
         * @param agentId Id of the Agent for the Action Group.
         * 
         * @return builder
         * 
         */
        public Builder agentId(@Nullable Output<String> agentId) {
            $.agentId = agentId;
            return this;
        }

        /**
         * @param agentId Id of the Agent for the Action Group.
         * 
         * @return builder
         * 
         */
        public Builder agentId(String agentId) {
            return agentId(Output.of(agentId));
        }

        /**
         * @param agentVersion Version of the Agent to attach the Action Group to.
         * 
         * @return builder
         * 
         */
        public Builder agentVersion(@Nullable Output<String> agentVersion) {
            $.agentVersion = agentVersion;
            return this;
        }

        /**
         * @param agentVersion Version of the Agent to attach the Action Group to.
         * 
         * @return builder
         * 
         */
        public Builder agentVersion(String agentVersion) {
            return agentVersion(Output.of(agentVersion));
        }

        /**
         * @param apiSchema Configuration of the API Schema for the Action Group.
         * 
         * @return builder
         * 
         */
        public Builder apiSchema(@Nullable Output<AgentAgentActionGroupApiSchemaArgs> apiSchema) {
            $.apiSchema = apiSchema;
            return this;
        }

        /**
         * @param apiSchema Configuration of the API Schema for the Action Group.
         * 
         * @return builder
         * 
         */
        public Builder apiSchema(AgentAgentActionGroupApiSchemaArgs apiSchema) {
            return apiSchema(Output.of(apiSchema));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder parentActionGroupSignature(@Nullable Output<String> parentActionGroupSignature) {
            $.parentActionGroupSignature = parentActionGroupSignature;
            return this;
        }

        public Builder parentActionGroupSignature(String parentActionGroupSignature) {
            return parentActionGroupSignature(Output.of(parentActionGroupSignature));
        }

        public Builder skipResourceInUseCheck(@Nullable Output<Boolean> skipResourceInUseCheck) {
            $.skipResourceInUseCheck = skipResourceInUseCheck;
            return this;
        }

        public Builder skipResourceInUseCheck(Boolean skipResourceInUseCheck) {
            return skipResourceInUseCheck(Output.of(skipResourceInUseCheck));
        }

        public AgentAgentActionGroupState build() {
            return $;
        }
    }

}
