// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.GetDataSetLogicalTableMapDataTransformCreateColumnsOperationColumn;
import com.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetDataSetLogicalTableMapDataTransformCreateColumnsOperation {
    private @Nullable List<GetDataSetLogicalTableMapDataTransformCreateColumnsOperationColumn> columns;

    private GetDataSetLogicalTableMapDataTransformCreateColumnsOperation() {}
    public List<GetDataSetLogicalTableMapDataTransformCreateColumnsOperationColumn> columns() {
        return this.columns == null ? List.of() : this.columns;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDataSetLogicalTableMapDataTransformCreateColumnsOperation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetDataSetLogicalTableMapDataTransformCreateColumnsOperationColumn> columns;
        public Builder() {}
        public Builder(GetDataSetLogicalTableMapDataTransformCreateColumnsOperation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.columns = defaults.columns;
        }

        @CustomType.Setter
        public Builder columns(@Nullable List<GetDataSetLogicalTableMapDataTransformCreateColumnsOperationColumn> columns) {
            this.columns = columns;
            return this;
        }
        public Builder columns(GetDataSetLogicalTableMapDataTransformCreateColumnsOperationColumn... columns) {
            return columns(List.of(columns));
        }
        public GetDataSetLogicalTableMapDataTransformCreateColumnsOperation build() {
            final var o = new GetDataSetLogicalTableMapDataTransformCreateColumnsOperation();
            o.columns = columns;
            return o;
        }
    }
}
