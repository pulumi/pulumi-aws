// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ssm.outputs;

import com.pulumi.aws.ssm.outputs.MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfig;
import com.pulumi.aws.ssm.outputs.MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfig;
import com.pulumi.aws.ssm.outputs.MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameter;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters {
    private @Nullable MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfig cloudwatchConfig;
    private @Nullable String comment;
    private @Nullable String documentHash;
    private @Nullable String documentHashType;
    private @Nullable String documentVersion;
    private @Nullable MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfig notificationConfig;
    private @Nullable String outputS3Bucket;
    private @Nullable String outputS3KeyPrefix;
    private @Nullable List<MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameter> parameters;
    private @Nullable String serviceRoleArn;
    private @Nullable Integer timeoutSeconds;

    private MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters() {}
    public Optional<MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfig> cloudwatchConfig() {
        return Optional.ofNullable(this.cloudwatchConfig);
    }
    public Optional<String> comment() {
        return Optional.ofNullable(this.comment);
    }
    public Optional<String> documentHash() {
        return Optional.ofNullable(this.documentHash);
    }
    public Optional<String> documentHashType() {
        return Optional.ofNullable(this.documentHashType);
    }
    public Optional<String> documentVersion() {
        return Optional.ofNullable(this.documentVersion);
    }
    public Optional<MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfig> notificationConfig() {
        return Optional.ofNullable(this.notificationConfig);
    }
    public Optional<String> outputS3Bucket() {
        return Optional.ofNullable(this.outputS3Bucket);
    }
    public Optional<String> outputS3KeyPrefix() {
        return Optional.ofNullable(this.outputS3KeyPrefix);
    }
    public List<MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameter> parameters() {
        return this.parameters == null ? List.of() : this.parameters;
    }
    public Optional<String> serviceRoleArn() {
        return Optional.ofNullable(this.serviceRoleArn);
    }
    public Optional<Integer> timeoutSeconds() {
        return Optional.ofNullable(this.timeoutSeconds);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfig cloudwatchConfig;
        private @Nullable String comment;
        private @Nullable String documentHash;
        private @Nullable String documentHashType;
        private @Nullable String documentVersion;
        private @Nullable MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfig notificationConfig;
        private @Nullable String outputS3Bucket;
        private @Nullable String outputS3KeyPrefix;
        private @Nullable List<MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameter> parameters;
        private @Nullable String serviceRoleArn;
        private @Nullable Integer timeoutSeconds;
        public Builder() {}
        public Builder(MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudwatchConfig = defaults.cloudwatchConfig;
    	      this.comment = defaults.comment;
    	      this.documentHash = defaults.documentHash;
    	      this.documentHashType = defaults.documentHashType;
    	      this.documentVersion = defaults.documentVersion;
    	      this.notificationConfig = defaults.notificationConfig;
    	      this.outputS3Bucket = defaults.outputS3Bucket;
    	      this.outputS3KeyPrefix = defaults.outputS3KeyPrefix;
    	      this.parameters = defaults.parameters;
    	      this.serviceRoleArn = defaults.serviceRoleArn;
    	      this.timeoutSeconds = defaults.timeoutSeconds;
        }

        @CustomType.Setter
        public Builder cloudwatchConfig(@Nullable MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfig cloudwatchConfig) {
            this.cloudwatchConfig = cloudwatchConfig;
            return this;
        }
        @CustomType.Setter
        public Builder comment(@Nullable String comment) {
            this.comment = comment;
            return this;
        }
        @CustomType.Setter
        public Builder documentHash(@Nullable String documentHash) {
            this.documentHash = documentHash;
            return this;
        }
        @CustomType.Setter
        public Builder documentHashType(@Nullable String documentHashType) {
            this.documentHashType = documentHashType;
            return this;
        }
        @CustomType.Setter
        public Builder documentVersion(@Nullable String documentVersion) {
            this.documentVersion = documentVersion;
            return this;
        }
        @CustomType.Setter
        public Builder notificationConfig(@Nullable MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfig notificationConfig) {
            this.notificationConfig = notificationConfig;
            return this;
        }
        @CustomType.Setter
        public Builder outputS3Bucket(@Nullable String outputS3Bucket) {
            this.outputS3Bucket = outputS3Bucket;
            return this;
        }
        @CustomType.Setter
        public Builder outputS3KeyPrefix(@Nullable String outputS3KeyPrefix) {
            this.outputS3KeyPrefix = outputS3KeyPrefix;
            return this;
        }
        @CustomType.Setter
        public Builder parameters(@Nullable List<MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameter> parameters) {
            this.parameters = parameters;
            return this;
        }
        public Builder parameters(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameter... parameters) {
            return parameters(List.of(parameters));
        }
        @CustomType.Setter
        public Builder serviceRoleArn(@Nullable String serviceRoleArn) {
            this.serviceRoleArn = serviceRoleArn;
            return this;
        }
        @CustomType.Setter
        public Builder timeoutSeconds(@Nullable Integer timeoutSeconds) {
            this.timeoutSeconds = timeoutSeconds;
            return this;
        }
        public MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters build() {
            final var o = new MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters();
            o.cloudwatchConfig = cloudwatchConfig;
            o.comment = comment;
            o.documentHash = documentHash;
            o.documentHashType = documentHashType;
            o.documentVersion = documentVersion;
            o.notificationConfig = notificationConfig;
            o.outputS3Bucket = outputS3Bucket;
            o.outputS3KeyPrefix = outputS3KeyPrefix;
            o.parameters = parameters;
            o.serviceRoleArn = serviceRoleArn;
            o.timeoutSeconds = timeoutSeconds;
            return o;
        }
    }
}
