// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker.inputs;

import com.pulumi.aws.sagemaker.inputs.ModelPrimaryContainerImageConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ModelPrimaryContainerArgs extends com.pulumi.resources.ResourceArgs {

    public static final ModelPrimaryContainerArgs Empty = new ModelPrimaryContainerArgs();

    @Import(name="containerHostname")
    private @Nullable Output<String> containerHostname;

    public Optional<Output<String>> containerHostname() {
        return Optional.ofNullable(this.containerHostname);
    }

    @Import(name="environment")
    private @Nullable Output<Map<String,String>> environment;

    public Optional<Output<Map<String,String>>> environment() {
        return Optional.ofNullable(this.environment);
    }

    @Import(name="image", required=true)
    private Output<String> image;

    public Output<String> image() {
        return this.image;
    }

    @Import(name="imageConfig")
    private @Nullable Output<ModelPrimaryContainerImageConfigArgs> imageConfig;

    public Optional<Output<ModelPrimaryContainerImageConfigArgs>> imageConfig() {
        return Optional.ofNullable(this.imageConfig);
    }

    @Import(name="mode")
    private @Nullable Output<String> mode;

    public Optional<Output<String>> mode() {
        return Optional.ofNullable(this.mode);
    }

    @Import(name="modelDataUrl")
    private @Nullable Output<String> modelDataUrl;

    public Optional<Output<String>> modelDataUrl() {
        return Optional.ofNullable(this.modelDataUrl);
    }

    private ModelPrimaryContainerArgs() {}

    private ModelPrimaryContainerArgs(ModelPrimaryContainerArgs $) {
        this.containerHostname = $.containerHostname;
        this.environment = $.environment;
        this.image = $.image;
        this.imageConfig = $.imageConfig;
        this.mode = $.mode;
        this.modelDataUrl = $.modelDataUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ModelPrimaryContainerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ModelPrimaryContainerArgs $;

        public Builder() {
            $ = new ModelPrimaryContainerArgs();
        }

        public Builder(ModelPrimaryContainerArgs defaults) {
            $ = new ModelPrimaryContainerArgs(Objects.requireNonNull(defaults));
        }

        public Builder containerHostname(@Nullable Output<String> containerHostname) {
            $.containerHostname = containerHostname;
            return this;
        }

        public Builder containerHostname(String containerHostname) {
            return containerHostname(Output.of(containerHostname));
        }

        public Builder environment(@Nullable Output<Map<String,String>> environment) {
            $.environment = environment;
            return this;
        }

        public Builder environment(Map<String,String> environment) {
            return environment(Output.of(environment));
        }

        public Builder image(Output<String> image) {
            $.image = image;
            return this;
        }

        public Builder image(String image) {
            return image(Output.of(image));
        }

        public Builder imageConfig(@Nullable Output<ModelPrimaryContainerImageConfigArgs> imageConfig) {
            $.imageConfig = imageConfig;
            return this;
        }

        public Builder imageConfig(ModelPrimaryContainerImageConfigArgs imageConfig) {
            return imageConfig(Output.of(imageConfig));
        }

        public Builder mode(@Nullable Output<String> mode) {
            $.mode = mode;
            return this;
        }

        public Builder mode(String mode) {
            return mode(Output.of(mode));
        }

        public Builder modelDataUrl(@Nullable Output<String> modelDataUrl) {
            $.modelDataUrl = modelDataUrl;
            return this;
        }

        public Builder modelDataUrl(String modelDataUrl) {
            return modelDataUrl(Output.of(modelDataUrl));
        }

        public ModelPrimaryContainerArgs build() {
            $.image = Objects.requireNonNull($.image, "expected parameter 'image' to be non-null");
            return $;
        }
    }

}
