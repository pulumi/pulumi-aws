// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codebuild.outputs;

import com.pulumi.aws.codebuild.outputs.GetFleetScalingConfiguration;
import com.pulumi.aws.codebuild.outputs.GetFleetStatus;
import com.pulumi.aws.codebuild.outputs.GetFleetVpcConfig;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetFleetResult {
    /**
     * @return ARN of the Fleet.
     * 
     */
    private String arn;
    /**
     * @return Number of machines allocated to the ﬂeet.
     * 
     */
    private Integer baseCapacity;
    /**
     * @return Compute resources the compute fleet uses.
     * 
     */
    private String computeType;
    /**
     * @return Creation time of the fleet.
     * 
     */
    private String created;
    /**
     * @return Environment type of the compute fleet.
     * 
     */
    private String environmentType;
    /**
     * @return The service role associated with the compute fleet.
     * 
     */
    private String fleetServiceRole;
    /**
     * @return ARN of the Fleet.
     * 
     */
    private String id;
    /**
     * @return The Amazon Machine Image (AMI) of the compute fleet.
     * 
     */
    private String imageId;
    /**
     * @return Last modification time of the fleet.
     * 
     */
    private String lastModified;
    private String name;
    /**
     * @return Overflow behavior for compute fleet.
     * 
     */
    private String overflowBehavior;
    /**
     * @return Nested attribute containing information about the scaling configuration.
     * 
     */
    private List<GetFleetScalingConfiguration> scalingConfigurations;
    /**
     * @return Nested attribute containing information about the current status of the fleet.
     * 
     */
    private List<GetFleetStatus> statuses;
    /**
     * @return Mapping of Key-Value tags for the resource.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return Nested attribute containing information about the VPC configuration.
     * 
     */
    private List<GetFleetVpcConfig> vpcConfigs;

    private GetFleetResult() {}
    /**
     * @return ARN of the Fleet.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return Number of machines allocated to the ﬂeet.
     * 
     */
    public Integer baseCapacity() {
        return this.baseCapacity;
    }
    /**
     * @return Compute resources the compute fleet uses.
     * 
     */
    public String computeType() {
        return this.computeType;
    }
    /**
     * @return Creation time of the fleet.
     * 
     */
    public String created() {
        return this.created;
    }
    /**
     * @return Environment type of the compute fleet.
     * 
     */
    public String environmentType() {
        return this.environmentType;
    }
    /**
     * @return The service role associated with the compute fleet.
     * 
     */
    public String fleetServiceRole() {
        return this.fleetServiceRole;
    }
    /**
     * @return ARN of the Fleet.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Amazon Machine Image (AMI) of the compute fleet.
     * 
     */
    public String imageId() {
        return this.imageId;
    }
    /**
     * @return Last modification time of the fleet.
     * 
     */
    public String lastModified() {
        return this.lastModified;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return Overflow behavior for compute fleet.
     * 
     */
    public String overflowBehavior() {
        return this.overflowBehavior;
    }
    /**
     * @return Nested attribute containing information about the scaling configuration.
     * 
     */
    public List<GetFleetScalingConfiguration> scalingConfigurations() {
        return this.scalingConfigurations;
    }
    /**
     * @return Nested attribute containing information about the current status of the fleet.
     * 
     */
    public List<GetFleetStatus> statuses() {
        return this.statuses;
    }
    /**
     * @return Mapping of Key-Value tags for the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return Nested attribute containing information about the VPC configuration.
     * 
     */
    public List<GetFleetVpcConfig> vpcConfigs() {
        return this.vpcConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFleetResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private Integer baseCapacity;
        private String computeType;
        private String created;
        private String environmentType;
        private String fleetServiceRole;
        private String id;
        private String imageId;
        private String lastModified;
        private String name;
        private String overflowBehavior;
        private List<GetFleetScalingConfiguration> scalingConfigurations;
        private List<GetFleetStatus> statuses;
        private Map<String,String> tags;
        private List<GetFleetVpcConfig> vpcConfigs;
        public Builder() {}
        public Builder(GetFleetResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.baseCapacity = defaults.baseCapacity;
    	      this.computeType = defaults.computeType;
    	      this.created = defaults.created;
    	      this.environmentType = defaults.environmentType;
    	      this.fleetServiceRole = defaults.fleetServiceRole;
    	      this.id = defaults.id;
    	      this.imageId = defaults.imageId;
    	      this.lastModified = defaults.lastModified;
    	      this.name = defaults.name;
    	      this.overflowBehavior = defaults.overflowBehavior;
    	      this.scalingConfigurations = defaults.scalingConfigurations;
    	      this.statuses = defaults.statuses;
    	      this.tags = defaults.tags;
    	      this.vpcConfigs = defaults.vpcConfigs;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            if (arn == null) {
              throw new MissingRequiredPropertyException("GetFleetResult", "arn");
            }
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder baseCapacity(Integer baseCapacity) {
            if (baseCapacity == null) {
              throw new MissingRequiredPropertyException("GetFleetResult", "baseCapacity");
            }
            this.baseCapacity = baseCapacity;
            return this;
        }
        @CustomType.Setter
        public Builder computeType(String computeType) {
            if (computeType == null) {
              throw new MissingRequiredPropertyException("GetFleetResult", "computeType");
            }
            this.computeType = computeType;
            return this;
        }
        @CustomType.Setter
        public Builder created(String created) {
            if (created == null) {
              throw new MissingRequiredPropertyException("GetFleetResult", "created");
            }
            this.created = created;
            return this;
        }
        @CustomType.Setter
        public Builder environmentType(String environmentType) {
            if (environmentType == null) {
              throw new MissingRequiredPropertyException("GetFleetResult", "environmentType");
            }
            this.environmentType = environmentType;
            return this;
        }
        @CustomType.Setter
        public Builder fleetServiceRole(String fleetServiceRole) {
            if (fleetServiceRole == null) {
              throw new MissingRequiredPropertyException("GetFleetResult", "fleetServiceRole");
            }
            this.fleetServiceRole = fleetServiceRole;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetFleetResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder imageId(String imageId) {
            if (imageId == null) {
              throw new MissingRequiredPropertyException("GetFleetResult", "imageId");
            }
            this.imageId = imageId;
            return this;
        }
        @CustomType.Setter
        public Builder lastModified(String lastModified) {
            if (lastModified == null) {
              throw new MissingRequiredPropertyException("GetFleetResult", "lastModified");
            }
            this.lastModified = lastModified;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetFleetResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder overflowBehavior(String overflowBehavior) {
            if (overflowBehavior == null) {
              throw new MissingRequiredPropertyException("GetFleetResult", "overflowBehavior");
            }
            this.overflowBehavior = overflowBehavior;
            return this;
        }
        @CustomType.Setter
        public Builder scalingConfigurations(List<GetFleetScalingConfiguration> scalingConfigurations) {
            if (scalingConfigurations == null) {
              throw new MissingRequiredPropertyException("GetFleetResult", "scalingConfigurations");
            }
            this.scalingConfigurations = scalingConfigurations;
            return this;
        }
        public Builder scalingConfigurations(GetFleetScalingConfiguration... scalingConfigurations) {
            return scalingConfigurations(List.of(scalingConfigurations));
        }
        @CustomType.Setter
        public Builder statuses(List<GetFleetStatus> statuses) {
            if (statuses == null) {
              throw new MissingRequiredPropertyException("GetFleetResult", "statuses");
            }
            this.statuses = statuses;
            return this;
        }
        public Builder statuses(GetFleetStatus... statuses) {
            return statuses(List.of(statuses));
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetFleetResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder vpcConfigs(List<GetFleetVpcConfig> vpcConfigs) {
            if (vpcConfigs == null) {
              throw new MissingRequiredPropertyException("GetFleetResult", "vpcConfigs");
            }
            this.vpcConfigs = vpcConfigs;
            return this;
        }
        public Builder vpcConfigs(GetFleetVpcConfig... vpcConfigs) {
            return vpcConfigs(List.of(vpcConfigs));
        }
        public GetFleetResult build() {
            final var _resultValue = new GetFleetResult();
            _resultValue.arn = arn;
            _resultValue.baseCapacity = baseCapacity;
            _resultValue.computeType = computeType;
            _resultValue.created = created;
            _resultValue.environmentType = environmentType;
            _resultValue.fleetServiceRole = fleetServiceRole;
            _resultValue.id = id;
            _resultValue.imageId = imageId;
            _resultValue.lastModified = lastModified;
            _resultValue.name = name;
            _resultValue.overflowBehavior = overflowBehavior;
            _resultValue.scalingConfigurations = scalingConfigurations;
            _resultValue.statuses = statuses;
            _resultValue.tags = tags;
            _resultValue.vpcConfigs = vpcConfigs;
            return _resultValue;
        }
    }
}
