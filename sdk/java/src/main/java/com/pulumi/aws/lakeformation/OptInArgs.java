// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lakeformation;

import com.pulumi.aws.lakeformation.inputs.OptInConditionArgs;
import com.pulumi.aws.lakeformation.inputs.OptInPrincipalArgs;
import com.pulumi.aws.lakeformation.inputs.OptInResourceDataArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OptInArgs extends com.pulumi.resources.ResourceArgs {

    public static final OptInArgs Empty = new OptInArgs();

    /**
     * Lake Formation condition, which applies to permissions and opt-ins that contain an expression.
     * 
     */
    @Import(name="conditions")
    private @Nullable Output<List<OptInConditionArgs>> conditions;

    /**
     * @return Lake Formation condition, which applies to permissions and opt-ins that contain an expression.
     * 
     */
    public Optional<Output<List<OptInConditionArgs>>> conditions() {
        return Optional.ofNullable(this.conditions);
    }

    /**
     * Lake Formation principal. Supported principals are IAM users or IAM roles. See Principal for more details.
     * 
     */
    @Import(name="principals")
    private @Nullable Output<List<OptInPrincipalArgs>> principals;

    /**
     * @return Lake Formation principal. Supported principals are IAM users or IAM roles. See Principal for more details.
     * 
     */
    public Optional<Output<List<OptInPrincipalArgs>>> principals() {
        return Optional.ofNullable(this.principals);
    }

    /**
     * Structure for the resource. See Resource for more details.
     * 
     */
    @Import(name="resourceDatas")
    private @Nullable Output<List<OptInResourceDataArgs>> resourceDatas;

    /**
     * @return Structure for the resource. See Resource for more details.
     * 
     */
    public Optional<Output<List<OptInResourceDataArgs>>> resourceDatas() {
        return Optional.ofNullable(this.resourceDatas);
    }

    private OptInArgs() {}

    private OptInArgs(OptInArgs $) {
        this.conditions = $.conditions;
        this.principals = $.principals;
        this.resourceDatas = $.resourceDatas;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OptInArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OptInArgs $;

        public Builder() {
            $ = new OptInArgs();
        }

        public Builder(OptInArgs defaults) {
            $ = new OptInArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param conditions Lake Formation condition, which applies to permissions and opt-ins that contain an expression.
         * 
         * @return builder
         * 
         */
        public Builder conditions(@Nullable Output<List<OptInConditionArgs>> conditions) {
            $.conditions = conditions;
            return this;
        }

        /**
         * @param conditions Lake Formation condition, which applies to permissions and opt-ins that contain an expression.
         * 
         * @return builder
         * 
         */
        public Builder conditions(List<OptInConditionArgs> conditions) {
            return conditions(Output.of(conditions));
        }

        /**
         * @param conditions Lake Formation condition, which applies to permissions and opt-ins that contain an expression.
         * 
         * @return builder
         * 
         */
        public Builder conditions(OptInConditionArgs... conditions) {
            return conditions(List.of(conditions));
        }

        /**
         * @param principals Lake Formation principal. Supported principals are IAM users or IAM roles. See Principal for more details.
         * 
         * @return builder
         * 
         */
        public Builder principals(@Nullable Output<List<OptInPrincipalArgs>> principals) {
            $.principals = principals;
            return this;
        }

        /**
         * @param principals Lake Formation principal. Supported principals are IAM users or IAM roles. See Principal for more details.
         * 
         * @return builder
         * 
         */
        public Builder principals(List<OptInPrincipalArgs> principals) {
            return principals(Output.of(principals));
        }

        /**
         * @param principals Lake Formation principal. Supported principals are IAM users or IAM roles. See Principal for more details.
         * 
         * @return builder
         * 
         */
        public Builder principals(OptInPrincipalArgs... principals) {
            return principals(List.of(principals));
        }

        /**
         * @param resourceDatas Structure for the resource. See Resource for more details.
         * 
         * @return builder
         * 
         */
        public Builder resourceDatas(@Nullable Output<List<OptInResourceDataArgs>> resourceDatas) {
            $.resourceDatas = resourceDatas;
            return this;
        }

        /**
         * @param resourceDatas Structure for the resource. See Resource for more details.
         * 
         * @return builder
         * 
         */
        public Builder resourceDatas(List<OptInResourceDataArgs> resourceDatas) {
            return resourceDatas(Output.of(resourceDatas));
        }

        /**
         * @param resourceDatas Structure for the resource. See Resource for more details.
         * 
         * @return builder
         * 
         */
        public Builder resourceDatas(OptInResourceDataArgs... resourceDatas) {
            return resourceDatas(List.of(resourceDatas));
        }

        public OptInArgs build() {
            return $;
        }
    }

}
