// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appconfig;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExtensionAssociationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExtensionAssociationArgs Empty = new ExtensionAssociationArgs();

    /**
     * The ARN of the extension defined in the association.
     * 
     */
    @Import(name="extensionArn", required=true)
    private Output<String> extensionArn;

    /**
     * @return The ARN of the extension defined in the association.
     * 
     */
    public Output<String> extensionArn() {
        return this.extensionArn;
    }

    /**
     * The parameter names and values defined for the association.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<Map<String,String>> parameters;

    /**
     * @return The parameter names and values defined for the association.
     * 
     */
    public Optional<Output<Map<String,String>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * The ARN of the application, configuration profile, or environment to associate with the extension.
     * 
     */
    @Import(name="resourceArn", required=true)
    private Output<String> resourceArn;

    /**
     * @return The ARN of the application, configuration profile, or environment to associate with the extension.
     * 
     */
    public Output<String> resourceArn() {
        return this.resourceArn;
    }

    private ExtensionAssociationArgs() {}

    private ExtensionAssociationArgs(ExtensionAssociationArgs $) {
        this.extensionArn = $.extensionArn;
        this.parameters = $.parameters;
        this.resourceArn = $.resourceArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExtensionAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExtensionAssociationArgs $;

        public Builder() {
            $ = new ExtensionAssociationArgs();
        }

        public Builder(ExtensionAssociationArgs defaults) {
            $ = new ExtensionAssociationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param extensionArn The ARN of the extension defined in the association.
         * 
         * @return builder
         * 
         */
        public Builder extensionArn(Output<String> extensionArn) {
            $.extensionArn = extensionArn;
            return this;
        }

        /**
         * @param extensionArn The ARN of the extension defined in the association.
         * 
         * @return builder
         * 
         */
        public Builder extensionArn(String extensionArn) {
            return extensionArn(Output.of(extensionArn));
        }

        /**
         * @param parameters The parameter names and values defined for the association.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<Map<String,String>> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters The parameter names and values defined for the association.
         * 
         * @return builder
         * 
         */
        public Builder parameters(Map<String,String> parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param resourceArn The ARN of the application, configuration profile, or environment to associate with the extension.
         * 
         * @return builder
         * 
         */
        public Builder resourceArn(Output<String> resourceArn) {
            $.resourceArn = resourceArn;
            return this;
        }

        /**
         * @param resourceArn The ARN of the application, configuration profile, or environment to associate with the extension.
         * 
         * @return builder
         * 
         */
        public Builder resourceArn(String resourceArn) {
            return resourceArn(Output.of(resourceArn));
        }

        public ExtensionAssociationArgs build() {
            $.extensionArn = Objects.requireNonNull($.extensionArn, "expected parameter 'extensionArn' to be non-null");
            $.resourceArn = Objects.requireNonNull($.resourceArn, "expected parameter 'resourceArn' to be non-null");
            return $;
        }
    }

}
