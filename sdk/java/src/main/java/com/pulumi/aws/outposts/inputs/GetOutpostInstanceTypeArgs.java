// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.outposts.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetOutpostInstanceTypeArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetOutpostInstanceTypeArgs Empty = new GetOutpostInstanceTypeArgs();

    @Import(name="arn", required=true)
    private Output<String> arn;

    public Output<String> arn() {
        return this.arn;
    }

    @Import(name="instanceType")
    private @Nullable Output<String> instanceType;

    public Optional<Output<String>> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    @Import(name="preferredInstanceTypes")
    private @Nullable Output<List<String>> preferredInstanceTypes;

    public Optional<Output<List<String>>> preferredInstanceTypes() {
        return Optional.ofNullable(this.preferredInstanceTypes);
    }

    private GetOutpostInstanceTypeArgs() {}

    private GetOutpostInstanceTypeArgs(GetOutpostInstanceTypeArgs $) {
        this.arn = $.arn;
        this.instanceType = $.instanceType;
        this.preferredInstanceTypes = $.preferredInstanceTypes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetOutpostInstanceTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetOutpostInstanceTypeArgs $;

        public Builder() {
            $ = new GetOutpostInstanceTypeArgs();
        }

        public Builder(GetOutpostInstanceTypeArgs defaults) {
            $ = new GetOutpostInstanceTypeArgs(Objects.requireNonNull(defaults));
        }

        public Builder arn(Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder instanceType(@Nullable Output<String> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        public Builder instanceType(String instanceType) {
            return instanceType(Output.of(instanceType));
        }

        public Builder preferredInstanceTypes(@Nullable Output<List<String>> preferredInstanceTypes) {
            $.preferredInstanceTypes = preferredInstanceTypes;
            return this;
        }

        public Builder preferredInstanceTypes(List<String> preferredInstanceTypes) {
            return preferredInstanceTypes(Output.of(preferredInstanceTypes));
        }

        public Builder preferredInstanceTypes(String... preferredInstanceTypes) {
            return preferredInstanceTypes(List.of(preferredInstanceTypes));
        }

        public GetOutpostInstanceTypeArgs build() {
            $.arn = Objects.requireNonNull($.arn, "expected parameter 'arn' to be non-null");
            return $;
        }
    }

}
