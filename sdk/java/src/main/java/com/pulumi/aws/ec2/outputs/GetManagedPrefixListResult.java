// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.outputs;

import com.pulumi.aws.ec2.outputs.GetManagedPrefixListEntry;
import com.pulumi.aws.ec2.outputs.GetManagedPrefixListFilter;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetManagedPrefixListResult {
    /**
     * @return Address family of the prefix list. Valid values are `IPv4` and `IPv6`.
     * 
     */
    private String addressFamily;
    /**
     * @return ARN of the selected prefix list.
     * 
     */
    private String arn;
    /**
     * @return Set of entries in this prefix list. Each entry is an object with `cidr` and `description`.
     * 
     */
    private List<GetManagedPrefixListEntry> entries;
    private @Nullable List<GetManagedPrefixListFilter> filters;
    /**
     * @return ID of the selected prefix list.
     * 
     */
    private String id;
    /**
     * @return When then prefix list is managed, the maximum number of entries it supports, or null otherwise.
     * 
     */
    private Integer maxEntries;
    /**
     * @return Name of the selected prefix list.
     * 
     */
    private String name;
    /**
     * @return Account ID of the owner of a customer-managed prefix list, or `AWS` otherwise.
     * 
     */
    private String ownerId;
    /**
     * @return Map of tags assigned to the resource.
     * 
     */
    private Map<String,String> tags;
    private Integer version;

    private GetManagedPrefixListResult() {}
    /**
     * @return Address family of the prefix list. Valid values are `IPv4` and `IPv6`.
     * 
     */
    public String addressFamily() {
        return this.addressFamily;
    }
    /**
     * @return ARN of the selected prefix list.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return Set of entries in this prefix list. Each entry is an object with `cidr` and `description`.
     * 
     */
    public List<GetManagedPrefixListEntry> entries() {
        return this.entries;
    }
    public List<GetManagedPrefixListFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return ID of the selected prefix list.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return When then prefix list is managed, the maximum number of entries it supports, or null otherwise.
     * 
     */
    public Integer maxEntries() {
        return this.maxEntries;
    }
    /**
     * @return Name of the selected prefix list.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Account ID of the owner of a customer-managed prefix list, or `AWS` otherwise.
     * 
     */
    public String ownerId() {
        return this.ownerId;
    }
    /**
     * @return Map of tags assigned to the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedPrefixListResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String addressFamily;
        private String arn;
        private List<GetManagedPrefixListEntry> entries;
        private @Nullable List<GetManagedPrefixListFilter> filters;
        private String id;
        private Integer maxEntries;
        private String name;
        private String ownerId;
        private Map<String,String> tags;
        private Integer version;
        public Builder() {}
        public Builder(GetManagedPrefixListResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addressFamily = defaults.addressFamily;
    	      this.arn = defaults.arn;
    	      this.entries = defaults.entries;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.maxEntries = defaults.maxEntries;
    	      this.name = defaults.name;
    	      this.ownerId = defaults.ownerId;
    	      this.tags = defaults.tags;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder addressFamily(String addressFamily) {
            if (addressFamily == null) {
              throw new MissingRequiredPropertyException("GetManagedPrefixListResult", "addressFamily");
            }
            this.addressFamily = addressFamily;
            return this;
        }
        @CustomType.Setter
        public Builder arn(String arn) {
            if (arn == null) {
              throw new MissingRequiredPropertyException("GetManagedPrefixListResult", "arn");
            }
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder entries(List<GetManagedPrefixListEntry> entries) {
            if (entries == null) {
              throw new MissingRequiredPropertyException("GetManagedPrefixListResult", "entries");
            }
            this.entries = entries;
            return this;
        }
        public Builder entries(GetManagedPrefixListEntry... entries) {
            return entries(List.of(entries));
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetManagedPrefixListFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetManagedPrefixListFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetManagedPrefixListResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder maxEntries(Integer maxEntries) {
            if (maxEntries == null) {
              throw new MissingRequiredPropertyException("GetManagedPrefixListResult", "maxEntries");
            }
            this.maxEntries = maxEntries;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetManagedPrefixListResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder ownerId(String ownerId) {
            if (ownerId == null) {
              throw new MissingRequiredPropertyException("GetManagedPrefixListResult", "ownerId");
            }
            this.ownerId = ownerId;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetManagedPrefixListResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetManagedPrefixListResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetManagedPrefixListResult build() {
            final var _resultValue = new GetManagedPrefixListResult();
            _resultValue.addressFamily = addressFamily;
            _resultValue.arn = arn;
            _resultValue.entries = entries;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.maxEntries = maxEntries;
            _resultValue.name = name;
            _resultValue.ownerId = ownerId;
            _resultValue.tags = tags;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
