// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.connect.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetLambdaFunctionAssociationPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetLambdaFunctionAssociationPlainArgs Empty = new GetLambdaFunctionAssociationPlainArgs();

    /**
     * ARN of the Lambda Function, omitting any version or alias qualifier.
     * 
     */
    @Import(name="functionArn", required=true)
    private String functionArn;

    /**
     * @return ARN of the Lambda Function, omitting any version or alias qualifier.
     * 
     */
    public String functionArn() {
        return this.functionArn;
    }

    /**
     * Identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
     * 
     */
    @Import(name="instanceId", required=true)
    private String instanceId;

    /**
     * @return Identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }

    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable String region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }

    private GetLambdaFunctionAssociationPlainArgs() {}

    private GetLambdaFunctionAssociationPlainArgs(GetLambdaFunctionAssociationPlainArgs $) {
        this.functionArn = $.functionArn;
        this.instanceId = $.instanceId;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLambdaFunctionAssociationPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLambdaFunctionAssociationPlainArgs $;

        public Builder() {
            $ = new GetLambdaFunctionAssociationPlainArgs();
        }

        public Builder(GetLambdaFunctionAssociationPlainArgs defaults) {
            $ = new GetLambdaFunctionAssociationPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param functionArn ARN of the Lambda Function, omitting any version or alias qualifier.
         * 
         * @return builder
         * 
         */
        public Builder functionArn(String functionArn) {
            $.functionArn = functionArn;
            return this;
        }

        /**
         * @param instanceId Identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable String region) {
            $.region = region;
            return this;
        }

        public GetLambdaFunctionAssociationPlainArgs build() {
            if ($.functionArn == null) {
                throw new MissingRequiredPropertyException("GetLambdaFunctionAssociationPlainArgs", "functionArn");
            }
            if ($.instanceId == null) {
                throw new MissingRequiredPropertyException("GetLambdaFunctionAssociationPlainArgs", "instanceId");
            }
            return $;
        }
    }

}
