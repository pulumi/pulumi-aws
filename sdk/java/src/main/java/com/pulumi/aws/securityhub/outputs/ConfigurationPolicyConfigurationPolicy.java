// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.securityhub.outputs;

import com.pulumi.aws.securityhub.outputs.ConfigurationPolicyConfigurationPolicySecurityControlsConfiguration;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConfigurationPolicyConfigurationPolicy {
    /**
     * @return A list that defines which security standards are enabled in the configuration policy.
     * 
     */
    private List<String> enabledStandardArns;
    /**
     * @return Defines which security controls are enabled in the configuration policy and any customizations to parameters affecting them. See below.
     * 
     */
    private @Nullable ConfigurationPolicyConfigurationPolicySecurityControlsConfiguration securityControlsConfiguration;
    /**
     * @return Indicates whether Security Hub is enabled in the policy.
     * 
     */
    private Boolean serviceEnabled;

    private ConfigurationPolicyConfigurationPolicy() {}
    /**
     * @return A list that defines which security standards are enabled in the configuration policy.
     * 
     */
    public List<String> enabledStandardArns() {
        return this.enabledStandardArns;
    }
    /**
     * @return Defines which security controls are enabled in the configuration policy and any customizations to parameters affecting them. See below.
     * 
     */
    public Optional<ConfigurationPolicyConfigurationPolicySecurityControlsConfiguration> securityControlsConfiguration() {
        return Optional.ofNullable(this.securityControlsConfiguration);
    }
    /**
     * @return Indicates whether Security Hub is enabled in the policy.
     * 
     */
    public Boolean serviceEnabled() {
        return this.serviceEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConfigurationPolicyConfigurationPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> enabledStandardArns;
        private @Nullable ConfigurationPolicyConfigurationPolicySecurityControlsConfiguration securityControlsConfiguration;
        private Boolean serviceEnabled;
        public Builder() {}
        public Builder(ConfigurationPolicyConfigurationPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabledStandardArns = defaults.enabledStandardArns;
    	      this.securityControlsConfiguration = defaults.securityControlsConfiguration;
    	      this.serviceEnabled = defaults.serviceEnabled;
        }

        @CustomType.Setter
        public Builder enabledStandardArns(List<String> enabledStandardArns) {
            if (enabledStandardArns == null) {
              throw new MissingRequiredPropertyException("ConfigurationPolicyConfigurationPolicy", "enabledStandardArns");
            }
            this.enabledStandardArns = enabledStandardArns;
            return this;
        }
        public Builder enabledStandardArns(String... enabledStandardArns) {
            return enabledStandardArns(List.of(enabledStandardArns));
        }
        @CustomType.Setter
        public Builder securityControlsConfiguration(@Nullable ConfigurationPolicyConfigurationPolicySecurityControlsConfiguration securityControlsConfiguration) {

            this.securityControlsConfiguration = securityControlsConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder serviceEnabled(Boolean serviceEnabled) {
            if (serviceEnabled == null) {
              throw new MissingRequiredPropertyException("ConfigurationPolicyConfigurationPolicy", "serviceEnabled");
            }
            this.serviceEnabled = serviceEnabled;
            return this;
        }
        public ConfigurationPolicyConfigurationPolicy build() {
            final var _resultValue = new ConfigurationPolicyConfigurationPolicy();
            _resultValue.enabledStandardArns = enabledStandardArns;
            _resultValue.securityControlsConfiguration = securityControlsConfiguration;
            _resultValue.serviceEnabled = serviceEnabled;
            return _resultValue;
        }
    }
}
