// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2;

import com.pulumi.aws.ec2.inputs.NetworkInterfacePermissionTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkInterfacePermissionArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkInterfacePermissionArgs Empty = new NetworkInterfacePermissionArgs();

    /**
     * The Amazon Web Services account ID.
     * 
     */
    @Import(name="awsAccountId", required=true)
    private Output<String> awsAccountId;

    /**
     * @return The Amazon Web Services account ID.
     * 
     */
    public Output<String> awsAccountId() {
        return this.awsAccountId;
    }

    /**
     * The ID of the network interface.
     * 
     */
    @Import(name="networkInterfaceId", required=true)
    private Output<String> networkInterfaceId;

    /**
     * @return The ID of the network interface.
     * 
     */
    public Output<String> networkInterfaceId() {
        return this.networkInterfaceId;
    }

    /**
     * The type of permission to grant. Valid values are `INSTANCE-ATTACH` or `EIP-ASSOCIATE`.
     * 
     */
    @Import(name="permission", required=true)
    private Output<String> permission;

    /**
     * @return The type of permission to grant. Valid values are `INSTANCE-ATTACH` or `EIP-ASSOCIATE`.
     * 
     */
    public Output<String> permission() {
        return this.permission;
    }

    @Import(name="timeouts")
    private @Nullable Output<NetworkInterfacePermissionTimeoutsArgs> timeouts;

    public Optional<Output<NetworkInterfacePermissionTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private NetworkInterfacePermissionArgs() {}

    private NetworkInterfacePermissionArgs(NetworkInterfacePermissionArgs $) {
        this.awsAccountId = $.awsAccountId;
        this.networkInterfaceId = $.networkInterfaceId;
        this.permission = $.permission;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkInterfacePermissionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkInterfacePermissionArgs $;

        public Builder() {
            $ = new NetworkInterfacePermissionArgs();
        }

        public Builder(NetworkInterfacePermissionArgs defaults) {
            $ = new NetworkInterfacePermissionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param awsAccountId The Amazon Web Services account ID.
         * 
         * @return builder
         * 
         */
        public Builder awsAccountId(Output<String> awsAccountId) {
            $.awsAccountId = awsAccountId;
            return this;
        }

        /**
         * @param awsAccountId The Amazon Web Services account ID.
         * 
         * @return builder
         * 
         */
        public Builder awsAccountId(String awsAccountId) {
            return awsAccountId(Output.of(awsAccountId));
        }

        /**
         * @param networkInterfaceId The ID of the network interface.
         * 
         * @return builder
         * 
         */
        public Builder networkInterfaceId(Output<String> networkInterfaceId) {
            $.networkInterfaceId = networkInterfaceId;
            return this;
        }

        /**
         * @param networkInterfaceId The ID of the network interface.
         * 
         * @return builder
         * 
         */
        public Builder networkInterfaceId(String networkInterfaceId) {
            return networkInterfaceId(Output.of(networkInterfaceId));
        }

        /**
         * @param permission The type of permission to grant. Valid values are `INSTANCE-ATTACH` or `EIP-ASSOCIATE`.
         * 
         * @return builder
         * 
         */
        public Builder permission(Output<String> permission) {
            $.permission = permission;
            return this;
        }

        /**
         * @param permission The type of permission to grant. Valid values are `INSTANCE-ATTACH` or `EIP-ASSOCIATE`.
         * 
         * @return builder
         * 
         */
        public Builder permission(String permission) {
            return permission(Output.of(permission));
        }

        public Builder timeouts(@Nullable Output<NetworkInterfacePermissionTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(NetworkInterfacePermissionTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public NetworkInterfacePermissionArgs build() {
            if ($.awsAccountId == null) {
                throw new MissingRequiredPropertyException("NetworkInterfacePermissionArgs", "awsAccountId");
            }
            if ($.networkInterfaceId == null) {
                throw new MissingRequiredPropertyException("NetworkInterfacePermissionArgs", "networkInterfaceId");
            }
            if ($.permission == null) {
                throw new MissingRequiredPropertyException("NetworkInterfacePermissionArgs", "permission");
            }
            return $;
        }
    }

}
