// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2transitgateway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MulticastGroupSourceState extends com.pulumi.resources.ResourceArgs {

    public static final MulticastGroupSourceState Empty = new MulticastGroupSourceState();

    /**
     * The IP address assigned to the transit gateway multicast group.
     * 
     */
    @Import(name="groupIpAddress")
    private @Nullable Output<String> groupIpAddress;

    /**
     * @return The IP address assigned to the transit gateway multicast group.
     * 
     */
    public Optional<Output<String>> groupIpAddress() {
        return Optional.ofNullable(this.groupIpAddress);
    }

    /**
     * The group members&#39; network interface ID to register with the transit gateway multicast group.
     * 
     */
    @Import(name="networkInterfaceId")
    private @Nullable Output<String> networkInterfaceId;

    /**
     * @return The group members&#39; network interface ID to register with the transit gateway multicast group.
     * 
     */
    public Optional<Output<String>> networkInterfaceId() {
        return Optional.ofNullable(this.networkInterfaceId);
    }

    /**
     * The ID of the transit gateway multicast domain.
     * 
     */
    @Import(name="transitGatewayMulticastDomainId")
    private @Nullable Output<String> transitGatewayMulticastDomainId;

    /**
     * @return The ID of the transit gateway multicast domain.
     * 
     */
    public Optional<Output<String>> transitGatewayMulticastDomainId() {
        return Optional.ofNullable(this.transitGatewayMulticastDomainId);
    }

    private MulticastGroupSourceState() {}

    private MulticastGroupSourceState(MulticastGroupSourceState $) {
        this.groupIpAddress = $.groupIpAddress;
        this.networkInterfaceId = $.networkInterfaceId;
        this.transitGatewayMulticastDomainId = $.transitGatewayMulticastDomainId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MulticastGroupSourceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MulticastGroupSourceState $;

        public Builder() {
            $ = new MulticastGroupSourceState();
        }

        public Builder(MulticastGroupSourceState defaults) {
            $ = new MulticastGroupSourceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param groupIpAddress The IP address assigned to the transit gateway multicast group.
         * 
         * @return builder
         * 
         */
        public Builder groupIpAddress(@Nullable Output<String> groupIpAddress) {
            $.groupIpAddress = groupIpAddress;
            return this;
        }

        /**
         * @param groupIpAddress The IP address assigned to the transit gateway multicast group.
         * 
         * @return builder
         * 
         */
        public Builder groupIpAddress(String groupIpAddress) {
            return groupIpAddress(Output.of(groupIpAddress));
        }

        /**
         * @param networkInterfaceId The group members&#39; network interface ID to register with the transit gateway multicast group.
         * 
         * @return builder
         * 
         */
        public Builder networkInterfaceId(@Nullable Output<String> networkInterfaceId) {
            $.networkInterfaceId = networkInterfaceId;
            return this;
        }

        /**
         * @param networkInterfaceId The group members&#39; network interface ID to register with the transit gateway multicast group.
         * 
         * @return builder
         * 
         */
        public Builder networkInterfaceId(String networkInterfaceId) {
            return networkInterfaceId(Output.of(networkInterfaceId));
        }

        /**
         * @param transitGatewayMulticastDomainId The ID of the transit gateway multicast domain.
         * 
         * @return builder
         * 
         */
        public Builder transitGatewayMulticastDomainId(@Nullable Output<String> transitGatewayMulticastDomainId) {
            $.transitGatewayMulticastDomainId = transitGatewayMulticastDomainId;
            return this;
        }

        /**
         * @param transitGatewayMulticastDomainId The ID of the transit gateway multicast domain.
         * 
         * @return builder
         * 
         */
        public Builder transitGatewayMulticastDomainId(String transitGatewayMulticastDomainId) {
            return transitGatewayMulticastDomainId(Output.of(transitGatewayMulticastDomainId));
        }

        public MulticastGroupSourceState build() {
            return $;
        }
    }

}
