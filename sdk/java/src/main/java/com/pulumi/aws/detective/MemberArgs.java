// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.detective;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MemberArgs extends com.pulumi.resources.ResourceArgs {

    public static final MemberArgs Empty = new MemberArgs();

    @Import(name="accountId", required=true)
    private Output<String> accountId;

    public Output<String> accountId() {
        return this.accountId;
    }

    @Import(name="disableEmailNotification")
    private @Nullable Output<Boolean> disableEmailNotification;

    public Optional<Output<Boolean>> disableEmailNotification() {
        return Optional.ofNullable(this.disableEmailNotification);
    }

    @Import(name="emailAddress", required=true)
    private Output<String> emailAddress;

    public Output<String> emailAddress() {
        return this.emailAddress;
    }

    @Import(name="graphArn", required=true)
    private Output<String> graphArn;

    public Output<String> graphArn() {
        return this.graphArn;
    }

    @Import(name="message")
    private @Nullable Output<String> message;

    public Optional<Output<String>> message() {
        return Optional.ofNullable(this.message);
    }

    private MemberArgs() {}

    private MemberArgs(MemberArgs $) {
        this.accountId = $.accountId;
        this.disableEmailNotification = $.disableEmailNotification;
        this.emailAddress = $.emailAddress;
        this.graphArn = $.graphArn;
        this.message = $.message;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MemberArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MemberArgs $;

        public Builder() {
            $ = new MemberArgs();
        }

        public Builder(MemberArgs defaults) {
            $ = new MemberArgs(Objects.requireNonNull(defaults));
        }

        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        public Builder disableEmailNotification(@Nullable Output<Boolean> disableEmailNotification) {
            $.disableEmailNotification = disableEmailNotification;
            return this;
        }

        public Builder disableEmailNotification(Boolean disableEmailNotification) {
            return disableEmailNotification(Output.of(disableEmailNotification));
        }

        public Builder emailAddress(Output<String> emailAddress) {
            $.emailAddress = emailAddress;
            return this;
        }

        public Builder emailAddress(String emailAddress) {
            return emailAddress(Output.of(emailAddress));
        }

        public Builder graphArn(Output<String> graphArn) {
            $.graphArn = graphArn;
            return this;
        }

        public Builder graphArn(String graphArn) {
            return graphArn(Output.of(graphArn));
        }

        public Builder message(@Nullable Output<String> message) {
            $.message = message;
            return this;
        }

        public Builder message(String message) {
            return message(Output.of(message));
        }

        public MemberArgs build() {
            $.accountId = Objects.requireNonNull($.accountId, "expected parameter 'accountId' to be non-null");
            $.emailAddress = Objects.requireNonNull($.emailAddress, "expected parameter 'emailAddress' to be non-null");
            $.graphArn = Objects.requireNonNull($.graphArn, "expected parameter 'graphArn' to be non-null");
            return $;
        }
    }

}
