// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.servicecatalog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppregistryApplicationState extends com.pulumi.resources.ResourceArgs {

    public static final AppregistryApplicationState Empty = new AppregistryApplicationState();

    /**
     * A map with a single tag key-value pair used to associate resources with the application. This attribute can be passed directly into the `tags` argument of another resource, or merged into a map of existing tags.
     * 
     */
    @Import(name="applicationTag")
    private @Nullable Output<Map<String,String>> applicationTag;

    /**
     * @return A map with a single tag key-value pair used to associate resources with the application. This attribute can be passed directly into the `tags` argument of another resource, or merged into a map of existing tags.
     * 
     */
    public Optional<Output<Map<String,String>>> applicationTag() {
        return Optional.ofNullable(this.applicationTag);
    }

    /**
     * ARN (Amazon Resource Name) of the application.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return ARN (Amazon Resource Name) of the application.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * Description of the application.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the application.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Name of the application. The name must be unique within an AWS region.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the application. The name must be unique within an AWS region.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private AppregistryApplicationState() {}

    private AppregistryApplicationState(AppregistryApplicationState $) {
        this.applicationTag = $.applicationTag;
        this.arn = $.arn;
        this.description = $.description;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppregistryApplicationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppregistryApplicationState $;

        public Builder() {
            $ = new AppregistryApplicationState();
        }

        public Builder(AppregistryApplicationState defaults) {
            $ = new AppregistryApplicationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationTag A map with a single tag key-value pair used to associate resources with the application. This attribute can be passed directly into the `tags` argument of another resource, or merged into a map of existing tags.
         * 
         * @return builder
         * 
         */
        public Builder applicationTag(@Nullable Output<Map<String,String>> applicationTag) {
            $.applicationTag = applicationTag;
            return this;
        }

        /**
         * @param applicationTag A map with a single tag key-value pair used to associate resources with the application. This attribute can be passed directly into the `tags` argument of another resource, or merged into a map of existing tags.
         * 
         * @return builder
         * 
         */
        public Builder applicationTag(Map<String,String> applicationTag) {
            return applicationTag(Output.of(applicationTag));
        }

        /**
         * @param arn ARN (Amazon Resource Name) of the application.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn ARN (Amazon Resource Name) of the application.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param description Description of the application.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the application.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name Name of the application. The name must be unique within an AWS region.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the application. The name must be unique within an AWS region.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public AppregistryApplicationState build() {
            return $;
        }
    }

}
