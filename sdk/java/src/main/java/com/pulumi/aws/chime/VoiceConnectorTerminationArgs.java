// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.chime;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VoiceConnectorTerminationArgs extends com.pulumi.resources.ResourceArgs {

    public static final VoiceConnectorTerminationArgs Empty = new VoiceConnectorTerminationArgs();

    /**
     * The countries to which calls are allowed, in ISO 3166-1 alpha-2 format.
     * 
     */
    @Import(name="callingRegions", required=true)
    private Output<List<String>> callingRegions;

    /**
     * @return The countries to which calls are allowed, in ISO 3166-1 alpha-2 format.
     * 
     */
    public Output<List<String>> callingRegions() {
        return this.callingRegions;
    }

    /**
     * The IP addresses allowed to make calls, in CIDR format.
     * 
     */
    @Import(name="cidrAllowLists", required=true)
    private Output<List<String>> cidrAllowLists;

    /**
     * @return The IP addresses allowed to make calls, in CIDR format.
     * 
     */
    public Output<List<String>> cidrAllowLists() {
        return this.cidrAllowLists;
    }

    /**
     * The limit on calls per second. Max value based on account service quota. Default value of `1`.
     * 
     */
    @Import(name="cpsLimit")
    private @Nullable Output<Integer> cpsLimit;

    /**
     * @return The limit on calls per second. Max value based on account service quota. Default value of `1`.
     * 
     */
    public Optional<Output<Integer>> cpsLimit() {
        return Optional.ofNullable(this.cpsLimit);
    }

    /**
     * The default caller ID phone number.
     * 
     */
    @Import(name="defaultPhoneNumber")
    private @Nullable Output<String> defaultPhoneNumber;

    /**
     * @return The default caller ID phone number.
     * 
     */
    public Optional<Output<String>> defaultPhoneNumber() {
        return Optional.ofNullable(this.defaultPhoneNumber);
    }

    /**
     * When termination settings are disabled, outbound calls can not be made.
     * 
     */
    @Import(name="disabled")
    private @Nullable Output<Boolean> disabled;

    /**
     * @return When termination settings are disabled, outbound calls can not be made.
     * 
     */
    public Optional<Output<Boolean>> disabled() {
        return Optional.ofNullable(this.disabled);
    }

    /**
     * The Amazon Chime Voice Connector ID.
     * 
     */
    @Import(name="voiceConnectorId", required=true)
    private Output<String> voiceConnectorId;

    /**
     * @return The Amazon Chime Voice Connector ID.
     * 
     */
    public Output<String> voiceConnectorId() {
        return this.voiceConnectorId;
    }

    private VoiceConnectorTerminationArgs() {}

    private VoiceConnectorTerminationArgs(VoiceConnectorTerminationArgs $) {
        this.callingRegions = $.callingRegions;
        this.cidrAllowLists = $.cidrAllowLists;
        this.cpsLimit = $.cpsLimit;
        this.defaultPhoneNumber = $.defaultPhoneNumber;
        this.disabled = $.disabled;
        this.voiceConnectorId = $.voiceConnectorId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VoiceConnectorTerminationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VoiceConnectorTerminationArgs $;

        public Builder() {
            $ = new VoiceConnectorTerminationArgs();
        }

        public Builder(VoiceConnectorTerminationArgs defaults) {
            $ = new VoiceConnectorTerminationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param callingRegions The countries to which calls are allowed, in ISO 3166-1 alpha-2 format.
         * 
         * @return builder
         * 
         */
        public Builder callingRegions(Output<List<String>> callingRegions) {
            $.callingRegions = callingRegions;
            return this;
        }

        /**
         * @param callingRegions The countries to which calls are allowed, in ISO 3166-1 alpha-2 format.
         * 
         * @return builder
         * 
         */
        public Builder callingRegions(List<String> callingRegions) {
            return callingRegions(Output.of(callingRegions));
        }

        /**
         * @param callingRegions The countries to which calls are allowed, in ISO 3166-1 alpha-2 format.
         * 
         * @return builder
         * 
         */
        public Builder callingRegions(String... callingRegions) {
            return callingRegions(List.of(callingRegions));
        }

        /**
         * @param cidrAllowLists The IP addresses allowed to make calls, in CIDR format.
         * 
         * @return builder
         * 
         */
        public Builder cidrAllowLists(Output<List<String>> cidrAllowLists) {
            $.cidrAllowLists = cidrAllowLists;
            return this;
        }

        /**
         * @param cidrAllowLists The IP addresses allowed to make calls, in CIDR format.
         * 
         * @return builder
         * 
         */
        public Builder cidrAllowLists(List<String> cidrAllowLists) {
            return cidrAllowLists(Output.of(cidrAllowLists));
        }

        /**
         * @param cidrAllowLists The IP addresses allowed to make calls, in CIDR format.
         * 
         * @return builder
         * 
         */
        public Builder cidrAllowLists(String... cidrAllowLists) {
            return cidrAllowLists(List.of(cidrAllowLists));
        }

        /**
         * @param cpsLimit The limit on calls per second. Max value based on account service quota. Default value of `1`.
         * 
         * @return builder
         * 
         */
        public Builder cpsLimit(@Nullable Output<Integer> cpsLimit) {
            $.cpsLimit = cpsLimit;
            return this;
        }

        /**
         * @param cpsLimit The limit on calls per second. Max value based on account service quota. Default value of `1`.
         * 
         * @return builder
         * 
         */
        public Builder cpsLimit(Integer cpsLimit) {
            return cpsLimit(Output.of(cpsLimit));
        }

        /**
         * @param defaultPhoneNumber The default caller ID phone number.
         * 
         * @return builder
         * 
         */
        public Builder defaultPhoneNumber(@Nullable Output<String> defaultPhoneNumber) {
            $.defaultPhoneNumber = defaultPhoneNumber;
            return this;
        }

        /**
         * @param defaultPhoneNumber The default caller ID phone number.
         * 
         * @return builder
         * 
         */
        public Builder defaultPhoneNumber(String defaultPhoneNumber) {
            return defaultPhoneNumber(Output.of(defaultPhoneNumber));
        }

        /**
         * @param disabled When termination settings are disabled, outbound calls can not be made.
         * 
         * @return builder
         * 
         */
        public Builder disabled(@Nullable Output<Boolean> disabled) {
            $.disabled = disabled;
            return this;
        }

        /**
         * @param disabled When termination settings are disabled, outbound calls can not be made.
         * 
         * @return builder
         * 
         */
        public Builder disabled(Boolean disabled) {
            return disabled(Output.of(disabled));
        }

        /**
         * @param voiceConnectorId The Amazon Chime Voice Connector ID.
         * 
         * @return builder
         * 
         */
        public Builder voiceConnectorId(Output<String> voiceConnectorId) {
            $.voiceConnectorId = voiceConnectorId;
            return this;
        }

        /**
         * @param voiceConnectorId The Amazon Chime Voice Connector ID.
         * 
         * @return builder
         * 
         */
        public Builder voiceConnectorId(String voiceConnectorId) {
            return voiceConnectorId(Output.of(voiceConnectorId));
        }

        public VoiceConnectorTerminationArgs build() {
            if ($.callingRegions == null) {
                throw new MissingRequiredPropertyException("VoiceConnectorTerminationArgs", "callingRegions");
            }
            if ($.cidrAllowLists == null) {
                throw new MissingRequiredPropertyException("VoiceConnectorTerminationArgs", "cidrAllowLists");
            }
            if ($.voiceConnectorId == null) {
                throw new MissingRequiredPropertyException("VoiceConnectorTerminationArgs", "voiceConnectorId");
            }
            return $;
        }
    }

}
