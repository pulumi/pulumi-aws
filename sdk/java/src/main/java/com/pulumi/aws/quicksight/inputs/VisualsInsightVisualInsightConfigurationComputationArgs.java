// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.VisualsInsightVisualInsightConfigurationComputationForecastArgs;
import com.pulumi.aws.quicksight.inputs.VisualsInsightVisualInsightConfigurationComputationGrowthRateArgs;
import com.pulumi.aws.quicksight.inputs.VisualsInsightVisualInsightConfigurationComputationMaximumMinimumArgs;
import com.pulumi.aws.quicksight.inputs.VisualsInsightVisualInsightConfigurationComputationMetricComparisonArgs;
import com.pulumi.aws.quicksight.inputs.VisualsInsightVisualInsightConfigurationComputationPeriodOverPeriodArgs;
import com.pulumi.aws.quicksight.inputs.VisualsInsightVisualInsightConfigurationComputationPeriodToDateArgs;
import com.pulumi.aws.quicksight.inputs.VisualsInsightVisualInsightConfigurationComputationTopBottomMoversArgs;
import com.pulumi.aws.quicksight.inputs.VisualsInsightVisualInsightConfigurationComputationTopBottomRankedArgs;
import com.pulumi.aws.quicksight.inputs.VisualsInsightVisualInsightConfigurationComputationTotalAggregationArgs;
import com.pulumi.aws.quicksight.inputs.VisualsInsightVisualInsightConfigurationComputationUniqueValuesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VisualsInsightVisualInsightConfigurationComputationArgs extends com.pulumi.resources.ResourceArgs {

    public static final VisualsInsightVisualInsightConfigurationComputationArgs Empty = new VisualsInsightVisualInsightConfigurationComputationArgs();

    @Import(name="forecast")
    private @Nullable Output<VisualsInsightVisualInsightConfigurationComputationForecastArgs> forecast;

    public Optional<Output<VisualsInsightVisualInsightConfigurationComputationForecastArgs>> forecast() {
        return Optional.ofNullable(this.forecast);
    }

    @Import(name="growthRate")
    private @Nullable Output<VisualsInsightVisualInsightConfigurationComputationGrowthRateArgs> growthRate;

    public Optional<Output<VisualsInsightVisualInsightConfigurationComputationGrowthRateArgs>> growthRate() {
        return Optional.ofNullable(this.growthRate);
    }

    @Import(name="maximumMinimum")
    private @Nullable Output<VisualsInsightVisualInsightConfigurationComputationMaximumMinimumArgs> maximumMinimum;

    public Optional<Output<VisualsInsightVisualInsightConfigurationComputationMaximumMinimumArgs>> maximumMinimum() {
        return Optional.ofNullable(this.maximumMinimum);
    }

    @Import(name="metricComparison")
    private @Nullable Output<VisualsInsightVisualInsightConfigurationComputationMetricComparisonArgs> metricComparison;

    public Optional<Output<VisualsInsightVisualInsightConfigurationComputationMetricComparisonArgs>> metricComparison() {
        return Optional.ofNullable(this.metricComparison);
    }

    @Import(name="periodOverPeriod")
    private @Nullable Output<VisualsInsightVisualInsightConfigurationComputationPeriodOverPeriodArgs> periodOverPeriod;

    public Optional<Output<VisualsInsightVisualInsightConfigurationComputationPeriodOverPeriodArgs>> periodOverPeriod() {
        return Optional.ofNullable(this.periodOverPeriod);
    }

    @Import(name="periodToDate")
    private @Nullable Output<VisualsInsightVisualInsightConfigurationComputationPeriodToDateArgs> periodToDate;

    public Optional<Output<VisualsInsightVisualInsightConfigurationComputationPeriodToDateArgs>> periodToDate() {
        return Optional.ofNullable(this.periodToDate);
    }

    @Import(name="topBottomMovers")
    private @Nullable Output<VisualsInsightVisualInsightConfigurationComputationTopBottomMoversArgs> topBottomMovers;

    public Optional<Output<VisualsInsightVisualInsightConfigurationComputationTopBottomMoversArgs>> topBottomMovers() {
        return Optional.ofNullable(this.topBottomMovers);
    }

    @Import(name="topBottomRanked")
    private @Nullable Output<VisualsInsightVisualInsightConfigurationComputationTopBottomRankedArgs> topBottomRanked;

    public Optional<Output<VisualsInsightVisualInsightConfigurationComputationTopBottomRankedArgs>> topBottomRanked() {
        return Optional.ofNullable(this.topBottomRanked);
    }

    @Import(name="totalAggregation")
    private @Nullable Output<VisualsInsightVisualInsightConfigurationComputationTotalAggregationArgs> totalAggregation;

    public Optional<Output<VisualsInsightVisualInsightConfigurationComputationTotalAggregationArgs>> totalAggregation() {
        return Optional.ofNullable(this.totalAggregation);
    }

    @Import(name="uniqueValues")
    private @Nullable Output<VisualsInsightVisualInsightConfigurationComputationUniqueValuesArgs> uniqueValues;

    public Optional<Output<VisualsInsightVisualInsightConfigurationComputationUniqueValuesArgs>> uniqueValues() {
        return Optional.ofNullable(this.uniqueValues);
    }

    private VisualsInsightVisualInsightConfigurationComputationArgs() {}

    private VisualsInsightVisualInsightConfigurationComputationArgs(VisualsInsightVisualInsightConfigurationComputationArgs $) {
        this.forecast = $.forecast;
        this.growthRate = $.growthRate;
        this.maximumMinimum = $.maximumMinimum;
        this.metricComparison = $.metricComparison;
        this.periodOverPeriod = $.periodOverPeriod;
        this.periodToDate = $.periodToDate;
        this.topBottomMovers = $.topBottomMovers;
        this.topBottomRanked = $.topBottomRanked;
        this.totalAggregation = $.totalAggregation;
        this.uniqueValues = $.uniqueValues;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VisualsInsightVisualInsightConfigurationComputationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VisualsInsightVisualInsightConfigurationComputationArgs $;

        public Builder() {
            $ = new VisualsInsightVisualInsightConfigurationComputationArgs();
        }

        public Builder(VisualsInsightVisualInsightConfigurationComputationArgs defaults) {
            $ = new VisualsInsightVisualInsightConfigurationComputationArgs(Objects.requireNonNull(defaults));
        }

        public Builder forecast(@Nullable Output<VisualsInsightVisualInsightConfigurationComputationForecastArgs> forecast) {
            $.forecast = forecast;
            return this;
        }

        public Builder forecast(VisualsInsightVisualInsightConfigurationComputationForecastArgs forecast) {
            return forecast(Output.of(forecast));
        }

        public Builder growthRate(@Nullable Output<VisualsInsightVisualInsightConfigurationComputationGrowthRateArgs> growthRate) {
            $.growthRate = growthRate;
            return this;
        }

        public Builder growthRate(VisualsInsightVisualInsightConfigurationComputationGrowthRateArgs growthRate) {
            return growthRate(Output.of(growthRate));
        }

        public Builder maximumMinimum(@Nullable Output<VisualsInsightVisualInsightConfigurationComputationMaximumMinimumArgs> maximumMinimum) {
            $.maximumMinimum = maximumMinimum;
            return this;
        }

        public Builder maximumMinimum(VisualsInsightVisualInsightConfigurationComputationMaximumMinimumArgs maximumMinimum) {
            return maximumMinimum(Output.of(maximumMinimum));
        }

        public Builder metricComparison(@Nullable Output<VisualsInsightVisualInsightConfigurationComputationMetricComparisonArgs> metricComparison) {
            $.metricComparison = metricComparison;
            return this;
        }

        public Builder metricComparison(VisualsInsightVisualInsightConfigurationComputationMetricComparisonArgs metricComparison) {
            return metricComparison(Output.of(metricComparison));
        }

        public Builder periodOverPeriod(@Nullable Output<VisualsInsightVisualInsightConfigurationComputationPeriodOverPeriodArgs> periodOverPeriod) {
            $.periodOverPeriod = periodOverPeriod;
            return this;
        }

        public Builder periodOverPeriod(VisualsInsightVisualInsightConfigurationComputationPeriodOverPeriodArgs periodOverPeriod) {
            return periodOverPeriod(Output.of(periodOverPeriod));
        }

        public Builder periodToDate(@Nullable Output<VisualsInsightVisualInsightConfigurationComputationPeriodToDateArgs> periodToDate) {
            $.periodToDate = periodToDate;
            return this;
        }

        public Builder periodToDate(VisualsInsightVisualInsightConfigurationComputationPeriodToDateArgs periodToDate) {
            return periodToDate(Output.of(periodToDate));
        }

        public Builder topBottomMovers(@Nullable Output<VisualsInsightVisualInsightConfigurationComputationTopBottomMoversArgs> topBottomMovers) {
            $.topBottomMovers = topBottomMovers;
            return this;
        }

        public Builder topBottomMovers(VisualsInsightVisualInsightConfigurationComputationTopBottomMoversArgs topBottomMovers) {
            return topBottomMovers(Output.of(topBottomMovers));
        }

        public Builder topBottomRanked(@Nullable Output<VisualsInsightVisualInsightConfigurationComputationTopBottomRankedArgs> topBottomRanked) {
            $.topBottomRanked = topBottomRanked;
            return this;
        }

        public Builder topBottomRanked(VisualsInsightVisualInsightConfigurationComputationTopBottomRankedArgs topBottomRanked) {
            return topBottomRanked(Output.of(topBottomRanked));
        }

        public Builder totalAggregation(@Nullable Output<VisualsInsightVisualInsightConfigurationComputationTotalAggregationArgs> totalAggregation) {
            $.totalAggregation = totalAggregation;
            return this;
        }

        public Builder totalAggregation(VisualsInsightVisualInsightConfigurationComputationTotalAggregationArgs totalAggregation) {
            return totalAggregation(Output.of(totalAggregation));
        }

        public Builder uniqueValues(@Nullable Output<VisualsInsightVisualInsightConfigurationComputationUniqueValuesArgs> uniqueValues) {
            $.uniqueValues = uniqueValues;
            return this;
        }

        public Builder uniqueValues(VisualsInsightVisualInsightConfigurationComputationUniqueValuesArgs uniqueValues) {
            return uniqueValues(Output.of(uniqueValues));
        }

        public VisualsInsightVisualInsightConfigurationComputationArgs build() {
            return $;
        }
    }

}
