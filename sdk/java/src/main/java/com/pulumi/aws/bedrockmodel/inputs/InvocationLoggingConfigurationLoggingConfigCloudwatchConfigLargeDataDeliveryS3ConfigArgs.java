// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrockmodel.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigArgs Empty = new InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigArgs();

    /**
     * S3 bucket name.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="bucketName")
    private @Nullable Output<String> bucketName;

    /**
     * @return S3 bucket name.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<String>> bucketName() {
        return Optional.ofNullable(this.bucketName);
    }

    /**
     * S3 object key prefix.
     * 
     */
    @Import(name="keyPrefix")
    private @Nullable Output<String> keyPrefix;

    /**
     * @return S3 object key prefix.
     * 
     */
    public Optional<Output<String>> keyPrefix() {
        return Optional.ofNullable(this.keyPrefix);
    }

    private InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigArgs() {}

    private InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigArgs(InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigArgs $) {
        this.bucketName = $.bucketName;
        this.keyPrefix = $.keyPrefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigArgs $;

        public Builder() {
            $ = new InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigArgs();
        }

        public Builder(InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigArgs defaults) {
            $ = new InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucketName S3 bucket name.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder bucketName(@Nullable Output<String> bucketName) {
            $.bucketName = bucketName;
            return this;
        }

        /**
         * @param bucketName S3 bucket name.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder bucketName(String bucketName) {
            return bucketName(Output.of(bucketName));
        }

        /**
         * @param keyPrefix S3 object key prefix.
         * 
         * @return builder
         * 
         */
        public Builder keyPrefix(@Nullable Output<String> keyPrefix) {
            $.keyPrefix = keyPrefix;
            return this;
        }

        /**
         * @param keyPrefix S3 object key prefix.
         * 
         * @return builder
         * 
         */
        public Builder keyPrefix(String keyPrefix) {
            return keyPrefix(Output.of(keyPrefix));
        }

        public InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigArgs build() {
            return $;
        }
    }

}
