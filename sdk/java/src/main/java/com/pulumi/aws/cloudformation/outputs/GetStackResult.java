// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudformation.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetStackResult {
    /**
     * @return List of capabilities
     * 
     */
    private @Nullable List<String> capabilities;
    /**
     * @return Description of the stack
     * 
     */
    private @Nullable String description;
    /**
     * @return Whether the rollback of the stack is disabled when stack creation fails
     * 
     */
    private @Nullable Boolean disableRollback;
    /**
     * @return ARN of the IAM role used to create the stack.
     * 
     */
    private @Nullable String iamRoleArn;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private String name;
    /**
     * @return List of SNS topic ARNs to publish stack related events
     * 
     */
    private @Nullable List<String> notificationArns;
    /**
     * @return Map of outputs from the stack.
     * 
     */
    private @Nullable Map<String,String> outputs;
    /**
     * @return Map of parameters that specify input parameters for the stack.
     * 
     */
    private @Nullable Map<String,String> parameters;
    /**
     * @return Map of tags associated with this stack.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Structure containing the template body.
     * 
     */
    private @Nullable String templateBody;
    /**
     * @return Amount of time that can pass before the stack status becomes `CREATE_FAILED`
     * 
     */
    private @Nullable Integer timeoutInMinutes;

    private GetStackResult() {}
    /**
     * @return List of capabilities
     * 
     */
    public List<String> capabilities() {
        return this.capabilities == null ? List.of() : this.capabilities;
    }
    /**
     * @return Description of the stack
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Whether the rollback of the stack is disabled when stack creation fails
     * 
     */
    public Optional<Boolean> disableRollback() {
        return Optional.ofNullable(this.disableRollback);
    }
    /**
     * @return ARN of the IAM role used to create the stack.
     * 
     */
    public Optional<String> iamRoleArn() {
        return Optional.ofNullable(this.iamRoleArn);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public String name() {
        return this.name;
    }
    /**
     * @return List of SNS topic ARNs to publish stack related events
     * 
     */
    public List<String> notificationArns() {
        return this.notificationArns == null ? List.of() : this.notificationArns;
    }
    /**
     * @return Map of outputs from the stack.
     * 
     */
    public Map<String,String> outputs() {
        return this.outputs == null ? Map.of() : this.outputs;
    }
    /**
     * @return Map of parameters that specify input parameters for the stack.
     * 
     */
    public Map<String,String> parameters() {
        return this.parameters == null ? Map.of() : this.parameters;
    }
    /**
     * @return Map of tags associated with this stack.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Structure containing the template body.
     * 
     */
    public Optional<String> templateBody() {
        return Optional.ofNullable(this.templateBody);
    }
    /**
     * @return Amount of time that can pass before the stack status becomes `CREATE_FAILED`
     * 
     */
    public Optional<Integer> timeoutInMinutes() {
        return Optional.ofNullable(this.timeoutInMinutes);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStackResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> capabilities;
        private @Nullable String description;
        private @Nullable Boolean disableRollback;
        private @Nullable String iamRoleArn;
        private @Nullable String id;
        private String name;
        private @Nullable List<String> notificationArns;
        private @Nullable Map<String,String> outputs;
        private @Nullable Map<String,String> parameters;
        private @Nullable Map<String,String> tags;
        private @Nullable String templateBody;
        private @Nullable Integer timeoutInMinutes;
        public Builder() {}
        public Builder(GetStackResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.capabilities = defaults.capabilities;
    	      this.description = defaults.description;
    	      this.disableRollback = defaults.disableRollback;
    	      this.iamRoleArn = defaults.iamRoleArn;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.notificationArns = defaults.notificationArns;
    	      this.outputs = defaults.outputs;
    	      this.parameters = defaults.parameters;
    	      this.tags = defaults.tags;
    	      this.templateBody = defaults.templateBody;
    	      this.timeoutInMinutes = defaults.timeoutInMinutes;
        }

        @CustomType.Setter
        public Builder capabilities(@Nullable List<String> capabilities) {
            this.capabilities = capabilities;
            return this;
        }
        public Builder capabilities(String... capabilities) {
            return capabilities(List.of(capabilities));
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder disableRollback(@Nullable Boolean disableRollback) {
            this.disableRollback = disableRollback;
            return this;
        }
        @CustomType.Setter
        public Builder iamRoleArn(@Nullable String iamRoleArn) {
            this.iamRoleArn = iamRoleArn;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder notificationArns(@Nullable List<String> notificationArns) {
            this.notificationArns = notificationArns;
            return this;
        }
        public Builder notificationArns(String... notificationArns) {
            return notificationArns(List.of(notificationArns));
        }
        @CustomType.Setter
        public Builder outputs(@Nullable Map<String,String> outputs) {
            this.outputs = outputs;
            return this;
        }
        @CustomType.Setter
        public Builder parameters(@Nullable Map<String,String> parameters) {
            this.parameters = parameters;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder templateBody(@Nullable String templateBody) {
            this.templateBody = templateBody;
            return this;
        }
        @CustomType.Setter
        public Builder timeoutInMinutes(@Nullable Integer timeoutInMinutes) {
            this.timeoutInMinutes = timeoutInMinutes;
            return this;
        }
        public GetStackResult build() {
            final var o = new GetStackResult();
            o.capabilities = capabilities;
            o.description = description;
            o.disableRollback = disableRollback;
            o.iamRoleArn = iamRoleArn;
            o.id = id;
            o.name = name;
            o.notificationArns = notificationArns;
            o.outputs = outputs;
            o.parameters = parameters;
            o.tags = tags;
            o.templateBody = templateBody;
            o.timeoutInMinutes = timeoutInMinutes;
            return o;
        }
    }
}
