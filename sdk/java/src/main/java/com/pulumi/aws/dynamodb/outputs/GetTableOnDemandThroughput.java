// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dynamodb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetTableOnDemandThroughput {
    private Integer maxReadRequestUnits;
    private Integer maxWriteRequestUnits;

    private GetTableOnDemandThroughput() {}
    public Integer maxReadRequestUnits() {
        return this.maxReadRequestUnits;
    }
    public Integer maxWriteRequestUnits() {
        return this.maxWriteRequestUnits;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTableOnDemandThroughput defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer maxReadRequestUnits;
        private Integer maxWriteRequestUnits;
        public Builder() {}
        public Builder(GetTableOnDemandThroughput defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxReadRequestUnits = defaults.maxReadRequestUnits;
    	      this.maxWriteRequestUnits = defaults.maxWriteRequestUnits;
        }

        @CustomType.Setter
        public Builder maxReadRequestUnits(Integer maxReadRequestUnits) {
            if (maxReadRequestUnits == null) {
              throw new MissingRequiredPropertyException("GetTableOnDemandThroughput", "maxReadRequestUnits");
            }
            this.maxReadRequestUnits = maxReadRequestUnits;
            return this;
        }
        @CustomType.Setter
        public Builder maxWriteRequestUnits(Integer maxWriteRequestUnits) {
            if (maxWriteRequestUnits == null) {
              throw new MissingRequiredPropertyException("GetTableOnDemandThroughput", "maxWriteRequestUnits");
            }
            this.maxWriteRequestUnits = maxWriteRequestUnits;
            return this;
        }
        public GetTableOnDemandThroughput build() {
            final var _resultValue = new GetTableOnDemandThroughput();
            _resultValue.maxReadRequestUnits = maxReadRequestUnits;
            _resultValue.maxWriteRequestUnits = maxWriteRequestUnits;
            return _resultValue;
        }
    }
}
