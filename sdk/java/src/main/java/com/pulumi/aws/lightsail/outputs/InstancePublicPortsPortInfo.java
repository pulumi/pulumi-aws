// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lightsail.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class InstancePublicPortsPortInfo {
    /**
     * @return Set of CIDR aliases that define access for a preconfigured range of IP addresses.
     * 
     */
    private @Nullable List<String> cidrListAliases;
    /**
     * @return Set of CIDR blocks.
     * 
     */
    private @Nullable List<String> cidrs;
    /**
     * @return First port in a range of open ports on an instance.
     * 
     */
    private Integer fromPort;
    private @Nullable List<String> ipv6Cidrs;
    /**
     * @return IP protocol name. Valid values are `tcp`, `all`, `udp`, and `icmp`.
     * 
     */
    private String protocol;
    /**
     * @return Last port in a range of open ports on an instance.
     * 
     * The following arguments are optional:
     * 
     */
    private Integer toPort;

    private InstancePublicPortsPortInfo() {}
    /**
     * @return Set of CIDR aliases that define access for a preconfigured range of IP addresses.
     * 
     */
    public List<String> cidrListAliases() {
        return this.cidrListAliases == null ? List.of() : this.cidrListAliases;
    }
    /**
     * @return Set of CIDR blocks.
     * 
     */
    public List<String> cidrs() {
        return this.cidrs == null ? List.of() : this.cidrs;
    }
    /**
     * @return First port in a range of open ports on an instance.
     * 
     */
    public Integer fromPort() {
        return this.fromPort;
    }
    public List<String> ipv6Cidrs() {
        return this.ipv6Cidrs == null ? List.of() : this.ipv6Cidrs;
    }
    /**
     * @return IP protocol name. Valid values are `tcp`, `all`, `udp`, and `icmp`.
     * 
     */
    public String protocol() {
        return this.protocol;
    }
    /**
     * @return Last port in a range of open ports on an instance.
     * 
     * The following arguments are optional:
     * 
     */
    public Integer toPort() {
        return this.toPort;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstancePublicPortsPortInfo defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> cidrListAliases;
        private @Nullable List<String> cidrs;
        private Integer fromPort;
        private @Nullable List<String> ipv6Cidrs;
        private String protocol;
        private Integer toPort;
        public Builder() {}
        public Builder(InstancePublicPortsPortInfo defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cidrListAliases = defaults.cidrListAliases;
    	      this.cidrs = defaults.cidrs;
    	      this.fromPort = defaults.fromPort;
    	      this.ipv6Cidrs = defaults.ipv6Cidrs;
    	      this.protocol = defaults.protocol;
    	      this.toPort = defaults.toPort;
        }

        @CustomType.Setter
        public Builder cidrListAliases(@Nullable List<String> cidrListAliases) {
            this.cidrListAliases = cidrListAliases;
            return this;
        }
        public Builder cidrListAliases(String... cidrListAliases) {
            return cidrListAliases(List.of(cidrListAliases));
        }
        @CustomType.Setter
        public Builder cidrs(@Nullable List<String> cidrs) {
            this.cidrs = cidrs;
            return this;
        }
        public Builder cidrs(String... cidrs) {
            return cidrs(List.of(cidrs));
        }
        @CustomType.Setter
        public Builder fromPort(Integer fromPort) {
            this.fromPort = Objects.requireNonNull(fromPort);
            return this;
        }
        @CustomType.Setter
        public Builder ipv6Cidrs(@Nullable List<String> ipv6Cidrs) {
            this.ipv6Cidrs = ipv6Cidrs;
            return this;
        }
        public Builder ipv6Cidrs(String... ipv6Cidrs) {
            return ipv6Cidrs(List.of(ipv6Cidrs));
        }
        @CustomType.Setter
        public Builder protocol(String protocol) {
            this.protocol = Objects.requireNonNull(protocol);
            return this;
        }
        @CustomType.Setter
        public Builder toPort(Integer toPort) {
            this.toPort = Objects.requireNonNull(toPort);
            return this;
        }
        public InstancePublicPortsPortInfo build() {
            final var o = new InstancePublicPortsPortInfo();
            o.cidrListAliases = cidrListAliases;
            o.cidrs = cidrs;
            o.fromPort = fromPort;
            o.ipv6Cidrs = ipv6Cidrs;
            o.protocol = protocol;
            o.toPort = toPort;
            return o;
        }
    }
}
