// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2;

import com.pulumi.aws.ec2.inputs.FleetLaunchTemplateConfigArgs;
import com.pulumi.aws.ec2.inputs.FleetOnDemandOptionsArgs;
import com.pulumi.aws.ec2.inputs.FleetSpotOptionsArgs;
import com.pulumi.aws.ec2.inputs.FleetTargetCapacitySpecificationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FleetArgs extends com.pulumi.resources.ResourceArgs {

    public static final FleetArgs Empty = new FleetArgs();

    @Import(name="context")
    private @Nullable Output<String> context;

    public Optional<Output<String>> context() {
        return Optional.ofNullable(this.context);
    }

    @Import(name="excessCapacityTerminationPolicy")
    private @Nullable Output<String> excessCapacityTerminationPolicy;

    public Optional<Output<String>> excessCapacityTerminationPolicy() {
        return Optional.ofNullable(this.excessCapacityTerminationPolicy);
    }

    @Import(name="launchTemplateConfig", required=true)
    private Output<FleetLaunchTemplateConfigArgs> launchTemplateConfig;

    public Output<FleetLaunchTemplateConfigArgs> launchTemplateConfig() {
        return this.launchTemplateConfig;
    }

    @Import(name="onDemandOptions")
    private @Nullable Output<FleetOnDemandOptionsArgs> onDemandOptions;

    public Optional<Output<FleetOnDemandOptionsArgs>> onDemandOptions() {
        return Optional.ofNullable(this.onDemandOptions);
    }

    @Import(name="replaceUnhealthyInstances")
    private @Nullable Output<Boolean> replaceUnhealthyInstances;

    public Optional<Output<Boolean>> replaceUnhealthyInstances() {
        return Optional.ofNullable(this.replaceUnhealthyInstances);
    }

    @Import(name="spotOptions")
    private @Nullable Output<FleetSpotOptionsArgs> spotOptions;

    public Optional<Output<FleetSpotOptionsArgs>> spotOptions() {
        return Optional.ofNullable(this.spotOptions);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="targetCapacitySpecification", required=true)
    private Output<FleetTargetCapacitySpecificationArgs> targetCapacitySpecification;

    public Output<FleetTargetCapacitySpecificationArgs> targetCapacitySpecification() {
        return this.targetCapacitySpecification;
    }

    @Import(name="terminateInstances")
    private @Nullable Output<Boolean> terminateInstances;

    public Optional<Output<Boolean>> terminateInstances() {
        return Optional.ofNullable(this.terminateInstances);
    }

    @Import(name="terminateInstancesWithExpiration")
    private @Nullable Output<Boolean> terminateInstancesWithExpiration;

    public Optional<Output<Boolean>> terminateInstancesWithExpiration() {
        return Optional.ofNullable(this.terminateInstancesWithExpiration);
    }

    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private FleetArgs() {}

    private FleetArgs(FleetArgs $) {
        this.context = $.context;
        this.excessCapacityTerminationPolicy = $.excessCapacityTerminationPolicy;
        this.launchTemplateConfig = $.launchTemplateConfig;
        this.onDemandOptions = $.onDemandOptions;
        this.replaceUnhealthyInstances = $.replaceUnhealthyInstances;
        this.spotOptions = $.spotOptions;
        this.tags = $.tags;
        this.targetCapacitySpecification = $.targetCapacitySpecification;
        this.terminateInstances = $.terminateInstances;
        this.terminateInstancesWithExpiration = $.terminateInstancesWithExpiration;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FleetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FleetArgs $;

        public Builder() {
            $ = new FleetArgs();
        }

        public Builder(FleetArgs defaults) {
            $ = new FleetArgs(Objects.requireNonNull(defaults));
        }

        public Builder context(@Nullable Output<String> context) {
            $.context = context;
            return this;
        }

        public Builder context(String context) {
            return context(Output.of(context));
        }

        public Builder excessCapacityTerminationPolicy(@Nullable Output<String> excessCapacityTerminationPolicy) {
            $.excessCapacityTerminationPolicy = excessCapacityTerminationPolicy;
            return this;
        }

        public Builder excessCapacityTerminationPolicy(String excessCapacityTerminationPolicy) {
            return excessCapacityTerminationPolicy(Output.of(excessCapacityTerminationPolicy));
        }

        public Builder launchTemplateConfig(Output<FleetLaunchTemplateConfigArgs> launchTemplateConfig) {
            $.launchTemplateConfig = launchTemplateConfig;
            return this;
        }

        public Builder launchTemplateConfig(FleetLaunchTemplateConfigArgs launchTemplateConfig) {
            return launchTemplateConfig(Output.of(launchTemplateConfig));
        }

        public Builder onDemandOptions(@Nullable Output<FleetOnDemandOptionsArgs> onDemandOptions) {
            $.onDemandOptions = onDemandOptions;
            return this;
        }

        public Builder onDemandOptions(FleetOnDemandOptionsArgs onDemandOptions) {
            return onDemandOptions(Output.of(onDemandOptions));
        }

        public Builder replaceUnhealthyInstances(@Nullable Output<Boolean> replaceUnhealthyInstances) {
            $.replaceUnhealthyInstances = replaceUnhealthyInstances;
            return this;
        }

        public Builder replaceUnhealthyInstances(Boolean replaceUnhealthyInstances) {
            return replaceUnhealthyInstances(Output.of(replaceUnhealthyInstances));
        }

        public Builder spotOptions(@Nullable Output<FleetSpotOptionsArgs> spotOptions) {
            $.spotOptions = spotOptions;
            return this;
        }

        public Builder spotOptions(FleetSpotOptionsArgs spotOptions) {
            return spotOptions(Output.of(spotOptions));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder targetCapacitySpecification(Output<FleetTargetCapacitySpecificationArgs> targetCapacitySpecification) {
            $.targetCapacitySpecification = targetCapacitySpecification;
            return this;
        }

        public Builder targetCapacitySpecification(FleetTargetCapacitySpecificationArgs targetCapacitySpecification) {
            return targetCapacitySpecification(Output.of(targetCapacitySpecification));
        }

        public Builder terminateInstances(@Nullable Output<Boolean> terminateInstances) {
            $.terminateInstances = terminateInstances;
            return this;
        }

        public Builder terminateInstances(Boolean terminateInstances) {
            return terminateInstances(Output.of(terminateInstances));
        }

        public Builder terminateInstancesWithExpiration(@Nullable Output<Boolean> terminateInstancesWithExpiration) {
            $.terminateInstancesWithExpiration = terminateInstancesWithExpiration;
            return this;
        }

        public Builder terminateInstancesWithExpiration(Boolean terminateInstancesWithExpiration) {
            return terminateInstancesWithExpiration(Output.of(terminateInstancesWithExpiration));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public FleetArgs build() {
            $.launchTemplateConfig = Objects.requireNonNull($.launchTemplateConfig, "expected parameter 'launchTemplateConfig' to be non-null");
            $.targetCapacitySpecification = Objects.requireNonNull($.targetCapacitySpecification, "expected parameter 'targetCapacitySpecification' to be non-null");
            return $;
        }
    }

}
