// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.identitystore.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetGroupMembershipsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetGroupMembershipsArgs Empty = new GetGroupMembershipsArgs();

    /**
     * The identifier for a group in the Identity Store.
     * 
     */
    @Import(name="groupId", required=true)
    private Output<String> groupId;

    /**
     * @return The identifier for a group in the Identity Store.
     * 
     */
    public Output<String> groupId() {
        return this.groupId;
    }

    /**
     * Identity Store ID associated with the Single Sign-On Instance.
     * 
     */
    @Import(name="identityStoreId", required=true)
    private Output<String> identityStoreId;

    /**
     * @return Identity Store ID associated with the Single Sign-On Instance.
     * 
     */
    public Output<String> identityStoreId() {
        return this.identityStoreId;
    }

    private GetGroupMembershipsArgs() {}

    private GetGroupMembershipsArgs(GetGroupMembershipsArgs $) {
        this.groupId = $.groupId;
        this.identityStoreId = $.identityStoreId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGroupMembershipsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGroupMembershipsArgs $;

        public Builder() {
            $ = new GetGroupMembershipsArgs();
        }

        public Builder(GetGroupMembershipsArgs defaults) {
            $ = new GetGroupMembershipsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param groupId The identifier for a group in the Identity Store.
         * 
         * @return builder
         * 
         */
        public Builder groupId(Output<String> groupId) {
            $.groupId = groupId;
            return this;
        }

        /**
         * @param groupId The identifier for a group in the Identity Store.
         * 
         * @return builder
         * 
         */
        public Builder groupId(String groupId) {
            return groupId(Output.of(groupId));
        }

        /**
         * @param identityStoreId Identity Store ID associated with the Single Sign-On Instance.
         * 
         * @return builder
         * 
         */
        public Builder identityStoreId(Output<String> identityStoreId) {
            $.identityStoreId = identityStoreId;
            return this;
        }

        /**
         * @param identityStoreId Identity Store ID associated with the Single Sign-On Instance.
         * 
         * @return builder
         * 
         */
        public Builder identityStoreId(String identityStoreId) {
            return identityStoreId(Output.of(identityStoreId));
        }

        public GetGroupMembershipsArgs build() {
            if ($.groupId == null) {
                throw new MissingRequiredPropertyException("GetGroupMembershipsArgs", "groupId");
            }
            if ($.identityStoreId == null) {
                throw new MissingRequiredPropertyException("GetGroupMembershipsArgs", "identityStoreId");
            }
            return $;
        }
    }

}
