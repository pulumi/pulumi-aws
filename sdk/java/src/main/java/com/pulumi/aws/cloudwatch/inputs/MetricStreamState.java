// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudwatch.inputs;

import com.pulumi.aws.cloudwatch.inputs.MetricStreamExcludeFilterArgs;
import com.pulumi.aws.cloudwatch.inputs.MetricStreamIncludeFilterArgs;
import com.pulumi.aws.cloudwatch.inputs.MetricStreamStatisticsConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MetricStreamState extends com.pulumi.resources.ResourceArgs {

    public static final MetricStreamState Empty = new MetricStreamState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="creationDate")
    private @Nullable Output<String> creationDate;

    public Optional<Output<String>> creationDate() {
        return Optional.ofNullable(this.creationDate);
    }

    @Import(name="excludeFilters")
    private @Nullable Output<List<MetricStreamExcludeFilterArgs>> excludeFilters;

    public Optional<Output<List<MetricStreamExcludeFilterArgs>>> excludeFilters() {
        return Optional.ofNullable(this.excludeFilters);
    }

    @Import(name="firehoseArn")
    private @Nullable Output<String> firehoseArn;

    public Optional<Output<String>> firehoseArn() {
        return Optional.ofNullable(this.firehoseArn);
    }

    @Import(name="includeFilters")
    private @Nullable Output<List<MetricStreamIncludeFilterArgs>> includeFilters;

    public Optional<Output<List<MetricStreamIncludeFilterArgs>>> includeFilters() {
        return Optional.ofNullable(this.includeFilters);
    }

    @Import(name="lastUpdateDate")
    private @Nullable Output<String> lastUpdateDate;

    public Optional<Output<String>> lastUpdateDate() {
        return Optional.ofNullable(this.lastUpdateDate);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="namePrefix")
    private @Nullable Output<String> namePrefix;

    public Optional<Output<String>> namePrefix() {
        return Optional.ofNullable(this.namePrefix);
    }

    @Import(name="outputFormat")
    private @Nullable Output<String> outputFormat;

    public Optional<Output<String>> outputFormat() {
        return Optional.ofNullable(this.outputFormat);
    }

    @Import(name="roleArn")
    private @Nullable Output<String> roleArn;

    public Optional<Output<String>> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }

    @Import(name="state")
    private @Nullable Output<String> state;

    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    @Import(name="statisticsConfigurations")
    private @Nullable Output<List<MetricStreamStatisticsConfigurationArgs>> statisticsConfigurations;

    public Optional<Output<List<MetricStreamStatisticsConfigurationArgs>>> statisticsConfigurations() {
        return Optional.ofNullable(this.statisticsConfigurations);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private MetricStreamState() {}

    private MetricStreamState(MetricStreamState $) {
        this.arn = $.arn;
        this.creationDate = $.creationDate;
        this.excludeFilters = $.excludeFilters;
        this.firehoseArn = $.firehoseArn;
        this.includeFilters = $.includeFilters;
        this.lastUpdateDate = $.lastUpdateDate;
        this.name = $.name;
        this.namePrefix = $.namePrefix;
        this.outputFormat = $.outputFormat;
        this.roleArn = $.roleArn;
        this.state = $.state;
        this.statisticsConfigurations = $.statisticsConfigurations;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MetricStreamState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MetricStreamState $;

        public Builder() {
            $ = new MetricStreamState();
        }

        public Builder(MetricStreamState defaults) {
            $ = new MetricStreamState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder creationDate(@Nullable Output<String> creationDate) {
            $.creationDate = creationDate;
            return this;
        }

        public Builder creationDate(String creationDate) {
            return creationDate(Output.of(creationDate));
        }

        public Builder excludeFilters(@Nullable Output<List<MetricStreamExcludeFilterArgs>> excludeFilters) {
            $.excludeFilters = excludeFilters;
            return this;
        }

        public Builder excludeFilters(List<MetricStreamExcludeFilterArgs> excludeFilters) {
            return excludeFilters(Output.of(excludeFilters));
        }

        public Builder excludeFilters(MetricStreamExcludeFilterArgs... excludeFilters) {
            return excludeFilters(List.of(excludeFilters));
        }

        public Builder firehoseArn(@Nullable Output<String> firehoseArn) {
            $.firehoseArn = firehoseArn;
            return this;
        }

        public Builder firehoseArn(String firehoseArn) {
            return firehoseArn(Output.of(firehoseArn));
        }

        public Builder includeFilters(@Nullable Output<List<MetricStreamIncludeFilterArgs>> includeFilters) {
            $.includeFilters = includeFilters;
            return this;
        }

        public Builder includeFilters(List<MetricStreamIncludeFilterArgs> includeFilters) {
            return includeFilters(Output.of(includeFilters));
        }

        public Builder includeFilters(MetricStreamIncludeFilterArgs... includeFilters) {
            return includeFilters(List.of(includeFilters));
        }

        public Builder lastUpdateDate(@Nullable Output<String> lastUpdateDate) {
            $.lastUpdateDate = lastUpdateDate;
            return this;
        }

        public Builder lastUpdateDate(String lastUpdateDate) {
            return lastUpdateDate(Output.of(lastUpdateDate));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder namePrefix(@Nullable Output<String> namePrefix) {
            $.namePrefix = namePrefix;
            return this;
        }

        public Builder namePrefix(String namePrefix) {
            return namePrefix(Output.of(namePrefix));
        }

        public Builder outputFormat(@Nullable Output<String> outputFormat) {
            $.outputFormat = outputFormat;
            return this;
        }

        public Builder outputFormat(String outputFormat) {
            return outputFormat(Output.of(outputFormat));
        }

        public Builder roleArn(@Nullable Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        public Builder state(String state) {
            return state(Output.of(state));
        }

        public Builder statisticsConfigurations(@Nullable Output<List<MetricStreamStatisticsConfigurationArgs>> statisticsConfigurations) {
            $.statisticsConfigurations = statisticsConfigurations;
            return this;
        }

        public Builder statisticsConfigurations(List<MetricStreamStatisticsConfigurationArgs> statisticsConfigurations) {
            return statisticsConfigurations(Output.of(statisticsConfigurations));
        }

        public Builder statisticsConfigurations(MetricStreamStatisticsConfigurationArgs... statisticsConfigurations) {
            return statisticsConfigurations(List.of(statisticsConfigurations));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public MetricStreamState build() {
            return $;
        }
    }

}
