// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.AxisDisplayOptions;
import com.pulumi.aws.quicksight.outputs.ChartAxisLabelOptions;
import com.pulumi.aws.quicksight.outputs.LegendOptions;
import com.pulumi.aws.quicksight.outputs.VisualPalette;
import com.pulumi.aws.quicksight.outputs.VisualsRadarChartVisualChartConfigurationBaseSeriesSettings;
import com.pulumi.aws.quicksight.outputs.VisualsRadarChartVisualChartConfigurationFieldWells;
import com.pulumi.aws.quicksight.outputs.VisualsRadarChartVisualChartConfigurationSortConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VisualsRadarChartVisualChartConfiguration {
    private @Nullable String alternateBandColorsVisibility;
    private @Nullable String alternateBandEvenColor;
    private @Nullable String alternateBandOddColor;
    private @Nullable VisualsRadarChartVisualChartConfigurationBaseSeriesSettings baseSeriesSettings;
    private @Nullable AxisDisplayOptions categoryAxis;
    private @Nullable ChartAxisLabelOptions categoryLabelOptions;
    private @Nullable AxisDisplayOptions colorAxis;
    private @Nullable ChartAxisLabelOptions colorLabelOptions;
    private @Nullable VisualsRadarChartVisualChartConfigurationFieldWells fieldWells;
    private @Nullable LegendOptions legend;
    private @Nullable String shape;
    private @Nullable VisualsRadarChartVisualChartConfigurationSortConfiguration sortConfiguration;
    private @Nullable Double startAngle;
    private @Nullable VisualPalette visualPalette;

    private VisualsRadarChartVisualChartConfiguration() {}
    public Optional<String> alternateBandColorsVisibility() {
        return Optional.ofNullable(this.alternateBandColorsVisibility);
    }
    public Optional<String> alternateBandEvenColor() {
        return Optional.ofNullable(this.alternateBandEvenColor);
    }
    public Optional<String> alternateBandOddColor() {
        return Optional.ofNullable(this.alternateBandOddColor);
    }
    public Optional<VisualsRadarChartVisualChartConfigurationBaseSeriesSettings> baseSeriesSettings() {
        return Optional.ofNullable(this.baseSeriesSettings);
    }
    public Optional<AxisDisplayOptions> categoryAxis() {
        return Optional.ofNullable(this.categoryAxis);
    }
    public Optional<ChartAxisLabelOptions> categoryLabelOptions() {
        return Optional.ofNullable(this.categoryLabelOptions);
    }
    public Optional<AxisDisplayOptions> colorAxis() {
        return Optional.ofNullable(this.colorAxis);
    }
    public Optional<ChartAxisLabelOptions> colorLabelOptions() {
        return Optional.ofNullable(this.colorLabelOptions);
    }
    public Optional<VisualsRadarChartVisualChartConfigurationFieldWells> fieldWells() {
        return Optional.ofNullable(this.fieldWells);
    }
    public Optional<LegendOptions> legend() {
        return Optional.ofNullable(this.legend);
    }
    public Optional<String> shape() {
        return Optional.ofNullable(this.shape);
    }
    public Optional<VisualsRadarChartVisualChartConfigurationSortConfiguration> sortConfiguration() {
        return Optional.ofNullable(this.sortConfiguration);
    }
    public Optional<Double> startAngle() {
        return Optional.ofNullable(this.startAngle);
    }
    public Optional<VisualPalette> visualPalette() {
        return Optional.ofNullable(this.visualPalette);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VisualsRadarChartVisualChartConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String alternateBandColorsVisibility;
        private @Nullable String alternateBandEvenColor;
        private @Nullable String alternateBandOddColor;
        private @Nullable VisualsRadarChartVisualChartConfigurationBaseSeriesSettings baseSeriesSettings;
        private @Nullable AxisDisplayOptions categoryAxis;
        private @Nullable ChartAxisLabelOptions categoryLabelOptions;
        private @Nullable AxisDisplayOptions colorAxis;
        private @Nullable ChartAxisLabelOptions colorLabelOptions;
        private @Nullable VisualsRadarChartVisualChartConfigurationFieldWells fieldWells;
        private @Nullable LegendOptions legend;
        private @Nullable String shape;
        private @Nullable VisualsRadarChartVisualChartConfigurationSortConfiguration sortConfiguration;
        private @Nullable Double startAngle;
        private @Nullable VisualPalette visualPalette;
        public Builder() {}
        public Builder(VisualsRadarChartVisualChartConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alternateBandColorsVisibility = defaults.alternateBandColorsVisibility;
    	      this.alternateBandEvenColor = defaults.alternateBandEvenColor;
    	      this.alternateBandOddColor = defaults.alternateBandOddColor;
    	      this.baseSeriesSettings = defaults.baseSeriesSettings;
    	      this.categoryAxis = defaults.categoryAxis;
    	      this.categoryLabelOptions = defaults.categoryLabelOptions;
    	      this.colorAxis = defaults.colorAxis;
    	      this.colorLabelOptions = defaults.colorLabelOptions;
    	      this.fieldWells = defaults.fieldWells;
    	      this.legend = defaults.legend;
    	      this.shape = defaults.shape;
    	      this.sortConfiguration = defaults.sortConfiguration;
    	      this.startAngle = defaults.startAngle;
    	      this.visualPalette = defaults.visualPalette;
        }

        @CustomType.Setter
        public Builder alternateBandColorsVisibility(@Nullable String alternateBandColorsVisibility) {

            this.alternateBandColorsVisibility = alternateBandColorsVisibility;
            return this;
        }
        @CustomType.Setter
        public Builder alternateBandEvenColor(@Nullable String alternateBandEvenColor) {

            this.alternateBandEvenColor = alternateBandEvenColor;
            return this;
        }
        @CustomType.Setter
        public Builder alternateBandOddColor(@Nullable String alternateBandOddColor) {

            this.alternateBandOddColor = alternateBandOddColor;
            return this;
        }
        @CustomType.Setter
        public Builder baseSeriesSettings(@Nullable VisualsRadarChartVisualChartConfigurationBaseSeriesSettings baseSeriesSettings) {

            this.baseSeriesSettings = baseSeriesSettings;
            return this;
        }
        @CustomType.Setter
        public Builder categoryAxis(@Nullable AxisDisplayOptions categoryAxis) {

            this.categoryAxis = categoryAxis;
            return this;
        }
        @CustomType.Setter
        public Builder categoryLabelOptions(@Nullable ChartAxisLabelOptions categoryLabelOptions) {

            this.categoryLabelOptions = categoryLabelOptions;
            return this;
        }
        @CustomType.Setter
        public Builder colorAxis(@Nullable AxisDisplayOptions colorAxis) {

            this.colorAxis = colorAxis;
            return this;
        }
        @CustomType.Setter
        public Builder colorLabelOptions(@Nullable ChartAxisLabelOptions colorLabelOptions) {

            this.colorLabelOptions = colorLabelOptions;
            return this;
        }
        @CustomType.Setter
        public Builder fieldWells(@Nullable VisualsRadarChartVisualChartConfigurationFieldWells fieldWells) {

            this.fieldWells = fieldWells;
            return this;
        }
        @CustomType.Setter
        public Builder legend(@Nullable LegendOptions legend) {

            this.legend = legend;
            return this;
        }
        @CustomType.Setter
        public Builder shape(@Nullable String shape) {

            this.shape = shape;
            return this;
        }
        @CustomType.Setter
        public Builder sortConfiguration(@Nullable VisualsRadarChartVisualChartConfigurationSortConfiguration sortConfiguration) {

            this.sortConfiguration = sortConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder startAngle(@Nullable Double startAngle) {

            this.startAngle = startAngle;
            return this;
        }
        @CustomType.Setter
        public Builder visualPalette(@Nullable VisualPalette visualPalette) {

            this.visualPalette = visualPalette;
            return this;
        }
        public VisualsRadarChartVisualChartConfiguration build() {
            final var _resultValue = new VisualsRadarChartVisualChartConfiguration();
            _resultValue.alternateBandColorsVisibility = alternateBandColorsVisibility;
            _resultValue.alternateBandEvenColor = alternateBandEvenColor;
            _resultValue.alternateBandOddColor = alternateBandOddColor;
            _resultValue.baseSeriesSettings = baseSeriesSettings;
            _resultValue.categoryAxis = categoryAxis;
            _resultValue.categoryLabelOptions = categoryLabelOptions;
            _resultValue.colorAxis = colorAxis;
            _resultValue.colorLabelOptions = colorLabelOptions;
            _resultValue.fieldWells = fieldWells;
            _resultValue.legend = legend;
            _resultValue.shape = shape;
            _resultValue.sortConfiguration = sortConfiguration;
            _resultValue.startAngle = startAngle;
            _resultValue.visualPalette = visualPalette;
            return _resultValue;
        }
    }
}
