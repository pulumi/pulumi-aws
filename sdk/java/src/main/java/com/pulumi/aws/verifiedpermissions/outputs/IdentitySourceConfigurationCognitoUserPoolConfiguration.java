// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.verifiedpermissions.outputs;

import com.pulumi.aws.verifiedpermissions.outputs.IdentitySourceConfigurationCognitoUserPoolConfigurationGroupConfiguration;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class IdentitySourceConfigurationCognitoUserPoolConfiguration {
    /**
     * @return The unique application client IDs that are associated with the specified Amazon Cognito user pool.
     * 
     */
    private @Nullable List<String> clientIds;
    /**
     * @return The type of entity that a policy store maps to groups from an Amazon Cognito user pool identity source. See Group Configuration below.
     * 
     */
    private @Nullable IdentitySourceConfigurationCognitoUserPoolConfigurationGroupConfiguration groupConfiguration;
    /**
     * @return The Amazon Resource Name (ARN) of the Amazon Cognito user pool that contains the identities to be authorized.
     * 
     */
    private String userPoolArn;

    private IdentitySourceConfigurationCognitoUserPoolConfiguration() {}
    /**
     * @return The unique application client IDs that are associated with the specified Amazon Cognito user pool.
     * 
     */
    public List<String> clientIds() {
        return this.clientIds == null ? List.of() : this.clientIds;
    }
    /**
     * @return The type of entity that a policy store maps to groups from an Amazon Cognito user pool identity source. See Group Configuration below.
     * 
     */
    public Optional<IdentitySourceConfigurationCognitoUserPoolConfigurationGroupConfiguration> groupConfiguration() {
        return Optional.ofNullable(this.groupConfiguration);
    }
    /**
     * @return The Amazon Resource Name (ARN) of the Amazon Cognito user pool that contains the identities to be authorized.
     * 
     */
    public String userPoolArn() {
        return this.userPoolArn;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IdentitySourceConfigurationCognitoUserPoolConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> clientIds;
        private @Nullable IdentitySourceConfigurationCognitoUserPoolConfigurationGroupConfiguration groupConfiguration;
        private String userPoolArn;
        public Builder() {}
        public Builder(IdentitySourceConfigurationCognitoUserPoolConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientIds = defaults.clientIds;
    	      this.groupConfiguration = defaults.groupConfiguration;
    	      this.userPoolArn = defaults.userPoolArn;
        }

        @CustomType.Setter
        public Builder clientIds(@Nullable List<String> clientIds) {

            this.clientIds = clientIds;
            return this;
        }
        public Builder clientIds(String... clientIds) {
            return clientIds(List.of(clientIds));
        }
        @CustomType.Setter
        public Builder groupConfiguration(@Nullable IdentitySourceConfigurationCognitoUserPoolConfigurationGroupConfiguration groupConfiguration) {

            this.groupConfiguration = groupConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder userPoolArn(String userPoolArn) {
            if (userPoolArn == null) {
              throw new MissingRequiredPropertyException("IdentitySourceConfigurationCognitoUserPoolConfiguration", "userPoolArn");
            }
            this.userPoolArn = userPoolArn;
            return this;
        }
        public IdentitySourceConfigurationCognitoUserPoolConfiguration build() {
            final var _resultValue = new IdentitySourceConfigurationCognitoUserPoolConfiguration();
            _resultValue.clientIds = clientIds;
            _resultValue.groupConfiguration = groupConfiguration;
            _resultValue.userPoolArn = userPoolArn;
            return _resultValue;
        }
    }
}
