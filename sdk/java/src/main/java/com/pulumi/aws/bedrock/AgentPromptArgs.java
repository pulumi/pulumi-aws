// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock;

import com.pulumi.aws.bedrock.inputs.AgentPromptVariantArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AgentPromptArgs extends com.pulumi.resources.ResourceArgs {

    public static final AgentPromptArgs Empty = new AgentPromptArgs();

    /**
     * Amazon Resource Name (ARN) of the KMS key that you encrypted the prompt with.
     * 
     */
    @Import(name="customerEncryptionKeyArn")
    private @Nullable Output<String> customerEncryptionKeyArn;

    /**
     * @return Amazon Resource Name (ARN) of the KMS key that you encrypted the prompt with.
     * 
     */
    public Optional<Output<String>> customerEncryptionKeyArn() {
        return Optional.ofNullable(this.customerEncryptionKeyArn);
    }

    /**
     * Name of the default variant for your prompt.
     * 
     */
    @Import(name="defaultVariant")
    private @Nullable Output<String> defaultVariant;

    /**
     * @return Name of the default variant for your prompt.
     * 
     */
    public Optional<Output<String>> defaultVariant() {
        return Optional.ofNullable(this.defaultVariant);
    }

    /**
     * Description of the prompt.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the prompt.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Name of the prompt.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the prompt.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A list of objects, each containing details about a variant of the prompt. See Variant for more information.
     * 
     */
    @Import(name="variants")
    private @Nullable Output<List<AgentPromptVariantArgs>> variants;

    /**
     * @return A list of objects, each containing details about a variant of the prompt. See Variant for more information.
     * 
     */
    public Optional<Output<List<AgentPromptVariantArgs>>> variants() {
        return Optional.ofNullable(this.variants);
    }

    private AgentPromptArgs() {}

    private AgentPromptArgs(AgentPromptArgs $) {
        this.customerEncryptionKeyArn = $.customerEncryptionKeyArn;
        this.defaultVariant = $.defaultVariant;
        this.description = $.description;
        this.name = $.name;
        this.tags = $.tags;
        this.variants = $.variants;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentPromptArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentPromptArgs $;

        public Builder() {
            $ = new AgentPromptArgs();
        }

        public Builder(AgentPromptArgs defaults) {
            $ = new AgentPromptArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customerEncryptionKeyArn Amazon Resource Name (ARN) of the KMS key that you encrypted the prompt with.
         * 
         * @return builder
         * 
         */
        public Builder customerEncryptionKeyArn(@Nullable Output<String> customerEncryptionKeyArn) {
            $.customerEncryptionKeyArn = customerEncryptionKeyArn;
            return this;
        }

        /**
         * @param customerEncryptionKeyArn Amazon Resource Name (ARN) of the KMS key that you encrypted the prompt with.
         * 
         * @return builder
         * 
         */
        public Builder customerEncryptionKeyArn(String customerEncryptionKeyArn) {
            return customerEncryptionKeyArn(Output.of(customerEncryptionKeyArn));
        }

        /**
         * @param defaultVariant Name of the default variant for your prompt.
         * 
         * @return builder
         * 
         */
        public Builder defaultVariant(@Nullable Output<String> defaultVariant) {
            $.defaultVariant = defaultVariant;
            return this;
        }

        /**
         * @param defaultVariant Name of the default variant for your prompt.
         * 
         * @return builder
         * 
         */
        public Builder defaultVariant(String defaultVariant) {
            return defaultVariant(Output.of(defaultVariant));
        }

        /**
         * @param description Description of the prompt.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the prompt.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name Name of the prompt.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the prompt.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param tags Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param variants A list of objects, each containing details about a variant of the prompt. See Variant for more information.
         * 
         * @return builder
         * 
         */
        public Builder variants(@Nullable Output<List<AgentPromptVariantArgs>> variants) {
            $.variants = variants;
            return this;
        }

        /**
         * @param variants A list of objects, each containing details about a variant of the prompt. See Variant for more information.
         * 
         * @return builder
         * 
         */
        public Builder variants(List<AgentPromptVariantArgs> variants) {
            return variants(Output.of(variants));
        }

        /**
         * @param variants A list of objects, each containing details about a variant of the prompt. See Variant for more information.
         * 
         * @return builder
         * 
         */
        public Builder variants(AgentPromptVariantArgs... variants) {
            return variants(List.of(variants));
        }

        public AgentPromptArgs build() {
            return $;
        }
    }

}
