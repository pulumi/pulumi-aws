// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DefaultVpcState extends com.pulumi.resources.ResourceArgs {

    public static final DefaultVpcState Empty = new DefaultVpcState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="assignGeneratedIpv6CidrBlock")
    private @Nullable Output<Boolean> assignGeneratedIpv6CidrBlock;

    public Optional<Output<Boolean>> assignGeneratedIpv6CidrBlock() {
        return Optional.ofNullable(this.assignGeneratedIpv6CidrBlock);
    }

    /**
     * The primary IPv4 CIDR block for the VPC
     * 
     */
    @Import(name="cidrBlock")
    private @Nullable Output<String> cidrBlock;

    /**
     * @return The primary IPv4 CIDR block for the VPC
     * 
     */
    public Optional<Output<String>> cidrBlock() {
        return Optional.ofNullable(this.cidrBlock);
    }

    @Import(name="defaultNetworkAclId")
    private @Nullable Output<String> defaultNetworkAclId;

    public Optional<Output<String>> defaultNetworkAclId() {
        return Optional.ofNullable(this.defaultNetworkAclId);
    }

    @Import(name="defaultRouteTableId")
    private @Nullable Output<String> defaultRouteTableId;

    public Optional<Output<String>> defaultRouteTableId() {
        return Optional.ofNullable(this.defaultRouteTableId);
    }

    @Import(name="defaultSecurityGroupId")
    private @Nullable Output<String> defaultSecurityGroupId;

    public Optional<Output<String>> defaultSecurityGroupId() {
        return Optional.ofNullable(this.defaultSecurityGroupId);
    }

    @Import(name="dhcpOptionsId")
    private @Nullable Output<String> dhcpOptionsId;

    public Optional<Output<String>> dhcpOptionsId() {
        return Optional.ofNullable(this.dhcpOptionsId);
    }

    @Import(name="enableDnsHostnames")
    private @Nullable Output<Boolean> enableDnsHostnames;

    public Optional<Output<Boolean>> enableDnsHostnames() {
        return Optional.ofNullable(this.enableDnsHostnames);
    }

    @Import(name="enableDnsSupport")
    private @Nullable Output<Boolean> enableDnsSupport;

    public Optional<Output<Boolean>> enableDnsSupport() {
        return Optional.ofNullable(this.enableDnsSupport);
    }

    @Import(name="enableNetworkAddressUsageMetrics")
    private @Nullable Output<Boolean> enableNetworkAddressUsageMetrics;

    public Optional<Output<Boolean>> enableNetworkAddressUsageMetrics() {
        return Optional.ofNullable(this.enableNetworkAddressUsageMetrics);
    }

    @Import(name="existingDefaultVpc")
    private @Nullable Output<Boolean> existingDefaultVpc;

    public Optional<Output<Boolean>> existingDefaultVpc() {
        return Optional.ofNullable(this.existingDefaultVpc);
    }

    /**
     * Whether destroying the resource deletes the default VPC. Default: `false`
     * 
     */
    @Import(name="forceDestroy")
    private @Nullable Output<Boolean> forceDestroy;

    /**
     * @return Whether destroying the resource deletes the default VPC. Default: `false`
     * 
     */
    public Optional<Output<Boolean>> forceDestroy() {
        return Optional.ofNullable(this.forceDestroy);
    }

    /**
     * The allowed tenancy of instances launched into the VPC
     * 
     */
    @Import(name="instanceTenancy")
    private @Nullable Output<String> instanceTenancy;

    /**
     * @return The allowed tenancy of instances launched into the VPC
     * 
     */
    public Optional<Output<String>> instanceTenancy() {
        return Optional.ofNullable(this.instanceTenancy);
    }

    @Import(name="ipv6AssociationId")
    private @Nullable Output<String> ipv6AssociationId;

    public Optional<Output<String>> ipv6AssociationId() {
        return Optional.ofNullable(this.ipv6AssociationId);
    }

    @Import(name="ipv6CidrBlock")
    private @Nullable Output<String> ipv6CidrBlock;

    public Optional<Output<String>> ipv6CidrBlock() {
        return Optional.ofNullable(this.ipv6CidrBlock);
    }

    @Import(name="ipv6CidrBlockNetworkBorderGroup")
    private @Nullable Output<String> ipv6CidrBlockNetworkBorderGroup;

    public Optional<Output<String>> ipv6CidrBlockNetworkBorderGroup() {
        return Optional.ofNullable(this.ipv6CidrBlockNetworkBorderGroup);
    }

    @Import(name="ipv6IpamPoolId")
    private @Nullable Output<String> ipv6IpamPoolId;

    public Optional<Output<String>> ipv6IpamPoolId() {
        return Optional.ofNullable(this.ipv6IpamPoolId);
    }

    @Import(name="ipv6NetmaskLength")
    private @Nullable Output<Integer> ipv6NetmaskLength;

    public Optional<Output<Integer>> ipv6NetmaskLength() {
        return Optional.ofNullable(this.ipv6NetmaskLength);
    }

    @Import(name="mainRouteTableId")
    private @Nullable Output<String> mainRouteTableId;

    public Optional<Output<String>> mainRouteTableId() {
        return Optional.ofNullable(this.mainRouteTableId);
    }

    @Import(name="ownerId")
    private @Nullable Output<String> ownerId;

    public Optional<Output<String>> ownerId() {
        return Optional.ofNullable(this.ownerId);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private DefaultVpcState() {}

    private DefaultVpcState(DefaultVpcState $) {
        this.arn = $.arn;
        this.assignGeneratedIpv6CidrBlock = $.assignGeneratedIpv6CidrBlock;
        this.cidrBlock = $.cidrBlock;
        this.defaultNetworkAclId = $.defaultNetworkAclId;
        this.defaultRouteTableId = $.defaultRouteTableId;
        this.defaultSecurityGroupId = $.defaultSecurityGroupId;
        this.dhcpOptionsId = $.dhcpOptionsId;
        this.enableDnsHostnames = $.enableDnsHostnames;
        this.enableDnsSupport = $.enableDnsSupport;
        this.enableNetworkAddressUsageMetrics = $.enableNetworkAddressUsageMetrics;
        this.existingDefaultVpc = $.existingDefaultVpc;
        this.forceDestroy = $.forceDestroy;
        this.instanceTenancy = $.instanceTenancy;
        this.ipv6AssociationId = $.ipv6AssociationId;
        this.ipv6CidrBlock = $.ipv6CidrBlock;
        this.ipv6CidrBlockNetworkBorderGroup = $.ipv6CidrBlockNetworkBorderGroup;
        this.ipv6IpamPoolId = $.ipv6IpamPoolId;
        this.ipv6NetmaskLength = $.ipv6NetmaskLength;
        this.mainRouteTableId = $.mainRouteTableId;
        this.ownerId = $.ownerId;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DefaultVpcState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DefaultVpcState $;

        public Builder() {
            $ = new DefaultVpcState();
        }

        public Builder(DefaultVpcState defaults) {
            $ = new DefaultVpcState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder assignGeneratedIpv6CidrBlock(@Nullable Output<Boolean> assignGeneratedIpv6CidrBlock) {
            $.assignGeneratedIpv6CidrBlock = assignGeneratedIpv6CidrBlock;
            return this;
        }

        public Builder assignGeneratedIpv6CidrBlock(Boolean assignGeneratedIpv6CidrBlock) {
            return assignGeneratedIpv6CidrBlock(Output.of(assignGeneratedIpv6CidrBlock));
        }

        /**
         * @param cidrBlock The primary IPv4 CIDR block for the VPC
         * 
         * @return builder
         * 
         */
        public Builder cidrBlock(@Nullable Output<String> cidrBlock) {
            $.cidrBlock = cidrBlock;
            return this;
        }

        /**
         * @param cidrBlock The primary IPv4 CIDR block for the VPC
         * 
         * @return builder
         * 
         */
        public Builder cidrBlock(String cidrBlock) {
            return cidrBlock(Output.of(cidrBlock));
        }

        public Builder defaultNetworkAclId(@Nullable Output<String> defaultNetworkAclId) {
            $.defaultNetworkAclId = defaultNetworkAclId;
            return this;
        }

        public Builder defaultNetworkAclId(String defaultNetworkAclId) {
            return defaultNetworkAclId(Output.of(defaultNetworkAclId));
        }

        public Builder defaultRouteTableId(@Nullable Output<String> defaultRouteTableId) {
            $.defaultRouteTableId = defaultRouteTableId;
            return this;
        }

        public Builder defaultRouteTableId(String defaultRouteTableId) {
            return defaultRouteTableId(Output.of(defaultRouteTableId));
        }

        public Builder defaultSecurityGroupId(@Nullable Output<String> defaultSecurityGroupId) {
            $.defaultSecurityGroupId = defaultSecurityGroupId;
            return this;
        }

        public Builder defaultSecurityGroupId(String defaultSecurityGroupId) {
            return defaultSecurityGroupId(Output.of(defaultSecurityGroupId));
        }

        public Builder dhcpOptionsId(@Nullable Output<String> dhcpOptionsId) {
            $.dhcpOptionsId = dhcpOptionsId;
            return this;
        }

        public Builder dhcpOptionsId(String dhcpOptionsId) {
            return dhcpOptionsId(Output.of(dhcpOptionsId));
        }

        public Builder enableDnsHostnames(@Nullable Output<Boolean> enableDnsHostnames) {
            $.enableDnsHostnames = enableDnsHostnames;
            return this;
        }

        public Builder enableDnsHostnames(Boolean enableDnsHostnames) {
            return enableDnsHostnames(Output.of(enableDnsHostnames));
        }

        public Builder enableDnsSupport(@Nullable Output<Boolean> enableDnsSupport) {
            $.enableDnsSupport = enableDnsSupport;
            return this;
        }

        public Builder enableDnsSupport(Boolean enableDnsSupport) {
            return enableDnsSupport(Output.of(enableDnsSupport));
        }

        public Builder enableNetworkAddressUsageMetrics(@Nullable Output<Boolean> enableNetworkAddressUsageMetrics) {
            $.enableNetworkAddressUsageMetrics = enableNetworkAddressUsageMetrics;
            return this;
        }

        public Builder enableNetworkAddressUsageMetrics(Boolean enableNetworkAddressUsageMetrics) {
            return enableNetworkAddressUsageMetrics(Output.of(enableNetworkAddressUsageMetrics));
        }

        public Builder existingDefaultVpc(@Nullable Output<Boolean> existingDefaultVpc) {
            $.existingDefaultVpc = existingDefaultVpc;
            return this;
        }

        public Builder existingDefaultVpc(Boolean existingDefaultVpc) {
            return existingDefaultVpc(Output.of(existingDefaultVpc));
        }

        /**
         * @param forceDestroy Whether destroying the resource deletes the default VPC. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder forceDestroy(@Nullable Output<Boolean> forceDestroy) {
            $.forceDestroy = forceDestroy;
            return this;
        }

        /**
         * @param forceDestroy Whether destroying the resource deletes the default VPC. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder forceDestroy(Boolean forceDestroy) {
            return forceDestroy(Output.of(forceDestroy));
        }

        /**
         * @param instanceTenancy The allowed tenancy of instances launched into the VPC
         * 
         * @return builder
         * 
         */
        public Builder instanceTenancy(@Nullable Output<String> instanceTenancy) {
            $.instanceTenancy = instanceTenancy;
            return this;
        }

        /**
         * @param instanceTenancy The allowed tenancy of instances launched into the VPC
         * 
         * @return builder
         * 
         */
        public Builder instanceTenancy(String instanceTenancy) {
            return instanceTenancy(Output.of(instanceTenancy));
        }

        public Builder ipv6AssociationId(@Nullable Output<String> ipv6AssociationId) {
            $.ipv6AssociationId = ipv6AssociationId;
            return this;
        }

        public Builder ipv6AssociationId(String ipv6AssociationId) {
            return ipv6AssociationId(Output.of(ipv6AssociationId));
        }

        public Builder ipv6CidrBlock(@Nullable Output<String> ipv6CidrBlock) {
            $.ipv6CidrBlock = ipv6CidrBlock;
            return this;
        }

        public Builder ipv6CidrBlock(String ipv6CidrBlock) {
            return ipv6CidrBlock(Output.of(ipv6CidrBlock));
        }

        public Builder ipv6CidrBlockNetworkBorderGroup(@Nullable Output<String> ipv6CidrBlockNetworkBorderGroup) {
            $.ipv6CidrBlockNetworkBorderGroup = ipv6CidrBlockNetworkBorderGroup;
            return this;
        }

        public Builder ipv6CidrBlockNetworkBorderGroup(String ipv6CidrBlockNetworkBorderGroup) {
            return ipv6CidrBlockNetworkBorderGroup(Output.of(ipv6CidrBlockNetworkBorderGroup));
        }

        public Builder ipv6IpamPoolId(@Nullable Output<String> ipv6IpamPoolId) {
            $.ipv6IpamPoolId = ipv6IpamPoolId;
            return this;
        }

        public Builder ipv6IpamPoolId(String ipv6IpamPoolId) {
            return ipv6IpamPoolId(Output.of(ipv6IpamPoolId));
        }

        public Builder ipv6NetmaskLength(@Nullable Output<Integer> ipv6NetmaskLength) {
            $.ipv6NetmaskLength = ipv6NetmaskLength;
            return this;
        }

        public Builder ipv6NetmaskLength(Integer ipv6NetmaskLength) {
            return ipv6NetmaskLength(Output.of(ipv6NetmaskLength));
        }

        public Builder mainRouteTableId(@Nullable Output<String> mainRouteTableId) {
            $.mainRouteTableId = mainRouteTableId;
            return this;
        }

        public Builder mainRouteTableId(String mainRouteTableId) {
            return mainRouteTableId(Output.of(mainRouteTableId));
        }

        public Builder ownerId(@Nullable Output<String> ownerId) {
            $.ownerId = ownerId;
            return this;
        }

        public Builder ownerId(String ownerId) {
            return ownerId(Output.of(ownerId));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public DefaultVpcState build() {
            return $;
        }
    }

}
