// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.location.inputs;

import com.pulumi.aws.location.inputs.MapConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MapState extends com.pulumi.resources.ResourceArgs {

    public static final MapState Empty = new MapState();

    @Import(name="configuration")
    private @Nullable Output<MapConfigurationArgs> configuration;

    public Optional<Output<MapConfigurationArgs>> configuration() {
        return Optional.ofNullable(this.configuration);
    }

    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="mapArn")
    private @Nullable Output<String> mapArn;

    public Optional<Output<String>> mapArn() {
        return Optional.ofNullable(this.mapArn);
    }

    @Import(name="mapName")
    private @Nullable Output<String> mapName;

    public Optional<Output<String>> mapName() {
        return Optional.ofNullable(this.mapName);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    private MapState() {}

    private MapState(MapState $) {
        this.configuration = $.configuration;
        this.createTime = $.createTime;
        this.description = $.description;
        this.mapArn = $.mapArn;
        this.mapName = $.mapName;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.updateTime = $.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MapState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MapState $;

        public Builder() {
            $ = new MapState();
        }

        public Builder(MapState defaults) {
            $ = new MapState(Objects.requireNonNull(defaults));
        }

        public Builder configuration(@Nullable Output<MapConfigurationArgs> configuration) {
            $.configuration = configuration;
            return this;
        }

        public Builder configuration(MapConfigurationArgs configuration) {
            return configuration(Output.of(configuration));
        }

        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder mapArn(@Nullable Output<String> mapArn) {
            $.mapArn = mapArn;
            return this;
        }

        public Builder mapArn(String mapArn) {
            return mapArn(Output.of(mapArn));
        }

        public Builder mapName(@Nullable Output<String> mapName) {
            $.mapName = mapName;
            return this;
        }

        public Builder mapName(String mapName) {
            return mapName(Output.of(mapName));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        public MapState build() {
            return $;
        }
    }

}
