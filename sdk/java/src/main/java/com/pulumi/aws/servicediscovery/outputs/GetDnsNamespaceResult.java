// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.servicediscovery.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDnsNamespaceResult {
    /**
     * @return ARN of the namespace.
     * 
     */
    private @Nullable String arn;
    /**
     * @return Description of the namespace.
     * 
     */
    private @Nullable String description;
    /**
     * @return ID for the hosted zone that Amazon Route 53 creates when you create a namespace.
     * 
     */
    private @Nullable String hostedZone;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private String name;
    /**
     * @return Map of tags for the resource.
     * 
     */
    private @Nullable Map<String,String> tags;
    private String type;

    private GetDnsNamespaceResult() {}
    /**
     * @return ARN of the namespace.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return Description of the namespace.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return ID for the hosted zone that Amazon Route 53 creates when you create a namespace.
     * 
     */
    public Optional<String> hostedZone() {
        return Optional.ofNullable(this.hostedZone);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public String name() {
        return this.name;
    }
    /**
     * @return Map of tags for the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDnsNamespaceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String description;
        private @Nullable String hostedZone;
        private @Nullable String id;
        private String name;
        private @Nullable Map<String,String> tags;
        private String type;
        public Builder() {}
        public Builder(GetDnsNamespaceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.description = defaults.description;
    	      this.hostedZone = defaults.hostedZone;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder hostedZone(@Nullable String hostedZone) {
            this.hostedZone = hostedZone;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetDnsNamespaceResult build() {
            final var o = new GetDnsNamespaceResult();
            o.arn = arn;
            o.description = description;
            o.hostedZone = hostedZone;
            o.id = id;
            o.name = name;
            o.tags = tags;
            o.type = type;
            return o;
        }
    }
}
