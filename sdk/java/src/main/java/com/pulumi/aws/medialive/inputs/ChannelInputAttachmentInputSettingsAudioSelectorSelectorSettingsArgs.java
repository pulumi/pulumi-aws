// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.medialive.inputs;

import com.pulumi.aws.medialive.inputs.ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioHlsRenditionSelectionArgs;
import com.pulumi.aws.medialive.inputs.ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioLanguageSelectionArgs;
import com.pulumi.aws.medialive.inputs.ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioPidSelectionArgs;
import com.pulumi.aws.medialive.inputs.ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioTrackSelectionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsArgs Empty = new ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsArgs();

    @Import(name="audioHlsRenditionSelection")
    private @Nullable Output<ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioHlsRenditionSelectionArgs> audioHlsRenditionSelection;

    public Optional<Output<ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioHlsRenditionSelectionArgs>> audioHlsRenditionSelection() {
        return Optional.ofNullable(this.audioHlsRenditionSelection);
    }

    @Import(name="audioLanguageSelection")
    private @Nullable Output<ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioLanguageSelectionArgs> audioLanguageSelection;

    public Optional<Output<ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioLanguageSelectionArgs>> audioLanguageSelection() {
        return Optional.ofNullable(this.audioLanguageSelection);
    }

    @Import(name="audioPidSelection")
    private @Nullable Output<ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioPidSelectionArgs> audioPidSelection;

    public Optional<Output<ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioPidSelectionArgs>> audioPidSelection() {
        return Optional.ofNullable(this.audioPidSelection);
    }

    @Import(name="audioTrackSelection")
    private @Nullable Output<ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioTrackSelectionArgs> audioTrackSelection;

    public Optional<Output<ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioTrackSelectionArgs>> audioTrackSelection() {
        return Optional.ofNullable(this.audioTrackSelection);
    }

    private ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsArgs() {}

    private ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsArgs(ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsArgs $) {
        this.audioHlsRenditionSelection = $.audioHlsRenditionSelection;
        this.audioLanguageSelection = $.audioLanguageSelection;
        this.audioPidSelection = $.audioPidSelection;
        this.audioTrackSelection = $.audioTrackSelection;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsArgs $;

        public Builder() {
            $ = new ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsArgs();
        }

        public Builder(ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsArgs defaults) {
            $ = new ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsArgs(Objects.requireNonNull(defaults));
        }

        public Builder audioHlsRenditionSelection(@Nullable Output<ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioHlsRenditionSelectionArgs> audioHlsRenditionSelection) {
            $.audioHlsRenditionSelection = audioHlsRenditionSelection;
            return this;
        }

        public Builder audioHlsRenditionSelection(ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioHlsRenditionSelectionArgs audioHlsRenditionSelection) {
            return audioHlsRenditionSelection(Output.of(audioHlsRenditionSelection));
        }

        public Builder audioLanguageSelection(@Nullable Output<ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioLanguageSelectionArgs> audioLanguageSelection) {
            $.audioLanguageSelection = audioLanguageSelection;
            return this;
        }

        public Builder audioLanguageSelection(ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioLanguageSelectionArgs audioLanguageSelection) {
            return audioLanguageSelection(Output.of(audioLanguageSelection));
        }

        public Builder audioPidSelection(@Nullable Output<ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioPidSelectionArgs> audioPidSelection) {
            $.audioPidSelection = audioPidSelection;
            return this;
        }

        public Builder audioPidSelection(ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioPidSelectionArgs audioPidSelection) {
            return audioPidSelection(Output.of(audioPidSelection));
        }

        public Builder audioTrackSelection(@Nullable Output<ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioTrackSelectionArgs> audioTrackSelection) {
            $.audioTrackSelection = audioTrackSelection;
            return this;
        }

        public Builder audioTrackSelection(ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioTrackSelectionArgs audioTrackSelection) {
            return audioTrackSelection(Output.of(audioTrackSelection));
        }

        public ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsArgs build() {
            return $;
        }
    }

}
