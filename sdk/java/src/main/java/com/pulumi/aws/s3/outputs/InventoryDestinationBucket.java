// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3.outputs;

import com.pulumi.aws.s3.outputs.InventoryDestinationBucketEncryption;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InventoryDestinationBucket {
    /**
     * @return ID of the account that owns the destination bucket. Recommended to be set to prevent problems if the destination bucket ownership changes.
     * 
     */
    private @Nullable String accountId;
    /**
     * @return Amazon S3 bucket ARN of the destination.
     * 
     */
    private String bucketArn;
    /**
     * @return Contains the type of server-side encryption to use to encrypt the inventory (documented below).
     * 
     */
    private @Nullable InventoryDestinationBucketEncryption encryption;
    /**
     * @return Specifies the output format of the inventory results. Can be `CSV`, [`ORC`](https://orc.apache.org/) or [`Parquet`](https://parquet.apache.org/).
     * 
     */
    private String format;
    /**
     * @return Prefix that is prepended to all inventory results.
     * 
     */
    private @Nullable String prefix;

    private InventoryDestinationBucket() {}
    /**
     * @return ID of the account that owns the destination bucket. Recommended to be set to prevent problems if the destination bucket ownership changes.
     * 
     */
    public Optional<String> accountId() {
        return Optional.ofNullable(this.accountId);
    }
    /**
     * @return Amazon S3 bucket ARN of the destination.
     * 
     */
    public String bucketArn() {
        return this.bucketArn;
    }
    /**
     * @return Contains the type of server-side encryption to use to encrypt the inventory (documented below).
     * 
     */
    public Optional<InventoryDestinationBucketEncryption> encryption() {
        return Optional.ofNullable(this.encryption);
    }
    /**
     * @return Specifies the output format of the inventory results. Can be `CSV`, [`ORC`](https://orc.apache.org/) or [`Parquet`](https://parquet.apache.org/).
     * 
     */
    public String format() {
        return this.format;
    }
    /**
     * @return Prefix that is prepended to all inventory results.
     * 
     */
    public Optional<String> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InventoryDestinationBucket defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accountId;
        private String bucketArn;
        private @Nullable InventoryDestinationBucketEncryption encryption;
        private String format;
        private @Nullable String prefix;
        public Builder() {}
        public Builder(InventoryDestinationBucket defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.bucketArn = defaults.bucketArn;
    	      this.encryption = defaults.encryption;
    	      this.format = defaults.format;
    	      this.prefix = defaults.prefix;
        }

        @CustomType.Setter
        public Builder accountId(@Nullable String accountId) {

            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder bucketArn(String bucketArn) {
            if (bucketArn == null) {
              throw new MissingRequiredPropertyException("InventoryDestinationBucket", "bucketArn");
            }
            this.bucketArn = bucketArn;
            return this;
        }
        @CustomType.Setter
        public Builder encryption(@Nullable InventoryDestinationBucketEncryption encryption) {

            this.encryption = encryption;
            return this;
        }
        @CustomType.Setter
        public Builder format(String format) {
            if (format == null) {
              throw new MissingRequiredPropertyException("InventoryDestinationBucket", "format");
            }
            this.format = format;
            return this;
        }
        @CustomType.Setter
        public Builder prefix(@Nullable String prefix) {

            this.prefix = prefix;
            return this;
        }
        public InventoryDestinationBucket build() {
            final var _resultValue = new InventoryDestinationBucket();
            _resultValue.accountId = accountId;
            _resultValue.bucketArn = bucketArn;
            _resultValue.encryption = encryption;
            _resultValue.format = format;
            _resultValue.prefix = prefix;
            return _resultValue;
        }
    }
}
