// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CustomPermissionsCapabilities {
    /**
     * @return The ability to add or run anomaly detection. Valid values: `DENY`.
     * 
     */
    private @Nullable String addOrRunAnomalyDetectionForAnalyses;
    /**
     * @return The ability to create and update email reports. Valid values: `DENY`.
     * 
     */
    private @Nullable String createAndUpdateDashboardEmailReports;
    /**
     * @return The ability to create and update data sources. Valid values: `DENY`.
     * 
     */
    private @Nullable String createAndUpdateDataSources;
    /**
     * @return The ability to create and update datasets. Valid values: `DENY`.
     * 
     */
    private @Nullable String createAndUpdateDatasets;
    /**
     * @return The ability to export to create and update themes. Valid values: `DENY`.
     * 
     */
    private @Nullable String createAndUpdateThemes;
    /**
     * @return The ability to create and update threshold alerts. Valid values: `DENY`.
     * 
     */
    private @Nullable String createAndUpdateThresholdAlerts;
    /**
     * @return The ability to create shared folders. Valid values: `DENY`.
     * 
     */
    private @Nullable String createSharedFolders;
    /**
     * @return The ability to create a SPICE dataset. Valid values: `DENY`.
     * 
     */
    private @Nullable String createSpiceDataset;
    /**
     * @return The ability to export to CSV files from the UI. Valid values: `DENY`.
     * 
     */
    private @Nullable String exportToCsv;
    /**
     * @return The ability to export to CSV files in scheduled email reports. Valid values: `DENY`.
     * 
     */
    private @Nullable String exportToCsvInScheduledReports;
    /**
     * @return The ability to export to Excel files from the UI. Valid values: `DENY`.
     * 
     */
    private @Nullable String exportToExcel;
    /**
     * @return The ability to export to Excel files in scheduled email reports. Valid values: `DENY`.
     * 
     */
    private @Nullable String exportToExcelInScheduledReports;
    /**
     * @return The ability to export to PDF files from the UI. Valid values: `DENY`.
     * 
     */
    private @Nullable String exportToPdf;
    /**
     * @return The ability to export to PDF files in scheduled email reports. Valid values: `DENY`.
     * 
     */
    private @Nullable String exportToPdfInScheduledReports;
    /**
     * @return The ability to include content in scheduled email reports. Valid values: `DENY`.
     * 
     */
    private @Nullable String includeContentInScheduledReportsEmail;
    /**
     * @return The ability to print reports. Valid values: `DENY`.
     * 
     */
    private @Nullable String printReports;
    /**
     * @return The ability to rename shared folders. Valid values: `DENY`.
     * 
     */
    private @Nullable String renameSharedFolders;
    /**
     * @return The ability to share analyses. Valid values: `DENY`.
     * 
     */
    private @Nullable String shareAnalyses;
    /**
     * @return The ability to share dashboards. Valid values: `DENY`.
     * 
     */
    private @Nullable String shareDashboards;
    /**
     * @return The ability to share data sources. Valid values: `DENY`.
     * 
     */
    private @Nullable String shareDataSources;
    /**
     * @return The ability to share datasets. Valid values: `DENY`.
     * 
     */
    private @Nullable String shareDatasets;
    /**
     * @return The ability to subscribe to email reports. Valid values: `DENY`.
     * 
     */
    private @Nullable String subscribeDashboardEmailReports;
    /**
     * @return The ability to view account SPICE capacity. Valid values: `DENY`.
     * 
     */
    private @Nullable String viewAccountSpiceCapacity;

    private CustomPermissionsCapabilities() {}
    /**
     * @return The ability to add or run anomaly detection. Valid values: `DENY`.
     * 
     */
    public Optional<String> addOrRunAnomalyDetectionForAnalyses() {
        return Optional.ofNullable(this.addOrRunAnomalyDetectionForAnalyses);
    }
    /**
     * @return The ability to create and update email reports. Valid values: `DENY`.
     * 
     */
    public Optional<String> createAndUpdateDashboardEmailReports() {
        return Optional.ofNullable(this.createAndUpdateDashboardEmailReports);
    }
    /**
     * @return The ability to create and update data sources. Valid values: `DENY`.
     * 
     */
    public Optional<String> createAndUpdateDataSources() {
        return Optional.ofNullable(this.createAndUpdateDataSources);
    }
    /**
     * @return The ability to create and update datasets. Valid values: `DENY`.
     * 
     */
    public Optional<String> createAndUpdateDatasets() {
        return Optional.ofNullable(this.createAndUpdateDatasets);
    }
    /**
     * @return The ability to export to create and update themes. Valid values: `DENY`.
     * 
     */
    public Optional<String> createAndUpdateThemes() {
        return Optional.ofNullable(this.createAndUpdateThemes);
    }
    /**
     * @return The ability to create and update threshold alerts. Valid values: `DENY`.
     * 
     */
    public Optional<String> createAndUpdateThresholdAlerts() {
        return Optional.ofNullable(this.createAndUpdateThresholdAlerts);
    }
    /**
     * @return The ability to create shared folders. Valid values: `DENY`.
     * 
     */
    public Optional<String> createSharedFolders() {
        return Optional.ofNullable(this.createSharedFolders);
    }
    /**
     * @return The ability to create a SPICE dataset. Valid values: `DENY`.
     * 
     */
    public Optional<String> createSpiceDataset() {
        return Optional.ofNullable(this.createSpiceDataset);
    }
    /**
     * @return The ability to export to CSV files from the UI. Valid values: `DENY`.
     * 
     */
    public Optional<String> exportToCsv() {
        return Optional.ofNullable(this.exportToCsv);
    }
    /**
     * @return The ability to export to CSV files in scheduled email reports. Valid values: `DENY`.
     * 
     */
    public Optional<String> exportToCsvInScheduledReports() {
        return Optional.ofNullable(this.exportToCsvInScheduledReports);
    }
    /**
     * @return The ability to export to Excel files from the UI. Valid values: `DENY`.
     * 
     */
    public Optional<String> exportToExcel() {
        return Optional.ofNullable(this.exportToExcel);
    }
    /**
     * @return The ability to export to Excel files in scheduled email reports. Valid values: `DENY`.
     * 
     */
    public Optional<String> exportToExcelInScheduledReports() {
        return Optional.ofNullable(this.exportToExcelInScheduledReports);
    }
    /**
     * @return The ability to export to PDF files from the UI. Valid values: `DENY`.
     * 
     */
    public Optional<String> exportToPdf() {
        return Optional.ofNullable(this.exportToPdf);
    }
    /**
     * @return The ability to export to PDF files in scheduled email reports. Valid values: `DENY`.
     * 
     */
    public Optional<String> exportToPdfInScheduledReports() {
        return Optional.ofNullable(this.exportToPdfInScheduledReports);
    }
    /**
     * @return The ability to include content in scheduled email reports. Valid values: `DENY`.
     * 
     */
    public Optional<String> includeContentInScheduledReportsEmail() {
        return Optional.ofNullable(this.includeContentInScheduledReportsEmail);
    }
    /**
     * @return The ability to print reports. Valid values: `DENY`.
     * 
     */
    public Optional<String> printReports() {
        return Optional.ofNullable(this.printReports);
    }
    /**
     * @return The ability to rename shared folders. Valid values: `DENY`.
     * 
     */
    public Optional<String> renameSharedFolders() {
        return Optional.ofNullable(this.renameSharedFolders);
    }
    /**
     * @return The ability to share analyses. Valid values: `DENY`.
     * 
     */
    public Optional<String> shareAnalyses() {
        return Optional.ofNullable(this.shareAnalyses);
    }
    /**
     * @return The ability to share dashboards. Valid values: `DENY`.
     * 
     */
    public Optional<String> shareDashboards() {
        return Optional.ofNullable(this.shareDashboards);
    }
    /**
     * @return The ability to share data sources. Valid values: `DENY`.
     * 
     */
    public Optional<String> shareDataSources() {
        return Optional.ofNullable(this.shareDataSources);
    }
    /**
     * @return The ability to share datasets. Valid values: `DENY`.
     * 
     */
    public Optional<String> shareDatasets() {
        return Optional.ofNullable(this.shareDatasets);
    }
    /**
     * @return The ability to subscribe to email reports. Valid values: `DENY`.
     * 
     */
    public Optional<String> subscribeDashboardEmailReports() {
        return Optional.ofNullable(this.subscribeDashboardEmailReports);
    }
    /**
     * @return The ability to view account SPICE capacity. Valid values: `DENY`.
     * 
     */
    public Optional<String> viewAccountSpiceCapacity() {
        return Optional.ofNullable(this.viewAccountSpiceCapacity);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CustomPermissionsCapabilities defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String addOrRunAnomalyDetectionForAnalyses;
        private @Nullable String createAndUpdateDashboardEmailReports;
        private @Nullable String createAndUpdateDataSources;
        private @Nullable String createAndUpdateDatasets;
        private @Nullable String createAndUpdateThemes;
        private @Nullable String createAndUpdateThresholdAlerts;
        private @Nullable String createSharedFolders;
        private @Nullable String createSpiceDataset;
        private @Nullable String exportToCsv;
        private @Nullable String exportToCsvInScheduledReports;
        private @Nullable String exportToExcel;
        private @Nullable String exportToExcelInScheduledReports;
        private @Nullable String exportToPdf;
        private @Nullable String exportToPdfInScheduledReports;
        private @Nullable String includeContentInScheduledReportsEmail;
        private @Nullable String printReports;
        private @Nullable String renameSharedFolders;
        private @Nullable String shareAnalyses;
        private @Nullable String shareDashboards;
        private @Nullable String shareDataSources;
        private @Nullable String shareDatasets;
        private @Nullable String subscribeDashboardEmailReports;
        private @Nullable String viewAccountSpiceCapacity;
        public Builder() {}
        public Builder(CustomPermissionsCapabilities defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addOrRunAnomalyDetectionForAnalyses = defaults.addOrRunAnomalyDetectionForAnalyses;
    	      this.createAndUpdateDashboardEmailReports = defaults.createAndUpdateDashboardEmailReports;
    	      this.createAndUpdateDataSources = defaults.createAndUpdateDataSources;
    	      this.createAndUpdateDatasets = defaults.createAndUpdateDatasets;
    	      this.createAndUpdateThemes = defaults.createAndUpdateThemes;
    	      this.createAndUpdateThresholdAlerts = defaults.createAndUpdateThresholdAlerts;
    	      this.createSharedFolders = defaults.createSharedFolders;
    	      this.createSpiceDataset = defaults.createSpiceDataset;
    	      this.exportToCsv = defaults.exportToCsv;
    	      this.exportToCsvInScheduledReports = defaults.exportToCsvInScheduledReports;
    	      this.exportToExcel = defaults.exportToExcel;
    	      this.exportToExcelInScheduledReports = defaults.exportToExcelInScheduledReports;
    	      this.exportToPdf = defaults.exportToPdf;
    	      this.exportToPdfInScheduledReports = defaults.exportToPdfInScheduledReports;
    	      this.includeContentInScheduledReportsEmail = defaults.includeContentInScheduledReportsEmail;
    	      this.printReports = defaults.printReports;
    	      this.renameSharedFolders = defaults.renameSharedFolders;
    	      this.shareAnalyses = defaults.shareAnalyses;
    	      this.shareDashboards = defaults.shareDashboards;
    	      this.shareDataSources = defaults.shareDataSources;
    	      this.shareDatasets = defaults.shareDatasets;
    	      this.subscribeDashboardEmailReports = defaults.subscribeDashboardEmailReports;
    	      this.viewAccountSpiceCapacity = defaults.viewAccountSpiceCapacity;
        }

        @CustomType.Setter
        public Builder addOrRunAnomalyDetectionForAnalyses(@Nullable String addOrRunAnomalyDetectionForAnalyses) {

            this.addOrRunAnomalyDetectionForAnalyses = addOrRunAnomalyDetectionForAnalyses;
            return this;
        }
        @CustomType.Setter
        public Builder createAndUpdateDashboardEmailReports(@Nullable String createAndUpdateDashboardEmailReports) {

            this.createAndUpdateDashboardEmailReports = createAndUpdateDashboardEmailReports;
            return this;
        }
        @CustomType.Setter
        public Builder createAndUpdateDataSources(@Nullable String createAndUpdateDataSources) {

            this.createAndUpdateDataSources = createAndUpdateDataSources;
            return this;
        }
        @CustomType.Setter
        public Builder createAndUpdateDatasets(@Nullable String createAndUpdateDatasets) {

            this.createAndUpdateDatasets = createAndUpdateDatasets;
            return this;
        }
        @CustomType.Setter
        public Builder createAndUpdateThemes(@Nullable String createAndUpdateThemes) {

            this.createAndUpdateThemes = createAndUpdateThemes;
            return this;
        }
        @CustomType.Setter
        public Builder createAndUpdateThresholdAlerts(@Nullable String createAndUpdateThresholdAlerts) {

            this.createAndUpdateThresholdAlerts = createAndUpdateThresholdAlerts;
            return this;
        }
        @CustomType.Setter
        public Builder createSharedFolders(@Nullable String createSharedFolders) {

            this.createSharedFolders = createSharedFolders;
            return this;
        }
        @CustomType.Setter
        public Builder createSpiceDataset(@Nullable String createSpiceDataset) {

            this.createSpiceDataset = createSpiceDataset;
            return this;
        }
        @CustomType.Setter
        public Builder exportToCsv(@Nullable String exportToCsv) {

            this.exportToCsv = exportToCsv;
            return this;
        }
        @CustomType.Setter
        public Builder exportToCsvInScheduledReports(@Nullable String exportToCsvInScheduledReports) {

            this.exportToCsvInScheduledReports = exportToCsvInScheduledReports;
            return this;
        }
        @CustomType.Setter
        public Builder exportToExcel(@Nullable String exportToExcel) {

            this.exportToExcel = exportToExcel;
            return this;
        }
        @CustomType.Setter
        public Builder exportToExcelInScheduledReports(@Nullable String exportToExcelInScheduledReports) {

            this.exportToExcelInScheduledReports = exportToExcelInScheduledReports;
            return this;
        }
        @CustomType.Setter
        public Builder exportToPdf(@Nullable String exportToPdf) {

            this.exportToPdf = exportToPdf;
            return this;
        }
        @CustomType.Setter
        public Builder exportToPdfInScheduledReports(@Nullable String exportToPdfInScheduledReports) {

            this.exportToPdfInScheduledReports = exportToPdfInScheduledReports;
            return this;
        }
        @CustomType.Setter
        public Builder includeContentInScheduledReportsEmail(@Nullable String includeContentInScheduledReportsEmail) {

            this.includeContentInScheduledReportsEmail = includeContentInScheduledReportsEmail;
            return this;
        }
        @CustomType.Setter
        public Builder printReports(@Nullable String printReports) {

            this.printReports = printReports;
            return this;
        }
        @CustomType.Setter
        public Builder renameSharedFolders(@Nullable String renameSharedFolders) {

            this.renameSharedFolders = renameSharedFolders;
            return this;
        }
        @CustomType.Setter
        public Builder shareAnalyses(@Nullable String shareAnalyses) {

            this.shareAnalyses = shareAnalyses;
            return this;
        }
        @CustomType.Setter
        public Builder shareDashboards(@Nullable String shareDashboards) {

            this.shareDashboards = shareDashboards;
            return this;
        }
        @CustomType.Setter
        public Builder shareDataSources(@Nullable String shareDataSources) {

            this.shareDataSources = shareDataSources;
            return this;
        }
        @CustomType.Setter
        public Builder shareDatasets(@Nullable String shareDatasets) {

            this.shareDatasets = shareDatasets;
            return this;
        }
        @CustomType.Setter
        public Builder subscribeDashboardEmailReports(@Nullable String subscribeDashboardEmailReports) {

            this.subscribeDashboardEmailReports = subscribeDashboardEmailReports;
            return this;
        }
        @CustomType.Setter
        public Builder viewAccountSpiceCapacity(@Nullable String viewAccountSpiceCapacity) {

            this.viewAccountSpiceCapacity = viewAccountSpiceCapacity;
            return this;
        }
        public CustomPermissionsCapabilities build() {
            final var _resultValue = new CustomPermissionsCapabilities();
            _resultValue.addOrRunAnomalyDetectionForAnalyses = addOrRunAnomalyDetectionForAnalyses;
            _resultValue.createAndUpdateDashboardEmailReports = createAndUpdateDashboardEmailReports;
            _resultValue.createAndUpdateDataSources = createAndUpdateDataSources;
            _resultValue.createAndUpdateDatasets = createAndUpdateDatasets;
            _resultValue.createAndUpdateThemes = createAndUpdateThemes;
            _resultValue.createAndUpdateThresholdAlerts = createAndUpdateThresholdAlerts;
            _resultValue.createSharedFolders = createSharedFolders;
            _resultValue.createSpiceDataset = createSpiceDataset;
            _resultValue.exportToCsv = exportToCsv;
            _resultValue.exportToCsvInScheduledReports = exportToCsvInScheduledReports;
            _resultValue.exportToExcel = exportToExcel;
            _resultValue.exportToExcelInScheduledReports = exportToExcelInScheduledReports;
            _resultValue.exportToPdf = exportToPdf;
            _resultValue.exportToPdfInScheduledReports = exportToPdfInScheduledReports;
            _resultValue.includeContentInScheduledReportsEmail = includeContentInScheduledReportsEmail;
            _resultValue.printReports = printReports;
            _resultValue.renameSharedFolders = renameSharedFolders;
            _resultValue.shareAnalyses = shareAnalyses;
            _resultValue.shareDashboards = shareDashboards;
            _resultValue.shareDataSources = shareDataSources;
            _resultValue.shareDatasets = shareDatasets;
            _resultValue.subscribeDashboardEmailReports = subscribeDashboardEmailReports;
            _resultValue.viewAccountSpiceCapacity = viewAccountSpiceCapacity;
            return _resultValue;
        }
    }
}
