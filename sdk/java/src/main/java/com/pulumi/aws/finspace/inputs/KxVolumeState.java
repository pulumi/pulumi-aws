// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.finspace.inputs;

import com.pulumi.aws.finspace.inputs.KxVolumeAttachedClusterArgs;
import com.pulumi.aws.finspace.inputs.KxVolumeNas1ConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KxVolumeState extends com.pulumi.resources.ResourceArgs {

    public static final KxVolumeState Empty = new KxVolumeState();

    /**
     * Amazon Resource Name (ARN) identifier of the KX volume.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return Amazon Resource Name (ARN) identifier of the KX volume.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="attachedClusters")
    private @Nullable Output<List<KxVolumeAttachedClusterArgs>> attachedClusters;

    public Optional<Output<List<KxVolumeAttachedClusterArgs>>> attachedClusters() {
        return Optional.ofNullable(this.attachedClusters);
    }

    /**
     * The identifier of the AWS Availability Zone IDs.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="availabilityZones")
    private @Nullable Output<List<String>> availabilityZones;

    /**
     * @return The identifier of the AWS Availability Zone IDs.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<List<String>>> availabilityZones() {
        return Optional.ofNullable(this.availabilityZones);
    }

    /**
     * The number of availability zones you want to assign per volume. Currently, Finspace only support SINGLE for volumes.
     * 
     */
    @Import(name="azMode")
    private @Nullable Output<String> azMode;

    /**
     * @return The number of availability zones you want to assign per volume. Currently, Finspace only support SINGLE for volumes.
     * 
     */
    public Optional<Output<String>> azMode() {
        return Optional.ofNullable(this.azMode);
    }

    /**
     * The timestamp at which the volume was created in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.
     * 
     */
    @Import(name="createdTimestamp")
    private @Nullable Output<String> createdTimestamp;

    /**
     * @return The timestamp at which the volume was created in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.
     * 
     */
    public Optional<Output<String>> createdTimestamp() {
        return Optional.ofNullable(this.createdTimestamp);
    }

    /**
     * Description of the volume.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the volume.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * A unique identifier for the kdb environment, whose clusters can attach to the volume.
     * 
     */
    @Import(name="environmentId")
    private @Nullable Output<String> environmentId;

    /**
     * @return A unique identifier for the kdb environment, whose clusters can attach to the volume.
     * 
     */
    public Optional<Output<String>> environmentId() {
        return Optional.ofNullable(this.environmentId);
    }

    /**
     * Last timestamp at which the volume was updated in FinSpace. Value determined as epoch time in seconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000.
     * 
     */
    @Import(name="lastModifiedTimestamp")
    private @Nullable Output<String> lastModifiedTimestamp;

    /**
     * @return Last timestamp at which the volume was updated in FinSpace. Value determined as epoch time in seconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000.
     * 
     */
    public Optional<Output<String>> lastModifiedTimestamp() {
        return Optional.ofNullable(this.lastModifiedTimestamp);
    }

    /**
     * Unique name for the volumr that you want to create.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Unique name for the volumr that you want to create.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specifies the configuration for the Network attached storage (`NAS_1`) file system volume. This parameter is required when `volume_type` is `NAS_1`. See `nas1_configuration` Argument Reference below.
     * 
     */
    @Import(name="nas1Configurations")
    private @Nullable Output<List<KxVolumeNas1ConfigurationArgs>> nas1Configurations;

    /**
     * @return Specifies the configuration for the Network attached storage (`NAS_1`) file system volume. This parameter is required when `volume_type` is `NAS_1`. See `nas1_configuration` Argument Reference below.
     * 
     */
    public Optional<Output<List<KxVolumeNas1ConfigurationArgs>>> nas1Configurations() {
        return Optional.ofNullable(this.nas1Configurations);
    }

    /**
     * The status of volume creation.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of volume creation.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The error message when a failed state occurs.
     * 
     */
    @Import(name="statusReason")
    private @Nullable Output<String> statusReason;

    /**
     * @return The error message when a failed state occurs.
     * 
     */
    public Optional<Output<String>> statusReason() {
        return Optional.ofNullable(this.statusReason);
    }

    /**
     * A list of key-value pairs to label the volume. You can add up to 50 tags to a volume
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A list of key-value pairs to label the volume. You can add up to 50 tags to a volume
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    /**
     * The type of file system volume. Currently, FinSpace only supports the `NAS_1` volume type. When you select the `NAS_1` volume type, you must also provide `nas1_configuration`.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of file system volume. Currently, FinSpace only supports the `NAS_1` volume type. When you select the `NAS_1` volume type, you must also provide `nas1_configuration`.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private KxVolumeState() {}

    private KxVolumeState(KxVolumeState $) {
        this.arn = $.arn;
        this.attachedClusters = $.attachedClusters;
        this.availabilityZones = $.availabilityZones;
        this.azMode = $.azMode;
        this.createdTimestamp = $.createdTimestamp;
        this.description = $.description;
        this.environmentId = $.environmentId;
        this.lastModifiedTimestamp = $.lastModifiedTimestamp;
        this.name = $.name;
        this.nas1Configurations = $.nas1Configurations;
        this.status = $.status;
        this.statusReason = $.statusReason;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KxVolumeState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KxVolumeState $;

        public Builder() {
            $ = new KxVolumeState();
        }

        public Builder(KxVolumeState defaults) {
            $ = new KxVolumeState(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn Amazon Resource Name (ARN) identifier of the KX volume.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn Amazon Resource Name (ARN) identifier of the KX volume.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder attachedClusters(@Nullable Output<List<KxVolumeAttachedClusterArgs>> attachedClusters) {
            $.attachedClusters = attachedClusters;
            return this;
        }

        public Builder attachedClusters(List<KxVolumeAttachedClusterArgs> attachedClusters) {
            return attachedClusters(Output.of(attachedClusters));
        }

        public Builder attachedClusters(KxVolumeAttachedClusterArgs... attachedClusters) {
            return attachedClusters(List.of(attachedClusters));
        }

        /**
         * @param availabilityZones The identifier of the AWS Availability Zone IDs.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder availabilityZones(@Nullable Output<List<String>> availabilityZones) {
            $.availabilityZones = availabilityZones;
            return this;
        }

        /**
         * @param availabilityZones The identifier of the AWS Availability Zone IDs.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder availabilityZones(List<String> availabilityZones) {
            return availabilityZones(Output.of(availabilityZones));
        }

        /**
         * @param availabilityZones The identifier of the AWS Availability Zone IDs.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder availabilityZones(String... availabilityZones) {
            return availabilityZones(List.of(availabilityZones));
        }

        /**
         * @param azMode The number of availability zones you want to assign per volume. Currently, Finspace only support SINGLE for volumes.
         * 
         * @return builder
         * 
         */
        public Builder azMode(@Nullable Output<String> azMode) {
            $.azMode = azMode;
            return this;
        }

        /**
         * @param azMode The number of availability zones you want to assign per volume. Currently, Finspace only support SINGLE for volumes.
         * 
         * @return builder
         * 
         */
        public Builder azMode(String azMode) {
            return azMode(Output.of(azMode));
        }

        /**
         * @param createdTimestamp The timestamp at which the volume was created in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.
         * 
         * @return builder
         * 
         */
        public Builder createdTimestamp(@Nullable Output<String> createdTimestamp) {
            $.createdTimestamp = createdTimestamp;
            return this;
        }

        /**
         * @param createdTimestamp The timestamp at which the volume was created in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.
         * 
         * @return builder
         * 
         */
        public Builder createdTimestamp(String createdTimestamp) {
            return createdTimestamp(Output.of(createdTimestamp));
        }

        /**
         * @param description Description of the volume.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the volume.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param environmentId A unique identifier for the kdb environment, whose clusters can attach to the volume.
         * 
         * @return builder
         * 
         */
        public Builder environmentId(@Nullable Output<String> environmentId) {
            $.environmentId = environmentId;
            return this;
        }

        /**
         * @param environmentId A unique identifier for the kdb environment, whose clusters can attach to the volume.
         * 
         * @return builder
         * 
         */
        public Builder environmentId(String environmentId) {
            return environmentId(Output.of(environmentId));
        }

        /**
         * @param lastModifiedTimestamp Last timestamp at which the volume was updated in FinSpace. Value determined as epoch time in seconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000.
         * 
         * @return builder
         * 
         */
        public Builder lastModifiedTimestamp(@Nullable Output<String> lastModifiedTimestamp) {
            $.lastModifiedTimestamp = lastModifiedTimestamp;
            return this;
        }

        /**
         * @param lastModifiedTimestamp Last timestamp at which the volume was updated in FinSpace. Value determined as epoch time in seconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000.
         * 
         * @return builder
         * 
         */
        public Builder lastModifiedTimestamp(String lastModifiedTimestamp) {
            return lastModifiedTimestamp(Output.of(lastModifiedTimestamp));
        }

        /**
         * @param name Unique name for the volumr that you want to create.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Unique name for the volumr that you want to create.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nas1Configurations Specifies the configuration for the Network attached storage (`NAS_1`) file system volume. This parameter is required when `volume_type` is `NAS_1`. See `nas1_configuration` Argument Reference below.
         * 
         * @return builder
         * 
         */
        public Builder nas1Configurations(@Nullable Output<List<KxVolumeNas1ConfigurationArgs>> nas1Configurations) {
            $.nas1Configurations = nas1Configurations;
            return this;
        }

        /**
         * @param nas1Configurations Specifies the configuration for the Network attached storage (`NAS_1`) file system volume. This parameter is required when `volume_type` is `NAS_1`. See `nas1_configuration` Argument Reference below.
         * 
         * @return builder
         * 
         */
        public Builder nas1Configurations(List<KxVolumeNas1ConfigurationArgs> nas1Configurations) {
            return nas1Configurations(Output.of(nas1Configurations));
        }

        /**
         * @param nas1Configurations Specifies the configuration for the Network attached storage (`NAS_1`) file system volume. This parameter is required when `volume_type` is `NAS_1`. See `nas1_configuration` Argument Reference below.
         * 
         * @return builder
         * 
         */
        public Builder nas1Configurations(KxVolumeNas1ConfigurationArgs... nas1Configurations) {
            return nas1Configurations(List.of(nas1Configurations));
        }

        /**
         * @param status The status of volume creation.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of volume creation.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param statusReason The error message when a failed state occurs.
         * 
         * @return builder
         * 
         */
        public Builder statusReason(@Nullable Output<String> statusReason) {
            $.statusReason = statusReason;
            return this;
        }

        /**
         * @param statusReason The error message when a failed state occurs.
         * 
         * @return builder
         * 
         */
        public Builder statusReason(String statusReason) {
            return statusReason(Output.of(statusReason));
        }

        /**
         * @param tags A list of key-value pairs to label the volume. You can add up to 50 tags to a volume
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A list of key-value pairs to label the volume. You can add up to 50 tags to a volume
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        /**
         * @param type The type of file system volume. Currently, FinSpace only supports the `NAS_1` volume type. When you select the `NAS_1` volume type, you must also provide `nas1_configuration`.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of file system volume. Currently, FinSpace only supports the `NAS_1` volume type. When you select the `NAS_1` volume type, you must also provide `nas1_configuration`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public KxVolumeState build() {
            return $;
        }
    }

}
