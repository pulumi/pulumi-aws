// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker.inputs;

import com.pulumi.aws.sagemaker.inputs.DeviceFleetOutputConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeviceFleetState extends com.pulumi.resources.ResourceArgs {

    public static final DeviceFleetState Empty = new DeviceFleetState();

    /**
     * The Amazon Resource Name (ARN) assigned by AWS to this Device Fleet.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return The Amazon Resource Name (ARN) assigned by AWS to this Device Fleet.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * A description of the fleet.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A description of the fleet.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The name of the Device Fleet (must be unique).
     * 
     */
    @Import(name="deviceFleetName")
    private @Nullable Output<String> deviceFleetName;

    /**
     * @return The name of the Device Fleet (must be unique).
     * 
     */
    public Optional<Output<String>> deviceFleetName() {
        return Optional.ofNullable(this.deviceFleetName);
    }

    /**
     * Whether to create an AWS IoT Role Alias during device fleet creation. The name of the role alias generated will match this pattern: &#34;SageMakerEdge-{DeviceFleetName}&#34;.
     * 
     */
    @Import(name="enableIotRoleAlias")
    private @Nullable Output<Boolean> enableIotRoleAlias;

    /**
     * @return Whether to create an AWS IoT Role Alias during device fleet creation. The name of the role alias generated will match this pattern: &#34;SageMakerEdge-{DeviceFleetName}&#34;.
     * 
     */
    public Optional<Output<Boolean>> enableIotRoleAlias() {
        return Optional.ofNullable(this.enableIotRoleAlias);
    }

    @Import(name="iotRoleAlias")
    private @Nullable Output<String> iotRoleAlias;

    public Optional<Output<String>> iotRoleAlias() {
        return Optional.ofNullable(this.iotRoleAlias);
    }

    /**
     * Specifies details about the repository. see Output Config details below.
     * 
     */
    @Import(name="outputConfig")
    private @Nullable Output<DeviceFleetOutputConfigArgs> outputConfig;

    /**
     * @return Specifies details about the repository. see Output Config details below.
     * 
     */
    public Optional<Output<DeviceFleetOutputConfigArgs>> outputConfig() {
        return Optional.ofNullable(this.outputConfig);
    }

    /**
     * The Amazon Resource Name (ARN) that has access to AWS Internet of Things (IoT).
     * 
     */
    @Import(name="roleArn")
    private @Nullable Output<String> roleArn;

    /**
     * @return The Amazon Resource Name (ARN) that has access to AWS Internet of Things (IoT).
     * 
     */
    public Optional<Output<String>> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private DeviceFleetState() {}

    private DeviceFleetState(DeviceFleetState $) {
        this.arn = $.arn;
        this.description = $.description;
        this.deviceFleetName = $.deviceFleetName;
        this.enableIotRoleAlias = $.enableIotRoleAlias;
        this.iotRoleAlias = $.iotRoleAlias;
        this.outputConfig = $.outputConfig;
        this.roleArn = $.roleArn;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeviceFleetState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeviceFleetState $;

        public Builder() {
            $ = new DeviceFleetState();
        }

        public Builder(DeviceFleetState defaults) {
            $ = new DeviceFleetState(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn The Amazon Resource Name (ARN) assigned by AWS to this Device Fleet.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn The Amazon Resource Name (ARN) assigned by AWS to this Device Fleet.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param description A description of the fleet.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A description of the fleet.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param deviceFleetName The name of the Device Fleet (must be unique).
         * 
         * @return builder
         * 
         */
        public Builder deviceFleetName(@Nullable Output<String> deviceFleetName) {
            $.deviceFleetName = deviceFleetName;
            return this;
        }

        /**
         * @param deviceFleetName The name of the Device Fleet (must be unique).
         * 
         * @return builder
         * 
         */
        public Builder deviceFleetName(String deviceFleetName) {
            return deviceFleetName(Output.of(deviceFleetName));
        }

        /**
         * @param enableIotRoleAlias Whether to create an AWS IoT Role Alias during device fleet creation. The name of the role alias generated will match this pattern: &#34;SageMakerEdge-{DeviceFleetName}&#34;.
         * 
         * @return builder
         * 
         */
        public Builder enableIotRoleAlias(@Nullable Output<Boolean> enableIotRoleAlias) {
            $.enableIotRoleAlias = enableIotRoleAlias;
            return this;
        }

        /**
         * @param enableIotRoleAlias Whether to create an AWS IoT Role Alias during device fleet creation. The name of the role alias generated will match this pattern: &#34;SageMakerEdge-{DeviceFleetName}&#34;.
         * 
         * @return builder
         * 
         */
        public Builder enableIotRoleAlias(Boolean enableIotRoleAlias) {
            return enableIotRoleAlias(Output.of(enableIotRoleAlias));
        }

        public Builder iotRoleAlias(@Nullable Output<String> iotRoleAlias) {
            $.iotRoleAlias = iotRoleAlias;
            return this;
        }

        public Builder iotRoleAlias(String iotRoleAlias) {
            return iotRoleAlias(Output.of(iotRoleAlias));
        }

        /**
         * @param outputConfig Specifies details about the repository. see Output Config details below.
         * 
         * @return builder
         * 
         */
        public Builder outputConfig(@Nullable Output<DeviceFleetOutputConfigArgs> outputConfig) {
            $.outputConfig = outputConfig;
            return this;
        }

        /**
         * @param outputConfig Specifies details about the repository. see Output Config details below.
         * 
         * @return builder
         * 
         */
        public Builder outputConfig(DeviceFleetOutputConfigArgs outputConfig) {
            return outputConfig(Output.of(outputConfig));
        }

        /**
         * @param roleArn The Amazon Resource Name (ARN) that has access to AWS Internet of Things (IoT).
         * 
         * @return builder
         * 
         */
        public Builder roleArn(@Nullable Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn The Amazon Resource Name (ARN) that has access to AWS Internet of Things (IoT).
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        /**
         * @param tags A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public DeviceFleetState build() {
            return $;
        }
    }

}
