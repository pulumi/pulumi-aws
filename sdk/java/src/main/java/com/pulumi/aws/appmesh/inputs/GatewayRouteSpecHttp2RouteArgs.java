// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.inputs;

import com.pulumi.aws.appmesh.inputs.GatewayRouteSpecHttp2RouteActionArgs;
import com.pulumi.aws.appmesh.inputs.GatewayRouteSpecHttp2RouteMatchArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.Objects;


public final class GatewayRouteSpecHttp2RouteArgs extends com.pulumi.resources.ResourceArgs {

    public static final GatewayRouteSpecHttp2RouteArgs Empty = new GatewayRouteSpecHttp2RouteArgs();

    /**
     * Action to take if a match is determined.
     * 
     */
    @Import(name="action", required=true)
    private Output<GatewayRouteSpecHttp2RouteActionArgs> action;

    /**
     * @return Action to take if a match is determined.
     * 
     */
    public Output<GatewayRouteSpecHttp2RouteActionArgs> action() {
        return this.action;
    }

    /**
     * Criteria for determining a request match.
     * 
     */
    @Import(name="match", required=true)
    private Output<GatewayRouteSpecHttp2RouteMatchArgs> match;

    /**
     * @return Criteria for determining a request match.
     * 
     */
    public Output<GatewayRouteSpecHttp2RouteMatchArgs> match() {
        return this.match;
    }

    private GatewayRouteSpecHttp2RouteArgs() {}

    private GatewayRouteSpecHttp2RouteArgs(GatewayRouteSpecHttp2RouteArgs $) {
        this.action = $.action;
        this.match = $.match;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GatewayRouteSpecHttp2RouteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GatewayRouteSpecHttp2RouteArgs $;

        public Builder() {
            $ = new GatewayRouteSpecHttp2RouteArgs();
        }

        public Builder(GatewayRouteSpecHttp2RouteArgs defaults) {
            $ = new GatewayRouteSpecHttp2RouteArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param action Action to take if a match is determined.
         * 
         * @return builder
         * 
         */
        public Builder action(Output<GatewayRouteSpecHttp2RouteActionArgs> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action Action to take if a match is determined.
         * 
         * @return builder
         * 
         */
        public Builder action(GatewayRouteSpecHttp2RouteActionArgs action) {
            return action(Output.of(action));
        }

        /**
         * @param match Criteria for determining a request match.
         * 
         * @return builder
         * 
         */
        public Builder match(Output<GatewayRouteSpecHttp2RouteMatchArgs> match) {
            $.match = match;
            return this;
        }

        /**
         * @param match Criteria for determining a request match.
         * 
         * @return builder
         * 
         */
        public Builder match(GatewayRouteSpecHttp2RouteMatchArgs match) {
            return match(Output.of(match));
        }

        public GatewayRouteSpecHttp2RouteArgs build() {
            if ($.action == null) {
                throw new MissingRequiredPropertyException("GatewayRouteSpecHttp2RouteArgs", "action");
            }
            if ($.match == null) {
                throw new MissingRequiredPropertyException("GatewayRouteSpecHttp2RouteArgs", "match");
            }
            return $;
        }
    }

}
