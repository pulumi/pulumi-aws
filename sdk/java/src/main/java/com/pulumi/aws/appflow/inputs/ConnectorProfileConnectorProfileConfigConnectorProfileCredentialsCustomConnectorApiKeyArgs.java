// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appflow.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyArgs Empty = new ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyArgs();

    /**
     * Unique alphanumeric identifier used to authenticate a user, developer, or calling program to your API.
     * 
     */
    @Import(name="apiKey", required=true)
    private Output<String> apiKey;

    /**
     * @return Unique alphanumeric identifier used to authenticate a user, developer, or calling program to your API.
     * 
     */
    public Output<String> apiKey() {
        return this.apiKey;
    }

    /**
     * The Secret Access Key portion of the credentials.
     * 
     */
    @Import(name="apiSecretKey")
    private @Nullable Output<String> apiSecretKey;

    /**
     * @return The Secret Access Key portion of the credentials.
     * 
     */
    public Optional<Output<String>> apiSecretKey() {
        return Optional.ofNullable(this.apiSecretKey);
    }

    private ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyArgs() {}

    private ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyArgs(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyArgs $) {
        this.apiKey = $.apiKey;
        this.apiSecretKey = $.apiSecretKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyArgs $;

        public Builder() {
            $ = new ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyArgs();
        }

        public Builder(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyArgs defaults) {
            $ = new ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiKey Unique alphanumeric identifier used to authenticate a user, developer, or calling program to your API.
         * 
         * @return builder
         * 
         */
        public Builder apiKey(Output<String> apiKey) {
            $.apiKey = apiKey;
            return this;
        }

        /**
         * @param apiKey Unique alphanumeric identifier used to authenticate a user, developer, or calling program to your API.
         * 
         * @return builder
         * 
         */
        public Builder apiKey(String apiKey) {
            return apiKey(Output.of(apiKey));
        }

        /**
         * @param apiSecretKey The Secret Access Key portion of the credentials.
         * 
         * @return builder
         * 
         */
        public Builder apiSecretKey(@Nullable Output<String> apiSecretKey) {
            $.apiSecretKey = apiSecretKey;
            return this;
        }

        /**
         * @param apiSecretKey The Secret Access Key portion of the credentials.
         * 
         * @return builder
         * 
         */
        public Builder apiSecretKey(String apiSecretKey) {
            return apiSecretKey(Output.of(apiSecretKey));
        }

        public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyArgs build() {
            $.apiKey = Objects.requireNonNull($.apiKey, "expected parameter 'apiKey' to be non-null");
            return $;
        }
    }

}
