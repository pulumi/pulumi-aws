// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BucketV2LifecycleRuleNoncurrentVersionTransition {
    /**
     * @return Specifies the number of days noncurrent object versions transition.
     * 
     */
    private @Nullable Integer days;
    /**
     * @return Specifies the Amazon S3 [storage class](https://docs.aws.amazon.com/AmazonS3/latest/API/API_Transition.html#AmazonS3-Type-Transition-StorageClass) to which you want the object to transition.
     * 
     */
    private String storageClass;

    private BucketV2LifecycleRuleNoncurrentVersionTransition() {}
    /**
     * @return Specifies the number of days noncurrent object versions transition.
     * 
     */
    public Optional<Integer> days() {
        return Optional.ofNullable(this.days);
    }
    /**
     * @return Specifies the Amazon S3 [storage class](https://docs.aws.amazon.com/AmazonS3/latest/API/API_Transition.html#AmazonS3-Type-Transition-StorageClass) to which you want the object to transition.
     * 
     */
    public String storageClass() {
        return this.storageClass;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketV2LifecycleRuleNoncurrentVersionTransition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer days;
        private String storageClass;
        public Builder() {}
        public Builder(BucketV2LifecycleRuleNoncurrentVersionTransition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.days = defaults.days;
    	      this.storageClass = defaults.storageClass;
        }

        @CustomType.Setter
        public Builder days(@Nullable Integer days) {

            this.days = days;
            return this;
        }
        @CustomType.Setter
        public Builder storageClass(String storageClass) {
            if (storageClass == null) {
              throw new MissingRequiredPropertyException("BucketV2LifecycleRuleNoncurrentVersionTransition", "storageClass");
            }
            this.storageClass = storageClass;
            return this;
        }
        public BucketV2LifecycleRuleNoncurrentVersionTransition build() {
            final var _resultValue = new BucketV2LifecycleRuleNoncurrentVersionTransition();
            _resultValue.days = days;
            _resultValue.storageClass = storageClass;
            return _resultValue;
        }
    }
}
