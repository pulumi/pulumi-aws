// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.oam.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSinkPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSinkPlainArgs Empty = new GetSinkPlainArgs();

    /**
     * ARN of the sink.
     * 
     */
    @Import(name="sinkIdentifier", required=true)
    private String sinkIdentifier;

    /**
     * @return ARN of the sink.
     * 
     */
    public String sinkIdentifier() {
        return this.sinkIdentifier;
    }

    /**
     * Tags assigned to the sink.
     * 
     */
    @Import(name="tags")
    private @Nullable Map<String,String> tags;

    /**
     * @return Tags assigned to the sink.
     * 
     */
    public Optional<Map<String,String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private GetSinkPlainArgs() {}

    private GetSinkPlainArgs(GetSinkPlainArgs $) {
        this.sinkIdentifier = $.sinkIdentifier;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSinkPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSinkPlainArgs $;

        public Builder() {
            $ = new GetSinkPlainArgs();
        }

        public Builder(GetSinkPlainArgs defaults) {
            $ = new GetSinkPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param sinkIdentifier ARN of the sink.
         * 
         * @return builder
         * 
         */
        public Builder sinkIdentifier(String sinkIdentifier) {
            $.sinkIdentifier = sinkIdentifier;
            return this;
        }

        /**
         * @param tags Tags assigned to the sink.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Map<String,String> tags) {
            $.tags = tags;
            return this;
        }

        public GetSinkPlainArgs build() {
            if ($.sinkIdentifier == null) {
                throw new MissingRequiredPropertyException("GetSinkPlainArgs", "sinkIdentifier");
            }
            return $;
        }
    }

}
