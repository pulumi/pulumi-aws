// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iot.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TopicRuleErrorActionRepublishArgs extends com.pulumi.resources.ResourceArgs {

    public static final TopicRuleErrorActionRepublishArgs Empty = new TopicRuleErrorActionRepublishArgs();

    /**
     * The Quality of Service (QoS) level to use when republishing messages. Valid values are 0 or 1. The default value is 0.
     * 
     * The `s3` object takes the following arguments:
     * 
     */
    @Import(name="qos")
    private @Nullable Output<Integer> qos;

    /**
     * @return The Quality of Service (QoS) level to use when republishing messages. Valid values are 0 or 1. The default value is 0.
     * 
     * The `s3` object takes the following arguments:
     * 
     */
    public Optional<Output<Integer>> qos() {
        return Optional.ofNullable(this.qos);
    }

    /**
     * The ARN of the IAM role that grants access.
     * 
     */
    @Import(name="roleArn", required=true)
    private Output<String> roleArn;

    /**
     * @return The ARN of the IAM role that grants access.
     * 
     */
    public Output<String> roleArn() {
        return this.roleArn;
    }

    /**
     * The name of the MQTT topic the message should be republished to.
     * 
     */
    @Import(name="topic", required=true)
    private Output<String> topic;

    /**
     * @return The name of the MQTT topic the message should be republished to.
     * 
     */
    public Output<String> topic() {
        return this.topic;
    }

    private TopicRuleErrorActionRepublishArgs() {}

    private TopicRuleErrorActionRepublishArgs(TopicRuleErrorActionRepublishArgs $) {
        this.qos = $.qos;
        this.roleArn = $.roleArn;
        this.topic = $.topic;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TopicRuleErrorActionRepublishArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TopicRuleErrorActionRepublishArgs $;

        public Builder() {
            $ = new TopicRuleErrorActionRepublishArgs();
        }

        public Builder(TopicRuleErrorActionRepublishArgs defaults) {
            $ = new TopicRuleErrorActionRepublishArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param qos The Quality of Service (QoS) level to use when republishing messages. Valid values are 0 or 1. The default value is 0.
         * 
         * The `s3` object takes the following arguments:
         * 
         * @return builder
         * 
         */
        public Builder qos(@Nullable Output<Integer> qos) {
            $.qos = qos;
            return this;
        }

        /**
         * @param qos The Quality of Service (QoS) level to use when republishing messages. Valid values are 0 or 1. The default value is 0.
         * 
         * The `s3` object takes the following arguments:
         * 
         * @return builder
         * 
         */
        public Builder qos(Integer qos) {
            return qos(Output.of(qos));
        }

        /**
         * @param roleArn The ARN of the IAM role that grants access.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn The ARN of the IAM role that grants access.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        /**
         * @param topic The name of the MQTT topic the message should be republished to.
         * 
         * @return builder
         * 
         */
        public Builder topic(Output<String> topic) {
            $.topic = topic;
            return this;
        }

        /**
         * @param topic The name of the MQTT topic the message should be republished to.
         * 
         * @return builder
         * 
         */
        public Builder topic(String topic) {
            return topic(Output.of(topic));
        }

        public TopicRuleErrorActionRepublishArgs build() {
            if ($.roleArn == null) {
                throw new MissingRequiredPropertyException("TopicRuleErrorActionRepublishArgs", "roleArn");
            }
            if ($.topic == null) {
                throw new MissingRequiredPropertyException("TopicRuleErrorActionRepublishArgs", "topic");
            }
            return $;
        }
    }

}
