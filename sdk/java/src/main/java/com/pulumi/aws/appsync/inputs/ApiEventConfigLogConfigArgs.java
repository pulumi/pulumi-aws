// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appsync.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ApiEventConfigLogConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApiEventConfigLogConfigArgs Empty = new ApiEventConfigLogConfigArgs();

    /**
     * ARN of the IAM role for CloudWatch logs.
     * 
     */
    @Import(name="cloudwatchLogsRoleArn", required=true)
    private Output<String> cloudwatchLogsRoleArn;

    /**
     * @return ARN of the IAM role for CloudWatch logs.
     * 
     */
    public Output<String> cloudwatchLogsRoleArn() {
        return this.cloudwatchLogsRoleArn;
    }

    /**
     * Log level. Valid values: `NONE`, `ERROR`, `ALL`, `INFO`, `DEBUG`.
     * 
     */
    @Import(name="logLevel", required=true)
    private Output<String> logLevel;

    /**
     * @return Log level. Valid values: `NONE`, `ERROR`, `ALL`, `INFO`, `DEBUG`.
     * 
     */
    public Output<String> logLevel() {
        return this.logLevel;
    }

    private ApiEventConfigLogConfigArgs() {}

    private ApiEventConfigLogConfigArgs(ApiEventConfigLogConfigArgs $) {
        this.cloudwatchLogsRoleArn = $.cloudwatchLogsRoleArn;
        this.logLevel = $.logLevel;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiEventConfigLogConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiEventConfigLogConfigArgs $;

        public Builder() {
            $ = new ApiEventConfigLogConfigArgs();
        }

        public Builder(ApiEventConfigLogConfigArgs defaults) {
            $ = new ApiEventConfigLogConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudwatchLogsRoleArn ARN of the IAM role for CloudWatch logs.
         * 
         * @return builder
         * 
         */
        public Builder cloudwatchLogsRoleArn(Output<String> cloudwatchLogsRoleArn) {
            $.cloudwatchLogsRoleArn = cloudwatchLogsRoleArn;
            return this;
        }

        /**
         * @param cloudwatchLogsRoleArn ARN of the IAM role for CloudWatch logs.
         * 
         * @return builder
         * 
         */
        public Builder cloudwatchLogsRoleArn(String cloudwatchLogsRoleArn) {
            return cloudwatchLogsRoleArn(Output.of(cloudwatchLogsRoleArn));
        }

        /**
         * @param logLevel Log level. Valid values: `NONE`, `ERROR`, `ALL`, `INFO`, `DEBUG`.
         * 
         * @return builder
         * 
         */
        public Builder logLevel(Output<String> logLevel) {
            $.logLevel = logLevel;
            return this;
        }

        /**
         * @param logLevel Log level. Valid values: `NONE`, `ERROR`, `ALL`, `INFO`, `DEBUG`.
         * 
         * @return builder
         * 
         */
        public Builder logLevel(String logLevel) {
            return logLevel(Output.of(logLevel));
        }

        public ApiEventConfigLogConfigArgs build() {
            if ($.cloudwatchLogsRoleArn == null) {
                throw new MissingRequiredPropertyException("ApiEventConfigLogConfigArgs", "cloudwatchLogsRoleArn");
            }
            if ($.logLevel == null) {
                throw new MissingRequiredPropertyException("ApiEventConfigLogConfigArgs", "logLevel");
            }
            return $;
        }
    }

}
