// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3;

import com.pulumi.aws.s3.inputs.BucketObjectLockConfigurationV2RuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketObjectLockConfigurationV2Args extends com.pulumi.resources.ResourceArgs {

    public static final BucketObjectLockConfigurationV2Args Empty = new BucketObjectLockConfigurationV2Args();

    @Import(name="bucket", required=true)
    private Output<String> bucket;

    public Output<String> bucket() {
        return this.bucket;
    }

    @Import(name="expectedBucketOwner")
    private @Nullable Output<String> expectedBucketOwner;

    public Optional<Output<String>> expectedBucketOwner() {
        return Optional.ofNullable(this.expectedBucketOwner);
    }

    @Import(name="objectLockEnabled")
    private @Nullable Output<String> objectLockEnabled;

    public Optional<Output<String>> objectLockEnabled() {
        return Optional.ofNullable(this.objectLockEnabled);
    }

    @Import(name="rule")
    private @Nullable Output<BucketObjectLockConfigurationV2RuleArgs> rule;

    public Optional<Output<BucketObjectLockConfigurationV2RuleArgs>> rule() {
        return Optional.ofNullable(this.rule);
    }

    @Import(name="token")
    private @Nullable Output<String> token;

    public Optional<Output<String>> token() {
        return Optional.ofNullable(this.token);
    }

    private BucketObjectLockConfigurationV2Args() {}

    private BucketObjectLockConfigurationV2Args(BucketObjectLockConfigurationV2Args $) {
        this.bucket = $.bucket;
        this.expectedBucketOwner = $.expectedBucketOwner;
        this.objectLockEnabled = $.objectLockEnabled;
        this.rule = $.rule;
        this.token = $.token;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketObjectLockConfigurationV2Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketObjectLockConfigurationV2Args $;

        public Builder() {
            $ = new BucketObjectLockConfigurationV2Args();
        }

        public Builder(BucketObjectLockConfigurationV2Args defaults) {
            $ = new BucketObjectLockConfigurationV2Args(Objects.requireNonNull(defaults));
        }

        public Builder bucket(Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        public Builder expectedBucketOwner(@Nullable Output<String> expectedBucketOwner) {
            $.expectedBucketOwner = expectedBucketOwner;
            return this;
        }

        public Builder expectedBucketOwner(String expectedBucketOwner) {
            return expectedBucketOwner(Output.of(expectedBucketOwner));
        }

        public Builder objectLockEnabled(@Nullable Output<String> objectLockEnabled) {
            $.objectLockEnabled = objectLockEnabled;
            return this;
        }

        public Builder objectLockEnabled(String objectLockEnabled) {
            return objectLockEnabled(Output.of(objectLockEnabled));
        }

        public Builder rule(@Nullable Output<BucketObjectLockConfigurationV2RuleArgs> rule) {
            $.rule = rule;
            return this;
        }

        public Builder rule(BucketObjectLockConfigurationV2RuleArgs rule) {
            return rule(Output.of(rule));
        }

        public Builder token(@Nullable Output<String> token) {
            $.token = token;
            return this;
        }

        public Builder token(String token) {
            return token(Output.of(token));
        }

        public BucketObjectLockConfigurationV2Args build() {
            $.bucket = Objects.requireNonNull($.bucket, "expected parameter 'bucket' to be non-null");
            return $;
        }
    }

}
