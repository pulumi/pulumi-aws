// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.msk.inputs;

import com.pulumi.aws.msk.inputs.ClusterBrokerNodeGroupInfoArgs;
import com.pulumi.aws.msk.inputs.ClusterClientAuthenticationArgs;
import com.pulumi.aws.msk.inputs.ClusterConfigurationInfoArgs;
import com.pulumi.aws.msk.inputs.ClusterEncryptionInfoArgs;
import com.pulumi.aws.msk.inputs.ClusterLoggingInfoArgs;
import com.pulumi.aws.msk.inputs.ClusterOpenMonitoringArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterState extends com.pulumi.resources.ResourceArgs {

    public static final ClusterState Empty = new ClusterState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="bootstrapBrokers")
    private @Nullable Output<String> bootstrapBrokers;

    public Optional<Output<String>> bootstrapBrokers() {
        return Optional.ofNullable(this.bootstrapBrokers);
    }

    @Import(name="bootstrapBrokersPublicSaslIam")
    private @Nullable Output<String> bootstrapBrokersPublicSaslIam;

    public Optional<Output<String>> bootstrapBrokersPublicSaslIam() {
        return Optional.ofNullable(this.bootstrapBrokersPublicSaslIam);
    }

    @Import(name="bootstrapBrokersPublicSaslScram")
    private @Nullable Output<String> bootstrapBrokersPublicSaslScram;

    public Optional<Output<String>> bootstrapBrokersPublicSaslScram() {
        return Optional.ofNullable(this.bootstrapBrokersPublicSaslScram);
    }

    @Import(name="bootstrapBrokersPublicTls")
    private @Nullable Output<String> bootstrapBrokersPublicTls;

    public Optional<Output<String>> bootstrapBrokersPublicTls() {
        return Optional.ofNullable(this.bootstrapBrokersPublicTls);
    }

    @Import(name="bootstrapBrokersSaslIam")
    private @Nullable Output<String> bootstrapBrokersSaslIam;

    public Optional<Output<String>> bootstrapBrokersSaslIam() {
        return Optional.ofNullable(this.bootstrapBrokersSaslIam);
    }

    @Import(name="bootstrapBrokersSaslScram")
    private @Nullable Output<String> bootstrapBrokersSaslScram;

    public Optional<Output<String>> bootstrapBrokersSaslScram() {
        return Optional.ofNullable(this.bootstrapBrokersSaslScram);
    }

    @Import(name="bootstrapBrokersTls")
    private @Nullable Output<String> bootstrapBrokersTls;

    public Optional<Output<String>> bootstrapBrokersTls() {
        return Optional.ofNullable(this.bootstrapBrokersTls);
    }

    @Import(name="brokerNodeGroupInfo")
    private @Nullable Output<ClusterBrokerNodeGroupInfoArgs> brokerNodeGroupInfo;

    public Optional<Output<ClusterBrokerNodeGroupInfoArgs>> brokerNodeGroupInfo() {
        return Optional.ofNullable(this.brokerNodeGroupInfo);
    }

    @Import(name="clientAuthentication")
    private @Nullable Output<ClusterClientAuthenticationArgs> clientAuthentication;

    public Optional<Output<ClusterClientAuthenticationArgs>> clientAuthentication() {
        return Optional.ofNullable(this.clientAuthentication);
    }

    @Import(name="clusterName")
    private @Nullable Output<String> clusterName;

    public Optional<Output<String>> clusterName() {
        return Optional.ofNullable(this.clusterName);
    }

    @Import(name="configurationInfo")
    private @Nullable Output<ClusterConfigurationInfoArgs> configurationInfo;

    public Optional<Output<ClusterConfigurationInfoArgs>> configurationInfo() {
        return Optional.ofNullable(this.configurationInfo);
    }

    @Import(name="currentVersion")
    private @Nullable Output<String> currentVersion;

    public Optional<Output<String>> currentVersion() {
        return Optional.ofNullable(this.currentVersion);
    }

    @Import(name="encryptionInfo")
    private @Nullable Output<ClusterEncryptionInfoArgs> encryptionInfo;

    public Optional<Output<ClusterEncryptionInfoArgs>> encryptionInfo() {
        return Optional.ofNullable(this.encryptionInfo);
    }

    @Import(name="enhancedMonitoring")
    private @Nullable Output<String> enhancedMonitoring;

    public Optional<Output<String>> enhancedMonitoring() {
        return Optional.ofNullable(this.enhancedMonitoring);
    }

    @Import(name="kafkaVersion")
    private @Nullable Output<String> kafkaVersion;

    public Optional<Output<String>> kafkaVersion() {
        return Optional.ofNullable(this.kafkaVersion);
    }

    @Import(name="loggingInfo")
    private @Nullable Output<ClusterLoggingInfoArgs> loggingInfo;

    public Optional<Output<ClusterLoggingInfoArgs>> loggingInfo() {
        return Optional.ofNullable(this.loggingInfo);
    }

    @Import(name="numberOfBrokerNodes")
    private @Nullable Output<Integer> numberOfBrokerNodes;

    public Optional<Output<Integer>> numberOfBrokerNodes() {
        return Optional.ofNullable(this.numberOfBrokerNodes);
    }

    @Import(name="openMonitoring")
    private @Nullable Output<ClusterOpenMonitoringArgs> openMonitoring;

    public Optional<Output<ClusterOpenMonitoringArgs>> openMonitoring() {
        return Optional.ofNullable(this.openMonitoring);
    }

    @Import(name="storageMode")
    private @Nullable Output<String> storageMode;

    public Optional<Output<String>> storageMode() {
        return Optional.ofNullable(this.storageMode);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="zookeeperConnectString")
    private @Nullable Output<String> zookeeperConnectString;

    public Optional<Output<String>> zookeeperConnectString() {
        return Optional.ofNullable(this.zookeeperConnectString);
    }

    @Import(name="zookeeperConnectStringTls")
    private @Nullable Output<String> zookeeperConnectStringTls;

    public Optional<Output<String>> zookeeperConnectStringTls() {
        return Optional.ofNullable(this.zookeeperConnectStringTls);
    }

    private ClusterState() {}

    private ClusterState(ClusterState $) {
        this.arn = $.arn;
        this.bootstrapBrokers = $.bootstrapBrokers;
        this.bootstrapBrokersPublicSaslIam = $.bootstrapBrokersPublicSaslIam;
        this.bootstrapBrokersPublicSaslScram = $.bootstrapBrokersPublicSaslScram;
        this.bootstrapBrokersPublicTls = $.bootstrapBrokersPublicTls;
        this.bootstrapBrokersSaslIam = $.bootstrapBrokersSaslIam;
        this.bootstrapBrokersSaslScram = $.bootstrapBrokersSaslScram;
        this.bootstrapBrokersTls = $.bootstrapBrokersTls;
        this.brokerNodeGroupInfo = $.brokerNodeGroupInfo;
        this.clientAuthentication = $.clientAuthentication;
        this.clusterName = $.clusterName;
        this.configurationInfo = $.configurationInfo;
        this.currentVersion = $.currentVersion;
        this.encryptionInfo = $.encryptionInfo;
        this.enhancedMonitoring = $.enhancedMonitoring;
        this.kafkaVersion = $.kafkaVersion;
        this.loggingInfo = $.loggingInfo;
        this.numberOfBrokerNodes = $.numberOfBrokerNodes;
        this.openMonitoring = $.openMonitoring;
        this.storageMode = $.storageMode;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.zookeeperConnectString = $.zookeeperConnectString;
        this.zookeeperConnectStringTls = $.zookeeperConnectStringTls;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterState $;

        public Builder() {
            $ = new ClusterState();
        }

        public Builder(ClusterState defaults) {
            $ = new ClusterState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder bootstrapBrokers(@Nullable Output<String> bootstrapBrokers) {
            $.bootstrapBrokers = bootstrapBrokers;
            return this;
        }

        public Builder bootstrapBrokers(String bootstrapBrokers) {
            return bootstrapBrokers(Output.of(bootstrapBrokers));
        }

        public Builder bootstrapBrokersPublicSaslIam(@Nullable Output<String> bootstrapBrokersPublicSaslIam) {
            $.bootstrapBrokersPublicSaslIam = bootstrapBrokersPublicSaslIam;
            return this;
        }

        public Builder bootstrapBrokersPublicSaslIam(String bootstrapBrokersPublicSaslIam) {
            return bootstrapBrokersPublicSaslIam(Output.of(bootstrapBrokersPublicSaslIam));
        }

        public Builder bootstrapBrokersPublicSaslScram(@Nullable Output<String> bootstrapBrokersPublicSaslScram) {
            $.bootstrapBrokersPublicSaslScram = bootstrapBrokersPublicSaslScram;
            return this;
        }

        public Builder bootstrapBrokersPublicSaslScram(String bootstrapBrokersPublicSaslScram) {
            return bootstrapBrokersPublicSaslScram(Output.of(bootstrapBrokersPublicSaslScram));
        }

        public Builder bootstrapBrokersPublicTls(@Nullable Output<String> bootstrapBrokersPublicTls) {
            $.bootstrapBrokersPublicTls = bootstrapBrokersPublicTls;
            return this;
        }

        public Builder bootstrapBrokersPublicTls(String bootstrapBrokersPublicTls) {
            return bootstrapBrokersPublicTls(Output.of(bootstrapBrokersPublicTls));
        }

        public Builder bootstrapBrokersSaslIam(@Nullable Output<String> bootstrapBrokersSaslIam) {
            $.bootstrapBrokersSaslIam = bootstrapBrokersSaslIam;
            return this;
        }

        public Builder bootstrapBrokersSaslIam(String bootstrapBrokersSaslIam) {
            return bootstrapBrokersSaslIam(Output.of(bootstrapBrokersSaslIam));
        }

        public Builder bootstrapBrokersSaslScram(@Nullable Output<String> bootstrapBrokersSaslScram) {
            $.bootstrapBrokersSaslScram = bootstrapBrokersSaslScram;
            return this;
        }

        public Builder bootstrapBrokersSaslScram(String bootstrapBrokersSaslScram) {
            return bootstrapBrokersSaslScram(Output.of(bootstrapBrokersSaslScram));
        }

        public Builder bootstrapBrokersTls(@Nullable Output<String> bootstrapBrokersTls) {
            $.bootstrapBrokersTls = bootstrapBrokersTls;
            return this;
        }

        public Builder bootstrapBrokersTls(String bootstrapBrokersTls) {
            return bootstrapBrokersTls(Output.of(bootstrapBrokersTls));
        }

        public Builder brokerNodeGroupInfo(@Nullable Output<ClusterBrokerNodeGroupInfoArgs> brokerNodeGroupInfo) {
            $.brokerNodeGroupInfo = brokerNodeGroupInfo;
            return this;
        }

        public Builder brokerNodeGroupInfo(ClusterBrokerNodeGroupInfoArgs brokerNodeGroupInfo) {
            return brokerNodeGroupInfo(Output.of(brokerNodeGroupInfo));
        }

        public Builder clientAuthentication(@Nullable Output<ClusterClientAuthenticationArgs> clientAuthentication) {
            $.clientAuthentication = clientAuthentication;
            return this;
        }

        public Builder clientAuthentication(ClusterClientAuthenticationArgs clientAuthentication) {
            return clientAuthentication(Output.of(clientAuthentication));
        }

        public Builder clusterName(@Nullable Output<String> clusterName) {
            $.clusterName = clusterName;
            return this;
        }

        public Builder clusterName(String clusterName) {
            return clusterName(Output.of(clusterName));
        }

        public Builder configurationInfo(@Nullable Output<ClusterConfigurationInfoArgs> configurationInfo) {
            $.configurationInfo = configurationInfo;
            return this;
        }

        public Builder configurationInfo(ClusterConfigurationInfoArgs configurationInfo) {
            return configurationInfo(Output.of(configurationInfo));
        }

        public Builder currentVersion(@Nullable Output<String> currentVersion) {
            $.currentVersion = currentVersion;
            return this;
        }

        public Builder currentVersion(String currentVersion) {
            return currentVersion(Output.of(currentVersion));
        }

        public Builder encryptionInfo(@Nullable Output<ClusterEncryptionInfoArgs> encryptionInfo) {
            $.encryptionInfo = encryptionInfo;
            return this;
        }

        public Builder encryptionInfo(ClusterEncryptionInfoArgs encryptionInfo) {
            return encryptionInfo(Output.of(encryptionInfo));
        }

        public Builder enhancedMonitoring(@Nullable Output<String> enhancedMonitoring) {
            $.enhancedMonitoring = enhancedMonitoring;
            return this;
        }

        public Builder enhancedMonitoring(String enhancedMonitoring) {
            return enhancedMonitoring(Output.of(enhancedMonitoring));
        }

        public Builder kafkaVersion(@Nullable Output<String> kafkaVersion) {
            $.kafkaVersion = kafkaVersion;
            return this;
        }

        public Builder kafkaVersion(String kafkaVersion) {
            return kafkaVersion(Output.of(kafkaVersion));
        }

        public Builder loggingInfo(@Nullable Output<ClusterLoggingInfoArgs> loggingInfo) {
            $.loggingInfo = loggingInfo;
            return this;
        }

        public Builder loggingInfo(ClusterLoggingInfoArgs loggingInfo) {
            return loggingInfo(Output.of(loggingInfo));
        }

        public Builder numberOfBrokerNodes(@Nullable Output<Integer> numberOfBrokerNodes) {
            $.numberOfBrokerNodes = numberOfBrokerNodes;
            return this;
        }

        public Builder numberOfBrokerNodes(Integer numberOfBrokerNodes) {
            return numberOfBrokerNodes(Output.of(numberOfBrokerNodes));
        }

        public Builder openMonitoring(@Nullable Output<ClusterOpenMonitoringArgs> openMonitoring) {
            $.openMonitoring = openMonitoring;
            return this;
        }

        public Builder openMonitoring(ClusterOpenMonitoringArgs openMonitoring) {
            return openMonitoring(Output.of(openMonitoring));
        }

        public Builder storageMode(@Nullable Output<String> storageMode) {
            $.storageMode = storageMode;
            return this;
        }

        public Builder storageMode(String storageMode) {
            return storageMode(Output.of(storageMode));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder zookeeperConnectString(@Nullable Output<String> zookeeperConnectString) {
            $.zookeeperConnectString = zookeeperConnectString;
            return this;
        }

        public Builder zookeeperConnectString(String zookeeperConnectString) {
            return zookeeperConnectString(Output.of(zookeeperConnectString));
        }

        public Builder zookeeperConnectStringTls(@Nullable Output<String> zookeeperConnectStringTls) {
            $.zookeeperConnectStringTls = zookeeperConnectStringTls;
            return this;
        }

        public Builder zookeeperConnectStringTls(String zookeeperConnectStringTls) {
            return zookeeperConnectStringTls(Output.of(zookeeperConnectStringTls));
        }

        public ClusterState build() {
            return $;
        }
    }

}
