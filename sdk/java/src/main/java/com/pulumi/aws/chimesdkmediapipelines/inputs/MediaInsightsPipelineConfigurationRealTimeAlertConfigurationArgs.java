// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.chimesdkmediapipelines.inputs;

import com.pulumi.aws.chimesdkmediapipelines.inputs.MediaInsightsPipelineConfigurationRealTimeAlertConfigurationRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MediaInsightsPipelineConfigurationRealTimeAlertConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final MediaInsightsPipelineConfigurationRealTimeAlertConfigurationArgs Empty = new MediaInsightsPipelineConfigurationRealTimeAlertConfigurationArgs();

    /**
     * Disables real time alert rules.
     * 
     */
    @Import(name="disabled")
    private @Nullable Output<Boolean> disabled;

    /**
     * @return Disables real time alert rules.
     * 
     */
    public Optional<Output<Boolean>> disabled() {
        return Optional.ofNullable(this.disabled);
    }

    /**
     * Collection of real time alert rules
     * 
     */
    @Import(name="rules", required=true)
    private Output<List<MediaInsightsPipelineConfigurationRealTimeAlertConfigurationRuleArgs>> rules;

    /**
     * @return Collection of real time alert rules
     * 
     */
    public Output<List<MediaInsightsPipelineConfigurationRealTimeAlertConfigurationRuleArgs>> rules() {
        return this.rules;
    }

    private MediaInsightsPipelineConfigurationRealTimeAlertConfigurationArgs() {}

    private MediaInsightsPipelineConfigurationRealTimeAlertConfigurationArgs(MediaInsightsPipelineConfigurationRealTimeAlertConfigurationArgs $) {
        this.disabled = $.disabled;
        this.rules = $.rules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MediaInsightsPipelineConfigurationRealTimeAlertConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MediaInsightsPipelineConfigurationRealTimeAlertConfigurationArgs $;

        public Builder() {
            $ = new MediaInsightsPipelineConfigurationRealTimeAlertConfigurationArgs();
        }

        public Builder(MediaInsightsPipelineConfigurationRealTimeAlertConfigurationArgs defaults) {
            $ = new MediaInsightsPipelineConfigurationRealTimeAlertConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param disabled Disables real time alert rules.
         * 
         * @return builder
         * 
         */
        public Builder disabled(@Nullable Output<Boolean> disabled) {
            $.disabled = disabled;
            return this;
        }

        /**
         * @param disabled Disables real time alert rules.
         * 
         * @return builder
         * 
         */
        public Builder disabled(Boolean disabled) {
            return disabled(Output.of(disabled));
        }

        /**
         * @param rules Collection of real time alert rules
         * 
         * @return builder
         * 
         */
        public Builder rules(Output<List<MediaInsightsPipelineConfigurationRealTimeAlertConfigurationRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules Collection of real time alert rules
         * 
         * @return builder
         * 
         */
        public Builder rules(List<MediaInsightsPipelineConfigurationRealTimeAlertConfigurationRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules Collection of real time alert rules
         * 
         * @return builder
         * 
         */
        public Builder rules(MediaInsightsPipelineConfigurationRealTimeAlertConfigurationRuleArgs... rules) {
            return rules(List.of(rules));
        }

        public MediaInsightsPipelineConfigurationRealTimeAlertConfigurationArgs build() {
            if ($.rules == null) {
                throw new MissingRequiredPropertyException("MediaInsightsPipelineConfigurationRealTimeAlertConfigurationArgs", "rules");
            }
            return $;
        }
    }

}
