// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudhsmv2.outputs;

import com.pulumi.aws.cloudhsmv2.outputs.GetClusterClusterCertificate;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetClusterResult {
    /**
     * @return The list of cluster certificates.
     * * `cluster_certificates.0.cluster_certificate` - The cluster certificate issued (signed) by the issuing certificate authority (CA) of the cluster&#39;s owner.
     * * `cluster_certificates.0.cluster_csr` - The certificate signing request (CSR). Available only in UNINITIALIZED state.
     * * `cluster_certificates.0.aws_hardware_certificate` - The HSM hardware certificate issued (signed) by AWS CloudHSM.
     * * `cluster_certificates.0.hsm_certificate` - The HSM certificate issued (signed) by the HSM hardware.
     * * `cluster_certificates.0.manufacturer_hardware_certificate` - The HSM hardware certificate issued (signed) by the hardware manufacturer.
     *   The number of available cluster certificates may vary depending on state of the cluster.
     * 
     */
    private List<GetClusterClusterCertificate> clusterCertificates;
    private String clusterId;
    private String clusterState;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return ID of the security group associated with the CloudHSM cluster.
     * 
     */
    private String securityGroupId;
    /**
     * @return IDs of subnets in which cluster operates.
     * 
     */
    private List<String> subnetIds;
    /**
     * @return ID of the VPC that the CloudHSM cluster resides in.
     * 
     */
    private String vpcId;

    private GetClusterResult() {}
    /**
     * @return The list of cluster certificates.
     * * `cluster_certificates.0.cluster_certificate` - The cluster certificate issued (signed) by the issuing certificate authority (CA) of the cluster&#39;s owner.
     * * `cluster_certificates.0.cluster_csr` - The certificate signing request (CSR). Available only in UNINITIALIZED state.
     * * `cluster_certificates.0.aws_hardware_certificate` - The HSM hardware certificate issued (signed) by AWS CloudHSM.
     * * `cluster_certificates.0.hsm_certificate` - The HSM certificate issued (signed) by the HSM hardware.
     * * `cluster_certificates.0.manufacturer_hardware_certificate` - The HSM hardware certificate issued (signed) by the hardware manufacturer.
     *   The number of available cluster certificates may vary depending on state of the cluster.
     * 
     */
    public List<GetClusterClusterCertificate> clusterCertificates() {
        return this.clusterCertificates;
    }
    public String clusterId() {
        return this.clusterId;
    }
    public String clusterState() {
        return this.clusterState;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return ID of the security group associated with the CloudHSM cluster.
     * 
     */
    public String securityGroupId() {
        return this.securityGroupId;
    }
    /**
     * @return IDs of subnets in which cluster operates.
     * 
     */
    public List<String> subnetIds() {
        return this.subnetIds;
    }
    /**
     * @return ID of the VPC that the CloudHSM cluster resides in.
     * 
     */
    public String vpcId() {
        return this.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetClusterClusterCertificate> clusterCertificates;
        private String clusterId;
        private String clusterState;
        private String id;
        private String securityGroupId;
        private List<String> subnetIds;
        private String vpcId;
        public Builder() {}
        public Builder(GetClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterCertificates = defaults.clusterCertificates;
    	      this.clusterId = defaults.clusterId;
    	      this.clusterState = defaults.clusterState;
    	      this.id = defaults.id;
    	      this.securityGroupId = defaults.securityGroupId;
    	      this.subnetIds = defaults.subnetIds;
    	      this.vpcId = defaults.vpcId;
        }

        @CustomType.Setter
        public Builder clusterCertificates(List<GetClusterClusterCertificate> clusterCertificates) {
            if (clusterCertificates == null) {
              throw new MissingRequiredPropertyException("GetClusterResult", "clusterCertificates");
            }
            this.clusterCertificates = clusterCertificates;
            return this;
        }
        public Builder clusterCertificates(GetClusterClusterCertificate... clusterCertificates) {
            return clusterCertificates(List.of(clusterCertificates));
        }
        @CustomType.Setter
        public Builder clusterId(String clusterId) {
            if (clusterId == null) {
              throw new MissingRequiredPropertyException("GetClusterResult", "clusterId");
            }
            this.clusterId = clusterId;
            return this;
        }
        @CustomType.Setter
        public Builder clusterState(String clusterState) {
            if (clusterState == null) {
              throw new MissingRequiredPropertyException("GetClusterResult", "clusterState");
            }
            this.clusterState = clusterState;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetClusterResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder securityGroupId(String securityGroupId) {
            if (securityGroupId == null) {
              throw new MissingRequiredPropertyException("GetClusterResult", "securityGroupId");
            }
            this.securityGroupId = securityGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder subnetIds(List<String> subnetIds) {
            if (subnetIds == null) {
              throw new MissingRequiredPropertyException("GetClusterResult", "subnetIds");
            }
            this.subnetIds = subnetIds;
            return this;
        }
        public Builder subnetIds(String... subnetIds) {
            return subnetIds(List.of(subnetIds));
        }
        @CustomType.Setter
        public Builder vpcId(String vpcId) {
            if (vpcId == null) {
              throw new MissingRequiredPropertyException("GetClusterResult", "vpcId");
            }
            this.vpcId = vpcId;
            return this;
        }
        public GetClusterResult build() {
            final var _resultValue = new GetClusterResult();
            _resultValue.clusterCertificates = clusterCertificates;
            _resultValue.clusterId = clusterId;
            _resultValue.clusterState = clusterState;
            _resultValue.id = id;
            _resultValue.securityGroupId = securityGroupId;
            _resultValue.subnetIds = subnetIds;
            _resultValue.vpcId = vpcId;
            return _resultValue;
        }
    }
}
