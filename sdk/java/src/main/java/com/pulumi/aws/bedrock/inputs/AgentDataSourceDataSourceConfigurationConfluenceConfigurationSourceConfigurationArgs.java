// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class AgentDataSourceDataSourceConfigurationConfluenceConfigurationSourceConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AgentDataSourceDataSourceConfigurationConfluenceConfigurationSourceConfigurationArgs Empty = new AgentDataSourceDataSourceConfigurationConfluenceConfigurationSourceConfigurationArgs();

    /**
     * The supported authentication type to authenticate and connect to your SharePoint site. Valid values: `OAUTH2_CLIENT_CREDENTIALS`, `OAUTH2_SHAREPOINT_APP_ONLY_CLIENT_CREDENTIALS`.
     * 
     */
    @Import(name="authType", required=true)
    private Output<String> authType;

    /**
     * @return The supported authentication type to authenticate and connect to your SharePoint site. Valid values: `OAUTH2_CLIENT_CREDENTIALS`, `OAUTH2_SHAREPOINT_APP_ONLY_CLIENT_CREDENTIALS`.
     * 
     */
    public Output<String> authType() {
        return this.authType;
    }

    /**
     * The Amazon Resource Name of an AWS Secrets Manager secret that stores your authentication credentials for your SharePoint site. For more information on the key-value pairs that must be included in your secret, depending on your authentication type, see SharePoint connection configuration. Pattern: ^arn:aws(|-cn|-us-gov):secretsmanager:[a-z0-9-]{1,20}:([0-9]{12}|):secret:[a-zA-Z0-9!/_+=.{@literal @}-]{1,512}$.
     * 
     */
    @Import(name="credentialsSecretArn", required=true)
    private Output<String> credentialsSecretArn;

    /**
     * @return The Amazon Resource Name of an AWS Secrets Manager secret that stores your authentication credentials for your SharePoint site. For more information on the key-value pairs that must be included in your secret, depending on your authentication type, see SharePoint connection configuration. Pattern: ^arn:aws(|-cn|-us-gov):secretsmanager:[a-z0-9-]{1,20}:([0-9]{12}|):secret:[a-zA-Z0-9!/_+=.{@literal @}-]{1,512}$.
     * 
     */
    public Output<String> credentialsSecretArn() {
        return this.credentialsSecretArn;
    }

    /**
     * The supported host type, whether online/cloud or server/on-premises. Valid values: `ONLINE`.
     * 
     */
    @Import(name="hostType", required=true)
    private Output<String> hostType;

    /**
     * @return The supported host type, whether online/cloud or server/on-premises. Valid values: `ONLINE`.
     * 
     */
    public Output<String> hostType() {
        return this.hostType;
    }

    /**
     * The Salesforce host URL or instance URL. Pattern: `^https://[A-Za-z0-9][^\s]*$`.
     * 
     */
    @Import(name="hostUrl", required=true)
    private Output<String> hostUrl;

    /**
     * @return The Salesforce host URL or instance URL. Pattern: `^https://[A-Za-z0-9][^\s]*$`.
     * 
     */
    public Output<String> hostUrl() {
        return this.hostUrl;
    }

    private AgentDataSourceDataSourceConfigurationConfluenceConfigurationSourceConfigurationArgs() {}

    private AgentDataSourceDataSourceConfigurationConfluenceConfigurationSourceConfigurationArgs(AgentDataSourceDataSourceConfigurationConfluenceConfigurationSourceConfigurationArgs $) {
        this.authType = $.authType;
        this.credentialsSecretArn = $.credentialsSecretArn;
        this.hostType = $.hostType;
        this.hostUrl = $.hostUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentDataSourceDataSourceConfigurationConfluenceConfigurationSourceConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentDataSourceDataSourceConfigurationConfluenceConfigurationSourceConfigurationArgs $;

        public Builder() {
            $ = new AgentDataSourceDataSourceConfigurationConfluenceConfigurationSourceConfigurationArgs();
        }

        public Builder(AgentDataSourceDataSourceConfigurationConfluenceConfigurationSourceConfigurationArgs defaults) {
            $ = new AgentDataSourceDataSourceConfigurationConfluenceConfigurationSourceConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authType The supported authentication type to authenticate and connect to your SharePoint site. Valid values: `OAUTH2_CLIENT_CREDENTIALS`, `OAUTH2_SHAREPOINT_APP_ONLY_CLIENT_CREDENTIALS`.
         * 
         * @return builder
         * 
         */
        public Builder authType(Output<String> authType) {
            $.authType = authType;
            return this;
        }

        /**
         * @param authType The supported authentication type to authenticate and connect to your SharePoint site. Valid values: `OAUTH2_CLIENT_CREDENTIALS`, `OAUTH2_SHAREPOINT_APP_ONLY_CLIENT_CREDENTIALS`.
         * 
         * @return builder
         * 
         */
        public Builder authType(String authType) {
            return authType(Output.of(authType));
        }

        /**
         * @param credentialsSecretArn The Amazon Resource Name of an AWS Secrets Manager secret that stores your authentication credentials for your SharePoint site. For more information on the key-value pairs that must be included in your secret, depending on your authentication type, see SharePoint connection configuration. Pattern: ^arn:aws(|-cn|-us-gov):secretsmanager:[a-z0-9-]{1,20}:([0-9]{12}|):secret:[a-zA-Z0-9!/_+=.{@literal @}-]{1,512}$.
         * 
         * @return builder
         * 
         */
        public Builder credentialsSecretArn(Output<String> credentialsSecretArn) {
            $.credentialsSecretArn = credentialsSecretArn;
            return this;
        }

        /**
         * @param credentialsSecretArn The Amazon Resource Name of an AWS Secrets Manager secret that stores your authentication credentials for your SharePoint site. For more information on the key-value pairs that must be included in your secret, depending on your authentication type, see SharePoint connection configuration. Pattern: ^arn:aws(|-cn|-us-gov):secretsmanager:[a-z0-9-]{1,20}:([0-9]{12}|):secret:[a-zA-Z0-9!/_+=.{@literal @}-]{1,512}$.
         * 
         * @return builder
         * 
         */
        public Builder credentialsSecretArn(String credentialsSecretArn) {
            return credentialsSecretArn(Output.of(credentialsSecretArn));
        }

        /**
         * @param hostType The supported host type, whether online/cloud or server/on-premises. Valid values: `ONLINE`.
         * 
         * @return builder
         * 
         */
        public Builder hostType(Output<String> hostType) {
            $.hostType = hostType;
            return this;
        }

        /**
         * @param hostType The supported host type, whether online/cloud or server/on-premises. Valid values: `ONLINE`.
         * 
         * @return builder
         * 
         */
        public Builder hostType(String hostType) {
            return hostType(Output.of(hostType));
        }

        /**
         * @param hostUrl The Salesforce host URL or instance URL. Pattern: `^https://[A-Za-z0-9][^\s]*$`.
         * 
         * @return builder
         * 
         */
        public Builder hostUrl(Output<String> hostUrl) {
            $.hostUrl = hostUrl;
            return this;
        }

        /**
         * @param hostUrl The Salesforce host URL or instance URL. Pattern: `^https://[A-Za-z0-9][^\s]*$`.
         * 
         * @return builder
         * 
         */
        public Builder hostUrl(String hostUrl) {
            return hostUrl(Output.of(hostUrl));
        }

        public AgentDataSourceDataSourceConfigurationConfluenceConfigurationSourceConfigurationArgs build() {
            if ($.authType == null) {
                throw new MissingRequiredPropertyException("AgentDataSourceDataSourceConfigurationConfluenceConfigurationSourceConfigurationArgs", "authType");
            }
            if ($.credentialsSecretArn == null) {
                throw new MissingRequiredPropertyException("AgentDataSourceDataSourceConfigurationConfluenceConfigurationSourceConfigurationArgs", "credentialsSecretArn");
            }
            if ($.hostType == null) {
                throw new MissingRequiredPropertyException("AgentDataSourceDataSourceConfigurationConfluenceConfigurationSourceConfigurationArgs", "hostType");
            }
            if ($.hostUrl == null) {
                throw new MissingRequiredPropertyException("AgentDataSourceDataSourceConfigurationConfluenceConfigurationSourceConfigurationArgs", "hostUrl");
            }
            return $;
        }
    }

}
