// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.eks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IdentityProviderConfigOidcArgs extends com.pulumi.resources.ResourceArgs {

    public static final IdentityProviderConfigOidcArgs Empty = new IdentityProviderConfigOidcArgs();

    @Import(name="clientId", required=true)
    private Output<String> clientId;

    public Output<String> clientId() {
        return this.clientId;
    }

    @Import(name="groupsClaim")
    private @Nullable Output<String> groupsClaim;

    public Optional<Output<String>> groupsClaim() {
        return Optional.ofNullable(this.groupsClaim);
    }

    @Import(name="groupsPrefix")
    private @Nullable Output<String> groupsPrefix;

    public Optional<Output<String>> groupsPrefix() {
        return Optional.ofNullable(this.groupsPrefix);
    }

    @Import(name="identityProviderConfigName", required=true)
    private Output<String> identityProviderConfigName;

    public Output<String> identityProviderConfigName() {
        return this.identityProviderConfigName;
    }

    @Import(name="issuerUrl", required=true)
    private Output<String> issuerUrl;

    public Output<String> issuerUrl() {
        return this.issuerUrl;
    }

    @Import(name="requiredClaims")
    private @Nullable Output<Map<String,String>> requiredClaims;

    public Optional<Output<Map<String,String>>> requiredClaims() {
        return Optional.ofNullable(this.requiredClaims);
    }

    @Import(name="usernameClaim")
    private @Nullable Output<String> usernameClaim;

    public Optional<Output<String>> usernameClaim() {
        return Optional.ofNullable(this.usernameClaim);
    }

    @Import(name="usernamePrefix")
    private @Nullable Output<String> usernamePrefix;

    public Optional<Output<String>> usernamePrefix() {
        return Optional.ofNullable(this.usernamePrefix);
    }

    private IdentityProviderConfigOidcArgs() {}

    private IdentityProviderConfigOidcArgs(IdentityProviderConfigOidcArgs $) {
        this.clientId = $.clientId;
        this.groupsClaim = $.groupsClaim;
        this.groupsPrefix = $.groupsPrefix;
        this.identityProviderConfigName = $.identityProviderConfigName;
        this.issuerUrl = $.issuerUrl;
        this.requiredClaims = $.requiredClaims;
        this.usernameClaim = $.usernameClaim;
        this.usernamePrefix = $.usernamePrefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IdentityProviderConfigOidcArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IdentityProviderConfigOidcArgs $;

        public Builder() {
            $ = new IdentityProviderConfigOidcArgs();
        }

        public Builder(IdentityProviderConfigOidcArgs defaults) {
            $ = new IdentityProviderConfigOidcArgs(Objects.requireNonNull(defaults));
        }

        public Builder clientId(Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        public Builder groupsClaim(@Nullable Output<String> groupsClaim) {
            $.groupsClaim = groupsClaim;
            return this;
        }

        public Builder groupsClaim(String groupsClaim) {
            return groupsClaim(Output.of(groupsClaim));
        }

        public Builder groupsPrefix(@Nullable Output<String> groupsPrefix) {
            $.groupsPrefix = groupsPrefix;
            return this;
        }

        public Builder groupsPrefix(String groupsPrefix) {
            return groupsPrefix(Output.of(groupsPrefix));
        }

        public Builder identityProviderConfigName(Output<String> identityProviderConfigName) {
            $.identityProviderConfigName = identityProviderConfigName;
            return this;
        }

        public Builder identityProviderConfigName(String identityProviderConfigName) {
            return identityProviderConfigName(Output.of(identityProviderConfigName));
        }

        public Builder issuerUrl(Output<String> issuerUrl) {
            $.issuerUrl = issuerUrl;
            return this;
        }

        public Builder issuerUrl(String issuerUrl) {
            return issuerUrl(Output.of(issuerUrl));
        }

        public Builder requiredClaims(@Nullable Output<Map<String,String>> requiredClaims) {
            $.requiredClaims = requiredClaims;
            return this;
        }

        public Builder requiredClaims(Map<String,String> requiredClaims) {
            return requiredClaims(Output.of(requiredClaims));
        }

        public Builder usernameClaim(@Nullable Output<String> usernameClaim) {
            $.usernameClaim = usernameClaim;
            return this;
        }

        public Builder usernameClaim(String usernameClaim) {
            return usernameClaim(Output.of(usernameClaim));
        }

        public Builder usernamePrefix(@Nullable Output<String> usernamePrefix) {
            $.usernamePrefix = usernamePrefix;
            return this;
        }

        public Builder usernamePrefix(String usernamePrefix) {
            return usernamePrefix(Output.of(usernamePrefix));
        }

        public IdentityProviderConfigOidcArgs build() {
            $.clientId = Objects.requireNonNull($.clientId, "expected parameter 'clientId' to be non-null");
            $.identityProviderConfigName = Objects.requireNonNull($.identityProviderConfigName, "expected parameter 'identityProviderConfigName' to be non-null");
            $.issuerUrl = Objects.requireNonNull($.issuerUrl, "expected parameter 'issuerUrl' to be non-null");
            return $;
        }
    }

}
