// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.acm.inputs;

import com.pulumi.aws.acm.inputs.CertificateDomainValidationOptionArgs;
import com.pulumi.aws.acm.inputs.CertificateOptionsArgs;
import com.pulumi.aws.acm.inputs.CertificateRenewalSummaryArgs;
import com.pulumi.aws.acm.inputs.CertificateValidationOptionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CertificateState extends com.pulumi.resources.ResourceArgs {

    public static final CertificateState Empty = new CertificateState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="certificateAuthorityArn")
    private @Nullable Output<String> certificateAuthorityArn;

    public Optional<Output<String>> certificateAuthorityArn() {
        return Optional.ofNullable(this.certificateAuthorityArn);
    }

    @Import(name="certificateBody")
    private @Nullable Output<String> certificateBody;

    public Optional<Output<String>> certificateBody() {
        return Optional.ofNullable(this.certificateBody);
    }

    @Import(name="certificateChain")
    private @Nullable Output<String> certificateChain;

    public Optional<Output<String>> certificateChain() {
        return Optional.ofNullable(this.certificateChain);
    }

    @Import(name="domainName")
    private @Nullable Output<String> domainName;

    public Optional<Output<String>> domainName() {
        return Optional.ofNullable(this.domainName);
    }

    @Import(name="domainValidationOptions")
    private @Nullable Output<List<CertificateDomainValidationOptionArgs>> domainValidationOptions;

    public Optional<Output<List<CertificateDomainValidationOptionArgs>>> domainValidationOptions() {
        return Optional.ofNullable(this.domainValidationOptions);
    }

    @Import(name="earlyRenewalDuration")
    private @Nullable Output<String> earlyRenewalDuration;

    public Optional<Output<String>> earlyRenewalDuration() {
        return Optional.ofNullable(this.earlyRenewalDuration);
    }

    @Import(name="keyAlgorithm")
    private @Nullable Output<String> keyAlgorithm;

    public Optional<Output<String>> keyAlgorithm() {
        return Optional.ofNullable(this.keyAlgorithm);
    }

    @Import(name="notAfter")
    private @Nullable Output<String> notAfter;

    public Optional<Output<String>> notAfter() {
        return Optional.ofNullable(this.notAfter);
    }

    @Import(name="notBefore")
    private @Nullable Output<String> notBefore;

    public Optional<Output<String>> notBefore() {
        return Optional.ofNullable(this.notBefore);
    }

    @Import(name="options")
    private @Nullable Output<CertificateOptionsArgs> options;

    public Optional<Output<CertificateOptionsArgs>> options() {
        return Optional.ofNullable(this.options);
    }

    @Import(name="pendingRenewal")
    private @Nullable Output<Boolean> pendingRenewal;

    public Optional<Output<Boolean>> pendingRenewal() {
        return Optional.ofNullable(this.pendingRenewal);
    }

    @Import(name="privateKey")
    private @Nullable Output<String> privateKey;

    public Optional<Output<String>> privateKey() {
        return Optional.ofNullable(this.privateKey);
    }

    @Import(name="renewalEligibility")
    private @Nullable Output<String> renewalEligibility;

    public Optional<Output<String>> renewalEligibility() {
        return Optional.ofNullable(this.renewalEligibility);
    }

    @Import(name="renewalSummaries")
    private @Nullable Output<List<CertificateRenewalSummaryArgs>> renewalSummaries;

    public Optional<Output<List<CertificateRenewalSummaryArgs>>> renewalSummaries() {
        return Optional.ofNullable(this.renewalSummaries);
    }

    @Import(name="status")
    private @Nullable Output<String> status;

    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    @Import(name="subjectAlternativeNames")
    private @Nullable Output<List<String>> subjectAlternativeNames;

    public Optional<Output<List<String>>> subjectAlternativeNames() {
        return Optional.ofNullable(this.subjectAlternativeNames);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    @Import(name="validationEmails")
    private @Nullable Output<List<String>> validationEmails;

    public Optional<Output<List<String>>> validationEmails() {
        return Optional.ofNullable(this.validationEmails);
    }

    @Import(name="validationMethod")
    private @Nullable Output<String> validationMethod;

    public Optional<Output<String>> validationMethod() {
        return Optional.ofNullable(this.validationMethod);
    }

    @Import(name="validationOptions")
    private @Nullable Output<List<CertificateValidationOptionArgs>> validationOptions;

    public Optional<Output<List<CertificateValidationOptionArgs>>> validationOptions() {
        return Optional.ofNullable(this.validationOptions);
    }

    private CertificateState() {}

    private CertificateState(CertificateState $) {
        this.arn = $.arn;
        this.certificateAuthorityArn = $.certificateAuthorityArn;
        this.certificateBody = $.certificateBody;
        this.certificateChain = $.certificateChain;
        this.domainName = $.domainName;
        this.domainValidationOptions = $.domainValidationOptions;
        this.earlyRenewalDuration = $.earlyRenewalDuration;
        this.keyAlgorithm = $.keyAlgorithm;
        this.notAfter = $.notAfter;
        this.notBefore = $.notBefore;
        this.options = $.options;
        this.pendingRenewal = $.pendingRenewal;
        this.privateKey = $.privateKey;
        this.renewalEligibility = $.renewalEligibility;
        this.renewalSummaries = $.renewalSummaries;
        this.status = $.status;
        this.subjectAlternativeNames = $.subjectAlternativeNames;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.type = $.type;
        this.validationEmails = $.validationEmails;
        this.validationMethod = $.validationMethod;
        this.validationOptions = $.validationOptions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CertificateState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CertificateState $;

        public Builder() {
            $ = new CertificateState();
        }

        public Builder(CertificateState defaults) {
            $ = new CertificateState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder certificateAuthorityArn(@Nullable Output<String> certificateAuthorityArn) {
            $.certificateAuthorityArn = certificateAuthorityArn;
            return this;
        }

        public Builder certificateAuthorityArn(String certificateAuthorityArn) {
            return certificateAuthorityArn(Output.of(certificateAuthorityArn));
        }

        public Builder certificateBody(@Nullable Output<String> certificateBody) {
            $.certificateBody = certificateBody;
            return this;
        }

        public Builder certificateBody(String certificateBody) {
            return certificateBody(Output.of(certificateBody));
        }

        public Builder certificateChain(@Nullable Output<String> certificateChain) {
            $.certificateChain = certificateChain;
            return this;
        }

        public Builder certificateChain(String certificateChain) {
            return certificateChain(Output.of(certificateChain));
        }

        public Builder domainName(@Nullable Output<String> domainName) {
            $.domainName = domainName;
            return this;
        }

        public Builder domainName(String domainName) {
            return domainName(Output.of(domainName));
        }

        public Builder domainValidationOptions(@Nullable Output<List<CertificateDomainValidationOptionArgs>> domainValidationOptions) {
            $.domainValidationOptions = domainValidationOptions;
            return this;
        }

        public Builder domainValidationOptions(List<CertificateDomainValidationOptionArgs> domainValidationOptions) {
            return domainValidationOptions(Output.of(domainValidationOptions));
        }

        public Builder domainValidationOptions(CertificateDomainValidationOptionArgs... domainValidationOptions) {
            return domainValidationOptions(List.of(domainValidationOptions));
        }

        public Builder earlyRenewalDuration(@Nullable Output<String> earlyRenewalDuration) {
            $.earlyRenewalDuration = earlyRenewalDuration;
            return this;
        }

        public Builder earlyRenewalDuration(String earlyRenewalDuration) {
            return earlyRenewalDuration(Output.of(earlyRenewalDuration));
        }

        public Builder keyAlgorithm(@Nullable Output<String> keyAlgorithm) {
            $.keyAlgorithm = keyAlgorithm;
            return this;
        }

        public Builder keyAlgorithm(String keyAlgorithm) {
            return keyAlgorithm(Output.of(keyAlgorithm));
        }

        public Builder notAfter(@Nullable Output<String> notAfter) {
            $.notAfter = notAfter;
            return this;
        }

        public Builder notAfter(String notAfter) {
            return notAfter(Output.of(notAfter));
        }

        public Builder notBefore(@Nullable Output<String> notBefore) {
            $.notBefore = notBefore;
            return this;
        }

        public Builder notBefore(String notBefore) {
            return notBefore(Output.of(notBefore));
        }

        public Builder options(@Nullable Output<CertificateOptionsArgs> options) {
            $.options = options;
            return this;
        }

        public Builder options(CertificateOptionsArgs options) {
            return options(Output.of(options));
        }

        public Builder pendingRenewal(@Nullable Output<Boolean> pendingRenewal) {
            $.pendingRenewal = pendingRenewal;
            return this;
        }

        public Builder pendingRenewal(Boolean pendingRenewal) {
            return pendingRenewal(Output.of(pendingRenewal));
        }

        public Builder privateKey(@Nullable Output<String> privateKey) {
            $.privateKey = privateKey;
            return this;
        }

        public Builder privateKey(String privateKey) {
            return privateKey(Output.of(privateKey));
        }

        public Builder renewalEligibility(@Nullable Output<String> renewalEligibility) {
            $.renewalEligibility = renewalEligibility;
            return this;
        }

        public Builder renewalEligibility(String renewalEligibility) {
            return renewalEligibility(Output.of(renewalEligibility));
        }

        public Builder renewalSummaries(@Nullable Output<List<CertificateRenewalSummaryArgs>> renewalSummaries) {
            $.renewalSummaries = renewalSummaries;
            return this;
        }

        public Builder renewalSummaries(List<CertificateRenewalSummaryArgs> renewalSummaries) {
            return renewalSummaries(Output.of(renewalSummaries));
        }

        public Builder renewalSummaries(CertificateRenewalSummaryArgs... renewalSummaries) {
            return renewalSummaries(List.of(renewalSummaries));
        }

        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        public Builder status(String status) {
            return status(Output.of(status));
        }

        public Builder subjectAlternativeNames(@Nullable Output<List<String>> subjectAlternativeNames) {
            $.subjectAlternativeNames = subjectAlternativeNames;
            return this;
        }

        public Builder subjectAlternativeNames(List<String> subjectAlternativeNames) {
            return subjectAlternativeNames(Output.of(subjectAlternativeNames));
        }

        public Builder subjectAlternativeNames(String... subjectAlternativeNames) {
            return subjectAlternativeNames(List.of(subjectAlternativeNames));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder validationEmails(@Nullable Output<List<String>> validationEmails) {
            $.validationEmails = validationEmails;
            return this;
        }

        public Builder validationEmails(List<String> validationEmails) {
            return validationEmails(Output.of(validationEmails));
        }

        public Builder validationEmails(String... validationEmails) {
            return validationEmails(List.of(validationEmails));
        }

        public Builder validationMethod(@Nullable Output<String> validationMethod) {
            $.validationMethod = validationMethod;
            return this;
        }

        public Builder validationMethod(String validationMethod) {
            return validationMethod(Output.of(validationMethod));
        }

        public Builder validationOptions(@Nullable Output<List<CertificateValidationOptionArgs>> validationOptions) {
            $.validationOptions = validationOptions;
            return this;
        }

        public Builder validationOptions(List<CertificateValidationOptionArgs> validationOptions) {
            return validationOptions(Output.of(validationOptions));
        }

        public Builder validationOptions(CertificateValidationOptionArgs... validationOptions) {
            return validationOptions(List.of(validationOptions));
        }

        public CertificateState build() {
            return $;
        }
    }

}
