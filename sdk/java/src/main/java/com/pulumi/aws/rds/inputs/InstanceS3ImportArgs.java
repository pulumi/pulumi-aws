// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.rds.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceS3ImportArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceS3ImportArgs Empty = new InstanceS3ImportArgs();

    @Import(name="bucketName", required=true)
    private Output<String> bucketName;

    public Output<String> bucketName() {
        return this.bucketName;
    }

    @Import(name="bucketPrefix")
    private @Nullable Output<String> bucketPrefix;

    public Optional<Output<String>> bucketPrefix() {
        return Optional.ofNullable(this.bucketPrefix);
    }

    @Import(name="ingestionRole", required=true)
    private Output<String> ingestionRole;

    public Output<String> ingestionRole() {
        return this.ingestionRole;
    }

    @Import(name="sourceEngine", required=true)
    private Output<String> sourceEngine;

    public Output<String> sourceEngine() {
        return this.sourceEngine;
    }

    @Import(name="sourceEngineVersion", required=true)
    private Output<String> sourceEngineVersion;

    public Output<String> sourceEngineVersion() {
        return this.sourceEngineVersion;
    }

    private InstanceS3ImportArgs() {}

    private InstanceS3ImportArgs(InstanceS3ImportArgs $) {
        this.bucketName = $.bucketName;
        this.bucketPrefix = $.bucketPrefix;
        this.ingestionRole = $.ingestionRole;
        this.sourceEngine = $.sourceEngine;
        this.sourceEngineVersion = $.sourceEngineVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceS3ImportArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceS3ImportArgs $;

        public Builder() {
            $ = new InstanceS3ImportArgs();
        }

        public Builder(InstanceS3ImportArgs defaults) {
            $ = new InstanceS3ImportArgs(Objects.requireNonNull(defaults));
        }

        public Builder bucketName(Output<String> bucketName) {
            $.bucketName = bucketName;
            return this;
        }

        public Builder bucketName(String bucketName) {
            return bucketName(Output.of(bucketName));
        }

        public Builder bucketPrefix(@Nullable Output<String> bucketPrefix) {
            $.bucketPrefix = bucketPrefix;
            return this;
        }

        public Builder bucketPrefix(String bucketPrefix) {
            return bucketPrefix(Output.of(bucketPrefix));
        }

        public Builder ingestionRole(Output<String> ingestionRole) {
            $.ingestionRole = ingestionRole;
            return this;
        }

        public Builder ingestionRole(String ingestionRole) {
            return ingestionRole(Output.of(ingestionRole));
        }

        public Builder sourceEngine(Output<String> sourceEngine) {
            $.sourceEngine = sourceEngine;
            return this;
        }

        public Builder sourceEngine(String sourceEngine) {
            return sourceEngine(Output.of(sourceEngine));
        }

        public Builder sourceEngineVersion(Output<String> sourceEngineVersion) {
            $.sourceEngineVersion = sourceEngineVersion;
            return this;
        }

        public Builder sourceEngineVersion(String sourceEngineVersion) {
            return sourceEngineVersion(Output.of(sourceEngineVersion));
        }

        public InstanceS3ImportArgs build() {
            if ($.bucketName == null) {
                throw new MissingRequiredPropertyException("InstanceS3ImportArgs", "bucketName");
            }
            if ($.ingestionRole == null) {
                throw new MissingRequiredPropertyException("InstanceS3ImportArgs", "ingestionRole");
            }
            if ($.sourceEngine == null) {
                throw new MissingRequiredPropertyException("InstanceS3ImportArgs", "sourceEngine");
            }
            if ($.sourceEngineVersion == null) {
                throw new MissingRequiredPropertyException("InstanceS3ImportArgs", "sourceEngineVersion");
            }
            return $;
        }
    }

}
