// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.opensearch.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainClusterConfigNodeOptionNodeConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainClusterConfigNodeOptionNodeConfigArgs Empty = new DomainClusterConfigNodeOptionNodeConfigArgs();

    /**
     * Number of nodes of a particular node type in the cluster.
     * 
     */
    @Import(name="count")
    private @Nullable Output<Integer> count;

    /**
     * @return Number of nodes of a particular node type in the cluster.
     * 
     */
    public Optional<Output<Integer>> count() {
        return Optional.ofNullable(this.count);
    }

    /**
     * Whether a particular node type is enabled.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Whether a particular node type is enabled.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * The instance type of a particular node type in the cluster.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The instance type of a particular node type in the cluster.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private DomainClusterConfigNodeOptionNodeConfigArgs() {}

    private DomainClusterConfigNodeOptionNodeConfigArgs(DomainClusterConfigNodeOptionNodeConfigArgs $) {
        this.count = $.count;
        this.enabled = $.enabled;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainClusterConfigNodeOptionNodeConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainClusterConfigNodeOptionNodeConfigArgs $;

        public Builder() {
            $ = new DomainClusterConfigNodeOptionNodeConfigArgs();
        }

        public Builder(DomainClusterConfigNodeOptionNodeConfigArgs defaults) {
            $ = new DomainClusterConfigNodeOptionNodeConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param count Number of nodes of a particular node type in the cluster.
         * 
         * @return builder
         * 
         */
        public Builder count(@Nullable Output<Integer> count) {
            $.count = count;
            return this;
        }

        /**
         * @param count Number of nodes of a particular node type in the cluster.
         * 
         * @return builder
         * 
         */
        public Builder count(Integer count) {
            return count(Output.of(count));
        }

        /**
         * @param enabled Whether a particular node type is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether a particular node type is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param type The instance type of a particular node type in the cluster.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The instance type of a particular node type in the cluster.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public DomainClusterConfigNodeOptionNodeConfigArgs build() {
            return $;
        }
    }

}
