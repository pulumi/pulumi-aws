// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProviderAssumeRoleWithWebIdentityArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProviderAssumeRoleWithWebIdentityArgs Empty = new ProviderAssumeRoleWithWebIdentityArgs();

    /**
     * The duration, between 15 minutes and 12 hours, of the role session. Valid time units are ns, us (or µs), ms, s, h, or m.
     * 
     */
    @Import(name="duration")
    private @Nullable Output<String> duration;

    /**
     * @return The duration, between 15 minutes and 12 hours, of the role session. Valid time units are ns, us (or µs), ms, s, h, or m.
     * 
     */
    public Optional<Output<String>> duration() {
        return Optional.ofNullable(this.duration);
    }

    /**
     * IAM Policy JSON describing further restricting permissions for the IAM Role being assumed.
     * 
     */
    @Import(name="policy")
    private @Nullable Output<String> policy;

    /**
     * @return IAM Policy JSON describing further restricting permissions for the IAM Role being assumed.
     * 
     */
    public Optional<Output<String>> policy() {
        return Optional.ofNullable(this.policy);
    }

    /**
     * Amazon Resource Names (ARNs) of IAM Policies describing further restricting permissions for the IAM Role being assumed.
     * 
     */
    @Import(name="policyArns")
    private @Nullable Output<List<String>> policyArns;

    /**
     * @return Amazon Resource Names (ARNs) of IAM Policies describing further restricting permissions for the IAM Role being assumed.
     * 
     */
    public Optional<Output<List<String>>> policyArns() {
        return Optional.ofNullable(this.policyArns);
    }

    /**
     * Amazon Resource Name (ARN) of an IAM Role to assume prior to making API calls.
     * 
     */
    @Import(name="roleArn")
    private @Nullable Output<String> roleArn;

    /**
     * @return Amazon Resource Name (ARN) of an IAM Role to assume prior to making API calls.
     * 
     */
    public Optional<Output<String>> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }

    /**
     * An identifier for the assumed role session.
     * 
     */
    @Import(name="sessionName")
    private @Nullable Output<String> sessionName;

    /**
     * @return An identifier for the assumed role session.
     * 
     */
    public Optional<Output<String>> sessionName() {
        return Optional.ofNullable(this.sessionName);
    }

    @Import(name="webIdentityToken")
    private @Nullable Output<String> webIdentityToken;

    public Optional<Output<String>> webIdentityToken() {
        return Optional.ofNullable(this.webIdentityToken);
    }

    @Import(name="webIdentityTokenFile")
    private @Nullable Output<String> webIdentityTokenFile;

    public Optional<Output<String>> webIdentityTokenFile() {
        return Optional.ofNullable(this.webIdentityTokenFile);
    }

    private ProviderAssumeRoleWithWebIdentityArgs() {}

    private ProviderAssumeRoleWithWebIdentityArgs(ProviderAssumeRoleWithWebIdentityArgs $) {
        this.duration = $.duration;
        this.policy = $.policy;
        this.policyArns = $.policyArns;
        this.roleArn = $.roleArn;
        this.sessionName = $.sessionName;
        this.webIdentityToken = $.webIdentityToken;
        this.webIdentityTokenFile = $.webIdentityTokenFile;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProviderAssumeRoleWithWebIdentityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProviderAssumeRoleWithWebIdentityArgs $;

        public Builder() {
            $ = new ProviderAssumeRoleWithWebIdentityArgs();
        }

        public Builder(ProviderAssumeRoleWithWebIdentityArgs defaults) {
            $ = new ProviderAssumeRoleWithWebIdentityArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param duration The duration, between 15 minutes and 12 hours, of the role session. Valid time units are ns, us (or µs), ms, s, h, or m.
         * 
         * @return builder
         * 
         */
        public Builder duration(@Nullable Output<String> duration) {
            $.duration = duration;
            return this;
        }

        /**
         * @param duration The duration, between 15 minutes and 12 hours, of the role session. Valid time units are ns, us (or µs), ms, s, h, or m.
         * 
         * @return builder
         * 
         */
        public Builder duration(String duration) {
            return duration(Output.of(duration));
        }

        /**
         * @param policy IAM Policy JSON describing further restricting permissions for the IAM Role being assumed.
         * 
         * @return builder
         * 
         */
        public Builder policy(@Nullable Output<String> policy) {
            $.policy = policy;
            return this;
        }

        /**
         * @param policy IAM Policy JSON describing further restricting permissions for the IAM Role being assumed.
         * 
         * @return builder
         * 
         */
        public Builder policy(String policy) {
            return policy(Output.of(policy));
        }

        /**
         * @param policyArns Amazon Resource Names (ARNs) of IAM Policies describing further restricting permissions for the IAM Role being assumed.
         * 
         * @return builder
         * 
         */
        public Builder policyArns(@Nullable Output<List<String>> policyArns) {
            $.policyArns = policyArns;
            return this;
        }

        /**
         * @param policyArns Amazon Resource Names (ARNs) of IAM Policies describing further restricting permissions for the IAM Role being assumed.
         * 
         * @return builder
         * 
         */
        public Builder policyArns(List<String> policyArns) {
            return policyArns(Output.of(policyArns));
        }

        /**
         * @param policyArns Amazon Resource Names (ARNs) of IAM Policies describing further restricting permissions for the IAM Role being assumed.
         * 
         * @return builder
         * 
         */
        public Builder policyArns(String... policyArns) {
            return policyArns(List.of(policyArns));
        }

        /**
         * @param roleArn Amazon Resource Name (ARN) of an IAM Role to assume prior to making API calls.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(@Nullable Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn Amazon Resource Name (ARN) of an IAM Role to assume prior to making API calls.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        /**
         * @param sessionName An identifier for the assumed role session.
         * 
         * @return builder
         * 
         */
        public Builder sessionName(@Nullable Output<String> sessionName) {
            $.sessionName = sessionName;
            return this;
        }

        /**
         * @param sessionName An identifier for the assumed role session.
         * 
         * @return builder
         * 
         */
        public Builder sessionName(String sessionName) {
            return sessionName(Output.of(sessionName));
        }

        public Builder webIdentityToken(@Nullable Output<String> webIdentityToken) {
            $.webIdentityToken = webIdentityToken;
            return this;
        }

        public Builder webIdentityToken(String webIdentityToken) {
            return webIdentityToken(Output.of(webIdentityToken));
        }

        public Builder webIdentityTokenFile(@Nullable Output<String> webIdentityTokenFile) {
            $.webIdentityTokenFile = webIdentityTokenFile;
            return this;
        }

        public Builder webIdentityTokenFile(String webIdentityTokenFile) {
            return webIdentityTokenFile(Output.of(webIdentityTokenFile));
        }

        public ProviderAssumeRoleWithWebIdentityArgs build() {
            return $;
        }
    }

}
