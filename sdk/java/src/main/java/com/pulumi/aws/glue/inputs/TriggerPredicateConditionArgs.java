// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.glue.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TriggerPredicateConditionArgs extends com.pulumi.resources.ResourceArgs {

    public static final TriggerPredicateConditionArgs Empty = new TriggerPredicateConditionArgs();

    @Import(name="crawlState")
    private @Nullable Output<String> crawlState;

    public Optional<Output<String>> crawlState() {
        return Optional.ofNullable(this.crawlState);
    }

    @Import(name="crawlerName")
    private @Nullable Output<String> crawlerName;

    public Optional<Output<String>> crawlerName() {
        return Optional.ofNullable(this.crawlerName);
    }

    @Import(name="jobName")
    private @Nullable Output<String> jobName;

    public Optional<Output<String>> jobName() {
        return Optional.ofNullable(this.jobName);
    }

    @Import(name="logicalOperator")
    private @Nullable Output<String> logicalOperator;

    public Optional<Output<String>> logicalOperator() {
        return Optional.ofNullable(this.logicalOperator);
    }

    @Import(name="state")
    private @Nullable Output<String> state;

    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    private TriggerPredicateConditionArgs() {}

    private TriggerPredicateConditionArgs(TriggerPredicateConditionArgs $) {
        this.crawlState = $.crawlState;
        this.crawlerName = $.crawlerName;
        this.jobName = $.jobName;
        this.logicalOperator = $.logicalOperator;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TriggerPredicateConditionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TriggerPredicateConditionArgs $;

        public Builder() {
            $ = new TriggerPredicateConditionArgs();
        }

        public Builder(TriggerPredicateConditionArgs defaults) {
            $ = new TriggerPredicateConditionArgs(Objects.requireNonNull(defaults));
        }

        public Builder crawlState(@Nullable Output<String> crawlState) {
            $.crawlState = crawlState;
            return this;
        }

        public Builder crawlState(String crawlState) {
            return crawlState(Output.of(crawlState));
        }

        public Builder crawlerName(@Nullable Output<String> crawlerName) {
            $.crawlerName = crawlerName;
            return this;
        }

        public Builder crawlerName(String crawlerName) {
            return crawlerName(Output.of(crawlerName));
        }

        public Builder jobName(@Nullable Output<String> jobName) {
            $.jobName = jobName;
            return this;
        }

        public Builder jobName(String jobName) {
            return jobName(Output.of(jobName));
        }

        public Builder logicalOperator(@Nullable Output<String> logicalOperator) {
            $.logicalOperator = logicalOperator;
            return this;
        }

        public Builder logicalOperator(String logicalOperator) {
            return logicalOperator(Output.of(logicalOperator));
        }

        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        public Builder state(String state) {
            return state(Output.of(state));
        }

        public TriggerPredicateConditionArgs build() {
            return $;
        }
    }

}
