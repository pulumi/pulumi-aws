// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codebuild.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProjectLogsConfigCloudwatchLogsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProjectLogsConfigCloudwatchLogsArgs Empty = new ProjectLogsConfigCloudwatchLogsArgs();

    /**
     * Group name of the logs in CloudWatch Logs.
     * 
     */
    @Import(name="groupName")
    private @Nullable Output<String> groupName;

    /**
     * @return Group name of the logs in CloudWatch Logs.
     * 
     */
    public Optional<Output<String>> groupName() {
        return Optional.ofNullable(this.groupName);
    }

    /**
     * Current status of logs in CloudWatch Logs for a build project. Valid values: `ENABLED`, `DISABLED`. Defaults to `ENABLED`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Current status of logs in CloudWatch Logs for a build project. Valid values: `ENABLED`, `DISABLED`. Defaults to `ENABLED`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Stream name of the logs in CloudWatch Logs.
     * 
     */
    @Import(name="streamName")
    private @Nullable Output<String> streamName;

    /**
     * @return Stream name of the logs in CloudWatch Logs.
     * 
     */
    public Optional<Output<String>> streamName() {
        return Optional.ofNullable(this.streamName);
    }

    private ProjectLogsConfigCloudwatchLogsArgs() {}

    private ProjectLogsConfigCloudwatchLogsArgs(ProjectLogsConfigCloudwatchLogsArgs $) {
        this.groupName = $.groupName;
        this.status = $.status;
        this.streamName = $.streamName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectLogsConfigCloudwatchLogsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectLogsConfigCloudwatchLogsArgs $;

        public Builder() {
            $ = new ProjectLogsConfigCloudwatchLogsArgs();
        }

        public Builder(ProjectLogsConfigCloudwatchLogsArgs defaults) {
            $ = new ProjectLogsConfigCloudwatchLogsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param groupName Group name of the logs in CloudWatch Logs.
         * 
         * @return builder
         * 
         */
        public Builder groupName(@Nullable Output<String> groupName) {
            $.groupName = groupName;
            return this;
        }

        /**
         * @param groupName Group name of the logs in CloudWatch Logs.
         * 
         * @return builder
         * 
         */
        public Builder groupName(String groupName) {
            return groupName(Output.of(groupName));
        }

        /**
         * @param status Current status of logs in CloudWatch Logs for a build project. Valid values: `ENABLED`, `DISABLED`. Defaults to `ENABLED`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Current status of logs in CloudWatch Logs for a build project. Valid values: `ENABLED`, `DISABLED`. Defaults to `ENABLED`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param streamName Stream name of the logs in CloudWatch Logs.
         * 
         * @return builder
         * 
         */
        public Builder streamName(@Nullable Output<String> streamName) {
            $.streamName = streamName;
            return this;
        }

        /**
         * @param streamName Stream name of the logs in CloudWatch Logs.
         * 
         * @return builder
         * 
         */
        public Builder streamName(String streamName) {
            return streamName(Output.of(streamName));
        }

        public ProjectLogsConfigCloudwatchLogsArgs build() {
            return $;
        }
    }

}
