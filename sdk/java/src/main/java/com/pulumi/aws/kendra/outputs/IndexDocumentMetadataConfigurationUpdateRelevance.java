// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kendra.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class IndexDocumentMetadataConfigurationUpdateRelevance {
    /**
     * @return Specifies the time period that the boost applies to. For more information, refer to [Duration](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-Duration).
     * 
     */
    private @Nullable String duration;
    /**
     * @return Indicates that this field determines how &#34;fresh&#34; a document is. For more information, refer to [Freshness](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-Freshness).
     * 
     */
    private @Nullable Boolean freshness;
    /**
     * @return The relative importance of the field in the search. Larger numbers provide more of a boost than smaller numbers. Minimum value of 1. Maximum value of 10.
     * 
     */
    private @Nullable Integer importance;
    /**
     * @return Determines how values should be interpreted. For more information, refer to [RankOrder](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-RankOrder).
     * 
     */
    private @Nullable String rankOrder;
    /**
     * @return A list of values that should be given a different boost when they appear in the result list. For more information, refer to [ValueImportanceMap](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-ValueImportanceMap).
     * 
     */
    private @Nullable Map<String,Integer> valuesImportanceMap;

    private IndexDocumentMetadataConfigurationUpdateRelevance() {}
    /**
     * @return Specifies the time period that the boost applies to. For more information, refer to [Duration](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-Duration).
     * 
     */
    public Optional<String> duration() {
        return Optional.ofNullable(this.duration);
    }
    /**
     * @return Indicates that this field determines how &#34;fresh&#34; a document is. For more information, refer to [Freshness](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-Freshness).
     * 
     */
    public Optional<Boolean> freshness() {
        return Optional.ofNullable(this.freshness);
    }
    /**
     * @return The relative importance of the field in the search. Larger numbers provide more of a boost than smaller numbers. Minimum value of 1. Maximum value of 10.
     * 
     */
    public Optional<Integer> importance() {
        return Optional.ofNullable(this.importance);
    }
    /**
     * @return Determines how values should be interpreted. For more information, refer to [RankOrder](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-RankOrder).
     * 
     */
    public Optional<String> rankOrder() {
        return Optional.ofNullable(this.rankOrder);
    }
    /**
     * @return A list of values that should be given a different boost when they appear in the result list. For more information, refer to [ValueImportanceMap](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-ValueImportanceMap).
     * 
     */
    public Map<String,Integer> valuesImportanceMap() {
        return this.valuesImportanceMap == null ? Map.of() : this.valuesImportanceMap;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IndexDocumentMetadataConfigurationUpdateRelevance defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String duration;
        private @Nullable Boolean freshness;
        private @Nullable Integer importance;
        private @Nullable String rankOrder;
        private @Nullable Map<String,Integer> valuesImportanceMap;
        public Builder() {}
        public Builder(IndexDocumentMetadataConfigurationUpdateRelevance defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.duration = defaults.duration;
    	      this.freshness = defaults.freshness;
    	      this.importance = defaults.importance;
    	      this.rankOrder = defaults.rankOrder;
    	      this.valuesImportanceMap = defaults.valuesImportanceMap;
        }

        @CustomType.Setter
        public Builder duration(@Nullable String duration) {
            this.duration = duration;
            return this;
        }
        @CustomType.Setter
        public Builder freshness(@Nullable Boolean freshness) {
            this.freshness = freshness;
            return this;
        }
        @CustomType.Setter
        public Builder importance(@Nullable Integer importance) {
            this.importance = importance;
            return this;
        }
        @CustomType.Setter
        public Builder rankOrder(@Nullable String rankOrder) {
            this.rankOrder = rankOrder;
            return this;
        }
        @CustomType.Setter
        public Builder valuesImportanceMap(@Nullable Map<String,Integer> valuesImportanceMap) {
            this.valuesImportanceMap = valuesImportanceMap;
            return this;
        }
        public IndexDocumentMetadataConfigurationUpdateRelevance build() {
            final var _resultValue = new IndexDocumentMetadataConfigurationUpdateRelevance();
            _resultValue.duration = duration;
            _resultValue.freshness = freshness;
            _resultValue.importance = importance;
            _resultValue.rankOrder = rankOrder;
            _resultValue.valuesImportanceMap = valuesImportanceMap;
            return _resultValue;
        }
    }
}
