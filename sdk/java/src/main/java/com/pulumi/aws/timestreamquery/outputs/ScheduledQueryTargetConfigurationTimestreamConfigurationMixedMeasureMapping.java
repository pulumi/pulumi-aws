// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.timestreamquery.outputs;

import com.pulumi.aws.timestreamquery.outputs.ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMapping;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMapping {
    /**
     * @return Refers to the value of measure_name in a result row. This field is required if `measure_name_column` is provided.
     * 
     */
    private @Nullable String measureName;
    /**
     * @return Type of the value that is to be read from `source_column`. Valid values are `BIGINT`, `BOOLEAN`, `DOUBLE`, `VARCHAR`, `MULTI`.
     * 
     */
    private String measureValueType;
    /**
     * @return Configuration block for attribute mappings for `MULTI` value measures. Required when `measure_value_type` is `MULTI`. See below.
     * 
     */
    private @Nullable List<ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMapping> multiMeasureAttributeMappings;
    /**
     * @return Source column from which measure-value is to be read for result materialization.
     * 
     */
    private @Nullable String sourceColumn;
    /**
     * @return Target measure name to be used. If not provided, the target measure name by default is `measure_name`, if provided, or `source_column` otherwise.
     * 
     */
    private @Nullable String targetMeasureName;

    private ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMapping() {}
    /**
     * @return Refers to the value of measure_name in a result row. This field is required if `measure_name_column` is provided.
     * 
     */
    public Optional<String> measureName() {
        return Optional.ofNullable(this.measureName);
    }
    /**
     * @return Type of the value that is to be read from `source_column`. Valid values are `BIGINT`, `BOOLEAN`, `DOUBLE`, `VARCHAR`, `MULTI`.
     * 
     */
    public String measureValueType() {
        return this.measureValueType;
    }
    /**
     * @return Configuration block for attribute mappings for `MULTI` value measures. Required when `measure_value_type` is `MULTI`. See below.
     * 
     */
    public List<ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMapping> multiMeasureAttributeMappings() {
        return this.multiMeasureAttributeMappings == null ? List.of() : this.multiMeasureAttributeMappings;
    }
    /**
     * @return Source column from which measure-value is to be read for result materialization.
     * 
     */
    public Optional<String> sourceColumn() {
        return Optional.ofNullable(this.sourceColumn);
    }
    /**
     * @return Target measure name to be used. If not provided, the target measure name by default is `measure_name`, if provided, or `source_column` otherwise.
     * 
     */
    public Optional<String> targetMeasureName() {
        return Optional.ofNullable(this.targetMeasureName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMapping defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String measureName;
        private String measureValueType;
        private @Nullable List<ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMapping> multiMeasureAttributeMappings;
        private @Nullable String sourceColumn;
        private @Nullable String targetMeasureName;
        public Builder() {}
        public Builder(ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMapping defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.measureName = defaults.measureName;
    	      this.measureValueType = defaults.measureValueType;
    	      this.multiMeasureAttributeMappings = defaults.multiMeasureAttributeMappings;
    	      this.sourceColumn = defaults.sourceColumn;
    	      this.targetMeasureName = defaults.targetMeasureName;
        }

        @CustomType.Setter
        public Builder measureName(@Nullable String measureName) {

            this.measureName = measureName;
            return this;
        }
        @CustomType.Setter
        public Builder measureValueType(String measureValueType) {
            if (measureValueType == null) {
              throw new MissingRequiredPropertyException("ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMapping", "measureValueType");
            }
            this.measureValueType = measureValueType;
            return this;
        }
        @CustomType.Setter
        public Builder multiMeasureAttributeMappings(@Nullable List<ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMapping> multiMeasureAttributeMappings) {

            this.multiMeasureAttributeMappings = multiMeasureAttributeMappings;
            return this;
        }
        public Builder multiMeasureAttributeMappings(ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMapping... multiMeasureAttributeMappings) {
            return multiMeasureAttributeMappings(List.of(multiMeasureAttributeMappings));
        }
        @CustomType.Setter
        public Builder sourceColumn(@Nullable String sourceColumn) {

            this.sourceColumn = sourceColumn;
            return this;
        }
        @CustomType.Setter
        public Builder targetMeasureName(@Nullable String targetMeasureName) {

            this.targetMeasureName = targetMeasureName;
            return this;
        }
        public ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMapping build() {
            final var _resultValue = new ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMapping();
            _resultValue.measureName = measureName;
            _resultValue.measureValueType = measureValueType;
            _resultValue.multiMeasureAttributeMappings = multiMeasureAttributeMappings;
            _resultValue.sourceColumn = sourceColumn;
            _resultValue.targetMeasureName = targetMeasureName;
            return _resultValue;
        }
    }
}
