// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BucketV2ServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault {
    private @Nullable String kmsMasterKeyId;
    private String sseAlgorithm;

    private BucketV2ServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault() {}
    public Optional<String> kmsMasterKeyId() {
        return Optional.ofNullable(this.kmsMasterKeyId);
    }
    public String sseAlgorithm() {
        return this.sseAlgorithm;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketV2ServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String kmsMasterKeyId;
        private String sseAlgorithm;
        public Builder() {}
        public Builder(BucketV2ServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.kmsMasterKeyId = defaults.kmsMasterKeyId;
    	      this.sseAlgorithm = defaults.sseAlgorithm;
        }

        @CustomType.Setter
        public Builder kmsMasterKeyId(@Nullable String kmsMasterKeyId) {
            this.kmsMasterKeyId = kmsMasterKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder sseAlgorithm(String sseAlgorithm) {
            this.sseAlgorithm = Objects.requireNonNull(sseAlgorithm);
            return this;
        }
        public BucketV2ServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault build() {
            final var o = new BucketV2ServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault();
            o.kmsMasterKeyId = kmsMasterKeyId;
            o.sseAlgorithm = sseAlgorithm;
            return o;
        }
    }
}
