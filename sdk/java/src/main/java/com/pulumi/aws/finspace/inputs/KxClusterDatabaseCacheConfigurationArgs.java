// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.finspace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KxClusterDatabaseCacheConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final KxClusterDatabaseCacheConfigurationArgs Empty = new KxClusterDatabaseCacheConfigurationArgs();

    /**
     * Type of disk cache.
     * 
     */
    @Import(name="cacheType", required=true)
    private Output<String> cacheType;

    /**
     * @return Type of disk cache.
     * 
     */
    public Output<String> cacheType() {
        return this.cacheType;
    }

    /**
     * Paths within the database to cache.
     * 
     */
    @Import(name="dbPaths")
    private @Nullable Output<List<String>> dbPaths;

    /**
     * @return Paths within the database to cache.
     * 
     */
    public Optional<Output<List<String>>> dbPaths() {
        return Optional.ofNullable(this.dbPaths);
    }

    private KxClusterDatabaseCacheConfigurationArgs() {}

    private KxClusterDatabaseCacheConfigurationArgs(KxClusterDatabaseCacheConfigurationArgs $) {
        this.cacheType = $.cacheType;
        this.dbPaths = $.dbPaths;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KxClusterDatabaseCacheConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KxClusterDatabaseCacheConfigurationArgs $;

        public Builder() {
            $ = new KxClusterDatabaseCacheConfigurationArgs();
        }

        public Builder(KxClusterDatabaseCacheConfigurationArgs defaults) {
            $ = new KxClusterDatabaseCacheConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cacheType Type of disk cache.
         * 
         * @return builder
         * 
         */
        public Builder cacheType(Output<String> cacheType) {
            $.cacheType = cacheType;
            return this;
        }

        /**
         * @param cacheType Type of disk cache.
         * 
         * @return builder
         * 
         */
        public Builder cacheType(String cacheType) {
            return cacheType(Output.of(cacheType));
        }

        /**
         * @param dbPaths Paths within the database to cache.
         * 
         * @return builder
         * 
         */
        public Builder dbPaths(@Nullable Output<List<String>> dbPaths) {
            $.dbPaths = dbPaths;
            return this;
        }

        /**
         * @param dbPaths Paths within the database to cache.
         * 
         * @return builder
         * 
         */
        public Builder dbPaths(List<String> dbPaths) {
            return dbPaths(Output.of(dbPaths));
        }

        /**
         * @param dbPaths Paths within the database to cache.
         * 
         * @return builder
         * 
         */
        public Builder dbPaths(String... dbPaths) {
            return dbPaths(List.of(dbPaths));
        }

        public KxClusterDatabaseCacheConfigurationArgs build() {
            $.cacheType = Objects.requireNonNull($.cacheType, "expected parameter 'cacheType' to be non-null");
            return $;
        }
    }

}
