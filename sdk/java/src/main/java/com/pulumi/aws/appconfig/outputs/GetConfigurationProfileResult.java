// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appconfig.outputs;

import com.pulumi.aws.appconfig.outputs.GetConfigurationProfileValidator;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetConfigurationProfileResult {
    private String applicationId;
    /**
     * @return ARN of the Configuration Profile.
     * 
     */
    private String arn;
    private String configurationProfileId;
    /**
     * @return Description of the Configuration Profile.
     * 
     */
    private String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String kmsKeyIdentifier;
    /**
     * @return Location URI of the Configuration Profile.
     * 
     */
    private String locationUri;
    /**
     * @return Name of the Configuration Profile.
     * 
     */
    private String name;
    /**
     * @return ARN of an IAM role with permission to access the configuration at the specified location_uri.
     * 
     */
    private String retrievalRoleArn;
    /**
     * @return Map of tags for the resource.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return Type of validator. Valid values: JSON_SCHEMA and LAMBDA.
     * 
     */
    private String type;
    /**
     * @return Nested list of methods for validating the configuration.
     * 
     */
    private List<GetConfigurationProfileValidator> validators;

    private GetConfigurationProfileResult() {}
    public String applicationId() {
        return this.applicationId;
    }
    /**
     * @return ARN of the Configuration Profile.
     * 
     */
    public String arn() {
        return this.arn;
    }
    public String configurationProfileId() {
        return this.configurationProfileId;
    }
    /**
     * @return Description of the Configuration Profile.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String kmsKeyIdentifier() {
        return this.kmsKeyIdentifier;
    }
    /**
     * @return Location URI of the Configuration Profile.
     * 
     */
    public String locationUri() {
        return this.locationUri;
    }
    /**
     * @return Name of the Configuration Profile.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return ARN of an IAM role with permission to access the configuration at the specified location_uri.
     * 
     */
    public String retrievalRoleArn() {
        return this.retrievalRoleArn;
    }
    /**
     * @return Map of tags for the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return Type of validator. Valid values: JSON_SCHEMA and LAMBDA.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Nested list of methods for validating the configuration.
     * 
     */
    public List<GetConfigurationProfileValidator> validators() {
        return this.validators;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConfigurationProfileResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String applicationId;
        private String arn;
        private String configurationProfileId;
        private String description;
        private String id;
        private String kmsKeyIdentifier;
        private String locationUri;
        private String name;
        private String retrievalRoleArn;
        private Map<String,String> tags;
        private String type;
        private List<GetConfigurationProfileValidator> validators;
        public Builder() {}
        public Builder(GetConfigurationProfileResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationId = defaults.applicationId;
    	      this.arn = defaults.arn;
    	      this.configurationProfileId = defaults.configurationProfileId;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.kmsKeyIdentifier = defaults.kmsKeyIdentifier;
    	      this.locationUri = defaults.locationUri;
    	      this.name = defaults.name;
    	      this.retrievalRoleArn = defaults.retrievalRoleArn;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.validators = defaults.validators;
        }

        @CustomType.Setter
        public Builder applicationId(String applicationId) {
            if (applicationId == null) {
              throw new MissingRequiredPropertyException("GetConfigurationProfileResult", "applicationId");
            }
            this.applicationId = applicationId;
            return this;
        }
        @CustomType.Setter
        public Builder arn(String arn) {
            if (arn == null) {
              throw new MissingRequiredPropertyException("GetConfigurationProfileResult", "arn");
            }
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder configurationProfileId(String configurationProfileId) {
            if (configurationProfileId == null) {
              throw new MissingRequiredPropertyException("GetConfigurationProfileResult", "configurationProfileId");
            }
            this.configurationProfileId = configurationProfileId;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetConfigurationProfileResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetConfigurationProfileResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyIdentifier(String kmsKeyIdentifier) {
            if (kmsKeyIdentifier == null) {
              throw new MissingRequiredPropertyException("GetConfigurationProfileResult", "kmsKeyIdentifier");
            }
            this.kmsKeyIdentifier = kmsKeyIdentifier;
            return this;
        }
        @CustomType.Setter
        public Builder locationUri(String locationUri) {
            if (locationUri == null) {
              throw new MissingRequiredPropertyException("GetConfigurationProfileResult", "locationUri");
            }
            this.locationUri = locationUri;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetConfigurationProfileResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder retrievalRoleArn(String retrievalRoleArn) {
            if (retrievalRoleArn == null) {
              throw new MissingRequiredPropertyException("GetConfigurationProfileResult", "retrievalRoleArn");
            }
            this.retrievalRoleArn = retrievalRoleArn;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetConfigurationProfileResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetConfigurationProfileResult", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder validators(List<GetConfigurationProfileValidator> validators) {
            if (validators == null) {
              throw new MissingRequiredPropertyException("GetConfigurationProfileResult", "validators");
            }
            this.validators = validators;
            return this;
        }
        public Builder validators(GetConfigurationProfileValidator... validators) {
            return validators(List.of(validators));
        }
        public GetConfigurationProfileResult build() {
            final var _resultValue = new GetConfigurationProfileResult();
            _resultValue.applicationId = applicationId;
            _resultValue.arn = arn;
            _resultValue.configurationProfileId = configurationProfileId;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.kmsKeyIdentifier = kmsKeyIdentifier;
            _resultValue.locationUri = locationUri;
            _resultValue.name = name;
            _resultValue.retrievalRoleArn = retrievalRoleArn;
            _resultValue.tags = tags;
            _resultValue.type = type;
            _resultValue.validators = validators;
            return _resultValue;
        }
    }
}
