// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.inputs;

import com.pulumi.aws.bedrock.inputs.AgentcoreCodeInterpreterNetworkConfigurationArgs;
import com.pulumi.aws.bedrock.inputs.AgentcoreCodeInterpreterTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AgentcoreCodeInterpreterState extends com.pulumi.resources.ResourceArgs {

    public static final AgentcoreCodeInterpreterState Empty = new AgentcoreCodeInterpreterState();

    /**
     * ARN of the Code Interpreter.
     * 
     */
    @Import(name="codeInterpreterArn")
    private @Nullable Output<String> codeInterpreterArn;

    /**
     * @return ARN of the Code Interpreter.
     * 
     */
    public Optional<Output<String>> codeInterpreterArn() {
        return Optional.ofNullable(this.codeInterpreterArn);
    }

    /**
     * Unique identifier of the Code Interpreter.
     * 
     */
    @Import(name="codeInterpreterId")
    private @Nullable Output<String> codeInterpreterId;

    /**
     * @return Unique identifier of the Code Interpreter.
     * 
     */
    public Optional<Output<String>> codeInterpreterId() {
        return Optional.ofNullable(this.codeInterpreterId);
    }

    /**
     * Description of the code interpreter.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the code interpreter.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * ARN of the IAM role that the code interpreter assumes for execution. Required when using `SANDBOX` network mode.
     * 
     */
    @Import(name="executionRoleArn")
    private @Nullable Output<String> executionRoleArn;

    /**
     * @return ARN of the IAM role that the code interpreter assumes for execution. Required when using `SANDBOX` network mode.
     * 
     */
    public Optional<Output<String>> executionRoleArn() {
        return Optional.ofNullable(this.executionRoleArn);
    }

    /**
     * Name of the code interpreter.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the code interpreter.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Network configuration for the code interpreter. See `networkConfiguration` below.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="networkConfiguration")
    private @Nullable Output<AgentcoreCodeInterpreterNetworkConfigurationArgs> networkConfiguration;

    /**
     * @return Network configuration for the code interpreter. See `networkConfiguration` below.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<AgentcoreCodeInterpreterNetworkConfigurationArgs>> networkConfiguration() {
        return Optional.ofNullable(this.networkConfiguration);
    }

    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     * 
     */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     * 
     */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="timeouts")
    private @Nullable Output<AgentcoreCodeInterpreterTimeoutsArgs> timeouts;

    public Optional<Output<AgentcoreCodeInterpreterTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private AgentcoreCodeInterpreterState() {}

    private AgentcoreCodeInterpreterState(AgentcoreCodeInterpreterState $) {
        this.codeInterpreterArn = $.codeInterpreterArn;
        this.codeInterpreterId = $.codeInterpreterId;
        this.description = $.description;
        this.executionRoleArn = $.executionRoleArn;
        this.name = $.name;
        this.networkConfiguration = $.networkConfiguration;
        this.region = $.region;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentcoreCodeInterpreterState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentcoreCodeInterpreterState $;

        public Builder() {
            $ = new AgentcoreCodeInterpreterState();
        }

        public Builder(AgentcoreCodeInterpreterState defaults) {
            $ = new AgentcoreCodeInterpreterState(Objects.requireNonNull(defaults));
        }

        /**
         * @param codeInterpreterArn ARN of the Code Interpreter.
         * 
         * @return builder
         * 
         */
        public Builder codeInterpreterArn(@Nullable Output<String> codeInterpreterArn) {
            $.codeInterpreterArn = codeInterpreterArn;
            return this;
        }

        /**
         * @param codeInterpreterArn ARN of the Code Interpreter.
         * 
         * @return builder
         * 
         */
        public Builder codeInterpreterArn(String codeInterpreterArn) {
            return codeInterpreterArn(Output.of(codeInterpreterArn));
        }

        /**
         * @param codeInterpreterId Unique identifier of the Code Interpreter.
         * 
         * @return builder
         * 
         */
        public Builder codeInterpreterId(@Nullable Output<String> codeInterpreterId) {
            $.codeInterpreterId = codeInterpreterId;
            return this;
        }

        /**
         * @param codeInterpreterId Unique identifier of the Code Interpreter.
         * 
         * @return builder
         * 
         */
        public Builder codeInterpreterId(String codeInterpreterId) {
            return codeInterpreterId(Output.of(codeInterpreterId));
        }

        /**
         * @param description Description of the code interpreter.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the code interpreter.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param executionRoleArn ARN of the IAM role that the code interpreter assumes for execution. Required when using `SANDBOX` network mode.
         * 
         * @return builder
         * 
         */
        public Builder executionRoleArn(@Nullable Output<String> executionRoleArn) {
            $.executionRoleArn = executionRoleArn;
            return this;
        }

        /**
         * @param executionRoleArn ARN of the IAM role that the code interpreter assumes for execution. Required when using `SANDBOX` network mode.
         * 
         * @return builder
         * 
         */
        public Builder executionRoleArn(String executionRoleArn) {
            return executionRoleArn(Output.of(executionRoleArn));
        }

        /**
         * @param name Name of the code interpreter.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the code interpreter.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkConfiguration Network configuration for the code interpreter. See `networkConfiguration` below.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder networkConfiguration(@Nullable Output<AgentcoreCodeInterpreterNetworkConfigurationArgs> networkConfiguration) {
            $.networkConfiguration = networkConfiguration;
            return this;
        }

        /**
         * @param networkConfiguration Network configuration for the code interpreter. See `networkConfiguration` below.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder networkConfiguration(AgentcoreCodeInterpreterNetworkConfigurationArgs networkConfiguration) {
            return networkConfiguration(Output.of(networkConfiguration));
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param tags Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
         * 
         * @return builder
         * 
         */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
         * 
         * @return builder
         * 
         */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder timeouts(@Nullable Output<AgentcoreCodeInterpreterTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(AgentcoreCodeInterpreterTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public AgentcoreCodeInterpreterState build() {
            return $;
        }
    }

}
