// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.workspaces.outputs;

import com.pulumi.aws.workspaces.outputs.GetDirectorySelfServicePermission;
import com.pulumi.aws.workspaces.outputs.GetDirectoryWorkspaceAccessProperty;
import com.pulumi.aws.workspaces.outputs.GetDirectoryWorkspaceCreationProperty;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDirectoryResult {
    /**
     * @return Directory alias.
     * 
     */
    private @Nullable String alias;
    /**
     * @return User name for the service account.
     * 
     */
    private @Nullable String customerUserName;
    private String directoryId;
    /**
     * @return Name of the directory.
     * 
     */
    private @Nullable String directoryName;
    /**
     * @return Directory type.
     * 
     */
    private @Nullable String directoryType;
    /**
     * @return IP addresses of the DNS servers for the directory.
     * 
     */
    private @Nullable List<String> dnsIpAddresses;
    /**
     * @return Identifier of the IAM role. This is the role that allows Amazon WorkSpaces to make calls to other services, such as Amazon EC2, on your behalf.
     * 
     */
    private @Nullable String iamRoleId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return Identifiers of the IP access control groups associated with the directory.
     * 
     */
    private @Nullable List<String> ipGroupIds;
    /**
     * @return Registration code for the directory. This is the code that users enter in their Amazon WorkSpaces client application to connect to the directory.
     * 
     */
    private @Nullable String registrationCode;
    /**
     * @return The permissions to enable or disable self-service capabilities.
     * 
     */
    private @Nullable List<GetDirectorySelfServicePermission> selfServicePermissions;
    /**
     * @return Identifiers of the subnets where the directory resides.
     * 
     */
    private @Nullable List<String> subnetIds;
    /**
     * @return A map of tags assigned to the WorkSpaces directory.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return (Optional) Specifies which devices and operating systems users can use to access their WorkSpaces. Defined below.
     * 
     */
    private @Nullable List<GetDirectoryWorkspaceAccessProperty> workspaceAccessProperties;
    /**
     * @return The default properties that are used for creating WorkSpaces. Defined below.
     * 
     */
    private @Nullable List<GetDirectoryWorkspaceCreationProperty> workspaceCreationProperties;
    /**
     * @return The identifier of the security group that is assigned to new WorkSpaces. Defined below.
     * 
     */
    private @Nullable String workspaceSecurityGroupId;

    private GetDirectoryResult() {}
    /**
     * @return Directory alias.
     * 
     */
    public Optional<String> alias() {
        return Optional.ofNullable(this.alias);
    }
    /**
     * @return User name for the service account.
     * 
     */
    public Optional<String> customerUserName() {
        return Optional.ofNullable(this.customerUserName);
    }
    public String directoryId() {
        return this.directoryId;
    }
    /**
     * @return Name of the directory.
     * 
     */
    public Optional<String> directoryName() {
        return Optional.ofNullable(this.directoryName);
    }
    /**
     * @return Directory type.
     * 
     */
    public Optional<String> directoryType() {
        return Optional.ofNullable(this.directoryType);
    }
    /**
     * @return IP addresses of the DNS servers for the directory.
     * 
     */
    public List<String> dnsIpAddresses() {
        return this.dnsIpAddresses == null ? List.of() : this.dnsIpAddresses;
    }
    /**
     * @return Identifier of the IAM role. This is the role that allows Amazon WorkSpaces to make calls to other services, such as Amazon EC2, on your behalf.
     * 
     */
    public Optional<String> iamRoleId() {
        return Optional.ofNullable(this.iamRoleId);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Identifiers of the IP access control groups associated with the directory.
     * 
     */
    public List<String> ipGroupIds() {
        return this.ipGroupIds == null ? List.of() : this.ipGroupIds;
    }
    /**
     * @return Registration code for the directory. This is the code that users enter in their Amazon WorkSpaces client application to connect to the directory.
     * 
     */
    public Optional<String> registrationCode() {
        return Optional.ofNullable(this.registrationCode);
    }
    /**
     * @return The permissions to enable or disable self-service capabilities.
     * 
     */
    public List<GetDirectorySelfServicePermission> selfServicePermissions() {
        return this.selfServicePermissions == null ? List.of() : this.selfServicePermissions;
    }
    /**
     * @return Identifiers of the subnets where the directory resides.
     * 
     */
    public List<String> subnetIds() {
        return this.subnetIds == null ? List.of() : this.subnetIds;
    }
    /**
     * @return A map of tags assigned to the WorkSpaces directory.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return (Optional) Specifies which devices and operating systems users can use to access their WorkSpaces. Defined below.
     * 
     */
    public List<GetDirectoryWorkspaceAccessProperty> workspaceAccessProperties() {
        return this.workspaceAccessProperties == null ? List.of() : this.workspaceAccessProperties;
    }
    /**
     * @return The default properties that are used for creating WorkSpaces. Defined below.
     * 
     */
    public List<GetDirectoryWorkspaceCreationProperty> workspaceCreationProperties() {
        return this.workspaceCreationProperties == null ? List.of() : this.workspaceCreationProperties;
    }
    /**
     * @return The identifier of the security group that is assigned to new WorkSpaces. Defined below.
     * 
     */
    public Optional<String> workspaceSecurityGroupId() {
        return Optional.ofNullable(this.workspaceSecurityGroupId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDirectoryResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String alias;
        private @Nullable String customerUserName;
        private String directoryId;
        private @Nullable String directoryName;
        private @Nullable String directoryType;
        private @Nullable List<String> dnsIpAddresses;
        private @Nullable String iamRoleId;
        private @Nullable String id;
        private @Nullable List<String> ipGroupIds;
        private @Nullable String registrationCode;
        private @Nullable List<GetDirectorySelfServicePermission> selfServicePermissions;
        private @Nullable List<String> subnetIds;
        private @Nullable Map<String,String> tags;
        private @Nullable List<GetDirectoryWorkspaceAccessProperty> workspaceAccessProperties;
        private @Nullable List<GetDirectoryWorkspaceCreationProperty> workspaceCreationProperties;
        private @Nullable String workspaceSecurityGroupId;
        public Builder() {}
        public Builder(GetDirectoryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alias = defaults.alias;
    	      this.customerUserName = defaults.customerUserName;
    	      this.directoryId = defaults.directoryId;
    	      this.directoryName = defaults.directoryName;
    	      this.directoryType = defaults.directoryType;
    	      this.dnsIpAddresses = defaults.dnsIpAddresses;
    	      this.iamRoleId = defaults.iamRoleId;
    	      this.id = defaults.id;
    	      this.ipGroupIds = defaults.ipGroupIds;
    	      this.registrationCode = defaults.registrationCode;
    	      this.selfServicePermissions = defaults.selfServicePermissions;
    	      this.subnetIds = defaults.subnetIds;
    	      this.tags = defaults.tags;
    	      this.workspaceAccessProperties = defaults.workspaceAccessProperties;
    	      this.workspaceCreationProperties = defaults.workspaceCreationProperties;
    	      this.workspaceSecurityGroupId = defaults.workspaceSecurityGroupId;
        }

        @CustomType.Setter
        public Builder alias(@Nullable String alias) {
            this.alias = alias;
            return this;
        }
        @CustomType.Setter
        public Builder customerUserName(@Nullable String customerUserName) {
            this.customerUserName = customerUserName;
            return this;
        }
        @CustomType.Setter
        public Builder directoryId(String directoryId) {
            this.directoryId = Objects.requireNonNull(directoryId);
            return this;
        }
        @CustomType.Setter
        public Builder directoryName(@Nullable String directoryName) {
            this.directoryName = directoryName;
            return this;
        }
        @CustomType.Setter
        public Builder directoryType(@Nullable String directoryType) {
            this.directoryType = directoryType;
            return this;
        }
        @CustomType.Setter
        public Builder dnsIpAddresses(@Nullable List<String> dnsIpAddresses) {
            this.dnsIpAddresses = dnsIpAddresses;
            return this;
        }
        public Builder dnsIpAddresses(String... dnsIpAddresses) {
            return dnsIpAddresses(List.of(dnsIpAddresses));
        }
        @CustomType.Setter
        public Builder iamRoleId(@Nullable String iamRoleId) {
            this.iamRoleId = iamRoleId;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipGroupIds(@Nullable List<String> ipGroupIds) {
            this.ipGroupIds = ipGroupIds;
            return this;
        }
        public Builder ipGroupIds(String... ipGroupIds) {
            return ipGroupIds(List.of(ipGroupIds));
        }
        @CustomType.Setter
        public Builder registrationCode(@Nullable String registrationCode) {
            this.registrationCode = registrationCode;
            return this;
        }
        @CustomType.Setter
        public Builder selfServicePermissions(@Nullable List<GetDirectorySelfServicePermission> selfServicePermissions) {
            this.selfServicePermissions = selfServicePermissions;
            return this;
        }
        public Builder selfServicePermissions(GetDirectorySelfServicePermission... selfServicePermissions) {
            return selfServicePermissions(List.of(selfServicePermissions));
        }
        @CustomType.Setter
        public Builder subnetIds(@Nullable List<String> subnetIds) {
            this.subnetIds = subnetIds;
            return this;
        }
        public Builder subnetIds(String... subnetIds) {
            return subnetIds(List.of(subnetIds));
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder workspaceAccessProperties(@Nullable List<GetDirectoryWorkspaceAccessProperty> workspaceAccessProperties) {
            this.workspaceAccessProperties = workspaceAccessProperties;
            return this;
        }
        public Builder workspaceAccessProperties(GetDirectoryWorkspaceAccessProperty... workspaceAccessProperties) {
            return workspaceAccessProperties(List.of(workspaceAccessProperties));
        }
        @CustomType.Setter
        public Builder workspaceCreationProperties(@Nullable List<GetDirectoryWorkspaceCreationProperty> workspaceCreationProperties) {
            this.workspaceCreationProperties = workspaceCreationProperties;
            return this;
        }
        public Builder workspaceCreationProperties(GetDirectoryWorkspaceCreationProperty... workspaceCreationProperties) {
            return workspaceCreationProperties(List.of(workspaceCreationProperties));
        }
        @CustomType.Setter
        public Builder workspaceSecurityGroupId(@Nullable String workspaceSecurityGroupId) {
            this.workspaceSecurityGroupId = workspaceSecurityGroupId;
            return this;
        }
        public GetDirectoryResult build() {
            final var o = new GetDirectoryResult();
            o.alias = alias;
            o.customerUserName = customerUserName;
            o.directoryId = directoryId;
            o.directoryName = directoryName;
            o.directoryType = directoryType;
            o.dnsIpAddresses = dnsIpAddresses;
            o.iamRoleId = iamRoleId;
            o.id = id;
            o.ipGroupIds = ipGroupIds;
            o.registrationCode = registrationCode;
            o.selfServicePermissions = selfServicePermissions;
            o.subnetIds = subnetIds;
            o.tags = tags;
            o.workspaceAccessProperties = workspaceAccessProperties;
            o.workspaceCreationProperties = workspaceCreationProperties;
            o.workspaceSecurityGroupId = workspaceSecurityGroupId;
            return o;
        }
    }
}
