// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.amplify.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainAssociationCertificateSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainAssociationCertificateSettingsArgs Empty = new DomainAssociationCertificateSettingsArgs();

    /**
     * DNS records for certificate verification in a space-delimited format (`&lt;record&gt; CNAME &lt;target&gt;`).
     * 
     */
    @Import(name="certificateVerificationDnsRecord")
    private @Nullable Output<String> certificateVerificationDnsRecord;

    /**
     * @return DNS records for certificate verification in a space-delimited format (`&lt;record&gt; CNAME &lt;target&gt;`).
     * 
     */
    public Optional<Output<String>> certificateVerificationDnsRecord() {
        return Optional.ofNullable(this.certificateVerificationDnsRecord);
    }

    /**
     * The Amazon resource name (ARN) for the custom certificate.
     * 
     */
    @Import(name="customCertificateArn")
    private @Nullable Output<String> customCertificateArn;

    /**
     * @return The Amazon resource name (ARN) for the custom certificate.
     * 
     */
    public Optional<Output<String>> customCertificateArn() {
        return Optional.ofNullable(this.customCertificateArn);
    }

    /**
     * The certificate type. Valid values are `AMPLIFY_MANAGED` and `CUSTOM`.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The certificate type. Valid values are `AMPLIFY_MANAGED` and `CUSTOM`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private DomainAssociationCertificateSettingsArgs() {}

    private DomainAssociationCertificateSettingsArgs(DomainAssociationCertificateSettingsArgs $) {
        this.certificateVerificationDnsRecord = $.certificateVerificationDnsRecord;
        this.customCertificateArn = $.customCertificateArn;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainAssociationCertificateSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainAssociationCertificateSettingsArgs $;

        public Builder() {
            $ = new DomainAssociationCertificateSettingsArgs();
        }

        public Builder(DomainAssociationCertificateSettingsArgs defaults) {
            $ = new DomainAssociationCertificateSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificateVerificationDnsRecord DNS records for certificate verification in a space-delimited format (`&lt;record&gt; CNAME &lt;target&gt;`).
         * 
         * @return builder
         * 
         */
        public Builder certificateVerificationDnsRecord(@Nullable Output<String> certificateVerificationDnsRecord) {
            $.certificateVerificationDnsRecord = certificateVerificationDnsRecord;
            return this;
        }

        /**
         * @param certificateVerificationDnsRecord DNS records for certificate verification in a space-delimited format (`&lt;record&gt; CNAME &lt;target&gt;`).
         * 
         * @return builder
         * 
         */
        public Builder certificateVerificationDnsRecord(String certificateVerificationDnsRecord) {
            return certificateVerificationDnsRecord(Output.of(certificateVerificationDnsRecord));
        }

        /**
         * @param customCertificateArn The Amazon resource name (ARN) for the custom certificate.
         * 
         * @return builder
         * 
         */
        public Builder customCertificateArn(@Nullable Output<String> customCertificateArn) {
            $.customCertificateArn = customCertificateArn;
            return this;
        }

        /**
         * @param customCertificateArn The Amazon resource name (ARN) for the custom certificate.
         * 
         * @return builder
         * 
         */
        public Builder customCertificateArn(String customCertificateArn) {
            return customCertificateArn(Output.of(customCertificateArn));
        }

        /**
         * @param type The certificate type. Valid values are `AMPLIFY_MANAGED` and `CUSTOM`.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The certificate type. Valid values are `AMPLIFY_MANAGED` and `CUSTOM`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public DomainAssociationCertificateSettingsArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("DomainAssociationCertificateSettingsArgs", "type");
            }
            return $;
        }
    }

}
