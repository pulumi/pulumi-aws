// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.licensemanager.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetReceivedLicenseIssuer {
    /**
     * @return Issuer key fingerprint.
     * 
     */
    private @Nullable String keyFingerprint;
    /**
     * @return The key name.
     * 
     */
    private @Nullable String name;
    /**
     * @return Asymmetric KMS key from AWS Key Management Service. The KMS key must have a key usage of sign and verify, and support the RSASSA-PSS SHA-256 signing algorithm.
     * 
     */
    private @Nullable String signKey;

    private GetReceivedLicenseIssuer() {}
    /**
     * @return Issuer key fingerprint.
     * 
     */
    public Optional<String> keyFingerprint() {
        return Optional.ofNullable(this.keyFingerprint);
    }
    /**
     * @return The key name.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Asymmetric KMS key from AWS Key Management Service. The KMS key must have a key usage of sign and verify, and support the RSASSA-PSS SHA-256 signing algorithm.
     * 
     */
    public Optional<String> signKey() {
        return Optional.ofNullable(this.signKey);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetReceivedLicenseIssuer defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String keyFingerprint;
        private @Nullable String name;
        private @Nullable String signKey;
        public Builder() {}
        public Builder(GetReceivedLicenseIssuer defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.keyFingerprint = defaults.keyFingerprint;
    	      this.name = defaults.name;
    	      this.signKey = defaults.signKey;
        }

        @CustomType.Setter
        public Builder keyFingerprint(@Nullable String keyFingerprint) {
            this.keyFingerprint = keyFingerprint;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder signKey(@Nullable String signKey) {
            this.signKey = signKey;
            return this;
        }
        public GetReceivedLicenseIssuer build() {
            final var o = new GetReceivedLicenseIssuer();
            o.keyFingerprint = keyFingerprint;
            o.name = name;
            o.signKey = signKey;
            return o;
        }
    }
}
