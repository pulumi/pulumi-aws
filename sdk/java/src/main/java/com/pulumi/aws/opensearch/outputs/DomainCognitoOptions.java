// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.opensearch.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DomainCognitoOptions {
    /**
     * @return Whether Amazon Cognito authentication with Dashboard is enabled or not. Default is `false`.
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return ID of the Cognito Identity Pool to use.
     * 
     */
    private String identityPoolId;
    /**
     * @return ARN of the IAM role that has the AmazonOpenSearchServiceCognitoAccess policy attached.
     * 
     */
    private String roleArn;
    /**
     * @return ID of the Cognito User Pool to use.
     * 
     */
    private String userPoolId;

    private DomainCognitoOptions() {}
    /**
     * @return Whether Amazon Cognito authentication with Dashboard is enabled or not. Default is `false`.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return ID of the Cognito Identity Pool to use.
     * 
     */
    public String identityPoolId() {
        return this.identityPoolId;
    }
    /**
     * @return ARN of the IAM role that has the AmazonOpenSearchServiceCognitoAccess policy attached.
     * 
     */
    public String roleArn() {
        return this.roleArn;
    }
    /**
     * @return ID of the Cognito User Pool to use.
     * 
     */
    public String userPoolId() {
        return this.userPoolId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainCognitoOptions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean enabled;
        private String identityPoolId;
        private String roleArn;
        private String userPoolId;
        public Builder() {}
        public Builder(DomainCognitoOptions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.identityPoolId = defaults.identityPoolId;
    	      this.roleArn = defaults.roleArn;
    	      this.userPoolId = defaults.userPoolId;
        }

        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {

            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder identityPoolId(String identityPoolId) {
            if (identityPoolId == null) {
              throw new MissingRequiredPropertyException("DomainCognitoOptions", "identityPoolId");
            }
            this.identityPoolId = identityPoolId;
            return this;
        }
        @CustomType.Setter
        public Builder roleArn(String roleArn) {
            if (roleArn == null) {
              throw new MissingRequiredPropertyException("DomainCognitoOptions", "roleArn");
            }
            this.roleArn = roleArn;
            return this;
        }
        @CustomType.Setter
        public Builder userPoolId(String userPoolId) {
            if (userPoolId == null) {
              throw new MissingRequiredPropertyException("DomainCognitoOptions", "userPoolId");
            }
            this.userPoolId = userPoolId;
            return this;
        }
        public DomainCognitoOptions build() {
            final var _resultValue = new DomainCognitoOptions();
            _resultValue.enabled = enabled;
            _resultValue.identityPoolId = identityPoolId;
            _resultValue.roleArn = roleArn;
            _resultValue.userPoolId = userPoolId;
            return _resultValue;
        }
    }
}
