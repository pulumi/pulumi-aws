// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codebuild.inputs;

import com.pulumi.aws.codebuild.inputs.FleetScalingConfigurationTargetTrackingScalingConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FleetScalingConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final FleetScalingConfigurationArgs Empty = new FleetScalingConfigurationArgs();

    @Import(name="desiredCapacity")
    private @Nullable Output<Integer> desiredCapacity;

    public Optional<Output<Integer>> desiredCapacity() {
        return Optional.ofNullable(this.desiredCapacity);
    }

    /**
     * Maximum number of instances in the ﬂeet when auto-scaling.
     * 
     */
    @Import(name="maxCapacity")
    private @Nullable Output<Integer> maxCapacity;

    /**
     * @return Maximum number of instances in the ﬂeet when auto-scaling.
     * 
     */
    public Optional<Output<Integer>> maxCapacity() {
        return Optional.ofNullable(this.maxCapacity);
    }

    /**
     * Scaling type for a compute fleet. Valid value: `TARGET_TRACKING_SCALING`.
     * 
     */
    @Import(name="scalingType")
    private @Nullable Output<String> scalingType;

    /**
     * @return Scaling type for a compute fleet. Valid value: `TARGET_TRACKING_SCALING`.
     * 
     */
    public Optional<Output<String>> scalingType() {
        return Optional.ofNullable(this.scalingType);
    }

    /**
     * Configuration block. Detailed below.
     * 
     */
    @Import(name="targetTrackingScalingConfigs")
    private @Nullable Output<List<FleetScalingConfigurationTargetTrackingScalingConfigArgs>> targetTrackingScalingConfigs;

    /**
     * @return Configuration block. Detailed below.
     * 
     */
    public Optional<Output<List<FleetScalingConfigurationTargetTrackingScalingConfigArgs>>> targetTrackingScalingConfigs() {
        return Optional.ofNullable(this.targetTrackingScalingConfigs);
    }

    private FleetScalingConfigurationArgs() {}

    private FleetScalingConfigurationArgs(FleetScalingConfigurationArgs $) {
        this.desiredCapacity = $.desiredCapacity;
        this.maxCapacity = $.maxCapacity;
        this.scalingType = $.scalingType;
        this.targetTrackingScalingConfigs = $.targetTrackingScalingConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FleetScalingConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FleetScalingConfigurationArgs $;

        public Builder() {
            $ = new FleetScalingConfigurationArgs();
        }

        public Builder(FleetScalingConfigurationArgs defaults) {
            $ = new FleetScalingConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder desiredCapacity(@Nullable Output<Integer> desiredCapacity) {
            $.desiredCapacity = desiredCapacity;
            return this;
        }

        public Builder desiredCapacity(Integer desiredCapacity) {
            return desiredCapacity(Output.of(desiredCapacity));
        }

        /**
         * @param maxCapacity Maximum number of instances in the ﬂeet when auto-scaling.
         * 
         * @return builder
         * 
         */
        public Builder maxCapacity(@Nullable Output<Integer> maxCapacity) {
            $.maxCapacity = maxCapacity;
            return this;
        }

        /**
         * @param maxCapacity Maximum number of instances in the ﬂeet when auto-scaling.
         * 
         * @return builder
         * 
         */
        public Builder maxCapacity(Integer maxCapacity) {
            return maxCapacity(Output.of(maxCapacity));
        }

        /**
         * @param scalingType Scaling type for a compute fleet. Valid value: `TARGET_TRACKING_SCALING`.
         * 
         * @return builder
         * 
         */
        public Builder scalingType(@Nullable Output<String> scalingType) {
            $.scalingType = scalingType;
            return this;
        }

        /**
         * @param scalingType Scaling type for a compute fleet. Valid value: `TARGET_TRACKING_SCALING`.
         * 
         * @return builder
         * 
         */
        public Builder scalingType(String scalingType) {
            return scalingType(Output.of(scalingType));
        }

        /**
         * @param targetTrackingScalingConfigs Configuration block. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder targetTrackingScalingConfigs(@Nullable Output<List<FleetScalingConfigurationTargetTrackingScalingConfigArgs>> targetTrackingScalingConfigs) {
            $.targetTrackingScalingConfigs = targetTrackingScalingConfigs;
            return this;
        }

        /**
         * @param targetTrackingScalingConfigs Configuration block. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder targetTrackingScalingConfigs(List<FleetScalingConfigurationTargetTrackingScalingConfigArgs> targetTrackingScalingConfigs) {
            return targetTrackingScalingConfigs(Output.of(targetTrackingScalingConfigs));
        }

        /**
         * @param targetTrackingScalingConfigs Configuration block. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder targetTrackingScalingConfigs(FleetScalingConfigurationTargetTrackingScalingConfigArgs... targetTrackingScalingConfigs) {
            return targetTrackingScalingConfigs(List.of(targetTrackingScalingConfigs));
        }

        public FleetScalingConfigurationArgs build() {
            return $;
        }
    }

}
