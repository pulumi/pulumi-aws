// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2transitgateway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MulticastDomainAssociationState extends com.pulumi.resources.ResourceArgs {

    public static final MulticastDomainAssociationState Empty = new MulticastDomainAssociationState();

    /**
     * The ID of the subnet to associate with the transit gateway multicast domain.
     * 
     */
    @Import(name="subnetId")
    private @Nullable Output<String> subnetId;

    /**
     * @return The ID of the subnet to associate with the transit gateway multicast domain.
     * 
     */
    public Optional<Output<String>> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }

    /**
     * The ID of the transit gateway attachment.
     * 
     */
    @Import(name="transitGatewayAttachmentId")
    private @Nullable Output<String> transitGatewayAttachmentId;

    /**
     * @return The ID of the transit gateway attachment.
     * 
     */
    public Optional<Output<String>> transitGatewayAttachmentId() {
        return Optional.ofNullable(this.transitGatewayAttachmentId);
    }

    /**
     * The ID of the transit gateway multicast domain.
     * 
     */
    @Import(name="transitGatewayMulticastDomainId")
    private @Nullable Output<String> transitGatewayMulticastDomainId;

    /**
     * @return The ID of the transit gateway multicast domain.
     * 
     */
    public Optional<Output<String>> transitGatewayMulticastDomainId() {
        return Optional.ofNullable(this.transitGatewayMulticastDomainId);
    }

    private MulticastDomainAssociationState() {}

    private MulticastDomainAssociationState(MulticastDomainAssociationState $) {
        this.subnetId = $.subnetId;
        this.transitGatewayAttachmentId = $.transitGatewayAttachmentId;
        this.transitGatewayMulticastDomainId = $.transitGatewayMulticastDomainId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MulticastDomainAssociationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MulticastDomainAssociationState $;

        public Builder() {
            $ = new MulticastDomainAssociationState();
        }

        public Builder(MulticastDomainAssociationState defaults) {
            $ = new MulticastDomainAssociationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param subnetId The ID of the subnet to associate with the transit gateway multicast domain.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(@Nullable Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId The ID of the subnet to associate with the transit gateway multicast domain.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        /**
         * @param transitGatewayAttachmentId The ID of the transit gateway attachment.
         * 
         * @return builder
         * 
         */
        public Builder transitGatewayAttachmentId(@Nullable Output<String> transitGatewayAttachmentId) {
            $.transitGatewayAttachmentId = transitGatewayAttachmentId;
            return this;
        }

        /**
         * @param transitGatewayAttachmentId The ID of the transit gateway attachment.
         * 
         * @return builder
         * 
         */
        public Builder transitGatewayAttachmentId(String transitGatewayAttachmentId) {
            return transitGatewayAttachmentId(Output.of(transitGatewayAttachmentId));
        }

        /**
         * @param transitGatewayMulticastDomainId The ID of the transit gateway multicast domain.
         * 
         * @return builder
         * 
         */
        public Builder transitGatewayMulticastDomainId(@Nullable Output<String> transitGatewayMulticastDomainId) {
            $.transitGatewayMulticastDomainId = transitGatewayMulticastDomainId;
            return this;
        }

        /**
         * @param transitGatewayMulticastDomainId The ID of the transit gateway multicast domain.
         * 
         * @return builder
         * 
         */
        public Builder transitGatewayMulticastDomainId(String transitGatewayMulticastDomainId) {
            return transitGatewayMulticastDomainId(Output.of(transitGatewayMulticastDomainId));
        }

        public MulticastDomainAssociationState build() {
            return $;
        }
    }

}
