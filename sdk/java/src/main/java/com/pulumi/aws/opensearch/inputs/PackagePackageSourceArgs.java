// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.opensearch.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class PackagePackageSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final PackagePackageSourceArgs Empty = new PackagePackageSourceArgs();

    /**
     * The name of the Amazon S3 bucket containing the package.
     * 
     */
    @Import(name="s3BucketName", required=true)
    private Output<String> s3BucketName;

    /**
     * @return The name of the Amazon S3 bucket containing the package.
     * 
     */
    public Output<String> s3BucketName() {
        return this.s3BucketName;
    }

    /**
     * Key (file name) of the package.
     * 
     */
    @Import(name="s3Key", required=true)
    private Output<String> s3Key;

    /**
     * @return Key (file name) of the package.
     * 
     */
    public Output<String> s3Key() {
        return this.s3Key;
    }

    private PackagePackageSourceArgs() {}

    private PackagePackageSourceArgs(PackagePackageSourceArgs $) {
        this.s3BucketName = $.s3BucketName;
        this.s3Key = $.s3Key;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PackagePackageSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PackagePackageSourceArgs $;

        public Builder() {
            $ = new PackagePackageSourceArgs();
        }

        public Builder(PackagePackageSourceArgs defaults) {
            $ = new PackagePackageSourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param s3BucketName The name of the Amazon S3 bucket containing the package.
         * 
         * @return builder
         * 
         */
        public Builder s3BucketName(Output<String> s3BucketName) {
            $.s3BucketName = s3BucketName;
            return this;
        }

        /**
         * @param s3BucketName The name of the Amazon S3 bucket containing the package.
         * 
         * @return builder
         * 
         */
        public Builder s3BucketName(String s3BucketName) {
            return s3BucketName(Output.of(s3BucketName));
        }

        /**
         * @param s3Key Key (file name) of the package.
         * 
         * @return builder
         * 
         */
        public Builder s3Key(Output<String> s3Key) {
            $.s3Key = s3Key;
            return this;
        }

        /**
         * @param s3Key Key (file name) of the package.
         * 
         * @return builder
         * 
         */
        public Builder s3Key(String s3Key) {
            return s3Key(Output.of(s3Key));
        }

        public PackagePackageSourceArgs build() {
            if ($.s3BucketName == null) {
                throw new MissingRequiredPropertyException("PackagePackageSourceArgs", "s3BucketName");
            }
            if ($.s3Key == null) {
                throw new MissingRequiredPropertyException("PackagePackageSourceArgs", "s3Key");
            }
            return $;
        }
    }

}
