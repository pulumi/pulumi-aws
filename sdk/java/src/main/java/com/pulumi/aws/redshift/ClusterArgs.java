// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.redshift;

import com.pulumi.aws.redshift.inputs.ClusterLoggingArgs;
import com.pulumi.aws.redshift.inputs.ClusterSnapshotCopyArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterArgs Empty = new ClusterArgs();

    @Import(name="allowVersionUpgrade")
    private @Nullable Output<Boolean> allowVersionUpgrade;

    public Optional<Output<Boolean>> allowVersionUpgrade() {
        return Optional.ofNullable(this.allowVersionUpgrade);
    }

    @Import(name="applyImmediately")
    private @Nullable Output<Boolean> applyImmediately;

    public Optional<Output<Boolean>> applyImmediately() {
        return Optional.ofNullable(this.applyImmediately);
    }

    @Import(name="aquaConfigurationStatus")
    private @Nullable Output<String> aquaConfigurationStatus;

    public Optional<Output<String>> aquaConfigurationStatus() {
        return Optional.ofNullable(this.aquaConfigurationStatus);
    }

    @Import(name="automatedSnapshotRetentionPeriod")
    private @Nullable Output<Integer> automatedSnapshotRetentionPeriod;

    public Optional<Output<Integer>> automatedSnapshotRetentionPeriod() {
        return Optional.ofNullable(this.automatedSnapshotRetentionPeriod);
    }

    @Import(name="availabilityZone")
    private @Nullable Output<String> availabilityZone;

    public Optional<Output<String>> availabilityZone() {
        return Optional.ofNullable(this.availabilityZone);
    }

    @Import(name="availabilityZoneRelocationEnabled")
    private @Nullable Output<Boolean> availabilityZoneRelocationEnabled;

    public Optional<Output<Boolean>> availabilityZoneRelocationEnabled() {
        return Optional.ofNullable(this.availabilityZoneRelocationEnabled);
    }

    @Import(name="clusterIdentifier", required=true)
    private Output<String> clusterIdentifier;

    public Output<String> clusterIdentifier() {
        return this.clusterIdentifier;
    }

    @Import(name="clusterParameterGroupName")
    private @Nullable Output<String> clusterParameterGroupName;

    public Optional<Output<String>> clusterParameterGroupName() {
        return Optional.ofNullable(this.clusterParameterGroupName);
    }

    @Import(name="clusterPublicKey")
    private @Nullable Output<String> clusterPublicKey;

    public Optional<Output<String>> clusterPublicKey() {
        return Optional.ofNullable(this.clusterPublicKey);
    }

    @Import(name="clusterRevisionNumber")
    private @Nullable Output<String> clusterRevisionNumber;

    public Optional<Output<String>> clusterRevisionNumber() {
        return Optional.ofNullable(this.clusterRevisionNumber);
    }

    /**
     * @deprecated
     * With the retirement of EC2-Classic the cluster_security_groups attribute has been deprecated and will be removed in a future version.
     * 
     */
    @Deprecated /* With the retirement of EC2-Classic the cluster_security_groups attribute has been deprecated and will be removed in a future version. */
    @Import(name="clusterSecurityGroups")
    private @Nullable Output<List<String>> clusterSecurityGroups;

    /**
     * @deprecated
     * With the retirement of EC2-Classic the cluster_security_groups attribute has been deprecated and will be removed in a future version.
     * 
     */
    @Deprecated /* With the retirement of EC2-Classic the cluster_security_groups attribute has been deprecated and will be removed in a future version. */
    public Optional<Output<List<String>>> clusterSecurityGroups() {
        return Optional.ofNullable(this.clusterSecurityGroups);
    }

    @Import(name="clusterSubnetGroupName")
    private @Nullable Output<String> clusterSubnetGroupName;

    public Optional<Output<String>> clusterSubnetGroupName() {
        return Optional.ofNullable(this.clusterSubnetGroupName);
    }

    @Import(name="clusterType")
    private @Nullable Output<String> clusterType;

    public Optional<Output<String>> clusterType() {
        return Optional.ofNullable(this.clusterType);
    }

    @Import(name="clusterVersion")
    private @Nullable Output<String> clusterVersion;

    public Optional<Output<String>> clusterVersion() {
        return Optional.ofNullable(this.clusterVersion);
    }

    @Import(name="databaseName")
    private @Nullable Output<String> databaseName;

    public Optional<Output<String>> databaseName() {
        return Optional.ofNullable(this.databaseName);
    }

    @Import(name="defaultIamRoleArn")
    private @Nullable Output<String> defaultIamRoleArn;

    public Optional<Output<String>> defaultIamRoleArn() {
        return Optional.ofNullable(this.defaultIamRoleArn);
    }

    @Import(name="elasticIp")
    private @Nullable Output<String> elasticIp;

    public Optional<Output<String>> elasticIp() {
        return Optional.ofNullable(this.elasticIp);
    }

    @Import(name="encrypted")
    private @Nullable Output<Boolean> encrypted;

    public Optional<Output<Boolean>> encrypted() {
        return Optional.ofNullable(this.encrypted);
    }

    @Import(name="endpoint")
    private @Nullable Output<String> endpoint;

    public Optional<Output<String>> endpoint() {
        return Optional.ofNullable(this.endpoint);
    }

    @Import(name="enhancedVpcRouting")
    private @Nullable Output<Boolean> enhancedVpcRouting;

    public Optional<Output<Boolean>> enhancedVpcRouting() {
        return Optional.ofNullable(this.enhancedVpcRouting);
    }

    @Import(name="finalSnapshotIdentifier")
    private @Nullable Output<String> finalSnapshotIdentifier;

    public Optional<Output<String>> finalSnapshotIdentifier() {
        return Optional.ofNullable(this.finalSnapshotIdentifier);
    }

    @Import(name="iamRoles")
    private @Nullable Output<List<String>> iamRoles;

    public Optional<Output<List<String>>> iamRoles() {
        return Optional.ofNullable(this.iamRoles);
    }

    @Import(name="kmsKeyId")
    private @Nullable Output<String> kmsKeyId;

    public Optional<Output<String>> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }

    @Import(name="logging")
    private @Nullable Output<ClusterLoggingArgs> logging;

    public Optional<Output<ClusterLoggingArgs>> logging() {
        return Optional.ofNullable(this.logging);
    }

    @Import(name="maintenanceTrackName")
    private @Nullable Output<String> maintenanceTrackName;

    public Optional<Output<String>> maintenanceTrackName() {
        return Optional.ofNullable(this.maintenanceTrackName);
    }

    @Import(name="manualSnapshotRetentionPeriod")
    private @Nullable Output<Integer> manualSnapshotRetentionPeriod;

    public Optional<Output<Integer>> manualSnapshotRetentionPeriod() {
        return Optional.ofNullable(this.manualSnapshotRetentionPeriod);
    }

    @Import(name="masterPassword")
    private @Nullable Output<String> masterPassword;

    public Optional<Output<String>> masterPassword() {
        return Optional.ofNullable(this.masterPassword);
    }

    @Import(name="masterUsername")
    private @Nullable Output<String> masterUsername;

    public Optional<Output<String>> masterUsername() {
        return Optional.ofNullable(this.masterUsername);
    }

    @Import(name="nodeType", required=true)
    private Output<String> nodeType;

    public Output<String> nodeType() {
        return this.nodeType;
    }

    @Import(name="numberOfNodes")
    private @Nullable Output<Integer> numberOfNodes;

    public Optional<Output<Integer>> numberOfNodes() {
        return Optional.ofNullable(this.numberOfNodes);
    }

    @Import(name="ownerAccount")
    private @Nullable Output<String> ownerAccount;

    public Optional<Output<String>> ownerAccount() {
        return Optional.ofNullable(this.ownerAccount);
    }

    @Import(name="port")
    private @Nullable Output<Integer> port;

    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    @Import(name="preferredMaintenanceWindow")
    private @Nullable Output<String> preferredMaintenanceWindow;

    public Optional<Output<String>> preferredMaintenanceWindow() {
        return Optional.ofNullable(this.preferredMaintenanceWindow);
    }

    @Import(name="publiclyAccessible")
    private @Nullable Output<Boolean> publiclyAccessible;

    public Optional<Output<Boolean>> publiclyAccessible() {
        return Optional.ofNullable(this.publiclyAccessible);
    }

    @Import(name="skipFinalSnapshot")
    private @Nullable Output<Boolean> skipFinalSnapshot;

    public Optional<Output<Boolean>> skipFinalSnapshot() {
        return Optional.ofNullable(this.skipFinalSnapshot);
    }

    @Import(name="snapshotClusterIdentifier")
    private @Nullable Output<String> snapshotClusterIdentifier;

    public Optional<Output<String>> snapshotClusterIdentifier() {
        return Optional.ofNullable(this.snapshotClusterIdentifier);
    }

    @Import(name="snapshotCopy")
    private @Nullable Output<ClusterSnapshotCopyArgs> snapshotCopy;

    public Optional<Output<ClusterSnapshotCopyArgs>> snapshotCopy() {
        return Optional.ofNullable(this.snapshotCopy);
    }

    @Import(name="snapshotIdentifier")
    private @Nullable Output<String> snapshotIdentifier;

    public Optional<Output<String>> snapshotIdentifier() {
        return Optional.ofNullable(this.snapshotIdentifier);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="vpcSecurityGroupIds")
    private @Nullable Output<List<String>> vpcSecurityGroupIds;

    public Optional<Output<List<String>>> vpcSecurityGroupIds() {
        return Optional.ofNullable(this.vpcSecurityGroupIds);
    }

    private ClusterArgs() {}

    private ClusterArgs(ClusterArgs $) {
        this.allowVersionUpgrade = $.allowVersionUpgrade;
        this.applyImmediately = $.applyImmediately;
        this.aquaConfigurationStatus = $.aquaConfigurationStatus;
        this.automatedSnapshotRetentionPeriod = $.automatedSnapshotRetentionPeriod;
        this.availabilityZone = $.availabilityZone;
        this.availabilityZoneRelocationEnabled = $.availabilityZoneRelocationEnabled;
        this.clusterIdentifier = $.clusterIdentifier;
        this.clusterParameterGroupName = $.clusterParameterGroupName;
        this.clusterPublicKey = $.clusterPublicKey;
        this.clusterRevisionNumber = $.clusterRevisionNumber;
        this.clusterSecurityGroups = $.clusterSecurityGroups;
        this.clusterSubnetGroupName = $.clusterSubnetGroupName;
        this.clusterType = $.clusterType;
        this.clusterVersion = $.clusterVersion;
        this.databaseName = $.databaseName;
        this.defaultIamRoleArn = $.defaultIamRoleArn;
        this.elasticIp = $.elasticIp;
        this.encrypted = $.encrypted;
        this.endpoint = $.endpoint;
        this.enhancedVpcRouting = $.enhancedVpcRouting;
        this.finalSnapshotIdentifier = $.finalSnapshotIdentifier;
        this.iamRoles = $.iamRoles;
        this.kmsKeyId = $.kmsKeyId;
        this.logging = $.logging;
        this.maintenanceTrackName = $.maintenanceTrackName;
        this.manualSnapshotRetentionPeriod = $.manualSnapshotRetentionPeriod;
        this.masterPassword = $.masterPassword;
        this.masterUsername = $.masterUsername;
        this.nodeType = $.nodeType;
        this.numberOfNodes = $.numberOfNodes;
        this.ownerAccount = $.ownerAccount;
        this.port = $.port;
        this.preferredMaintenanceWindow = $.preferredMaintenanceWindow;
        this.publiclyAccessible = $.publiclyAccessible;
        this.skipFinalSnapshot = $.skipFinalSnapshot;
        this.snapshotClusterIdentifier = $.snapshotClusterIdentifier;
        this.snapshotCopy = $.snapshotCopy;
        this.snapshotIdentifier = $.snapshotIdentifier;
        this.tags = $.tags;
        this.vpcSecurityGroupIds = $.vpcSecurityGroupIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterArgs $;

        public Builder() {
            $ = new ClusterArgs();
        }

        public Builder(ClusterArgs defaults) {
            $ = new ClusterArgs(Objects.requireNonNull(defaults));
        }

        public Builder allowVersionUpgrade(@Nullable Output<Boolean> allowVersionUpgrade) {
            $.allowVersionUpgrade = allowVersionUpgrade;
            return this;
        }

        public Builder allowVersionUpgrade(Boolean allowVersionUpgrade) {
            return allowVersionUpgrade(Output.of(allowVersionUpgrade));
        }

        public Builder applyImmediately(@Nullable Output<Boolean> applyImmediately) {
            $.applyImmediately = applyImmediately;
            return this;
        }

        public Builder applyImmediately(Boolean applyImmediately) {
            return applyImmediately(Output.of(applyImmediately));
        }

        public Builder aquaConfigurationStatus(@Nullable Output<String> aquaConfigurationStatus) {
            $.aquaConfigurationStatus = aquaConfigurationStatus;
            return this;
        }

        public Builder aquaConfigurationStatus(String aquaConfigurationStatus) {
            return aquaConfigurationStatus(Output.of(aquaConfigurationStatus));
        }

        public Builder automatedSnapshotRetentionPeriod(@Nullable Output<Integer> automatedSnapshotRetentionPeriod) {
            $.automatedSnapshotRetentionPeriod = automatedSnapshotRetentionPeriod;
            return this;
        }

        public Builder automatedSnapshotRetentionPeriod(Integer automatedSnapshotRetentionPeriod) {
            return automatedSnapshotRetentionPeriod(Output.of(automatedSnapshotRetentionPeriod));
        }

        public Builder availabilityZone(@Nullable Output<String> availabilityZone) {
            $.availabilityZone = availabilityZone;
            return this;
        }

        public Builder availabilityZone(String availabilityZone) {
            return availabilityZone(Output.of(availabilityZone));
        }

        public Builder availabilityZoneRelocationEnabled(@Nullable Output<Boolean> availabilityZoneRelocationEnabled) {
            $.availabilityZoneRelocationEnabled = availabilityZoneRelocationEnabled;
            return this;
        }

        public Builder availabilityZoneRelocationEnabled(Boolean availabilityZoneRelocationEnabled) {
            return availabilityZoneRelocationEnabled(Output.of(availabilityZoneRelocationEnabled));
        }

        public Builder clusterIdentifier(Output<String> clusterIdentifier) {
            $.clusterIdentifier = clusterIdentifier;
            return this;
        }

        public Builder clusterIdentifier(String clusterIdentifier) {
            return clusterIdentifier(Output.of(clusterIdentifier));
        }

        public Builder clusterParameterGroupName(@Nullable Output<String> clusterParameterGroupName) {
            $.clusterParameterGroupName = clusterParameterGroupName;
            return this;
        }

        public Builder clusterParameterGroupName(String clusterParameterGroupName) {
            return clusterParameterGroupName(Output.of(clusterParameterGroupName));
        }

        public Builder clusterPublicKey(@Nullable Output<String> clusterPublicKey) {
            $.clusterPublicKey = clusterPublicKey;
            return this;
        }

        public Builder clusterPublicKey(String clusterPublicKey) {
            return clusterPublicKey(Output.of(clusterPublicKey));
        }

        public Builder clusterRevisionNumber(@Nullable Output<String> clusterRevisionNumber) {
            $.clusterRevisionNumber = clusterRevisionNumber;
            return this;
        }

        public Builder clusterRevisionNumber(String clusterRevisionNumber) {
            return clusterRevisionNumber(Output.of(clusterRevisionNumber));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * With the retirement of EC2-Classic the cluster_security_groups attribute has been deprecated and will be removed in a future version.
         * 
         */
        @Deprecated /* With the retirement of EC2-Classic the cluster_security_groups attribute has been deprecated and will be removed in a future version. */
        public Builder clusterSecurityGroups(@Nullable Output<List<String>> clusterSecurityGroups) {
            $.clusterSecurityGroups = clusterSecurityGroups;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * With the retirement of EC2-Classic the cluster_security_groups attribute has been deprecated and will be removed in a future version.
         * 
         */
        @Deprecated /* With the retirement of EC2-Classic the cluster_security_groups attribute has been deprecated and will be removed in a future version. */
        public Builder clusterSecurityGroups(List<String> clusterSecurityGroups) {
            return clusterSecurityGroups(Output.of(clusterSecurityGroups));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * With the retirement of EC2-Classic the cluster_security_groups attribute has been deprecated and will be removed in a future version.
         * 
         */
        @Deprecated /* With the retirement of EC2-Classic the cluster_security_groups attribute has been deprecated and will be removed in a future version. */
        public Builder clusterSecurityGroups(String... clusterSecurityGroups) {
            return clusterSecurityGroups(List.of(clusterSecurityGroups));
        }

        public Builder clusterSubnetGroupName(@Nullable Output<String> clusterSubnetGroupName) {
            $.clusterSubnetGroupName = clusterSubnetGroupName;
            return this;
        }

        public Builder clusterSubnetGroupName(String clusterSubnetGroupName) {
            return clusterSubnetGroupName(Output.of(clusterSubnetGroupName));
        }

        public Builder clusterType(@Nullable Output<String> clusterType) {
            $.clusterType = clusterType;
            return this;
        }

        public Builder clusterType(String clusterType) {
            return clusterType(Output.of(clusterType));
        }

        public Builder clusterVersion(@Nullable Output<String> clusterVersion) {
            $.clusterVersion = clusterVersion;
            return this;
        }

        public Builder clusterVersion(String clusterVersion) {
            return clusterVersion(Output.of(clusterVersion));
        }

        public Builder databaseName(@Nullable Output<String> databaseName) {
            $.databaseName = databaseName;
            return this;
        }

        public Builder databaseName(String databaseName) {
            return databaseName(Output.of(databaseName));
        }

        public Builder defaultIamRoleArn(@Nullable Output<String> defaultIamRoleArn) {
            $.defaultIamRoleArn = defaultIamRoleArn;
            return this;
        }

        public Builder defaultIamRoleArn(String defaultIamRoleArn) {
            return defaultIamRoleArn(Output.of(defaultIamRoleArn));
        }

        public Builder elasticIp(@Nullable Output<String> elasticIp) {
            $.elasticIp = elasticIp;
            return this;
        }

        public Builder elasticIp(String elasticIp) {
            return elasticIp(Output.of(elasticIp));
        }

        public Builder encrypted(@Nullable Output<Boolean> encrypted) {
            $.encrypted = encrypted;
            return this;
        }

        public Builder encrypted(Boolean encrypted) {
            return encrypted(Output.of(encrypted));
        }

        public Builder endpoint(@Nullable Output<String> endpoint) {
            $.endpoint = endpoint;
            return this;
        }

        public Builder endpoint(String endpoint) {
            return endpoint(Output.of(endpoint));
        }

        public Builder enhancedVpcRouting(@Nullable Output<Boolean> enhancedVpcRouting) {
            $.enhancedVpcRouting = enhancedVpcRouting;
            return this;
        }

        public Builder enhancedVpcRouting(Boolean enhancedVpcRouting) {
            return enhancedVpcRouting(Output.of(enhancedVpcRouting));
        }

        public Builder finalSnapshotIdentifier(@Nullable Output<String> finalSnapshotIdentifier) {
            $.finalSnapshotIdentifier = finalSnapshotIdentifier;
            return this;
        }

        public Builder finalSnapshotIdentifier(String finalSnapshotIdentifier) {
            return finalSnapshotIdentifier(Output.of(finalSnapshotIdentifier));
        }

        public Builder iamRoles(@Nullable Output<List<String>> iamRoles) {
            $.iamRoles = iamRoles;
            return this;
        }

        public Builder iamRoles(List<String> iamRoles) {
            return iamRoles(Output.of(iamRoles));
        }

        public Builder iamRoles(String... iamRoles) {
            return iamRoles(List.of(iamRoles));
        }

        public Builder kmsKeyId(@Nullable Output<String> kmsKeyId) {
            $.kmsKeyId = kmsKeyId;
            return this;
        }

        public Builder kmsKeyId(String kmsKeyId) {
            return kmsKeyId(Output.of(kmsKeyId));
        }

        public Builder logging(@Nullable Output<ClusterLoggingArgs> logging) {
            $.logging = logging;
            return this;
        }

        public Builder logging(ClusterLoggingArgs logging) {
            return logging(Output.of(logging));
        }

        public Builder maintenanceTrackName(@Nullable Output<String> maintenanceTrackName) {
            $.maintenanceTrackName = maintenanceTrackName;
            return this;
        }

        public Builder maintenanceTrackName(String maintenanceTrackName) {
            return maintenanceTrackName(Output.of(maintenanceTrackName));
        }

        public Builder manualSnapshotRetentionPeriod(@Nullable Output<Integer> manualSnapshotRetentionPeriod) {
            $.manualSnapshotRetentionPeriod = manualSnapshotRetentionPeriod;
            return this;
        }

        public Builder manualSnapshotRetentionPeriod(Integer manualSnapshotRetentionPeriod) {
            return manualSnapshotRetentionPeriod(Output.of(manualSnapshotRetentionPeriod));
        }

        public Builder masterPassword(@Nullable Output<String> masterPassword) {
            $.masterPassword = masterPassword;
            return this;
        }

        public Builder masterPassword(String masterPassword) {
            return masterPassword(Output.of(masterPassword));
        }

        public Builder masterUsername(@Nullable Output<String> masterUsername) {
            $.masterUsername = masterUsername;
            return this;
        }

        public Builder masterUsername(String masterUsername) {
            return masterUsername(Output.of(masterUsername));
        }

        public Builder nodeType(Output<String> nodeType) {
            $.nodeType = nodeType;
            return this;
        }

        public Builder nodeType(String nodeType) {
            return nodeType(Output.of(nodeType));
        }

        public Builder numberOfNodes(@Nullable Output<Integer> numberOfNodes) {
            $.numberOfNodes = numberOfNodes;
            return this;
        }

        public Builder numberOfNodes(Integer numberOfNodes) {
            return numberOfNodes(Output.of(numberOfNodes));
        }

        public Builder ownerAccount(@Nullable Output<String> ownerAccount) {
            $.ownerAccount = ownerAccount;
            return this;
        }

        public Builder ownerAccount(String ownerAccount) {
            return ownerAccount(Output.of(ownerAccount));
        }

        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        public Builder preferredMaintenanceWindow(@Nullable Output<String> preferredMaintenanceWindow) {
            $.preferredMaintenanceWindow = preferredMaintenanceWindow;
            return this;
        }

        public Builder preferredMaintenanceWindow(String preferredMaintenanceWindow) {
            return preferredMaintenanceWindow(Output.of(preferredMaintenanceWindow));
        }

        public Builder publiclyAccessible(@Nullable Output<Boolean> publiclyAccessible) {
            $.publiclyAccessible = publiclyAccessible;
            return this;
        }

        public Builder publiclyAccessible(Boolean publiclyAccessible) {
            return publiclyAccessible(Output.of(publiclyAccessible));
        }

        public Builder skipFinalSnapshot(@Nullable Output<Boolean> skipFinalSnapshot) {
            $.skipFinalSnapshot = skipFinalSnapshot;
            return this;
        }

        public Builder skipFinalSnapshot(Boolean skipFinalSnapshot) {
            return skipFinalSnapshot(Output.of(skipFinalSnapshot));
        }

        public Builder snapshotClusterIdentifier(@Nullable Output<String> snapshotClusterIdentifier) {
            $.snapshotClusterIdentifier = snapshotClusterIdentifier;
            return this;
        }

        public Builder snapshotClusterIdentifier(String snapshotClusterIdentifier) {
            return snapshotClusterIdentifier(Output.of(snapshotClusterIdentifier));
        }

        public Builder snapshotCopy(@Nullable Output<ClusterSnapshotCopyArgs> snapshotCopy) {
            $.snapshotCopy = snapshotCopy;
            return this;
        }

        public Builder snapshotCopy(ClusterSnapshotCopyArgs snapshotCopy) {
            return snapshotCopy(Output.of(snapshotCopy));
        }

        public Builder snapshotIdentifier(@Nullable Output<String> snapshotIdentifier) {
            $.snapshotIdentifier = snapshotIdentifier;
            return this;
        }

        public Builder snapshotIdentifier(String snapshotIdentifier) {
            return snapshotIdentifier(Output.of(snapshotIdentifier));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder vpcSecurityGroupIds(@Nullable Output<List<String>> vpcSecurityGroupIds) {
            $.vpcSecurityGroupIds = vpcSecurityGroupIds;
            return this;
        }

        public Builder vpcSecurityGroupIds(List<String> vpcSecurityGroupIds) {
            return vpcSecurityGroupIds(Output.of(vpcSecurityGroupIds));
        }

        public Builder vpcSecurityGroupIds(String... vpcSecurityGroupIds) {
            return vpcSecurityGroupIds(List.of(vpcSecurityGroupIds));
        }

        public ClusterArgs build() {
            $.clusterIdentifier = Objects.requireNonNull($.clusterIdentifier, "expected parameter 'clusterIdentifier' to be non-null");
            $.nodeType = Objects.requireNonNull($.nodeType, "expected parameter 'nodeType' to be non-null");
            return $;
        }
    }

}
