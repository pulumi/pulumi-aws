// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cognito.outputs;

import com.pulumi.aws.cognito.outputs.RiskConfigurationAccountTakeoverRiskConfigurationActionsHighAction;
import com.pulumi.aws.cognito.outputs.RiskConfigurationAccountTakeoverRiskConfigurationActionsLowAction;
import com.pulumi.aws.cognito.outputs.RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumAction;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RiskConfigurationAccountTakeoverRiskConfigurationActions {
    /**
     * @return Action to take for a high risk. See action block below.
     * 
     */
    private @Nullable RiskConfigurationAccountTakeoverRiskConfigurationActionsHighAction highAction;
    /**
     * @return Action to take for a low risk. See action block below.
     * 
     */
    private @Nullable RiskConfigurationAccountTakeoverRiskConfigurationActionsLowAction lowAction;
    /**
     * @return Action to take for a medium risk. See action block below.
     * 
     */
    private @Nullable RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumAction mediumAction;

    private RiskConfigurationAccountTakeoverRiskConfigurationActions() {}
    /**
     * @return Action to take for a high risk. See action block below.
     * 
     */
    public Optional<RiskConfigurationAccountTakeoverRiskConfigurationActionsHighAction> highAction() {
        return Optional.ofNullable(this.highAction);
    }
    /**
     * @return Action to take for a low risk. See action block below.
     * 
     */
    public Optional<RiskConfigurationAccountTakeoverRiskConfigurationActionsLowAction> lowAction() {
        return Optional.ofNullable(this.lowAction);
    }
    /**
     * @return Action to take for a medium risk. See action block below.
     * 
     */
    public Optional<RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumAction> mediumAction() {
        return Optional.ofNullable(this.mediumAction);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RiskConfigurationAccountTakeoverRiskConfigurationActions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable RiskConfigurationAccountTakeoverRiskConfigurationActionsHighAction highAction;
        private @Nullable RiskConfigurationAccountTakeoverRiskConfigurationActionsLowAction lowAction;
        private @Nullable RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumAction mediumAction;
        public Builder() {}
        public Builder(RiskConfigurationAccountTakeoverRiskConfigurationActions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.highAction = defaults.highAction;
    	      this.lowAction = defaults.lowAction;
    	      this.mediumAction = defaults.mediumAction;
        }

        @CustomType.Setter
        public Builder highAction(@Nullable RiskConfigurationAccountTakeoverRiskConfigurationActionsHighAction highAction) {
            this.highAction = highAction;
            return this;
        }
        @CustomType.Setter
        public Builder lowAction(@Nullable RiskConfigurationAccountTakeoverRiskConfigurationActionsLowAction lowAction) {
            this.lowAction = lowAction;
            return this;
        }
        @CustomType.Setter
        public Builder mediumAction(@Nullable RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumAction mediumAction) {
            this.mediumAction = mediumAction;
            return this;
        }
        public RiskConfigurationAccountTakeoverRiskConfigurationActions build() {
            final var o = new RiskConfigurationAccountTakeoverRiskConfigurationActions();
            o.highAction = highAction;
            o.lowAction = lowAction;
            o.mediumAction = mediumAction;
            return o;
        }
    }
}
