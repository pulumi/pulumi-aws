// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.outputs;

import com.pulumi.aws.appmesh.outputs.GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeout;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRouteSpecGrpcRouteRetryPolicy {
    private @Nullable List<String> grpcRetryEvents;
    private @Nullable List<String> httpRetryEvents;
    private @Nullable Integer maxRetries;
    private @Nullable List<GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeout> perRetryTimeouts;
    private @Nullable List<String> tcpRetryEvents;

    private GetRouteSpecGrpcRouteRetryPolicy() {}
    public List<String> grpcRetryEvents() {
        return this.grpcRetryEvents == null ? List.of() : this.grpcRetryEvents;
    }
    public List<String> httpRetryEvents() {
        return this.httpRetryEvents == null ? List.of() : this.httpRetryEvents;
    }
    public Optional<Integer> maxRetries() {
        return Optional.ofNullable(this.maxRetries);
    }
    public List<GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeout> perRetryTimeouts() {
        return this.perRetryTimeouts == null ? List.of() : this.perRetryTimeouts;
    }
    public List<String> tcpRetryEvents() {
        return this.tcpRetryEvents == null ? List.of() : this.tcpRetryEvents;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRouteSpecGrpcRouteRetryPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> grpcRetryEvents;
        private @Nullable List<String> httpRetryEvents;
        private @Nullable Integer maxRetries;
        private @Nullable List<GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeout> perRetryTimeouts;
        private @Nullable List<String> tcpRetryEvents;
        public Builder() {}
        public Builder(GetRouteSpecGrpcRouteRetryPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.grpcRetryEvents = defaults.grpcRetryEvents;
    	      this.httpRetryEvents = defaults.httpRetryEvents;
    	      this.maxRetries = defaults.maxRetries;
    	      this.perRetryTimeouts = defaults.perRetryTimeouts;
    	      this.tcpRetryEvents = defaults.tcpRetryEvents;
        }

        @CustomType.Setter
        public Builder grpcRetryEvents(@Nullable List<String> grpcRetryEvents) {
            this.grpcRetryEvents = grpcRetryEvents;
            return this;
        }
        public Builder grpcRetryEvents(String... grpcRetryEvents) {
            return grpcRetryEvents(List.of(grpcRetryEvents));
        }
        @CustomType.Setter
        public Builder httpRetryEvents(@Nullable List<String> httpRetryEvents) {
            this.httpRetryEvents = httpRetryEvents;
            return this;
        }
        public Builder httpRetryEvents(String... httpRetryEvents) {
            return httpRetryEvents(List.of(httpRetryEvents));
        }
        @CustomType.Setter
        public Builder maxRetries(@Nullable Integer maxRetries) {
            this.maxRetries = maxRetries;
            return this;
        }
        @CustomType.Setter
        public Builder perRetryTimeouts(@Nullable List<GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeout> perRetryTimeouts) {
            this.perRetryTimeouts = perRetryTimeouts;
            return this;
        }
        public Builder perRetryTimeouts(GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeout... perRetryTimeouts) {
            return perRetryTimeouts(List.of(perRetryTimeouts));
        }
        @CustomType.Setter
        public Builder tcpRetryEvents(@Nullable List<String> tcpRetryEvents) {
            this.tcpRetryEvents = tcpRetryEvents;
            return this;
        }
        public Builder tcpRetryEvents(String... tcpRetryEvents) {
            return tcpRetryEvents(List.of(tcpRetryEvents));
        }
        public GetRouteSpecGrpcRouteRetryPolicy build() {
            final var o = new GetRouteSpecGrpcRouteRetryPolicy();
            o.grpcRetryEvents = grpcRetryEvents;
            o.httpRetryEvents = httpRetryEvents;
            o.maxRetries = maxRetries;
            o.perRetryTimeouts = perRetryTimeouts;
            o.tcpRetryEvents = tcpRetryEvents;
            return o;
        }
    }
}
