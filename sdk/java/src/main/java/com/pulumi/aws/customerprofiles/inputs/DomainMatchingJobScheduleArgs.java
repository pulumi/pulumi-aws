// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.customerprofiles.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class DomainMatchingJobScheduleArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainMatchingJobScheduleArgs Empty = new DomainMatchingJobScheduleArgs();

    /**
     * The day when the Identity Resolution Job should run every week.
     * 
     */
    @Import(name="dayOfTheWeek", required=true)
    private Output<String> dayOfTheWeek;

    /**
     * @return The day when the Identity Resolution Job should run every week.
     * 
     */
    public Output<String> dayOfTheWeek() {
        return this.dayOfTheWeek;
    }

    /**
     * The time when the Identity Resolution Job should run every week.
     * 
     */
    @Import(name="time", required=true)
    private Output<String> time;

    /**
     * @return The time when the Identity Resolution Job should run every week.
     * 
     */
    public Output<String> time() {
        return this.time;
    }

    private DomainMatchingJobScheduleArgs() {}

    private DomainMatchingJobScheduleArgs(DomainMatchingJobScheduleArgs $) {
        this.dayOfTheWeek = $.dayOfTheWeek;
        this.time = $.time;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainMatchingJobScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainMatchingJobScheduleArgs $;

        public Builder() {
            $ = new DomainMatchingJobScheduleArgs();
        }

        public Builder(DomainMatchingJobScheduleArgs defaults) {
            $ = new DomainMatchingJobScheduleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dayOfTheWeek The day when the Identity Resolution Job should run every week.
         * 
         * @return builder
         * 
         */
        public Builder dayOfTheWeek(Output<String> dayOfTheWeek) {
            $.dayOfTheWeek = dayOfTheWeek;
            return this;
        }

        /**
         * @param dayOfTheWeek The day when the Identity Resolution Job should run every week.
         * 
         * @return builder
         * 
         */
        public Builder dayOfTheWeek(String dayOfTheWeek) {
            return dayOfTheWeek(Output.of(dayOfTheWeek));
        }

        /**
         * @param time The time when the Identity Resolution Job should run every week.
         * 
         * @return builder
         * 
         */
        public Builder time(Output<String> time) {
            $.time = time;
            return this;
        }

        /**
         * @param time The time when the Identity Resolution Job should run every week.
         * 
         * @return builder
         * 
         */
        public Builder time(String time) {
            return time(Output.of(time));
        }

        public DomainMatchingJobScheduleArgs build() {
            if ($.dayOfTheWeek == null) {
                throw new MissingRequiredPropertyException("DomainMatchingJobScheduleArgs", "dayOfTheWeek");
            }
            if ($.time == null) {
                throw new MissingRequiredPropertyException("DomainMatchingJobScheduleArgs", "time");
            }
            return $;
        }
    }

}
