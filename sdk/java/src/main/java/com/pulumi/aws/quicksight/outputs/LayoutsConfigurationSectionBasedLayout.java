// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.LayoutsConfigurationSectionBasedLayoutBodySection;
import com.pulumi.aws.quicksight.outputs.LayoutsConfigurationSectionBasedLayoutCanvasSizeOptions;
import com.pulumi.aws.quicksight.outputs.LayoutsConfigurationSectionBasedLayoutFooterSections;
import com.pulumi.aws.quicksight.outputs.LayoutsConfigurationSectionBasedLayoutHeaderSections;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LayoutsConfigurationSectionBasedLayout {
    private List<LayoutsConfigurationSectionBasedLayoutBodySection> bodySections;
    private @Nullable LayoutsConfigurationSectionBasedLayoutCanvasSizeOptions canvasSizeOptions;
    private LayoutsConfigurationSectionBasedLayoutFooterSections footerSections;
    private LayoutsConfigurationSectionBasedLayoutHeaderSections headerSections;

    private LayoutsConfigurationSectionBasedLayout() {}
    public List<LayoutsConfigurationSectionBasedLayoutBodySection> bodySections() {
        return this.bodySections;
    }
    public Optional<LayoutsConfigurationSectionBasedLayoutCanvasSizeOptions> canvasSizeOptions() {
        return Optional.ofNullable(this.canvasSizeOptions);
    }
    public LayoutsConfigurationSectionBasedLayoutFooterSections footerSections() {
        return this.footerSections;
    }
    public LayoutsConfigurationSectionBasedLayoutHeaderSections headerSections() {
        return this.headerSections;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LayoutsConfigurationSectionBasedLayout defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<LayoutsConfigurationSectionBasedLayoutBodySection> bodySections;
        private @Nullable LayoutsConfigurationSectionBasedLayoutCanvasSizeOptions canvasSizeOptions;
        private LayoutsConfigurationSectionBasedLayoutFooterSections footerSections;
        private LayoutsConfigurationSectionBasedLayoutHeaderSections headerSections;
        public Builder() {}
        public Builder(LayoutsConfigurationSectionBasedLayout defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bodySections = defaults.bodySections;
    	      this.canvasSizeOptions = defaults.canvasSizeOptions;
    	      this.footerSections = defaults.footerSections;
    	      this.headerSections = defaults.headerSections;
        }

        @CustomType.Setter
        public Builder bodySections(List<LayoutsConfigurationSectionBasedLayoutBodySection> bodySections) {
            if (bodySections == null) {
              throw new MissingRequiredPropertyException("LayoutsConfigurationSectionBasedLayout", "bodySections");
            }
            this.bodySections = bodySections;
            return this;
        }
        public Builder bodySections(LayoutsConfigurationSectionBasedLayoutBodySection... bodySections) {
            return bodySections(List.of(bodySections));
        }
        @CustomType.Setter
        public Builder canvasSizeOptions(@Nullable LayoutsConfigurationSectionBasedLayoutCanvasSizeOptions canvasSizeOptions) {

            this.canvasSizeOptions = canvasSizeOptions;
            return this;
        }
        @CustomType.Setter
        public Builder footerSections(LayoutsConfigurationSectionBasedLayoutFooterSections footerSections) {
            if (footerSections == null) {
              throw new MissingRequiredPropertyException("LayoutsConfigurationSectionBasedLayout", "footerSections");
            }
            this.footerSections = footerSections;
            return this;
        }
        @CustomType.Setter
        public Builder headerSections(LayoutsConfigurationSectionBasedLayoutHeaderSections headerSections) {
            if (headerSections == null) {
              throw new MissingRequiredPropertyException("LayoutsConfigurationSectionBasedLayout", "headerSections");
            }
            this.headerSections = headerSections;
            return this;
        }
        public LayoutsConfigurationSectionBasedLayout build() {
            final var _resultValue = new LayoutsConfigurationSectionBasedLayout();
            _resultValue.bodySections = bodySections;
            _resultValue.canvasSizeOptions = canvasSizeOptions;
            _resultValue.footerSections = footerSections;
            _resultValue.headerSections = headerSections;
            return _resultValue;
        }
    }
}
