// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.networkmanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectPeerConfigurationBgpConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectPeerConfigurationBgpConfigurationArgs Empty = new ConnectPeerConfigurationBgpConfigurationArgs();

    /**
     * Connect peer core network address.
     * 
     */
    @Import(name="coreNetworkAddress")
    private @Nullable Output<String> coreNetworkAddress;

    /**
     * @return Connect peer core network address.
     * 
     */
    public Optional<Output<String>> coreNetworkAddress() {
        return Optional.ofNullable(this.coreNetworkAddress);
    }

    @Import(name="coreNetworkAsn")
    private @Nullable Output<Integer> coreNetworkAsn;

    public Optional<Output<Integer>> coreNetworkAsn() {
        return Optional.ofNullable(this.coreNetworkAsn);
    }

    /**
     * Connect peer address.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="peerAddress")
    private @Nullable Output<String> peerAddress;

    /**
     * @return Connect peer address.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<String>> peerAddress() {
        return Optional.ofNullable(this.peerAddress);
    }

    /**
     * Peer ASN.
     * 
     */
    @Import(name="peerAsn")
    private @Nullable Output<Integer> peerAsn;

    /**
     * @return Peer ASN.
     * 
     */
    public Optional<Output<Integer>> peerAsn() {
        return Optional.ofNullable(this.peerAsn);
    }

    private ConnectPeerConfigurationBgpConfigurationArgs() {}

    private ConnectPeerConfigurationBgpConfigurationArgs(ConnectPeerConfigurationBgpConfigurationArgs $) {
        this.coreNetworkAddress = $.coreNetworkAddress;
        this.coreNetworkAsn = $.coreNetworkAsn;
        this.peerAddress = $.peerAddress;
        this.peerAsn = $.peerAsn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectPeerConfigurationBgpConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectPeerConfigurationBgpConfigurationArgs $;

        public Builder() {
            $ = new ConnectPeerConfigurationBgpConfigurationArgs();
        }

        public Builder(ConnectPeerConfigurationBgpConfigurationArgs defaults) {
            $ = new ConnectPeerConfigurationBgpConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param coreNetworkAddress Connect peer core network address.
         * 
         * @return builder
         * 
         */
        public Builder coreNetworkAddress(@Nullable Output<String> coreNetworkAddress) {
            $.coreNetworkAddress = coreNetworkAddress;
            return this;
        }

        /**
         * @param coreNetworkAddress Connect peer core network address.
         * 
         * @return builder
         * 
         */
        public Builder coreNetworkAddress(String coreNetworkAddress) {
            return coreNetworkAddress(Output.of(coreNetworkAddress));
        }

        public Builder coreNetworkAsn(@Nullable Output<Integer> coreNetworkAsn) {
            $.coreNetworkAsn = coreNetworkAsn;
            return this;
        }

        public Builder coreNetworkAsn(Integer coreNetworkAsn) {
            return coreNetworkAsn(Output.of(coreNetworkAsn));
        }

        /**
         * @param peerAddress Connect peer address.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder peerAddress(@Nullable Output<String> peerAddress) {
            $.peerAddress = peerAddress;
            return this;
        }

        /**
         * @param peerAddress Connect peer address.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder peerAddress(String peerAddress) {
            return peerAddress(Output.of(peerAddress));
        }

        /**
         * @param peerAsn Peer ASN.
         * 
         * @return builder
         * 
         */
        public Builder peerAsn(@Nullable Output<Integer> peerAsn) {
            $.peerAsn = peerAsn;
            return this;
        }

        /**
         * @param peerAsn Peer ASN.
         * 
         * @return builder
         * 
         */
        public Builder peerAsn(Integer peerAsn) {
            return peerAsn(Output.of(peerAsn));
        }

        public ConnectPeerConfigurationBgpConfigurationArgs build() {
            return $;
        }
    }

}
