// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.DataSetRefreshPropertiesRefreshConfigurationIncrementalRefresh;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;

@CustomType
public final class DataSetRefreshPropertiesRefreshConfiguration {
    /**
     * @return The incremental refresh for the data set. See incremental_refresh.
     * 
     */
    private DataSetRefreshPropertiesRefreshConfigurationIncrementalRefresh incrementalRefresh;

    private DataSetRefreshPropertiesRefreshConfiguration() {}
    /**
     * @return The incremental refresh for the data set. See incremental_refresh.
     * 
     */
    public DataSetRefreshPropertiesRefreshConfigurationIncrementalRefresh incrementalRefresh() {
        return this.incrementalRefresh;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataSetRefreshPropertiesRefreshConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private DataSetRefreshPropertiesRefreshConfigurationIncrementalRefresh incrementalRefresh;
        public Builder() {}
        public Builder(DataSetRefreshPropertiesRefreshConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.incrementalRefresh = defaults.incrementalRefresh;
        }

        @CustomType.Setter
        public Builder incrementalRefresh(DataSetRefreshPropertiesRefreshConfigurationIncrementalRefresh incrementalRefresh) {
            this.incrementalRefresh = Objects.requireNonNull(incrementalRefresh);
            return this;
        }
        public DataSetRefreshPropertiesRefreshConfiguration build() {
            final var _resultValue = new DataSetRefreshPropertiesRefreshConfiguration();
            _resultValue.incrementalRefresh = incrementalRefresh;
            return _resultValue;
        }
    }
}
