// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVpcIamPoolsIpamPool {
    /**
     * @return IP protocol assigned to this pool.
     * 
     */
    private @Nullable String addressFamily;
    /**
     * @return A default netmask length for allocations added to this pool. If, for example, the CIDR assigned to this pool is `10.0.0.0/8` and you enter 16 here, new allocations will default to `10.0.0.0/16`.
     * 
     */
    private @Nullable Integer allocationDefaultNetmaskLength;
    /**
     * @return The maximum netmask length that will be required for CIDR allocations in this pool.
     * 
     */
    private @Nullable Integer allocationMaxNetmaskLength;
    /**
     * @return The minimum netmask length that will be required for CIDR allocations in this pool.
     * 
     */
    private @Nullable Integer allocationMinNetmaskLength;
    /**
     * @return Tags that are required to create resources in using this pool.
     * 
     */
    private @Nullable Map<String,String> allocationResourceTags;
    /**
     * @return ARN of the pool
     * 
     */
    private @Nullable String arn;
    /**
     * @return If enabled, IPAM will continuously look for resources within the CIDR range of this pool and automatically import them as allocations into your IPAM.
     * 
     */
    private @Nullable Boolean autoImport;
    /**
     * @return Limits which service in AWS that the pool can be used in. `ec2` for example, allows users to use space for Elastic IP addresses and VPCs.
     * 
     */
    private @Nullable String awsService;
    /**
     * @return Description for the IPAM pool.
     * 
     */
    private @Nullable String description;
    /**
     * @return ID of the IPAM pool.
     * 
     */
    private @Nullable String id;
    /**
     * @return ID of the scope the pool belongs to.
     * 
     */
    private @Nullable String ipamScopeId;
    private @Nullable String ipamScopeType;
    /**
     * @return Locale is the Region where your pool is available for allocations. You can only create pools with locales that match the operating Regions of the IPAM. You can only create VPCs from a pool whose locale matches the VPC&#39;s Region.
     * 
     */
    private @Nullable String locale;
    private @Nullable Integer poolDepth;
    /**
     * @return Defines whether or not IPv6 pool space is publicly advertisable over the internet.
     * 
     */
    private @Nullable Boolean publiclyAdvertisable;
    /**
     * @return ID of the source IPAM pool.
     * 
     */
    private @Nullable String sourceIpamPoolId;
    private @Nullable String state;
    /**
     * @return Map of tags to assigned to the resource.
     * 
     */
    private @Nullable Map<String,String> tags;

    private GetVpcIamPoolsIpamPool() {}
    /**
     * @return IP protocol assigned to this pool.
     * 
     */
    public Optional<String> addressFamily() {
        return Optional.ofNullable(this.addressFamily);
    }
    /**
     * @return A default netmask length for allocations added to this pool. If, for example, the CIDR assigned to this pool is `10.0.0.0/8` and you enter 16 here, new allocations will default to `10.0.0.0/16`.
     * 
     */
    public Optional<Integer> allocationDefaultNetmaskLength() {
        return Optional.ofNullable(this.allocationDefaultNetmaskLength);
    }
    /**
     * @return The maximum netmask length that will be required for CIDR allocations in this pool.
     * 
     */
    public Optional<Integer> allocationMaxNetmaskLength() {
        return Optional.ofNullable(this.allocationMaxNetmaskLength);
    }
    /**
     * @return The minimum netmask length that will be required for CIDR allocations in this pool.
     * 
     */
    public Optional<Integer> allocationMinNetmaskLength() {
        return Optional.ofNullable(this.allocationMinNetmaskLength);
    }
    /**
     * @return Tags that are required to create resources in using this pool.
     * 
     */
    public Map<String,String> allocationResourceTags() {
        return this.allocationResourceTags == null ? Map.of() : this.allocationResourceTags;
    }
    /**
     * @return ARN of the pool
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return If enabled, IPAM will continuously look for resources within the CIDR range of this pool and automatically import them as allocations into your IPAM.
     * 
     */
    public Optional<Boolean> autoImport() {
        return Optional.ofNullable(this.autoImport);
    }
    /**
     * @return Limits which service in AWS that the pool can be used in. `ec2` for example, allows users to use space for Elastic IP addresses and VPCs.
     * 
     */
    public Optional<String> awsService() {
        return Optional.ofNullable(this.awsService);
    }
    /**
     * @return Description for the IPAM pool.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return ID of the IPAM pool.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return ID of the scope the pool belongs to.
     * 
     */
    public Optional<String> ipamScopeId() {
        return Optional.ofNullable(this.ipamScopeId);
    }
    public Optional<String> ipamScopeType() {
        return Optional.ofNullable(this.ipamScopeType);
    }
    /**
     * @return Locale is the Region where your pool is available for allocations. You can only create pools with locales that match the operating Regions of the IPAM. You can only create VPCs from a pool whose locale matches the VPC&#39;s Region.
     * 
     */
    public Optional<String> locale() {
        return Optional.ofNullable(this.locale);
    }
    public Optional<Integer> poolDepth() {
        return Optional.ofNullable(this.poolDepth);
    }
    /**
     * @return Defines whether or not IPv6 pool space is publicly advertisable over the internet.
     * 
     */
    public Optional<Boolean> publiclyAdvertisable() {
        return Optional.ofNullable(this.publiclyAdvertisable);
    }
    /**
     * @return ID of the source IPAM pool.
     * 
     */
    public Optional<String> sourceIpamPoolId() {
        return Optional.ofNullable(this.sourceIpamPoolId);
    }
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return Map of tags to assigned to the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVpcIamPoolsIpamPool defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String addressFamily;
        private @Nullable Integer allocationDefaultNetmaskLength;
        private @Nullable Integer allocationMaxNetmaskLength;
        private @Nullable Integer allocationMinNetmaskLength;
        private @Nullable Map<String,String> allocationResourceTags;
        private @Nullable String arn;
        private @Nullable Boolean autoImport;
        private @Nullable String awsService;
        private @Nullable String description;
        private @Nullable String id;
        private @Nullable String ipamScopeId;
        private @Nullable String ipamScopeType;
        private @Nullable String locale;
        private @Nullable Integer poolDepth;
        private @Nullable Boolean publiclyAdvertisable;
        private @Nullable String sourceIpamPoolId;
        private @Nullable String state;
        private @Nullable Map<String,String> tags;
        public Builder() {}
        public Builder(GetVpcIamPoolsIpamPool defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addressFamily = defaults.addressFamily;
    	      this.allocationDefaultNetmaskLength = defaults.allocationDefaultNetmaskLength;
    	      this.allocationMaxNetmaskLength = defaults.allocationMaxNetmaskLength;
    	      this.allocationMinNetmaskLength = defaults.allocationMinNetmaskLength;
    	      this.allocationResourceTags = defaults.allocationResourceTags;
    	      this.arn = defaults.arn;
    	      this.autoImport = defaults.autoImport;
    	      this.awsService = defaults.awsService;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.ipamScopeId = defaults.ipamScopeId;
    	      this.ipamScopeType = defaults.ipamScopeType;
    	      this.locale = defaults.locale;
    	      this.poolDepth = defaults.poolDepth;
    	      this.publiclyAdvertisable = defaults.publiclyAdvertisable;
    	      this.sourceIpamPoolId = defaults.sourceIpamPoolId;
    	      this.state = defaults.state;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder addressFamily(@Nullable String addressFamily) {
            this.addressFamily = addressFamily;
            return this;
        }
        @CustomType.Setter
        public Builder allocationDefaultNetmaskLength(@Nullable Integer allocationDefaultNetmaskLength) {
            this.allocationDefaultNetmaskLength = allocationDefaultNetmaskLength;
            return this;
        }
        @CustomType.Setter
        public Builder allocationMaxNetmaskLength(@Nullable Integer allocationMaxNetmaskLength) {
            this.allocationMaxNetmaskLength = allocationMaxNetmaskLength;
            return this;
        }
        @CustomType.Setter
        public Builder allocationMinNetmaskLength(@Nullable Integer allocationMinNetmaskLength) {
            this.allocationMinNetmaskLength = allocationMinNetmaskLength;
            return this;
        }
        @CustomType.Setter
        public Builder allocationResourceTags(@Nullable Map<String,String> allocationResourceTags) {
            this.allocationResourceTags = allocationResourceTags;
            return this;
        }
        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder autoImport(@Nullable Boolean autoImport) {
            this.autoImport = autoImport;
            return this;
        }
        @CustomType.Setter
        public Builder awsService(@Nullable String awsService) {
            this.awsService = awsService;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipamScopeId(@Nullable String ipamScopeId) {
            this.ipamScopeId = ipamScopeId;
            return this;
        }
        @CustomType.Setter
        public Builder ipamScopeType(@Nullable String ipamScopeType) {
            this.ipamScopeType = ipamScopeType;
            return this;
        }
        @CustomType.Setter
        public Builder locale(@Nullable String locale) {
            this.locale = locale;
            return this;
        }
        @CustomType.Setter
        public Builder poolDepth(@Nullable Integer poolDepth) {
            this.poolDepth = poolDepth;
            return this;
        }
        @CustomType.Setter
        public Builder publiclyAdvertisable(@Nullable Boolean publiclyAdvertisable) {
            this.publiclyAdvertisable = publiclyAdvertisable;
            return this;
        }
        @CustomType.Setter
        public Builder sourceIpamPoolId(@Nullable String sourceIpamPoolId) {
            this.sourceIpamPoolId = sourceIpamPoolId;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public GetVpcIamPoolsIpamPool build() {
            final var o = new GetVpcIamPoolsIpamPool();
            o.addressFamily = addressFamily;
            o.allocationDefaultNetmaskLength = allocationDefaultNetmaskLength;
            o.allocationMaxNetmaskLength = allocationMaxNetmaskLength;
            o.allocationMinNetmaskLength = allocationMinNetmaskLength;
            o.allocationResourceTags = allocationResourceTags;
            o.arn = arn;
            o.autoImport = autoImport;
            o.awsService = awsService;
            o.description = description;
            o.id = id;
            o.ipamScopeId = ipamScopeId;
            o.ipamScopeType = ipamScopeType;
            o.locale = locale;
            o.poolDepth = poolDepth;
            o.publiclyAdvertisable = publiclyAdvertisable;
            o.sourceIpamPoolId = sourceIpamPoolId;
            o.state = state;
            o.tags = tags;
            return o;
        }
    }
}
