// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecr.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetImagesImageId {
    /**
     * @return The sha256 digest of the image manifest.
     * 
     */
    private String imageDigest;
    /**
     * @return The tag associated with the image.
     * 
     */
    private String imageTag;

    private GetImagesImageId() {}
    /**
     * @return The sha256 digest of the image manifest.
     * 
     */
    public String imageDigest() {
        return this.imageDigest;
    }
    /**
     * @return The tag associated with the image.
     * 
     */
    public String imageTag() {
        return this.imageTag;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetImagesImageId defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String imageDigest;
        private String imageTag;
        public Builder() {}
        public Builder(GetImagesImageId defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.imageDigest = defaults.imageDigest;
    	      this.imageTag = defaults.imageTag;
        }

        @CustomType.Setter
        public Builder imageDigest(String imageDigest) {
            if (imageDigest == null) {
              throw new MissingRequiredPropertyException("GetImagesImageId", "imageDigest");
            }
            this.imageDigest = imageDigest;
            return this;
        }
        @CustomType.Setter
        public Builder imageTag(String imageTag) {
            if (imageTag == null) {
              throw new MissingRequiredPropertyException("GetImagesImageId", "imageTag");
            }
            this.imageTag = imageTag;
            return this;
        }
        public GetImagesImageId build() {
            final var _resultValue = new GetImagesImageId();
            _resultValue.imageDigest = imageDigest;
            _resultValue.imageTag = imageTag;
            return _resultValue;
        }
    }
}
