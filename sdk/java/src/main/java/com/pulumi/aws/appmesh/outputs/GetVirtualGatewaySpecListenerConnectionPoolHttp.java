// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVirtualGatewaySpecListenerConnectionPoolHttp {
    private @Nullable Integer maxConnections;
    private @Nullable Integer maxPendingRequests;

    private GetVirtualGatewaySpecListenerConnectionPoolHttp() {}
    public Optional<Integer> maxConnections() {
        return Optional.ofNullable(this.maxConnections);
    }
    public Optional<Integer> maxPendingRequests() {
        return Optional.ofNullable(this.maxPendingRequests);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVirtualGatewaySpecListenerConnectionPoolHttp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer maxConnections;
        private @Nullable Integer maxPendingRequests;
        public Builder() {}
        public Builder(GetVirtualGatewaySpecListenerConnectionPoolHttp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxConnections = defaults.maxConnections;
    	      this.maxPendingRequests = defaults.maxPendingRequests;
        }

        @CustomType.Setter
        public Builder maxConnections(@Nullable Integer maxConnections) {
            this.maxConnections = maxConnections;
            return this;
        }
        @CustomType.Setter
        public Builder maxPendingRequests(@Nullable Integer maxPendingRequests) {
            this.maxPendingRequests = maxPendingRequests;
            return this;
        }
        public GetVirtualGatewaySpecListenerConnectionPoolHttp build() {
            final var o = new GetVirtualGatewaySpecListenerConnectionPoolHttp();
            o.maxConnections = maxConnections;
            o.maxPendingRequests = maxPendingRequests;
            return o;
        }
    }
}
