// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.outputs;

import com.pulumi.aws.outputs.GetAmiBlockDeviceMapping;
import com.pulumi.aws.outputs.GetAmiFilter;
import com.pulumi.aws.outputs.GetAmiProductCode;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAmiResult {
    private String architecture;
    private String arn;
    private List<GetAmiBlockDeviceMapping> blockDeviceMappings;
    private String bootMode;
    private String creationDate;
    private String deprecationTime;
    private String description;
    private Boolean enaSupport;
    private @Nullable List<String> executableUsers;
    private @Nullable List<GetAmiFilter> filters;
    private String hypervisor;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String imageId;
    private String imageLocation;
    private String imageOwnerAlias;
    private String imageType;
    private String imdsSupport;
    private @Nullable Boolean includeDeprecated;
    private String kernelId;
    private @Nullable Boolean mostRecent;
    private String name;
    private @Nullable String nameRegex;
    private String ownerId;
    private @Nullable List<String> owners;
    private String platform;
    private String platformDetails;
    private List<GetAmiProductCode> productCodes;
    private Boolean public_;
    private String ramdiskId;
    private String rootDeviceName;
    private String rootDeviceType;
    private String rootSnapshotId;
    private String sriovNetSupport;
    private String state;
    private Map<String,String> stateReason;
    private Map<String,String> tags;
    private String tpmSupport;
    private String usageOperation;
    private String virtualizationType;

    private GetAmiResult() {}
    public String architecture() {
        return this.architecture;
    }
    public String arn() {
        return this.arn;
    }
    public List<GetAmiBlockDeviceMapping> blockDeviceMappings() {
        return this.blockDeviceMappings;
    }
    public String bootMode() {
        return this.bootMode;
    }
    public String creationDate() {
        return this.creationDate;
    }
    public String deprecationTime() {
        return this.deprecationTime;
    }
    public String description() {
        return this.description;
    }
    public Boolean enaSupport() {
        return this.enaSupport;
    }
    public List<String> executableUsers() {
        return this.executableUsers == null ? List.of() : this.executableUsers;
    }
    public List<GetAmiFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    public String hypervisor() {
        return this.hypervisor;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String imageId() {
        return this.imageId;
    }
    public String imageLocation() {
        return this.imageLocation;
    }
    public String imageOwnerAlias() {
        return this.imageOwnerAlias;
    }
    public String imageType() {
        return this.imageType;
    }
    public String imdsSupport() {
        return this.imdsSupport;
    }
    public Optional<Boolean> includeDeprecated() {
        return Optional.ofNullable(this.includeDeprecated);
    }
    public String kernelId() {
        return this.kernelId;
    }
    public Optional<Boolean> mostRecent() {
        return Optional.ofNullable(this.mostRecent);
    }
    public String name() {
        return this.name;
    }
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }
    public String ownerId() {
        return this.ownerId;
    }
    public List<String> owners() {
        return this.owners == null ? List.of() : this.owners;
    }
    public String platform() {
        return this.platform;
    }
    public String platformDetails() {
        return this.platformDetails;
    }
    public List<GetAmiProductCode> productCodes() {
        return this.productCodes;
    }
    public Boolean public_() {
        return this.public_;
    }
    public String ramdiskId() {
        return this.ramdiskId;
    }
    public String rootDeviceName() {
        return this.rootDeviceName;
    }
    public String rootDeviceType() {
        return this.rootDeviceType;
    }
    public String rootSnapshotId() {
        return this.rootSnapshotId;
    }
    public String sriovNetSupport() {
        return this.sriovNetSupport;
    }
    public String state() {
        return this.state;
    }
    public Map<String,String> stateReason() {
        return this.stateReason;
    }
    public Map<String,String> tags() {
        return this.tags;
    }
    public String tpmSupport() {
        return this.tpmSupport;
    }
    public String usageOperation() {
        return this.usageOperation;
    }
    public String virtualizationType() {
        return this.virtualizationType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAmiResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String architecture;
        private String arn;
        private List<GetAmiBlockDeviceMapping> blockDeviceMappings;
        private String bootMode;
        private String creationDate;
        private String deprecationTime;
        private String description;
        private Boolean enaSupport;
        private @Nullable List<String> executableUsers;
        private @Nullable List<GetAmiFilter> filters;
        private String hypervisor;
        private String id;
        private String imageId;
        private String imageLocation;
        private String imageOwnerAlias;
        private String imageType;
        private String imdsSupport;
        private @Nullable Boolean includeDeprecated;
        private String kernelId;
        private @Nullable Boolean mostRecent;
        private String name;
        private @Nullable String nameRegex;
        private String ownerId;
        private @Nullable List<String> owners;
        private String platform;
        private String platformDetails;
        private List<GetAmiProductCode> productCodes;
        private Boolean public_;
        private String ramdiskId;
        private String rootDeviceName;
        private String rootDeviceType;
        private String rootSnapshotId;
        private String sriovNetSupport;
        private String state;
        private Map<String,String> stateReason;
        private Map<String,String> tags;
        private String tpmSupport;
        private String usageOperation;
        private String virtualizationType;
        public Builder() {}
        public Builder(GetAmiResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.architecture = defaults.architecture;
    	      this.arn = defaults.arn;
    	      this.blockDeviceMappings = defaults.blockDeviceMappings;
    	      this.bootMode = defaults.bootMode;
    	      this.creationDate = defaults.creationDate;
    	      this.deprecationTime = defaults.deprecationTime;
    	      this.description = defaults.description;
    	      this.enaSupport = defaults.enaSupport;
    	      this.executableUsers = defaults.executableUsers;
    	      this.filters = defaults.filters;
    	      this.hypervisor = defaults.hypervisor;
    	      this.id = defaults.id;
    	      this.imageId = defaults.imageId;
    	      this.imageLocation = defaults.imageLocation;
    	      this.imageOwnerAlias = defaults.imageOwnerAlias;
    	      this.imageType = defaults.imageType;
    	      this.imdsSupport = defaults.imdsSupport;
    	      this.includeDeprecated = defaults.includeDeprecated;
    	      this.kernelId = defaults.kernelId;
    	      this.mostRecent = defaults.mostRecent;
    	      this.name = defaults.name;
    	      this.nameRegex = defaults.nameRegex;
    	      this.ownerId = defaults.ownerId;
    	      this.owners = defaults.owners;
    	      this.platform = defaults.platform;
    	      this.platformDetails = defaults.platformDetails;
    	      this.productCodes = defaults.productCodes;
    	      this.public_ = defaults.public_;
    	      this.ramdiskId = defaults.ramdiskId;
    	      this.rootDeviceName = defaults.rootDeviceName;
    	      this.rootDeviceType = defaults.rootDeviceType;
    	      this.rootSnapshotId = defaults.rootSnapshotId;
    	      this.sriovNetSupport = defaults.sriovNetSupport;
    	      this.state = defaults.state;
    	      this.stateReason = defaults.stateReason;
    	      this.tags = defaults.tags;
    	      this.tpmSupport = defaults.tpmSupport;
    	      this.usageOperation = defaults.usageOperation;
    	      this.virtualizationType = defaults.virtualizationType;
        }

        @CustomType.Setter
        public Builder architecture(String architecture) {
            this.architecture = Objects.requireNonNull(architecture);
            return this;
        }
        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder blockDeviceMappings(List<GetAmiBlockDeviceMapping> blockDeviceMappings) {
            this.blockDeviceMappings = Objects.requireNonNull(blockDeviceMappings);
            return this;
        }
        public Builder blockDeviceMappings(GetAmiBlockDeviceMapping... blockDeviceMappings) {
            return blockDeviceMappings(List.of(blockDeviceMappings));
        }
        @CustomType.Setter
        public Builder bootMode(String bootMode) {
            this.bootMode = Objects.requireNonNull(bootMode);
            return this;
        }
        @CustomType.Setter
        public Builder creationDate(String creationDate) {
            this.creationDate = Objects.requireNonNull(creationDate);
            return this;
        }
        @CustomType.Setter
        public Builder deprecationTime(String deprecationTime) {
            this.deprecationTime = Objects.requireNonNull(deprecationTime);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder enaSupport(Boolean enaSupport) {
            this.enaSupport = Objects.requireNonNull(enaSupport);
            return this;
        }
        @CustomType.Setter
        public Builder executableUsers(@Nullable List<String> executableUsers) {
            this.executableUsers = executableUsers;
            return this;
        }
        public Builder executableUsers(String... executableUsers) {
            return executableUsers(List.of(executableUsers));
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetAmiFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetAmiFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder hypervisor(String hypervisor) {
            this.hypervisor = Objects.requireNonNull(hypervisor);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder imageId(String imageId) {
            this.imageId = Objects.requireNonNull(imageId);
            return this;
        }
        @CustomType.Setter
        public Builder imageLocation(String imageLocation) {
            this.imageLocation = Objects.requireNonNull(imageLocation);
            return this;
        }
        @CustomType.Setter
        public Builder imageOwnerAlias(String imageOwnerAlias) {
            this.imageOwnerAlias = Objects.requireNonNull(imageOwnerAlias);
            return this;
        }
        @CustomType.Setter
        public Builder imageType(String imageType) {
            this.imageType = Objects.requireNonNull(imageType);
            return this;
        }
        @CustomType.Setter
        public Builder imdsSupport(String imdsSupport) {
            this.imdsSupport = Objects.requireNonNull(imdsSupport);
            return this;
        }
        @CustomType.Setter
        public Builder includeDeprecated(@Nullable Boolean includeDeprecated) {
            this.includeDeprecated = includeDeprecated;
            return this;
        }
        @CustomType.Setter
        public Builder kernelId(String kernelId) {
            this.kernelId = Objects.requireNonNull(kernelId);
            return this;
        }
        @CustomType.Setter
        public Builder mostRecent(@Nullable Boolean mostRecent) {
            this.mostRecent = mostRecent;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder nameRegex(@Nullable String nameRegex) {
            this.nameRegex = nameRegex;
            return this;
        }
        @CustomType.Setter
        public Builder ownerId(String ownerId) {
            this.ownerId = Objects.requireNonNull(ownerId);
            return this;
        }
        @CustomType.Setter
        public Builder owners(@Nullable List<String> owners) {
            this.owners = owners;
            return this;
        }
        public Builder owners(String... owners) {
            return owners(List.of(owners));
        }
        @CustomType.Setter
        public Builder platform(String platform) {
            this.platform = Objects.requireNonNull(platform);
            return this;
        }
        @CustomType.Setter
        public Builder platformDetails(String platformDetails) {
            this.platformDetails = Objects.requireNonNull(platformDetails);
            return this;
        }
        @CustomType.Setter
        public Builder productCodes(List<GetAmiProductCode> productCodes) {
            this.productCodes = Objects.requireNonNull(productCodes);
            return this;
        }
        public Builder productCodes(GetAmiProductCode... productCodes) {
            return productCodes(List.of(productCodes));
        }
        @CustomType.Setter("public")
        public Builder public_(Boolean public_) {
            this.public_ = Objects.requireNonNull(public_);
            return this;
        }
        @CustomType.Setter
        public Builder ramdiskId(String ramdiskId) {
            this.ramdiskId = Objects.requireNonNull(ramdiskId);
            return this;
        }
        @CustomType.Setter
        public Builder rootDeviceName(String rootDeviceName) {
            this.rootDeviceName = Objects.requireNonNull(rootDeviceName);
            return this;
        }
        @CustomType.Setter
        public Builder rootDeviceType(String rootDeviceType) {
            this.rootDeviceType = Objects.requireNonNull(rootDeviceType);
            return this;
        }
        @CustomType.Setter
        public Builder rootSnapshotId(String rootSnapshotId) {
            this.rootSnapshotId = Objects.requireNonNull(rootSnapshotId);
            return this;
        }
        @CustomType.Setter
        public Builder sriovNetSupport(String sriovNetSupport) {
            this.sriovNetSupport = Objects.requireNonNull(sriovNetSupport);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder stateReason(Map<String,String> stateReason) {
            this.stateReason = Objects.requireNonNull(stateReason);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder tpmSupport(String tpmSupport) {
            this.tpmSupport = Objects.requireNonNull(tpmSupport);
            return this;
        }
        @CustomType.Setter
        public Builder usageOperation(String usageOperation) {
            this.usageOperation = Objects.requireNonNull(usageOperation);
            return this;
        }
        @CustomType.Setter
        public Builder virtualizationType(String virtualizationType) {
            this.virtualizationType = Objects.requireNonNull(virtualizationType);
            return this;
        }
        public GetAmiResult build() {
            final var o = new GetAmiResult();
            o.architecture = architecture;
            o.arn = arn;
            o.blockDeviceMappings = blockDeviceMappings;
            o.bootMode = bootMode;
            o.creationDate = creationDate;
            o.deprecationTime = deprecationTime;
            o.description = description;
            o.enaSupport = enaSupport;
            o.executableUsers = executableUsers;
            o.filters = filters;
            o.hypervisor = hypervisor;
            o.id = id;
            o.imageId = imageId;
            o.imageLocation = imageLocation;
            o.imageOwnerAlias = imageOwnerAlias;
            o.imageType = imageType;
            o.imdsSupport = imdsSupport;
            o.includeDeprecated = includeDeprecated;
            o.kernelId = kernelId;
            o.mostRecent = mostRecent;
            o.name = name;
            o.nameRegex = nameRegex;
            o.ownerId = ownerId;
            o.owners = owners;
            o.platform = platform;
            o.platformDetails = platformDetails;
            o.productCodes = productCodes;
            o.public_ = public_;
            o.ramdiskId = ramdiskId;
            o.rootDeviceName = rootDeviceName;
            o.rootDeviceType = rootDeviceType;
            o.rootSnapshotId = rootSnapshotId;
            o.sriovNetSupport = sriovNetSupport;
            o.state = state;
            o.stateReason = stateReason;
            o.tags = tags;
            o.tpmSupport = tpmSupport;
            o.usageOperation = usageOperation;
            o.virtualizationType = virtualizationType;
            return o;
        }
    }
}
