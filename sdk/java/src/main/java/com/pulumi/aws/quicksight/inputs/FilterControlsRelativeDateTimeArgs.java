// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.FilterControlsRelativeDateTimeDisplayOptionsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FilterControlsRelativeDateTimeArgs extends com.pulumi.resources.ResourceArgs {

    public static final FilterControlsRelativeDateTimeArgs Empty = new FilterControlsRelativeDateTimeArgs();

    @Import(name="displayOptions")
    private @Nullable Output<FilterControlsRelativeDateTimeDisplayOptionsArgs> displayOptions;

    public Optional<Output<FilterControlsRelativeDateTimeDisplayOptionsArgs>> displayOptions() {
        return Optional.ofNullable(this.displayOptions);
    }

    @Import(name="filterControlId", required=true)
    private Output<String> filterControlId;

    public Output<String> filterControlId() {
        return this.filterControlId;
    }

    @Import(name="sourceFilterId", required=true)
    private Output<String> sourceFilterId;

    public Output<String> sourceFilterId() {
        return this.sourceFilterId;
    }

    @Import(name="title", required=true)
    private Output<String> title;

    public Output<String> title() {
        return this.title;
    }

    private FilterControlsRelativeDateTimeArgs() {}

    private FilterControlsRelativeDateTimeArgs(FilterControlsRelativeDateTimeArgs $) {
        this.displayOptions = $.displayOptions;
        this.filterControlId = $.filterControlId;
        this.sourceFilterId = $.sourceFilterId;
        this.title = $.title;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FilterControlsRelativeDateTimeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FilterControlsRelativeDateTimeArgs $;

        public Builder() {
            $ = new FilterControlsRelativeDateTimeArgs();
        }

        public Builder(FilterControlsRelativeDateTimeArgs defaults) {
            $ = new FilterControlsRelativeDateTimeArgs(Objects.requireNonNull(defaults));
        }

        public Builder displayOptions(@Nullable Output<FilterControlsRelativeDateTimeDisplayOptionsArgs> displayOptions) {
            $.displayOptions = displayOptions;
            return this;
        }

        public Builder displayOptions(FilterControlsRelativeDateTimeDisplayOptionsArgs displayOptions) {
            return displayOptions(Output.of(displayOptions));
        }

        public Builder filterControlId(Output<String> filterControlId) {
            $.filterControlId = filterControlId;
            return this;
        }

        public Builder filterControlId(String filterControlId) {
            return filterControlId(Output.of(filterControlId));
        }

        public Builder sourceFilterId(Output<String> sourceFilterId) {
            $.sourceFilterId = sourceFilterId;
            return this;
        }

        public Builder sourceFilterId(String sourceFilterId) {
            return sourceFilterId(Output.of(sourceFilterId));
        }

        public Builder title(Output<String> title) {
            $.title = title;
            return this;
        }

        public Builder title(String title) {
            return title(Output.of(title));
        }

        public FilterControlsRelativeDateTimeArgs build() {
            if ($.filterControlId == null) {
                throw new MissingRequiredPropertyException("FilterControlsRelativeDateTimeArgs", "filterControlId");
            }
            if ($.sourceFilterId == null) {
                throw new MissingRequiredPropertyException("FilterControlsRelativeDateTimeArgs", "sourceFilterId");
            }
            if ($.title == null) {
                throw new MissingRequiredPropertyException("FilterControlsRelativeDateTimeArgs", "title");
            }
            return $;
        }
    }

}
