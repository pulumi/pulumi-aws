// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.connect.outputs;

import com.pulumi.aws.connect.outputs.GetQueueOutboundCallerConfig;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetQueueResult {
    /**
     * @return ARN of the Queue.
     * 
     */
    private String arn;
    /**
     * @return Description of the Queue.
     * 
     */
    private String description;
    /**
     * @return Specifies the identifier of the Hours of Operation.
     * 
     */
    private String hoursOfOperationId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String instanceId;
    /**
     * @return Maximum number of contacts that can be in the queue before it is considered full. Minimum value of 0.
     * 
     */
    private Integer maxContacts;
    private String name;
    /**
     * @return A block that defines the outbound caller ID name, number, and outbound whisper flow. The Outbound Caller Config block is documented below.
     * 
     */
    private List<GetQueueOutboundCallerConfig> outboundCallerConfigs;
    /**
     * @return Identifier for the Queue.
     * 
     */
    private String queueId;
    /**
     * @return Description of the Queue. Values are `ENABLED` or `DISABLED`.
     * 
     */
    private String status;
    /**
     * @return Map of tags assigned to the Queue.
     * 
     */
    private Map<String,String> tags;

    private GetQueueResult() {}
    /**
     * @return ARN of the Queue.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return Description of the Queue.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Specifies the identifier of the Hours of Operation.
     * 
     */
    public String hoursOfOperationId() {
        return this.hoursOfOperationId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return Maximum number of contacts that can be in the queue before it is considered full. Minimum value of 0.
     * 
     */
    public Integer maxContacts() {
        return this.maxContacts;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return A block that defines the outbound caller ID name, number, and outbound whisper flow. The Outbound Caller Config block is documented below.
     * 
     */
    public List<GetQueueOutboundCallerConfig> outboundCallerConfigs() {
        return this.outboundCallerConfigs;
    }
    /**
     * @return Identifier for the Queue.
     * 
     */
    public String queueId() {
        return this.queueId;
    }
    /**
     * @return Description of the Queue. Values are `ENABLED` or `DISABLED`.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Map of tags assigned to the Queue.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetQueueResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private String description;
        private String hoursOfOperationId;
        private String id;
        private String instanceId;
        private Integer maxContacts;
        private String name;
        private List<GetQueueOutboundCallerConfig> outboundCallerConfigs;
        private String queueId;
        private String status;
        private Map<String,String> tags;
        public Builder() {}
        public Builder(GetQueueResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.description = defaults.description;
    	      this.hoursOfOperationId = defaults.hoursOfOperationId;
    	      this.id = defaults.id;
    	      this.instanceId = defaults.instanceId;
    	      this.maxContacts = defaults.maxContacts;
    	      this.name = defaults.name;
    	      this.outboundCallerConfigs = defaults.outboundCallerConfigs;
    	      this.queueId = defaults.queueId;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder hoursOfOperationId(String hoursOfOperationId) {
            this.hoursOfOperationId = Objects.requireNonNull(hoursOfOperationId);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            this.instanceId = Objects.requireNonNull(instanceId);
            return this;
        }
        @CustomType.Setter
        public Builder maxContacts(Integer maxContacts) {
            this.maxContacts = Objects.requireNonNull(maxContacts);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder outboundCallerConfigs(List<GetQueueOutboundCallerConfig> outboundCallerConfigs) {
            this.outboundCallerConfigs = Objects.requireNonNull(outboundCallerConfigs);
            return this;
        }
        public Builder outboundCallerConfigs(GetQueueOutboundCallerConfig... outboundCallerConfigs) {
            return outboundCallerConfigs(List.of(outboundCallerConfigs));
        }
        @CustomType.Setter
        public Builder queueId(String queueId) {
            this.queueId = Objects.requireNonNull(queueId);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public GetQueueResult build() {
            final var o = new GetQueueResult();
            o.arn = arn;
            o.description = description;
            o.hoursOfOperationId = hoursOfOperationId;
            o.id = id;
            o.instanceId = instanceId;
            o.maxContacts = maxContacts;
            o.name = name;
            o.outboundCallerConfigs = outboundCallerConfigs;
            o.queueId = queueId;
            o.status = status;
            o.tags = tags;
            return o;
        }
    }
}
