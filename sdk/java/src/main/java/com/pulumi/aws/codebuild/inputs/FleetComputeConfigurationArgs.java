// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codebuild.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FleetComputeConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final FleetComputeConfigurationArgs Empty = new FleetComputeConfigurationArgs();

    /**
     * Amount of disk space of the instance type included in the fleet.
     * 
     */
    @Import(name="disk")
    private @Nullable Output<Integer> disk;

    /**
     * @return Amount of disk space of the instance type included in the fleet.
     * 
     */
    public Optional<Output<Integer>> disk() {
        return Optional.ofNullable(this.disk);
    }

    /**
     * Machine type of the instance type included in the fleet. Valid values: `GENERAL`, `NVME`.
     * 
     */
    @Import(name="machineType")
    private @Nullable Output<String> machineType;

    /**
     * @return Machine type of the instance type included in the fleet. Valid values: `GENERAL`, `NVME`.
     * 
     */
    public Optional<Output<String>> machineType() {
        return Optional.ofNullable(this.machineType);
    }

    /**
     * Amount of memory of the instance type included in the fleet.
     * 
     */
    @Import(name="memory")
    private @Nullable Output<Integer> memory;

    /**
     * @return Amount of memory of the instance type included in the fleet.
     * 
     */
    public Optional<Output<Integer>> memory() {
        return Optional.ofNullable(this.memory);
    }

    /**
     * Number of vCPUs of the instance type included in the fleet.
     * 
     */
    @Import(name="vcpu")
    private @Nullable Output<Integer> vcpu;

    /**
     * @return Number of vCPUs of the instance type included in the fleet.
     * 
     */
    public Optional<Output<Integer>> vcpu() {
        return Optional.ofNullable(this.vcpu);
    }

    private FleetComputeConfigurationArgs() {}

    private FleetComputeConfigurationArgs(FleetComputeConfigurationArgs $) {
        this.disk = $.disk;
        this.machineType = $.machineType;
        this.memory = $.memory;
        this.vcpu = $.vcpu;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FleetComputeConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FleetComputeConfigurationArgs $;

        public Builder() {
            $ = new FleetComputeConfigurationArgs();
        }

        public Builder(FleetComputeConfigurationArgs defaults) {
            $ = new FleetComputeConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param disk Amount of disk space of the instance type included in the fleet.
         * 
         * @return builder
         * 
         */
        public Builder disk(@Nullable Output<Integer> disk) {
            $.disk = disk;
            return this;
        }

        /**
         * @param disk Amount of disk space of the instance type included in the fleet.
         * 
         * @return builder
         * 
         */
        public Builder disk(Integer disk) {
            return disk(Output.of(disk));
        }

        /**
         * @param machineType Machine type of the instance type included in the fleet. Valid values: `GENERAL`, `NVME`.
         * 
         * @return builder
         * 
         */
        public Builder machineType(@Nullable Output<String> machineType) {
            $.machineType = machineType;
            return this;
        }

        /**
         * @param machineType Machine type of the instance type included in the fleet. Valid values: `GENERAL`, `NVME`.
         * 
         * @return builder
         * 
         */
        public Builder machineType(String machineType) {
            return machineType(Output.of(machineType));
        }

        /**
         * @param memory Amount of memory of the instance type included in the fleet.
         * 
         * @return builder
         * 
         */
        public Builder memory(@Nullable Output<Integer> memory) {
            $.memory = memory;
            return this;
        }

        /**
         * @param memory Amount of memory of the instance type included in the fleet.
         * 
         * @return builder
         * 
         */
        public Builder memory(Integer memory) {
            return memory(Output.of(memory));
        }

        /**
         * @param vcpu Number of vCPUs of the instance type included in the fleet.
         * 
         * @return builder
         * 
         */
        public Builder vcpu(@Nullable Output<Integer> vcpu) {
            $.vcpu = vcpu;
            return this;
        }

        /**
         * @param vcpu Number of vCPUs of the instance type included in the fleet.
         * 
         * @return builder
         * 
         */
        public Builder vcpu(Integer vcpu) {
            return vcpu(Output.of(vcpu));
        }

        public FleetComputeConfigurationArgs build() {
            return $;
        }
    }

}
