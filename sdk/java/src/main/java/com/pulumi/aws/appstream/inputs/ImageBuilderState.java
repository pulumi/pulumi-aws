// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appstream.inputs;

import com.pulumi.aws.appstream.inputs.ImageBuilderAccessEndpointArgs;
import com.pulumi.aws.appstream.inputs.ImageBuilderDomainJoinInfoArgs;
import com.pulumi.aws.appstream.inputs.ImageBuilderVpcConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ImageBuilderState extends com.pulumi.resources.ResourceArgs {

    public static final ImageBuilderState Empty = new ImageBuilderState();

    @Import(name="accessEndpoints")
    private @Nullable Output<List<ImageBuilderAccessEndpointArgs>> accessEndpoints;

    public Optional<Output<List<ImageBuilderAccessEndpointArgs>>> accessEndpoints() {
        return Optional.ofNullable(this.accessEndpoints);
    }

    @Import(name="appstreamAgentVersion")
    private @Nullable Output<String> appstreamAgentVersion;

    public Optional<Output<String>> appstreamAgentVersion() {
        return Optional.ofNullable(this.appstreamAgentVersion);
    }

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="createdTime")
    private @Nullable Output<String> createdTime;

    public Optional<Output<String>> createdTime() {
        return Optional.ofNullable(this.createdTime);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="domainJoinInfo")
    private @Nullable Output<ImageBuilderDomainJoinInfoArgs> domainJoinInfo;

    public Optional<Output<ImageBuilderDomainJoinInfoArgs>> domainJoinInfo() {
        return Optional.ofNullable(this.domainJoinInfo);
    }

    @Import(name="enableDefaultInternetAccess")
    private @Nullable Output<Boolean> enableDefaultInternetAccess;

    public Optional<Output<Boolean>> enableDefaultInternetAccess() {
        return Optional.ofNullable(this.enableDefaultInternetAccess);
    }

    @Import(name="iamRoleArn")
    private @Nullable Output<String> iamRoleArn;

    public Optional<Output<String>> iamRoleArn() {
        return Optional.ofNullable(this.iamRoleArn);
    }

    @Import(name="imageArn")
    private @Nullable Output<String> imageArn;

    public Optional<Output<String>> imageArn() {
        return Optional.ofNullable(this.imageArn);
    }

    @Import(name="imageName")
    private @Nullable Output<String> imageName;

    public Optional<Output<String>> imageName() {
        return Optional.ofNullable(this.imageName);
    }

    @Import(name="instanceType")
    private @Nullable Output<String> instanceType;

    public Optional<Output<String>> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="state")
    private @Nullable Output<String> state;

    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="vpcConfig")
    private @Nullable Output<ImageBuilderVpcConfigArgs> vpcConfig;

    public Optional<Output<ImageBuilderVpcConfigArgs>> vpcConfig() {
        return Optional.ofNullable(this.vpcConfig);
    }

    private ImageBuilderState() {}

    private ImageBuilderState(ImageBuilderState $) {
        this.accessEndpoints = $.accessEndpoints;
        this.appstreamAgentVersion = $.appstreamAgentVersion;
        this.arn = $.arn;
        this.createdTime = $.createdTime;
        this.description = $.description;
        this.displayName = $.displayName;
        this.domainJoinInfo = $.domainJoinInfo;
        this.enableDefaultInternetAccess = $.enableDefaultInternetAccess;
        this.iamRoleArn = $.iamRoleArn;
        this.imageArn = $.imageArn;
        this.imageName = $.imageName;
        this.instanceType = $.instanceType;
        this.name = $.name;
        this.state = $.state;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.vpcConfig = $.vpcConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ImageBuilderState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ImageBuilderState $;

        public Builder() {
            $ = new ImageBuilderState();
        }

        public Builder(ImageBuilderState defaults) {
            $ = new ImageBuilderState(Objects.requireNonNull(defaults));
        }

        public Builder accessEndpoints(@Nullable Output<List<ImageBuilderAccessEndpointArgs>> accessEndpoints) {
            $.accessEndpoints = accessEndpoints;
            return this;
        }

        public Builder accessEndpoints(List<ImageBuilderAccessEndpointArgs> accessEndpoints) {
            return accessEndpoints(Output.of(accessEndpoints));
        }

        public Builder accessEndpoints(ImageBuilderAccessEndpointArgs... accessEndpoints) {
            return accessEndpoints(List.of(accessEndpoints));
        }

        public Builder appstreamAgentVersion(@Nullable Output<String> appstreamAgentVersion) {
            $.appstreamAgentVersion = appstreamAgentVersion;
            return this;
        }

        public Builder appstreamAgentVersion(String appstreamAgentVersion) {
            return appstreamAgentVersion(Output.of(appstreamAgentVersion));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder createdTime(@Nullable Output<String> createdTime) {
            $.createdTime = createdTime;
            return this;
        }

        public Builder createdTime(String createdTime) {
            return createdTime(Output.of(createdTime));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder domainJoinInfo(@Nullable Output<ImageBuilderDomainJoinInfoArgs> domainJoinInfo) {
            $.domainJoinInfo = domainJoinInfo;
            return this;
        }

        public Builder domainJoinInfo(ImageBuilderDomainJoinInfoArgs domainJoinInfo) {
            return domainJoinInfo(Output.of(domainJoinInfo));
        }

        public Builder enableDefaultInternetAccess(@Nullable Output<Boolean> enableDefaultInternetAccess) {
            $.enableDefaultInternetAccess = enableDefaultInternetAccess;
            return this;
        }

        public Builder enableDefaultInternetAccess(Boolean enableDefaultInternetAccess) {
            return enableDefaultInternetAccess(Output.of(enableDefaultInternetAccess));
        }

        public Builder iamRoleArn(@Nullable Output<String> iamRoleArn) {
            $.iamRoleArn = iamRoleArn;
            return this;
        }

        public Builder iamRoleArn(String iamRoleArn) {
            return iamRoleArn(Output.of(iamRoleArn));
        }

        public Builder imageArn(@Nullable Output<String> imageArn) {
            $.imageArn = imageArn;
            return this;
        }

        public Builder imageArn(String imageArn) {
            return imageArn(Output.of(imageArn));
        }

        public Builder imageName(@Nullable Output<String> imageName) {
            $.imageName = imageName;
            return this;
        }

        public Builder imageName(String imageName) {
            return imageName(Output.of(imageName));
        }

        public Builder instanceType(@Nullable Output<String> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        public Builder instanceType(String instanceType) {
            return instanceType(Output.of(instanceType));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        public Builder state(String state) {
            return state(Output.of(state));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder vpcConfig(@Nullable Output<ImageBuilderVpcConfigArgs> vpcConfig) {
            $.vpcConfig = vpcConfig;
            return this;
        }

        public Builder vpcConfig(ImageBuilderVpcConfigArgs vpcConfig) {
            return vpcConfig(Output.of(vpcConfig));
        }

        public ImageBuilderState build() {
            return $;
        }
    }

}
