// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCapacityBlockOfferingArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCapacityBlockOfferingArgs Empty = new GetCapacityBlockOfferingArgs();

    /**
     * The amount of time of the Capacity Block reservation in hours.
     * 
     */
    @Import(name="capacityDurationHours", required=true)
    private Output<Integer> capacityDurationHours;

    /**
     * @return The amount of time of the Capacity Block reservation in hours.
     * 
     */
    public Output<Integer> capacityDurationHours() {
        return this.capacityDurationHours;
    }

    /**
     * The date and time at which the Capacity Block Reservation expires. When a Capacity Reservation expires, the reserved capacity is released and you can no longer launch instances into it. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
     * 
     */
    @Import(name="endDateRange")
    private @Nullable Output<String> endDateRange;

    /**
     * @return The date and time at which the Capacity Block Reservation expires. When a Capacity Reservation expires, the reserved capacity is released and you can no longer launch instances into it. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
     * 
     */
    public Optional<Output<String>> endDateRange() {
        return Optional.ofNullable(this.endDateRange);
    }

    /**
     * The number of instances for which to reserve capacity.
     * 
     */
    @Import(name="instanceCount", required=true)
    private Output<Integer> instanceCount;

    /**
     * @return The number of instances for which to reserve capacity.
     * 
     */
    public Output<Integer> instanceCount() {
        return this.instanceCount;
    }

    /**
     * The instance type for which to reserve capacity.
     * 
     */
    @Import(name="instanceType", required=true)
    private Output<String> instanceType;

    /**
     * @return The instance type for which to reserve capacity.
     * 
     */
    public Output<String> instanceType() {
        return this.instanceType;
    }

    /**
     * The date and time at which the Capacity Block Reservation starts. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
     * 
     */
    @Import(name="startDateRange")
    private @Nullable Output<String> startDateRange;

    /**
     * @return The date and time at which the Capacity Block Reservation starts. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
     * 
     */
    public Optional<Output<String>> startDateRange() {
        return Optional.ofNullable(this.startDateRange);
    }

    private GetCapacityBlockOfferingArgs() {}

    private GetCapacityBlockOfferingArgs(GetCapacityBlockOfferingArgs $) {
        this.capacityDurationHours = $.capacityDurationHours;
        this.endDateRange = $.endDateRange;
        this.instanceCount = $.instanceCount;
        this.instanceType = $.instanceType;
        this.startDateRange = $.startDateRange;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCapacityBlockOfferingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCapacityBlockOfferingArgs $;

        public Builder() {
            $ = new GetCapacityBlockOfferingArgs();
        }

        public Builder(GetCapacityBlockOfferingArgs defaults) {
            $ = new GetCapacityBlockOfferingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param capacityDurationHours The amount of time of the Capacity Block reservation in hours.
         * 
         * @return builder
         * 
         */
        public Builder capacityDurationHours(Output<Integer> capacityDurationHours) {
            $.capacityDurationHours = capacityDurationHours;
            return this;
        }

        /**
         * @param capacityDurationHours The amount of time of the Capacity Block reservation in hours.
         * 
         * @return builder
         * 
         */
        public Builder capacityDurationHours(Integer capacityDurationHours) {
            return capacityDurationHours(Output.of(capacityDurationHours));
        }

        /**
         * @param endDateRange The date and time at which the Capacity Block Reservation expires. When a Capacity Reservation expires, the reserved capacity is released and you can no longer launch instances into it. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
         * 
         * @return builder
         * 
         */
        public Builder endDateRange(@Nullable Output<String> endDateRange) {
            $.endDateRange = endDateRange;
            return this;
        }

        /**
         * @param endDateRange The date and time at which the Capacity Block Reservation expires. When a Capacity Reservation expires, the reserved capacity is released and you can no longer launch instances into it. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
         * 
         * @return builder
         * 
         */
        public Builder endDateRange(String endDateRange) {
            return endDateRange(Output.of(endDateRange));
        }

        /**
         * @param instanceCount The number of instances for which to reserve capacity.
         * 
         * @return builder
         * 
         */
        public Builder instanceCount(Output<Integer> instanceCount) {
            $.instanceCount = instanceCount;
            return this;
        }

        /**
         * @param instanceCount The number of instances for which to reserve capacity.
         * 
         * @return builder
         * 
         */
        public Builder instanceCount(Integer instanceCount) {
            return instanceCount(Output.of(instanceCount));
        }

        /**
         * @param instanceType The instance type for which to reserve capacity.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(Output<String> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        /**
         * @param instanceType The instance type for which to reserve capacity.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(String instanceType) {
            return instanceType(Output.of(instanceType));
        }

        /**
         * @param startDateRange The date and time at which the Capacity Block Reservation starts. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
         * 
         * @return builder
         * 
         */
        public Builder startDateRange(@Nullable Output<String> startDateRange) {
            $.startDateRange = startDateRange;
            return this;
        }

        /**
         * @param startDateRange The date and time at which the Capacity Block Reservation starts. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
         * 
         * @return builder
         * 
         */
        public Builder startDateRange(String startDateRange) {
            return startDateRange(Output.of(startDateRange));
        }

        public GetCapacityBlockOfferingArgs build() {
            if ($.capacityDurationHours == null) {
                throw new MissingRequiredPropertyException("GetCapacityBlockOfferingArgs", "capacityDurationHours");
            }
            if ($.instanceCount == null) {
                throw new MissingRequiredPropertyException("GetCapacityBlockOfferingArgs", "instanceCount");
            }
            if ($.instanceType == null) {
                throw new MissingRequiredPropertyException("GetCapacityBlockOfferingArgs", "instanceType");
            }
            return $;
        }
    }

}
