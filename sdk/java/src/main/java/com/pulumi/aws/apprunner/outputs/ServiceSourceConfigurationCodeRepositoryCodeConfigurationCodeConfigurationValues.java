// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apprunner.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues {
    /**
     * @return Command App Runner runs to build your application.
     * 
     */
    private @Nullable String buildCommand;
    /**
     * @return Port that your application listens to in the container. Defaults to `&#34;8080&#34;`.
     * 
     */
    private @Nullable String port;
    /**
     * @return Runtime environment type for building and running an App Runner service. Represents a programming language runtime. Valid values: `PYTHON_3`, `NODEJS_12`, `NODEJS_14`, `NODEJS_16`, `CORRETTO_8`, `CORRETTO_11`, `GO_1`, `DOTNET_6`, `PHP_81`, `RUBY_31`.
     * 
     */
    private String runtime;
    /**
     * @return Secrets and parameters available to your service as environment variables. A map of key/value pairs, where the key is the desired name of the Secret in the environment (i.e. it does not have to match the name of the secret in Secrets Manager or SSM Parameter Store), and the value is the ARN of the secret from AWS Secrets Manager or the ARN of the parameter in AWS SSM Parameter Store.
     * 
     */
    private @Nullable Map<String,String> runtimeEnvironmentSecrets;
    /**
     * @return Environment variables available to your running App Runner service. A map of key/value pairs. Keys with a prefix of `AWSAPPRUNNER` are reserved for system use and aren&#39;t valid.
     * 
     */
    private @Nullable Map<String,String> runtimeEnvironmentVariables;
    /**
     * @return Command App Runner runs to start your application.
     * 
     */
    private @Nullable String startCommand;

    private ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues() {}
    /**
     * @return Command App Runner runs to build your application.
     * 
     */
    public Optional<String> buildCommand() {
        return Optional.ofNullable(this.buildCommand);
    }
    /**
     * @return Port that your application listens to in the container. Defaults to `&#34;8080&#34;`.
     * 
     */
    public Optional<String> port() {
        return Optional.ofNullable(this.port);
    }
    /**
     * @return Runtime environment type for building and running an App Runner service. Represents a programming language runtime. Valid values: `PYTHON_3`, `NODEJS_12`, `NODEJS_14`, `NODEJS_16`, `CORRETTO_8`, `CORRETTO_11`, `GO_1`, `DOTNET_6`, `PHP_81`, `RUBY_31`.
     * 
     */
    public String runtime() {
        return this.runtime;
    }
    /**
     * @return Secrets and parameters available to your service as environment variables. A map of key/value pairs, where the key is the desired name of the Secret in the environment (i.e. it does not have to match the name of the secret in Secrets Manager or SSM Parameter Store), and the value is the ARN of the secret from AWS Secrets Manager or the ARN of the parameter in AWS SSM Parameter Store.
     * 
     */
    public Map<String,String> runtimeEnvironmentSecrets() {
        return this.runtimeEnvironmentSecrets == null ? Map.of() : this.runtimeEnvironmentSecrets;
    }
    /**
     * @return Environment variables available to your running App Runner service. A map of key/value pairs. Keys with a prefix of `AWSAPPRUNNER` are reserved for system use and aren&#39;t valid.
     * 
     */
    public Map<String,String> runtimeEnvironmentVariables() {
        return this.runtimeEnvironmentVariables == null ? Map.of() : this.runtimeEnvironmentVariables;
    }
    /**
     * @return Command App Runner runs to start your application.
     * 
     */
    public Optional<String> startCommand() {
        return Optional.ofNullable(this.startCommand);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String buildCommand;
        private @Nullable String port;
        private String runtime;
        private @Nullable Map<String,String> runtimeEnvironmentSecrets;
        private @Nullable Map<String,String> runtimeEnvironmentVariables;
        private @Nullable String startCommand;
        public Builder() {}
        public Builder(ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.buildCommand = defaults.buildCommand;
    	      this.port = defaults.port;
    	      this.runtime = defaults.runtime;
    	      this.runtimeEnvironmentSecrets = defaults.runtimeEnvironmentSecrets;
    	      this.runtimeEnvironmentVariables = defaults.runtimeEnvironmentVariables;
    	      this.startCommand = defaults.startCommand;
        }

        @CustomType.Setter
        public Builder buildCommand(@Nullable String buildCommand) {

            this.buildCommand = buildCommand;
            return this;
        }
        @CustomType.Setter
        public Builder port(@Nullable String port) {

            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder runtime(String runtime) {
            if (runtime == null) {
              throw new MissingRequiredPropertyException("ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues", "runtime");
            }
            this.runtime = runtime;
            return this;
        }
        @CustomType.Setter
        public Builder runtimeEnvironmentSecrets(@Nullable Map<String,String> runtimeEnvironmentSecrets) {

            this.runtimeEnvironmentSecrets = runtimeEnvironmentSecrets;
            return this;
        }
        @CustomType.Setter
        public Builder runtimeEnvironmentVariables(@Nullable Map<String,String> runtimeEnvironmentVariables) {

            this.runtimeEnvironmentVariables = runtimeEnvironmentVariables;
            return this;
        }
        @CustomType.Setter
        public Builder startCommand(@Nullable String startCommand) {

            this.startCommand = startCommand;
            return this;
        }
        public ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues build() {
            final var _resultValue = new ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues();
            _resultValue.buildCommand = buildCommand;
            _resultValue.port = port;
            _resultValue.runtime = runtime;
            _resultValue.runtimeEnvironmentSecrets = runtimeEnvironmentSecrets;
            _resultValue.runtimeEnvironmentVariables = runtimeEnvironmentVariables;
            _resultValue.startCommand = startCommand;
            return _resultValue;
        }
    }
}
