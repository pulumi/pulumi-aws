// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.opsworks;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.opsworks.StackArgs;
import com.pulumi.aws.opsworks.inputs.StackState;
import com.pulumi.aws.opsworks.outputs.StackCustomCookbooksSource;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="aws:opsworks/stack:Stack")
public class Stack extends com.pulumi.resources.CustomResource {
    @Export(name="agentVersion", refs={String.class}, tree="[0]")
    private Output<String> agentVersion;

    public Output<String> agentVersion() {
        return this.agentVersion;
    }
    @Export(name="arn", refs={String.class}, tree="[0]")
    private Output<String> arn;

    public Output<String> arn() {
        return this.arn;
    }
    @Export(name="berkshelfVersion", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> berkshelfVersion;

    public Output<Optional<String>> berkshelfVersion() {
        return Codegen.optional(this.berkshelfVersion);
    }
    @Export(name="color", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> color;

    public Output<Optional<String>> color() {
        return Codegen.optional(this.color);
    }
    @Export(name="configurationManagerName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> configurationManagerName;

    public Output<Optional<String>> configurationManagerName() {
        return Codegen.optional(this.configurationManagerName);
    }
    @Export(name="configurationManagerVersion", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> configurationManagerVersion;

    public Output<Optional<String>> configurationManagerVersion() {
        return Codegen.optional(this.configurationManagerVersion);
    }
    @Export(name="customCookbooksSources", refs={List.class,StackCustomCookbooksSource.class}, tree="[0,1]")
    private Output<List<StackCustomCookbooksSource>> customCookbooksSources;

    public Output<List<StackCustomCookbooksSource>> customCookbooksSources() {
        return this.customCookbooksSources;
    }
    @Export(name="customJson", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> customJson;

    public Output<Optional<String>> customJson() {
        return Codegen.optional(this.customJson);
    }
    @Export(name="defaultAvailabilityZone", refs={String.class}, tree="[0]")
    private Output<String> defaultAvailabilityZone;

    public Output<String> defaultAvailabilityZone() {
        return this.defaultAvailabilityZone;
    }
    @Export(name="defaultInstanceProfileArn", refs={String.class}, tree="[0]")
    private Output<String> defaultInstanceProfileArn;

    public Output<String> defaultInstanceProfileArn() {
        return this.defaultInstanceProfileArn;
    }
    @Export(name="defaultOs", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> defaultOs;

    public Output<Optional<String>> defaultOs() {
        return Codegen.optional(this.defaultOs);
    }
    @Export(name="defaultRootDeviceType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> defaultRootDeviceType;

    public Output<Optional<String>> defaultRootDeviceType() {
        return Codegen.optional(this.defaultRootDeviceType);
    }
    @Export(name="defaultSshKeyName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> defaultSshKeyName;

    public Output<Optional<String>> defaultSshKeyName() {
        return Codegen.optional(this.defaultSshKeyName);
    }
    @Export(name="defaultSubnetId", refs={String.class}, tree="[0]")
    private Output<String> defaultSubnetId;

    public Output<String> defaultSubnetId() {
        return this.defaultSubnetId;
    }
    @Export(name="hostnameTheme", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> hostnameTheme;

    public Output<Optional<String>> hostnameTheme() {
        return Codegen.optional(this.hostnameTheme);
    }
    @Export(name="manageBerkshelf", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> manageBerkshelf;

    public Output<Optional<Boolean>> manageBerkshelf() {
        return Codegen.optional(this.manageBerkshelf);
    }
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    public Output<String> region() {
        return this.region;
    }
    @Export(name="serviceRoleArn", refs={String.class}, tree="[0]")
    private Output<String> serviceRoleArn;

    public Output<String> serviceRoleArn() {
        return this.serviceRoleArn;
    }
    @Export(name="stackEndpoint", refs={String.class}, tree="[0]")
    private Output<String> stackEndpoint;

    public Output<String> stackEndpoint() {
        return this.stackEndpoint;
    }
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    @Export(name="tagsAll", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll;
    }
    @Export(name="useCustomCookbooks", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> useCustomCookbooks;

    public Output<Optional<Boolean>> useCustomCookbooks() {
        return Codegen.optional(this.useCustomCookbooks);
    }
    @Export(name="useOpsworksSecurityGroups", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> useOpsworksSecurityGroups;

    public Output<Optional<Boolean>> useOpsworksSecurityGroups() {
        return Codegen.optional(this.useOpsworksSecurityGroups);
    }
    @Export(name="vpcId", refs={String.class}, tree="[0]")
    private Output<String> vpcId;

    public Output<String> vpcId() {
        return this.vpcId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Stack(String name) {
        this(name, StackArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Stack(String name, StackArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Stack(String name, StackArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:opsworks/stack:Stack", name, args == null ? StackArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Stack(String name, Output<String> id, @Nullable StackState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:opsworks/stack:Stack", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Stack get(String name, Output<String> id, @Nullable StackState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Stack(name, id, state, options);
    }
}
