// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.route53.inputs;

import com.pulumi.aws.route53.inputs.RecordsExclusiveResourceRecordSetGeoproximityLocationCoordinatesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RecordsExclusiveResourceRecordSetGeoproximityLocationArgs extends com.pulumi.resources.ResourceArgs {

    public static final RecordsExclusiveResourceRecordSetGeoproximityLocationArgs Empty = new RecordsExclusiveResourceRecordSetGeoproximityLocationArgs();

    /**
     * AWS region of the resource where DNS traffic is directed to.
     * 
     */
    @Import(name="awsRegion")
    private @Nullable Output<String> awsRegion;

    /**
     * @return AWS region of the resource where DNS traffic is directed to.
     * 
     */
    public Optional<Output<String>> awsRegion() {
        return Optional.ofNullable(this.awsRegion);
    }

    /**
     * Increases or decreases the size of the geographic region from which Route 53 routes traffic to a resource.
     * To expand the size of the geographic region from which Route 53 routes traffic to a resource, specify a positive integer from `1` to `99`.
     * To shrink the size of the geographic region from which Route 53 routes traffic to a resource, specify a negative bias of `-1` to `-99`.
     * See the [AWS documentation](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-geoproximity.html) for additional details.
     * 
     */
    @Import(name="bias")
    private @Nullable Output<Integer> bias;

    /**
     * @return Increases or decreases the size of the geographic region from which Route 53 routes traffic to a resource.
     * To expand the size of the geographic region from which Route 53 routes traffic to a resource, specify a positive integer from `1` to `99`.
     * To shrink the size of the geographic region from which Route 53 routes traffic to a resource, specify a negative bias of `-1` to `-99`.
     * See the [AWS documentation](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-geoproximity.html) for additional details.
     * 
     */
    public Optional<Output<Integer>> bias() {
        return Optional.ofNullable(this.bias);
    }

    /**
     * Coordinates for a geoproximity resource record.
     * See `coordinates` below.
     * 
     */
    @Import(name="coordinates")
    private @Nullable Output<RecordsExclusiveResourceRecordSetGeoproximityLocationCoordinatesArgs> coordinates;

    /**
     * @return Coordinates for a geoproximity resource record.
     * See `coordinates` below.
     * 
     */
    public Optional<Output<RecordsExclusiveResourceRecordSetGeoproximityLocationCoordinatesArgs>> coordinates() {
        return Optional.ofNullable(this.coordinates);
    }

    /**
     * AWS local zone group.
     * Identify the Local Zones Group for a specific Local Zone by using the [`describe-availability-zones` CLI command](https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-availability-zones.html).
     * 
     */
    @Import(name="localZoneGroup")
    private @Nullable Output<String> localZoneGroup;

    /**
     * @return AWS local zone group.
     * Identify the Local Zones Group for a specific Local Zone by using the [`describe-availability-zones` CLI command](https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-availability-zones.html).
     * 
     */
    public Optional<Output<String>> localZoneGroup() {
        return Optional.ofNullable(this.localZoneGroup);
    }

    private RecordsExclusiveResourceRecordSetGeoproximityLocationArgs() {}

    private RecordsExclusiveResourceRecordSetGeoproximityLocationArgs(RecordsExclusiveResourceRecordSetGeoproximityLocationArgs $) {
        this.awsRegion = $.awsRegion;
        this.bias = $.bias;
        this.coordinates = $.coordinates;
        this.localZoneGroup = $.localZoneGroup;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RecordsExclusiveResourceRecordSetGeoproximityLocationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RecordsExclusiveResourceRecordSetGeoproximityLocationArgs $;

        public Builder() {
            $ = new RecordsExclusiveResourceRecordSetGeoproximityLocationArgs();
        }

        public Builder(RecordsExclusiveResourceRecordSetGeoproximityLocationArgs defaults) {
            $ = new RecordsExclusiveResourceRecordSetGeoproximityLocationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param awsRegion AWS region of the resource where DNS traffic is directed to.
         * 
         * @return builder
         * 
         */
        public Builder awsRegion(@Nullable Output<String> awsRegion) {
            $.awsRegion = awsRegion;
            return this;
        }

        /**
         * @param awsRegion AWS region of the resource where DNS traffic is directed to.
         * 
         * @return builder
         * 
         */
        public Builder awsRegion(String awsRegion) {
            return awsRegion(Output.of(awsRegion));
        }

        /**
         * @param bias Increases or decreases the size of the geographic region from which Route 53 routes traffic to a resource.
         * To expand the size of the geographic region from which Route 53 routes traffic to a resource, specify a positive integer from `1` to `99`.
         * To shrink the size of the geographic region from which Route 53 routes traffic to a resource, specify a negative bias of `-1` to `-99`.
         * See the [AWS documentation](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-geoproximity.html) for additional details.
         * 
         * @return builder
         * 
         */
        public Builder bias(@Nullable Output<Integer> bias) {
            $.bias = bias;
            return this;
        }

        /**
         * @param bias Increases or decreases the size of the geographic region from which Route 53 routes traffic to a resource.
         * To expand the size of the geographic region from which Route 53 routes traffic to a resource, specify a positive integer from `1` to `99`.
         * To shrink the size of the geographic region from which Route 53 routes traffic to a resource, specify a negative bias of `-1` to `-99`.
         * See the [AWS documentation](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-geoproximity.html) for additional details.
         * 
         * @return builder
         * 
         */
        public Builder bias(Integer bias) {
            return bias(Output.of(bias));
        }

        /**
         * @param coordinates Coordinates for a geoproximity resource record.
         * See `coordinates` below.
         * 
         * @return builder
         * 
         */
        public Builder coordinates(@Nullable Output<RecordsExclusiveResourceRecordSetGeoproximityLocationCoordinatesArgs> coordinates) {
            $.coordinates = coordinates;
            return this;
        }

        /**
         * @param coordinates Coordinates for a geoproximity resource record.
         * See `coordinates` below.
         * 
         * @return builder
         * 
         */
        public Builder coordinates(RecordsExclusiveResourceRecordSetGeoproximityLocationCoordinatesArgs coordinates) {
            return coordinates(Output.of(coordinates));
        }

        /**
         * @param localZoneGroup AWS local zone group.
         * Identify the Local Zones Group for a specific Local Zone by using the [`describe-availability-zones` CLI command](https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-availability-zones.html).
         * 
         * @return builder
         * 
         */
        public Builder localZoneGroup(@Nullable Output<String> localZoneGroup) {
            $.localZoneGroup = localZoneGroup;
            return this;
        }

        /**
         * @param localZoneGroup AWS local zone group.
         * Identify the Local Zones Group for a specific Local Zone by using the [`describe-availability-zones` CLI command](https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-availability-zones.html).
         * 
         * @return builder
         * 
         */
        public Builder localZoneGroup(String localZoneGroup) {
            return localZoneGroup(Output.of(localZoneGroup));
        }

        public RecordsExclusiveResourceRecordSetGeoproximityLocationArgs build() {
            return $;
        }
    }

}
