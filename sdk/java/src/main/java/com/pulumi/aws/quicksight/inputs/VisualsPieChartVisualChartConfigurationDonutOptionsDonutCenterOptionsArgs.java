// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VisualsPieChartVisualChartConfigurationDonutOptionsDonutCenterOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final VisualsPieChartVisualChartConfigurationDonutOptionsDonutCenterOptionsArgs Empty = new VisualsPieChartVisualChartConfigurationDonutOptionsDonutCenterOptionsArgs();

    @Import(name="labelVisibility")
    private @Nullable Output<String> labelVisibility;

    public Optional<Output<String>> labelVisibility() {
        return Optional.ofNullable(this.labelVisibility);
    }

    private VisualsPieChartVisualChartConfigurationDonutOptionsDonutCenterOptionsArgs() {}

    private VisualsPieChartVisualChartConfigurationDonutOptionsDonutCenterOptionsArgs(VisualsPieChartVisualChartConfigurationDonutOptionsDonutCenterOptionsArgs $) {
        this.labelVisibility = $.labelVisibility;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VisualsPieChartVisualChartConfigurationDonutOptionsDonutCenterOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VisualsPieChartVisualChartConfigurationDonutOptionsDonutCenterOptionsArgs $;

        public Builder() {
            $ = new VisualsPieChartVisualChartConfigurationDonutOptionsDonutCenterOptionsArgs();
        }

        public Builder(VisualsPieChartVisualChartConfigurationDonutOptionsDonutCenterOptionsArgs defaults) {
            $ = new VisualsPieChartVisualChartConfigurationDonutOptionsDonutCenterOptionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder labelVisibility(@Nullable Output<String> labelVisibility) {
            $.labelVisibility = labelVisibility;
            return this;
        }

        public Builder labelVisibility(String labelVisibility) {
            return labelVisibility(Output.of(labelVisibility));
        }

        public VisualsPieChartVisualChartConfigurationDonutOptionsDonutCenterOptionsArgs build() {
            return $;
        }
    }

}
