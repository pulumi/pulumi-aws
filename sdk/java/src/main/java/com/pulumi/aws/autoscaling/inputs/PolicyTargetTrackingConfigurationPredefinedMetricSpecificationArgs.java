// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.autoscaling.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicyTargetTrackingConfigurationPredefinedMetricSpecificationArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicyTargetTrackingConfigurationPredefinedMetricSpecificationArgs Empty = new PolicyTargetTrackingConfigurationPredefinedMetricSpecificationArgs();

    /**
     * Metric type.
     * 
     */
    @Import(name="predefinedMetricType", required=true)
    private Output<String> predefinedMetricType;

    /**
     * @return Metric type.
     * 
     */
    public Output<String> predefinedMetricType() {
        return this.predefinedMetricType;
    }

    /**
     * Identifies the resource associated with the metric type.
     * 
     */
    @Import(name="resourceLabel")
    private @Nullable Output<String> resourceLabel;

    /**
     * @return Identifies the resource associated with the metric type.
     * 
     */
    public Optional<Output<String>> resourceLabel() {
        return Optional.ofNullable(this.resourceLabel);
    }

    private PolicyTargetTrackingConfigurationPredefinedMetricSpecificationArgs() {}

    private PolicyTargetTrackingConfigurationPredefinedMetricSpecificationArgs(PolicyTargetTrackingConfigurationPredefinedMetricSpecificationArgs $) {
        this.predefinedMetricType = $.predefinedMetricType;
        this.resourceLabel = $.resourceLabel;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyTargetTrackingConfigurationPredefinedMetricSpecificationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyTargetTrackingConfigurationPredefinedMetricSpecificationArgs $;

        public Builder() {
            $ = new PolicyTargetTrackingConfigurationPredefinedMetricSpecificationArgs();
        }

        public Builder(PolicyTargetTrackingConfigurationPredefinedMetricSpecificationArgs defaults) {
            $ = new PolicyTargetTrackingConfigurationPredefinedMetricSpecificationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param predefinedMetricType Metric type.
         * 
         * @return builder
         * 
         */
        public Builder predefinedMetricType(Output<String> predefinedMetricType) {
            $.predefinedMetricType = predefinedMetricType;
            return this;
        }

        /**
         * @param predefinedMetricType Metric type.
         * 
         * @return builder
         * 
         */
        public Builder predefinedMetricType(String predefinedMetricType) {
            return predefinedMetricType(Output.of(predefinedMetricType));
        }

        /**
         * @param resourceLabel Identifies the resource associated with the metric type.
         * 
         * @return builder
         * 
         */
        public Builder resourceLabel(@Nullable Output<String> resourceLabel) {
            $.resourceLabel = resourceLabel;
            return this;
        }

        /**
         * @param resourceLabel Identifies the resource associated with the metric type.
         * 
         * @return builder
         * 
         */
        public Builder resourceLabel(String resourceLabel) {
            return resourceLabel(Output.of(resourceLabel));
        }

        public PolicyTargetTrackingConfigurationPredefinedMetricSpecificationArgs build() {
            if ($.predefinedMetricType == null) {
                throw new MissingRequiredPropertyException("PolicyTargetTrackingConfigurationPredefinedMetricSpecificationArgs", "predefinedMetricType");
            }
            return $;
        }
    }

}
