// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FleetOnDemandOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final FleetOnDemandOptionsArgs Empty = new FleetOnDemandOptionsArgs();

    /**
     * How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`, `capacity-optimized`, `capacity-optimized-prioritized` and `price-capacity-optimized`. Default: `lowestPrice`.
     * 
     */
    @Import(name="allocationStrategy")
    private @Nullable Output<String> allocationStrategy;

    /**
     * @return How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`, `capacity-optimized`, `capacity-optimized-prioritized` and `price-capacity-optimized`. Default: `lowestPrice`.
     * 
     */
    public Optional<Output<String>> allocationStrategy() {
        return Optional.ofNullable(this.allocationStrategy);
    }

    private FleetOnDemandOptionsArgs() {}

    private FleetOnDemandOptionsArgs(FleetOnDemandOptionsArgs $) {
        this.allocationStrategy = $.allocationStrategy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FleetOnDemandOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FleetOnDemandOptionsArgs $;

        public Builder() {
            $ = new FleetOnDemandOptionsArgs();
        }

        public Builder(FleetOnDemandOptionsArgs defaults) {
            $ = new FleetOnDemandOptionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allocationStrategy How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`, `capacity-optimized`, `capacity-optimized-prioritized` and `price-capacity-optimized`. Default: `lowestPrice`.
         * 
         * @return builder
         * 
         */
        public Builder allocationStrategy(@Nullable Output<String> allocationStrategy) {
            $.allocationStrategy = allocationStrategy;
            return this;
        }

        /**
         * @param allocationStrategy How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`, `capacity-optimized`, `capacity-optimized-prioritized` and `price-capacity-optimized`. Default: `lowestPrice`.
         * 
         * @return builder
         * 
         */
        public Builder allocationStrategy(String allocationStrategy) {
            return allocationStrategy(Output.of(allocationStrategy));
        }

        public FleetOnDemandOptionsArgs build() {
            return $;
        }
    }

}
