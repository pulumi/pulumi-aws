// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dynamodb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetTableWarmThroughput {
    private Integer readUnitsPerSecond;
    private Integer writeUnitsPerSecond;

    private GetTableWarmThroughput() {}
    public Integer readUnitsPerSecond() {
        return this.readUnitsPerSecond;
    }
    public Integer writeUnitsPerSecond() {
        return this.writeUnitsPerSecond;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTableWarmThroughput defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer readUnitsPerSecond;
        private Integer writeUnitsPerSecond;
        public Builder() {}
        public Builder(GetTableWarmThroughput defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.readUnitsPerSecond = defaults.readUnitsPerSecond;
    	      this.writeUnitsPerSecond = defaults.writeUnitsPerSecond;
        }

        @CustomType.Setter
        public Builder readUnitsPerSecond(Integer readUnitsPerSecond) {
            if (readUnitsPerSecond == null) {
              throw new MissingRequiredPropertyException("GetTableWarmThroughput", "readUnitsPerSecond");
            }
            this.readUnitsPerSecond = readUnitsPerSecond;
            return this;
        }
        @CustomType.Setter
        public Builder writeUnitsPerSecond(Integer writeUnitsPerSecond) {
            if (writeUnitsPerSecond == null) {
              throw new MissingRequiredPropertyException("GetTableWarmThroughput", "writeUnitsPerSecond");
            }
            this.writeUnitsPerSecond = writeUnitsPerSecond;
            return this;
        }
        public GetTableWarmThroughput build() {
            final var _resultValue = new GetTableWarmThroughput();
            _resultValue.readUnitsPerSecond = readUnitsPerSecond;
            _resultValue.writeUnitsPerSecond = writeUnitsPerSecond;
            return _resultValue;
        }
    }
}
