// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.glue.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetConnectionPhysicalConnectionRequirement {
    private String availabilityZone;
    private List<String> securityGroupIdLists;
    private String subnetId;

    private GetConnectionPhysicalConnectionRequirement() {}
    public String availabilityZone() {
        return this.availabilityZone;
    }
    public List<String> securityGroupIdLists() {
        return this.securityGroupIdLists;
    }
    public String subnetId() {
        return this.subnetId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConnectionPhysicalConnectionRequirement defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String availabilityZone;
        private List<String> securityGroupIdLists;
        private String subnetId;
        public Builder() {}
        public Builder(GetConnectionPhysicalConnectionRequirement defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityZone = defaults.availabilityZone;
    	      this.securityGroupIdLists = defaults.securityGroupIdLists;
    	      this.subnetId = defaults.subnetId;
        }

        @CustomType.Setter
        public Builder availabilityZone(String availabilityZone) {
            this.availabilityZone = Objects.requireNonNull(availabilityZone);
            return this;
        }
        @CustomType.Setter
        public Builder securityGroupIdLists(List<String> securityGroupIdLists) {
            this.securityGroupIdLists = Objects.requireNonNull(securityGroupIdLists);
            return this;
        }
        public Builder securityGroupIdLists(String... securityGroupIdLists) {
            return securityGroupIdLists(List.of(securityGroupIdLists));
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            this.subnetId = Objects.requireNonNull(subnetId);
            return this;
        }
        public GetConnectionPhysicalConnectionRequirement build() {
            final var _resultValue = new GetConnectionPhysicalConnectionRequirement();
            _resultValue.availabilityZone = availabilityZone;
            _resultValue.securityGroupIdLists = securityGroupIdLists;
            _resultValue.subnetId = subnetId;
            return _resultValue;
        }
    }
}
