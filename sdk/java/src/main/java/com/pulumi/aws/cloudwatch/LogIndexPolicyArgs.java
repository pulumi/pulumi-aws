// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudwatch;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class LogIndexPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogIndexPolicyArgs Empty = new LogIndexPolicyArgs();

    /**
     * Log group name to set the policy for.
     * 
     */
    @Import(name="logGroupName", required=true)
    private Output<String> logGroupName;

    /**
     * @return Log group name to set the policy for.
     * 
     */
    public Output<String> logGroupName() {
        return this.logGroupName;
    }

    /**
     * JSON policy document. This is a JSON formatted string.
     * 
     */
    @Import(name="policyDocument", required=true)
    private Output<String> policyDocument;

    /**
     * @return JSON policy document. This is a JSON formatted string.
     * 
     */
    public Output<String> policyDocument() {
        return this.policyDocument;
    }

    private LogIndexPolicyArgs() {}

    private LogIndexPolicyArgs(LogIndexPolicyArgs $) {
        this.logGroupName = $.logGroupName;
        this.policyDocument = $.policyDocument;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogIndexPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogIndexPolicyArgs $;

        public Builder() {
            $ = new LogIndexPolicyArgs();
        }

        public Builder(LogIndexPolicyArgs defaults) {
            $ = new LogIndexPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param logGroupName Log group name to set the policy for.
         * 
         * @return builder
         * 
         */
        public Builder logGroupName(Output<String> logGroupName) {
            $.logGroupName = logGroupName;
            return this;
        }

        /**
         * @param logGroupName Log group name to set the policy for.
         * 
         * @return builder
         * 
         */
        public Builder logGroupName(String logGroupName) {
            return logGroupName(Output.of(logGroupName));
        }

        /**
         * @param policyDocument JSON policy document. This is a JSON formatted string.
         * 
         * @return builder
         * 
         */
        public Builder policyDocument(Output<String> policyDocument) {
            $.policyDocument = policyDocument;
            return this;
        }

        /**
         * @param policyDocument JSON policy document. This is a JSON formatted string.
         * 
         * @return builder
         * 
         */
        public Builder policyDocument(String policyDocument) {
            return policyDocument(Output.of(policyDocument));
        }

        public LogIndexPolicyArgs build() {
            if ($.logGroupName == null) {
                throw new MissingRequiredPropertyException("LogIndexPolicyArgs", "logGroupName");
            }
            if ($.policyDocument == null) {
                throw new MissingRequiredPropertyException("LogIndexPolicyArgs", "policyDocument");
            }
            return $;
        }
    }

}
