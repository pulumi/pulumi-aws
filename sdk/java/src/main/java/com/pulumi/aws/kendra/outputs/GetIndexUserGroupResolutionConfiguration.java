// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kendra.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetIndexUserGroupResolutionConfiguration {
    /**
     * @return The identity store provider (mode) you want to use to fetch access levels of groups and users. AWS Single Sign-On is currently the only available mode. Your users and groups must exist in an AWS SSO identity source in order to use this mode. Valid Values are `AWS_SSO` or `NONE`.
     * 
     */
    private String userGroupResolutionMode;

    private GetIndexUserGroupResolutionConfiguration() {}
    /**
     * @return The identity store provider (mode) you want to use to fetch access levels of groups and users. AWS Single Sign-On is currently the only available mode. Your users and groups must exist in an AWS SSO identity source in order to use this mode. Valid Values are `AWS_SSO` or `NONE`.
     * 
     */
    public String userGroupResolutionMode() {
        return this.userGroupResolutionMode;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIndexUserGroupResolutionConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String userGroupResolutionMode;
        public Builder() {}
        public Builder(GetIndexUserGroupResolutionConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.userGroupResolutionMode = defaults.userGroupResolutionMode;
        }

        @CustomType.Setter
        public Builder userGroupResolutionMode(String userGroupResolutionMode) {
            if (userGroupResolutionMode == null) {
              throw new MissingRequiredPropertyException("GetIndexUserGroupResolutionConfiguration", "userGroupResolutionMode");
            }
            this.userGroupResolutionMode = userGroupResolutionMode;
            return this;
        }
        public GetIndexUserGroupResolutionConfiguration build() {
            final var _resultValue = new GetIndexUserGroupResolutionConfiguration();
            _resultValue.userGroupResolutionMode = userGroupResolutionMode;
            return _resultValue;
        }
    }
}
