// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AgentcoreGatewayTargetCredentialProviderConfigurationOauthArgs extends com.pulumi.resources.ResourceArgs {

    public static final AgentcoreGatewayTargetCredentialProviderConfigurationOauthArgs Empty = new AgentcoreGatewayTargetCredentialProviderConfigurationOauthArgs();

    /**
     * Map of custom parameters to include in OAuth requests.
     * 
     */
    @Import(name="customParameters")
    private @Nullable Output<Map<String,String>> customParameters;

    /**
     * @return Map of custom parameters to include in OAuth requests.
     * 
     */
    public Optional<Output<Map<String,String>>> customParameters() {
        return Optional.ofNullable(this.customParameters);
    }

    /**
     * ARN of the OIDC provider for OAuth authentication.
     * 
     */
    @Import(name="providerArn", required=true)
    private Output<String> providerArn;

    /**
     * @return ARN of the OIDC provider for OAuth authentication.
     * 
     */
    public Output<String> providerArn() {
        return this.providerArn;
    }

    /**
     * Set of OAuth scopes to request.
     * 
     */
    @Import(name="scopes", required=true)
    private Output<List<String>> scopes;

    /**
     * @return Set of OAuth scopes to request.
     * 
     */
    public Output<List<String>> scopes() {
        return this.scopes;
    }

    private AgentcoreGatewayTargetCredentialProviderConfigurationOauthArgs() {}

    private AgentcoreGatewayTargetCredentialProviderConfigurationOauthArgs(AgentcoreGatewayTargetCredentialProviderConfigurationOauthArgs $) {
        this.customParameters = $.customParameters;
        this.providerArn = $.providerArn;
        this.scopes = $.scopes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentcoreGatewayTargetCredentialProviderConfigurationOauthArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentcoreGatewayTargetCredentialProviderConfigurationOauthArgs $;

        public Builder() {
            $ = new AgentcoreGatewayTargetCredentialProviderConfigurationOauthArgs();
        }

        public Builder(AgentcoreGatewayTargetCredentialProviderConfigurationOauthArgs defaults) {
            $ = new AgentcoreGatewayTargetCredentialProviderConfigurationOauthArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customParameters Map of custom parameters to include in OAuth requests.
         * 
         * @return builder
         * 
         */
        public Builder customParameters(@Nullable Output<Map<String,String>> customParameters) {
            $.customParameters = customParameters;
            return this;
        }

        /**
         * @param customParameters Map of custom parameters to include in OAuth requests.
         * 
         * @return builder
         * 
         */
        public Builder customParameters(Map<String,String> customParameters) {
            return customParameters(Output.of(customParameters));
        }

        /**
         * @param providerArn ARN of the OIDC provider for OAuth authentication.
         * 
         * @return builder
         * 
         */
        public Builder providerArn(Output<String> providerArn) {
            $.providerArn = providerArn;
            return this;
        }

        /**
         * @param providerArn ARN of the OIDC provider for OAuth authentication.
         * 
         * @return builder
         * 
         */
        public Builder providerArn(String providerArn) {
            return providerArn(Output.of(providerArn));
        }

        /**
         * @param scopes Set of OAuth scopes to request.
         * 
         * @return builder
         * 
         */
        public Builder scopes(Output<List<String>> scopes) {
            $.scopes = scopes;
            return this;
        }

        /**
         * @param scopes Set of OAuth scopes to request.
         * 
         * @return builder
         * 
         */
        public Builder scopes(List<String> scopes) {
            return scopes(Output.of(scopes));
        }

        /**
         * @param scopes Set of OAuth scopes to request.
         * 
         * @return builder
         * 
         */
        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }

        public AgentcoreGatewayTargetCredentialProviderConfigurationOauthArgs build() {
            if ($.providerArn == null) {
                throw new MissingRequiredPropertyException("AgentcoreGatewayTargetCredentialProviderConfigurationOauthArgs", "providerArn");
            }
            if ($.scopes == null) {
                throw new MissingRequiredPropertyException("AgentcoreGatewayTargetCredentialProviderConfigurationOauthArgs", "scopes");
            }
            return $;
        }
    }

}
