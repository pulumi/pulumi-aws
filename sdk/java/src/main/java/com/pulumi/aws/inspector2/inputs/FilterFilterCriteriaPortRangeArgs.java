// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.inspector2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;


public final class FilterFilterCriteriaPortRangeArgs extends com.pulumi.resources.ResourceArgs {

    public static final FilterFilterCriteriaPortRangeArgs Empty = new FilterFilterCriteriaPortRangeArgs();

    /**
     * (Required) The beginning of the port range, inclusive.
     * 
     */
    @Import(name="beginInclusive", required=true)
    private Output<Integer> beginInclusive;

    /**
     * @return (Required) The beginning of the port range, inclusive.
     * 
     */
    public Output<Integer> beginInclusive() {
        return this.beginInclusive;
    }

    /**
     * (Required) The end of the port range, inclusive.
     * 
     */
    @Import(name="endInclusive", required=true)
    private Output<Integer> endInclusive;

    /**
     * @return (Required) The end of the port range, inclusive.
     * 
     */
    public Output<Integer> endInclusive() {
        return this.endInclusive;
    }

    private FilterFilterCriteriaPortRangeArgs() {}

    private FilterFilterCriteriaPortRangeArgs(FilterFilterCriteriaPortRangeArgs $) {
        this.beginInclusive = $.beginInclusive;
        this.endInclusive = $.endInclusive;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FilterFilterCriteriaPortRangeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FilterFilterCriteriaPortRangeArgs $;

        public Builder() {
            $ = new FilterFilterCriteriaPortRangeArgs();
        }

        public Builder(FilterFilterCriteriaPortRangeArgs defaults) {
            $ = new FilterFilterCriteriaPortRangeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param beginInclusive (Required) The beginning of the port range, inclusive.
         * 
         * @return builder
         * 
         */
        public Builder beginInclusive(Output<Integer> beginInclusive) {
            $.beginInclusive = beginInclusive;
            return this;
        }

        /**
         * @param beginInclusive (Required) The beginning of the port range, inclusive.
         * 
         * @return builder
         * 
         */
        public Builder beginInclusive(Integer beginInclusive) {
            return beginInclusive(Output.of(beginInclusive));
        }

        /**
         * @param endInclusive (Required) The end of the port range, inclusive.
         * 
         * @return builder
         * 
         */
        public Builder endInclusive(Output<Integer> endInclusive) {
            $.endInclusive = endInclusive;
            return this;
        }

        /**
         * @param endInclusive (Required) The end of the port range, inclusive.
         * 
         * @return builder
         * 
         */
        public Builder endInclusive(Integer endInclusive) {
            return endInclusive(Output.of(endInclusive));
        }

        public FilterFilterCriteriaPortRangeArgs build() {
            if ($.beginInclusive == null) {
                throw new MissingRequiredPropertyException("FilterFilterCriteriaPortRangeArgs", "beginInclusive");
            }
            if ($.endInclusive == null) {
                throw new MissingRequiredPropertyException("FilterFilterCriteriaPortRangeArgs", "endInclusive");
            }
            return $;
        }
    }

}
