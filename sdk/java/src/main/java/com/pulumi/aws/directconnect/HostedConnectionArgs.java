// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.directconnect;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HostedConnectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final HostedConnectionArgs Empty = new HostedConnectionArgs();

    @Import(name="bandwidth", required=true)
    private Output<String> bandwidth;

    public Output<String> bandwidth() {
        return this.bandwidth;
    }

    @Import(name="connectionId", required=true)
    private Output<String> connectionId;

    public Output<String> connectionId() {
        return this.connectionId;
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="ownerAccountId", required=true)
    private Output<String> ownerAccountId;

    public Output<String> ownerAccountId() {
        return this.ownerAccountId;
    }

    @Import(name="vlan", required=true)
    private Output<Integer> vlan;

    public Output<Integer> vlan() {
        return this.vlan;
    }

    private HostedConnectionArgs() {}

    private HostedConnectionArgs(HostedConnectionArgs $) {
        this.bandwidth = $.bandwidth;
        this.connectionId = $.connectionId;
        this.name = $.name;
        this.ownerAccountId = $.ownerAccountId;
        this.vlan = $.vlan;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HostedConnectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HostedConnectionArgs $;

        public Builder() {
            $ = new HostedConnectionArgs();
        }

        public Builder(HostedConnectionArgs defaults) {
            $ = new HostedConnectionArgs(Objects.requireNonNull(defaults));
        }

        public Builder bandwidth(Output<String> bandwidth) {
            $.bandwidth = bandwidth;
            return this;
        }

        public Builder bandwidth(String bandwidth) {
            return bandwidth(Output.of(bandwidth));
        }

        public Builder connectionId(Output<String> connectionId) {
            $.connectionId = connectionId;
            return this;
        }

        public Builder connectionId(String connectionId) {
            return connectionId(Output.of(connectionId));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder ownerAccountId(Output<String> ownerAccountId) {
            $.ownerAccountId = ownerAccountId;
            return this;
        }

        public Builder ownerAccountId(String ownerAccountId) {
            return ownerAccountId(Output.of(ownerAccountId));
        }

        public Builder vlan(Output<Integer> vlan) {
            $.vlan = vlan;
            return this;
        }

        public Builder vlan(Integer vlan) {
            return vlan(Output.of(vlan));
        }

        public HostedConnectionArgs build() {
            $.bandwidth = Objects.requireNonNull($.bandwidth, "expected parameter 'bandwidth' to be non-null");
            $.connectionId = Objects.requireNonNull($.connectionId, "expected parameter 'connectionId' to be non-null");
            $.ownerAccountId = Objects.requireNonNull($.ownerAccountId, "expected parameter 'ownerAccountId' to be non-null");
            $.vlan = Objects.requireNonNull($.vlan, "expected parameter 'vlan' to be non-null");
            return $;
        }
    }

}
