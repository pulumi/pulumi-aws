// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elasticbeanstalk.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EnvironmentSetting {
    /**
     * @return A unique name for this Environment. This name is used
     * in the application URL
     * 
     */
    private String name;
    private String namespace;
    private @Nullable String resource;
    private String value;

    private EnvironmentSetting() {}
    /**
     * @return A unique name for this Environment. This name is used
     * in the application URL
     * 
     */
    public String name() {
        return this.name;
    }
    public String namespace() {
        return this.namespace;
    }
    public Optional<String> resource() {
        return Optional.ofNullable(this.resource);
    }
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EnvironmentSetting defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String name;
        private String namespace;
        private @Nullable String resource;
        private String value;
        public Builder() {}
        public Builder(EnvironmentSetting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.namespace = defaults.namespace;
    	      this.resource = defaults.resource;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("EnvironmentSetting", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            if (namespace == null) {
              throw new MissingRequiredPropertyException("EnvironmentSetting", "namespace");
            }
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder resource(@Nullable String resource) {

            this.resource = resource;
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            if (value == null) {
              throw new MissingRequiredPropertyException("EnvironmentSetting", "value");
            }
            this.value = value;
            return this;
        }
        public EnvironmentSetting build() {
            final var _resultValue = new EnvironmentSetting();
            _resultValue.name = name;
            _resultValue.namespace = namespace;
            _resultValue.resource = resource;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
