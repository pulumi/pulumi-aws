// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.transfer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetConnectorSftpConfig {
    /**
     * @return List of the public portions of the host keys that are used to identify the servers the connector is connected to.
     * 
     */
    private List<String> trustedHostKeys;
    /**
     * @return Identifier for the secret in AWS Secrets Manager that contains the SFTP user&#39;s private key, and/or password.
     * 
     */
    private String userSecretId;

    private GetConnectorSftpConfig() {}
    /**
     * @return List of the public portions of the host keys that are used to identify the servers the connector is connected to.
     * 
     */
    public List<String> trustedHostKeys() {
        return this.trustedHostKeys;
    }
    /**
     * @return Identifier for the secret in AWS Secrets Manager that contains the SFTP user&#39;s private key, and/or password.
     * 
     */
    public String userSecretId() {
        return this.userSecretId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConnectorSftpConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> trustedHostKeys;
        private String userSecretId;
        public Builder() {}
        public Builder(GetConnectorSftpConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.trustedHostKeys = defaults.trustedHostKeys;
    	      this.userSecretId = defaults.userSecretId;
        }

        @CustomType.Setter
        public Builder trustedHostKeys(List<String> trustedHostKeys) {
            if (trustedHostKeys == null) {
              throw new MissingRequiredPropertyException("GetConnectorSftpConfig", "trustedHostKeys");
            }
            this.trustedHostKeys = trustedHostKeys;
            return this;
        }
        public Builder trustedHostKeys(String... trustedHostKeys) {
            return trustedHostKeys(List.of(trustedHostKeys));
        }
        @CustomType.Setter
        public Builder userSecretId(String userSecretId) {
            if (userSecretId == null) {
              throw new MissingRequiredPropertyException("GetConnectorSftpConfig", "userSecretId");
            }
            this.userSecretId = userSecretId;
            return this;
        }
        public GetConnectorSftpConfig build() {
            final var _resultValue = new GetConnectorSftpConfig();
            _resultValue.trustedHostKeys = trustedHostKeys;
            _resultValue.userSecretId = userSecretId;
            return _resultValue;
        }
    }
}
