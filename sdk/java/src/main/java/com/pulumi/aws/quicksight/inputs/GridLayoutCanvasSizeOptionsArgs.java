// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.GridLayoutCanvasSizeOptionsScreenCanvasSizeOptionsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GridLayoutCanvasSizeOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final GridLayoutCanvasSizeOptionsArgs Empty = new GridLayoutCanvasSizeOptionsArgs();

    @Import(name="screenCanvasSizeOptions")
    private @Nullable Output<GridLayoutCanvasSizeOptionsScreenCanvasSizeOptionsArgs> screenCanvasSizeOptions;

    public Optional<Output<GridLayoutCanvasSizeOptionsScreenCanvasSizeOptionsArgs>> screenCanvasSizeOptions() {
        return Optional.ofNullable(this.screenCanvasSizeOptions);
    }

    private GridLayoutCanvasSizeOptionsArgs() {}

    private GridLayoutCanvasSizeOptionsArgs(GridLayoutCanvasSizeOptionsArgs $) {
        this.screenCanvasSizeOptions = $.screenCanvasSizeOptions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GridLayoutCanvasSizeOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GridLayoutCanvasSizeOptionsArgs $;

        public Builder() {
            $ = new GridLayoutCanvasSizeOptionsArgs();
        }

        public Builder(GridLayoutCanvasSizeOptionsArgs defaults) {
            $ = new GridLayoutCanvasSizeOptionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder screenCanvasSizeOptions(@Nullable Output<GridLayoutCanvasSizeOptionsScreenCanvasSizeOptionsArgs> screenCanvasSizeOptions) {
            $.screenCanvasSizeOptions = screenCanvasSizeOptions;
            return this;
        }

        public Builder screenCanvasSizeOptions(GridLayoutCanvasSizeOptionsScreenCanvasSizeOptionsArgs screenCanvasSizeOptions) {
            return screenCanvasSizeOptions(Output.of(screenCanvasSizeOptions));
        }

        public GridLayoutCanvasSizeOptionsArgs build() {
            return $;
        }
    }

}
