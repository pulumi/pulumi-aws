// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainDomainSettingsDockerSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainDomainSettingsDockerSettingsArgs Empty = new DomainDomainSettingsDockerSettingsArgs();

    /**
     * Indicates whether the domain can access Docker. Valid values are `ENABLED` and `DISABLED`.
     * 
     */
    @Import(name="enableDockerAccess")
    private @Nullable Output<String> enableDockerAccess;

    /**
     * @return Indicates whether the domain can access Docker. Valid values are `ENABLED` and `DISABLED`.
     * 
     */
    public Optional<Output<String>> enableDockerAccess() {
        return Optional.ofNullable(this.enableDockerAccess);
    }

    /**
     * The list of Amazon Web Services accounts that are trusted when the domain is created in VPC-only mode.
     * 
     */
    @Import(name="vpcOnlyTrustedAccounts")
    private @Nullable Output<List<String>> vpcOnlyTrustedAccounts;

    /**
     * @return The list of Amazon Web Services accounts that are trusted when the domain is created in VPC-only mode.
     * 
     */
    public Optional<Output<List<String>>> vpcOnlyTrustedAccounts() {
        return Optional.ofNullable(this.vpcOnlyTrustedAccounts);
    }

    private DomainDomainSettingsDockerSettingsArgs() {}

    private DomainDomainSettingsDockerSettingsArgs(DomainDomainSettingsDockerSettingsArgs $) {
        this.enableDockerAccess = $.enableDockerAccess;
        this.vpcOnlyTrustedAccounts = $.vpcOnlyTrustedAccounts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainDomainSettingsDockerSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainDomainSettingsDockerSettingsArgs $;

        public Builder() {
            $ = new DomainDomainSettingsDockerSettingsArgs();
        }

        public Builder(DomainDomainSettingsDockerSettingsArgs defaults) {
            $ = new DomainDomainSettingsDockerSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enableDockerAccess Indicates whether the domain can access Docker. Valid values are `ENABLED` and `DISABLED`.
         * 
         * @return builder
         * 
         */
        public Builder enableDockerAccess(@Nullable Output<String> enableDockerAccess) {
            $.enableDockerAccess = enableDockerAccess;
            return this;
        }

        /**
         * @param enableDockerAccess Indicates whether the domain can access Docker. Valid values are `ENABLED` and `DISABLED`.
         * 
         * @return builder
         * 
         */
        public Builder enableDockerAccess(String enableDockerAccess) {
            return enableDockerAccess(Output.of(enableDockerAccess));
        }

        /**
         * @param vpcOnlyTrustedAccounts The list of Amazon Web Services accounts that are trusted when the domain is created in VPC-only mode.
         * 
         * @return builder
         * 
         */
        public Builder vpcOnlyTrustedAccounts(@Nullable Output<List<String>> vpcOnlyTrustedAccounts) {
            $.vpcOnlyTrustedAccounts = vpcOnlyTrustedAccounts;
            return this;
        }

        /**
         * @param vpcOnlyTrustedAccounts The list of Amazon Web Services accounts that are trusted when the domain is created in VPC-only mode.
         * 
         * @return builder
         * 
         */
        public Builder vpcOnlyTrustedAccounts(List<String> vpcOnlyTrustedAccounts) {
            return vpcOnlyTrustedAccounts(Output.of(vpcOnlyTrustedAccounts));
        }

        /**
         * @param vpcOnlyTrustedAccounts The list of Amazon Web Services accounts that are trusted when the domain is created in VPC-only mode.
         * 
         * @return builder
         * 
         */
        public Builder vpcOnlyTrustedAccounts(String... vpcOnlyTrustedAccounts) {
            return vpcOnlyTrustedAccounts(List.of(vpcOnlyTrustedAccounts));
        }

        public DomainDomainSettingsDockerSettingsArgs build() {
            return $;
        }
    }

}
