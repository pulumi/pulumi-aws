// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.datasync.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TaskTaskReportConfigReportOverridesArgs extends com.pulumi.resources.ResourceArgs {

    public static final TaskTaskReportConfigReportOverridesArgs Empty = new TaskTaskReportConfigReportOverridesArgs();

    /**
     * Specifies the level of reporting for the files, objects, and directories that DataSync attempted to delete in your destination location. This only applies if you configure your task to delete data in the destination that isn&#39;t in the source. Valid values: `ERRORS_ONLY` and `SUCCESSES_AND_ERRORS`.
     * 
     */
    @Import(name="deletedOverride")
    private @Nullable Output<String> deletedOverride;

    /**
     * @return Specifies the level of reporting for the files, objects, and directories that DataSync attempted to delete in your destination location. This only applies if you configure your task to delete data in the destination that isn&#39;t in the source. Valid values: `ERRORS_ONLY` and `SUCCESSES_AND_ERRORS`.
     * 
     */
    public Optional<Output<String>> deletedOverride() {
        return Optional.ofNullable(this.deletedOverride);
    }

    /**
     * Specifies the level of reporting for the files, objects, and directories that DataSync attempted to skip during your transfer. Valid values: `ERRORS_ONLY` and `SUCCESSES_AND_ERRORS`.
     * 
     */
    @Import(name="skippedOverride")
    private @Nullable Output<String> skippedOverride;

    /**
     * @return Specifies the level of reporting for the files, objects, and directories that DataSync attempted to skip during your transfer. Valid values: `ERRORS_ONLY` and `SUCCESSES_AND_ERRORS`.
     * 
     */
    public Optional<Output<String>> skippedOverride() {
        return Optional.ofNullable(this.skippedOverride);
    }

    /**
     * Specifies the level of reporting for the files, objects, and directories that DataSync attempted to transfer. Valid values: `ERRORS_ONLY` and `SUCCESSES_AND_ERRORS`.
     * 
     */
    @Import(name="transferredOverride")
    private @Nullable Output<String> transferredOverride;

    /**
     * @return Specifies the level of reporting for the files, objects, and directories that DataSync attempted to transfer. Valid values: `ERRORS_ONLY` and `SUCCESSES_AND_ERRORS`.
     * 
     */
    public Optional<Output<String>> transferredOverride() {
        return Optional.ofNullable(this.transferredOverride);
    }

    /**
     * Specifies the level of reporting for the files, objects, and directories that DataSync attempted to verify at the end of your transfer. Valid values: `ERRORS_ONLY` and `SUCCESSES_AND_ERRORS`.
     * 
     */
    @Import(name="verifiedOverride")
    private @Nullable Output<String> verifiedOverride;

    /**
     * @return Specifies the level of reporting for the files, objects, and directories that DataSync attempted to verify at the end of your transfer. Valid values: `ERRORS_ONLY` and `SUCCESSES_AND_ERRORS`.
     * 
     */
    public Optional<Output<String>> verifiedOverride() {
        return Optional.ofNullable(this.verifiedOverride);
    }

    private TaskTaskReportConfigReportOverridesArgs() {}

    private TaskTaskReportConfigReportOverridesArgs(TaskTaskReportConfigReportOverridesArgs $) {
        this.deletedOverride = $.deletedOverride;
        this.skippedOverride = $.skippedOverride;
        this.transferredOverride = $.transferredOverride;
        this.verifiedOverride = $.verifiedOverride;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TaskTaskReportConfigReportOverridesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TaskTaskReportConfigReportOverridesArgs $;

        public Builder() {
            $ = new TaskTaskReportConfigReportOverridesArgs();
        }

        public Builder(TaskTaskReportConfigReportOverridesArgs defaults) {
            $ = new TaskTaskReportConfigReportOverridesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deletedOverride Specifies the level of reporting for the files, objects, and directories that DataSync attempted to delete in your destination location. This only applies if you configure your task to delete data in the destination that isn&#39;t in the source. Valid values: `ERRORS_ONLY` and `SUCCESSES_AND_ERRORS`.
         * 
         * @return builder
         * 
         */
        public Builder deletedOverride(@Nullable Output<String> deletedOverride) {
            $.deletedOverride = deletedOverride;
            return this;
        }

        /**
         * @param deletedOverride Specifies the level of reporting for the files, objects, and directories that DataSync attempted to delete in your destination location. This only applies if you configure your task to delete data in the destination that isn&#39;t in the source. Valid values: `ERRORS_ONLY` and `SUCCESSES_AND_ERRORS`.
         * 
         * @return builder
         * 
         */
        public Builder deletedOverride(String deletedOverride) {
            return deletedOverride(Output.of(deletedOverride));
        }

        /**
         * @param skippedOverride Specifies the level of reporting for the files, objects, and directories that DataSync attempted to skip during your transfer. Valid values: `ERRORS_ONLY` and `SUCCESSES_AND_ERRORS`.
         * 
         * @return builder
         * 
         */
        public Builder skippedOverride(@Nullable Output<String> skippedOverride) {
            $.skippedOverride = skippedOverride;
            return this;
        }

        /**
         * @param skippedOverride Specifies the level of reporting for the files, objects, and directories that DataSync attempted to skip during your transfer. Valid values: `ERRORS_ONLY` and `SUCCESSES_AND_ERRORS`.
         * 
         * @return builder
         * 
         */
        public Builder skippedOverride(String skippedOverride) {
            return skippedOverride(Output.of(skippedOverride));
        }

        /**
         * @param transferredOverride Specifies the level of reporting for the files, objects, and directories that DataSync attempted to transfer. Valid values: `ERRORS_ONLY` and `SUCCESSES_AND_ERRORS`.
         * 
         * @return builder
         * 
         */
        public Builder transferredOverride(@Nullable Output<String> transferredOverride) {
            $.transferredOverride = transferredOverride;
            return this;
        }

        /**
         * @param transferredOverride Specifies the level of reporting for the files, objects, and directories that DataSync attempted to transfer. Valid values: `ERRORS_ONLY` and `SUCCESSES_AND_ERRORS`.
         * 
         * @return builder
         * 
         */
        public Builder transferredOverride(String transferredOverride) {
            return transferredOverride(Output.of(transferredOverride));
        }

        /**
         * @param verifiedOverride Specifies the level of reporting for the files, objects, and directories that DataSync attempted to verify at the end of your transfer. Valid values: `ERRORS_ONLY` and `SUCCESSES_AND_ERRORS`.
         * 
         * @return builder
         * 
         */
        public Builder verifiedOverride(@Nullable Output<String> verifiedOverride) {
            $.verifiedOverride = verifiedOverride;
            return this;
        }

        /**
         * @param verifiedOverride Specifies the level of reporting for the files, objects, and directories that DataSync attempted to verify at the end of your transfer. Valid values: `ERRORS_ONLY` and `SUCCESSES_AND_ERRORS`.
         * 
         * @return builder
         * 
         */
        public Builder verifiedOverride(String verifiedOverride) {
            return verifiedOverride(Output.of(verifiedOverride));
        }

        public TaskTaskReportConfigReportOverridesArgs build() {
            return $;
        }
    }

}
