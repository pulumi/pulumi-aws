// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ivs;

import com.pulumi.aws.ivs.inputs.RecordingConfigurationDestinationConfigurationArgs;
import com.pulumi.aws.ivs.inputs.RecordingConfigurationThumbnailConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RecordingConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final RecordingConfigurationArgs Empty = new RecordingConfigurationArgs();

    @Import(name="destinationConfiguration", required=true)
    private Output<RecordingConfigurationDestinationConfigurationArgs> destinationConfiguration;

    public Output<RecordingConfigurationDestinationConfigurationArgs> destinationConfiguration() {
        return this.destinationConfiguration;
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="recordingReconnectWindowSeconds")
    private @Nullable Output<Integer> recordingReconnectWindowSeconds;

    public Optional<Output<Integer>> recordingReconnectWindowSeconds() {
        return Optional.ofNullable(this.recordingReconnectWindowSeconds);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="thumbnailConfiguration")
    private @Nullable Output<RecordingConfigurationThumbnailConfigurationArgs> thumbnailConfiguration;

    public Optional<Output<RecordingConfigurationThumbnailConfigurationArgs>> thumbnailConfiguration() {
        return Optional.ofNullable(this.thumbnailConfiguration);
    }

    private RecordingConfigurationArgs() {}

    private RecordingConfigurationArgs(RecordingConfigurationArgs $) {
        this.destinationConfiguration = $.destinationConfiguration;
        this.name = $.name;
        this.recordingReconnectWindowSeconds = $.recordingReconnectWindowSeconds;
        this.tags = $.tags;
        this.thumbnailConfiguration = $.thumbnailConfiguration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RecordingConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RecordingConfigurationArgs $;

        public Builder() {
            $ = new RecordingConfigurationArgs();
        }

        public Builder(RecordingConfigurationArgs defaults) {
            $ = new RecordingConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder destinationConfiguration(Output<RecordingConfigurationDestinationConfigurationArgs> destinationConfiguration) {
            $.destinationConfiguration = destinationConfiguration;
            return this;
        }

        public Builder destinationConfiguration(RecordingConfigurationDestinationConfigurationArgs destinationConfiguration) {
            return destinationConfiguration(Output.of(destinationConfiguration));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder recordingReconnectWindowSeconds(@Nullable Output<Integer> recordingReconnectWindowSeconds) {
            $.recordingReconnectWindowSeconds = recordingReconnectWindowSeconds;
            return this;
        }

        public Builder recordingReconnectWindowSeconds(Integer recordingReconnectWindowSeconds) {
            return recordingReconnectWindowSeconds(Output.of(recordingReconnectWindowSeconds));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder thumbnailConfiguration(@Nullable Output<RecordingConfigurationThumbnailConfigurationArgs> thumbnailConfiguration) {
            $.thumbnailConfiguration = thumbnailConfiguration;
            return this;
        }

        public Builder thumbnailConfiguration(RecordingConfigurationThumbnailConfigurationArgs thumbnailConfiguration) {
            return thumbnailConfiguration(Output.of(thumbnailConfiguration));
        }

        public RecordingConfigurationArgs build() {
            $.destinationConfiguration = Objects.requireNonNull($.destinationConfiguration, "expected parameter 'destinationConfiguration' to be non-null");
            return $;
        }
    }

}
