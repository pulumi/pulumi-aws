// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.odb;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.odb.CloudVmClusterArgs;
import com.pulumi.aws.odb.inputs.CloudVmClusterState;
import com.pulumi.aws.odb.outputs.CloudVmClusterDataCollectionOptions;
import com.pulumi.aws.odb.outputs.CloudVmClusterIormConfigCach;
import com.pulumi.aws.odb.outputs.CloudVmClusterTimeouts;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * ### Basic Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.odb.CloudVmCluster;
 * import com.pulumi.aws.odb.CloudVmClusterArgs;
 * import com.pulumi.aws.odb.inputs.CloudVmClusterDataCollectionOptionsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var withMinimumParameter = new CloudVmCluster("withMinimumParameter", CloudVmClusterArgs.builder()
 *             .displayName("my-exa-infra")
 *             .cloudExadataInfrastructureId("exa_gjrmtxl4qk")
 *             .cpuCoreCount(6)
 *             .giVersion("23.0.0.0")
 *             .hostnamePrefix("apollo12")
 *             .sshPublicKeys("public-ssh-key")
 *             .odbNetworkId("odbnet_3l9st3litg")
 *             .isLocalBackupEnabled(true)
 *             .isSparseDiskgroupEnabled(true)
 *             .licenseModel("LICENSE_INCLUDED")
 *             .dataStorageSizeInTbs(20.0)
 *             .dbServers(            
 *                 "db-server-1",
 *                 "db-server-2")
 *             .dbNodeStorageSizeInGbs(120)
 *             .memorySizeInGbs(60)
 *             .dataCollectionOptions(CloudVmClusterDataCollectionOptionsArgs.builder()
 *                 .isDiagnosticsEventsEnabled(false)
 *                 .isHealthMonitoringEnabled(false)
 *                 .isIncidentLogsEnabled(false)
 *                 .build())
 *             .build());
 * 
 *         var withAllParameters = new CloudVmCluster("withAllParameters", CloudVmClusterArgs.builder()
 *             .displayName("my-vmc")
 *             .cloudExadataInfrastructureId("exa_gjrmtxl4qk")
 *             .cpuCoreCount(6)
 *             .giVersion("23.0.0.0")
 *             .hostnamePrefix("apollo12")
 *             .sshPublicKeys("my-ssh-key")
 *             .odbNetworkId("odbnet_3l9st3litg")
 *             .isLocalBackupEnabled(true)
 *             .isSparseDiskgroupEnabled(true)
 *             .licenseModel("LICENSE_INCLUDED")
 *             .dataStorageSizeInTbs(20.0)
 *             .dbServers(            
 *                 "my-dbserver-1",
 *                 "my-db-server-2")
 *             .dbNodeStorageSizeInGbs(120)
 *             .memorySizeInGbs(60)
 *             .clusterName("julia-13")
 *             .timezone("UTC")
 *             .scanListenerPortTcp(1521)
 *             .tags(Map.of("env", "dev"))
 *             .dataCollectionOptions(CloudVmClusterDataCollectionOptionsArgs.builder()
 *                 .isDiagnosticsEventsEnabled(true)
 *                 .isHealthMonitoringEnabled(true)
 *                 .isIncidentLogsEnabled(true)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * Using `pulumi import`, import cloud vm cluster using the `id`. For example:
 * 
 * ```sh
 * $ pulumi import aws:odb/cloudVmCluster:CloudVmCluster example example
 * ```
 * 
 */
@ResourceType(type="aws:odb/cloudVmCluster:CloudVmCluster")
public class CloudVmCluster extends com.pulumi.resources.CustomResource {
    /**
     * The Amazon Resource Name (ARN) for the cloud vm cluster.
     * 
     */
    @Export(name="arn", refs={String.class}, tree="[0]")
    private Output<String> arn;

    /**
     * @return The Amazon Resource Name (ARN) for the cloud vm cluster.
     * 
     */
    public Output<String> arn() {
        return this.arn;
    }
    /**
     * The unique identifier of the Exadata infrastructure for this VM cluster. Changing this will create a new resource.
     * 
     */
    @Export(name="cloudExadataInfrastructureId", refs={String.class}, tree="[0]")
    private Output<String> cloudExadataInfrastructureId;

    /**
     * @return The unique identifier of the Exadata infrastructure for this VM cluster. Changing this will create a new resource.
     * 
     */
    public Output<String> cloudExadataInfrastructureId() {
        return this.cloudExadataInfrastructureId;
    }
    /**
     * The name of the Grid Infrastructure (GI) cluster. Changing this will create a new resource.
     * 
     */
    @Export(name="clusterName", refs={String.class}, tree="[0]")
    private Output<String> clusterName;

    /**
     * @return The name of the Grid Infrastructure (GI) cluster. Changing this will create a new resource.
     * 
     */
    public Output<String> clusterName() {
        return this.clusterName;
    }
    /**
     * The compute model used when the instance is created or cloned — either ECPU or OCPU. ECPU is a virtualized compute unit; OCPU is a physical processor core with hyper-threading.
     * 
     */
    @Export(name="computeModel", refs={String.class}, tree="[0]")
    private Output<String> computeModel;

    /**
     * @return The compute model used when the instance is created or cloned — either ECPU or OCPU. ECPU is a virtualized compute unit; OCPU is a physical processor core with hyper-threading.
     * 
     */
    public Output<String> computeModel() {
        return this.computeModel;
    }
    /**
     * The number of CPU cores to enable on the VM cluster. Changing this will create a new resource.
     * 
     */
    @Export(name="cpuCoreCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> cpuCoreCount;

    /**
     * @return The number of CPU cores to enable on the VM cluster. Changing this will create a new resource.
     * 
     */
    public Output<Integer> cpuCoreCount() {
        return this.cpuCoreCount;
    }
    /**
     * The timestamp when the VM cluster was created.
     * 
     */
    @Export(name="createdAt", refs={String.class}, tree="[0]")
    private Output<String> createdAt;

    /**
     * @return The timestamp when the VM cluster was created.
     * 
     */
    public Output<String> createdAt() {
        return this.createdAt;
    }
    /**
     * The set of preferences for the various diagnostic collection options for the VM cluster.
     * 
     */
    @Export(name="dataCollectionOptions", refs={CloudVmClusterDataCollectionOptions.class}, tree="[0]")
    private Output</* @Nullable */ CloudVmClusterDataCollectionOptions> dataCollectionOptions;

    /**
     * @return The set of preferences for the various diagnostic collection options for the VM cluster.
     * 
     */
    public Output<Optional<CloudVmClusterDataCollectionOptions>> dataCollectionOptions() {
        return Codegen.optional(this.dataCollectionOptions);
    }
    /**
     * The size of the data disk group, in terabytes (TBs), to allocate for the VM cluster. Changing this will create a new resource.
     * 
     * The following arguments are optional:
     * 
     */
    @Export(name="dataStorageSizeInTbs", refs={Double.class}, tree="[0]")
    private Output<Double> dataStorageSizeInTbs;

    /**
     * @return The size of the data disk group, in terabytes (TBs), to allocate for the VM cluster. Changing this will create a new resource.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<Double> dataStorageSizeInTbs() {
        return this.dataStorageSizeInTbs;
    }
    /**
     * The amount of local node storage, in gigabytes (GBs), to allocate for the VM cluster. Changing this will create a new resource.
     * 
     */
    @Export(name="dbNodeStorageSizeInGbs", refs={Integer.class}, tree="[0]")
    private Output<Integer> dbNodeStorageSizeInGbs;

    /**
     * @return The amount of local node storage, in gigabytes (GBs), to allocate for the VM cluster. Changing this will create a new resource.
     * 
     */
    public Output<Integer> dbNodeStorageSizeInGbs() {
        return this.dbNodeStorageSizeInGbs;
    }
    /**
     * The list of database servers for the VM cluster. Changing this will create a new resource.
     * 
     */
    @Export(name="dbServers", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> dbServers;

    /**
     * @return The list of database servers for the VM cluster. Changing this will create a new resource.
     * 
     */
    public Output<List<String>> dbServers() {
        return this.dbServers;
    }
    /**
     * The type of redundancy for the VM cluster: NORMAL (2-way) or HIGH (3-way).
     * * `AttrDomain` - The domain name associated with the VM cluster.
     * 
     */
    @Export(name="diskRedundancy", refs={String.class}, tree="[0]")
    private Output<String> diskRedundancy;

    /**
     * @return The type of redundancy for the VM cluster: NORMAL (2-way) or HIGH (3-way).
     * * `AttrDomain` - The domain name associated with the VM cluster.
     * 
     */
    public Output<String> diskRedundancy() {
        return this.diskRedundancy;
    }
    /**
     * A user-friendly name for the VM cluster. Changing this will create a new resource.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return A user-friendly name for the VM cluster. Changing this will create a new resource.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * The domain name associated with the VM cluster.
     * 
     */
    @Export(name="domain", refs={String.class}, tree="[0]")
    private Output<String> domain;

    /**
     * @return The domain name associated with the VM cluster.
     * 
     */
    public Output<String> domain() {
        return this.domain;
    }
    /**
     * A valid software version of Oracle Grid Infrastructure (GI). To get the list of valid values, use the ListGiVersions operation and specify the shape of the Exadata infrastructure. Example: 19.0.0.0 Changing this will create a new resource.
     * 
     */
    @Export(name="giVersion", refs={String.class}, tree="[0]")
    private Output<String> giVersion;

    /**
     * @return A valid software version of Oracle Grid Infrastructure (GI). To get the list of valid values, use the ListGiVersions operation and specify the shape of the Exadata infrastructure. Example: 19.0.0.0 Changing this will create a new resource.
     * 
     */
    public Output<String> giVersion() {
        return this.giVersion;
    }
    /**
     * A complete software version of Oracle Grid Infrastructure (GI).
     * 
     */
    @Export(name="giVersionComputed", refs={String.class}, tree="[0]")
    private Output<String> giVersionComputed;

    /**
     * @return A complete software version of Oracle Grid Infrastructure (GI).
     * 
     */
    public Output<String> giVersionComputed() {
        return this.giVersionComputed;
    }
    /**
     * The host name prefix for the VM cluster. Constraints: - Can&#39;t be &#34;localhost&#34; or &#34;hostname&#34;. - Can&#39;t contain &#34;-version&#34;. - The maximum length of the combined hostname and domain is 63 characters. - The hostname must be unique within the subnet. Changing this will create a new resource.
     * 
     */
    @Export(name="hostnamePrefix", refs={String.class}, tree="[0]")
    private Output<String> hostnamePrefix;

    /**
     * @return The host name prefix for the VM cluster. Constraints: - Can&#39;t be &#34;localhost&#34; or &#34;hostname&#34;. - Can&#39;t contain &#34;-version&#34;. - The maximum length of the combined hostname and domain is 63 characters. - The hostname must be unique within the subnet. Changing this will create a new resource.
     * 
     */
    public Output<String> hostnamePrefix() {
        return this.hostnamePrefix;
    }
    /**
     * The host name for the VM cluster. Constraints: - Can&#39;t be &#34;localhost&#34; or &#34;hostname&#34;. - Can&#39;t contain &#34;-version&#34;. - The maximum length of the combined hostname and domain is 63 characters. - The hostname must be unique within the subnet. This member is required. Changing this will create a new resource.
     * 
     */
    @Export(name="hostnamePrefixComputed", refs={String.class}, tree="[0]")
    private Output<String> hostnamePrefixComputed;

    /**
     * @return The host name for the VM cluster. Constraints: - Can&#39;t be &#34;localhost&#34; or &#34;hostname&#34;. - Can&#39;t contain &#34;-version&#34;. - The maximum length of the combined hostname and domain is 63 characters. - The hostname must be unique within the subnet. This member is required. Changing this will create a new resource.
     * 
     */
    public Output<String> hostnamePrefixComputed() {
        return this.hostnamePrefixComputed;
    }
    /**
     * The Exadata IORM (I/O Resource Manager) configuration cache details for the VM cluster.
     * 
     */
    @Export(name="iormConfigCaches", refs={List.class,CloudVmClusterIormConfigCach.class}, tree="[0,1]")
    private Output<List<CloudVmClusterIormConfigCach>> iormConfigCaches;

    /**
     * @return The Exadata IORM (I/O Resource Manager) configuration cache details for the VM cluster.
     * 
     */
    public Output<List<CloudVmClusterIormConfigCach>> iormConfigCaches() {
        return this.iormConfigCaches;
    }
    /**
     * Specifies whether to enable database backups to local Exadata storage for the VM cluster. Changing this will create a new resource.
     * 
     */
    @Export(name="isLocalBackupEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isLocalBackupEnabled;

    /**
     * @return Specifies whether to enable database backups to local Exadata storage for the VM cluster. Changing this will create a new resource.
     * 
     */
    public Output<Boolean> isLocalBackupEnabled() {
        return this.isLocalBackupEnabled;
    }
    /**
     * Specifies whether to create a sparse disk group for the VM cluster. Changing this will create a new resource.
     * 
     */
    @Export(name="isSparseDiskgroupEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isSparseDiskgroupEnabled;

    /**
     * @return Specifies whether to create a sparse disk group for the VM cluster. Changing this will create a new resource.
     * 
     */
    public Output<Boolean> isSparseDiskgroupEnabled() {
        return this.isSparseDiskgroupEnabled;
    }
    /**
     * The OCID of the most recent maintenance update history entry.
     * 
     */
    @Export(name="lastUpdateHistoryEntryId", refs={String.class}, tree="[0]")
    private Output<String> lastUpdateHistoryEntryId;

    /**
     * @return The OCID of the most recent maintenance update history entry.
     * 
     */
    public Output<String> lastUpdateHistoryEntryId() {
        return this.lastUpdateHistoryEntryId;
    }
    /**
     * The Oracle license model to apply to the VM cluster. Default: LICENSE_INCLUDED. Changing this will create a new resource.
     * 
     */
    @Export(name="licenseModel", refs={String.class}, tree="[0]")
    private Output<String> licenseModel;

    /**
     * @return The Oracle license model to apply to the VM cluster. Default: LICENSE_INCLUDED. Changing this will create a new resource.
     * 
     */
    public Output<String> licenseModel() {
        return this.licenseModel;
    }
    /**
     * The listener port number configured on the VM cluster.
     * 
     */
    @Export(name="listenerPort", refs={Integer.class}, tree="[0]")
    private Output<Integer> listenerPort;

    /**
     * @return The listener port number configured on the VM cluster.
     * 
     */
    public Output<Integer> listenerPort() {
        return this.listenerPort;
    }
    /**
     * The amount of memory, in gigabytes (GBs), to allocate for the VM cluster. Changing this will create a new resource.
     * 
     */
    @Export(name="memorySizeInGbs", refs={Integer.class}, tree="[0]")
    private Output<Integer> memorySizeInGbs;

    /**
     * @return The amount of memory, in gigabytes (GBs), to allocate for the VM cluster. Changing this will create a new resource.
     * 
     */
    public Output<Integer> memorySizeInGbs() {
        return this.memorySizeInGbs;
    }
    /**
     * The total number of nodes in the VM cluster.
     * 
     */
    @Export(name="nodeCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> nodeCount;

    /**
     * @return The total number of nodes in the VM cluster.
     * 
     */
    public Output<Integer> nodeCount() {
        return this.nodeCount;
    }
    /**
     * The name of the OCI resource anchor associated with the VM cluster.
     * 
     */
    @Export(name="ociResourceAnchorName", refs={String.class}, tree="[0]")
    private Output<String> ociResourceAnchorName;

    /**
     * @return The name of the OCI resource anchor associated with the VM cluster.
     * 
     */
    public Output<String> ociResourceAnchorName() {
        return this.ociResourceAnchorName;
    }
    /**
     * The HTTPS link to the VM cluster resource in OCI.
     * 
     */
    @Export(name="ociUrl", refs={String.class}, tree="[0]")
    private Output<String> ociUrl;

    /**
     * @return The HTTPS link to the VM cluster resource in OCI.
     * 
     */
    public Output<String> ociUrl() {
        return this.ociUrl;
    }
    /**
     * The OCID (Oracle Cloud Identifier) of the VM cluster.
     * 
     */
    @Export(name="ocid", refs={String.class}, tree="[0]")
    private Output<String> ocid;

    /**
     * @return The OCID (Oracle Cloud Identifier) of the VM cluster.
     * 
     */
    public Output<String> ocid() {
        return this.ocid;
    }
    /**
     * The unique identifier of the ODB network for the VM cluster. Changing this will create a new resource.
     * 
     */
    @Export(name="odbNetworkId", refs={String.class}, tree="[0]")
    private Output<String> odbNetworkId;

    /**
     * @return The unique identifier of the ODB network for the VM cluster. Changing this will create a new resource.
     * 
     */
    public Output<String> odbNetworkId() {
        return this.odbNetworkId;
    }
    /**
     * The percentage of progress made on the current operation for the VM cluster.
     * 
     */
    @Export(name="percentProgress", refs={Double.class}, tree="[0]")
    private Output<Double> percentProgress;

    /**
     * @return The percentage of progress made on the current operation for the VM cluster.
     * 
     */
    public Output<Double> percentProgress() {
        return this.percentProgress;
    }
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * The fully qualified domain name (FQDN) for the SCAN IP addresses associated with the VM cluster.
     * 
     */
    @Export(name="scanDnsName", refs={String.class}, tree="[0]")
    private Output<String> scanDnsName;

    /**
     * @return The fully qualified domain name (FQDN) for the SCAN IP addresses associated with the VM cluster.
     * 
     */
    public Output<String> scanDnsName() {
        return this.scanDnsName;
    }
    /**
     * The OCID of the DNS record for the SCAN IPs linked to the VM cluster.
     * 
     */
    @Export(name="scanDnsRecordId", refs={String.class}, tree="[0]")
    private Output<String> scanDnsRecordId;

    /**
     * @return The OCID of the DNS record for the SCAN IPs linked to the VM cluster.
     * 
     */
    public Output<String> scanDnsRecordId() {
        return this.scanDnsRecordId;
    }
    /**
     * The list of OCIDs for SCAN IP addresses associated with the VM cluster.
     * 
     */
    @Export(name="scanIpIds", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> scanIpIds;

    /**
     * @return The list of OCIDs for SCAN IP addresses associated with the VM cluster.
     * 
     */
    public Output<List<String>> scanIpIds() {
        return this.scanIpIds;
    }
    /**
     * The port number for TCP connections to the single client access name (SCAN) listener. Valid values: 1024–8999, except 2484, 6100, 6200, 7060, 7070, 7085, and 7879. Default: 1521. Changing this will create a new resource.
     * 
     */
    @Export(name="scanListenerPortTcp", refs={Integer.class}, tree="[0]")
    private Output<Integer> scanListenerPortTcp;

    /**
     * @return The port number for TCP connections to the single client access name (SCAN) listener. Valid values: 1024–8999, except 2484, 6100, 6200, 7060, 7070, 7085, and 7879. Default: 1521. Changing this will create a new resource.
     * 
     */
    public Output<Integer> scanListenerPortTcp() {
        return this.scanListenerPortTcp;
    }
    /**
     * The hardware model name of the Exadata infrastructure running the VM cluster.
     * 
     */
    @Export(name="shape", refs={String.class}, tree="[0]")
    private Output<String> shape;

    /**
     * @return The hardware model name of the Exadata infrastructure running the VM cluster.
     * 
     */
    public Output<String> shape() {
        return this.shape;
    }
    /**
     * The public key portion of one or more key pairs used for SSH access to the VM cluster. Changing this will create a new resource.
     * 
     */
    @Export(name="sshPublicKeys", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> sshPublicKeys;

    /**
     * @return The public key portion of one or more key pairs used for SSH access to the VM cluster. Changing this will create a new resource.
     * 
     */
    public Output<List<String>> sshPublicKeys() {
        return this.sshPublicKeys;
    }
    /**
     * The current lifecycle status of the VM cluster.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The current lifecycle status of the VM cluster.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * Additional information regarding the current status of the VM cluster.
     * 
     */
    @Export(name="statusReason", refs={String.class}, tree="[0]")
    private Output<String> statusReason;

    /**
     * @return Additional information regarding the current status of the VM cluster.
     * 
     */
    public Output<String> statusReason() {
        return this.statusReason;
    }
    /**
     * The local node storage allocated to the VM cluster, in gigabytes (GB).
     * 
     */
    @Export(name="storageSizeInGbs", refs={Integer.class}, tree="[0]")
    private Output<Integer> storageSizeInGbs;

    /**
     * @return The local node storage allocated to the VM cluster, in gigabytes (GB).
     * 
     */
    public Output<Integer> storageSizeInGbs() {
        return this.storageSizeInGbs;
    }
    /**
     * The operating system version of the image chosen for the VM cluster.
     * 
     */
    @Export(name="systemVersion", refs={String.class}, tree="[0]")
    private Output<String> systemVersion;

    /**
     * @return The operating system version of the image chosen for the VM cluster.
     * 
     */
    public Output<String> systemVersion() {
        return this.systemVersion;
    }
    /**
     * A map of tags to assign to the exadata infrastructure. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the exadata infrastructure. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The combined set of user-defined and provider-defined tags.
     * 
     */
    @Export(name="tagsAll", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> tagsAll;

    /**
     * @return The combined set of user-defined and provider-defined tags.
     * 
     */
    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll;
    }
    @Export(name="timeouts", refs={CloudVmClusterTimeouts.class}, tree="[0]")
    private Output</* @Nullable */ CloudVmClusterTimeouts> timeouts;

    public Output<Optional<CloudVmClusterTimeouts>> timeouts() {
        return Codegen.optional(this.timeouts);
    }
    /**
     * The configured time zone of the VM cluster. Changing this will create a new resource.
     * 
     */
    @Export(name="timezone", refs={String.class}, tree="[0]")
    private Output<String> timezone;

    /**
     * @return The configured time zone of the VM cluster. Changing this will create a new resource.
     * 
     */
    public Output<String> timezone() {
        return this.timezone;
    }
    /**
     * The virtual IP (VIP) addresses assigned to the VM cluster. CRS assigns one VIP per node for failover support.
     * 
     */
    @Export(name="vipIds", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> vipIds;

    /**
     * @return The virtual IP (VIP) addresses assigned to the VM cluster. CRS assigns one VIP per node for failover support.
     * 
     */
    public Output<List<String>> vipIds() {
        return this.vipIds;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CloudVmCluster(java.lang.String name) {
        this(name, CloudVmClusterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CloudVmCluster(java.lang.String name, CloudVmClusterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CloudVmCluster(java.lang.String name, CloudVmClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:odb/cloudVmCluster:CloudVmCluster", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private CloudVmCluster(java.lang.String name, Output<java.lang.String> id, @Nullable CloudVmClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:odb/cloudVmCluster:CloudVmCluster", name, state, makeResourceOptions(options, id), false);
    }

    private static CloudVmClusterArgs makeArgs(CloudVmClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? CloudVmClusterArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CloudVmCluster get(java.lang.String name, Output<java.lang.String> id, @Nullable CloudVmClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CloudVmCluster(name, id, state, options);
    }
}
