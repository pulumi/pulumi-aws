// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.fis;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.fis.inputs.GetExperimentTemplatesArgs;
import com.pulumi.aws.fis.inputs.GetExperimentTemplatesPlainArgs;
import com.pulumi.aws.fis.outputs.GetExperimentTemplatesResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import java.util.concurrent.CompletableFuture;

public final class FisFunctions {
    /**
     * This resource can be useful for getting back a set of FIS experiment template IDs.
     * 
     * ## Example Usage
     * 
     * The following shows outputting a list of all FIS experiment template IDs
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.fis.FisFunctions;
     * import com.pulumi.aws.fis.inputs.GetExperimentTemplatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var all = FisFunctions.getExperimentTemplates(GetExperimentTemplatesArgs.builder()
     *             .build());
     * 
     *         ctx.export("all", all.ids());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * The following shows filtering FIS experiment templates by tag
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.fis.FisFunctions;
     * import com.pulumi.aws.fis.inputs.GetExperimentTemplatesArgs;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FisFunctions.getExperimentTemplates(GetExperimentTemplatesArgs.builder()
     *             .tags(Map.ofEntries(
     *                 Map.entry("Name", "example"),
     *                 Map.entry("Tier", "1")
     *             ))
     *             .build());
     * 
     *         final var exampleGetPolicyDocument = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid("StartFISExperiment")
     *                 .effect("Allow")
     *                 .actions("fis:StartExperiment")
     *                 .resources(                
     *                     String.format("arn:aws:fis:*:*:experiment-template/%s", example.ids()[0]),
     *                     "arn:aws:fis:*:*:experiment/*")
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetExperimentTemplatesResult> getExperimentTemplates() {
        return getExperimentTemplates(GetExperimentTemplatesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This resource can be useful for getting back a set of FIS experiment template IDs.
     * 
     * ## Example Usage
     * 
     * The following shows outputting a list of all FIS experiment template IDs
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.fis.FisFunctions;
     * import com.pulumi.aws.fis.inputs.GetExperimentTemplatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var all = FisFunctions.getExperimentTemplates(GetExperimentTemplatesArgs.builder()
     *             .build());
     * 
     *         ctx.export("all", all.ids());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * The following shows filtering FIS experiment templates by tag
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.fis.FisFunctions;
     * import com.pulumi.aws.fis.inputs.GetExperimentTemplatesArgs;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FisFunctions.getExperimentTemplates(GetExperimentTemplatesArgs.builder()
     *             .tags(Map.ofEntries(
     *                 Map.entry("Name", "example"),
     *                 Map.entry("Tier", "1")
     *             ))
     *             .build());
     * 
     *         final var exampleGetPolicyDocument = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid("StartFISExperiment")
     *                 .effect("Allow")
     *                 .actions("fis:StartExperiment")
     *                 .resources(                
     *                     String.format("arn:aws:fis:*:*:experiment-template/%s", example.ids()[0]),
     *                     "arn:aws:fis:*:*:experiment/*")
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetExperimentTemplatesResult> getExperimentTemplatesPlain() {
        return getExperimentTemplatesPlain(GetExperimentTemplatesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This resource can be useful for getting back a set of FIS experiment template IDs.
     * 
     * ## Example Usage
     * 
     * The following shows outputting a list of all FIS experiment template IDs
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.fis.FisFunctions;
     * import com.pulumi.aws.fis.inputs.GetExperimentTemplatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var all = FisFunctions.getExperimentTemplates(GetExperimentTemplatesArgs.builder()
     *             .build());
     * 
     *         ctx.export("all", all.ids());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * The following shows filtering FIS experiment templates by tag
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.fis.FisFunctions;
     * import com.pulumi.aws.fis.inputs.GetExperimentTemplatesArgs;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FisFunctions.getExperimentTemplates(GetExperimentTemplatesArgs.builder()
     *             .tags(Map.ofEntries(
     *                 Map.entry("Name", "example"),
     *                 Map.entry("Tier", "1")
     *             ))
     *             .build());
     * 
     *         final var exampleGetPolicyDocument = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid("StartFISExperiment")
     *                 .effect("Allow")
     *                 .actions("fis:StartExperiment")
     *                 .resources(                
     *                     String.format("arn:aws:fis:*:*:experiment-template/%s", example.ids()[0]),
     *                     "arn:aws:fis:*:*:experiment/*")
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetExperimentTemplatesResult> getExperimentTemplates(GetExperimentTemplatesArgs args) {
        return getExperimentTemplates(args, InvokeOptions.Empty);
    }
    /**
     * This resource can be useful for getting back a set of FIS experiment template IDs.
     * 
     * ## Example Usage
     * 
     * The following shows outputting a list of all FIS experiment template IDs
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.fis.FisFunctions;
     * import com.pulumi.aws.fis.inputs.GetExperimentTemplatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var all = FisFunctions.getExperimentTemplates(GetExperimentTemplatesArgs.builder()
     *             .build());
     * 
     *         ctx.export("all", all.ids());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * The following shows filtering FIS experiment templates by tag
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.fis.FisFunctions;
     * import com.pulumi.aws.fis.inputs.GetExperimentTemplatesArgs;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FisFunctions.getExperimentTemplates(GetExperimentTemplatesArgs.builder()
     *             .tags(Map.ofEntries(
     *                 Map.entry("Name", "example"),
     *                 Map.entry("Tier", "1")
     *             ))
     *             .build());
     * 
     *         final var exampleGetPolicyDocument = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid("StartFISExperiment")
     *                 .effect("Allow")
     *                 .actions("fis:StartExperiment")
     *                 .resources(                
     *                     String.format("arn:aws:fis:*:*:experiment-template/%s", example.ids()[0]),
     *                     "arn:aws:fis:*:*:experiment/*")
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetExperimentTemplatesResult> getExperimentTemplatesPlain(GetExperimentTemplatesPlainArgs args) {
        return getExperimentTemplatesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This resource can be useful for getting back a set of FIS experiment template IDs.
     * 
     * ## Example Usage
     * 
     * The following shows outputting a list of all FIS experiment template IDs
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.fis.FisFunctions;
     * import com.pulumi.aws.fis.inputs.GetExperimentTemplatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var all = FisFunctions.getExperimentTemplates(GetExperimentTemplatesArgs.builder()
     *             .build());
     * 
     *         ctx.export("all", all.ids());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * The following shows filtering FIS experiment templates by tag
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.fis.FisFunctions;
     * import com.pulumi.aws.fis.inputs.GetExperimentTemplatesArgs;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FisFunctions.getExperimentTemplates(GetExperimentTemplatesArgs.builder()
     *             .tags(Map.ofEntries(
     *                 Map.entry("Name", "example"),
     *                 Map.entry("Tier", "1")
     *             ))
     *             .build());
     * 
     *         final var exampleGetPolicyDocument = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid("StartFISExperiment")
     *                 .effect("Allow")
     *                 .actions("fis:StartExperiment")
     *                 .resources(                
     *                     String.format("arn:aws:fis:*:*:experiment-template/%s", example.ids()[0]),
     *                     "arn:aws:fis:*:*:experiment/*")
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetExperimentTemplatesResult> getExperimentTemplates(GetExperimentTemplatesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:fis/getExperimentTemplates:getExperimentTemplates", TypeShape.of(GetExperimentTemplatesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This resource can be useful for getting back a set of FIS experiment template IDs.
     * 
     * ## Example Usage
     * 
     * The following shows outputting a list of all FIS experiment template IDs
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.fis.FisFunctions;
     * import com.pulumi.aws.fis.inputs.GetExperimentTemplatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var all = FisFunctions.getExperimentTemplates(GetExperimentTemplatesArgs.builder()
     *             .build());
     * 
     *         ctx.export("all", all.ids());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * The following shows filtering FIS experiment templates by tag
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.fis.FisFunctions;
     * import com.pulumi.aws.fis.inputs.GetExperimentTemplatesArgs;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FisFunctions.getExperimentTemplates(GetExperimentTemplatesArgs.builder()
     *             .tags(Map.ofEntries(
     *                 Map.entry("Name", "example"),
     *                 Map.entry("Tier", "1")
     *             ))
     *             .build());
     * 
     *         final var exampleGetPolicyDocument = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid("StartFISExperiment")
     *                 .effect("Allow")
     *                 .actions("fis:StartExperiment")
     *                 .resources(                
     *                     String.format("arn:aws:fis:*:*:experiment-template/%s", example.ids()[0]),
     *                     "arn:aws:fis:*:*:experiment/*")
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetExperimentTemplatesResult> getExperimentTemplates(GetExperimentTemplatesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("aws:fis/getExperimentTemplates:getExperimentTemplates", TypeShape.of(GetExperimentTemplatesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This resource can be useful for getting back a set of FIS experiment template IDs.
     * 
     * ## Example Usage
     * 
     * The following shows outputting a list of all FIS experiment template IDs
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.fis.FisFunctions;
     * import com.pulumi.aws.fis.inputs.GetExperimentTemplatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var all = FisFunctions.getExperimentTemplates(GetExperimentTemplatesArgs.builder()
     *             .build());
     * 
     *         ctx.export("all", all.ids());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * The following shows filtering FIS experiment templates by tag
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.fis.FisFunctions;
     * import com.pulumi.aws.fis.inputs.GetExperimentTemplatesArgs;
     * import com.pulumi.aws.iam.IamFunctions;
     * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FisFunctions.getExperimentTemplates(GetExperimentTemplatesArgs.builder()
     *             .tags(Map.ofEntries(
     *                 Map.entry("Name", "example"),
     *                 Map.entry("Tier", "1")
     *             ))
     *             .build());
     * 
     *         final var exampleGetPolicyDocument = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .sid("StartFISExperiment")
     *                 .effect("Allow")
     *                 .actions("fis:StartExperiment")
     *                 .resources(                
     *                     String.format("arn:aws:fis:*:*:experiment-template/%s", example.ids()[0]),
     *                     "arn:aws:fis:*:*:experiment/*")
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetExperimentTemplatesResult> getExperimentTemplatesPlain(GetExperimentTemplatesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:fis/getExperimentTemplates:getExperimentTemplates", TypeShape.of(GetExperimentTemplatesResult.class), args, Utilities.withVersion(options));
    }
}
