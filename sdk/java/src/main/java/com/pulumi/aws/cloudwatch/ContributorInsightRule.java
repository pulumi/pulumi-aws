// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudwatch;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.cloudwatch.ContributorInsightRuleArgs;
import com.pulumi.aws.cloudwatch.inputs.ContributorInsightRuleState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for managing an AWS CloudWatch Contributor Insight Rule.
 * 
 * ## Example Usage
 * 
 * ### Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.cloudwatch.ContributorInsightRule;
 * import com.pulumi.aws.cloudwatch.ContributorInsightRuleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var test = new ContributorInsightRule("test", ContributorInsightRuleArgs.builder()
 *             .ruleName("testing")
 *             .ruleState("ENABLED")
 *             .ruleDefinition("{\"Schema\":{\"Name\":\"CloudWatchLogRule\",\"Version\":1},\"AggregateOn\":\"Count\",\"Contribution\":{\"Filters\":[{\"In\":[\"some-keyword\"],\"Match\":\"$.message\"}],\"Keys\":[\"$.country\"]},\"LogFormat\":\"JSON\",\"LogGroupNames\":[\"/aws/lambda/api-prod\"]}")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Using `pulumi import`, import CloudWatch Contributor Insight Rule using the `rule_name`. For example:
 * 
 * ```sh
 * $ pulumi import aws:cloudwatch/contributorInsightRule:ContributorInsightRule example contributor_insight_rule-name
 * ```
 * 
 */
@ResourceType(type="aws:cloudwatch/contributorInsightRule:ContributorInsightRule")
public class ContributorInsightRule extends com.pulumi.resources.CustomResource {
    /**
     * ARN of the Contributor Insight Rule.
     * 
     */
    @Export(name="resourceArn", refs={String.class}, tree="[0]")
    private Output<String> resourceArn;

    /**
     * @return ARN of the Contributor Insight Rule.
     * 
     */
    public Output<String> resourceArn() {
        return this.resourceArn;
    }
    /**
     * Definition of the rule, as a JSON object. For details on the valid syntax, see [Contributor Insights Rule Syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights-RuleSyntax.html).
     * 
     */
    @Export(name="ruleDefinition", refs={String.class}, tree="[0]")
    private Output<String> ruleDefinition;

    /**
     * @return Definition of the rule, as a JSON object. For details on the valid syntax, see [Contributor Insights Rule Syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights-RuleSyntax.html).
     * 
     */
    public Output<String> ruleDefinition() {
        return this.ruleDefinition;
    }
    /**
     * Unique name of the rule.
     * 
     * The following arguments are optional:
     * 
     */
    @Export(name="ruleName", refs={String.class}, tree="[0]")
    private Output<String> ruleName;

    /**
     * @return Unique name of the rule.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<String> ruleName() {
        return this.ruleName;
    }
    /**
     * State of the rule. Valid values are `ENABLED` and `DISABLED`.
     * 
     */
    @Export(name="ruleState", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ruleState;

    /**
     * @return State of the rule. Valid values are `ENABLED` and `DISABLED`.
     * 
     */
    public Output<Optional<String>> ruleState() {
        return Codegen.optional(this.ruleState);
    }
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Export(name="tagsAll", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ContributorInsightRule(java.lang.String name) {
        this(name, ContributorInsightRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ContributorInsightRule(java.lang.String name, ContributorInsightRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ContributorInsightRule(java.lang.String name, ContributorInsightRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:cloudwatch/contributorInsightRule:ContributorInsightRule", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ContributorInsightRule(java.lang.String name, Output<java.lang.String> id, @Nullable ContributorInsightRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:cloudwatch/contributorInsightRule:ContributorInsightRule", name, state, makeResourceOptions(options, id), false);
    }

    private static ContributorInsightRuleArgs makeArgs(ContributorInsightRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ContributorInsightRuleArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ContributorInsightRule get(java.lang.String name, Output<java.lang.String> id, @Nullable ContributorInsightRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ContributorInsightRule(name, id, state, options);
    }
}
