// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3control.outputs;

import com.pulumi.aws.s3control.outputs.GetMultiRegionAccessPointPublicAccessBlock;
import com.pulumi.aws.s3control.outputs.GetMultiRegionAccessPointRegion;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetMultiRegionAccessPointResult {
    private String accountId;
    /**
     * @return The alias for the Multi-Region Access Point.
     * 
     */
    private String alias;
    /**
     * @return Amazon Resource Name (ARN) of the Multi-Region Access Point.
     * 
     */
    private String arn;
    /**
     * @return Timestamp when the resource has been created.
     * 
     */
    private String createdAt;
    /**
     * @return The DNS domain name of the S3 Multi-Region Access Point in the format _`alias`_.accesspoint.s3-global.amazonaws.com. For more information, see the documentation on [Multi-Region Access Point Requests](https://docs.aws.amazon.com/AmazonS3/latest/userguide/MultiRegionAccessPointRequests.html).
     * 
     */
    private String domainName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String name;
    /**
     * @return Public Access Block of the Multi-Region Access Point. Detailed below.
     * 
     */
    private List<GetMultiRegionAccessPointPublicAccessBlock> publicAccessBlocks;
    /**
     * @return A collection of the regions and buckets associated with the Multi-Region Access Point.
     * 
     */
    private List<GetMultiRegionAccessPointRegion> regions;
    /**
     * @return The current status of the Multi-Region Access Point.
     * 
     */
    private String status;

    private GetMultiRegionAccessPointResult() {}
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return The alias for the Multi-Region Access Point.
     * 
     */
    public String alias() {
        return this.alias;
    }
    /**
     * @return Amazon Resource Name (ARN) of the Multi-Region Access Point.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return Timestamp when the resource has been created.
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return The DNS domain name of the S3 Multi-Region Access Point in the format _`alias`_.accesspoint.s3-global.amazonaws.com. For more information, see the documentation on [Multi-Region Access Point Requests](https://docs.aws.amazon.com/AmazonS3/latest/userguide/MultiRegionAccessPointRequests.html).
     * 
     */
    public String domainName() {
        return this.domainName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return Public Access Block of the Multi-Region Access Point. Detailed below.
     * 
     */
    public List<GetMultiRegionAccessPointPublicAccessBlock> publicAccessBlocks() {
        return this.publicAccessBlocks;
    }
    /**
     * @return A collection of the regions and buckets associated with the Multi-Region Access Point.
     * 
     */
    public List<GetMultiRegionAccessPointRegion> regions() {
        return this.regions;
    }
    /**
     * @return The current status of the Multi-Region Access Point.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMultiRegionAccessPointResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private String alias;
        private String arn;
        private String createdAt;
        private String domainName;
        private String id;
        private String name;
        private List<GetMultiRegionAccessPointPublicAccessBlock> publicAccessBlocks;
        private List<GetMultiRegionAccessPointRegion> regions;
        private String status;
        public Builder() {}
        public Builder(GetMultiRegionAccessPointResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.alias = defaults.alias;
    	      this.arn = defaults.arn;
    	      this.createdAt = defaults.createdAt;
    	      this.domainName = defaults.domainName;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.publicAccessBlocks = defaults.publicAccessBlocks;
    	      this.regions = defaults.regions;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetMultiRegionAccessPointResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder alias(String alias) {
            if (alias == null) {
              throw new MissingRequiredPropertyException("GetMultiRegionAccessPointResult", "alias");
            }
            this.alias = alias;
            return this;
        }
        @CustomType.Setter
        public Builder arn(String arn) {
            if (arn == null) {
              throw new MissingRequiredPropertyException("GetMultiRegionAccessPointResult", "arn");
            }
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetMultiRegionAccessPointResult", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder domainName(String domainName) {
            if (domainName == null) {
              throw new MissingRequiredPropertyException("GetMultiRegionAccessPointResult", "domainName");
            }
            this.domainName = domainName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetMultiRegionAccessPointResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetMultiRegionAccessPointResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder publicAccessBlocks(List<GetMultiRegionAccessPointPublicAccessBlock> publicAccessBlocks) {
            if (publicAccessBlocks == null) {
              throw new MissingRequiredPropertyException("GetMultiRegionAccessPointResult", "publicAccessBlocks");
            }
            this.publicAccessBlocks = publicAccessBlocks;
            return this;
        }
        public Builder publicAccessBlocks(GetMultiRegionAccessPointPublicAccessBlock... publicAccessBlocks) {
            return publicAccessBlocks(List.of(publicAccessBlocks));
        }
        @CustomType.Setter
        public Builder regions(List<GetMultiRegionAccessPointRegion> regions) {
            if (regions == null) {
              throw new MissingRequiredPropertyException("GetMultiRegionAccessPointResult", "regions");
            }
            this.regions = regions;
            return this;
        }
        public Builder regions(GetMultiRegionAccessPointRegion... regions) {
            return regions(List.of(regions));
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetMultiRegionAccessPointResult", "status");
            }
            this.status = status;
            return this;
        }
        public GetMultiRegionAccessPointResult build() {
            final var _resultValue = new GetMultiRegionAccessPointResult();
            _resultValue.accountId = accountId;
            _resultValue.alias = alias;
            _resultValue.arn = arn;
            _resultValue.createdAt = createdAt;
            _resultValue.domainName = domainName;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.publicAccessBlocks = publicAccessBlocks;
            _resultValue.regions = regions;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
