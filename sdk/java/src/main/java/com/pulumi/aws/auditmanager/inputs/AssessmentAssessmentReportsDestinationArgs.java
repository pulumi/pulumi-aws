// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.auditmanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class AssessmentAssessmentReportsDestinationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AssessmentAssessmentReportsDestinationArgs Empty = new AssessmentAssessmentReportsDestinationArgs();

    /**
     * Destination of the assessment report. This value be in the form `s3://{bucket_name}`.
     * 
     */
    @Import(name="destination", required=true)
    private Output<String> destination;

    /**
     * @return Destination of the assessment report. This value be in the form `s3://{bucket_name}`.
     * 
     */
    public Output<String> destination() {
        return this.destination;
    }

    /**
     * Destination type. Currently, `S3` is the only valid value.
     * 
     */
    @Import(name="destinationType", required=true)
    private Output<String> destinationType;

    /**
     * @return Destination type. Currently, `S3` is the only valid value.
     * 
     */
    public Output<String> destinationType() {
        return this.destinationType;
    }

    private AssessmentAssessmentReportsDestinationArgs() {}

    private AssessmentAssessmentReportsDestinationArgs(AssessmentAssessmentReportsDestinationArgs $) {
        this.destination = $.destination;
        this.destinationType = $.destinationType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AssessmentAssessmentReportsDestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AssessmentAssessmentReportsDestinationArgs $;

        public Builder() {
            $ = new AssessmentAssessmentReportsDestinationArgs();
        }

        public Builder(AssessmentAssessmentReportsDestinationArgs defaults) {
            $ = new AssessmentAssessmentReportsDestinationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param destination Destination of the assessment report. This value be in the form `s3://{bucket_name}`.
         * 
         * @return builder
         * 
         */
        public Builder destination(Output<String> destination) {
            $.destination = destination;
            return this;
        }

        /**
         * @param destination Destination of the assessment report. This value be in the form `s3://{bucket_name}`.
         * 
         * @return builder
         * 
         */
        public Builder destination(String destination) {
            return destination(Output.of(destination));
        }

        /**
         * @param destinationType Destination type. Currently, `S3` is the only valid value.
         * 
         * @return builder
         * 
         */
        public Builder destinationType(Output<String> destinationType) {
            $.destinationType = destinationType;
            return this;
        }

        /**
         * @param destinationType Destination type. Currently, `S3` is the only valid value.
         * 
         * @return builder
         * 
         */
        public Builder destinationType(String destinationType) {
            return destinationType(Output.of(destinationType));
        }

        public AssessmentAssessmentReportsDestinationArgs build() {
            if ($.destination == null) {
                throw new MissingRequiredPropertyException("AssessmentAssessmentReportsDestinationArgs", "destination");
            }
            if ($.destinationType == null) {
                throw new MissingRequiredPropertyException("AssessmentAssessmentReportsDestinationArgs", "destinationType");
            }
            return $;
        }
    }

}
