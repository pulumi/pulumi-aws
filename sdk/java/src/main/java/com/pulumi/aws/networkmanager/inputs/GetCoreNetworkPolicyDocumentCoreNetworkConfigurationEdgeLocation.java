// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.networkmanager.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCoreNetworkPolicyDocumentCoreNetworkConfigurationEdgeLocation extends com.pulumi.resources.InvokeArgs {

    public static final GetCoreNetworkPolicyDocumentCoreNetworkConfigurationEdgeLocation Empty = new GetCoreNetworkPolicyDocumentCoreNetworkConfigurationEdgeLocation();

    /**
     * ASN of the Core Network Edge in an AWS Region. By default, the ASN will be a single integer automatically assigned from `asn_ranges`
     * 
     */
    @Import(name="asn")
    private @Nullable Integer asn;

    /**
     * @return ASN of the Core Network Edge in an AWS Region. By default, the ASN will be a single integer automatically assigned from `asn_ranges`
     * 
     */
    public Optional<Integer> asn() {
        return Optional.ofNullable(this.asn);
    }

    /**
     * The local CIDR blocks for this Core Network Edge for AWS Transit Gateway Connect attachments. By default, this CIDR block will be one or more optional IPv4 and IPv6 CIDR prefixes auto-assigned from `inside_cidr_blocks`.
     * 
     */
    @Import(name="insideCidrBlocks")
    private @Nullable List<String> insideCidrBlocks;

    /**
     * @return The local CIDR blocks for this Core Network Edge for AWS Transit Gateway Connect attachments. By default, this CIDR block will be one or more optional IPv4 and IPv6 CIDR prefixes auto-assigned from `inside_cidr_blocks`.
     * 
     */
    public Optional<List<String>> insideCidrBlocks() {
        return Optional.ofNullable(this.insideCidrBlocks);
    }

    @Import(name="location", required=true)
    private String location;

    public String location() {
        return this.location;
    }

    private GetCoreNetworkPolicyDocumentCoreNetworkConfigurationEdgeLocation() {}

    private GetCoreNetworkPolicyDocumentCoreNetworkConfigurationEdgeLocation(GetCoreNetworkPolicyDocumentCoreNetworkConfigurationEdgeLocation $) {
        this.asn = $.asn;
        this.insideCidrBlocks = $.insideCidrBlocks;
        this.location = $.location;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCoreNetworkPolicyDocumentCoreNetworkConfigurationEdgeLocation defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCoreNetworkPolicyDocumentCoreNetworkConfigurationEdgeLocation $;

        public Builder() {
            $ = new GetCoreNetworkPolicyDocumentCoreNetworkConfigurationEdgeLocation();
        }

        public Builder(GetCoreNetworkPolicyDocumentCoreNetworkConfigurationEdgeLocation defaults) {
            $ = new GetCoreNetworkPolicyDocumentCoreNetworkConfigurationEdgeLocation(Objects.requireNonNull(defaults));
        }

        /**
         * @param asn ASN of the Core Network Edge in an AWS Region. By default, the ASN will be a single integer automatically assigned from `asn_ranges`
         * 
         * @return builder
         * 
         */
        public Builder asn(@Nullable Integer asn) {
            $.asn = asn;
            return this;
        }

        /**
         * @param insideCidrBlocks The local CIDR blocks for this Core Network Edge for AWS Transit Gateway Connect attachments. By default, this CIDR block will be one or more optional IPv4 and IPv6 CIDR prefixes auto-assigned from `inside_cidr_blocks`.
         * 
         * @return builder
         * 
         */
        public Builder insideCidrBlocks(@Nullable List<String> insideCidrBlocks) {
            $.insideCidrBlocks = insideCidrBlocks;
            return this;
        }

        /**
         * @param insideCidrBlocks The local CIDR blocks for this Core Network Edge for AWS Transit Gateway Connect attachments. By default, this CIDR block will be one or more optional IPv4 and IPv6 CIDR prefixes auto-assigned from `inside_cidr_blocks`.
         * 
         * @return builder
         * 
         */
        public Builder insideCidrBlocks(String... insideCidrBlocks) {
            return insideCidrBlocks(List.of(insideCidrBlocks));
        }

        public Builder location(String location) {
            $.location = location;
            return this;
        }

        public GetCoreNetworkPolicyDocumentCoreNetworkConfigurationEdgeLocation build() {
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            return $;
        }
    }

}
