// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ivs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RecordingConfigurationThumbnailConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final RecordingConfigurationThumbnailConfigurationArgs Empty = new RecordingConfigurationThumbnailConfigurationArgs();

    /**
     * Thumbnail recording mode. Valid values: `DISABLED`, `INTERVAL`.
     * 
     */
    @Import(name="recordingMode")
    private @Nullable Output<String> recordingMode;

    /**
     * @return Thumbnail recording mode. Valid values: `DISABLED`, `INTERVAL`.
     * 
     */
    public Optional<Output<String>> recordingMode() {
        return Optional.ofNullable(this.recordingMode);
    }

    /**
     * - The targeted thumbnail-generation interval in seconds.
     * 
     */
    @Import(name="targetIntervalSeconds")
    private @Nullable Output<Integer> targetIntervalSeconds;

    /**
     * @return - The targeted thumbnail-generation interval in seconds.
     * 
     */
    public Optional<Output<Integer>> targetIntervalSeconds() {
        return Optional.ofNullable(this.targetIntervalSeconds);
    }

    private RecordingConfigurationThumbnailConfigurationArgs() {}

    private RecordingConfigurationThumbnailConfigurationArgs(RecordingConfigurationThumbnailConfigurationArgs $) {
        this.recordingMode = $.recordingMode;
        this.targetIntervalSeconds = $.targetIntervalSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RecordingConfigurationThumbnailConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RecordingConfigurationThumbnailConfigurationArgs $;

        public Builder() {
            $ = new RecordingConfigurationThumbnailConfigurationArgs();
        }

        public Builder(RecordingConfigurationThumbnailConfigurationArgs defaults) {
            $ = new RecordingConfigurationThumbnailConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param recordingMode Thumbnail recording mode. Valid values: `DISABLED`, `INTERVAL`.
         * 
         * @return builder
         * 
         */
        public Builder recordingMode(@Nullable Output<String> recordingMode) {
            $.recordingMode = recordingMode;
            return this;
        }

        /**
         * @param recordingMode Thumbnail recording mode. Valid values: `DISABLED`, `INTERVAL`.
         * 
         * @return builder
         * 
         */
        public Builder recordingMode(String recordingMode) {
            return recordingMode(Output.of(recordingMode));
        }

        /**
         * @param targetIntervalSeconds - The targeted thumbnail-generation interval in seconds.
         * 
         * @return builder
         * 
         */
        public Builder targetIntervalSeconds(@Nullable Output<Integer> targetIntervalSeconds) {
            $.targetIntervalSeconds = targetIntervalSeconds;
            return this;
        }

        /**
         * @param targetIntervalSeconds - The targeted thumbnail-generation interval in seconds.
         * 
         * @return builder
         * 
         */
        public Builder targetIntervalSeconds(Integer targetIntervalSeconds) {
            return targetIntervalSeconds(Output.of(targetIntervalSeconds));
        }

        public RecordingConfigurationThumbnailConfigurationArgs build() {
            return $;
        }
    }

}
