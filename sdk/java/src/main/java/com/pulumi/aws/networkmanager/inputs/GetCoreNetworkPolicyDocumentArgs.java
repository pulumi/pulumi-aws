// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.networkmanager.inputs;

import com.pulumi.aws.networkmanager.inputs.GetCoreNetworkPolicyDocumentAttachmentPolicyArgs;
import com.pulumi.aws.networkmanager.inputs.GetCoreNetworkPolicyDocumentCoreNetworkConfigurationArgs;
import com.pulumi.aws.networkmanager.inputs.GetCoreNetworkPolicyDocumentSegmentActionArgs;
import com.pulumi.aws.networkmanager.inputs.GetCoreNetworkPolicyDocumentSegmentArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCoreNetworkPolicyDocumentArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCoreNetworkPolicyDocumentArgs Empty = new GetCoreNetworkPolicyDocumentArgs();

    @Import(name="attachmentPolicies")
    private @Nullable Output<List<GetCoreNetworkPolicyDocumentAttachmentPolicyArgs>> attachmentPolicies;

    public Optional<Output<List<GetCoreNetworkPolicyDocumentAttachmentPolicyArgs>>> attachmentPolicies() {
        return Optional.ofNullable(this.attachmentPolicies);
    }

    @Import(name="coreNetworkConfigurations", required=true)
    private Output<List<GetCoreNetworkPolicyDocumentCoreNetworkConfigurationArgs>> coreNetworkConfigurations;

    public Output<List<GetCoreNetworkPolicyDocumentCoreNetworkConfigurationArgs>> coreNetworkConfigurations() {
        return this.coreNetworkConfigurations;
    }

    @Import(name="segmentActions")
    private @Nullable Output<List<GetCoreNetworkPolicyDocumentSegmentActionArgs>> segmentActions;

    public Optional<Output<List<GetCoreNetworkPolicyDocumentSegmentActionArgs>>> segmentActions() {
        return Optional.ofNullable(this.segmentActions);
    }

    @Import(name="segments", required=true)
    private Output<List<GetCoreNetworkPolicyDocumentSegmentArgs>> segments;

    public Output<List<GetCoreNetworkPolicyDocumentSegmentArgs>> segments() {
        return this.segments;
    }

    @Import(name="version")
    private @Nullable Output<String> version;

    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private GetCoreNetworkPolicyDocumentArgs() {}

    private GetCoreNetworkPolicyDocumentArgs(GetCoreNetworkPolicyDocumentArgs $) {
        this.attachmentPolicies = $.attachmentPolicies;
        this.coreNetworkConfigurations = $.coreNetworkConfigurations;
        this.segmentActions = $.segmentActions;
        this.segments = $.segments;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCoreNetworkPolicyDocumentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCoreNetworkPolicyDocumentArgs $;

        public Builder() {
            $ = new GetCoreNetworkPolicyDocumentArgs();
        }

        public Builder(GetCoreNetworkPolicyDocumentArgs defaults) {
            $ = new GetCoreNetworkPolicyDocumentArgs(Objects.requireNonNull(defaults));
        }

        public Builder attachmentPolicies(@Nullable Output<List<GetCoreNetworkPolicyDocumentAttachmentPolicyArgs>> attachmentPolicies) {
            $.attachmentPolicies = attachmentPolicies;
            return this;
        }

        public Builder attachmentPolicies(List<GetCoreNetworkPolicyDocumentAttachmentPolicyArgs> attachmentPolicies) {
            return attachmentPolicies(Output.of(attachmentPolicies));
        }

        public Builder attachmentPolicies(GetCoreNetworkPolicyDocumentAttachmentPolicyArgs... attachmentPolicies) {
            return attachmentPolicies(List.of(attachmentPolicies));
        }

        public Builder coreNetworkConfigurations(Output<List<GetCoreNetworkPolicyDocumentCoreNetworkConfigurationArgs>> coreNetworkConfigurations) {
            $.coreNetworkConfigurations = coreNetworkConfigurations;
            return this;
        }

        public Builder coreNetworkConfigurations(List<GetCoreNetworkPolicyDocumentCoreNetworkConfigurationArgs> coreNetworkConfigurations) {
            return coreNetworkConfigurations(Output.of(coreNetworkConfigurations));
        }

        public Builder coreNetworkConfigurations(GetCoreNetworkPolicyDocumentCoreNetworkConfigurationArgs... coreNetworkConfigurations) {
            return coreNetworkConfigurations(List.of(coreNetworkConfigurations));
        }

        public Builder segmentActions(@Nullable Output<List<GetCoreNetworkPolicyDocumentSegmentActionArgs>> segmentActions) {
            $.segmentActions = segmentActions;
            return this;
        }

        public Builder segmentActions(List<GetCoreNetworkPolicyDocumentSegmentActionArgs> segmentActions) {
            return segmentActions(Output.of(segmentActions));
        }

        public Builder segmentActions(GetCoreNetworkPolicyDocumentSegmentActionArgs... segmentActions) {
            return segmentActions(List.of(segmentActions));
        }

        public Builder segments(Output<List<GetCoreNetworkPolicyDocumentSegmentArgs>> segments) {
            $.segments = segments;
            return this;
        }

        public Builder segments(List<GetCoreNetworkPolicyDocumentSegmentArgs> segments) {
            return segments(Output.of(segments));
        }

        public Builder segments(GetCoreNetworkPolicyDocumentSegmentArgs... segments) {
            return segments(List.of(segments));
        }

        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        public Builder version(String version) {
            return version(Output.of(version));
        }

        public GetCoreNetworkPolicyDocumentArgs build() {
            $.coreNetworkConfigurations = Objects.requireNonNull($.coreNetworkConfigurations, "expected parameter 'coreNetworkConfigurations' to be non-null");
            $.segments = Objects.requireNonNull($.segments, "expected parameter 'segments' to be non-null");
            return $;
        }
    }

}
