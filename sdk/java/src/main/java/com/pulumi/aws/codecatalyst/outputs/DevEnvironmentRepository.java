// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codecatalyst.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DevEnvironmentRepository {
    /**
     * @return The name of the branch in a source repository.
     * 
     * persistent storage (`  persistent_storage `) supports the following:
     * 
     */
    private @Nullable String branchName;
    /**
     * @return The name of the source repository.
     * 
     */
    private String repositoryName;

    private DevEnvironmentRepository() {}
    /**
     * @return The name of the branch in a source repository.
     * 
     * persistent storage (`  persistent_storage `) supports the following:
     * 
     */
    public Optional<String> branchName() {
        return Optional.ofNullable(this.branchName);
    }
    /**
     * @return The name of the source repository.
     * 
     */
    public String repositoryName() {
        return this.repositoryName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DevEnvironmentRepository defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String branchName;
        private String repositoryName;
        public Builder() {}
        public Builder(DevEnvironmentRepository defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.branchName = defaults.branchName;
    	      this.repositoryName = defaults.repositoryName;
        }

        @CustomType.Setter
        public Builder branchName(@Nullable String branchName) {
            this.branchName = branchName;
            return this;
        }
        @CustomType.Setter
        public Builder repositoryName(String repositoryName) {
            this.repositoryName = Objects.requireNonNull(repositoryName);
            return this;
        }
        public DevEnvironmentRepository build() {
            final var o = new DevEnvironmentRepository();
            o.branchName = branchName;
            o.repositoryName = repositoryName;
            return o;
        }
    }
}
