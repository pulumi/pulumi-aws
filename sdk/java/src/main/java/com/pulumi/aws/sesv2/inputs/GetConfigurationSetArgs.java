// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sesv2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetConfigurationSetArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetConfigurationSetArgs Empty = new GetConfigurationSetArgs();

    /**
     * The name of the configuration set.
     * 
     */
    @Import(name="configurationSetName", required=true)
    private Output<String> configurationSetName;

    /**
     * @return The name of the configuration set.
     * 
     */
    public Output<String> configurationSetName() {
        return this.configurationSetName;
    }

    /**
     * Key-value map of resource tags for the container recipe.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Key-value map of resource tags for the container recipe.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private GetConfigurationSetArgs() {}

    private GetConfigurationSetArgs(GetConfigurationSetArgs $) {
        this.configurationSetName = $.configurationSetName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetConfigurationSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetConfigurationSetArgs $;

        public Builder() {
            $ = new GetConfigurationSetArgs();
        }

        public Builder(GetConfigurationSetArgs defaults) {
            $ = new GetConfigurationSetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configurationSetName The name of the configuration set.
         * 
         * @return builder
         * 
         */
        public Builder configurationSetName(Output<String> configurationSetName) {
            $.configurationSetName = configurationSetName;
            return this;
        }

        /**
         * @param configurationSetName The name of the configuration set.
         * 
         * @return builder
         * 
         */
        public Builder configurationSetName(String configurationSetName) {
            return configurationSetName(Output.of(configurationSetName));
        }

        /**
         * @param tags Key-value map of resource tags for the container recipe.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Key-value map of resource tags for the container recipe.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public GetConfigurationSetArgs build() {
            if ($.configurationSetName == null) {
                throw new MissingRequiredPropertyException("GetConfigurationSetArgs", "configurationSetName");
            }
            return $;
        }
    }

}
