// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecr.inputs;

import com.pulumi.aws.ecr.inputs.GetLifecyclePolicyDocumentRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetLifecyclePolicyDocumentArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetLifecyclePolicyDocumentArgs Empty = new GetLifecyclePolicyDocumentArgs();

    @Import(name="rules")
    private @Nullable Output<List<GetLifecyclePolicyDocumentRuleArgs>> rules;

    public Optional<Output<List<GetLifecyclePolicyDocumentRuleArgs>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    private GetLifecyclePolicyDocumentArgs() {}

    private GetLifecyclePolicyDocumentArgs(GetLifecyclePolicyDocumentArgs $) {
        this.rules = $.rules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLifecyclePolicyDocumentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLifecyclePolicyDocumentArgs $;

        public Builder() {
            $ = new GetLifecyclePolicyDocumentArgs();
        }

        public Builder(GetLifecyclePolicyDocumentArgs defaults) {
            $ = new GetLifecyclePolicyDocumentArgs(Objects.requireNonNull(defaults));
        }

        public Builder rules(@Nullable Output<List<GetLifecyclePolicyDocumentRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        public Builder rules(List<GetLifecyclePolicyDocumentRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        public Builder rules(GetLifecyclePolicyDocumentRuleArgs... rules) {
            return rules(List.of(rules));
        }

        public GetLifecyclePolicyDocumentArgs build() {
            return $;
        }
    }

}
