// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.verifiedaccess.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceTrustProviderAttachmentState extends com.pulumi.resources.ResourceArgs {

    public static final InstanceTrustProviderAttachmentState Empty = new InstanceTrustProviderAttachmentState();

    /**
     * The ID of the Verified Access instance to attach the Trust Provider to.
     * 
     */
    @Import(name="verifiedaccessInstanceId")
    private @Nullable Output<String> verifiedaccessInstanceId;

    /**
     * @return The ID of the Verified Access instance to attach the Trust Provider to.
     * 
     */
    public Optional<Output<String>> verifiedaccessInstanceId() {
        return Optional.ofNullable(this.verifiedaccessInstanceId);
    }

    /**
     * The ID of the Verified Access trust provider.
     * 
     */
    @Import(name="verifiedaccessTrustProviderId")
    private @Nullable Output<String> verifiedaccessTrustProviderId;

    /**
     * @return The ID of the Verified Access trust provider.
     * 
     */
    public Optional<Output<String>> verifiedaccessTrustProviderId() {
        return Optional.ofNullable(this.verifiedaccessTrustProviderId);
    }

    private InstanceTrustProviderAttachmentState() {}

    private InstanceTrustProviderAttachmentState(InstanceTrustProviderAttachmentState $) {
        this.verifiedaccessInstanceId = $.verifiedaccessInstanceId;
        this.verifiedaccessTrustProviderId = $.verifiedaccessTrustProviderId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceTrustProviderAttachmentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceTrustProviderAttachmentState $;

        public Builder() {
            $ = new InstanceTrustProviderAttachmentState();
        }

        public Builder(InstanceTrustProviderAttachmentState defaults) {
            $ = new InstanceTrustProviderAttachmentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param verifiedaccessInstanceId The ID of the Verified Access instance to attach the Trust Provider to.
         * 
         * @return builder
         * 
         */
        public Builder verifiedaccessInstanceId(@Nullable Output<String> verifiedaccessInstanceId) {
            $.verifiedaccessInstanceId = verifiedaccessInstanceId;
            return this;
        }

        /**
         * @param verifiedaccessInstanceId The ID of the Verified Access instance to attach the Trust Provider to.
         * 
         * @return builder
         * 
         */
        public Builder verifiedaccessInstanceId(String verifiedaccessInstanceId) {
            return verifiedaccessInstanceId(Output.of(verifiedaccessInstanceId));
        }

        /**
         * @param verifiedaccessTrustProviderId The ID of the Verified Access trust provider.
         * 
         * @return builder
         * 
         */
        public Builder verifiedaccessTrustProviderId(@Nullable Output<String> verifiedaccessTrustProviderId) {
            $.verifiedaccessTrustProviderId = verifiedaccessTrustProviderId;
            return this;
        }

        /**
         * @param verifiedaccessTrustProviderId The ID of the Verified Access trust provider.
         * 
         * @return builder
         * 
         */
        public Builder verifiedaccessTrustProviderId(String verifiedaccessTrustProviderId) {
            return verifiedaccessTrustProviderId(Output.of(verifiedaccessTrustProviderId));
        }

        public InstanceTrustProviderAttachmentState build() {
            return $;
        }
    }

}
