// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ReplicationInstanceKerberosAuthenticationSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ReplicationInstanceKerberosAuthenticationSettingsArgs Empty = new ReplicationInstanceKerberosAuthenticationSettingsArgs();

    /**
     * ARN of the IAM role that grants AWS DMS access to the secret containing key cache file for the Kerberos authentication.
     * 
     */
    @Import(name="keyCacheSecretIamArn", required=true)
    private Output<String> keyCacheSecretIamArn;

    /**
     * @return ARN of the IAM role that grants AWS DMS access to the secret containing key cache file for the Kerberos authentication.
     * 
     */
    public Output<String> keyCacheSecretIamArn() {
        return this.keyCacheSecretIamArn;
    }

    /**
     * Secret ID that stores the key cache file required for Kerberos authentication.
     * 
     */
    @Import(name="keyCacheSecretId", required=true)
    private Output<String> keyCacheSecretId;

    /**
     * @return Secret ID that stores the key cache file required for Kerberos authentication.
     * 
     */
    public Output<String> keyCacheSecretId() {
        return this.keyCacheSecretId;
    }

    /**
     * Contents of krb5 configuration file required for Kerberos authentication.
     * 
     */
    @Import(name="krb5FileContents", required=true)
    private Output<String> krb5FileContents;

    /**
     * @return Contents of krb5 configuration file required for Kerberos authentication.
     * 
     */
    public Output<String> krb5FileContents() {
        return this.krb5FileContents;
    }

    private ReplicationInstanceKerberosAuthenticationSettingsArgs() {}

    private ReplicationInstanceKerberosAuthenticationSettingsArgs(ReplicationInstanceKerberosAuthenticationSettingsArgs $) {
        this.keyCacheSecretIamArn = $.keyCacheSecretIamArn;
        this.keyCacheSecretId = $.keyCacheSecretId;
        this.krb5FileContents = $.krb5FileContents;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReplicationInstanceKerberosAuthenticationSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReplicationInstanceKerberosAuthenticationSettingsArgs $;

        public Builder() {
            $ = new ReplicationInstanceKerberosAuthenticationSettingsArgs();
        }

        public Builder(ReplicationInstanceKerberosAuthenticationSettingsArgs defaults) {
            $ = new ReplicationInstanceKerberosAuthenticationSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param keyCacheSecretIamArn ARN of the IAM role that grants AWS DMS access to the secret containing key cache file for the Kerberos authentication.
         * 
         * @return builder
         * 
         */
        public Builder keyCacheSecretIamArn(Output<String> keyCacheSecretIamArn) {
            $.keyCacheSecretIamArn = keyCacheSecretIamArn;
            return this;
        }

        /**
         * @param keyCacheSecretIamArn ARN of the IAM role that grants AWS DMS access to the secret containing key cache file for the Kerberos authentication.
         * 
         * @return builder
         * 
         */
        public Builder keyCacheSecretIamArn(String keyCacheSecretIamArn) {
            return keyCacheSecretIamArn(Output.of(keyCacheSecretIamArn));
        }

        /**
         * @param keyCacheSecretId Secret ID that stores the key cache file required for Kerberos authentication.
         * 
         * @return builder
         * 
         */
        public Builder keyCacheSecretId(Output<String> keyCacheSecretId) {
            $.keyCacheSecretId = keyCacheSecretId;
            return this;
        }

        /**
         * @param keyCacheSecretId Secret ID that stores the key cache file required for Kerberos authentication.
         * 
         * @return builder
         * 
         */
        public Builder keyCacheSecretId(String keyCacheSecretId) {
            return keyCacheSecretId(Output.of(keyCacheSecretId));
        }

        /**
         * @param krb5FileContents Contents of krb5 configuration file required for Kerberos authentication.
         * 
         * @return builder
         * 
         */
        public Builder krb5FileContents(Output<String> krb5FileContents) {
            $.krb5FileContents = krb5FileContents;
            return this;
        }

        /**
         * @param krb5FileContents Contents of krb5 configuration file required for Kerberos authentication.
         * 
         * @return builder
         * 
         */
        public Builder krb5FileContents(String krb5FileContents) {
            return krb5FileContents(Output.of(krb5FileContents));
        }

        public ReplicationInstanceKerberosAuthenticationSettingsArgs build() {
            if ($.keyCacheSecretIamArn == null) {
                throw new MissingRequiredPropertyException("ReplicationInstanceKerberosAuthenticationSettingsArgs", "keyCacheSecretIamArn");
            }
            if ($.keyCacheSecretId == null) {
                throw new MissingRequiredPropertyException("ReplicationInstanceKerberosAuthenticationSettingsArgs", "keyCacheSecretId");
            }
            if ($.krb5FileContents == null) {
                throw new MissingRequiredPropertyException("ReplicationInstanceKerberosAuthenticationSettingsArgs", "krb5FileContents");
            }
            return $;
        }
    }

}
