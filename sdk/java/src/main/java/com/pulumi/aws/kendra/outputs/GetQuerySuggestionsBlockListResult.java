// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kendra.outputs;

import com.pulumi.aws.kendra.outputs.GetQuerySuggestionsBlockListSourceS3Path;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetQuerySuggestionsBlockListResult {
    /**
     * @return ARN of the block list.
     * 
     */
    private @Nullable String arn;
    /**
     * @return Date-time a block list was created.
     * 
     */
    private @Nullable String createdAt;
    /**
     * @return Description for the block list.
     * 
     */
    private @Nullable String description;
    /**
     * @return Error message containing details if there are issues processing the block list.
     * 
     */
    private @Nullable String errorMessage;
    /**
     * @return Current size of the block list text file in S3.
     * 
     */
    private @Nullable Integer fileSizeBytes;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private String indexId;
    /**
     * @return Current number of valid, non-empty words or phrases in the block list text file.
     * 
     */
    private @Nullable Integer itemCount;
    /**
     * @return Name of the block list.
     * 
     */
    private @Nullable String name;
    private String querySuggestionsBlockListId;
    /**
     * @return ARN of a role with permission to access the S3 bucket that contains the block list. For more information, see [IAM Roles for Amazon Kendra](https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html).
     * 
     */
    private @Nullable String roleArn;
    /**
     * @return S3 location of the block list input data. Detailed below.
     * 
     */
    private @Nullable List<GetQuerySuggestionsBlockListSourceS3Path> sourceS3Paths;
    /**
     * @return Current status of the block list. When the value is `ACTIVE`, the block list is ready for use.
     * 
     */
    private @Nullable String status;
    /**
     * @return Metadata that helps organize the block list you create.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Date and time that the block list was last updated.
     * 
     */
    private @Nullable String updatedAt;

    private GetQuerySuggestionsBlockListResult() {}
    /**
     * @return ARN of the block list.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return Date-time a block list was created.
     * 
     */
    public Optional<String> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }
    /**
     * @return Description for the block list.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Error message containing details if there are issues processing the block list.
     * 
     */
    public Optional<String> errorMessage() {
        return Optional.ofNullable(this.errorMessage);
    }
    /**
     * @return Current size of the block list text file in S3.
     * 
     */
    public Optional<Integer> fileSizeBytes() {
        return Optional.ofNullable(this.fileSizeBytes);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public String indexId() {
        return this.indexId;
    }
    /**
     * @return Current number of valid, non-empty words or phrases in the block list text file.
     * 
     */
    public Optional<Integer> itemCount() {
        return Optional.ofNullable(this.itemCount);
    }
    /**
     * @return Name of the block list.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public String querySuggestionsBlockListId() {
        return this.querySuggestionsBlockListId;
    }
    /**
     * @return ARN of a role with permission to access the S3 bucket that contains the block list. For more information, see [IAM Roles for Amazon Kendra](https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html).
     * 
     */
    public Optional<String> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }
    /**
     * @return S3 location of the block list input data. Detailed below.
     * 
     */
    public List<GetQuerySuggestionsBlockListSourceS3Path> sourceS3Paths() {
        return this.sourceS3Paths == null ? List.of() : this.sourceS3Paths;
    }
    /**
     * @return Current status of the block list. When the value is `ACTIVE`, the block list is ready for use.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return Metadata that helps organize the block list you create.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Date and time that the block list was last updated.
     * 
     */
    public Optional<String> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetQuerySuggestionsBlockListResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String createdAt;
        private @Nullable String description;
        private @Nullable String errorMessage;
        private @Nullable Integer fileSizeBytes;
        private @Nullable String id;
        private String indexId;
        private @Nullable Integer itemCount;
        private @Nullable String name;
        private String querySuggestionsBlockListId;
        private @Nullable String roleArn;
        private @Nullable List<GetQuerySuggestionsBlockListSourceS3Path> sourceS3Paths;
        private @Nullable String status;
        private @Nullable Map<String,String> tags;
        private @Nullable String updatedAt;
        public Builder() {}
        public Builder(GetQuerySuggestionsBlockListResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.createdAt = defaults.createdAt;
    	      this.description = defaults.description;
    	      this.errorMessage = defaults.errorMessage;
    	      this.fileSizeBytes = defaults.fileSizeBytes;
    	      this.id = defaults.id;
    	      this.indexId = defaults.indexId;
    	      this.itemCount = defaults.itemCount;
    	      this.name = defaults.name;
    	      this.querySuggestionsBlockListId = defaults.querySuggestionsBlockListId;
    	      this.roleArn = defaults.roleArn;
    	      this.sourceS3Paths = defaults.sourceS3Paths;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.updatedAt = defaults.updatedAt;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(@Nullable String createdAt) {
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder errorMessage(@Nullable String errorMessage) {
            this.errorMessage = errorMessage;
            return this;
        }
        @CustomType.Setter
        public Builder fileSizeBytes(@Nullable Integer fileSizeBytes) {
            this.fileSizeBytes = fileSizeBytes;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder indexId(String indexId) {
            this.indexId = Objects.requireNonNull(indexId);
            return this;
        }
        @CustomType.Setter
        public Builder itemCount(@Nullable Integer itemCount) {
            this.itemCount = itemCount;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder querySuggestionsBlockListId(String querySuggestionsBlockListId) {
            this.querySuggestionsBlockListId = Objects.requireNonNull(querySuggestionsBlockListId);
            return this;
        }
        @CustomType.Setter
        public Builder roleArn(@Nullable String roleArn) {
            this.roleArn = roleArn;
            return this;
        }
        @CustomType.Setter
        public Builder sourceS3Paths(@Nullable List<GetQuerySuggestionsBlockListSourceS3Path> sourceS3Paths) {
            this.sourceS3Paths = sourceS3Paths;
            return this;
        }
        public Builder sourceS3Paths(GetQuerySuggestionsBlockListSourceS3Path... sourceS3Paths) {
            return sourceS3Paths(List.of(sourceS3Paths));
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder updatedAt(@Nullable String updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }
        public GetQuerySuggestionsBlockListResult build() {
            final var o = new GetQuerySuggestionsBlockListResult();
            o.arn = arn;
            o.createdAt = createdAt;
            o.description = description;
            o.errorMessage = errorMessage;
            o.fileSizeBytes = fileSizeBytes;
            o.id = id;
            o.indexId = indexId;
            o.itemCount = itemCount;
            o.name = name;
            o.querySuggestionsBlockListId = querySuggestionsBlockListId;
            o.roleArn = roleArn;
            o.sourceS3Paths = sourceS3Paths;
            o.status = status;
            o.tags = tags;
            o.updatedAt = updatedAt;
            return o;
        }
    }
}
