// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.networkfirewall.outputs;

import com.pulumi.aws.networkfirewall.outputs.GetFirewallEncryptionConfiguration;
import com.pulumi.aws.networkfirewall.outputs.GetFirewallFirewallStatus;
import com.pulumi.aws.networkfirewall.outputs.GetFirewallSubnetMapping;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetFirewallResult {
    /**
     * @return ARN of the firewall.
     * 
     */
    private String arn;
    /**
     * @return Boolean flag indicating whether it is possible to delete the firewall.
     * 
     */
    private Boolean deleteProtection;
    /**
     * @return Description of the firewall.
     * 
     */
    private String description;
    /**
     * @return AWS Key Management Service (AWS KMS) encryption settings for the firewall.
     * 
     */
    private List<GetFirewallEncryptionConfiguration> encryptionConfigurations;
    /**
     * @return ARN of the VPC Firewall policy.
     * 
     */
    private String firewallPolicyArn;
    /**
     * @return A boolean flag indicating whether it is possible to change the associated firewall policy.
     * 
     */
    private Boolean firewallPolicyChangeProtection;
    /**
     * @return Nested list of information about the current status of the firewall.
     * 
     */
    private List<GetFirewallFirewallStatus> firewallStatuses;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Descriptive name of the firewall.
     * 
     */
    private String name;
    /**
     * @return A boolean flag indicating whether it is possible to change the associated subnet(s).
     * 
     */
    private Boolean subnetChangeProtection;
    /**
     * @return Set of configuration blocks describing the public subnets. Each subnet must belong to a different Availability Zone in the VPC. AWS Network Firewall creates a firewall endpoint in each subnet.
     * 
     */
    private List<GetFirewallSubnetMapping> subnetMappings;
    /**
     * @return Map of resource tags to associate with the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return String token used when updating a firewall.
     * 
     */
    private String updateToken;
    /**
     * @return Unique identifier of the VPC where AWS Network Firewall should create the firewall.
     * 
     */
    private String vpcId;

    private GetFirewallResult() {}
    /**
     * @return ARN of the firewall.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return Boolean flag indicating whether it is possible to delete the firewall.
     * 
     */
    public Boolean deleteProtection() {
        return this.deleteProtection;
    }
    /**
     * @return Description of the firewall.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return AWS Key Management Service (AWS KMS) encryption settings for the firewall.
     * 
     */
    public List<GetFirewallEncryptionConfiguration> encryptionConfigurations() {
        return this.encryptionConfigurations;
    }
    /**
     * @return ARN of the VPC Firewall policy.
     * 
     */
    public String firewallPolicyArn() {
        return this.firewallPolicyArn;
    }
    /**
     * @return A boolean flag indicating whether it is possible to change the associated firewall policy.
     * 
     */
    public Boolean firewallPolicyChangeProtection() {
        return this.firewallPolicyChangeProtection;
    }
    /**
     * @return Nested list of information about the current status of the firewall.
     * 
     */
    public List<GetFirewallFirewallStatus> firewallStatuses() {
        return this.firewallStatuses;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Descriptive name of the firewall.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A boolean flag indicating whether it is possible to change the associated subnet(s).
     * 
     */
    public Boolean subnetChangeProtection() {
        return this.subnetChangeProtection;
    }
    /**
     * @return Set of configuration blocks describing the public subnets. Each subnet must belong to a different Availability Zone in the VPC. AWS Network Firewall creates a firewall endpoint in each subnet.
     * 
     */
    public List<GetFirewallSubnetMapping> subnetMappings() {
        return this.subnetMappings;
    }
    /**
     * @return Map of resource tags to associate with the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return String token used when updating a firewall.
     * 
     */
    public String updateToken() {
        return this.updateToken;
    }
    /**
     * @return Unique identifier of the VPC where AWS Network Firewall should create the firewall.
     * 
     */
    public String vpcId() {
        return this.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFirewallResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private Boolean deleteProtection;
        private String description;
        private List<GetFirewallEncryptionConfiguration> encryptionConfigurations;
        private String firewallPolicyArn;
        private Boolean firewallPolicyChangeProtection;
        private List<GetFirewallFirewallStatus> firewallStatuses;
        private String id;
        private String name;
        private Boolean subnetChangeProtection;
        private List<GetFirewallSubnetMapping> subnetMappings;
        private @Nullable Map<String,String> tags;
        private String updateToken;
        private String vpcId;
        public Builder() {}
        public Builder(GetFirewallResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.deleteProtection = defaults.deleteProtection;
    	      this.description = defaults.description;
    	      this.encryptionConfigurations = defaults.encryptionConfigurations;
    	      this.firewallPolicyArn = defaults.firewallPolicyArn;
    	      this.firewallPolicyChangeProtection = defaults.firewallPolicyChangeProtection;
    	      this.firewallStatuses = defaults.firewallStatuses;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.subnetChangeProtection = defaults.subnetChangeProtection;
    	      this.subnetMappings = defaults.subnetMappings;
    	      this.tags = defaults.tags;
    	      this.updateToken = defaults.updateToken;
    	      this.vpcId = defaults.vpcId;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder deleteProtection(Boolean deleteProtection) {
            this.deleteProtection = Objects.requireNonNull(deleteProtection);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder encryptionConfigurations(List<GetFirewallEncryptionConfiguration> encryptionConfigurations) {
            this.encryptionConfigurations = Objects.requireNonNull(encryptionConfigurations);
            return this;
        }
        public Builder encryptionConfigurations(GetFirewallEncryptionConfiguration... encryptionConfigurations) {
            return encryptionConfigurations(List.of(encryptionConfigurations));
        }
        @CustomType.Setter
        public Builder firewallPolicyArn(String firewallPolicyArn) {
            this.firewallPolicyArn = Objects.requireNonNull(firewallPolicyArn);
            return this;
        }
        @CustomType.Setter
        public Builder firewallPolicyChangeProtection(Boolean firewallPolicyChangeProtection) {
            this.firewallPolicyChangeProtection = Objects.requireNonNull(firewallPolicyChangeProtection);
            return this;
        }
        @CustomType.Setter
        public Builder firewallStatuses(List<GetFirewallFirewallStatus> firewallStatuses) {
            this.firewallStatuses = Objects.requireNonNull(firewallStatuses);
            return this;
        }
        public Builder firewallStatuses(GetFirewallFirewallStatus... firewallStatuses) {
            return firewallStatuses(List.of(firewallStatuses));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder subnetChangeProtection(Boolean subnetChangeProtection) {
            this.subnetChangeProtection = Objects.requireNonNull(subnetChangeProtection);
            return this;
        }
        @CustomType.Setter
        public Builder subnetMappings(List<GetFirewallSubnetMapping> subnetMappings) {
            this.subnetMappings = Objects.requireNonNull(subnetMappings);
            return this;
        }
        public Builder subnetMappings(GetFirewallSubnetMapping... subnetMappings) {
            return subnetMappings(List.of(subnetMappings));
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder updateToken(String updateToken) {
            this.updateToken = Objects.requireNonNull(updateToken);
            return this;
        }
        @CustomType.Setter
        public Builder vpcId(String vpcId) {
            this.vpcId = Objects.requireNonNull(vpcId);
            return this;
        }
        public GetFirewallResult build() {
            final var o = new GetFirewallResult();
            o.arn = arn;
            o.deleteProtection = deleteProtection;
            o.description = description;
            o.encryptionConfigurations = encryptionConfigurations;
            o.firewallPolicyArn = firewallPolicyArn;
            o.firewallPolicyChangeProtection = firewallPolicyChangeProtection;
            o.firewallStatuses = firewallStatuses;
            o.id = id;
            o.name = name;
            o.subnetChangeProtection = subnetChangeProtection;
            o.subnetMappings = subnetMappings;
            o.tags = tags;
            o.updateToken = updateToken;
            o.vpcId = vpcId;
            return o;
        }
    }
}
