// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecr.outputs;

import com.pulumi.aws.ecr.outputs.GetLifecyclePolicyDocumentRuleAction;
import com.pulumi.aws.ecr.outputs.GetLifecyclePolicyDocumentRuleSelection;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetLifecyclePolicyDocumentRule {
    /**
     * @return Specifies the action type.
     * 
     */
    private @Nullable GetLifecyclePolicyDocumentRuleAction action;
    /**
     * @return Describes the purpose of a rule within a lifecycle policy.
     * 
     */
    private @Nullable String description;
    /**
     * @return Sets the order in which rules are evaluated, lowest to highest. When you add rules to a lifecycle policy, you must give them each a unique value for `priority`. Values do not need to be sequential across rules in a policy. A rule with a `tag_status` value of any must have the highest value for `priority` and be evaluated last.
     * 
     */
    private Integer priority;
    /**
     * @return Collects parameters describing the selection criteria for the ECR lifecycle policy:
     * 
     */
    private @Nullable GetLifecyclePolicyDocumentRuleSelection selection;

    private GetLifecyclePolicyDocumentRule() {}
    /**
     * @return Specifies the action type.
     * 
     */
    public Optional<GetLifecyclePolicyDocumentRuleAction> action() {
        return Optional.ofNullable(this.action);
    }
    /**
     * @return Describes the purpose of a rule within a lifecycle policy.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Sets the order in which rules are evaluated, lowest to highest. When you add rules to a lifecycle policy, you must give them each a unique value for `priority`. Values do not need to be sequential across rules in a policy. A rule with a `tag_status` value of any must have the highest value for `priority` and be evaluated last.
     * 
     */
    public Integer priority() {
        return this.priority;
    }
    /**
     * @return Collects parameters describing the selection criteria for the ECR lifecycle policy:
     * 
     */
    public Optional<GetLifecyclePolicyDocumentRuleSelection> selection() {
        return Optional.ofNullable(this.selection);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLifecyclePolicyDocumentRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable GetLifecyclePolicyDocumentRuleAction action;
        private @Nullable String description;
        private Integer priority;
        private @Nullable GetLifecyclePolicyDocumentRuleSelection selection;
        public Builder() {}
        public Builder(GetLifecyclePolicyDocumentRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.description = defaults.description;
    	      this.priority = defaults.priority;
    	      this.selection = defaults.selection;
        }

        @CustomType.Setter
        public Builder action(@Nullable GetLifecyclePolicyDocumentRuleAction action) {

            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder priority(Integer priority) {
            if (priority == null) {
              throw new MissingRequiredPropertyException("GetLifecyclePolicyDocumentRule", "priority");
            }
            this.priority = priority;
            return this;
        }
        @CustomType.Setter
        public Builder selection(@Nullable GetLifecyclePolicyDocumentRuleSelection selection) {

            this.selection = selection;
            return this;
        }
        public GetLifecyclePolicyDocumentRule build() {
            final var _resultValue = new GetLifecyclePolicyDocumentRule();
            _resultValue.action = action;
            _resultValue.description = description;
            _resultValue.priority = priority;
            _resultValue.selection = selection;
            return _resultValue;
        }
    }
}
