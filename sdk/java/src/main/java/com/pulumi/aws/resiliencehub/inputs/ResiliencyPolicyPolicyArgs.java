// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.resiliencehub.inputs;

import com.pulumi.aws.resiliencehub.inputs.ResiliencyPolicyPolicyAzArgs;
import com.pulumi.aws.resiliencehub.inputs.ResiliencyPolicyPolicyHardwareArgs;
import com.pulumi.aws.resiliencehub.inputs.ResiliencyPolicyPolicyRegionArgs;
import com.pulumi.aws.resiliencehub.inputs.ResiliencyPolicyPolicySoftwareArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResiliencyPolicyPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResiliencyPolicyPolicyArgs Empty = new ResiliencyPolicyPolicyArgs();

    /**
     * Specifies Availability Zone failure policy. See `policy.az`
     * 
     */
    @Import(name="az")
    private @Nullable Output<ResiliencyPolicyPolicyAzArgs> az;

    /**
     * @return Specifies Availability Zone failure policy. See `policy.az`
     * 
     */
    public Optional<Output<ResiliencyPolicyPolicyAzArgs>> az() {
        return Optional.ofNullable(this.az);
    }

    /**
     * Specifies Infrastructure failure policy. See `policy.hardware`
     * 
     */
    @Import(name="hardware")
    private @Nullable Output<ResiliencyPolicyPolicyHardwareArgs> hardware;

    /**
     * @return Specifies Infrastructure failure policy. See `policy.hardware`
     * 
     */
    public Optional<Output<ResiliencyPolicyPolicyHardwareArgs>> hardware() {
        return Optional.ofNullable(this.hardware);
    }

    /**
     * Specifies Region failure policy. `policy.region`
     * 
     */
    @Import(name="region")
    private @Nullable Output<ResiliencyPolicyPolicyRegionArgs> region;

    /**
     * @return Specifies Region failure policy. `policy.region`
     * 
     */
    public Optional<Output<ResiliencyPolicyPolicyRegionArgs>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Specifies Application failure policy. See `policy.software`
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="software")
    private @Nullable Output<ResiliencyPolicyPolicySoftwareArgs> software;

    /**
     * @return Specifies Application failure policy. See `policy.software`
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<ResiliencyPolicyPolicySoftwareArgs>> software() {
        return Optional.ofNullable(this.software);
    }

    private ResiliencyPolicyPolicyArgs() {}

    private ResiliencyPolicyPolicyArgs(ResiliencyPolicyPolicyArgs $) {
        this.az = $.az;
        this.hardware = $.hardware;
        this.region = $.region;
        this.software = $.software;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResiliencyPolicyPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResiliencyPolicyPolicyArgs $;

        public Builder() {
            $ = new ResiliencyPolicyPolicyArgs();
        }

        public Builder(ResiliencyPolicyPolicyArgs defaults) {
            $ = new ResiliencyPolicyPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param az Specifies Availability Zone failure policy. See `policy.az`
         * 
         * @return builder
         * 
         */
        public Builder az(@Nullable Output<ResiliencyPolicyPolicyAzArgs> az) {
            $.az = az;
            return this;
        }

        /**
         * @param az Specifies Availability Zone failure policy. See `policy.az`
         * 
         * @return builder
         * 
         */
        public Builder az(ResiliencyPolicyPolicyAzArgs az) {
            return az(Output.of(az));
        }

        /**
         * @param hardware Specifies Infrastructure failure policy. See `policy.hardware`
         * 
         * @return builder
         * 
         */
        public Builder hardware(@Nullable Output<ResiliencyPolicyPolicyHardwareArgs> hardware) {
            $.hardware = hardware;
            return this;
        }

        /**
         * @param hardware Specifies Infrastructure failure policy. See `policy.hardware`
         * 
         * @return builder
         * 
         */
        public Builder hardware(ResiliencyPolicyPolicyHardwareArgs hardware) {
            return hardware(Output.of(hardware));
        }

        /**
         * @param region Specifies Region failure policy. `policy.region`
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<ResiliencyPolicyPolicyRegionArgs> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Specifies Region failure policy. `policy.region`
         * 
         * @return builder
         * 
         */
        public Builder region(ResiliencyPolicyPolicyRegionArgs region) {
            return region(Output.of(region));
        }

        /**
         * @param software Specifies Application failure policy. See `policy.software`
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder software(@Nullable Output<ResiliencyPolicyPolicySoftwareArgs> software) {
            $.software = software;
            return this;
        }

        /**
         * @param software Specifies Application failure policy. See `policy.software`
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder software(ResiliencyPolicyPolicySoftwareArgs software) {
            return software(Output.of(software));
        }

        public ResiliencyPolicyPolicyArgs build() {
            return $;
        }
    }

}
