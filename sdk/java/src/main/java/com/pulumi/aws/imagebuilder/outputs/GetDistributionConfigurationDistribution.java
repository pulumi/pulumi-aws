// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.imagebuilder.outputs;

import com.pulumi.aws.imagebuilder.outputs.GetDistributionConfigurationDistributionAmiDistributionConfiguration;
import com.pulumi.aws.imagebuilder.outputs.GetDistributionConfigurationDistributionContainerDistributionConfiguration;
import com.pulumi.aws.imagebuilder.outputs.GetDistributionConfigurationDistributionFastLaunchConfiguration;
import com.pulumi.aws.imagebuilder.outputs.GetDistributionConfigurationDistributionLaunchTemplateConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDistributionConfigurationDistribution {
    /**
     * @return Nested list of AMI distribution configuration.
     * 
     */
    private List<GetDistributionConfigurationDistributionAmiDistributionConfiguration> amiDistributionConfigurations;
    /**
     * @return Nested list of container distribution configurations.
     * 
     */
    private List<GetDistributionConfigurationDistributionContainerDistributionConfiguration> containerDistributionConfigurations;
    /**
     * @return Nested list of Windows faster-launching configurations to use for AMI distribution.
     * 
     */
    private List<GetDistributionConfigurationDistributionFastLaunchConfiguration> fastLaunchConfigurations;
    /**
     * @return Nested list of launch template configurations.
     * 
     */
    private List<GetDistributionConfigurationDistributionLaunchTemplateConfiguration> launchTemplateConfigurations;
    /**
     * @return Set of Amazon Resource Names (ARNs) of License Manager License Configurations.
     * 
     */
    private List<String> licenseConfigurationArns;
    /**
     * @return AWS Region of distribution.
     * 
     */
    private String region;

    private GetDistributionConfigurationDistribution() {}
    /**
     * @return Nested list of AMI distribution configuration.
     * 
     */
    public List<GetDistributionConfigurationDistributionAmiDistributionConfiguration> amiDistributionConfigurations() {
        return this.amiDistributionConfigurations;
    }
    /**
     * @return Nested list of container distribution configurations.
     * 
     */
    public List<GetDistributionConfigurationDistributionContainerDistributionConfiguration> containerDistributionConfigurations() {
        return this.containerDistributionConfigurations;
    }
    /**
     * @return Nested list of Windows faster-launching configurations to use for AMI distribution.
     * 
     */
    public List<GetDistributionConfigurationDistributionFastLaunchConfiguration> fastLaunchConfigurations() {
        return this.fastLaunchConfigurations;
    }
    /**
     * @return Nested list of launch template configurations.
     * 
     */
    public List<GetDistributionConfigurationDistributionLaunchTemplateConfiguration> launchTemplateConfigurations() {
        return this.launchTemplateConfigurations;
    }
    /**
     * @return Set of Amazon Resource Names (ARNs) of License Manager License Configurations.
     * 
     */
    public List<String> licenseConfigurationArns() {
        return this.licenseConfigurationArns;
    }
    /**
     * @return AWS Region of distribution.
     * 
     */
    public String region() {
        return this.region;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDistributionConfigurationDistribution defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetDistributionConfigurationDistributionAmiDistributionConfiguration> amiDistributionConfigurations;
        private List<GetDistributionConfigurationDistributionContainerDistributionConfiguration> containerDistributionConfigurations;
        private List<GetDistributionConfigurationDistributionFastLaunchConfiguration> fastLaunchConfigurations;
        private List<GetDistributionConfigurationDistributionLaunchTemplateConfiguration> launchTemplateConfigurations;
        private List<String> licenseConfigurationArns;
        private String region;
        public Builder() {}
        public Builder(GetDistributionConfigurationDistribution defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.amiDistributionConfigurations = defaults.amiDistributionConfigurations;
    	      this.containerDistributionConfigurations = defaults.containerDistributionConfigurations;
    	      this.fastLaunchConfigurations = defaults.fastLaunchConfigurations;
    	      this.launchTemplateConfigurations = defaults.launchTemplateConfigurations;
    	      this.licenseConfigurationArns = defaults.licenseConfigurationArns;
    	      this.region = defaults.region;
        }

        @CustomType.Setter
        public Builder amiDistributionConfigurations(List<GetDistributionConfigurationDistributionAmiDistributionConfiguration> amiDistributionConfigurations) {
            this.amiDistributionConfigurations = Objects.requireNonNull(amiDistributionConfigurations);
            return this;
        }
        public Builder amiDistributionConfigurations(GetDistributionConfigurationDistributionAmiDistributionConfiguration... amiDistributionConfigurations) {
            return amiDistributionConfigurations(List.of(amiDistributionConfigurations));
        }
        @CustomType.Setter
        public Builder containerDistributionConfigurations(List<GetDistributionConfigurationDistributionContainerDistributionConfiguration> containerDistributionConfigurations) {
            this.containerDistributionConfigurations = Objects.requireNonNull(containerDistributionConfigurations);
            return this;
        }
        public Builder containerDistributionConfigurations(GetDistributionConfigurationDistributionContainerDistributionConfiguration... containerDistributionConfigurations) {
            return containerDistributionConfigurations(List.of(containerDistributionConfigurations));
        }
        @CustomType.Setter
        public Builder fastLaunchConfigurations(List<GetDistributionConfigurationDistributionFastLaunchConfiguration> fastLaunchConfigurations) {
            this.fastLaunchConfigurations = Objects.requireNonNull(fastLaunchConfigurations);
            return this;
        }
        public Builder fastLaunchConfigurations(GetDistributionConfigurationDistributionFastLaunchConfiguration... fastLaunchConfigurations) {
            return fastLaunchConfigurations(List.of(fastLaunchConfigurations));
        }
        @CustomType.Setter
        public Builder launchTemplateConfigurations(List<GetDistributionConfigurationDistributionLaunchTemplateConfiguration> launchTemplateConfigurations) {
            this.launchTemplateConfigurations = Objects.requireNonNull(launchTemplateConfigurations);
            return this;
        }
        public Builder launchTemplateConfigurations(GetDistributionConfigurationDistributionLaunchTemplateConfiguration... launchTemplateConfigurations) {
            return launchTemplateConfigurations(List.of(launchTemplateConfigurations));
        }
        @CustomType.Setter
        public Builder licenseConfigurationArns(List<String> licenseConfigurationArns) {
            this.licenseConfigurationArns = Objects.requireNonNull(licenseConfigurationArns);
            return this;
        }
        public Builder licenseConfigurationArns(String... licenseConfigurationArns) {
            return licenseConfigurationArns(List.of(licenseConfigurationArns));
        }
        @CustomType.Setter
        public Builder region(String region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }
        public GetDistributionConfigurationDistribution build() {
            final var o = new GetDistributionConfigurationDistribution();
            o.amiDistributionConfigurations = amiDistributionConfigurations;
            o.containerDistributionConfigurations = containerDistributionConfigurations;
            o.fastLaunchConfigurations = fastLaunchConfigurations;
            o.launchTemplateConfigurations = launchTemplateConfigurations;
            o.licenseConfigurationArns = licenseConfigurationArns;
            o.region = region;
            return o;
        }
    }
}
