// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.medialive.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ChannelEncoderSettingsAudioDescriptionCodecSettingsAacSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ChannelEncoderSettingsAudioDescriptionCodecSettingsAacSettingsArgs Empty = new ChannelEncoderSettingsAudioDescriptionCodecSettingsAacSettingsArgs();

    @Import(name="bitrate")
    private @Nullable Output<Double> bitrate;

    public Optional<Output<Double>> bitrate() {
        return Optional.ofNullable(this.bitrate);
    }

    @Import(name="codingMode")
    private @Nullable Output<String> codingMode;

    public Optional<Output<String>> codingMode() {
        return Optional.ofNullable(this.codingMode);
    }

    @Import(name="inputType")
    private @Nullable Output<String> inputType;

    public Optional<Output<String>> inputType() {
        return Optional.ofNullable(this.inputType);
    }

    @Import(name="profile")
    private @Nullable Output<String> profile;

    public Optional<Output<String>> profile() {
        return Optional.ofNullable(this.profile);
    }

    @Import(name="rawFormat")
    private @Nullable Output<String> rawFormat;

    public Optional<Output<String>> rawFormat() {
        return Optional.ofNullable(this.rawFormat);
    }

    @Import(name="sampleRate")
    private @Nullable Output<Double> sampleRate;

    public Optional<Output<Double>> sampleRate() {
        return Optional.ofNullable(this.sampleRate);
    }

    @Import(name="spec")
    private @Nullable Output<String> spec;

    public Optional<Output<String>> spec() {
        return Optional.ofNullable(this.spec);
    }

    @Import(name="vbrQuality")
    private @Nullable Output<String> vbrQuality;

    public Optional<Output<String>> vbrQuality() {
        return Optional.ofNullable(this.vbrQuality);
    }

    private ChannelEncoderSettingsAudioDescriptionCodecSettingsAacSettingsArgs() {}

    private ChannelEncoderSettingsAudioDescriptionCodecSettingsAacSettingsArgs(ChannelEncoderSettingsAudioDescriptionCodecSettingsAacSettingsArgs $) {
        this.bitrate = $.bitrate;
        this.codingMode = $.codingMode;
        this.inputType = $.inputType;
        this.profile = $.profile;
        this.rawFormat = $.rawFormat;
        this.sampleRate = $.sampleRate;
        this.spec = $.spec;
        this.vbrQuality = $.vbrQuality;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ChannelEncoderSettingsAudioDescriptionCodecSettingsAacSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ChannelEncoderSettingsAudioDescriptionCodecSettingsAacSettingsArgs $;

        public Builder() {
            $ = new ChannelEncoderSettingsAudioDescriptionCodecSettingsAacSettingsArgs();
        }

        public Builder(ChannelEncoderSettingsAudioDescriptionCodecSettingsAacSettingsArgs defaults) {
            $ = new ChannelEncoderSettingsAudioDescriptionCodecSettingsAacSettingsArgs(Objects.requireNonNull(defaults));
        }

        public Builder bitrate(@Nullable Output<Double> bitrate) {
            $.bitrate = bitrate;
            return this;
        }

        public Builder bitrate(Double bitrate) {
            return bitrate(Output.of(bitrate));
        }

        public Builder codingMode(@Nullable Output<String> codingMode) {
            $.codingMode = codingMode;
            return this;
        }

        public Builder codingMode(String codingMode) {
            return codingMode(Output.of(codingMode));
        }

        public Builder inputType(@Nullable Output<String> inputType) {
            $.inputType = inputType;
            return this;
        }

        public Builder inputType(String inputType) {
            return inputType(Output.of(inputType));
        }

        public Builder profile(@Nullable Output<String> profile) {
            $.profile = profile;
            return this;
        }

        public Builder profile(String profile) {
            return profile(Output.of(profile));
        }

        public Builder rawFormat(@Nullable Output<String> rawFormat) {
            $.rawFormat = rawFormat;
            return this;
        }

        public Builder rawFormat(String rawFormat) {
            return rawFormat(Output.of(rawFormat));
        }

        public Builder sampleRate(@Nullable Output<Double> sampleRate) {
            $.sampleRate = sampleRate;
            return this;
        }

        public Builder sampleRate(Double sampleRate) {
            return sampleRate(Output.of(sampleRate));
        }

        public Builder spec(@Nullable Output<String> spec) {
            $.spec = spec;
            return this;
        }

        public Builder spec(String spec) {
            return spec(Output.of(spec));
        }

        public Builder vbrQuality(@Nullable Output<String> vbrQuality) {
            $.vbrQuality = vbrQuality;
            return this;
        }

        public Builder vbrQuality(String vbrQuality) {
            return vbrQuality(Output.of(vbrQuality));
        }

        public ChannelEncoderSettingsAudioDescriptionCodecSettingsAacSettingsArgs build() {
            return $;
        }
    }

}
