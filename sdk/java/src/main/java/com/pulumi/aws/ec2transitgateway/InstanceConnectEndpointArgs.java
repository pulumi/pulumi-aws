// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2transitgateway;

import com.pulumi.aws.ec2transitgateway.inputs.InstanceConnectEndpointTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceConnectEndpointArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceConnectEndpointArgs Empty = new InstanceConnectEndpointArgs();

    /**
     * Indicates whether your client&#39;s IP address is preserved as the source. Default: `true`.
     * 
     */
    @Import(name="preserveClientIp")
    private @Nullable Output<Boolean> preserveClientIp;

    /**
     * @return Indicates whether your client&#39;s IP address is preserved as the source. Default: `true`.
     * 
     */
    public Optional<Output<Boolean>> preserveClientIp() {
        return Optional.ofNullable(this.preserveClientIp);
    }

    /**
     * One or more security groups to associate with the endpoint. If you don&#39;t specify a security group, the default security group for the VPC will be associated with the endpoint.
     * 
     */
    @Import(name="securityGroupIds")
    private @Nullable Output<List<String>> securityGroupIds;

    /**
     * @return One or more security groups to associate with the endpoint. If you don&#39;t specify a security group, the default security group for the VPC will be associated with the endpoint.
     * 
     */
    public Optional<Output<List<String>>> securityGroupIds() {
        return Optional.ofNullable(this.securityGroupIds);
    }

    /**
     * The ID of the subnet in which to create the EC2 Instance Connect Endpoint.
     * 
     */
    @Import(name="subnetId", required=true)
    private Output<String> subnetId;

    /**
     * @return The ID of the subnet in which to create the EC2 Instance Connect Endpoint.
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }

    /**
     * Map of tags to assign to this resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Map of tags to assign to this resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="timeouts")
    private @Nullable Output<InstanceConnectEndpointTimeoutsArgs> timeouts;

    public Optional<Output<InstanceConnectEndpointTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private InstanceConnectEndpointArgs() {}

    private InstanceConnectEndpointArgs(InstanceConnectEndpointArgs $) {
        this.preserveClientIp = $.preserveClientIp;
        this.securityGroupIds = $.securityGroupIds;
        this.subnetId = $.subnetId;
        this.tags = $.tags;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceConnectEndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceConnectEndpointArgs $;

        public Builder() {
            $ = new InstanceConnectEndpointArgs();
        }

        public Builder(InstanceConnectEndpointArgs defaults) {
            $ = new InstanceConnectEndpointArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param preserveClientIp Indicates whether your client&#39;s IP address is preserved as the source. Default: `true`.
         * 
         * @return builder
         * 
         */
        public Builder preserveClientIp(@Nullable Output<Boolean> preserveClientIp) {
            $.preserveClientIp = preserveClientIp;
            return this;
        }

        /**
         * @param preserveClientIp Indicates whether your client&#39;s IP address is preserved as the source. Default: `true`.
         * 
         * @return builder
         * 
         */
        public Builder preserveClientIp(Boolean preserveClientIp) {
            return preserveClientIp(Output.of(preserveClientIp));
        }

        /**
         * @param securityGroupIds One or more security groups to associate with the endpoint. If you don&#39;t specify a security group, the default security group for the VPC will be associated with the endpoint.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(@Nullable Output<List<String>> securityGroupIds) {
            $.securityGroupIds = securityGroupIds;
            return this;
        }

        /**
         * @param securityGroupIds One or more security groups to associate with the endpoint. If you don&#39;t specify a security group, the default security group for the VPC will be associated with the endpoint.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(List<String> securityGroupIds) {
            return securityGroupIds(Output.of(securityGroupIds));
        }

        /**
         * @param securityGroupIds One or more security groups to associate with the endpoint. If you don&#39;t specify a security group, the default security group for the VPC will be associated with the endpoint.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }

        /**
         * @param subnetId The ID of the subnet in which to create the EC2 Instance Connect Endpoint.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId The ID of the subnet in which to create the EC2 Instance Connect Endpoint.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        /**
         * @param tags Map of tags to assign to this resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Map of tags to assign to this resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder timeouts(@Nullable Output<InstanceConnectEndpointTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(InstanceConnectEndpointTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public InstanceConnectEndpointArgs build() {
            $.subnetId = Objects.requireNonNull($.subnetId, "expected parameter 'subnetId' to be non-null");
            return $;
        }
    }

}
