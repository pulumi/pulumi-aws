// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codegurureviewer.outputs;

import com.pulumi.aws.codegurureviewer.outputs.RepositoryAssociationRepositoryBitbucket;
import com.pulumi.aws.codegurureviewer.outputs.RepositoryAssociationRepositoryCodecommit;
import com.pulumi.aws.codegurureviewer.outputs.RepositoryAssociationRepositoryGithubEnterpriseServer;
import com.pulumi.aws.codegurureviewer.outputs.RepositoryAssociationRepositoryS3Bucket;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RepositoryAssociationRepository {
    private @Nullable RepositoryAssociationRepositoryBitbucket bitbucket;
    private @Nullable RepositoryAssociationRepositoryCodecommit codecommit;
    private @Nullable RepositoryAssociationRepositoryGithubEnterpriseServer githubEnterpriseServer;
    private @Nullable RepositoryAssociationRepositoryS3Bucket s3Bucket;

    private RepositoryAssociationRepository() {}
    public Optional<RepositoryAssociationRepositoryBitbucket> bitbucket() {
        return Optional.ofNullable(this.bitbucket);
    }
    public Optional<RepositoryAssociationRepositoryCodecommit> codecommit() {
        return Optional.ofNullable(this.codecommit);
    }
    public Optional<RepositoryAssociationRepositoryGithubEnterpriseServer> githubEnterpriseServer() {
        return Optional.ofNullable(this.githubEnterpriseServer);
    }
    public Optional<RepositoryAssociationRepositoryS3Bucket> s3Bucket() {
        return Optional.ofNullable(this.s3Bucket);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RepositoryAssociationRepository defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable RepositoryAssociationRepositoryBitbucket bitbucket;
        private @Nullable RepositoryAssociationRepositoryCodecommit codecommit;
        private @Nullable RepositoryAssociationRepositoryGithubEnterpriseServer githubEnterpriseServer;
        private @Nullable RepositoryAssociationRepositoryS3Bucket s3Bucket;
        public Builder() {}
        public Builder(RepositoryAssociationRepository defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bitbucket = defaults.bitbucket;
    	      this.codecommit = defaults.codecommit;
    	      this.githubEnterpriseServer = defaults.githubEnterpriseServer;
    	      this.s3Bucket = defaults.s3Bucket;
        }

        @CustomType.Setter
        public Builder bitbucket(@Nullable RepositoryAssociationRepositoryBitbucket bitbucket) {
            this.bitbucket = bitbucket;
            return this;
        }
        @CustomType.Setter
        public Builder codecommit(@Nullable RepositoryAssociationRepositoryCodecommit codecommit) {
            this.codecommit = codecommit;
            return this;
        }
        @CustomType.Setter
        public Builder githubEnterpriseServer(@Nullable RepositoryAssociationRepositoryGithubEnterpriseServer githubEnterpriseServer) {
            this.githubEnterpriseServer = githubEnterpriseServer;
            return this;
        }
        @CustomType.Setter
        public Builder s3Bucket(@Nullable RepositoryAssociationRepositoryS3Bucket s3Bucket) {
            this.s3Bucket = s3Bucket;
            return this;
        }
        public RepositoryAssociationRepository build() {
            final var o = new RepositoryAssociationRepository();
            o.bitbucket = bitbucket;
            o.codecommit = codecommit;
            o.githubEnterpriseServer = githubEnterpriseServer;
            o.s3Bucket = s3Bucket;
            return o;
        }
    }
}
