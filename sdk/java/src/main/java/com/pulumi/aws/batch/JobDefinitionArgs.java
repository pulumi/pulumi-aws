// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.batch;

import com.pulumi.aws.batch.inputs.JobDefinitionRetryStrategyArgs;
import com.pulumi.aws.batch.inputs.JobDefinitionTimeoutArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobDefinitionArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobDefinitionArgs Empty = new JobDefinitionArgs();

    @Import(name="containerProperties")
    private @Nullable Output<String> containerProperties;

    public Optional<Output<String>> containerProperties() {
        return Optional.ofNullable(this.containerProperties);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="parameters")
    private @Nullable Output<Map<String,String>> parameters;

    public Optional<Output<Map<String,String>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    @Import(name="platformCapabilities")
    private @Nullable Output<List<String>> platformCapabilities;

    public Optional<Output<List<String>>> platformCapabilities() {
        return Optional.ofNullable(this.platformCapabilities);
    }

    @Import(name="propagateTags")
    private @Nullable Output<Boolean> propagateTags;

    public Optional<Output<Boolean>> propagateTags() {
        return Optional.ofNullable(this.propagateTags);
    }

    @Import(name="retryStrategy")
    private @Nullable Output<JobDefinitionRetryStrategyArgs> retryStrategy;

    public Optional<Output<JobDefinitionRetryStrategyArgs>> retryStrategy() {
        return Optional.ofNullable(this.retryStrategy);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="timeout")
    private @Nullable Output<JobDefinitionTimeoutArgs> timeout;

    public Optional<Output<JobDefinitionTimeoutArgs>> timeout() {
        return Optional.ofNullable(this.timeout);
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    private JobDefinitionArgs() {}

    private JobDefinitionArgs(JobDefinitionArgs $) {
        this.containerProperties = $.containerProperties;
        this.name = $.name;
        this.parameters = $.parameters;
        this.platformCapabilities = $.platformCapabilities;
        this.propagateTags = $.propagateTags;
        this.retryStrategy = $.retryStrategy;
        this.tags = $.tags;
        this.timeout = $.timeout;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobDefinitionArgs $;

        public Builder() {
            $ = new JobDefinitionArgs();
        }

        public Builder(JobDefinitionArgs defaults) {
            $ = new JobDefinitionArgs(Objects.requireNonNull(defaults));
        }

        public Builder containerProperties(@Nullable Output<String> containerProperties) {
            $.containerProperties = containerProperties;
            return this;
        }

        public Builder containerProperties(String containerProperties) {
            return containerProperties(Output.of(containerProperties));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder parameters(@Nullable Output<Map<String,String>> parameters) {
            $.parameters = parameters;
            return this;
        }

        public Builder parameters(Map<String,String> parameters) {
            return parameters(Output.of(parameters));
        }

        public Builder platformCapabilities(@Nullable Output<List<String>> platformCapabilities) {
            $.platformCapabilities = platformCapabilities;
            return this;
        }

        public Builder platformCapabilities(List<String> platformCapabilities) {
            return platformCapabilities(Output.of(platformCapabilities));
        }

        public Builder platformCapabilities(String... platformCapabilities) {
            return platformCapabilities(List.of(platformCapabilities));
        }

        public Builder propagateTags(@Nullable Output<Boolean> propagateTags) {
            $.propagateTags = propagateTags;
            return this;
        }

        public Builder propagateTags(Boolean propagateTags) {
            return propagateTags(Output.of(propagateTags));
        }

        public Builder retryStrategy(@Nullable Output<JobDefinitionRetryStrategyArgs> retryStrategy) {
            $.retryStrategy = retryStrategy;
            return this;
        }

        public Builder retryStrategy(JobDefinitionRetryStrategyArgs retryStrategy) {
            return retryStrategy(Output.of(retryStrategy));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder timeout(@Nullable Output<JobDefinitionTimeoutArgs> timeout) {
            $.timeout = timeout;
            return this;
        }

        public Builder timeout(JobDefinitionTimeoutArgs timeout) {
            return timeout(Output.of(timeout));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public JobDefinitionArgs build() {
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
