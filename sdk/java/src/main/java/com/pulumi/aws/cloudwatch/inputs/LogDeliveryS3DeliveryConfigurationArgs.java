// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudwatch.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class LogDeliveryS3DeliveryConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogDeliveryS3DeliveryConfigurationArgs Empty = new LogDeliveryS3DeliveryConfigurationArgs();

    /**
     * This parameter causes the S3 objects that contain delivered logs to use a prefix structure that allows for integration with Apache Hive.
     * 
     */
    @Import(name="enableHiveCompatiblePath", required=true)
    private Output<Boolean> enableHiveCompatiblePath;

    /**
     * @return This parameter causes the S3 objects that contain delivered logs to use a prefix structure that allows for integration with Apache Hive.
     * 
     */
    public Output<Boolean> enableHiveCompatiblePath() {
        return this.enableHiveCompatiblePath;
    }

    /**
     * This string allows re-configuring the S3 object prefix to contain either static or variable sections. The valid variables to use in the suffix path will vary by each log source.
     * 
     */
    @Import(name="suffixPath", required=true)
    private Output<String> suffixPath;

    /**
     * @return This string allows re-configuring the S3 object prefix to contain either static or variable sections. The valid variables to use in the suffix path will vary by each log source.
     * 
     */
    public Output<String> suffixPath() {
        return this.suffixPath;
    }

    private LogDeliveryS3DeliveryConfigurationArgs() {}

    private LogDeliveryS3DeliveryConfigurationArgs(LogDeliveryS3DeliveryConfigurationArgs $) {
        this.enableHiveCompatiblePath = $.enableHiveCompatiblePath;
        this.suffixPath = $.suffixPath;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogDeliveryS3DeliveryConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogDeliveryS3DeliveryConfigurationArgs $;

        public Builder() {
            $ = new LogDeliveryS3DeliveryConfigurationArgs();
        }

        public Builder(LogDeliveryS3DeliveryConfigurationArgs defaults) {
            $ = new LogDeliveryS3DeliveryConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enableHiveCompatiblePath This parameter causes the S3 objects that contain delivered logs to use a prefix structure that allows for integration with Apache Hive.
         * 
         * @return builder
         * 
         */
        public Builder enableHiveCompatiblePath(Output<Boolean> enableHiveCompatiblePath) {
            $.enableHiveCompatiblePath = enableHiveCompatiblePath;
            return this;
        }

        /**
         * @param enableHiveCompatiblePath This parameter causes the S3 objects that contain delivered logs to use a prefix structure that allows for integration with Apache Hive.
         * 
         * @return builder
         * 
         */
        public Builder enableHiveCompatiblePath(Boolean enableHiveCompatiblePath) {
            return enableHiveCompatiblePath(Output.of(enableHiveCompatiblePath));
        }

        /**
         * @param suffixPath This string allows re-configuring the S3 object prefix to contain either static or variable sections. The valid variables to use in the suffix path will vary by each log source.
         * 
         * @return builder
         * 
         */
        public Builder suffixPath(Output<String> suffixPath) {
            $.suffixPath = suffixPath;
            return this;
        }

        /**
         * @param suffixPath This string allows re-configuring the S3 object prefix to contain either static or variable sections. The valid variables to use in the suffix path will vary by each log source.
         * 
         * @return builder
         * 
         */
        public Builder suffixPath(String suffixPath) {
            return suffixPath(Output.of(suffixPath));
        }

        public LogDeliveryS3DeliveryConfigurationArgs build() {
            if ($.enableHiveCompatiblePath == null) {
                throw new MissingRequiredPropertyException("LogDeliveryS3DeliveryConfigurationArgs", "enableHiveCompatiblePath");
            }
            if ($.suffixPath == null) {
                throw new MissingRequiredPropertyException("LogDeliveryS3DeliveryConfigurationArgs", "suffixPath");
            }
            return $;
        }
    }

}
