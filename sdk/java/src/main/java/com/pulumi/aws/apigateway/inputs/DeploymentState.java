// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apigateway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeploymentState extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentState Empty = new DeploymentState();

    @Import(name="createdDate")
    private @Nullable Output<String> createdDate;

    public Optional<Output<String>> createdDate() {
        return Optional.ofNullable(this.createdDate);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="executionArn")
    private @Nullable Output<String> executionArn;

    public Optional<Output<String>> executionArn() {
        return Optional.ofNullable(this.executionArn);
    }

    @Import(name="invokeUrl")
    private @Nullable Output<String> invokeUrl;

    public Optional<Output<String>> invokeUrl() {
        return Optional.ofNullable(this.invokeUrl);
    }

    @Import(name="restApi")
    private @Nullable Output<String> restApi;

    public Optional<Output<String>> restApi() {
        return Optional.ofNullable(this.restApi);
    }

    @Import(name="stageDescription")
    private @Nullable Output<String> stageDescription;

    public Optional<Output<String>> stageDescription() {
        return Optional.ofNullable(this.stageDescription);
    }

    @Import(name="stageName")
    private @Nullable Output<String> stageName;

    public Optional<Output<String>> stageName() {
        return Optional.ofNullable(this.stageName);
    }

    @Import(name="triggers")
    private @Nullable Output<Map<String,String>> triggers;

    public Optional<Output<Map<String,String>>> triggers() {
        return Optional.ofNullable(this.triggers);
    }

    @Import(name="variables")
    private @Nullable Output<Map<String,String>> variables;

    public Optional<Output<Map<String,String>>> variables() {
        return Optional.ofNullable(this.variables);
    }

    private DeploymentState() {}

    private DeploymentState(DeploymentState $) {
        this.createdDate = $.createdDate;
        this.description = $.description;
        this.executionArn = $.executionArn;
        this.invokeUrl = $.invokeUrl;
        this.restApi = $.restApi;
        this.stageDescription = $.stageDescription;
        this.stageName = $.stageName;
        this.triggers = $.triggers;
        this.variables = $.variables;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentState $;

        public Builder() {
            $ = new DeploymentState();
        }

        public Builder(DeploymentState defaults) {
            $ = new DeploymentState(Objects.requireNonNull(defaults));
        }

        public Builder createdDate(@Nullable Output<String> createdDate) {
            $.createdDate = createdDate;
            return this;
        }

        public Builder createdDate(String createdDate) {
            return createdDate(Output.of(createdDate));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder executionArn(@Nullable Output<String> executionArn) {
            $.executionArn = executionArn;
            return this;
        }

        public Builder executionArn(String executionArn) {
            return executionArn(Output.of(executionArn));
        }

        public Builder invokeUrl(@Nullable Output<String> invokeUrl) {
            $.invokeUrl = invokeUrl;
            return this;
        }

        public Builder invokeUrl(String invokeUrl) {
            return invokeUrl(Output.of(invokeUrl));
        }

        public Builder restApi(@Nullable Output<String> restApi) {
            $.restApi = restApi;
            return this;
        }

        public Builder restApi(String restApi) {
            return restApi(Output.of(restApi));
        }

        public Builder stageDescription(@Nullable Output<String> stageDescription) {
            $.stageDescription = stageDescription;
            return this;
        }

        public Builder stageDescription(String stageDescription) {
            return stageDescription(Output.of(stageDescription));
        }

        public Builder stageName(@Nullable Output<String> stageName) {
            $.stageName = stageName;
            return this;
        }

        public Builder stageName(String stageName) {
            return stageName(Output.of(stageName));
        }

        public Builder triggers(@Nullable Output<Map<String,String>> triggers) {
            $.triggers = triggers;
            return this;
        }

        public Builder triggers(Map<String,String> triggers) {
            return triggers(Output.of(triggers));
        }

        public Builder variables(@Nullable Output<Map<String,String>> variables) {
            $.variables = variables;
            return this;
        }

        public Builder variables(Map<String,String> variables) {
            return variables(Output.of(variables));
        }

        public DeploymentState build() {
            return $;
        }
    }

}
