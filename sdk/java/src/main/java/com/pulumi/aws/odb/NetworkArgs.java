// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.odb;

import com.pulumi.aws.odb.inputs.NetworkTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkArgs Empty = new NetworkArgs();

    @Import(name="availabilityZone")
    private @Nullable Output<String> availabilityZone;

    public Optional<Output<String>> availabilityZone() {
        return Optional.ofNullable(this.availabilityZone);
    }

    @Import(name="availabilityZoneId", required=true)
    private Output<String> availabilityZoneId;

    public Output<String> availabilityZoneId() {
        return this.availabilityZoneId;
    }

    @Import(name="backupSubnetCidr", required=true)
    private Output<String> backupSubnetCidr;

    public Output<String> backupSubnetCidr() {
        return this.backupSubnetCidr;
    }

    @Import(name="clientSubnetCidr", required=true)
    private Output<String> clientSubnetCidr;

    public Output<String> clientSubnetCidr() {
        return this.clientSubnetCidr;
    }

    /**
     * The name of the custom domain that the network is located. custom_domain_name and default_dns_prefix both can&#39;t be given.
     * 
     */
    @Import(name="customDomainName")
    private @Nullable Output<String> customDomainName;

    /**
     * @return The name of the custom domain that the network is located. custom_domain_name and default_dns_prefix both can&#39;t be given.
     * 
     */
    public Optional<Output<String>> customDomainName() {
        return Optional.ofNullable(this.customDomainName);
    }

    @Import(name="defaultDnsPrefix")
    private @Nullable Output<String> defaultDnsPrefix;

    public Optional<Output<String>> defaultDnsPrefix() {
        return Optional.ofNullable(this.defaultDnsPrefix);
    }

    @Import(name="displayName", required=true)
    private Output<String> displayName;

    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Specifies the configuration for Amazon S3 access from the ODB network.
     * 
     */
    @Import(name="s3Access", required=true)
    private Output<String> s3Access;

    /**
     * @return Specifies the configuration for Amazon S3 access from the ODB network.
     * 
     */
    public Output<String> s3Access() {
        return this.s3Access;
    }

    /**
     * Specifies the endpoint policy for Amazon S3 access from the ODB network.
     * 
     */
    @Import(name="s3PolicyDocument")
    private @Nullable Output<String> s3PolicyDocument;

    /**
     * @return Specifies the endpoint policy for Amazon S3 access from the ODB network.
     * 
     */
    public Optional<Output<String>> s3PolicyDocument() {
        return Optional.ofNullable(this.s3PolicyDocument);
    }

    /**
     * A map of tags to assign to the exadata infrastructure. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the exadata infrastructure. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="timeouts")
    private @Nullable Output<NetworkTimeoutsArgs> timeouts;

    public Optional<Output<NetworkTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    /**
     * Specifies the configuration for Zero-ETL access from the ODB network.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="zeroEtlAccess", required=true)
    private Output<String> zeroEtlAccess;

    /**
     * @return Specifies the configuration for Zero-ETL access from the ODB network.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<String> zeroEtlAccess() {
        return this.zeroEtlAccess;
    }

    private NetworkArgs() {}

    private NetworkArgs(NetworkArgs $) {
        this.availabilityZone = $.availabilityZone;
        this.availabilityZoneId = $.availabilityZoneId;
        this.backupSubnetCidr = $.backupSubnetCidr;
        this.clientSubnetCidr = $.clientSubnetCidr;
        this.customDomainName = $.customDomainName;
        this.defaultDnsPrefix = $.defaultDnsPrefix;
        this.displayName = $.displayName;
        this.region = $.region;
        this.s3Access = $.s3Access;
        this.s3PolicyDocument = $.s3PolicyDocument;
        this.tags = $.tags;
        this.timeouts = $.timeouts;
        this.zeroEtlAccess = $.zeroEtlAccess;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkArgs $;

        public Builder() {
            $ = new NetworkArgs();
        }

        public Builder(NetworkArgs defaults) {
            $ = new NetworkArgs(Objects.requireNonNull(defaults));
        }

        public Builder availabilityZone(@Nullable Output<String> availabilityZone) {
            $.availabilityZone = availabilityZone;
            return this;
        }

        public Builder availabilityZone(String availabilityZone) {
            return availabilityZone(Output.of(availabilityZone));
        }

        public Builder availabilityZoneId(Output<String> availabilityZoneId) {
            $.availabilityZoneId = availabilityZoneId;
            return this;
        }

        public Builder availabilityZoneId(String availabilityZoneId) {
            return availabilityZoneId(Output.of(availabilityZoneId));
        }

        public Builder backupSubnetCidr(Output<String> backupSubnetCidr) {
            $.backupSubnetCidr = backupSubnetCidr;
            return this;
        }

        public Builder backupSubnetCidr(String backupSubnetCidr) {
            return backupSubnetCidr(Output.of(backupSubnetCidr));
        }

        public Builder clientSubnetCidr(Output<String> clientSubnetCidr) {
            $.clientSubnetCidr = clientSubnetCidr;
            return this;
        }

        public Builder clientSubnetCidr(String clientSubnetCidr) {
            return clientSubnetCidr(Output.of(clientSubnetCidr));
        }

        /**
         * @param customDomainName The name of the custom domain that the network is located. custom_domain_name and default_dns_prefix both can&#39;t be given.
         * 
         * @return builder
         * 
         */
        public Builder customDomainName(@Nullable Output<String> customDomainName) {
            $.customDomainName = customDomainName;
            return this;
        }

        /**
         * @param customDomainName The name of the custom domain that the network is located. custom_domain_name and default_dns_prefix both can&#39;t be given.
         * 
         * @return builder
         * 
         */
        public Builder customDomainName(String customDomainName) {
            return customDomainName(Output.of(customDomainName));
        }

        public Builder defaultDnsPrefix(@Nullable Output<String> defaultDnsPrefix) {
            $.defaultDnsPrefix = defaultDnsPrefix;
            return this;
        }

        public Builder defaultDnsPrefix(String defaultDnsPrefix) {
            return defaultDnsPrefix(Output.of(defaultDnsPrefix));
        }

        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param s3Access Specifies the configuration for Amazon S3 access from the ODB network.
         * 
         * @return builder
         * 
         */
        public Builder s3Access(Output<String> s3Access) {
            $.s3Access = s3Access;
            return this;
        }

        /**
         * @param s3Access Specifies the configuration for Amazon S3 access from the ODB network.
         * 
         * @return builder
         * 
         */
        public Builder s3Access(String s3Access) {
            return s3Access(Output.of(s3Access));
        }

        /**
         * @param s3PolicyDocument Specifies the endpoint policy for Amazon S3 access from the ODB network.
         * 
         * @return builder
         * 
         */
        public Builder s3PolicyDocument(@Nullable Output<String> s3PolicyDocument) {
            $.s3PolicyDocument = s3PolicyDocument;
            return this;
        }

        /**
         * @param s3PolicyDocument Specifies the endpoint policy for Amazon S3 access from the ODB network.
         * 
         * @return builder
         * 
         */
        public Builder s3PolicyDocument(String s3PolicyDocument) {
            return s3PolicyDocument(Output.of(s3PolicyDocument));
        }

        /**
         * @param tags A map of tags to assign to the exadata infrastructure. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A map of tags to assign to the exadata infrastructure. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder timeouts(@Nullable Output<NetworkTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(NetworkTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        /**
         * @param zeroEtlAccess Specifies the configuration for Zero-ETL access from the ODB network.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder zeroEtlAccess(Output<String> zeroEtlAccess) {
            $.zeroEtlAccess = zeroEtlAccess;
            return this;
        }

        /**
         * @param zeroEtlAccess Specifies the configuration for Zero-ETL access from the ODB network.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder zeroEtlAccess(String zeroEtlAccess) {
            return zeroEtlAccess(Output.of(zeroEtlAccess));
        }

        public NetworkArgs build() {
            if ($.availabilityZoneId == null) {
                throw new MissingRequiredPropertyException("NetworkArgs", "availabilityZoneId");
            }
            if ($.backupSubnetCidr == null) {
                throw new MissingRequiredPropertyException("NetworkArgs", "backupSubnetCidr");
            }
            if ($.clientSubnetCidr == null) {
                throw new MissingRequiredPropertyException("NetworkArgs", "clientSubnetCidr");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("NetworkArgs", "displayName");
            }
            if ($.s3Access == null) {
                throw new MissingRequiredPropertyException("NetworkArgs", "s3Access");
            }
            if ($.zeroEtlAccess == null) {
                throw new MissingRequiredPropertyException("NetworkArgs", "zeroEtlAccess");
            }
            return $;
        }
    }

}
