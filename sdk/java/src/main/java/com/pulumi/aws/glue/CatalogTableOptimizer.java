// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.glue;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.glue.CatalogTableOptimizerArgs;
import com.pulumi.aws.glue.inputs.CatalogTableOptimizerState;
import com.pulumi.aws.glue.outputs.CatalogTableOptimizerConfiguration;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for managing an AWS Glue Catalog Table Optimizer.
 * 
 * ## Example Usage
 * 
 * ### Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.glue.CatalogTableOptimizer;
 * import com.pulumi.aws.glue.CatalogTableOptimizerArgs;
 * import com.pulumi.aws.glue.inputs.CatalogTableOptimizerConfigurationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new CatalogTableOptimizer("example", CatalogTableOptimizerArgs.builder()
 *             .catalogId("123456789012")
 *             .databaseName("example_database")
 *             .tableName("example_table")
 *             .configuration(CatalogTableOptimizerConfigurationArgs.builder()
 *                 .roleArn("arn:aws:iam::123456789012:role/example-role")
 *                 .enabled(true)
 *                 .build())
 *             .type("compaction")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Using `pulumi import`, import Glue Catalog Table Optimizer using the `catalog_id,database_name,table_name,type`. For example:
 * 
 * ```sh
 * $ pulumi import aws:glue/catalogTableOptimizer:CatalogTableOptimizer example 123456789012,example_database,example_table,compaction
 * ```
 * 
 */
@ResourceType(type="aws:glue/catalogTableOptimizer:CatalogTableOptimizer")
public class CatalogTableOptimizer extends com.pulumi.resources.CustomResource {
    /**
     * The Catalog ID of the table.
     * 
     */
    @Export(name="catalogId", refs={String.class}, tree="[0]")
    private Output<String> catalogId;

    /**
     * @return The Catalog ID of the table.
     * 
     */
    public Output<String> catalogId() {
        return this.catalogId;
    }
    /**
     * A configuration block that defines the table optimizer settings. The block contains:
     * 
     */
    @Export(name="configuration", refs={CatalogTableOptimizerConfiguration.class}, tree="[0]")
    private Output</* @Nullable */ CatalogTableOptimizerConfiguration> configuration;

    /**
     * @return A configuration block that defines the table optimizer settings. The block contains:
     * 
     */
    public Output<Optional<CatalogTableOptimizerConfiguration>> configuration() {
        return Codegen.optional(this.configuration);
    }
    /**
     * The name of the database in the catalog in which the table resides.
     * 
     */
    @Export(name="databaseName", refs={String.class}, tree="[0]")
    private Output<String> databaseName;

    /**
     * @return The name of the database in the catalog in which the table resides.
     * 
     */
    public Output<String> databaseName() {
        return this.databaseName;
    }
    /**
     * The name of the table.
     * 
     */
    @Export(name="tableName", refs={String.class}, tree="[0]")
    private Output<String> tableName;

    /**
     * @return The name of the table.
     * 
     */
    public Output<String> tableName() {
        return this.tableName;
    }
    /**
     * The type of table optimizer. Currently, the only valid value is compaction.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return The type of table optimizer. Currently, the only valid value is compaction.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CatalogTableOptimizer(java.lang.String name) {
        this(name, CatalogTableOptimizerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CatalogTableOptimizer(java.lang.String name, CatalogTableOptimizerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CatalogTableOptimizer(java.lang.String name, CatalogTableOptimizerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:glue/catalogTableOptimizer:CatalogTableOptimizer", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private CatalogTableOptimizer(java.lang.String name, Output<java.lang.String> id, @Nullable CatalogTableOptimizerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:glue/catalogTableOptimizer:CatalogTableOptimizer", name, state, makeResourceOptions(options, id), false);
    }

    private static CatalogTableOptimizerArgs makeArgs(CatalogTableOptimizerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? CatalogTableOptimizerArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CatalogTableOptimizer get(java.lang.String name, Output<java.lang.String> id, @Nullable CatalogTableOptimizerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CatalogTableOptimizer(name, id, state, options);
    }
}
