// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.medialive.inputs;

import com.pulumi.aws.medialive.inputs.ChannelEncoderSettingsVideoDescriptionCodecSettingsH264SettingsFilterSettingsTemporalFilterSettingsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ChannelEncoderSettingsVideoDescriptionCodecSettingsH264SettingsFilterSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ChannelEncoderSettingsVideoDescriptionCodecSettingsH264SettingsFilterSettingsArgs Empty = new ChannelEncoderSettingsVideoDescriptionCodecSettingsH264SettingsFilterSettingsArgs();

    /**
     * Temporal filter settings. See Temporal Filter Settings
     * 
     */
    @Import(name="temporalFilterSettings")
    private @Nullable Output<ChannelEncoderSettingsVideoDescriptionCodecSettingsH264SettingsFilterSettingsTemporalFilterSettingsArgs> temporalFilterSettings;

    /**
     * @return Temporal filter settings. See Temporal Filter Settings
     * 
     */
    public Optional<Output<ChannelEncoderSettingsVideoDescriptionCodecSettingsH264SettingsFilterSettingsTemporalFilterSettingsArgs>> temporalFilterSettings() {
        return Optional.ofNullable(this.temporalFilterSettings);
    }

    private ChannelEncoderSettingsVideoDescriptionCodecSettingsH264SettingsFilterSettingsArgs() {}

    private ChannelEncoderSettingsVideoDescriptionCodecSettingsH264SettingsFilterSettingsArgs(ChannelEncoderSettingsVideoDescriptionCodecSettingsH264SettingsFilterSettingsArgs $) {
        this.temporalFilterSettings = $.temporalFilterSettings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ChannelEncoderSettingsVideoDescriptionCodecSettingsH264SettingsFilterSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ChannelEncoderSettingsVideoDescriptionCodecSettingsH264SettingsFilterSettingsArgs $;

        public Builder() {
            $ = new ChannelEncoderSettingsVideoDescriptionCodecSettingsH264SettingsFilterSettingsArgs();
        }

        public Builder(ChannelEncoderSettingsVideoDescriptionCodecSettingsH264SettingsFilterSettingsArgs defaults) {
            $ = new ChannelEncoderSettingsVideoDescriptionCodecSettingsH264SettingsFilterSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param temporalFilterSettings Temporal filter settings. See Temporal Filter Settings
         * 
         * @return builder
         * 
         */
        public Builder temporalFilterSettings(@Nullable Output<ChannelEncoderSettingsVideoDescriptionCodecSettingsH264SettingsFilterSettingsTemporalFilterSettingsArgs> temporalFilterSettings) {
            $.temporalFilterSettings = temporalFilterSettings;
            return this;
        }

        /**
         * @param temporalFilterSettings Temporal filter settings. See Temporal Filter Settings
         * 
         * @return builder
         * 
         */
        public Builder temporalFilterSettings(ChannelEncoderSettingsVideoDescriptionCodecSettingsH264SettingsFilterSettingsTemporalFilterSettingsArgs temporalFilterSettings) {
            return temporalFilterSettings(Output.of(temporalFilterSettings));
        }

        public ChannelEncoderSettingsVideoDescriptionCodecSettingsH264SettingsFilterSettingsArgs build() {
            return $;
        }
    }

}
