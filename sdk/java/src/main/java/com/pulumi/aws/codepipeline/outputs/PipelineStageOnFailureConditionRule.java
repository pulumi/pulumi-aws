// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codepipeline.outputs;

import com.pulumi.aws.codepipeline.outputs.PipelineStageOnFailureConditionRuleRuleTypeId;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PipelineStageOnFailureConditionRule {
    /**
     * @return The shell commands to run with your commands rule in CodePipeline. All commands are supported except multi-line formats.
     * 
     */
    private @Nullable List<String> commands;
    /**
     * @return The action configuration fields for the rule. Configurations options for rule types and providers can be found in the [Rule structure reference](https://docs.aws.amazon.com/codepipeline/latest/userguide/rule-reference.html).
     * 
     */
    private @Nullable Map<String,String> configuration;
    /**
     * @return The list of the input artifacts fields for the rule, such as specifying an input file for the rule.
     * 
     */
    private @Nullable List<String> inputArtifacts;
    /**
     * @return The name of the rule that is created for the condition, such as `VariableCheck`.
     * 
     */
    private String name;
    /**
     * @return The Region for the condition associated with the rule.
     * 
     */
    private @Nullable String region;
    /**
     * @return The pipeline role ARN associated with the rule.
     * 
     */
    private @Nullable String roleArn;
    /**
     * @return The ID for the rule type, which is made up of the combined values for `category`, `owner`, `provider`, and `version`. Defined as an `rule_type_id` block below.
     * 
     */
    private PipelineStageOnFailureConditionRuleRuleTypeId ruleTypeId;
    /**
     * @return The action timeout for the rule.
     * 
     */
    private @Nullable Integer timeoutInMinutes;

    private PipelineStageOnFailureConditionRule() {}
    /**
     * @return The shell commands to run with your commands rule in CodePipeline. All commands are supported except multi-line formats.
     * 
     */
    public List<String> commands() {
        return this.commands == null ? List.of() : this.commands;
    }
    /**
     * @return The action configuration fields for the rule. Configurations options for rule types and providers can be found in the [Rule structure reference](https://docs.aws.amazon.com/codepipeline/latest/userguide/rule-reference.html).
     * 
     */
    public Map<String,String> configuration() {
        return this.configuration == null ? Map.of() : this.configuration;
    }
    /**
     * @return The list of the input artifacts fields for the rule, such as specifying an input file for the rule.
     * 
     */
    public List<String> inputArtifacts() {
        return this.inputArtifacts == null ? List.of() : this.inputArtifacts;
    }
    /**
     * @return The name of the rule that is created for the condition, such as `VariableCheck`.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The Region for the condition associated with the rule.
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    /**
     * @return The pipeline role ARN associated with the rule.
     * 
     */
    public Optional<String> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }
    /**
     * @return The ID for the rule type, which is made up of the combined values for `category`, `owner`, `provider`, and `version`. Defined as an `rule_type_id` block below.
     * 
     */
    public PipelineStageOnFailureConditionRuleRuleTypeId ruleTypeId() {
        return this.ruleTypeId;
    }
    /**
     * @return The action timeout for the rule.
     * 
     */
    public Optional<Integer> timeoutInMinutes() {
        return Optional.ofNullable(this.timeoutInMinutes);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PipelineStageOnFailureConditionRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> commands;
        private @Nullable Map<String,String> configuration;
        private @Nullable List<String> inputArtifacts;
        private String name;
        private @Nullable String region;
        private @Nullable String roleArn;
        private PipelineStageOnFailureConditionRuleRuleTypeId ruleTypeId;
        private @Nullable Integer timeoutInMinutes;
        public Builder() {}
        public Builder(PipelineStageOnFailureConditionRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.commands = defaults.commands;
    	      this.configuration = defaults.configuration;
    	      this.inputArtifacts = defaults.inputArtifacts;
    	      this.name = defaults.name;
    	      this.region = defaults.region;
    	      this.roleArn = defaults.roleArn;
    	      this.ruleTypeId = defaults.ruleTypeId;
    	      this.timeoutInMinutes = defaults.timeoutInMinutes;
        }

        @CustomType.Setter
        public Builder commands(@Nullable List<String> commands) {

            this.commands = commands;
            return this;
        }
        public Builder commands(String... commands) {
            return commands(List.of(commands));
        }
        @CustomType.Setter
        public Builder configuration(@Nullable Map<String,String> configuration) {

            this.configuration = configuration;
            return this;
        }
        @CustomType.Setter
        public Builder inputArtifacts(@Nullable List<String> inputArtifacts) {

            this.inputArtifacts = inputArtifacts;
            return this;
        }
        public Builder inputArtifacts(String... inputArtifacts) {
            return inputArtifacts(List.of(inputArtifacts));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("PipelineStageOnFailureConditionRule", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {

            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder roleArn(@Nullable String roleArn) {

            this.roleArn = roleArn;
            return this;
        }
        @CustomType.Setter
        public Builder ruleTypeId(PipelineStageOnFailureConditionRuleRuleTypeId ruleTypeId) {
            if (ruleTypeId == null) {
              throw new MissingRequiredPropertyException("PipelineStageOnFailureConditionRule", "ruleTypeId");
            }
            this.ruleTypeId = ruleTypeId;
            return this;
        }
        @CustomType.Setter
        public Builder timeoutInMinutes(@Nullable Integer timeoutInMinutes) {

            this.timeoutInMinutes = timeoutInMinutes;
            return this;
        }
        public PipelineStageOnFailureConditionRule build() {
            final var _resultValue = new PipelineStageOnFailureConditionRule();
            _resultValue.commands = commands;
            _resultValue.configuration = configuration;
            _resultValue.inputArtifacts = inputArtifacts;
            _resultValue.name = name;
            _resultValue.region = region;
            _resultValue.roleArn = roleArn;
            _resultValue.ruleTypeId = ruleTypeId;
            _resultValue.timeoutInMinutes = timeoutInMinutes;
            return _resultValue;
        }
    }
}
