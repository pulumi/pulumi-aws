// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.outputs;

import com.pulumi.aws.ec2.outputs.GetNetworkInsightsAnalysisExplanationAcl;
import com.pulumi.aws.ec2.outputs.GetNetworkInsightsAnalysisExplanationAclRule;
import com.pulumi.aws.ec2.outputs.GetNetworkInsightsAnalysisExplanationAttachedTo;
import com.pulumi.aws.ec2.outputs.GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListener;
import com.pulumi.aws.ec2.outputs.GetNetworkInsightsAnalysisExplanationComponent;
import com.pulumi.aws.ec2.outputs.GetNetworkInsightsAnalysisExplanationCustomerGateway;
import com.pulumi.aws.ec2.outputs.GetNetworkInsightsAnalysisExplanationDestination;
import com.pulumi.aws.ec2.outputs.GetNetworkInsightsAnalysisExplanationDestinationVpc;
import com.pulumi.aws.ec2.outputs.GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListener;
import com.pulumi.aws.ec2.outputs.GetNetworkInsightsAnalysisExplanationIngressRouteTable;
import com.pulumi.aws.ec2.outputs.GetNetworkInsightsAnalysisExplanationInternetGateway;
import com.pulumi.aws.ec2.outputs.GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroup;
import com.pulumi.aws.ec2.outputs.GetNetworkInsightsAnalysisExplanationNatGateway;
import com.pulumi.aws.ec2.outputs.GetNetworkInsightsAnalysisExplanationNetworkInterface;
import com.pulumi.aws.ec2.outputs.GetNetworkInsightsAnalysisExplanationPortRange;
import com.pulumi.aws.ec2.outputs.GetNetworkInsightsAnalysisExplanationPrefixList;
import com.pulumi.aws.ec2.outputs.GetNetworkInsightsAnalysisExplanationRouteTable;
import com.pulumi.aws.ec2.outputs.GetNetworkInsightsAnalysisExplanationRouteTableRoute;
import com.pulumi.aws.ec2.outputs.GetNetworkInsightsAnalysisExplanationSecurityGroup;
import com.pulumi.aws.ec2.outputs.GetNetworkInsightsAnalysisExplanationSecurityGroupRule;
import com.pulumi.aws.ec2.outputs.GetNetworkInsightsAnalysisExplanationSourceVpc;
import com.pulumi.aws.ec2.outputs.GetNetworkInsightsAnalysisExplanationSubnet;
import com.pulumi.aws.ec2.outputs.GetNetworkInsightsAnalysisExplanationSubnetRouteTable;
import com.pulumi.aws.ec2.outputs.GetNetworkInsightsAnalysisExplanationTransitGateway;
import com.pulumi.aws.ec2.outputs.GetNetworkInsightsAnalysisExplanationTransitGatewayAttachment;
import com.pulumi.aws.ec2.outputs.GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTable;
import com.pulumi.aws.ec2.outputs.GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute;
import com.pulumi.aws.ec2.outputs.GetNetworkInsightsAnalysisExplanationVpc;
import com.pulumi.aws.ec2.outputs.GetNetworkInsightsAnalysisExplanationVpcEndpoint;
import com.pulumi.aws.ec2.outputs.GetNetworkInsightsAnalysisExplanationVpcPeeringConnection;
import com.pulumi.aws.ec2.outputs.GetNetworkInsightsAnalysisExplanationVpnConnection;
import com.pulumi.aws.ec2.outputs.GetNetworkInsightsAnalysisExplanationVpnGateway;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetNetworkInsightsAnalysisExplanation {
    private List<GetNetworkInsightsAnalysisExplanationAclRule> aclRules;
    private List<GetNetworkInsightsAnalysisExplanationAcl> acls;
    private String address;
    private List<String> addresses;
    private List<GetNetworkInsightsAnalysisExplanationAttachedTo> attachedTos;
    private List<String> availabilityZones;
    private List<String> cidrs;
    private List<GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListener> classicLoadBalancerListeners;
    private List<GetNetworkInsightsAnalysisExplanationComponent> components;
    private List<GetNetworkInsightsAnalysisExplanationCustomerGateway> customerGateways;
    private List<GetNetworkInsightsAnalysisExplanationDestinationVpc> destinationVpcs;
    private List<GetNetworkInsightsAnalysisExplanationDestination> destinations;
    private String direction;
    private List<GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListener> elasticLoadBalancerListeners;
    private String explanationCode;
    private List<GetNetworkInsightsAnalysisExplanationIngressRouteTable> ingressRouteTables;
    private List<GetNetworkInsightsAnalysisExplanationInternetGateway> internetGateways;
    private String loadBalancerArn;
    private Integer loadBalancerListenerPort;
    private List<GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroup> loadBalancerTargetGroup;
    private List<GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroup> loadBalancerTargetGroups;
    private Integer loadBalancerTargetPort;
    private String missingComponent;
    private List<GetNetworkInsightsAnalysisExplanationNatGateway> natGateways;
    private List<GetNetworkInsightsAnalysisExplanationNetworkInterface> networkInterfaces;
    private String packetField;
    private Integer port;
    private List<GetNetworkInsightsAnalysisExplanationPortRange> portRanges;
    private List<GetNetworkInsightsAnalysisExplanationPrefixList> prefixLists;
    private List<String> protocols;
    private List<GetNetworkInsightsAnalysisExplanationRouteTableRoute> routeTableRoutes;
    private List<GetNetworkInsightsAnalysisExplanationRouteTable> routeTables;
    private List<GetNetworkInsightsAnalysisExplanationSecurityGroup> securityGroup;
    private List<GetNetworkInsightsAnalysisExplanationSecurityGroupRule> securityGroupRules;
    private List<GetNetworkInsightsAnalysisExplanationSecurityGroup> securityGroups;
    private List<GetNetworkInsightsAnalysisExplanationSourceVpc> sourceVpcs;
    private String state;
    private List<GetNetworkInsightsAnalysisExplanationSubnetRouteTable> subnetRouteTables;
    private List<GetNetworkInsightsAnalysisExplanationSubnet> subnets;
    private List<GetNetworkInsightsAnalysisExplanationTransitGatewayAttachment> transitGatewayAttachments;
    private List<GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute> transitGatewayRouteTableRoutes;
    private List<GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTable> transitGatewayRouteTables;
    private List<GetNetworkInsightsAnalysisExplanationTransitGateway> transitGateways;
    private List<GetNetworkInsightsAnalysisExplanationVpcEndpoint> vpcEndpoints;
    private List<GetNetworkInsightsAnalysisExplanationVpcPeeringConnection> vpcPeeringConnections;
    private List<GetNetworkInsightsAnalysisExplanationVpc> vpcs;
    private List<GetNetworkInsightsAnalysisExplanationVpnConnection> vpnConnections;
    private List<GetNetworkInsightsAnalysisExplanationVpnGateway> vpnGateways;

    private GetNetworkInsightsAnalysisExplanation() {}
    public List<GetNetworkInsightsAnalysisExplanationAclRule> aclRules() {
        return this.aclRules;
    }
    public List<GetNetworkInsightsAnalysisExplanationAcl> acls() {
        return this.acls;
    }
    public String address() {
        return this.address;
    }
    public List<String> addresses() {
        return this.addresses;
    }
    public List<GetNetworkInsightsAnalysisExplanationAttachedTo> attachedTos() {
        return this.attachedTos;
    }
    public List<String> availabilityZones() {
        return this.availabilityZones;
    }
    public List<String> cidrs() {
        return this.cidrs;
    }
    public List<GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListener> classicLoadBalancerListeners() {
        return this.classicLoadBalancerListeners;
    }
    public List<GetNetworkInsightsAnalysisExplanationComponent> components() {
        return this.components;
    }
    public List<GetNetworkInsightsAnalysisExplanationCustomerGateway> customerGateways() {
        return this.customerGateways;
    }
    public List<GetNetworkInsightsAnalysisExplanationDestinationVpc> destinationVpcs() {
        return this.destinationVpcs;
    }
    public List<GetNetworkInsightsAnalysisExplanationDestination> destinations() {
        return this.destinations;
    }
    public String direction() {
        return this.direction;
    }
    public List<GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListener> elasticLoadBalancerListeners() {
        return this.elasticLoadBalancerListeners;
    }
    public String explanationCode() {
        return this.explanationCode;
    }
    public List<GetNetworkInsightsAnalysisExplanationIngressRouteTable> ingressRouteTables() {
        return this.ingressRouteTables;
    }
    public List<GetNetworkInsightsAnalysisExplanationInternetGateway> internetGateways() {
        return this.internetGateways;
    }
    public String loadBalancerArn() {
        return this.loadBalancerArn;
    }
    public Integer loadBalancerListenerPort() {
        return this.loadBalancerListenerPort;
    }
    public List<GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroup> loadBalancerTargetGroup() {
        return this.loadBalancerTargetGroup;
    }
    public List<GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroup> loadBalancerTargetGroups() {
        return this.loadBalancerTargetGroups;
    }
    public Integer loadBalancerTargetPort() {
        return this.loadBalancerTargetPort;
    }
    public String missingComponent() {
        return this.missingComponent;
    }
    public List<GetNetworkInsightsAnalysisExplanationNatGateway> natGateways() {
        return this.natGateways;
    }
    public List<GetNetworkInsightsAnalysisExplanationNetworkInterface> networkInterfaces() {
        return this.networkInterfaces;
    }
    public String packetField() {
        return this.packetField;
    }
    public Integer port() {
        return this.port;
    }
    public List<GetNetworkInsightsAnalysisExplanationPortRange> portRanges() {
        return this.portRanges;
    }
    public List<GetNetworkInsightsAnalysisExplanationPrefixList> prefixLists() {
        return this.prefixLists;
    }
    public List<String> protocols() {
        return this.protocols;
    }
    public List<GetNetworkInsightsAnalysisExplanationRouteTableRoute> routeTableRoutes() {
        return this.routeTableRoutes;
    }
    public List<GetNetworkInsightsAnalysisExplanationRouteTable> routeTables() {
        return this.routeTables;
    }
    public List<GetNetworkInsightsAnalysisExplanationSecurityGroup> securityGroup() {
        return this.securityGroup;
    }
    public List<GetNetworkInsightsAnalysisExplanationSecurityGroupRule> securityGroupRules() {
        return this.securityGroupRules;
    }
    public List<GetNetworkInsightsAnalysisExplanationSecurityGroup> securityGroups() {
        return this.securityGroups;
    }
    public List<GetNetworkInsightsAnalysisExplanationSourceVpc> sourceVpcs() {
        return this.sourceVpcs;
    }
    public String state() {
        return this.state;
    }
    public List<GetNetworkInsightsAnalysisExplanationSubnetRouteTable> subnetRouteTables() {
        return this.subnetRouteTables;
    }
    public List<GetNetworkInsightsAnalysisExplanationSubnet> subnets() {
        return this.subnets;
    }
    public List<GetNetworkInsightsAnalysisExplanationTransitGatewayAttachment> transitGatewayAttachments() {
        return this.transitGatewayAttachments;
    }
    public List<GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute> transitGatewayRouteTableRoutes() {
        return this.transitGatewayRouteTableRoutes;
    }
    public List<GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTable> transitGatewayRouteTables() {
        return this.transitGatewayRouteTables;
    }
    public List<GetNetworkInsightsAnalysisExplanationTransitGateway> transitGateways() {
        return this.transitGateways;
    }
    public List<GetNetworkInsightsAnalysisExplanationVpcEndpoint> vpcEndpoints() {
        return this.vpcEndpoints;
    }
    public List<GetNetworkInsightsAnalysisExplanationVpcPeeringConnection> vpcPeeringConnections() {
        return this.vpcPeeringConnections;
    }
    public List<GetNetworkInsightsAnalysisExplanationVpc> vpcs() {
        return this.vpcs;
    }
    public List<GetNetworkInsightsAnalysisExplanationVpnConnection> vpnConnections() {
        return this.vpnConnections;
    }
    public List<GetNetworkInsightsAnalysisExplanationVpnGateway> vpnGateways() {
        return this.vpnGateways;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkInsightsAnalysisExplanation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetNetworkInsightsAnalysisExplanationAclRule> aclRules;
        private List<GetNetworkInsightsAnalysisExplanationAcl> acls;
        private String address;
        private List<String> addresses;
        private List<GetNetworkInsightsAnalysisExplanationAttachedTo> attachedTos;
        private List<String> availabilityZones;
        private List<String> cidrs;
        private List<GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListener> classicLoadBalancerListeners;
        private List<GetNetworkInsightsAnalysisExplanationComponent> components;
        private List<GetNetworkInsightsAnalysisExplanationCustomerGateway> customerGateways;
        private List<GetNetworkInsightsAnalysisExplanationDestinationVpc> destinationVpcs;
        private List<GetNetworkInsightsAnalysisExplanationDestination> destinations;
        private String direction;
        private List<GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListener> elasticLoadBalancerListeners;
        private String explanationCode;
        private List<GetNetworkInsightsAnalysisExplanationIngressRouteTable> ingressRouteTables;
        private List<GetNetworkInsightsAnalysisExplanationInternetGateway> internetGateways;
        private String loadBalancerArn;
        private Integer loadBalancerListenerPort;
        private List<GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroup> loadBalancerTargetGroup;
        private List<GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroup> loadBalancerTargetGroups;
        private Integer loadBalancerTargetPort;
        private String missingComponent;
        private List<GetNetworkInsightsAnalysisExplanationNatGateway> natGateways;
        private List<GetNetworkInsightsAnalysisExplanationNetworkInterface> networkInterfaces;
        private String packetField;
        private Integer port;
        private List<GetNetworkInsightsAnalysisExplanationPortRange> portRanges;
        private List<GetNetworkInsightsAnalysisExplanationPrefixList> prefixLists;
        private List<String> protocols;
        private List<GetNetworkInsightsAnalysisExplanationRouteTableRoute> routeTableRoutes;
        private List<GetNetworkInsightsAnalysisExplanationRouteTable> routeTables;
        private List<GetNetworkInsightsAnalysisExplanationSecurityGroup> securityGroup;
        private List<GetNetworkInsightsAnalysisExplanationSecurityGroupRule> securityGroupRules;
        private List<GetNetworkInsightsAnalysisExplanationSecurityGroup> securityGroups;
        private List<GetNetworkInsightsAnalysisExplanationSourceVpc> sourceVpcs;
        private String state;
        private List<GetNetworkInsightsAnalysisExplanationSubnetRouteTable> subnetRouteTables;
        private List<GetNetworkInsightsAnalysisExplanationSubnet> subnets;
        private List<GetNetworkInsightsAnalysisExplanationTransitGatewayAttachment> transitGatewayAttachments;
        private List<GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute> transitGatewayRouteTableRoutes;
        private List<GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTable> transitGatewayRouteTables;
        private List<GetNetworkInsightsAnalysisExplanationTransitGateway> transitGateways;
        private List<GetNetworkInsightsAnalysisExplanationVpcEndpoint> vpcEndpoints;
        private List<GetNetworkInsightsAnalysisExplanationVpcPeeringConnection> vpcPeeringConnections;
        private List<GetNetworkInsightsAnalysisExplanationVpc> vpcs;
        private List<GetNetworkInsightsAnalysisExplanationVpnConnection> vpnConnections;
        private List<GetNetworkInsightsAnalysisExplanationVpnGateway> vpnGateways;
        public Builder() {}
        public Builder(GetNetworkInsightsAnalysisExplanation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aclRules = defaults.aclRules;
    	      this.acls = defaults.acls;
    	      this.address = defaults.address;
    	      this.addresses = defaults.addresses;
    	      this.attachedTos = defaults.attachedTos;
    	      this.availabilityZones = defaults.availabilityZones;
    	      this.cidrs = defaults.cidrs;
    	      this.classicLoadBalancerListeners = defaults.classicLoadBalancerListeners;
    	      this.components = defaults.components;
    	      this.customerGateways = defaults.customerGateways;
    	      this.destinationVpcs = defaults.destinationVpcs;
    	      this.destinations = defaults.destinations;
    	      this.direction = defaults.direction;
    	      this.elasticLoadBalancerListeners = defaults.elasticLoadBalancerListeners;
    	      this.explanationCode = defaults.explanationCode;
    	      this.ingressRouteTables = defaults.ingressRouteTables;
    	      this.internetGateways = defaults.internetGateways;
    	      this.loadBalancerArn = defaults.loadBalancerArn;
    	      this.loadBalancerListenerPort = defaults.loadBalancerListenerPort;
    	      this.loadBalancerTargetGroup = defaults.loadBalancerTargetGroup;
    	      this.loadBalancerTargetGroups = defaults.loadBalancerTargetGroups;
    	      this.loadBalancerTargetPort = defaults.loadBalancerTargetPort;
    	      this.missingComponent = defaults.missingComponent;
    	      this.natGateways = defaults.natGateways;
    	      this.networkInterfaces = defaults.networkInterfaces;
    	      this.packetField = defaults.packetField;
    	      this.port = defaults.port;
    	      this.portRanges = defaults.portRanges;
    	      this.prefixLists = defaults.prefixLists;
    	      this.protocols = defaults.protocols;
    	      this.routeTableRoutes = defaults.routeTableRoutes;
    	      this.routeTables = defaults.routeTables;
    	      this.securityGroup = defaults.securityGroup;
    	      this.securityGroupRules = defaults.securityGroupRules;
    	      this.securityGroups = defaults.securityGroups;
    	      this.sourceVpcs = defaults.sourceVpcs;
    	      this.state = defaults.state;
    	      this.subnetRouteTables = defaults.subnetRouteTables;
    	      this.subnets = defaults.subnets;
    	      this.transitGatewayAttachments = defaults.transitGatewayAttachments;
    	      this.transitGatewayRouteTableRoutes = defaults.transitGatewayRouteTableRoutes;
    	      this.transitGatewayRouteTables = defaults.transitGatewayRouteTables;
    	      this.transitGateways = defaults.transitGateways;
    	      this.vpcEndpoints = defaults.vpcEndpoints;
    	      this.vpcPeeringConnections = defaults.vpcPeeringConnections;
    	      this.vpcs = defaults.vpcs;
    	      this.vpnConnections = defaults.vpnConnections;
    	      this.vpnGateways = defaults.vpnGateways;
        }

        @CustomType.Setter
        public Builder aclRules(List<GetNetworkInsightsAnalysisExplanationAclRule> aclRules) {
            if (aclRules == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "aclRules");
            }
            this.aclRules = aclRules;
            return this;
        }
        public Builder aclRules(GetNetworkInsightsAnalysisExplanationAclRule... aclRules) {
            return aclRules(List.of(aclRules));
        }
        @CustomType.Setter
        public Builder acls(List<GetNetworkInsightsAnalysisExplanationAcl> acls) {
            if (acls == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "acls");
            }
            this.acls = acls;
            return this;
        }
        public Builder acls(GetNetworkInsightsAnalysisExplanationAcl... acls) {
            return acls(List.of(acls));
        }
        @CustomType.Setter
        public Builder address(String address) {
            if (address == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "address");
            }
            this.address = address;
            return this;
        }
        @CustomType.Setter
        public Builder addresses(List<String> addresses) {
            if (addresses == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "addresses");
            }
            this.addresses = addresses;
            return this;
        }
        public Builder addresses(String... addresses) {
            return addresses(List.of(addresses));
        }
        @CustomType.Setter
        public Builder attachedTos(List<GetNetworkInsightsAnalysisExplanationAttachedTo> attachedTos) {
            if (attachedTos == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "attachedTos");
            }
            this.attachedTos = attachedTos;
            return this;
        }
        public Builder attachedTos(GetNetworkInsightsAnalysisExplanationAttachedTo... attachedTos) {
            return attachedTos(List.of(attachedTos));
        }
        @CustomType.Setter
        public Builder availabilityZones(List<String> availabilityZones) {
            if (availabilityZones == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "availabilityZones");
            }
            this.availabilityZones = availabilityZones;
            return this;
        }
        public Builder availabilityZones(String... availabilityZones) {
            return availabilityZones(List.of(availabilityZones));
        }
        @CustomType.Setter
        public Builder cidrs(List<String> cidrs) {
            if (cidrs == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "cidrs");
            }
            this.cidrs = cidrs;
            return this;
        }
        public Builder cidrs(String... cidrs) {
            return cidrs(List.of(cidrs));
        }
        @CustomType.Setter
        public Builder classicLoadBalancerListeners(List<GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListener> classicLoadBalancerListeners) {
            if (classicLoadBalancerListeners == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "classicLoadBalancerListeners");
            }
            this.classicLoadBalancerListeners = classicLoadBalancerListeners;
            return this;
        }
        public Builder classicLoadBalancerListeners(GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListener... classicLoadBalancerListeners) {
            return classicLoadBalancerListeners(List.of(classicLoadBalancerListeners));
        }
        @CustomType.Setter
        public Builder components(List<GetNetworkInsightsAnalysisExplanationComponent> components) {
            if (components == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "components");
            }
            this.components = components;
            return this;
        }
        public Builder components(GetNetworkInsightsAnalysisExplanationComponent... components) {
            return components(List.of(components));
        }
        @CustomType.Setter
        public Builder customerGateways(List<GetNetworkInsightsAnalysisExplanationCustomerGateway> customerGateways) {
            if (customerGateways == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "customerGateways");
            }
            this.customerGateways = customerGateways;
            return this;
        }
        public Builder customerGateways(GetNetworkInsightsAnalysisExplanationCustomerGateway... customerGateways) {
            return customerGateways(List.of(customerGateways));
        }
        @CustomType.Setter
        public Builder destinationVpcs(List<GetNetworkInsightsAnalysisExplanationDestinationVpc> destinationVpcs) {
            if (destinationVpcs == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "destinationVpcs");
            }
            this.destinationVpcs = destinationVpcs;
            return this;
        }
        public Builder destinationVpcs(GetNetworkInsightsAnalysisExplanationDestinationVpc... destinationVpcs) {
            return destinationVpcs(List.of(destinationVpcs));
        }
        @CustomType.Setter
        public Builder destinations(List<GetNetworkInsightsAnalysisExplanationDestination> destinations) {
            if (destinations == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "destinations");
            }
            this.destinations = destinations;
            return this;
        }
        public Builder destinations(GetNetworkInsightsAnalysisExplanationDestination... destinations) {
            return destinations(List.of(destinations));
        }
        @CustomType.Setter
        public Builder direction(String direction) {
            if (direction == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "direction");
            }
            this.direction = direction;
            return this;
        }
        @CustomType.Setter
        public Builder elasticLoadBalancerListeners(List<GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListener> elasticLoadBalancerListeners) {
            if (elasticLoadBalancerListeners == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "elasticLoadBalancerListeners");
            }
            this.elasticLoadBalancerListeners = elasticLoadBalancerListeners;
            return this;
        }
        public Builder elasticLoadBalancerListeners(GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListener... elasticLoadBalancerListeners) {
            return elasticLoadBalancerListeners(List.of(elasticLoadBalancerListeners));
        }
        @CustomType.Setter
        public Builder explanationCode(String explanationCode) {
            if (explanationCode == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "explanationCode");
            }
            this.explanationCode = explanationCode;
            return this;
        }
        @CustomType.Setter
        public Builder ingressRouteTables(List<GetNetworkInsightsAnalysisExplanationIngressRouteTable> ingressRouteTables) {
            if (ingressRouteTables == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "ingressRouteTables");
            }
            this.ingressRouteTables = ingressRouteTables;
            return this;
        }
        public Builder ingressRouteTables(GetNetworkInsightsAnalysisExplanationIngressRouteTable... ingressRouteTables) {
            return ingressRouteTables(List.of(ingressRouteTables));
        }
        @CustomType.Setter
        public Builder internetGateways(List<GetNetworkInsightsAnalysisExplanationInternetGateway> internetGateways) {
            if (internetGateways == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "internetGateways");
            }
            this.internetGateways = internetGateways;
            return this;
        }
        public Builder internetGateways(GetNetworkInsightsAnalysisExplanationInternetGateway... internetGateways) {
            return internetGateways(List.of(internetGateways));
        }
        @CustomType.Setter
        public Builder loadBalancerArn(String loadBalancerArn) {
            if (loadBalancerArn == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "loadBalancerArn");
            }
            this.loadBalancerArn = loadBalancerArn;
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancerListenerPort(Integer loadBalancerListenerPort) {
            if (loadBalancerListenerPort == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "loadBalancerListenerPort");
            }
            this.loadBalancerListenerPort = loadBalancerListenerPort;
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancerTargetGroup(List<GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroup> loadBalancerTargetGroup) {
            if (loadBalancerTargetGroup == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "loadBalancerTargetGroup");
            }
            this.loadBalancerTargetGroup = loadBalancerTargetGroup;
            return this;
        }
        public Builder loadBalancerTargetGroup(GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroup... loadBalancerTargetGroup) {
            return loadBalancerTargetGroup(List.of(loadBalancerTargetGroup));
        }
        @CustomType.Setter
        public Builder loadBalancerTargetGroups(List<GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroup> loadBalancerTargetGroups) {
            if (loadBalancerTargetGroups == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "loadBalancerTargetGroups");
            }
            this.loadBalancerTargetGroups = loadBalancerTargetGroups;
            return this;
        }
        public Builder loadBalancerTargetGroups(GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroup... loadBalancerTargetGroups) {
            return loadBalancerTargetGroups(List.of(loadBalancerTargetGroups));
        }
        @CustomType.Setter
        public Builder loadBalancerTargetPort(Integer loadBalancerTargetPort) {
            if (loadBalancerTargetPort == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "loadBalancerTargetPort");
            }
            this.loadBalancerTargetPort = loadBalancerTargetPort;
            return this;
        }
        @CustomType.Setter
        public Builder missingComponent(String missingComponent) {
            if (missingComponent == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "missingComponent");
            }
            this.missingComponent = missingComponent;
            return this;
        }
        @CustomType.Setter
        public Builder natGateways(List<GetNetworkInsightsAnalysisExplanationNatGateway> natGateways) {
            if (natGateways == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "natGateways");
            }
            this.natGateways = natGateways;
            return this;
        }
        public Builder natGateways(GetNetworkInsightsAnalysisExplanationNatGateway... natGateways) {
            return natGateways(List.of(natGateways));
        }
        @CustomType.Setter
        public Builder networkInterfaces(List<GetNetworkInsightsAnalysisExplanationNetworkInterface> networkInterfaces) {
            if (networkInterfaces == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "networkInterfaces");
            }
            this.networkInterfaces = networkInterfaces;
            return this;
        }
        public Builder networkInterfaces(GetNetworkInsightsAnalysisExplanationNetworkInterface... networkInterfaces) {
            return networkInterfaces(List.of(networkInterfaces));
        }
        @CustomType.Setter
        public Builder packetField(String packetField) {
            if (packetField == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "packetField");
            }
            this.packetField = packetField;
            return this;
        }
        @CustomType.Setter
        public Builder port(Integer port) {
            if (port == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "port");
            }
            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder portRanges(List<GetNetworkInsightsAnalysisExplanationPortRange> portRanges) {
            if (portRanges == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "portRanges");
            }
            this.portRanges = portRanges;
            return this;
        }
        public Builder portRanges(GetNetworkInsightsAnalysisExplanationPortRange... portRanges) {
            return portRanges(List.of(portRanges));
        }
        @CustomType.Setter
        public Builder prefixLists(List<GetNetworkInsightsAnalysisExplanationPrefixList> prefixLists) {
            if (prefixLists == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "prefixLists");
            }
            this.prefixLists = prefixLists;
            return this;
        }
        public Builder prefixLists(GetNetworkInsightsAnalysisExplanationPrefixList... prefixLists) {
            return prefixLists(List.of(prefixLists));
        }
        @CustomType.Setter
        public Builder protocols(List<String> protocols) {
            if (protocols == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "protocols");
            }
            this.protocols = protocols;
            return this;
        }
        public Builder protocols(String... protocols) {
            return protocols(List.of(protocols));
        }
        @CustomType.Setter
        public Builder routeTableRoutes(List<GetNetworkInsightsAnalysisExplanationRouteTableRoute> routeTableRoutes) {
            if (routeTableRoutes == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "routeTableRoutes");
            }
            this.routeTableRoutes = routeTableRoutes;
            return this;
        }
        public Builder routeTableRoutes(GetNetworkInsightsAnalysisExplanationRouteTableRoute... routeTableRoutes) {
            return routeTableRoutes(List.of(routeTableRoutes));
        }
        @CustomType.Setter
        public Builder routeTables(List<GetNetworkInsightsAnalysisExplanationRouteTable> routeTables) {
            if (routeTables == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "routeTables");
            }
            this.routeTables = routeTables;
            return this;
        }
        public Builder routeTables(GetNetworkInsightsAnalysisExplanationRouteTable... routeTables) {
            return routeTables(List.of(routeTables));
        }
        @CustomType.Setter
        public Builder securityGroup(List<GetNetworkInsightsAnalysisExplanationSecurityGroup> securityGroup) {
            if (securityGroup == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "securityGroup");
            }
            this.securityGroup = securityGroup;
            return this;
        }
        public Builder securityGroup(GetNetworkInsightsAnalysisExplanationSecurityGroup... securityGroup) {
            return securityGroup(List.of(securityGroup));
        }
        @CustomType.Setter
        public Builder securityGroupRules(List<GetNetworkInsightsAnalysisExplanationSecurityGroupRule> securityGroupRules) {
            if (securityGroupRules == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "securityGroupRules");
            }
            this.securityGroupRules = securityGroupRules;
            return this;
        }
        public Builder securityGroupRules(GetNetworkInsightsAnalysisExplanationSecurityGroupRule... securityGroupRules) {
            return securityGroupRules(List.of(securityGroupRules));
        }
        @CustomType.Setter
        public Builder securityGroups(List<GetNetworkInsightsAnalysisExplanationSecurityGroup> securityGroups) {
            if (securityGroups == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "securityGroups");
            }
            this.securityGroups = securityGroups;
            return this;
        }
        public Builder securityGroups(GetNetworkInsightsAnalysisExplanationSecurityGroup... securityGroups) {
            return securityGroups(List.of(securityGroups));
        }
        @CustomType.Setter
        public Builder sourceVpcs(List<GetNetworkInsightsAnalysisExplanationSourceVpc> sourceVpcs) {
            if (sourceVpcs == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "sourceVpcs");
            }
            this.sourceVpcs = sourceVpcs;
            return this;
        }
        public Builder sourceVpcs(GetNetworkInsightsAnalysisExplanationSourceVpc... sourceVpcs) {
            return sourceVpcs(List.of(sourceVpcs));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder subnetRouteTables(List<GetNetworkInsightsAnalysisExplanationSubnetRouteTable> subnetRouteTables) {
            if (subnetRouteTables == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "subnetRouteTables");
            }
            this.subnetRouteTables = subnetRouteTables;
            return this;
        }
        public Builder subnetRouteTables(GetNetworkInsightsAnalysisExplanationSubnetRouteTable... subnetRouteTables) {
            return subnetRouteTables(List.of(subnetRouteTables));
        }
        @CustomType.Setter
        public Builder subnets(List<GetNetworkInsightsAnalysisExplanationSubnet> subnets) {
            if (subnets == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "subnets");
            }
            this.subnets = subnets;
            return this;
        }
        public Builder subnets(GetNetworkInsightsAnalysisExplanationSubnet... subnets) {
            return subnets(List.of(subnets));
        }
        @CustomType.Setter
        public Builder transitGatewayAttachments(List<GetNetworkInsightsAnalysisExplanationTransitGatewayAttachment> transitGatewayAttachments) {
            if (transitGatewayAttachments == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "transitGatewayAttachments");
            }
            this.transitGatewayAttachments = transitGatewayAttachments;
            return this;
        }
        public Builder transitGatewayAttachments(GetNetworkInsightsAnalysisExplanationTransitGatewayAttachment... transitGatewayAttachments) {
            return transitGatewayAttachments(List.of(transitGatewayAttachments));
        }
        @CustomType.Setter
        public Builder transitGatewayRouteTableRoutes(List<GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute> transitGatewayRouteTableRoutes) {
            if (transitGatewayRouteTableRoutes == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "transitGatewayRouteTableRoutes");
            }
            this.transitGatewayRouteTableRoutes = transitGatewayRouteTableRoutes;
            return this;
        }
        public Builder transitGatewayRouteTableRoutes(GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute... transitGatewayRouteTableRoutes) {
            return transitGatewayRouteTableRoutes(List.of(transitGatewayRouteTableRoutes));
        }
        @CustomType.Setter
        public Builder transitGatewayRouteTables(List<GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTable> transitGatewayRouteTables) {
            if (transitGatewayRouteTables == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "transitGatewayRouteTables");
            }
            this.transitGatewayRouteTables = transitGatewayRouteTables;
            return this;
        }
        public Builder transitGatewayRouteTables(GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTable... transitGatewayRouteTables) {
            return transitGatewayRouteTables(List.of(transitGatewayRouteTables));
        }
        @CustomType.Setter
        public Builder transitGateways(List<GetNetworkInsightsAnalysisExplanationTransitGateway> transitGateways) {
            if (transitGateways == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "transitGateways");
            }
            this.transitGateways = transitGateways;
            return this;
        }
        public Builder transitGateways(GetNetworkInsightsAnalysisExplanationTransitGateway... transitGateways) {
            return transitGateways(List.of(transitGateways));
        }
        @CustomType.Setter
        public Builder vpcEndpoints(List<GetNetworkInsightsAnalysisExplanationVpcEndpoint> vpcEndpoints) {
            if (vpcEndpoints == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "vpcEndpoints");
            }
            this.vpcEndpoints = vpcEndpoints;
            return this;
        }
        public Builder vpcEndpoints(GetNetworkInsightsAnalysisExplanationVpcEndpoint... vpcEndpoints) {
            return vpcEndpoints(List.of(vpcEndpoints));
        }
        @CustomType.Setter
        public Builder vpcPeeringConnections(List<GetNetworkInsightsAnalysisExplanationVpcPeeringConnection> vpcPeeringConnections) {
            if (vpcPeeringConnections == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "vpcPeeringConnections");
            }
            this.vpcPeeringConnections = vpcPeeringConnections;
            return this;
        }
        public Builder vpcPeeringConnections(GetNetworkInsightsAnalysisExplanationVpcPeeringConnection... vpcPeeringConnections) {
            return vpcPeeringConnections(List.of(vpcPeeringConnections));
        }
        @CustomType.Setter
        public Builder vpcs(List<GetNetworkInsightsAnalysisExplanationVpc> vpcs) {
            if (vpcs == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "vpcs");
            }
            this.vpcs = vpcs;
            return this;
        }
        public Builder vpcs(GetNetworkInsightsAnalysisExplanationVpc... vpcs) {
            return vpcs(List.of(vpcs));
        }
        @CustomType.Setter
        public Builder vpnConnections(List<GetNetworkInsightsAnalysisExplanationVpnConnection> vpnConnections) {
            if (vpnConnections == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "vpnConnections");
            }
            this.vpnConnections = vpnConnections;
            return this;
        }
        public Builder vpnConnections(GetNetworkInsightsAnalysisExplanationVpnConnection... vpnConnections) {
            return vpnConnections(List.of(vpnConnections));
        }
        @CustomType.Setter
        public Builder vpnGateways(List<GetNetworkInsightsAnalysisExplanationVpnGateway> vpnGateways) {
            if (vpnGateways == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanation", "vpnGateways");
            }
            this.vpnGateways = vpnGateways;
            return this;
        }
        public Builder vpnGateways(GetNetworkInsightsAnalysisExplanationVpnGateway... vpnGateways) {
            return vpnGateways(List.of(vpnGateways));
        }
        public GetNetworkInsightsAnalysisExplanation build() {
            final var _resultValue = new GetNetworkInsightsAnalysisExplanation();
            _resultValue.aclRules = aclRules;
            _resultValue.acls = acls;
            _resultValue.address = address;
            _resultValue.addresses = addresses;
            _resultValue.attachedTos = attachedTos;
            _resultValue.availabilityZones = availabilityZones;
            _resultValue.cidrs = cidrs;
            _resultValue.classicLoadBalancerListeners = classicLoadBalancerListeners;
            _resultValue.components = components;
            _resultValue.customerGateways = customerGateways;
            _resultValue.destinationVpcs = destinationVpcs;
            _resultValue.destinations = destinations;
            _resultValue.direction = direction;
            _resultValue.elasticLoadBalancerListeners = elasticLoadBalancerListeners;
            _resultValue.explanationCode = explanationCode;
            _resultValue.ingressRouteTables = ingressRouteTables;
            _resultValue.internetGateways = internetGateways;
            _resultValue.loadBalancerArn = loadBalancerArn;
            _resultValue.loadBalancerListenerPort = loadBalancerListenerPort;
            _resultValue.loadBalancerTargetGroup = loadBalancerTargetGroup;
            _resultValue.loadBalancerTargetGroups = loadBalancerTargetGroups;
            _resultValue.loadBalancerTargetPort = loadBalancerTargetPort;
            _resultValue.missingComponent = missingComponent;
            _resultValue.natGateways = natGateways;
            _resultValue.networkInterfaces = networkInterfaces;
            _resultValue.packetField = packetField;
            _resultValue.port = port;
            _resultValue.portRanges = portRanges;
            _resultValue.prefixLists = prefixLists;
            _resultValue.protocols = protocols;
            _resultValue.routeTableRoutes = routeTableRoutes;
            _resultValue.routeTables = routeTables;
            _resultValue.securityGroup = securityGroup;
            _resultValue.securityGroupRules = securityGroupRules;
            _resultValue.securityGroups = securityGroups;
            _resultValue.sourceVpcs = sourceVpcs;
            _resultValue.state = state;
            _resultValue.subnetRouteTables = subnetRouteTables;
            _resultValue.subnets = subnets;
            _resultValue.transitGatewayAttachments = transitGatewayAttachments;
            _resultValue.transitGatewayRouteTableRoutes = transitGatewayRouteTableRoutes;
            _resultValue.transitGatewayRouteTables = transitGatewayRouteTables;
            _resultValue.transitGateways = transitGateways;
            _resultValue.vpcEndpoints = vpcEndpoints;
            _resultValue.vpcPeeringConnections = vpcPeeringConnections;
            _resultValue.vpcs = vpcs;
            _resultValue.vpnConnections = vpnConnections;
            _resultValue.vpnGateways = vpnGateways;
            return _resultValue;
        }
    }
}
