// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.transfer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConnectorAs2Config {
    private String compression;
    private String encryptionAlgorithm;
    private String localProfileId;
    private String mdnResponse;
    private @Nullable String mdnSigningAlgorithm;
    private @Nullable String messageSubject;
    private String partnerProfileId;
    private String signingAlgorithm;

    private ConnectorAs2Config() {}
    public String compression() {
        return this.compression;
    }
    public String encryptionAlgorithm() {
        return this.encryptionAlgorithm;
    }
    public String localProfileId() {
        return this.localProfileId;
    }
    public String mdnResponse() {
        return this.mdnResponse;
    }
    public Optional<String> mdnSigningAlgorithm() {
        return Optional.ofNullable(this.mdnSigningAlgorithm);
    }
    public Optional<String> messageSubject() {
        return Optional.ofNullable(this.messageSubject);
    }
    public String partnerProfileId() {
        return this.partnerProfileId;
    }
    public String signingAlgorithm() {
        return this.signingAlgorithm;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectorAs2Config defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compression;
        private String encryptionAlgorithm;
        private String localProfileId;
        private String mdnResponse;
        private @Nullable String mdnSigningAlgorithm;
        private @Nullable String messageSubject;
        private String partnerProfileId;
        private String signingAlgorithm;
        public Builder() {}
        public Builder(ConnectorAs2Config defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compression = defaults.compression;
    	      this.encryptionAlgorithm = defaults.encryptionAlgorithm;
    	      this.localProfileId = defaults.localProfileId;
    	      this.mdnResponse = defaults.mdnResponse;
    	      this.mdnSigningAlgorithm = defaults.mdnSigningAlgorithm;
    	      this.messageSubject = defaults.messageSubject;
    	      this.partnerProfileId = defaults.partnerProfileId;
    	      this.signingAlgorithm = defaults.signingAlgorithm;
        }

        @CustomType.Setter
        public Builder compression(String compression) {
            if (compression == null) {
              throw new MissingRequiredPropertyException("ConnectorAs2Config", "compression");
            }
            this.compression = compression;
            return this;
        }
        @CustomType.Setter
        public Builder encryptionAlgorithm(String encryptionAlgorithm) {
            if (encryptionAlgorithm == null) {
              throw new MissingRequiredPropertyException("ConnectorAs2Config", "encryptionAlgorithm");
            }
            this.encryptionAlgorithm = encryptionAlgorithm;
            return this;
        }
        @CustomType.Setter
        public Builder localProfileId(String localProfileId) {
            if (localProfileId == null) {
              throw new MissingRequiredPropertyException("ConnectorAs2Config", "localProfileId");
            }
            this.localProfileId = localProfileId;
            return this;
        }
        @CustomType.Setter
        public Builder mdnResponse(String mdnResponse) {
            if (mdnResponse == null) {
              throw new MissingRequiredPropertyException("ConnectorAs2Config", "mdnResponse");
            }
            this.mdnResponse = mdnResponse;
            return this;
        }
        @CustomType.Setter
        public Builder mdnSigningAlgorithm(@Nullable String mdnSigningAlgorithm) {

            this.mdnSigningAlgorithm = mdnSigningAlgorithm;
            return this;
        }
        @CustomType.Setter
        public Builder messageSubject(@Nullable String messageSubject) {

            this.messageSubject = messageSubject;
            return this;
        }
        @CustomType.Setter
        public Builder partnerProfileId(String partnerProfileId) {
            if (partnerProfileId == null) {
              throw new MissingRequiredPropertyException("ConnectorAs2Config", "partnerProfileId");
            }
            this.partnerProfileId = partnerProfileId;
            return this;
        }
        @CustomType.Setter
        public Builder signingAlgorithm(String signingAlgorithm) {
            if (signingAlgorithm == null) {
              throw new MissingRequiredPropertyException("ConnectorAs2Config", "signingAlgorithm");
            }
            this.signingAlgorithm = signingAlgorithm;
            return this;
        }
        public ConnectorAs2Config build() {
            final var _resultValue = new ConnectorAs2Config();
            _resultValue.compression = compression;
            _resultValue.encryptionAlgorithm = encryptionAlgorithm;
            _resultValue.localProfileId = localProfileId;
            _resultValue.mdnResponse = mdnResponse;
            _resultValue.mdnSigningAlgorithm = mdnSigningAlgorithm;
            _resultValue.messageSubject = messageSubject;
            _resultValue.partnerProfileId = partnerProfileId;
            _resultValue.signingAlgorithm = signingAlgorithm;
            return _resultValue;
        }
    }
}
