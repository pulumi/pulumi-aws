// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dms.outputs;

import com.pulumi.aws.dms.outputs.GetEndpointElasticsearchSetting;
import com.pulumi.aws.dms.outputs.GetEndpointKafkaSetting;
import com.pulumi.aws.dms.outputs.GetEndpointKinesisSetting;
import com.pulumi.aws.dms.outputs.GetEndpointMongodbSetting;
import com.pulumi.aws.dms.outputs.GetEndpointRedisSetting;
import com.pulumi.aws.dms.outputs.GetEndpointRedshiftSetting;
import com.pulumi.aws.dms.outputs.GetEndpointS3Setting;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetEndpointResult {
    private @Nullable String certificateArn;
    private @Nullable String databaseName;
    private @Nullable List<GetEndpointElasticsearchSetting> elasticsearchSettings;
    private @Nullable String endpointArn;
    private String endpointId;
    private @Nullable String endpointType;
    private @Nullable String engineName;
    private @Nullable String extraConnectionAttributes;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private @Nullable List<GetEndpointKafkaSetting> kafkaSettings;
    private @Nullable List<GetEndpointKinesisSetting> kinesisSettings;
    private @Nullable String kmsKeyArn;
    private @Nullable List<GetEndpointMongodbSetting> mongodbSettings;
    private @Nullable String password;
    private @Nullable Integer port;
    private @Nullable List<GetEndpointRedisSetting> redisSettings;
    private @Nullable List<GetEndpointRedshiftSetting> redshiftSettings;
    private @Nullable List<GetEndpointS3Setting> s3Settings;
    private @Nullable String secretsManagerAccessRoleArn;
    private @Nullable String secretsManagerArn;
    private @Nullable String serverName;
    private @Nullable String serviceAccessRole;
    private @Nullable String sslMode;
    private @Nullable Map<String,String> tags;
    private @Nullable String username;

    private GetEndpointResult() {}
    public Optional<String> certificateArn() {
        return Optional.ofNullable(this.certificateArn);
    }
    public Optional<String> databaseName() {
        return Optional.ofNullable(this.databaseName);
    }
    public List<GetEndpointElasticsearchSetting> elasticsearchSettings() {
        return this.elasticsearchSettings == null ? List.of() : this.elasticsearchSettings;
    }
    public Optional<String> endpointArn() {
        return Optional.ofNullable(this.endpointArn);
    }
    public String endpointId() {
        return this.endpointId;
    }
    public Optional<String> endpointType() {
        return Optional.ofNullable(this.endpointType);
    }
    public Optional<String> engineName() {
        return Optional.ofNullable(this.engineName);
    }
    public Optional<String> extraConnectionAttributes() {
        return Optional.ofNullable(this.extraConnectionAttributes);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public List<GetEndpointKafkaSetting> kafkaSettings() {
        return this.kafkaSettings == null ? List.of() : this.kafkaSettings;
    }
    public List<GetEndpointKinesisSetting> kinesisSettings() {
        return this.kinesisSettings == null ? List.of() : this.kinesisSettings;
    }
    public Optional<String> kmsKeyArn() {
        return Optional.ofNullable(this.kmsKeyArn);
    }
    public List<GetEndpointMongodbSetting> mongodbSettings() {
        return this.mongodbSettings == null ? List.of() : this.mongodbSettings;
    }
    public Optional<String> password() {
        return Optional.ofNullable(this.password);
    }
    public Optional<Integer> port() {
        return Optional.ofNullable(this.port);
    }
    public List<GetEndpointRedisSetting> redisSettings() {
        return this.redisSettings == null ? List.of() : this.redisSettings;
    }
    public List<GetEndpointRedshiftSetting> redshiftSettings() {
        return this.redshiftSettings == null ? List.of() : this.redshiftSettings;
    }
    public List<GetEndpointS3Setting> s3Settings() {
        return this.s3Settings == null ? List.of() : this.s3Settings;
    }
    public Optional<String> secretsManagerAccessRoleArn() {
        return Optional.ofNullable(this.secretsManagerAccessRoleArn);
    }
    public Optional<String> secretsManagerArn() {
        return Optional.ofNullable(this.secretsManagerArn);
    }
    public Optional<String> serverName() {
        return Optional.ofNullable(this.serverName);
    }
    public Optional<String> serviceAccessRole() {
        return Optional.ofNullable(this.serviceAccessRole);
    }
    public Optional<String> sslMode() {
        return Optional.ofNullable(this.sslMode);
    }
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public Optional<String> username() {
        return Optional.ofNullable(this.username);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEndpointResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String certificateArn;
        private @Nullable String databaseName;
        private @Nullable List<GetEndpointElasticsearchSetting> elasticsearchSettings;
        private @Nullable String endpointArn;
        private String endpointId;
        private @Nullable String endpointType;
        private @Nullable String engineName;
        private @Nullable String extraConnectionAttributes;
        private @Nullable String id;
        private @Nullable List<GetEndpointKafkaSetting> kafkaSettings;
        private @Nullable List<GetEndpointKinesisSetting> kinesisSettings;
        private @Nullable String kmsKeyArn;
        private @Nullable List<GetEndpointMongodbSetting> mongodbSettings;
        private @Nullable String password;
        private @Nullable Integer port;
        private @Nullable List<GetEndpointRedisSetting> redisSettings;
        private @Nullable List<GetEndpointRedshiftSetting> redshiftSettings;
        private @Nullable List<GetEndpointS3Setting> s3Settings;
        private @Nullable String secretsManagerAccessRoleArn;
        private @Nullable String secretsManagerArn;
        private @Nullable String serverName;
        private @Nullable String serviceAccessRole;
        private @Nullable String sslMode;
        private @Nullable Map<String,String> tags;
        private @Nullable String username;
        public Builder() {}
        public Builder(GetEndpointResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateArn = defaults.certificateArn;
    	      this.databaseName = defaults.databaseName;
    	      this.elasticsearchSettings = defaults.elasticsearchSettings;
    	      this.endpointArn = defaults.endpointArn;
    	      this.endpointId = defaults.endpointId;
    	      this.endpointType = defaults.endpointType;
    	      this.engineName = defaults.engineName;
    	      this.extraConnectionAttributes = defaults.extraConnectionAttributes;
    	      this.id = defaults.id;
    	      this.kafkaSettings = defaults.kafkaSettings;
    	      this.kinesisSettings = defaults.kinesisSettings;
    	      this.kmsKeyArn = defaults.kmsKeyArn;
    	      this.mongodbSettings = defaults.mongodbSettings;
    	      this.password = defaults.password;
    	      this.port = defaults.port;
    	      this.redisSettings = defaults.redisSettings;
    	      this.redshiftSettings = defaults.redshiftSettings;
    	      this.s3Settings = defaults.s3Settings;
    	      this.secretsManagerAccessRoleArn = defaults.secretsManagerAccessRoleArn;
    	      this.secretsManagerArn = defaults.secretsManagerArn;
    	      this.serverName = defaults.serverName;
    	      this.serviceAccessRole = defaults.serviceAccessRole;
    	      this.sslMode = defaults.sslMode;
    	      this.tags = defaults.tags;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder certificateArn(@Nullable String certificateArn) {
            this.certificateArn = certificateArn;
            return this;
        }
        @CustomType.Setter
        public Builder databaseName(@Nullable String databaseName) {
            this.databaseName = databaseName;
            return this;
        }
        @CustomType.Setter
        public Builder elasticsearchSettings(@Nullable List<GetEndpointElasticsearchSetting> elasticsearchSettings) {
            this.elasticsearchSettings = elasticsearchSettings;
            return this;
        }
        public Builder elasticsearchSettings(GetEndpointElasticsearchSetting... elasticsearchSettings) {
            return elasticsearchSettings(List.of(elasticsearchSettings));
        }
        @CustomType.Setter
        public Builder endpointArn(@Nullable String endpointArn) {
            this.endpointArn = endpointArn;
            return this;
        }
        @CustomType.Setter
        public Builder endpointId(String endpointId) {
            this.endpointId = Objects.requireNonNull(endpointId);
            return this;
        }
        @CustomType.Setter
        public Builder endpointType(@Nullable String endpointType) {
            this.endpointType = endpointType;
            return this;
        }
        @CustomType.Setter
        public Builder engineName(@Nullable String engineName) {
            this.engineName = engineName;
            return this;
        }
        @CustomType.Setter
        public Builder extraConnectionAttributes(@Nullable String extraConnectionAttributes) {
            this.extraConnectionAttributes = extraConnectionAttributes;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder kafkaSettings(@Nullable List<GetEndpointKafkaSetting> kafkaSettings) {
            this.kafkaSettings = kafkaSettings;
            return this;
        }
        public Builder kafkaSettings(GetEndpointKafkaSetting... kafkaSettings) {
            return kafkaSettings(List.of(kafkaSettings));
        }
        @CustomType.Setter
        public Builder kinesisSettings(@Nullable List<GetEndpointKinesisSetting> kinesisSettings) {
            this.kinesisSettings = kinesisSettings;
            return this;
        }
        public Builder kinesisSettings(GetEndpointKinesisSetting... kinesisSettings) {
            return kinesisSettings(List.of(kinesisSettings));
        }
        @CustomType.Setter
        public Builder kmsKeyArn(@Nullable String kmsKeyArn) {
            this.kmsKeyArn = kmsKeyArn;
            return this;
        }
        @CustomType.Setter
        public Builder mongodbSettings(@Nullable List<GetEndpointMongodbSetting> mongodbSettings) {
            this.mongodbSettings = mongodbSettings;
            return this;
        }
        public Builder mongodbSettings(GetEndpointMongodbSetting... mongodbSettings) {
            return mongodbSettings(List.of(mongodbSettings));
        }
        @CustomType.Setter
        public Builder password(@Nullable String password) {
            this.password = password;
            return this;
        }
        @CustomType.Setter
        public Builder port(@Nullable Integer port) {
            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder redisSettings(@Nullable List<GetEndpointRedisSetting> redisSettings) {
            this.redisSettings = redisSettings;
            return this;
        }
        public Builder redisSettings(GetEndpointRedisSetting... redisSettings) {
            return redisSettings(List.of(redisSettings));
        }
        @CustomType.Setter
        public Builder redshiftSettings(@Nullable List<GetEndpointRedshiftSetting> redshiftSettings) {
            this.redshiftSettings = redshiftSettings;
            return this;
        }
        public Builder redshiftSettings(GetEndpointRedshiftSetting... redshiftSettings) {
            return redshiftSettings(List.of(redshiftSettings));
        }
        @CustomType.Setter
        public Builder s3Settings(@Nullable List<GetEndpointS3Setting> s3Settings) {
            this.s3Settings = s3Settings;
            return this;
        }
        public Builder s3Settings(GetEndpointS3Setting... s3Settings) {
            return s3Settings(List.of(s3Settings));
        }
        @CustomType.Setter
        public Builder secretsManagerAccessRoleArn(@Nullable String secretsManagerAccessRoleArn) {
            this.secretsManagerAccessRoleArn = secretsManagerAccessRoleArn;
            return this;
        }
        @CustomType.Setter
        public Builder secretsManagerArn(@Nullable String secretsManagerArn) {
            this.secretsManagerArn = secretsManagerArn;
            return this;
        }
        @CustomType.Setter
        public Builder serverName(@Nullable String serverName) {
            this.serverName = serverName;
            return this;
        }
        @CustomType.Setter
        public Builder serviceAccessRole(@Nullable String serviceAccessRole) {
            this.serviceAccessRole = serviceAccessRole;
            return this;
        }
        @CustomType.Setter
        public Builder sslMode(@Nullable String sslMode) {
            this.sslMode = sslMode;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder username(@Nullable String username) {
            this.username = username;
            return this;
        }
        public GetEndpointResult build() {
            final var o = new GetEndpointResult();
            o.certificateArn = certificateArn;
            o.databaseName = databaseName;
            o.elasticsearchSettings = elasticsearchSettings;
            o.endpointArn = endpointArn;
            o.endpointId = endpointId;
            o.endpointType = endpointType;
            o.engineName = engineName;
            o.extraConnectionAttributes = extraConnectionAttributes;
            o.id = id;
            o.kafkaSettings = kafkaSettings;
            o.kinesisSettings = kinesisSettings;
            o.kmsKeyArn = kmsKeyArn;
            o.mongodbSettings = mongodbSettings;
            o.password = password;
            o.port = port;
            o.redisSettings = redisSettings;
            o.redshiftSettings = redshiftSettings;
            o.s3Settings = s3Settings;
            o.secretsManagerAccessRoleArn = secretsManagerAccessRoleArn;
            o.secretsManagerArn = secretsManagerArn;
            o.serverName = serverName;
            o.serviceAccessRole = serviceAccessRole;
            o.sslMode = sslMode;
            o.tags = tags;
            o.username = username;
            return o;
        }
    }
}
