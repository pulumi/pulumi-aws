// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.paymentcryptography;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.paymentcryptography.KeyAliasArgs;
import com.pulumi.aws.paymentcryptography.inputs.KeyAliasState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for managing an AWS Payment Cryptography Control Plane Key Alias.
 * 
 * ## Example Usage
 * 
 * ### Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.paymentcryptography.Key;
 * import com.pulumi.aws.paymentcryptography.KeyArgs;
 * import com.pulumi.aws.paymentcryptography.KeyAlias;
 * import com.pulumi.aws.paymentcryptography.KeyAliasArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var test = new Key("test", KeyArgs.builder()
 *             .exportable(true)
 *             .keyAttributes(KeyKeyAttributesArgs.builder()
 *                 .keyAlgorithm("TDES_3KEY")
 *                 .keyClass("SYMMETRIC_KEY")
 *                 .keyUsage("TR31_P0_PIN_ENCRYPTION_KEY")
 *                 .keyModesOfUse(KeyKeyAttributesKeyModesOfUseArgs.builder()
 *                     .decrypt(true)
 *                     .encrypt(true)
 *                     .wrap(true)
 *                     .unwrap(true)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var testKeyAlias = new KeyAlias("testKeyAlias", KeyAliasArgs.builder()
 *             .aliasName("alias/test-alias")
 *             .keyArn(test.arn())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Using `pulumi import`, import Payment Cryptography Control Plane Key Alias using the `alias/4681482429376900170`. For example:
 * 
 * ```sh
 * $ pulumi import aws:paymentcryptography/keyAlias:KeyAlias example alias/4681482429376900170
 * ```
 * 
 */
@ResourceType(type="aws:paymentcryptography/keyAlias:KeyAlias")
public class KeyAlias extends com.pulumi.resources.CustomResource {
    /**
     * Name of the Key Alias.
     * 
     * The following arguments are optional:
     * 
     */
    @Export(name="aliasName", refs={String.class}, tree="[0]")
    private Output<String> aliasName;

    /**
     * @return Name of the Key Alias.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<String> aliasName() {
        return this.aliasName;
    }
    /**
     * ARN of the key.
     * 
     */
    @Export(name="keyArn", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> keyArn;

    /**
     * @return ARN of the key.
     * 
     */
    public Output<Optional<String>> keyArn() {
        return Codegen.optional(this.keyArn);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public KeyAlias(String name) {
        this(name, KeyAliasArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public KeyAlias(String name, KeyAliasArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public KeyAlias(String name, KeyAliasArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:paymentcryptography/keyAlias:KeyAlias", name, args == null ? KeyAliasArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private KeyAlias(String name, Output<String> id, @Nullable KeyAliasState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:paymentcryptography/keyAlias:KeyAlias", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static KeyAlias get(String name, Output<String> id, @Nullable KeyAliasState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new KeyAlias(name, id, state, options);
    }
}
