// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appautoscaling;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TargetArgs extends com.pulumi.resources.ResourceArgs {

    public static final TargetArgs Empty = new TargetArgs();

    @Import(name="maxCapacity", required=true)
    private Output<Integer> maxCapacity;

    public Output<Integer> maxCapacity() {
        return this.maxCapacity;
    }

    @Import(name="minCapacity", required=true)
    private Output<Integer> minCapacity;

    public Output<Integer> minCapacity() {
        return this.minCapacity;
    }

    @Import(name="resourceId", required=true)
    private Output<String> resourceId;

    public Output<String> resourceId() {
        return this.resourceId;
    }

    @Import(name="roleArn")
    private @Nullable Output<String> roleArn;

    public Optional<Output<String>> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }

    @Import(name="scalableDimension", required=true)
    private Output<String> scalableDimension;

    public Output<String> scalableDimension() {
        return this.scalableDimension;
    }

    @Import(name="serviceNamespace", required=true)
    private Output<String> serviceNamespace;

    public Output<String> serviceNamespace() {
        return this.serviceNamespace;
    }

    private TargetArgs() {}

    private TargetArgs(TargetArgs $) {
        this.maxCapacity = $.maxCapacity;
        this.minCapacity = $.minCapacity;
        this.resourceId = $.resourceId;
        this.roleArn = $.roleArn;
        this.scalableDimension = $.scalableDimension;
        this.serviceNamespace = $.serviceNamespace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TargetArgs $;

        public Builder() {
            $ = new TargetArgs();
        }

        public Builder(TargetArgs defaults) {
            $ = new TargetArgs(Objects.requireNonNull(defaults));
        }

        public Builder maxCapacity(Output<Integer> maxCapacity) {
            $.maxCapacity = maxCapacity;
            return this;
        }

        public Builder maxCapacity(Integer maxCapacity) {
            return maxCapacity(Output.of(maxCapacity));
        }

        public Builder minCapacity(Output<Integer> minCapacity) {
            $.minCapacity = minCapacity;
            return this;
        }

        public Builder minCapacity(Integer minCapacity) {
            return minCapacity(Output.of(minCapacity));
        }

        public Builder resourceId(Output<String> resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        public Builder resourceId(String resourceId) {
            return resourceId(Output.of(resourceId));
        }

        public Builder roleArn(@Nullable Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public Builder scalableDimension(Output<String> scalableDimension) {
            $.scalableDimension = scalableDimension;
            return this;
        }

        public Builder scalableDimension(String scalableDimension) {
            return scalableDimension(Output.of(scalableDimension));
        }

        public Builder serviceNamespace(Output<String> serviceNamespace) {
            $.serviceNamespace = serviceNamespace;
            return this;
        }

        public Builder serviceNamespace(String serviceNamespace) {
            return serviceNamespace(Output.of(serviceNamespace));
        }

        public TargetArgs build() {
            $.maxCapacity = Objects.requireNonNull($.maxCapacity, "expected parameter 'maxCapacity' to be non-null");
            $.minCapacity = Objects.requireNonNull($.minCapacity, "expected parameter 'minCapacity' to be non-null");
            $.resourceId = Objects.requireNonNull($.resourceId, "expected parameter 'resourceId' to be non-null");
            $.scalableDimension = Objects.requireNonNull($.scalableDimension, "expected parameter 'scalableDimension' to be non-null");
            $.serviceNamespace = Objects.requireNonNull($.serviceNamespace, "expected parameter 'serviceNamespace' to be non-null");
            return $;
        }
    }

}
