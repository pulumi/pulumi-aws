// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kinesisanalyticsv2.inputs;

import com.pulumi.aws.kinesisanalyticsv2.inputs.ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatArgs Empty = new ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatArgs();

    @Import(name="mappingParameters", required=true)
    private Output<ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersArgs> mappingParameters;

    public Output<ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersArgs> mappingParameters() {
        return this.mappingParameters;
    }

    @Import(name="recordFormatType", required=true)
    private Output<String> recordFormatType;

    public Output<String> recordFormatType() {
        return this.recordFormatType;
    }

    private ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatArgs() {}

    private ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatArgs(ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatArgs $) {
        this.mappingParameters = $.mappingParameters;
        this.recordFormatType = $.recordFormatType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatArgs $;

        public Builder() {
            $ = new ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatArgs();
        }

        public Builder(ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatArgs defaults) {
            $ = new ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatArgs(Objects.requireNonNull(defaults));
        }

        public Builder mappingParameters(Output<ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersArgs> mappingParameters) {
            $.mappingParameters = mappingParameters;
            return this;
        }

        public Builder mappingParameters(ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersArgs mappingParameters) {
            return mappingParameters(Output.of(mappingParameters));
        }

        public Builder recordFormatType(Output<String> recordFormatType) {
            $.recordFormatType = recordFormatType;
            return this;
        }

        public Builder recordFormatType(String recordFormatType) {
            return recordFormatType(Output.of(recordFormatType));
        }

        public ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatArgs build() {
            $.mappingParameters = Objects.requireNonNull($.mappingParameters, "expected parameter 'mappingParameters' to be non-null");
            $.recordFormatType = Objects.requireNonNull($.recordFormatType, "expected parameter 'recordFormatType' to be non-null");
            return $;
        }
    }

}
