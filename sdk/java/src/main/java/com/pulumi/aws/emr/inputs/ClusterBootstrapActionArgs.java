// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.emr.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterBootstrapActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterBootstrapActionArgs Empty = new ClusterBootstrapActionArgs();

    /**
     * List of command line arguments to pass to the bootstrap action script.
     * 
     */
    @Import(name="args")
    private @Nullable Output<List<String>> args;

    /**
     * @return List of command line arguments to pass to the bootstrap action script.
     * 
     */
    public Optional<Output<List<String>>> args() {
        return Optional.ofNullable(this.args);
    }

    /**
     * Name of the bootstrap action.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of the bootstrap action.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Location of the script to run during a bootstrap action. Can be either a location in Amazon S3 or on a local file system.
     * 
     */
    @Import(name="path", required=true)
    private Output<String> path;

    /**
     * @return Location of the script to run during a bootstrap action. Can be either a location in Amazon S3 or on a local file system.
     * 
     */
    public Output<String> path() {
        return this.path;
    }

    private ClusterBootstrapActionArgs() {}

    private ClusterBootstrapActionArgs(ClusterBootstrapActionArgs $) {
        this.args = $.args;
        this.name = $.name;
        this.path = $.path;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterBootstrapActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterBootstrapActionArgs $;

        public Builder() {
            $ = new ClusterBootstrapActionArgs();
        }

        public Builder(ClusterBootstrapActionArgs defaults) {
            $ = new ClusterBootstrapActionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param args List of command line arguments to pass to the bootstrap action script.
         * 
         * @return builder
         * 
         */
        public Builder args(@Nullable Output<List<String>> args) {
            $.args = args;
            return this;
        }

        /**
         * @param args List of command line arguments to pass to the bootstrap action script.
         * 
         * @return builder
         * 
         */
        public Builder args(List<String> args) {
            return args(Output.of(args));
        }

        /**
         * @param args List of command line arguments to pass to the bootstrap action script.
         * 
         * @return builder
         * 
         */
        public Builder args(String... args) {
            return args(List.of(args));
        }

        /**
         * @param name Name of the bootstrap action.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the bootstrap action.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param path Location of the script to run during a bootstrap action. Can be either a location in Amazon S3 or on a local file system.
         * 
         * @return builder
         * 
         */
        public Builder path(Output<String> path) {
            $.path = path;
            return this;
        }

        /**
         * @param path Location of the script to run during a bootstrap action. Can be either a location in Amazon S3 or on a local file system.
         * 
         * @return builder
         * 
         */
        public Builder path(String path) {
            return path(Output.of(path));
        }

        public ClusterBootstrapActionArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.path = Objects.requireNonNull($.path, "expected parameter 'path' to be non-null");
            return $;
        }
    }

}
