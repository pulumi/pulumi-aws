// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.wafv2.outputs;

import com.pulumi.aws.wafv2.outputs.WebAclLoggingConfigurationLoggingFilterFilterCondition;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class WebAclLoggingConfigurationLoggingFilterFilter {
    /**
     * @return Parameter that determines how to handle logs that meet the conditions and requirements of the filter. The valid values for `behavior` are `KEEP` or `DROP`.
     * 
     */
    private String behavior;
    /**
     * @return Match condition(s) for the filter. See Condition below for more details.
     * 
     */
    private List<WebAclLoggingConfigurationLoggingFilterFilterCondition> conditions;
    /**
     * @return Logic to apply to the filtering conditions. You can specify that a log must match all conditions or at least one condition in order to satisfy the filter. Valid values for `requirement` are `MEETS_ALL` or `MEETS_ANY`.
     * 
     */
    private String requirement;

    private WebAclLoggingConfigurationLoggingFilterFilter() {}
    /**
     * @return Parameter that determines how to handle logs that meet the conditions and requirements of the filter. The valid values for `behavior` are `KEEP` or `DROP`.
     * 
     */
    public String behavior() {
        return this.behavior;
    }
    /**
     * @return Match condition(s) for the filter. See Condition below for more details.
     * 
     */
    public List<WebAclLoggingConfigurationLoggingFilterFilterCondition> conditions() {
        return this.conditions;
    }
    /**
     * @return Logic to apply to the filtering conditions. You can specify that a log must match all conditions or at least one condition in order to satisfy the filter. Valid values for `requirement` are `MEETS_ALL` or `MEETS_ANY`.
     * 
     */
    public String requirement() {
        return this.requirement;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebAclLoggingConfigurationLoggingFilterFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String behavior;
        private List<WebAclLoggingConfigurationLoggingFilterFilterCondition> conditions;
        private String requirement;
        public Builder() {}
        public Builder(WebAclLoggingConfigurationLoggingFilterFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.behavior = defaults.behavior;
    	      this.conditions = defaults.conditions;
    	      this.requirement = defaults.requirement;
        }

        @CustomType.Setter
        public Builder behavior(String behavior) {
            if (behavior == null) {
              throw new MissingRequiredPropertyException("WebAclLoggingConfigurationLoggingFilterFilter", "behavior");
            }
            this.behavior = behavior;
            return this;
        }
        @CustomType.Setter
        public Builder conditions(List<WebAclLoggingConfigurationLoggingFilterFilterCondition> conditions) {
            if (conditions == null) {
              throw new MissingRequiredPropertyException("WebAclLoggingConfigurationLoggingFilterFilter", "conditions");
            }
            this.conditions = conditions;
            return this;
        }
        public Builder conditions(WebAclLoggingConfigurationLoggingFilterFilterCondition... conditions) {
            return conditions(List.of(conditions));
        }
        @CustomType.Setter
        public Builder requirement(String requirement) {
            if (requirement == null) {
              throw new MissingRequiredPropertyException("WebAclLoggingConfigurationLoggingFilterFilter", "requirement");
            }
            this.requirement = requirement;
            return this;
        }
        public WebAclLoggingConfigurationLoggingFilterFilter build() {
            final var _resultValue = new WebAclLoggingConfigurationLoggingFilterFilter();
            _resultValue.behavior = behavior;
            _resultValue.conditions = conditions;
            _resultValue.requirement = requirement;
            return _resultValue;
        }
    }
}
