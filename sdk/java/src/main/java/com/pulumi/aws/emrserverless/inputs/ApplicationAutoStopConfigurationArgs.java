// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.emrserverless.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationAutoStopConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationAutoStopConfigurationArgs Empty = new ApplicationAutoStopConfigurationArgs();

    /**
     * Enables the application to automatically stop after a certain amount of time being idle. Defaults to `true`.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Enables the application to automatically stop after a certain amount of time being idle. Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * The amount of idle time in minutes after which your application will automatically stop. Defaults to `15` minutes.
     * 
     */
    @Import(name="idleTimeoutMinutes")
    private @Nullable Output<Integer> idleTimeoutMinutes;

    /**
     * @return The amount of idle time in minutes after which your application will automatically stop. Defaults to `15` minutes.
     * 
     */
    public Optional<Output<Integer>> idleTimeoutMinutes() {
        return Optional.ofNullable(this.idleTimeoutMinutes);
    }

    private ApplicationAutoStopConfigurationArgs() {}

    private ApplicationAutoStopConfigurationArgs(ApplicationAutoStopConfigurationArgs $) {
        this.enabled = $.enabled;
        this.idleTimeoutMinutes = $.idleTimeoutMinutes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationAutoStopConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationAutoStopConfigurationArgs $;

        public Builder() {
            $ = new ApplicationAutoStopConfigurationArgs();
        }

        public Builder(ApplicationAutoStopConfigurationArgs defaults) {
            $ = new ApplicationAutoStopConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Enables the application to automatically stop after a certain amount of time being idle. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Enables the application to automatically stop after a certain amount of time being idle. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param idleTimeoutMinutes The amount of idle time in minutes after which your application will automatically stop. Defaults to `15` minutes.
         * 
         * @return builder
         * 
         */
        public Builder idleTimeoutMinutes(@Nullable Output<Integer> idleTimeoutMinutes) {
            $.idleTimeoutMinutes = idleTimeoutMinutes;
            return this;
        }

        /**
         * @param idleTimeoutMinutes The amount of idle time in minutes after which your application will automatically stop. Defaults to `15` minutes.
         * 
         * @return builder
         * 
         */
        public Builder idleTimeoutMinutes(Integer idleTimeoutMinutes) {
            return idleTimeoutMinutes(Output.of(idleTimeoutMinutes));
        }

        public ApplicationAutoStopConfigurationArgs build() {
            return $;
        }
    }

}
