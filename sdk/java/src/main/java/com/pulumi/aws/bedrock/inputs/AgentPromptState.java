// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.inputs;

import com.pulumi.aws.bedrock.inputs.AgentPromptVariantArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AgentPromptState extends com.pulumi.resources.ResourceArgs {

    public static final AgentPromptState Empty = new AgentPromptState();

    /**
     * Amazon Resource Name (ARN) of the prompt.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return Amazon Resource Name (ARN) of the prompt.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * Time at which the prompt was created.
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return Time at which the prompt was created.
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * Amazon Resource Name (ARN) of the KMS key that you encrypted the prompt with.
     * 
     */
    @Import(name="customerEncryptionKeyArn")
    private @Nullable Output<String> customerEncryptionKeyArn;

    /**
     * @return Amazon Resource Name (ARN) of the KMS key that you encrypted the prompt with.
     * 
     */
    public Optional<Output<String>> customerEncryptionKeyArn() {
        return Optional.ofNullable(this.customerEncryptionKeyArn);
    }

    /**
     * Name of the default variant for your prompt.
     * 
     */
    @Import(name="defaultVariant")
    private @Nullable Output<String> defaultVariant;

    /**
     * @return Name of the default variant for your prompt.
     * 
     */
    public Optional<Output<String>> defaultVariant() {
        return Optional.ofNullable(this.defaultVariant);
    }

    /**
     * Description of the prompt.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the prompt.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Name of the prompt.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the prompt.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    /**
     * Time at which the prompt was last updated.
     * 
     */
    @Import(name="updatedAt")
    private @Nullable Output<String> updatedAt;

    /**
     * @return Time at which the prompt was last updated.
     * 
     */
    public Optional<Output<String>> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    /**
     * A list of objects, each containing details about a variant of the prompt. See Variant for more information.
     * 
     */
    @Import(name="variants")
    private @Nullable Output<List<AgentPromptVariantArgs>> variants;

    /**
     * @return A list of objects, each containing details about a variant of the prompt. See Variant for more information.
     * 
     */
    public Optional<Output<List<AgentPromptVariantArgs>>> variants() {
        return Optional.ofNullable(this.variants);
    }

    /**
     * Version of the prompt. When you create a prompt, the version created is the `DRAFT` version.
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return Version of the prompt. When you create a prompt, the version created is the `DRAFT` version.
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private AgentPromptState() {}

    private AgentPromptState(AgentPromptState $) {
        this.arn = $.arn;
        this.createdAt = $.createdAt;
        this.customerEncryptionKeyArn = $.customerEncryptionKeyArn;
        this.defaultVariant = $.defaultVariant;
        this.description = $.description;
        this.name = $.name;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.updatedAt = $.updatedAt;
        this.variants = $.variants;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentPromptState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentPromptState $;

        public Builder() {
            $ = new AgentPromptState();
        }

        public Builder(AgentPromptState defaults) {
            $ = new AgentPromptState(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn Amazon Resource Name (ARN) of the prompt.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn Amazon Resource Name (ARN) of the prompt.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param createdAt Time at which the prompt was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt Time at which the prompt was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param customerEncryptionKeyArn Amazon Resource Name (ARN) of the KMS key that you encrypted the prompt with.
         * 
         * @return builder
         * 
         */
        public Builder customerEncryptionKeyArn(@Nullable Output<String> customerEncryptionKeyArn) {
            $.customerEncryptionKeyArn = customerEncryptionKeyArn;
            return this;
        }

        /**
         * @param customerEncryptionKeyArn Amazon Resource Name (ARN) of the KMS key that you encrypted the prompt with.
         * 
         * @return builder
         * 
         */
        public Builder customerEncryptionKeyArn(String customerEncryptionKeyArn) {
            return customerEncryptionKeyArn(Output.of(customerEncryptionKeyArn));
        }

        /**
         * @param defaultVariant Name of the default variant for your prompt.
         * 
         * @return builder
         * 
         */
        public Builder defaultVariant(@Nullable Output<String> defaultVariant) {
            $.defaultVariant = defaultVariant;
            return this;
        }

        /**
         * @param defaultVariant Name of the default variant for your prompt.
         * 
         * @return builder
         * 
         */
        public Builder defaultVariant(String defaultVariant) {
            return defaultVariant(Output.of(defaultVariant));
        }

        /**
         * @param description Description of the prompt.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the prompt.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name Name of the prompt.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the prompt.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param tags Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        /**
         * @param updatedAt Time at which the prompt was last updated.
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(@Nullable Output<String> updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        /**
         * @param updatedAt Time at which the prompt was last updated.
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(String updatedAt) {
            return updatedAt(Output.of(updatedAt));
        }

        /**
         * @param variants A list of objects, each containing details about a variant of the prompt. See Variant for more information.
         * 
         * @return builder
         * 
         */
        public Builder variants(@Nullable Output<List<AgentPromptVariantArgs>> variants) {
            $.variants = variants;
            return this;
        }

        /**
         * @param variants A list of objects, each containing details about a variant of the prompt. See Variant for more information.
         * 
         * @return builder
         * 
         */
        public Builder variants(List<AgentPromptVariantArgs> variants) {
            return variants(Output.of(variants));
        }

        /**
         * @param variants A list of objects, each containing details about a variant of the prompt. See Variant for more information.
         * 
         * @return builder
         * 
         */
        public Builder variants(AgentPromptVariantArgs... variants) {
            return variants(List.of(variants));
        }

        /**
         * @param version Version of the prompt. When you create a prompt, the version created is the `DRAFT` version.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Version of the prompt. When you create a prompt, the version created is the `DRAFT` version.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public AgentPromptState build() {
            return $;
        }
    }

}
