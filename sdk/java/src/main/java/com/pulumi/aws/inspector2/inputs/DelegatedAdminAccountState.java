// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.inspector2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DelegatedAdminAccountState extends com.pulumi.resources.ResourceArgs {

    public static final DelegatedAdminAccountState Empty = new DelegatedAdminAccountState();

    /**
     * Account to enable as delegated admin account.
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return Account to enable as delegated admin account.
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * Status of this delegated admin account.
     * 
     */
    @Import(name="relationshipStatus")
    private @Nullable Output<String> relationshipStatus;

    /**
     * @return Status of this delegated admin account.
     * 
     */
    public Optional<Output<String>> relationshipStatus() {
        return Optional.ofNullable(this.relationshipStatus);
    }

    private DelegatedAdminAccountState() {}

    private DelegatedAdminAccountState(DelegatedAdminAccountState $) {
        this.accountId = $.accountId;
        this.relationshipStatus = $.relationshipStatus;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DelegatedAdminAccountState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DelegatedAdminAccountState $;

        public Builder() {
            $ = new DelegatedAdminAccountState();
        }

        public Builder(DelegatedAdminAccountState defaults) {
            $ = new DelegatedAdminAccountState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Account to enable as delegated admin account.
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Account to enable as delegated admin account.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param relationshipStatus Status of this delegated admin account.
         * 
         * @return builder
         * 
         */
        public Builder relationshipStatus(@Nullable Output<String> relationshipStatus) {
            $.relationshipStatus = relationshipStatus;
            return this;
        }

        /**
         * @param relationshipStatus Status of this delegated admin account.
         * 
         * @return builder
         * 
         */
        public Builder relationshipStatus(String relationshipStatus) {
            return relationshipStatus(Output.of(relationshipStatus));
        }

        public DelegatedAdminAccountState build() {
            return $;
        }
    }

}
