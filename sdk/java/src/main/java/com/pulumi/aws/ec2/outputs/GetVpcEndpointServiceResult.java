// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.outputs;

import com.pulumi.aws.ec2.outputs.GetVpcEndpointServiceFilter;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVpcEndpointServiceResult {
    /**
     * @return Whether or not VPC endpoint connection requests to the service must be accepted by the service owner - `true` or `false`.
     * 
     */
    private @Nullable Boolean acceptanceRequired;
    /**
     * @return ARN of the VPC endpoint service.
     * 
     */
    private @Nullable String arn;
    /**
     * @return Availability Zones in which the service is available.
     * 
     */
    private @Nullable List<String> availabilityZones;
    /**
     * @return The DNS names for the service.
     * 
     */
    private @Nullable List<String> baseEndpointDnsNames;
    private @Nullable List<GetVpcEndpointServiceFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return Whether or not the service manages its VPC endpoints - `true` or `false`.
     * 
     */
    private @Nullable Boolean managesVpcEndpoints;
    /**
     * @return AWS account ID of the service owner or `amazon`.
     * 
     */
    private @Nullable String owner;
    /**
     * @return Private DNS name for the service.
     * 
     */
    private @Nullable String privateDnsName;
    private @Nullable String service;
    /**
     * @return ID of the endpoint service.
     * 
     */
    private @Nullable String serviceId;
    private @Nullable String serviceName;
    private @Nullable String serviceType;
    /**
     * @return The supported IP address types.
     * 
     */
    private @Nullable List<String> supportedIpAddressTypes;
    /**
     * @return Map of tags assigned to the resource.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Whether or not the service supports endpoint policies - `true` or `false`.
     * 
     */
    private @Nullable Boolean vpcEndpointPolicySupported;

    private GetVpcEndpointServiceResult() {}
    /**
     * @return Whether or not VPC endpoint connection requests to the service must be accepted by the service owner - `true` or `false`.
     * 
     */
    public Optional<Boolean> acceptanceRequired() {
        return Optional.ofNullable(this.acceptanceRequired);
    }
    /**
     * @return ARN of the VPC endpoint service.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return Availability Zones in which the service is available.
     * 
     */
    public List<String> availabilityZones() {
        return this.availabilityZones == null ? List.of() : this.availabilityZones;
    }
    /**
     * @return The DNS names for the service.
     * 
     */
    public List<String> baseEndpointDnsNames() {
        return this.baseEndpointDnsNames == null ? List.of() : this.baseEndpointDnsNames;
    }
    public List<GetVpcEndpointServiceFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Whether or not the service manages its VPC endpoints - `true` or `false`.
     * 
     */
    public Optional<Boolean> managesVpcEndpoints() {
        return Optional.ofNullable(this.managesVpcEndpoints);
    }
    /**
     * @return AWS account ID of the service owner or `amazon`.
     * 
     */
    public Optional<String> owner() {
        return Optional.ofNullable(this.owner);
    }
    /**
     * @return Private DNS name for the service.
     * 
     */
    public Optional<String> privateDnsName() {
        return Optional.ofNullable(this.privateDnsName);
    }
    public Optional<String> service() {
        return Optional.ofNullable(this.service);
    }
    /**
     * @return ID of the endpoint service.
     * 
     */
    public Optional<String> serviceId() {
        return Optional.ofNullable(this.serviceId);
    }
    public Optional<String> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }
    public Optional<String> serviceType() {
        return Optional.ofNullable(this.serviceType);
    }
    /**
     * @return The supported IP address types.
     * 
     */
    public List<String> supportedIpAddressTypes() {
        return this.supportedIpAddressTypes == null ? List.of() : this.supportedIpAddressTypes;
    }
    /**
     * @return Map of tags assigned to the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Whether or not the service supports endpoint policies - `true` or `false`.
     * 
     */
    public Optional<Boolean> vpcEndpointPolicySupported() {
        return Optional.ofNullable(this.vpcEndpointPolicySupported);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVpcEndpointServiceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean acceptanceRequired;
        private @Nullable String arn;
        private @Nullable List<String> availabilityZones;
        private @Nullable List<String> baseEndpointDnsNames;
        private @Nullable List<GetVpcEndpointServiceFilter> filters;
        private @Nullable String id;
        private @Nullable Boolean managesVpcEndpoints;
        private @Nullable String owner;
        private @Nullable String privateDnsName;
        private @Nullable String service;
        private @Nullable String serviceId;
        private @Nullable String serviceName;
        private @Nullable String serviceType;
        private @Nullable List<String> supportedIpAddressTypes;
        private @Nullable Map<String,String> tags;
        private @Nullable Boolean vpcEndpointPolicySupported;
        public Builder() {}
        public Builder(GetVpcEndpointServiceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acceptanceRequired = defaults.acceptanceRequired;
    	      this.arn = defaults.arn;
    	      this.availabilityZones = defaults.availabilityZones;
    	      this.baseEndpointDnsNames = defaults.baseEndpointDnsNames;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.managesVpcEndpoints = defaults.managesVpcEndpoints;
    	      this.owner = defaults.owner;
    	      this.privateDnsName = defaults.privateDnsName;
    	      this.service = defaults.service;
    	      this.serviceId = defaults.serviceId;
    	      this.serviceName = defaults.serviceName;
    	      this.serviceType = defaults.serviceType;
    	      this.supportedIpAddressTypes = defaults.supportedIpAddressTypes;
    	      this.tags = defaults.tags;
    	      this.vpcEndpointPolicySupported = defaults.vpcEndpointPolicySupported;
        }

        @CustomType.Setter
        public Builder acceptanceRequired(@Nullable Boolean acceptanceRequired) {
            this.acceptanceRequired = acceptanceRequired;
            return this;
        }
        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder availabilityZones(@Nullable List<String> availabilityZones) {
            this.availabilityZones = availabilityZones;
            return this;
        }
        public Builder availabilityZones(String... availabilityZones) {
            return availabilityZones(List.of(availabilityZones));
        }
        @CustomType.Setter
        public Builder baseEndpointDnsNames(@Nullable List<String> baseEndpointDnsNames) {
            this.baseEndpointDnsNames = baseEndpointDnsNames;
            return this;
        }
        public Builder baseEndpointDnsNames(String... baseEndpointDnsNames) {
            return baseEndpointDnsNames(List.of(baseEndpointDnsNames));
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetVpcEndpointServiceFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetVpcEndpointServiceFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder managesVpcEndpoints(@Nullable Boolean managesVpcEndpoints) {
            this.managesVpcEndpoints = managesVpcEndpoints;
            return this;
        }
        @CustomType.Setter
        public Builder owner(@Nullable String owner) {
            this.owner = owner;
            return this;
        }
        @CustomType.Setter
        public Builder privateDnsName(@Nullable String privateDnsName) {
            this.privateDnsName = privateDnsName;
            return this;
        }
        @CustomType.Setter
        public Builder service(@Nullable String service) {
            this.service = service;
            return this;
        }
        @CustomType.Setter
        public Builder serviceId(@Nullable String serviceId) {
            this.serviceId = serviceId;
            return this;
        }
        @CustomType.Setter
        public Builder serviceName(@Nullable String serviceName) {
            this.serviceName = serviceName;
            return this;
        }
        @CustomType.Setter
        public Builder serviceType(@Nullable String serviceType) {
            this.serviceType = serviceType;
            return this;
        }
        @CustomType.Setter
        public Builder supportedIpAddressTypes(@Nullable List<String> supportedIpAddressTypes) {
            this.supportedIpAddressTypes = supportedIpAddressTypes;
            return this;
        }
        public Builder supportedIpAddressTypes(String... supportedIpAddressTypes) {
            return supportedIpAddressTypes(List.of(supportedIpAddressTypes));
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder vpcEndpointPolicySupported(@Nullable Boolean vpcEndpointPolicySupported) {
            this.vpcEndpointPolicySupported = vpcEndpointPolicySupported;
            return this;
        }
        public GetVpcEndpointServiceResult build() {
            final var o = new GetVpcEndpointServiceResult();
            o.acceptanceRequired = acceptanceRequired;
            o.arn = arn;
            o.availabilityZones = availabilityZones;
            o.baseEndpointDnsNames = baseEndpointDnsNames;
            o.filters = filters;
            o.id = id;
            o.managesVpcEndpoints = managesVpcEndpoints;
            o.owner = owner;
            o.privateDnsName = privateDnsName;
            o.service = service;
            o.serviceId = serviceId;
            o.serviceName = serviceName;
            o.serviceType = serviceType;
            o.supportedIpAddressTypes = supportedIpAddressTypes;
            o.tags = tags;
            o.vpcEndpointPolicySupported = vpcEndpointPolicySupported;
            return o;
        }
    }
}
