// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2transitgateway.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetRouteTableRoutesRoute {
    /**
     * @return The CIDR used for route destination matches.
     * 
     */
    private String destinationCidrBlock;
    /**
     * @return The ID of the prefix list used for destination matches.
     * 
     */
    private String prefixListId;
    /**
     * @return The current state of the route, can be `active`, `deleted`, `pending`, `blackhole`, `deleting`.
     * 
     */
    private String state;
    /**
     * @return The id of the transit gateway route table announcement, most of the time it is an empty string.
     * 
     */
    private String transitGatewayRouteTableAnnouncementId;
    /**
     * @return The type of the route, can be `propagated` or `static`.
     * 
     */
    private String type;

    private GetRouteTableRoutesRoute() {}
    /**
     * @return The CIDR used for route destination matches.
     * 
     */
    public String destinationCidrBlock() {
        return this.destinationCidrBlock;
    }
    /**
     * @return The ID of the prefix list used for destination matches.
     * 
     */
    public String prefixListId() {
        return this.prefixListId;
    }
    /**
     * @return The current state of the route, can be `active`, `deleted`, `pending`, `blackhole`, `deleting`.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The id of the transit gateway route table announcement, most of the time it is an empty string.
     * 
     */
    public String transitGatewayRouteTableAnnouncementId() {
        return this.transitGatewayRouteTableAnnouncementId;
    }
    /**
     * @return The type of the route, can be `propagated` or `static`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRouteTableRoutesRoute defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String destinationCidrBlock;
        private String prefixListId;
        private String state;
        private String transitGatewayRouteTableAnnouncementId;
        private String type;
        public Builder() {}
        public Builder(GetRouteTableRoutesRoute defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.destinationCidrBlock = defaults.destinationCidrBlock;
    	      this.prefixListId = defaults.prefixListId;
    	      this.state = defaults.state;
    	      this.transitGatewayRouteTableAnnouncementId = defaults.transitGatewayRouteTableAnnouncementId;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder destinationCidrBlock(String destinationCidrBlock) {
            this.destinationCidrBlock = Objects.requireNonNull(destinationCidrBlock);
            return this;
        }
        @CustomType.Setter
        public Builder prefixListId(String prefixListId) {
            this.prefixListId = Objects.requireNonNull(prefixListId);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder transitGatewayRouteTableAnnouncementId(String transitGatewayRouteTableAnnouncementId) {
            this.transitGatewayRouteTableAnnouncementId = Objects.requireNonNull(transitGatewayRouteTableAnnouncementId);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetRouteTableRoutesRoute build() {
            final var _resultValue = new GetRouteTableRoutesRoute();
            _resultValue.destinationCidrBlock = destinationCidrBlock;
            _resultValue.prefixListId = prefixListId;
            _resultValue.state = state;
            _resultValue.transitGatewayRouteTableAnnouncementId = transitGatewayRouteTableAnnouncementId;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
