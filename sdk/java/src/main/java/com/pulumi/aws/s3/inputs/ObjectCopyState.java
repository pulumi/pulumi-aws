// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3.inputs;

import com.pulumi.aws.s3.inputs.ObjectCopyGrantArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ObjectCopyState extends com.pulumi.resources.ResourceArgs {

    public static final ObjectCopyState Empty = new ObjectCopyState();

    @Import(name="acl")
    private @Nullable Output<String> acl;

    public Optional<Output<String>> acl() {
        return Optional.ofNullable(this.acl);
    }

    @Import(name="bucket")
    private @Nullable Output<String> bucket;

    public Optional<Output<String>> bucket() {
        return Optional.ofNullable(this.bucket);
    }

    @Import(name="bucketKeyEnabled")
    private @Nullable Output<Boolean> bucketKeyEnabled;

    public Optional<Output<Boolean>> bucketKeyEnabled() {
        return Optional.ofNullable(this.bucketKeyEnabled);
    }

    @Import(name="cacheControl")
    private @Nullable Output<String> cacheControl;

    public Optional<Output<String>> cacheControl() {
        return Optional.ofNullable(this.cacheControl);
    }

    @Import(name="contentDisposition")
    private @Nullable Output<String> contentDisposition;

    public Optional<Output<String>> contentDisposition() {
        return Optional.ofNullable(this.contentDisposition);
    }

    @Import(name="contentEncoding")
    private @Nullable Output<String> contentEncoding;

    public Optional<Output<String>> contentEncoding() {
        return Optional.ofNullable(this.contentEncoding);
    }

    @Import(name="contentLanguage")
    private @Nullable Output<String> contentLanguage;

    public Optional<Output<String>> contentLanguage() {
        return Optional.ofNullable(this.contentLanguage);
    }

    @Import(name="contentType")
    private @Nullable Output<String> contentType;

    public Optional<Output<String>> contentType() {
        return Optional.ofNullable(this.contentType);
    }

    @Import(name="copyIfMatch")
    private @Nullable Output<String> copyIfMatch;

    public Optional<Output<String>> copyIfMatch() {
        return Optional.ofNullable(this.copyIfMatch);
    }

    @Import(name="copyIfModifiedSince")
    private @Nullable Output<String> copyIfModifiedSince;

    public Optional<Output<String>> copyIfModifiedSince() {
        return Optional.ofNullable(this.copyIfModifiedSince);
    }

    @Import(name="copyIfNoneMatch")
    private @Nullable Output<String> copyIfNoneMatch;

    public Optional<Output<String>> copyIfNoneMatch() {
        return Optional.ofNullable(this.copyIfNoneMatch);
    }

    @Import(name="copyIfUnmodifiedSince")
    private @Nullable Output<String> copyIfUnmodifiedSince;

    public Optional<Output<String>> copyIfUnmodifiedSince() {
        return Optional.ofNullable(this.copyIfUnmodifiedSince);
    }

    @Import(name="customerAlgorithm")
    private @Nullable Output<String> customerAlgorithm;

    public Optional<Output<String>> customerAlgorithm() {
        return Optional.ofNullable(this.customerAlgorithm);
    }

    @Import(name="customerKey")
    private @Nullable Output<String> customerKey;

    public Optional<Output<String>> customerKey() {
        return Optional.ofNullable(this.customerKey);
    }

    @Import(name="customerKeyMd5")
    private @Nullable Output<String> customerKeyMd5;

    public Optional<Output<String>> customerKeyMd5() {
        return Optional.ofNullable(this.customerKeyMd5);
    }

    @Import(name="etag")
    private @Nullable Output<String> etag;

    public Optional<Output<String>> etag() {
        return Optional.ofNullable(this.etag);
    }

    @Import(name="expectedBucketOwner")
    private @Nullable Output<String> expectedBucketOwner;

    public Optional<Output<String>> expectedBucketOwner() {
        return Optional.ofNullable(this.expectedBucketOwner);
    }

    @Import(name="expectedSourceBucketOwner")
    private @Nullable Output<String> expectedSourceBucketOwner;

    public Optional<Output<String>> expectedSourceBucketOwner() {
        return Optional.ofNullable(this.expectedSourceBucketOwner);
    }

    @Import(name="expiration")
    private @Nullable Output<String> expiration;

    public Optional<Output<String>> expiration() {
        return Optional.ofNullable(this.expiration);
    }

    @Import(name="expires")
    private @Nullable Output<String> expires;

    public Optional<Output<String>> expires() {
        return Optional.ofNullable(this.expires);
    }

    @Import(name="forceDestroy")
    private @Nullable Output<Boolean> forceDestroy;

    public Optional<Output<Boolean>> forceDestroy() {
        return Optional.ofNullable(this.forceDestroy);
    }

    @Import(name="grants")
    private @Nullable Output<List<ObjectCopyGrantArgs>> grants;

    public Optional<Output<List<ObjectCopyGrantArgs>>> grants() {
        return Optional.ofNullable(this.grants);
    }

    @Import(name="key")
    private @Nullable Output<String> key;

    public Optional<Output<String>> key() {
        return Optional.ofNullable(this.key);
    }

    @Import(name="kmsEncryptionContext")
    private @Nullable Output<String> kmsEncryptionContext;

    public Optional<Output<String>> kmsEncryptionContext() {
        return Optional.ofNullable(this.kmsEncryptionContext);
    }

    @Import(name="kmsKeyId")
    private @Nullable Output<String> kmsKeyId;

    public Optional<Output<String>> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }

    @Import(name="lastModified")
    private @Nullable Output<String> lastModified;

    public Optional<Output<String>> lastModified() {
        return Optional.ofNullable(this.lastModified);
    }

    @Import(name="metadata")
    private @Nullable Output<Map<String,String>> metadata;

    public Optional<Output<Map<String,String>>> metadata() {
        return Optional.ofNullable(this.metadata);
    }

    @Import(name="metadataDirective")
    private @Nullable Output<String> metadataDirective;

    public Optional<Output<String>> metadataDirective() {
        return Optional.ofNullable(this.metadataDirective);
    }

    @Import(name="objectLockLegalHoldStatus")
    private @Nullable Output<String> objectLockLegalHoldStatus;

    public Optional<Output<String>> objectLockLegalHoldStatus() {
        return Optional.ofNullable(this.objectLockLegalHoldStatus);
    }

    @Import(name="objectLockMode")
    private @Nullable Output<String> objectLockMode;

    public Optional<Output<String>> objectLockMode() {
        return Optional.ofNullable(this.objectLockMode);
    }

    @Import(name="objectLockRetainUntilDate")
    private @Nullable Output<String> objectLockRetainUntilDate;

    public Optional<Output<String>> objectLockRetainUntilDate() {
        return Optional.ofNullable(this.objectLockRetainUntilDate);
    }

    @Import(name="requestCharged")
    private @Nullable Output<Boolean> requestCharged;

    public Optional<Output<Boolean>> requestCharged() {
        return Optional.ofNullable(this.requestCharged);
    }

    @Import(name="requestPayer")
    private @Nullable Output<String> requestPayer;

    public Optional<Output<String>> requestPayer() {
        return Optional.ofNullable(this.requestPayer);
    }

    @Import(name="serverSideEncryption")
    private @Nullable Output<String> serverSideEncryption;

    public Optional<Output<String>> serverSideEncryption() {
        return Optional.ofNullable(this.serverSideEncryption);
    }

    @Import(name="source")
    private @Nullable Output<String> source;

    public Optional<Output<String>> source() {
        return Optional.ofNullable(this.source);
    }

    @Import(name="sourceCustomerAlgorithm")
    private @Nullable Output<String> sourceCustomerAlgorithm;

    public Optional<Output<String>> sourceCustomerAlgorithm() {
        return Optional.ofNullable(this.sourceCustomerAlgorithm);
    }

    @Import(name="sourceCustomerKey")
    private @Nullable Output<String> sourceCustomerKey;

    public Optional<Output<String>> sourceCustomerKey() {
        return Optional.ofNullable(this.sourceCustomerKey);
    }

    @Import(name="sourceCustomerKeyMd5")
    private @Nullable Output<String> sourceCustomerKeyMd5;

    public Optional<Output<String>> sourceCustomerKeyMd5() {
        return Optional.ofNullable(this.sourceCustomerKeyMd5);
    }

    @Import(name="sourceVersionId")
    private @Nullable Output<String> sourceVersionId;

    public Optional<Output<String>> sourceVersionId() {
        return Optional.ofNullable(this.sourceVersionId);
    }

    @Import(name="storageClass")
    private @Nullable Output<String> storageClass;

    public Optional<Output<String>> storageClass() {
        return Optional.ofNullable(this.storageClass);
    }

    @Import(name="taggingDirective")
    private @Nullable Output<String> taggingDirective;

    public Optional<Output<String>> taggingDirective() {
        return Optional.ofNullable(this.taggingDirective);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="versionId")
    private @Nullable Output<String> versionId;

    public Optional<Output<String>> versionId() {
        return Optional.ofNullable(this.versionId);
    }

    @Import(name="websiteRedirect")
    private @Nullable Output<String> websiteRedirect;

    public Optional<Output<String>> websiteRedirect() {
        return Optional.ofNullable(this.websiteRedirect);
    }

    private ObjectCopyState() {}

    private ObjectCopyState(ObjectCopyState $) {
        this.acl = $.acl;
        this.bucket = $.bucket;
        this.bucketKeyEnabled = $.bucketKeyEnabled;
        this.cacheControl = $.cacheControl;
        this.contentDisposition = $.contentDisposition;
        this.contentEncoding = $.contentEncoding;
        this.contentLanguage = $.contentLanguage;
        this.contentType = $.contentType;
        this.copyIfMatch = $.copyIfMatch;
        this.copyIfModifiedSince = $.copyIfModifiedSince;
        this.copyIfNoneMatch = $.copyIfNoneMatch;
        this.copyIfUnmodifiedSince = $.copyIfUnmodifiedSince;
        this.customerAlgorithm = $.customerAlgorithm;
        this.customerKey = $.customerKey;
        this.customerKeyMd5 = $.customerKeyMd5;
        this.etag = $.etag;
        this.expectedBucketOwner = $.expectedBucketOwner;
        this.expectedSourceBucketOwner = $.expectedSourceBucketOwner;
        this.expiration = $.expiration;
        this.expires = $.expires;
        this.forceDestroy = $.forceDestroy;
        this.grants = $.grants;
        this.key = $.key;
        this.kmsEncryptionContext = $.kmsEncryptionContext;
        this.kmsKeyId = $.kmsKeyId;
        this.lastModified = $.lastModified;
        this.metadata = $.metadata;
        this.metadataDirective = $.metadataDirective;
        this.objectLockLegalHoldStatus = $.objectLockLegalHoldStatus;
        this.objectLockMode = $.objectLockMode;
        this.objectLockRetainUntilDate = $.objectLockRetainUntilDate;
        this.requestCharged = $.requestCharged;
        this.requestPayer = $.requestPayer;
        this.serverSideEncryption = $.serverSideEncryption;
        this.source = $.source;
        this.sourceCustomerAlgorithm = $.sourceCustomerAlgorithm;
        this.sourceCustomerKey = $.sourceCustomerKey;
        this.sourceCustomerKeyMd5 = $.sourceCustomerKeyMd5;
        this.sourceVersionId = $.sourceVersionId;
        this.storageClass = $.storageClass;
        this.taggingDirective = $.taggingDirective;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.versionId = $.versionId;
        this.websiteRedirect = $.websiteRedirect;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ObjectCopyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ObjectCopyState $;

        public Builder() {
            $ = new ObjectCopyState();
        }

        public Builder(ObjectCopyState defaults) {
            $ = new ObjectCopyState(Objects.requireNonNull(defaults));
        }

        public Builder acl(@Nullable Output<String> acl) {
            $.acl = acl;
            return this;
        }

        public Builder acl(String acl) {
            return acl(Output.of(acl));
        }

        public Builder bucket(@Nullable Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        public Builder bucketKeyEnabled(@Nullable Output<Boolean> bucketKeyEnabled) {
            $.bucketKeyEnabled = bucketKeyEnabled;
            return this;
        }

        public Builder bucketKeyEnabled(Boolean bucketKeyEnabled) {
            return bucketKeyEnabled(Output.of(bucketKeyEnabled));
        }

        public Builder cacheControl(@Nullable Output<String> cacheControl) {
            $.cacheControl = cacheControl;
            return this;
        }

        public Builder cacheControl(String cacheControl) {
            return cacheControl(Output.of(cacheControl));
        }

        public Builder contentDisposition(@Nullable Output<String> contentDisposition) {
            $.contentDisposition = contentDisposition;
            return this;
        }

        public Builder contentDisposition(String contentDisposition) {
            return contentDisposition(Output.of(contentDisposition));
        }

        public Builder contentEncoding(@Nullable Output<String> contentEncoding) {
            $.contentEncoding = contentEncoding;
            return this;
        }

        public Builder contentEncoding(String contentEncoding) {
            return contentEncoding(Output.of(contentEncoding));
        }

        public Builder contentLanguage(@Nullable Output<String> contentLanguage) {
            $.contentLanguage = contentLanguage;
            return this;
        }

        public Builder contentLanguage(String contentLanguage) {
            return contentLanguage(Output.of(contentLanguage));
        }

        public Builder contentType(@Nullable Output<String> contentType) {
            $.contentType = contentType;
            return this;
        }

        public Builder contentType(String contentType) {
            return contentType(Output.of(contentType));
        }

        public Builder copyIfMatch(@Nullable Output<String> copyIfMatch) {
            $.copyIfMatch = copyIfMatch;
            return this;
        }

        public Builder copyIfMatch(String copyIfMatch) {
            return copyIfMatch(Output.of(copyIfMatch));
        }

        public Builder copyIfModifiedSince(@Nullable Output<String> copyIfModifiedSince) {
            $.copyIfModifiedSince = copyIfModifiedSince;
            return this;
        }

        public Builder copyIfModifiedSince(String copyIfModifiedSince) {
            return copyIfModifiedSince(Output.of(copyIfModifiedSince));
        }

        public Builder copyIfNoneMatch(@Nullable Output<String> copyIfNoneMatch) {
            $.copyIfNoneMatch = copyIfNoneMatch;
            return this;
        }

        public Builder copyIfNoneMatch(String copyIfNoneMatch) {
            return copyIfNoneMatch(Output.of(copyIfNoneMatch));
        }

        public Builder copyIfUnmodifiedSince(@Nullable Output<String> copyIfUnmodifiedSince) {
            $.copyIfUnmodifiedSince = copyIfUnmodifiedSince;
            return this;
        }

        public Builder copyIfUnmodifiedSince(String copyIfUnmodifiedSince) {
            return copyIfUnmodifiedSince(Output.of(copyIfUnmodifiedSince));
        }

        public Builder customerAlgorithm(@Nullable Output<String> customerAlgorithm) {
            $.customerAlgorithm = customerAlgorithm;
            return this;
        }

        public Builder customerAlgorithm(String customerAlgorithm) {
            return customerAlgorithm(Output.of(customerAlgorithm));
        }

        public Builder customerKey(@Nullable Output<String> customerKey) {
            $.customerKey = customerKey;
            return this;
        }

        public Builder customerKey(String customerKey) {
            return customerKey(Output.of(customerKey));
        }

        public Builder customerKeyMd5(@Nullable Output<String> customerKeyMd5) {
            $.customerKeyMd5 = customerKeyMd5;
            return this;
        }

        public Builder customerKeyMd5(String customerKeyMd5) {
            return customerKeyMd5(Output.of(customerKeyMd5));
        }

        public Builder etag(@Nullable Output<String> etag) {
            $.etag = etag;
            return this;
        }

        public Builder etag(String etag) {
            return etag(Output.of(etag));
        }

        public Builder expectedBucketOwner(@Nullable Output<String> expectedBucketOwner) {
            $.expectedBucketOwner = expectedBucketOwner;
            return this;
        }

        public Builder expectedBucketOwner(String expectedBucketOwner) {
            return expectedBucketOwner(Output.of(expectedBucketOwner));
        }

        public Builder expectedSourceBucketOwner(@Nullable Output<String> expectedSourceBucketOwner) {
            $.expectedSourceBucketOwner = expectedSourceBucketOwner;
            return this;
        }

        public Builder expectedSourceBucketOwner(String expectedSourceBucketOwner) {
            return expectedSourceBucketOwner(Output.of(expectedSourceBucketOwner));
        }

        public Builder expiration(@Nullable Output<String> expiration) {
            $.expiration = expiration;
            return this;
        }

        public Builder expiration(String expiration) {
            return expiration(Output.of(expiration));
        }

        public Builder expires(@Nullable Output<String> expires) {
            $.expires = expires;
            return this;
        }

        public Builder expires(String expires) {
            return expires(Output.of(expires));
        }

        public Builder forceDestroy(@Nullable Output<Boolean> forceDestroy) {
            $.forceDestroy = forceDestroy;
            return this;
        }

        public Builder forceDestroy(Boolean forceDestroy) {
            return forceDestroy(Output.of(forceDestroy));
        }

        public Builder grants(@Nullable Output<List<ObjectCopyGrantArgs>> grants) {
            $.grants = grants;
            return this;
        }

        public Builder grants(List<ObjectCopyGrantArgs> grants) {
            return grants(Output.of(grants));
        }

        public Builder grants(ObjectCopyGrantArgs... grants) {
            return grants(List.of(grants));
        }

        public Builder key(@Nullable Output<String> key) {
            $.key = key;
            return this;
        }

        public Builder key(String key) {
            return key(Output.of(key));
        }

        public Builder kmsEncryptionContext(@Nullable Output<String> kmsEncryptionContext) {
            $.kmsEncryptionContext = kmsEncryptionContext;
            return this;
        }

        public Builder kmsEncryptionContext(String kmsEncryptionContext) {
            return kmsEncryptionContext(Output.of(kmsEncryptionContext));
        }

        public Builder kmsKeyId(@Nullable Output<String> kmsKeyId) {
            $.kmsKeyId = kmsKeyId;
            return this;
        }

        public Builder kmsKeyId(String kmsKeyId) {
            return kmsKeyId(Output.of(kmsKeyId));
        }

        public Builder lastModified(@Nullable Output<String> lastModified) {
            $.lastModified = lastModified;
            return this;
        }

        public Builder lastModified(String lastModified) {
            return lastModified(Output.of(lastModified));
        }

        public Builder metadata(@Nullable Output<Map<String,String>> metadata) {
            $.metadata = metadata;
            return this;
        }

        public Builder metadata(Map<String,String> metadata) {
            return metadata(Output.of(metadata));
        }

        public Builder metadataDirective(@Nullable Output<String> metadataDirective) {
            $.metadataDirective = metadataDirective;
            return this;
        }

        public Builder metadataDirective(String metadataDirective) {
            return metadataDirective(Output.of(metadataDirective));
        }

        public Builder objectLockLegalHoldStatus(@Nullable Output<String> objectLockLegalHoldStatus) {
            $.objectLockLegalHoldStatus = objectLockLegalHoldStatus;
            return this;
        }

        public Builder objectLockLegalHoldStatus(String objectLockLegalHoldStatus) {
            return objectLockLegalHoldStatus(Output.of(objectLockLegalHoldStatus));
        }

        public Builder objectLockMode(@Nullable Output<String> objectLockMode) {
            $.objectLockMode = objectLockMode;
            return this;
        }

        public Builder objectLockMode(String objectLockMode) {
            return objectLockMode(Output.of(objectLockMode));
        }

        public Builder objectLockRetainUntilDate(@Nullable Output<String> objectLockRetainUntilDate) {
            $.objectLockRetainUntilDate = objectLockRetainUntilDate;
            return this;
        }

        public Builder objectLockRetainUntilDate(String objectLockRetainUntilDate) {
            return objectLockRetainUntilDate(Output.of(objectLockRetainUntilDate));
        }

        public Builder requestCharged(@Nullable Output<Boolean> requestCharged) {
            $.requestCharged = requestCharged;
            return this;
        }

        public Builder requestCharged(Boolean requestCharged) {
            return requestCharged(Output.of(requestCharged));
        }

        public Builder requestPayer(@Nullable Output<String> requestPayer) {
            $.requestPayer = requestPayer;
            return this;
        }

        public Builder requestPayer(String requestPayer) {
            return requestPayer(Output.of(requestPayer));
        }

        public Builder serverSideEncryption(@Nullable Output<String> serverSideEncryption) {
            $.serverSideEncryption = serverSideEncryption;
            return this;
        }

        public Builder serverSideEncryption(String serverSideEncryption) {
            return serverSideEncryption(Output.of(serverSideEncryption));
        }

        public Builder source(@Nullable Output<String> source) {
            $.source = source;
            return this;
        }

        public Builder source(String source) {
            return source(Output.of(source));
        }

        public Builder sourceCustomerAlgorithm(@Nullable Output<String> sourceCustomerAlgorithm) {
            $.sourceCustomerAlgorithm = sourceCustomerAlgorithm;
            return this;
        }

        public Builder sourceCustomerAlgorithm(String sourceCustomerAlgorithm) {
            return sourceCustomerAlgorithm(Output.of(sourceCustomerAlgorithm));
        }

        public Builder sourceCustomerKey(@Nullable Output<String> sourceCustomerKey) {
            $.sourceCustomerKey = sourceCustomerKey;
            return this;
        }

        public Builder sourceCustomerKey(String sourceCustomerKey) {
            return sourceCustomerKey(Output.of(sourceCustomerKey));
        }

        public Builder sourceCustomerKeyMd5(@Nullable Output<String> sourceCustomerKeyMd5) {
            $.sourceCustomerKeyMd5 = sourceCustomerKeyMd5;
            return this;
        }

        public Builder sourceCustomerKeyMd5(String sourceCustomerKeyMd5) {
            return sourceCustomerKeyMd5(Output.of(sourceCustomerKeyMd5));
        }

        public Builder sourceVersionId(@Nullable Output<String> sourceVersionId) {
            $.sourceVersionId = sourceVersionId;
            return this;
        }

        public Builder sourceVersionId(String sourceVersionId) {
            return sourceVersionId(Output.of(sourceVersionId));
        }

        public Builder storageClass(@Nullable Output<String> storageClass) {
            $.storageClass = storageClass;
            return this;
        }

        public Builder storageClass(String storageClass) {
            return storageClass(Output.of(storageClass));
        }

        public Builder taggingDirective(@Nullable Output<String> taggingDirective) {
            $.taggingDirective = taggingDirective;
            return this;
        }

        public Builder taggingDirective(String taggingDirective) {
            return taggingDirective(Output.of(taggingDirective));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder versionId(@Nullable Output<String> versionId) {
            $.versionId = versionId;
            return this;
        }

        public Builder versionId(String versionId) {
            return versionId(Output.of(versionId));
        }

        public Builder websiteRedirect(@Nullable Output<String> websiteRedirect) {
            $.websiteRedirect = websiteRedirect;
            return this;
        }

        public Builder websiteRedirect(String websiteRedirect) {
            return websiteRedirect(Output.of(websiteRedirect));
        }

        public ObjectCopyState build() {
            return $;
        }
    }

}
