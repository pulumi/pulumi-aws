// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.budgets.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BudgetActionDefinitionIamActionDefinitionArgs extends com.pulumi.resources.ResourceArgs {

    public static final BudgetActionDefinitionIamActionDefinitionArgs Empty = new BudgetActionDefinitionIamActionDefinitionArgs();

    @Import(name="groups")
    private @Nullable Output<List<String>> groups;

    public Optional<Output<List<String>>> groups() {
        return Optional.ofNullable(this.groups);
    }

    @Import(name="policyArn", required=true)
    private Output<String> policyArn;

    public Output<String> policyArn() {
        return this.policyArn;
    }

    @Import(name="roles")
    private @Nullable Output<List<String>> roles;

    public Optional<Output<List<String>>> roles() {
        return Optional.ofNullable(this.roles);
    }

    @Import(name="users")
    private @Nullable Output<List<String>> users;

    public Optional<Output<List<String>>> users() {
        return Optional.ofNullable(this.users);
    }

    private BudgetActionDefinitionIamActionDefinitionArgs() {}

    private BudgetActionDefinitionIamActionDefinitionArgs(BudgetActionDefinitionIamActionDefinitionArgs $) {
        this.groups = $.groups;
        this.policyArn = $.policyArn;
        this.roles = $.roles;
        this.users = $.users;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BudgetActionDefinitionIamActionDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BudgetActionDefinitionIamActionDefinitionArgs $;

        public Builder() {
            $ = new BudgetActionDefinitionIamActionDefinitionArgs();
        }

        public Builder(BudgetActionDefinitionIamActionDefinitionArgs defaults) {
            $ = new BudgetActionDefinitionIamActionDefinitionArgs(Objects.requireNonNull(defaults));
        }

        public Builder groups(@Nullable Output<List<String>> groups) {
            $.groups = groups;
            return this;
        }

        public Builder groups(List<String> groups) {
            return groups(Output.of(groups));
        }

        public Builder groups(String... groups) {
            return groups(List.of(groups));
        }

        public Builder policyArn(Output<String> policyArn) {
            $.policyArn = policyArn;
            return this;
        }

        public Builder policyArn(String policyArn) {
            return policyArn(Output.of(policyArn));
        }

        public Builder roles(@Nullable Output<List<String>> roles) {
            $.roles = roles;
            return this;
        }

        public Builder roles(List<String> roles) {
            return roles(Output.of(roles));
        }

        public Builder roles(String... roles) {
            return roles(List.of(roles));
        }

        public Builder users(@Nullable Output<List<String>> users) {
            $.users = users;
            return this;
        }

        public Builder users(List<String> users) {
            return users(Output.of(users));
        }

        public Builder users(String... users) {
            return users(List.of(users));
        }

        public BudgetActionDefinitionIamActionDefinitionArgs build() {
            $.policyArn = Objects.requireNonNull($.policyArn, "expected parameter 'policyArn' to be non-null");
            return $;
        }
    }

}
