// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudwatch.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InternetMonitorHealthEventsConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final InternetMonitorHealthEventsConfigArgs Empty = new InternetMonitorHealthEventsConfigArgs();

    /**
     * The health event threshold percentage set for availability scores.
     * 
     */
    @Import(name="availabilityScoreThreshold")
    private @Nullable Output<Double> availabilityScoreThreshold;

    /**
     * @return The health event threshold percentage set for availability scores.
     * 
     */
    public Optional<Output<Double>> availabilityScoreThreshold() {
        return Optional.ofNullable(this.availabilityScoreThreshold);
    }

    /**
     * The health event threshold percentage set for performance scores.
     * 
     */
    @Import(name="performanceScoreThreshold")
    private @Nullable Output<Double> performanceScoreThreshold;

    /**
     * @return The health event threshold percentage set for performance scores.
     * 
     */
    public Optional<Output<Double>> performanceScoreThreshold() {
        return Optional.ofNullable(this.performanceScoreThreshold);
    }

    private InternetMonitorHealthEventsConfigArgs() {}

    private InternetMonitorHealthEventsConfigArgs(InternetMonitorHealthEventsConfigArgs $) {
        this.availabilityScoreThreshold = $.availabilityScoreThreshold;
        this.performanceScoreThreshold = $.performanceScoreThreshold;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InternetMonitorHealthEventsConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InternetMonitorHealthEventsConfigArgs $;

        public Builder() {
            $ = new InternetMonitorHealthEventsConfigArgs();
        }

        public Builder(InternetMonitorHealthEventsConfigArgs defaults) {
            $ = new InternetMonitorHealthEventsConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param availabilityScoreThreshold The health event threshold percentage set for availability scores.
         * 
         * @return builder
         * 
         */
        public Builder availabilityScoreThreshold(@Nullable Output<Double> availabilityScoreThreshold) {
            $.availabilityScoreThreshold = availabilityScoreThreshold;
            return this;
        }

        /**
         * @param availabilityScoreThreshold The health event threshold percentage set for availability scores.
         * 
         * @return builder
         * 
         */
        public Builder availabilityScoreThreshold(Double availabilityScoreThreshold) {
            return availabilityScoreThreshold(Output.of(availabilityScoreThreshold));
        }

        /**
         * @param performanceScoreThreshold The health event threshold percentage set for performance scores.
         * 
         * @return builder
         * 
         */
        public Builder performanceScoreThreshold(@Nullable Output<Double> performanceScoreThreshold) {
            $.performanceScoreThreshold = performanceScoreThreshold;
            return this;
        }

        /**
         * @param performanceScoreThreshold The health event threshold percentage set for performance scores.
         * 
         * @return builder
         * 
         */
        public Builder performanceScoreThreshold(Double performanceScoreThreshold) {
            return performanceScoreThreshold(Output.of(performanceScoreThreshold));
        }

        public InternetMonitorHealthEventsConfigArgs build() {
            return $;
        }
    }

}
