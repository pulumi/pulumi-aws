// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.macie2.inputs;

import com.pulumi.aws.macie2.inputs.ClassificationJobS3JobDefinitionBucketCriteriaExcludesAndTagCriterionTagValueArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClassificationJobS3JobDefinitionBucketCriteriaExcludesAndTagCriterionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClassificationJobS3JobDefinitionBucketCriteriaExcludesAndTagCriterionArgs Empty = new ClassificationJobS3JobDefinitionBucketCriteriaExcludesAndTagCriterionArgs();

    /**
     * The operator to use in the condition. Valid combination and values are available in the [AWS Documentation](https://docs.aws.amazon.com/macie/latest/APIReference/jobs.html#jobs-model-jobcomparator)
     * 
     */
    @Import(name="comparator")
    private @Nullable Output<String> comparator;

    /**
     * @return The operator to use in the condition. Valid combination and values are available in the [AWS Documentation](https://docs.aws.amazon.com/macie/latest/APIReference/jobs.html#jobs-model-jobcomparator)
     * 
     */
    public Optional<Output<String>> comparator() {
        return Optional.ofNullable(this.comparator);
    }

    /**
     * The  tag key and value pairs to use in the condition. One or more blocks are allowed. (documented below)
     * 
     */
    @Import(name="tagValues")
    private @Nullable Output<List<ClassificationJobS3JobDefinitionBucketCriteriaExcludesAndTagCriterionTagValueArgs>> tagValues;

    /**
     * @return The  tag key and value pairs to use in the condition. One or more blocks are allowed. (documented below)
     * 
     */
    public Optional<Output<List<ClassificationJobS3JobDefinitionBucketCriteriaExcludesAndTagCriterionTagValueArgs>>> tagValues() {
        return Optional.ofNullable(this.tagValues);
    }

    private ClassificationJobS3JobDefinitionBucketCriteriaExcludesAndTagCriterionArgs() {}

    private ClassificationJobS3JobDefinitionBucketCriteriaExcludesAndTagCriterionArgs(ClassificationJobS3JobDefinitionBucketCriteriaExcludesAndTagCriterionArgs $) {
        this.comparator = $.comparator;
        this.tagValues = $.tagValues;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClassificationJobS3JobDefinitionBucketCriteriaExcludesAndTagCriterionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClassificationJobS3JobDefinitionBucketCriteriaExcludesAndTagCriterionArgs $;

        public Builder() {
            $ = new ClassificationJobS3JobDefinitionBucketCriteriaExcludesAndTagCriterionArgs();
        }

        public Builder(ClassificationJobS3JobDefinitionBucketCriteriaExcludesAndTagCriterionArgs defaults) {
            $ = new ClassificationJobS3JobDefinitionBucketCriteriaExcludesAndTagCriterionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param comparator The operator to use in the condition. Valid combination and values are available in the [AWS Documentation](https://docs.aws.amazon.com/macie/latest/APIReference/jobs.html#jobs-model-jobcomparator)
         * 
         * @return builder
         * 
         */
        public Builder comparator(@Nullable Output<String> comparator) {
            $.comparator = comparator;
            return this;
        }

        /**
         * @param comparator The operator to use in the condition. Valid combination and values are available in the [AWS Documentation](https://docs.aws.amazon.com/macie/latest/APIReference/jobs.html#jobs-model-jobcomparator)
         * 
         * @return builder
         * 
         */
        public Builder comparator(String comparator) {
            return comparator(Output.of(comparator));
        }

        /**
         * @param tagValues The  tag key and value pairs to use in the condition. One or more blocks are allowed. (documented below)
         * 
         * @return builder
         * 
         */
        public Builder tagValues(@Nullable Output<List<ClassificationJobS3JobDefinitionBucketCriteriaExcludesAndTagCriterionTagValueArgs>> tagValues) {
            $.tagValues = tagValues;
            return this;
        }

        /**
         * @param tagValues The  tag key and value pairs to use in the condition. One or more blocks are allowed. (documented below)
         * 
         * @return builder
         * 
         */
        public Builder tagValues(List<ClassificationJobS3JobDefinitionBucketCriteriaExcludesAndTagCriterionTagValueArgs> tagValues) {
            return tagValues(Output.of(tagValues));
        }

        /**
         * @param tagValues The  tag key and value pairs to use in the condition. One or more blocks are allowed. (documented below)
         * 
         * @return builder
         * 
         */
        public Builder tagValues(ClassificationJobS3JobDefinitionBucketCriteriaExcludesAndTagCriterionTagValueArgs... tagValues) {
            return tagValues(List.of(tagValues));
        }

        public ClassificationJobS3JobDefinitionBucketCriteriaExcludesAndTagCriterionArgs build() {
            return $;
        }
    }

}
