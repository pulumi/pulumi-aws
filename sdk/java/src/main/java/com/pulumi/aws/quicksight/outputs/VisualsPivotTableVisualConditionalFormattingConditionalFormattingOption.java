// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.VisualsPivotTableVisualConditionalFormattingConditionalFormattingOptionCell;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VisualsPivotTableVisualConditionalFormattingConditionalFormattingOption {
    private @Nullable VisualsPivotTableVisualConditionalFormattingConditionalFormattingOptionCell cell;

    private VisualsPivotTableVisualConditionalFormattingConditionalFormattingOption() {}
    public Optional<VisualsPivotTableVisualConditionalFormattingConditionalFormattingOptionCell> cell() {
        return Optional.ofNullable(this.cell);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VisualsPivotTableVisualConditionalFormattingConditionalFormattingOption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable VisualsPivotTableVisualConditionalFormattingConditionalFormattingOptionCell cell;
        public Builder() {}
        public Builder(VisualsPivotTableVisualConditionalFormattingConditionalFormattingOption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cell = defaults.cell;
        }

        @CustomType.Setter
        public Builder cell(@Nullable VisualsPivotTableVisualConditionalFormattingConditionalFormattingOptionCell cell) {

            this.cell = cell;
            return this;
        }
        public VisualsPivotTableVisualConditionalFormattingConditionalFormattingOption build() {
            final var _resultValue = new VisualsPivotTableVisualConditionalFormattingConditionalFormattingOption();
            _resultValue.cell = cell;
            return _resultValue;
        }
    }
}
