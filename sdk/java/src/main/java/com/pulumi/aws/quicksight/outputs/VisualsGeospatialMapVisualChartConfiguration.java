// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.LegendOptions;
import com.pulumi.aws.quicksight.outputs.TooltipOptions;
import com.pulumi.aws.quicksight.outputs.VisualPalette;
import com.pulumi.aws.quicksight.outputs.VisualsGeospatialMapVisualChartConfigurationFieldWells;
import com.pulumi.aws.quicksight.outputs.VisualsGeospatialMapVisualChartConfigurationMapStyleOptions;
import com.pulumi.aws.quicksight.outputs.VisualsGeospatialMapVisualChartConfigurationPointStyleOptions;
import com.pulumi.aws.quicksight.outputs.VisualsGeospatialMapVisualChartConfigurationWindowOptions;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VisualsGeospatialMapVisualChartConfiguration {
    private @Nullable VisualsGeospatialMapVisualChartConfigurationFieldWells fieldWells;
    private @Nullable LegendOptions legend;
    private @Nullable VisualsGeospatialMapVisualChartConfigurationMapStyleOptions mapStyleOptions;
    private @Nullable VisualsGeospatialMapVisualChartConfigurationPointStyleOptions pointStyleOptions;
    private @Nullable TooltipOptions tooltip;
    private @Nullable VisualPalette visualPalette;
    private @Nullable VisualsGeospatialMapVisualChartConfigurationWindowOptions windowOptions;

    private VisualsGeospatialMapVisualChartConfiguration() {}
    public Optional<VisualsGeospatialMapVisualChartConfigurationFieldWells> fieldWells() {
        return Optional.ofNullable(this.fieldWells);
    }
    public Optional<LegendOptions> legend() {
        return Optional.ofNullable(this.legend);
    }
    public Optional<VisualsGeospatialMapVisualChartConfigurationMapStyleOptions> mapStyleOptions() {
        return Optional.ofNullable(this.mapStyleOptions);
    }
    public Optional<VisualsGeospatialMapVisualChartConfigurationPointStyleOptions> pointStyleOptions() {
        return Optional.ofNullable(this.pointStyleOptions);
    }
    public Optional<TooltipOptions> tooltip() {
        return Optional.ofNullable(this.tooltip);
    }
    public Optional<VisualPalette> visualPalette() {
        return Optional.ofNullable(this.visualPalette);
    }
    public Optional<VisualsGeospatialMapVisualChartConfigurationWindowOptions> windowOptions() {
        return Optional.ofNullable(this.windowOptions);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VisualsGeospatialMapVisualChartConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable VisualsGeospatialMapVisualChartConfigurationFieldWells fieldWells;
        private @Nullable LegendOptions legend;
        private @Nullable VisualsGeospatialMapVisualChartConfigurationMapStyleOptions mapStyleOptions;
        private @Nullable VisualsGeospatialMapVisualChartConfigurationPointStyleOptions pointStyleOptions;
        private @Nullable TooltipOptions tooltip;
        private @Nullable VisualPalette visualPalette;
        private @Nullable VisualsGeospatialMapVisualChartConfigurationWindowOptions windowOptions;
        public Builder() {}
        public Builder(VisualsGeospatialMapVisualChartConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fieldWells = defaults.fieldWells;
    	      this.legend = defaults.legend;
    	      this.mapStyleOptions = defaults.mapStyleOptions;
    	      this.pointStyleOptions = defaults.pointStyleOptions;
    	      this.tooltip = defaults.tooltip;
    	      this.visualPalette = defaults.visualPalette;
    	      this.windowOptions = defaults.windowOptions;
        }

        @CustomType.Setter
        public Builder fieldWells(@Nullable VisualsGeospatialMapVisualChartConfigurationFieldWells fieldWells) {

            this.fieldWells = fieldWells;
            return this;
        }
        @CustomType.Setter
        public Builder legend(@Nullable LegendOptions legend) {

            this.legend = legend;
            return this;
        }
        @CustomType.Setter
        public Builder mapStyleOptions(@Nullable VisualsGeospatialMapVisualChartConfigurationMapStyleOptions mapStyleOptions) {

            this.mapStyleOptions = mapStyleOptions;
            return this;
        }
        @CustomType.Setter
        public Builder pointStyleOptions(@Nullable VisualsGeospatialMapVisualChartConfigurationPointStyleOptions pointStyleOptions) {

            this.pointStyleOptions = pointStyleOptions;
            return this;
        }
        @CustomType.Setter
        public Builder tooltip(@Nullable TooltipOptions tooltip) {

            this.tooltip = tooltip;
            return this;
        }
        @CustomType.Setter
        public Builder visualPalette(@Nullable VisualPalette visualPalette) {

            this.visualPalette = visualPalette;
            return this;
        }
        @CustomType.Setter
        public Builder windowOptions(@Nullable VisualsGeospatialMapVisualChartConfigurationWindowOptions windowOptions) {

            this.windowOptions = windowOptions;
            return this;
        }
        public VisualsGeospatialMapVisualChartConfiguration build() {
            final var _resultValue = new VisualsGeospatialMapVisualChartConfiguration();
            _resultValue.fieldWells = fieldWells;
            _resultValue.legend = legend;
            _resultValue.mapStyleOptions = mapStyleOptions;
            _resultValue.pointStyleOptions = pointStyleOptions;
            _resultValue.tooltip = tooltip;
            _resultValue.visualPalette = visualPalette;
            _resultValue.windowOptions = windowOptions;
            return _resultValue;
        }
    }
}
