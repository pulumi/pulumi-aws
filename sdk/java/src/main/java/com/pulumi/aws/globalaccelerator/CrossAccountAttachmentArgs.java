// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.globalaccelerator;

import com.pulumi.aws.globalaccelerator.inputs.CrossAccountAttachmentResourceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CrossAccountAttachmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final CrossAccountAttachmentArgs Empty = new CrossAccountAttachmentArgs();

    /**
     * Name of the Cross Account Attachment.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the Cross Account Attachment.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * List of AWS account IDs that are allowed to associate resources with the accelerator.
     * 
     */
    @Import(name="principals")
    private @Nullable Output<List<String>> principals;

    /**
     * @return List of AWS account IDs that are allowed to associate resources with the accelerator.
     * 
     */
    public Optional<Output<List<String>>> principals() {
        return Optional.ofNullable(this.principals);
    }

    /**
     * List of resources to be associated with the accelerator.
     * 
     */
    @Import(name="resources")
    private @Nullable Output<List<CrossAccountAttachmentResourceArgs>> resources;

    /**
     * @return List of resources to be associated with the accelerator.
     * 
     */
    public Optional<Output<List<CrossAccountAttachmentResourceArgs>>> resources() {
        return Optional.ofNullable(this.resources);
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private CrossAccountAttachmentArgs() {}

    private CrossAccountAttachmentArgs(CrossAccountAttachmentArgs $) {
        this.name = $.name;
        this.principals = $.principals;
        this.resources = $.resources;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CrossAccountAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CrossAccountAttachmentArgs $;

        public Builder() {
            $ = new CrossAccountAttachmentArgs();
        }

        public Builder(CrossAccountAttachmentArgs defaults) {
            $ = new CrossAccountAttachmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Name of the Cross Account Attachment.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the Cross Account Attachment.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param principals List of AWS account IDs that are allowed to associate resources with the accelerator.
         * 
         * @return builder
         * 
         */
        public Builder principals(@Nullable Output<List<String>> principals) {
            $.principals = principals;
            return this;
        }

        /**
         * @param principals List of AWS account IDs that are allowed to associate resources with the accelerator.
         * 
         * @return builder
         * 
         */
        public Builder principals(List<String> principals) {
            return principals(Output.of(principals));
        }

        /**
         * @param principals List of AWS account IDs that are allowed to associate resources with the accelerator.
         * 
         * @return builder
         * 
         */
        public Builder principals(String... principals) {
            return principals(List.of(principals));
        }

        /**
         * @param resources List of resources to be associated with the accelerator.
         * 
         * @return builder
         * 
         */
        public Builder resources(@Nullable Output<List<CrossAccountAttachmentResourceArgs>> resources) {
            $.resources = resources;
            return this;
        }

        /**
         * @param resources List of resources to be associated with the accelerator.
         * 
         * @return builder
         * 
         */
        public Builder resources(List<CrossAccountAttachmentResourceArgs> resources) {
            return resources(Output.of(resources));
        }

        /**
         * @param resources List of resources to be associated with the accelerator.
         * 
         * @return builder
         * 
         */
        public Builder resources(CrossAccountAttachmentResourceArgs... resources) {
            return resources(List.of(resources));
        }

        /**
         * @param tags A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public CrossAccountAttachmentArgs build() {
            return $;
        }
    }

}
