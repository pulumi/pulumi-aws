// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock;

import com.pulumi.aws.bedrock.inputs.AgentcoreGatewayTargetCredentialProviderConfigurationArgs;
import com.pulumi.aws.bedrock.inputs.AgentcoreGatewayTargetTargetConfigurationArgs;
import com.pulumi.aws.bedrock.inputs.AgentcoreGatewayTargetTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AgentcoreGatewayTargetArgs extends com.pulumi.resources.ResourceArgs {

    public static final AgentcoreGatewayTargetArgs Empty = new AgentcoreGatewayTargetArgs();

    /**
     * Configuration for authenticating requests to the target. See `credentialProviderConfiguration` below.
     * 
     */
    @Import(name="credentialProviderConfiguration")
    private @Nullable Output<AgentcoreGatewayTargetCredentialProviderConfigurationArgs> credentialProviderConfiguration;

    /**
     * @return Configuration for authenticating requests to the target. See `credentialProviderConfiguration` below.
     * 
     */
    public Optional<Output<AgentcoreGatewayTargetCredentialProviderConfigurationArgs>> credentialProviderConfiguration() {
        return Optional.ofNullable(this.credentialProviderConfiguration);
    }

    /**
     * Description of the gateway target.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the gateway target.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Identifier of the gateway that this target belongs to.
     * 
     */
    @Import(name="gatewayIdentifier", required=true)
    private Output<String> gatewayIdentifier;

    /**
     * @return Identifier of the gateway that this target belongs to.
     * 
     */
    public Output<String> gatewayIdentifier() {
        return this.gatewayIdentifier;
    }

    /**
     * Name of the gateway target.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the gateway target.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * AWS region where the resource will be created. If not provided, the region from the provider configuration will be used.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return AWS region where the resource will be created. If not provided, the region from the provider configuration will be used.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Configuration for the target endpoint. See `targetConfiguration` below.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="targetConfiguration")
    private @Nullable Output<AgentcoreGatewayTargetTargetConfigurationArgs> targetConfiguration;

    /**
     * @return Configuration for the target endpoint. See `targetConfiguration` below.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<AgentcoreGatewayTargetTargetConfigurationArgs>> targetConfiguration() {
        return Optional.ofNullable(this.targetConfiguration);
    }

    @Import(name="timeouts")
    private @Nullable Output<AgentcoreGatewayTargetTimeoutsArgs> timeouts;

    public Optional<Output<AgentcoreGatewayTargetTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private AgentcoreGatewayTargetArgs() {}

    private AgentcoreGatewayTargetArgs(AgentcoreGatewayTargetArgs $) {
        this.credentialProviderConfiguration = $.credentialProviderConfiguration;
        this.description = $.description;
        this.gatewayIdentifier = $.gatewayIdentifier;
        this.name = $.name;
        this.region = $.region;
        this.targetConfiguration = $.targetConfiguration;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentcoreGatewayTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentcoreGatewayTargetArgs $;

        public Builder() {
            $ = new AgentcoreGatewayTargetArgs();
        }

        public Builder(AgentcoreGatewayTargetArgs defaults) {
            $ = new AgentcoreGatewayTargetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param credentialProviderConfiguration Configuration for authenticating requests to the target. See `credentialProviderConfiguration` below.
         * 
         * @return builder
         * 
         */
        public Builder credentialProviderConfiguration(@Nullable Output<AgentcoreGatewayTargetCredentialProviderConfigurationArgs> credentialProviderConfiguration) {
            $.credentialProviderConfiguration = credentialProviderConfiguration;
            return this;
        }

        /**
         * @param credentialProviderConfiguration Configuration for authenticating requests to the target. See `credentialProviderConfiguration` below.
         * 
         * @return builder
         * 
         */
        public Builder credentialProviderConfiguration(AgentcoreGatewayTargetCredentialProviderConfigurationArgs credentialProviderConfiguration) {
            return credentialProviderConfiguration(Output.of(credentialProviderConfiguration));
        }

        /**
         * @param description Description of the gateway target.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the gateway target.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param gatewayIdentifier Identifier of the gateway that this target belongs to.
         * 
         * @return builder
         * 
         */
        public Builder gatewayIdentifier(Output<String> gatewayIdentifier) {
            $.gatewayIdentifier = gatewayIdentifier;
            return this;
        }

        /**
         * @param gatewayIdentifier Identifier of the gateway that this target belongs to.
         * 
         * @return builder
         * 
         */
        public Builder gatewayIdentifier(String gatewayIdentifier) {
            return gatewayIdentifier(Output.of(gatewayIdentifier));
        }

        /**
         * @param name Name of the gateway target.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the gateway target.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param region AWS region where the resource will be created. If not provided, the region from the provider configuration will be used.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region AWS region where the resource will be created. If not provided, the region from the provider configuration will be used.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param targetConfiguration Configuration for the target endpoint. See `targetConfiguration` below.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder targetConfiguration(@Nullable Output<AgentcoreGatewayTargetTargetConfigurationArgs> targetConfiguration) {
            $.targetConfiguration = targetConfiguration;
            return this;
        }

        /**
         * @param targetConfiguration Configuration for the target endpoint. See `targetConfiguration` below.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder targetConfiguration(AgentcoreGatewayTargetTargetConfigurationArgs targetConfiguration) {
            return targetConfiguration(Output.of(targetConfiguration));
        }

        public Builder timeouts(@Nullable Output<AgentcoreGatewayTargetTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(AgentcoreGatewayTargetTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public AgentcoreGatewayTargetArgs build() {
            if ($.gatewayIdentifier == null) {
                throw new MissingRequiredPropertyException("AgentcoreGatewayTargetArgs", "gatewayIdentifier");
            }
            return $;
        }
    }

}
