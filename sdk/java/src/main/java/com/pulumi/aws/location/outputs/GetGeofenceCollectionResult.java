// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.location.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetGeofenceCollectionResult {
    /**
     * @return ARN for the geofence collection resource. Used when you need to specify a resource across all AWS.
     * 
     */
    private @Nullable String collectionArn;
    private String collectionName;
    /**
     * @return Timestamp for when the geofence collection resource was created in ISO 8601 format.
     * 
     */
    private @Nullable String createTime;
    /**
     * @return Optional description of the geofence collection resource.
     * 
     */
    private @Nullable String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return Key identifier for an AWS KMS customer managed key assigned to the Amazon Location resource.
     * 
     */
    private @Nullable String kmsKeyId;
    /**
     * @return Key-value map of resource tags for the geofence collection.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Timestamp for when the geofence collection resource was last updated in ISO 8601 format.
     * 
     */
    private @Nullable String updateTime;

    private GetGeofenceCollectionResult() {}
    /**
     * @return ARN for the geofence collection resource. Used when you need to specify a resource across all AWS.
     * 
     */
    public Optional<String> collectionArn() {
        return Optional.ofNullable(this.collectionArn);
    }
    public String collectionName() {
        return this.collectionName;
    }
    /**
     * @return Timestamp for when the geofence collection resource was created in ISO 8601 format.
     * 
     */
    public Optional<String> createTime() {
        return Optional.ofNullable(this.createTime);
    }
    /**
     * @return Optional description of the geofence collection resource.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Key identifier for an AWS KMS customer managed key assigned to the Amazon Location resource.
     * 
     */
    public Optional<String> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }
    /**
     * @return Key-value map of resource tags for the geofence collection.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Timestamp for when the geofence collection resource was last updated in ISO 8601 format.
     * 
     */
    public Optional<String> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGeofenceCollectionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String collectionArn;
        private String collectionName;
        private @Nullable String createTime;
        private @Nullable String description;
        private @Nullable String id;
        private @Nullable String kmsKeyId;
        private @Nullable Map<String,String> tags;
        private @Nullable String updateTime;
        public Builder() {}
        public Builder(GetGeofenceCollectionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.collectionArn = defaults.collectionArn;
    	      this.collectionName = defaults.collectionName;
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.tags = defaults.tags;
    	      this.updateTime = defaults.updateTime;
        }

        @CustomType.Setter
        public Builder collectionArn(@Nullable String collectionArn) {
            this.collectionArn = collectionArn;
            return this;
        }
        @CustomType.Setter
        public Builder collectionName(String collectionName) {
            this.collectionName = Objects.requireNonNull(collectionName);
            return this;
        }
        @CustomType.Setter
        public Builder createTime(@Nullable String createTime) {
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyId(@Nullable String kmsKeyId) {
            this.kmsKeyId = kmsKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder updateTime(@Nullable String updateTime) {
            this.updateTime = updateTime;
            return this;
        }
        public GetGeofenceCollectionResult build() {
            final var o = new GetGeofenceCollectionResult();
            o.collectionArn = collectionArn;
            o.collectionName = collectionName;
            o.createTime = createTime;
            o.description = description;
            o.id = id;
            o.kmsKeyId = kmsKeyId;
            o.tags = tags;
            o.updateTime = updateTime;
            return o;
        }
    }
}
