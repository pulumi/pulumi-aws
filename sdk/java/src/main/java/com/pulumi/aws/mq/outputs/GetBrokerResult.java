// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.mq.outputs;

import com.pulumi.aws.mq.outputs.GetBrokerConfiguration;
import com.pulumi.aws.mq.outputs.GetBrokerEncryptionOption;
import com.pulumi.aws.mq.outputs.GetBrokerInstance;
import com.pulumi.aws.mq.outputs.GetBrokerLdapServerMetadata;
import com.pulumi.aws.mq.outputs.GetBrokerLogs;
import com.pulumi.aws.mq.outputs.GetBrokerMaintenanceWindowStartTime;
import com.pulumi.aws.mq.outputs.GetBrokerUser;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBrokerResult {
    private @Nullable String arn;
    private @Nullable String authenticationStrategy;
    private @Nullable Boolean autoMinorVersionUpgrade;
    private @Nullable String brokerId;
    private @Nullable String brokerName;
    private @Nullable GetBrokerConfiguration configuration;
    private @Nullable String deploymentMode;
    private @Nullable List<GetBrokerEncryptionOption> encryptionOptions;
    private @Nullable String engineType;
    private @Nullable String engineVersion;
    private @Nullable String hostInstanceType;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private @Nullable List<GetBrokerInstance> instances;
    private @Nullable List<GetBrokerLdapServerMetadata> ldapServerMetadatas;
    private @Nullable GetBrokerLogs logs;
    private @Nullable GetBrokerMaintenanceWindowStartTime maintenanceWindowStartTime;
    private @Nullable Boolean publiclyAccessible;
    private @Nullable List<String> securityGroups;
    private @Nullable String storageType;
    private @Nullable List<String> subnetIds;
    private @Nullable Map<String,String> tags;
    private @Nullable List<GetBrokerUser> users;

    private GetBrokerResult() {}
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    public Optional<String> authenticationStrategy() {
        return Optional.ofNullable(this.authenticationStrategy);
    }
    public Optional<Boolean> autoMinorVersionUpgrade() {
        return Optional.ofNullable(this.autoMinorVersionUpgrade);
    }
    public Optional<String> brokerId() {
        return Optional.ofNullable(this.brokerId);
    }
    public Optional<String> brokerName() {
        return Optional.ofNullable(this.brokerName);
    }
    public Optional<GetBrokerConfiguration> configuration() {
        return Optional.ofNullable(this.configuration);
    }
    public Optional<String> deploymentMode() {
        return Optional.ofNullable(this.deploymentMode);
    }
    public List<GetBrokerEncryptionOption> encryptionOptions() {
        return this.encryptionOptions == null ? List.of() : this.encryptionOptions;
    }
    public Optional<String> engineType() {
        return Optional.ofNullable(this.engineType);
    }
    public Optional<String> engineVersion() {
        return Optional.ofNullable(this.engineVersion);
    }
    public Optional<String> hostInstanceType() {
        return Optional.ofNullable(this.hostInstanceType);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public List<GetBrokerInstance> instances() {
        return this.instances == null ? List.of() : this.instances;
    }
    public List<GetBrokerLdapServerMetadata> ldapServerMetadatas() {
        return this.ldapServerMetadatas == null ? List.of() : this.ldapServerMetadatas;
    }
    public Optional<GetBrokerLogs> logs() {
        return Optional.ofNullable(this.logs);
    }
    public Optional<GetBrokerMaintenanceWindowStartTime> maintenanceWindowStartTime() {
        return Optional.ofNullable(this.maintenanceWindowStartTime);
    }
    public Optional<Boolean> publiclyAccessible() {
        return Optional.ofNullable(this.publiclyAccessible);
    }
    public List<String> securityGroups() {
        return this.securityGroups == null ? List.of() : this.securityGroups;
    }
    public Optional<String> storageType() {
        return Optional.ofNullable(this.storageType);
    }
    public List<String> subnetIds() {
        return this.subnetIds == null ? List.of() : this.subnetIds;
    }
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public List<GetBrokerUser> users() {
        return this.users == null ? List.of() : this.users;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBrokerResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String authenticationStrategy;
        private @Nullable Boolean autoMinorVersionUpgrade;
        private @Nullable String brokerId;
        private @Nullable String brokerName;
        private @Nullable GetBrokerConfiguration configuration;
        private @Nullable String deploymentMode;
        private @Nullable List<GetBrokerEncryptionOption> encryptionOptions;
        private @Nullable String engineType;
        private @Nullable String engineVersion;
        private @Nullable String hostInstanceType;
        private @Nullable String id;
        private @Nullable List<GetBrokerInstance> instances;
        private @Nullable List<GetBrokerLdapServerMetadata> ldapServerMetadatas;
        private @Nullable GetBrokerLogs logs;
        private @Nullable GetBrokerMaintenanceWindowStartTime maintenanceWindowStartTime;
        private @Nullable Boolean publiclyAccessible;
        private @Nullable List<String> securityGroups;
        private @Nullable String storageType;
        private @Nullable List<String> subnetIds;
        private @Nullable Map<String,String> tags;
        private @Nullable List<GetBrokerUser> users;
        public Builder() {}
        public Builder(GetBrokerResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.authenticationStrategy = defaults.authenticationStrategy;
    	      this.autoMinorVersionUpgrade = defaults.autoMinorVersionUpgrade;
    	      this.brokerId = defaults.brokerId;
    	      this.brokerName = defaults.brokerName;
    	      this.configuration = defaults.configuration;
    	      this.deploymentMode = defaults.deploymentMode;
    	      this.encryptionOptions = defaults.encryptionOptions;
    	      this.engineType = defaults.engineType;
    	      this.engineVersion = defaults.engineVersion;
    	      this.hostInstanceType = defaults.hostInstanceType;
    	      this.id = defaults.id;
    	      this.instances = defaults.instances;
    	      this.ldapServerMetadatas = defaults.ldapServerMetadatas;
    	      this.logs = defaults.logs;
    	      this.maintenanceWindowStartTime = defaults.maintenanceWindowStartTime;
    	      this.publiclyAccessible = defaults.publiclyAccessible;
    	      this.securityGroups = defaults.securityGroups;
    	      this.storageType = defaults.storageType;
    	      this.subnetIds = defaults.subnetIds;
    	      this.tags = defaults.tags;
    	      this.users = defaults.users;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder authenticationStrategy(@Nullable String authenticationStrategy) {
            this.authenticationStrategy = authenticationStrategy;
            return this;
        }
        @CustomType.Setter
        public Builder autoMinorVersionUpgrade(@Nullable Boolean autoMinorVersionUpgrade) {
            this.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
            return this;
        }
        @CustomType.Setter
        public Builder brokerId(@Nullable String brokerId) {
            this.brokerId = brokerId;
            return this;
        }
        @CustomType.Setter
        public Builder brokerName(@Nullable String brokerName) {
            this.brokerName = brokerName;
            return this;
        }
        @CustomType.Setter
        public Builder configuration(@Nullable GetBrokerConfiguration configuration) {
            this.configuration = configuration;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentMode(@Nullable String deploymentMode) {
            this.deploymentMode = deploymentMode;
            return this;
        }
        @CustomType.Setter
        public Builder encryptionOptions(@Nullable List<GetBrokerEncryptionOption> encryptionOptions) {
            this.encryptionOptions = encryptionOptions;
            return this;
        }
        public Builder encryptionOptions(GetBrokerEncryptionOption... encryptionOptions) {
            return encryptionOptions(List.of(encryptionOptions));
        }
        @CustomType.Setter
        public Builder engineType(@Nullable String engineType) {
            this.engineType = engineType;
            return this;
        }
        @CustomType.Setter
        public Builder engineVersion(@Nullable String engineVersion) {
            this.engineVersion = engineVersion;
            return this;
        }
        @CustomType.Setter
        public Builder hostInstanceType(@Nullable String hostInstanceType) {
            this.hostInstanceType = hostInstanceType;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder instances(@Nullable List<GetBrokerInstance> instances) {
            this.instances = instances;
            return this;
        }
        public Builder instances(GetBrokerInstance... instances) {
            return instances(List.of(instances));
        }
        @CustomType.Setter
        public Builder ldapServerMetadatas(@Nullable List<GetBrokerLdapServerMetadata> ldapServerMetadatas) {
            this.ldapServerMetadatas = ldapServerMetadatas;
            return this;
        }
        public Builder ldapServerMetadatas(GetBrokerLdapServerMetadata... ldapServerMetadatas) {
            return ldapServerMetadatas(List.of(ldapServerMetadatas));
        }
        @CustomType.Setter
        public Builder logs(@Nullable GetBrokerLogs logs) {
            this.logs = logs;
            return this;
        }
        @CustomType.Setter
        public Builder maintenanceWindowStartTime(@Nullable GetBrokerMaintenanceWindowStartTime maintenanceWindowStartTime) {
            this.maintenanceWindowStartTime = maintenanceWindowStartTime;
            return this;
        }
        @CustomType.Setter
        public Builder publiclyAccessible(@Nullable Boolean publiclyAccessible) {
            this.publiclyAccessible = publiclyAccessible;
            return this;
        }
        @CustomType.Setter
        public Builder securityGroups(@Nullable List<String> securityGroups) {
            this.securityGroups = securityGroups;
            return this;
        }
        public Builder securityGroups(String... securityGroups) {
            return securityGroups(List.of(securityGroups));
        }
        @CustomType.Setter
        public Builder storageType(@Nullable String storageType) {
            this.storageType = storageType;
            return this;
        }
        @CustomType.Setter
        public Builder subnetIds(@Nullable List<String> subnetIds) {
            this.subnetIds = subnetIds;
            return this;
        }
        public Builder subnetIds(String... subnetIds) {
            return subnetIds(List.of(subnetIds));
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder users(@Nullable List<GetBrokerUser> users) {
            this.users = users;
            return this;
        }
        public Builder users(GetBrokerUser... users) {
            return users(List.of(users));
        }
        public GetBrokerResult build() {
            final var o = new GetBrokerResult();
            o.arn = arn;
            o.authenticationStrategy = authenticationStrategy;
            o.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
            o.brokerId = brokerId;
            o.brokerName = brokerName;
            o.configuration = configuration;
            o.deploymentMode = deploymentMode;
            o.encryptionOptions = encryptionOptions;
            o.engineType = engineType;
            o.engineVersion = engineVersion;
            o.hostInstanceType = hostInstanceType;
            o.id = id;
            o.instances = instances;
            o.ldapServerMetadatas = ldapServerMetadatas;
            o.logs = logs;
            o.maintenanceWindowStartTime = maintenanceWindowStartTime;
            o.publiclyAccessible = publiclyAccessible;
            o.securityGroups = securityGroups;
            o.storageType = storageType;
            o.subnetIds = subnetIds;
            o.tags = tags;
            o.users = users;
            return o;
        }
    }
}
