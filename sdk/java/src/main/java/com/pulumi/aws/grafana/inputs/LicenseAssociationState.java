// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.grafana.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LicenseAssociationState extends com.pulumi.resources.ResourceArgs {

    public static final LicenseAssociationState Empty = new LicenseAssociationState();

    @Import(name="freeTrialExpiration")
    private @Nullable Output<String> freeTrialExpiration;

    public Optional<Output<String>> freeTrialExpiration() {
        return Optional.ofNullable(this.freeTrialExpiration);
    }

    @Import(name="licenseExpiration")
    private @Nullable Output<String> licenseExpiration;

    public Optional<Output<String>> licenseExpiration() {
        return Optional.ofNullable(this.licenseExpiration);
    }

    @Import(name="licenseType")
    private @Nullable Output<String> licenseType;

    public Optional<Output<String>> licenseType() {
        return Optional.ofNullable(this.licenseType);
    }

    @Import(name="workspaceId")
    private @Nullable Output<String> workspaceId;

    public Optional<Output<String>> workspaceId() {
        return Optional.ofNullable(this.workspaceId);
    }

    private LicenseAssociationState() {}

    private LicenseAssociationState(LicenseAssociationState $) {
        this.freeTrialExpiration = $.freeTrialExpiration;
        this.licenseExpiration = $.licenseExpiration;
        this.licenseType = $.licenseType;
        this.workspaceId = $.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LicenseAssociationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LicenseAssociationState $;

        public Builder() {
            $ = new LicenseAssociationState();
        }

        public Builder(LicenseAssociationState defaults) {
            $ = new LicenseAssociationState(Objects.requireNonNull(defaults));
        }

        public Builder freeTrialExpiration(@Nullable Output<String> freeTrialExpiration) {
            $.freeTrialExpiration = freeTrialExpiration;
            return this;
        }

        public Builder freeTrialExpiration(String freeTrialExpiration) {
            return freeTrialExpiration(Output.of(freeTrialExpiration));
        }

        public Builder licenseExpiration(@Nullable Output<String> licenseExpiration) {
            $.licenseExpiration = licenseExpiration;
            return this;
        }

        public Builder licenseExpiration(String licenseExpiration) {
            return licenseExpiration(Output.of(licenseExpiration));
        }

        public Builder licenseType(@Nullable Output<String> licenseType) {
            $.licenseType = licenseType;
            return this;
        }

        public Builder licenseType(String licenseType) {
            return licenseType(Output.of(licenseType));
        }

        public Builder workspaceId(@Nullable Output<String> workspaceId) {
            $.workspaceId = workspaceId;
            return this;
        }

        public Builder workspaceId(String workspaceId) {
            return workspaceId(Output.of(workspaceId));
        }

        public LicenseAssociationState build() {
            return $;
        }
    }

}
