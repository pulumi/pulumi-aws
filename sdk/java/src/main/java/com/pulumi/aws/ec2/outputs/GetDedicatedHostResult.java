// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.outputs;

import com.pulumi.aws.ec2.outputs.GetDedicatedHostFilter;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDedicatedHostResult {
    /**
     * @return ARN of the Dedicated Host.
     * 
     */
    private @Nullable String arn;
    /**
     * @return The ID of the Outpost hardware asset on which the Dedicated Host is allocated.
     * 
     */
    private @Nullable String assetId;
    /**
     * @return Whether auto-placement is on or off.
     * 
     */
    private @Nullable String autoPlacement;
    /**
     * @return Availability Zone of the Dedicated Host.
     * 
     */
    private @Nullable String availabilityZone;
    /**
     * @return Number of cores on the Dedicated Host.
     * 
     */
    private @Nullable Integer cores;
    private @Nullable List<GetDedicatedHostFilter> filters;
    private @Nullable String hostId;
    /**
     * @return Whether host recovery is enabled or disabled for the Dedicated Host.
     * 
     */
    private @Nullable String hostRecovery;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return Instance family supported by the Dedicated Host. For example, &#34;m5&#34;.
     * 
     */
    private @Nullable String instanceFamily;
    /**
     * @return Instance type supported by the Dedicated Host. For example, &#34;m5.large&#34;. If the host supports multiple instance types, no instanceType is returned.
     * 
     */
    private @Nullable String instanceType;
    /**
     * @return ARN of the AWS Outpost on which the Dedicated Host is allocated.
     * 
     */
    private @Nullable String outpostArn;
    /**
     * @return ID of the AWS account that owns the Dedicated Host.
     * 
     */
    private @Nullable String ownerId;
    /**
     * @return Number of sockets on the Dedicated Host.
     * 
     */
    private @Nullable Integer sockets;
    private @Nullable Map<String,String> tags;
    /**
     * @return Total number of vCPUs on the Dedicated Host.
     * 
     */
    private @Nullable Integer totalVcpus;

    private GetDedicatedHostResult() {}
    /**
     * @return ARN of the Dedicated Host.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return The ID of the Outpost hardware asset on which the Dedicated Host is allocated.
     * 
     */
    public Optional<String> assetId() {
        return Optional.ofNullable(this.assetId);
    }
    /**
     * @return Whether auto-placement is on or off.
     * 
     */
    public Optional<String> autoPlacement() {
        return Optional.ofNullable(this.autoPlacement);
    }
    /**
     * @return Availability Zone of the Dedicated Host.
     * 
     */
    public Optional<String> availabilityZone() {
        return Optional.ofNullable(this.availabilityZone);
    }
    /**
     * @return Number of cores on the Dedicated Host.
     * 
     */
    public Optional<Integer> cores() {
        return Optional.ofNullable(this.cores);
    }
    public List<GetDedicatedHostFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    public Optional<String> hostId() {
        return Optional.ofNullable(this.hostId);
    }
    /**
     * @return Whether host recovery is enabled or disabled for the Dedicated Host.
     * 
     */
    public Optional<String> hostRecovery() {
        return Optional.ofNullable(this.hostRecovery);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Instance family supported by the Dedicated Host. For example, &#34;m5&#34;.
     * 
     */
    public Optional<String> instanceFamily() {
        return Optional.ofNullable(this.instanceFamily);
    }
    /**
     * @return Instance type supported by the Dedicated Host. For example, &#34;m5.large&#34;. If the host supports multiple instance types, no instanceType is returned.
     * 
     */
    public Optional<String> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }
    /**
     * @return ARN of the AWS Outpost on which the Dedicated Host is allocated.
     * 
     */
    public Optional<String> outpostArn() {
        return Optional.ofNullable(this.outpostArn);
    }
    /**
     * @return ID of the AWS account that owns the Dedicated Host.
     * 
     */
    public Optional<String> ownerId() {
        return Optional.ofNullable(this.ownerId);
    }
    /**
     * @return Number of sockets on the Dedicated Host.
     * 
     */
    public Optional<Integer> sockets() {
        return Optional.ofNullable(this.sockets);
    }
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Total number of vCPUs on the Dedicated Host.
     * 
     */
    public Optional<Integer> totalVcpus() {
        return Optional.ofNullable(this.totalVcpus);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDedicatedHostResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String assetId;
        private @Nullable String autoPlacement;
        private @Nullable String availabilityZone;
        private @Nullable Integer cores;
        private @Nullable List<GetDedicatedHostFilter> filters;
        private @Nullable String hostId;
        private @Nullable String hostRecovery;
        private @Nullable String id;
        private @Nullable String instanceFamily;
        private @Nullable String instanceType;
        private @Nullable String outpostArn;
        private @Nullable String ownerId;
        private @Nullable Integer sockets;
        private @Nullable Map<String,String> tags;
        private @Nullable Integer totalVcpus;
        public Builder() {}
        public Builder(GetDedicatedHostResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.assetId = defaults.assetId;
    	      this.autoPlacement = defaults.autoPlacement;
    	      this.availabilityZone = defaults.availabilityZone;
    	      this.cores = defaults.cores;
    	      this.filters = defaults.filters;
    	      this.hostId = defaults.hostId;
    	      this.hostRecovery = defaults.hostRecovery;
    	      this.id = defaults.id;
    	      this.instanceFamily = defaults.instanceFamily;
    	      this.instanceType = defaults.instanceType;
    	      this.outpostArn = defaults.outpostArn;
    	      this.ownerId = defaults.ownerId;
    	      this.sockets = defaults.sockets;
    	      this.tags = defaults.tags;
    	      this.totalVcpus = defaults.totalVcpus;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder assetId(@Nullable String assetId) {
            this.assetId = assetId;
            return this;
        }
        @CustomType.Setter
        public Builder autoPlacement(@Nullable String autoPlacement) {
            this.autoPlacement = autoPlacement;
            return this;
        }
        @CustomType.Setter
        public Builder availabilityZone(@Nullable String availabilityZone) {
            this.availabilityZone = availabilityZone;
            return this;
        }
        @CustomType.Setter
        public Builder cores(@Nullable Integer cores) {
            this.cores = cores;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetDedicatedHostFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetDedicatedHostFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder hostId(@Nullable String hostId) {
            this.hostId = hostId;
            return this;
        }
        @CustomType.Setter
        public Builder hostRecovery(@Nullable String hostRecovery) {
            this.hostRecovery = hostRecovery;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder instanceFamily(@Nullable String instanceFamily) {
            this.instanceFamily = instanceFamily;
            return this;
        }
        @CustomType.Setter
        public Builder instanceType(@Nullable String instanceType) {
            this.instanceType = instanceType;
            return this;
        }
        @CustomType.Setter
        public Builder outpostArn(@Nullable String outpostArn) {
            this.outpostArn = outpostArn;
            return this;
        }
        @CustomType.Setter
        public Builder ownerId(@Nullable String ownerId) {
            this.ownerId = ownerId;
            return this;
        }
        @CustomType.Setter
        public Builder sockets(@Nullable Integer sockets) {
            this.sockets = sockets;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder totalVcpus(@Nullable Integer totalVcpus) {
            this.totalVcpus = totalVcpus;
            return this;
        }
        public GetDedicatedHostResult build() {
            final var o = new GetDedicatedHostResult();
            o.arn = arn;
            o.assetId = assetId;
            o.autoPlacement = autoPlacement;
            o.availabilityZone = availabilityZone;
            o.cores = cores;
            o.filters = filters;
            o.hostId = hostId;
            o.hostRecovery = hostRecovery;
            o.id = id;
            o.instanceFamily = instanceFamily;
            o.instanceType = instanceType;
            o.outpostArn = outpostArn;
            o.ownerId = ownerId;
            o.sockets = sockets;
            o.tags = tags;
            o.totalVcpus = totalVcpus;
            return o;
        }
    }
}
