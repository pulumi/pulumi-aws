// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LaunchTemplatePlacement {
    /**
     * @return The affinity setting for an instance on a Dedicated Host.
     * 
     */
    private @Nullable String affinity;
    /**
     * @return The Availability Zone for the instance.
     * 
     */
    private @Nullable String availabilityZone;
    /**
     * @return The name of the placement group for the instance.
     * 
     */
    private @Nullable String groupName;
    /**
     * @return The ID of the Dedicated Host for the instance.
     * 
     */
    private @Nullable String hostId;
    /**
     * @return The ARN of the Host Resource Group in which to launch instances.
     * 
     */
    private @Nullable String hostResourceGroupArn;
    /**
     * @return The number of the partition the instance should launch in. Valid only if the placement group strategy is set to partition.
     * 
     */
    private @Nullable Integer partitionNumber;
    /**
     * @return Reserved for future use.
     * 
     */
    private @Nullable String spreadDomain;
    /**
     * @return The tenancy of the instance (if the instance is running in a VPC). Can be `default`, `dedicated`, or `host`.
     * 
     */
    private @Nullable String tenancy;

    private LaunchTemplatePlacement() {}
    /**
     * @return The affinity setting for an instance on a Dedicated Host.
     * 
     */
    public Optional<String> affinity() {
        return Optional.ofNullable(this.affinity);
    }
    /**
     * @return The Availability Zone for the instance.
     * 
     */
    public Optional<String> availabilityZone() {
        return Optional.ofNullable(this.availabilityZone);
    }
    /**
     * @return The name of the placement group for the instance.
     * 
     */
    public Optional<String> groupName() {
        return Optional.ofNullable(this.groupName);
    }
    /**
     * @return The ID of the Dedicated Host for the instance.
     * 
     */
    public Optional<String> hostId() {
        return Optional.ofNullable(this.hostId);
    }
    /**
     * @return The ARN of the Host Resource Group in which to launch instances.
     * 
     */
    public Optional<String> hostResourceGroupArn() {
        return Optional.ofNullable(this.hostResourceGroupArn);
    }
    /**
     * @return The number of the partition the instance should launch in. Valid only if the placement group strategy is set to partition.
     * 
     */
    public Optional<Integer> partitionNumber() {
        return Optional.ofNullable(this.partitionNumber);
    }
    /**
     * @return Reserved for future use.
     * 
     */
    public Optional<String> spreadDomain() {
        return Optional.ofNullable(this.spreadDomain);
    }
    /**
     * @return The tenancy of the instance (if the instance is running in a VPC). Can be `default`, `dedicated`, or `host`.
     * 
     */
    public Optional<String> tenancy() {
        return Optional.ofNullable(this.tenancy);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LaunchTemplatePlacement defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String affinity;
        private @Nullable String availabilityZone;
        private @Nullable String groupName;
        private @Nullable String hostId;
        private @Nullable String hostResourceGroupArn;
        private @Nullable Integer partitionNumber;
        private @Nullable String spreadDomain;
        private @Nullable String tenancy;
        public Builder() {}
        public Builder(LaunchTemplatePlacement defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.affinity = defaults.affinity;
    	      this.availabilityZone = defaults.availabilityZone;
    	      this.groupName = defaults.groupName;
    	      this.hostId = defaults.hostId;
    	      this.hostResourceGroupArn = defaults.hostResourceGroupArn;
    	      this.partitionNumber = defaults.partitionNumber;
    	      this.spreadDomain = defaults.spreadDomain;
    	      this.tenancy = defaults.tenancy;
        }

        @CustomType.Setter
        public Builder affinity(@Nullable String affinity) {
            this.affinity = affinity;
            return this;
        }
        @CustomType.Setter
        public Builder availabilityZone(@Nullable String availabilityZone) {
            this.availabilityZone = availabilityZone;
            return this;
        }
        @CustomType.Setter
        public Builder groupName(@Nullable String groupName) {
            this.groupName = groupName;
            return this;
        }
        @CustomType.Setter
        public Builder hostId(@Nullable String hostId) {
            this.hostId = hostId;
            return this;
        }
        @CustomType.Setter
        public Builder hostResourceGroupArn(@Nullable String hostResourceGroupArn) {
            this.hostResourceGroupArn = hostResourceGroupArn;
            return this;
        }
        @CustomType.Setter
        public Builder partitionNumber(@Nullable Integer partitionNumber) {
            this.partitionNumber = partitionNumber;
            return this;
        }
        @CustomType.Setter
        public Builder spreadDomain(@Nullable String spreadDomain) {
            this.spreadDomain = spreadDomain;
            return this;
        }
        @CustomType.Setter
        public Builder tenancy(@Nullable String tenancy) {
            this.tenancy = tenancy;
            return this;
        }
        public LaunchTemplatePlacement build() {
            final var _resultValue = new LaunchTemplatePlacement();
            _resultValue.affinity = affinity;
            _resultValue.availabilityZone = availabilityZone;
            _resultValue.groupName = groupName;
            _resultValue.hostId = hostId;
            _resultValue.hostResourceGroupArn = hostResourceGroupArn;
            _resultValue.partitionNumber = partitionNumber;
            _resultValue.spreadDomain = spreadDomain;
            _resultValue.tenancy = tenancy;
            return _resultValue;
        }
    }
}
