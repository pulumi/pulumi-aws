// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iot.inputs;

import com.pulumi.aws.iot.inputs.TopicRuleTimestreamDimensionArgs;
import com.pulumi.aws.iot.inputs.TopicRuleTimestreamTimestampArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TopicRuleTimestreamArgs extends com.pulumi.resources.ResourceArgs {

    public static final TopicRuleTimestreamArgs Empty = new TopicRuleTimestreamArgs();

    /**
     * The name of an Amazon Timestream database.
     * 
     */
    @Import(name="databaseName", required=true)
    private Output<String> databaseName;

    /**
     * @return The name of an Amazon Timestream database.
     * 
     */
    public Output<String> databaseName() {
        return this.databaseName;
    }

    /**
     * Configuration blocks with metadata attributes of the time series that are written in each measure record. Nested arguments below.
     * 
     */
    @Import(name="dimensions", required=true)
    private Output<List<TopicRuleTimestreamDimensionArgs>> dimensions;

    /**
     * @return Configuration blocks with metadata attributes of the time series that are written in each measure record. Nested arguments below.
     * 
     */
    public Output<List<TopicRuleTimestreamDimensionArgs>> dimensions() {
        return this.dimensions;
    }

    /**
     * The ARN of the role that grants permission to write to the Amazon Timestream database table.
     * 
     */
    @Import(name="roleArn", required=true)
    private Output<String> roleArn;

    /**
     * @return The ARN of the role that grants permission to write to the Amazon Timestream database table.
     * 
     */
    public Output<String> roleArn() {
        return this.roleArn;
    }

    /**
     * The name of the database table into which to write the measure records.
     * 
     */
    @Import(name="tableName", required=true)
    private Output<String> tableName;

    /**
     * @return The name of the database table into which to write the measure records.
     * 
     */
    public Output<String> tableName() {
        return this.tableName;
    }

    /**
     * Configuration block specifying an application-defined value to replace the default value assigned to the Timestream record&#39;s timestamp in the time column. Nested arguments below.
     * 
     */
    @Import(name="timestamp")
    private @Nullable Output<TopicRuleTimestreamTimestampArgs> timestamp;

    /**
     * @return Configuration block specifying an application-defined value to replace the default value assigned to the Timestream record&#39;s timestamp in the time column. Nested arguments below.
     * 
     */
    public Optional<Output<TopicRuleTimestreamTimestampArgs>> timestamp() {
        return Optional.ofNullable(this.timestamp);
    }

    private TopicRuleTimestreamArgs() {}

    private TopicRuleTimestreamArgs(TopicRuleTimestreamArgs $) {
        this.databaseName = $.databaseName;
        this.dimensions = $.dimensions;
        this.roleArn = $.roleArn;
        this.tableName = $.tableName;
        this.timestamp = $.timestamp;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TopicRuleTimestreamArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TopicRuleTimestreamArgs $;

        public Builder() {
            $ = new TopicRuleTimestreamArgs();
        }

        public Builder(TopicRuleTimestreamArgs defaults) {
            $ = new TopicRuleTimestreamArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param databaseName The name of an Amazon Timestream database.
         * 
         * @return builder
         * 
         */
        public Builder databaseName(Output<String> databaseName) {
            $.databaseName = databaseName;
            return this;
        }

        /**
         * @param databaseName The name of an Amazon Timestream database.
         * 
         * @return builder
         * 
         */
        public Builder databaseName(String databaseName) {
            return databaseName(Output.of(databaseName));
        }

        /**
         * @param dimensions Configuration blocks with metadata attributes of the time series that are written in each measure record. Nested arguments below.
         * 
         * @return builder
         * 
         */
        public Builder dimensions(Output<List<TopicRuleTimestreamDimensionArgs>> dimensions) {
            $.dimensions = dimensions;
            return this;
        }

        /**
         * @param dimensions Configuration blocks with metadata attributes of the time series that are written in each measure record. Nested arguments below.
         * 
         * @return builder
         * 
         */
        public Builder dimensions(List<TopicRuleTimestreamDimensionArgs> dimensions) {
            return dimensions(Output.of(dimensions));
        }

        /**
         * @param dimensions Configuration blocks with metadata attributes of the time series that are written in each measure record. Nested arguments below.
         * 
         * @return builder
         * 
         */
        public Builder dimensions(TopicRuleTimestreamDimensionArgs... dimensions) {
            return dimensions(List.of(dimensions));
        }

        /**
         * @param roleArn The ARN of the role that grants permission to write to the Amazon Timestream database table.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn The ARN of the role that grants permission to write to the Amazon Timestream database table.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        /**
         * @param tableName The name of the database table into which to write the measure records.
         * 
         * @return builder
         * 
         */
        public Builder tableName(Output<String> tableName) {
            $.tableName = tableName;
            return this;
        }

        /**
         * @param tableName The name of the database table into which to write the measure records.
         * 
         * @return builder
         * 
         */
        public Builder tableName(String tableName) {
            return tableName(Output.of(tableName));
        }

        /**
         * @param timestamp Configuration block specifying an application-defined value to replace the default value assigned to the Timestream record&#39;s timestamp in the time column. Nested arguments below.
         * 
         * @return builder
         * 
         */
        public Builder timestamp(@Nullable Output<TopicRuleTimestreamTimestampArgs> timestamp) {
            $.timestamp = timestamp;
            return this;
        }

        /**
         * @param timestamp Configuration block specifying an application-defined value to replace the default value assigned to the Timestream record&#39;s timestamp in the time column. Nested arguments below.
         * 
         * @return builder
         * 
         */
        public Builder timestamp(TopicRuleTimestreamTimestampArgs timestamp) {
            return timestamp(Output.of(timestamp));
        }

        public TopicRuleTimestreamArgs build() {
            if ($.databaseName == null) {
                throw new MissingRequiredPropertyException("TopicRuleTimestreamArgs", "databaseName");
            }
            if ($.dimensions == null) {
                throw new MissingRequiredPropertyException("TopicRuleTimestreamArgs", "dimensions");
            }
            if ($.roleArn == null) {
                throw new MissingRequiredPropertyException("TopicRuleTimestreamArgs", "roleArn");
            }
            if ($.tableName == null) {
                throw new MissingRequiredPropertyException("TopicRuleTimestreamArgs", "tableName");
            }
            return $;
        }
    }

}
