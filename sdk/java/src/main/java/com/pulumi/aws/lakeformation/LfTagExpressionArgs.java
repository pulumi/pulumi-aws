// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lakeformation;

import com.pulumi.aws.lakeformation.inputs.LfTagExpressionExpressionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LfTagExpressionArgs extends com.pulumi.resources.ResourceArgs {

    public static final LfTagExpressionArgs Empty = new LfTagExpressionArgs();

    /**
     * ID of the Data Catalog. Defaults to the account ID if not specified.
     * 
     */
    @Import(name="catalogId")
    private @Nullable Output<String> catalogId;

    /**
     * @return ID of the Data Catalog. Defaults to the account ID if not specified.
     * 
     */
    public Optional<Output<String>> catalogId() {
        return Optional.ofNullable(this.catalogId);
    }

    /**
     * Description of the LF-Tag Expression.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the LF-Tag Expression.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * A list of LF-Tag conditions (key-value pairs). See expression for more details.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="expressions")
    private @Nullable Output<List<LfTagExpressionExpressionArgs>> expressions;

    /**
     * @return A list of LF-Tag conditions (key-value pairs). See expression for more details.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<List<LfTagExpressionExpressionArgs>>> expressions() {
        return Optional.ofNullable(this.expressions);
    }

    /**
     * Name of the LF-Tag Expression.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the LF-Tag Expression.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    private LfTagExpressionArgs() {}

    private LfTagExpressionArgs(LfTagExpressionArgs $) {
        this.catalogId = $.catalogId;
        this.description = $.description;
        this.expressions = $.expressions;
        this.name = $.name;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LfTagExpressionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LfTagExpressionArgs $;

        public Builder() {
            $ = new LfTagExpressionArgs();
        }

        public Builder(LfTagExpressionArgs defaults) {
            $ = new LfTagExpressionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param catalogId ID of the Data Catalog. Defaults to the account ID if not specified.
         * 
         * @return builder
         * 
         */
        public Builder catalogId(@Nullable Output<String> catalogId) {
            $.catalogId = catalogId;
            return this;
        }

        /**
         * @param catalogId ID of the Data Catalog. Defaults to the account ID if not specified.
         * 
         * @return builder
         * 
         */
        public Builder catalogId(String catalogId) {
            return catalogId(Output.of(catalogId));
        }

        /**
         * @param description Description of the LF-Tag Expression.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the LF-Tag Expression.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param expressions A list of LF-Tag conditions (key-value pairs). See expression for more details.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder expressions(@Nullable Output<List<LfTagExpressionExpressionArgs>> expressions) {
            $.expressions = expressions;
            return this;
        }

        /**
         * @param expressions A list of LF-Tag conditions (key-value pairs). See expression for more details.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder expressions(List<LfTagExpressionExpressionArgs> expressions) {
            return expressions(Output.of(expressions));
        }

        /**
         * @param expressions A list of LF-Tag conditions (key-value pairs). See expression for more details.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder expressions(LfTagExpressionExpressionArgs... expressions) {
            return expressions(List.of(expressions));
        }

        /**
         * @param name Name of the LF-Tag Expression.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the LF-Tag Expression.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public LfTagExpressionArgs build() {
            return $;
        }
    }

}
