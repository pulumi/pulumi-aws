// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadInputSchemaPropertyItemsItems {
    /**
     * @return Description of the array items.
     * 
     */
    private @Nullable String description;
    /**
     * @return JSON-encoded schema definition for array items. Used for complex nested structures. Cannot be used with `propertiesJson`.
     * 
     */
    private @Nullable String itemsJson;
    /**
     * @return JSON-encoded schema definition for object properties. Used for complex nested structures. Cannot be used with `itemsJson`.
     * 
     */
    private @Nullable String propertiesJson;
    /**
     * @return Data type of the array items.
     * 
     */
    private String type;

    private AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadInputSchemaPropertyItemsItems() {}
    /**
     * @return Description of the array items.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return JSON-encoded schema definition for array items. Used for complex nested structures. Cannot be used with `propertiesJson`.
     * 
     */
    public Optional<String> itemsJson() {
        return Optional.ofNullable(this.itemsJson);
    }
    /**
     * @return JSON-encoded schema definition for object properties. Used for complex nested structures. Cannot be used with `itemsJson`.
     * 
     */
    public Optional<String> propertiesJson() {
        return Optional.ofNullable(this.propertiesJson);
    }
    /**
     * @return Data type of the array items.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadInputSchemaPropertyItemsItems defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String description;
        private @Nullable String itemsJson;
        private @Nullable String propertiesJson;
        private String type;
        public Builder() {}
        public Builder(AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadInputSchemaPropertyItemsItems defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.itemsJson = defaults.itemsJson;
    	      this.propertiesJson = defaults.propertiesJson;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder itemsJson(@Nullable String itemsJson) {

            this.itemsJson = itemsJson;
            return this;
        }
        @CustomType.Setter
        public Builder propertiesJson(@Nullable String propertiesJson) {

            this.propertiesJson = propertiesJson;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadInputSchemaPropertyItemsItems", "type");
            }
            this.type = type;
            return this;
        }
        public AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadInputSchemaPropertyItemsItems build() {
            final var _resultValue = new AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadInputSchemaPropertyItemsItems();
            _resultValue.description = description;
            _resultValue.itemsJson = itemsJson;
            _resultValue.propertiesJson = propertiesJson;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
