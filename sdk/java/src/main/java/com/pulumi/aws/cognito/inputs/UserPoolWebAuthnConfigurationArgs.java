// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cognito.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UserPoolWebAuthnConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final UserPoolWebAuthnConfigurationArgs Empty = new UserPoolWebAuthnConfigurationArgs();

    /**
     * The authentication domain that passkeys providers use as a relying party.
     * 
     */
    @Import(name="relyingPartyId")
    private @Nullable Output<String> relyingPartyId;

    /**
     * @return The authentication domain that passkeys providers use as a relying party.
     * 
     */
    public Optional<Output<String>> relyingPartyId() {
        return Optional.ofNullable(this.relyingPartyId);
    }

    /**
     * If your user pool should require a passkey. Must be one of `required` or `preferred`.
     * 
     */
    @Import(name="userVerification")
    private @Nullable Output<String> userVerification;

    /**
     * @return If your user pool should require a passkey. Must be one of `required` or `preferred`.
     * 
     */
    public Optional<Output<String>> userVerification() {
        return Optional.ofNullable(this.userVerification);
    }

    private UserPoolWebAuthnConfigurationArgs() {}

    private UserPoolWebAuthnConfigurationArgs(UserPoolWebAuthnConfigurationArgs $) {
        this.relyingPartyId = $.relyingPartyId;
        this.userVerification = $.userVerification;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserPoolWebAuthnConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserPoolWebAuthnConfigurationArgs $;

        public Builder() {
            $ = new UserPoolWebAuthnConfigurationArgs();
        }

        public Builder(UserPoolWebAuthnConfigurationArgs defaults) {
            $ = new UserPoolWebAuthnConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param relyingPartyId The authentication domain that passkeys providers use as a relying party.
         * 
         * @return builder
         * 
         */
        public Builder relyingPartyId(@Nullable Output<String> relyingPartyId) {
            $.relyingPartyId = relyingPartyId;
            return this;
        }

        /**
         * @param relyingPartyId The authentication domain that passkeys providers use as a relying party.
         * 
         * @return builder
         * 
         */
        public Builder relyingPartyId(String relyingPartyId) {
            return relyingPartyId(Output.of(relyingPartyId));
        }

        /**
         * @param userVerification If your user pool should require a passkey. Must be one of `required` or `preferred`.
         * 
         * @return builder
         * 
         */
        public Builder userVerification(@Nullable Output<String> userVerification) {
            $.userVerification = userVerification;
            return this;
        }

        /**
         * @param userVerification If your user pool should require a passkey. Must be one of `required` or `preferred`.
         * 
         * @return builder
         * 
         */
        public Builder userVerification(String userVerification) {
            return userVerification(Output.of(userVerification));
        }

        public UserPoolWebAuthnConfigurationArgs build() {
            return $;
        }
    }

}
