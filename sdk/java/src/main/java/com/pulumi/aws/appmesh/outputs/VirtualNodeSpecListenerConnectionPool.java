// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.outputs;

import com.pulumi.aws.appmesh.outputs.VirtualNodeSpecListenerConnectionPoolGrpc;
import com.pulumi.aws.appmesh.outputs.VirtualNodeSpecListenerConnectionPoolHttp2;
import com.pulumi.aws.appmesh.outputs.VirtualNodeSpecListenerConnectionPoolHttp;
import com.pulumi.aws.appmesh.outputs.VirtualNodeSpecListenerConnectionPoolTcp;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VirtualNodeSpecListenerConnectionPool {
    /**
     * @return Connection pool information for gRPC listeners.
     * 
     */
    private @Nullable VirtualNodeSpecListenerConnectionPoolGrpc grpc;
    /**
     * @return Connection pool information for HTTP listeners.
     * 
     */
    private @Nullable VirtualNodeSpecListenerConnectionPoolHttp http;
    /**
     * @return Connection pool information for HTTP2 listeners.
     * 
     */
    private @Nullable VirtualNodeSpecListenerConnectionPoolHttp2 http2;
    /**
     * @return Connection pool information for TCP listeners.
     * 
     */
    private @Nullable VirtualNodeSpecListenerConnectionPoolTcp tcp;

    private VirtualNodeSpecListenerConnectionPool() {}
    /**
     * @return Connection pool information for gRPC listeners.
     * 
     */
    public Optional<VirtualNodeSpecListenerConnectionPoolGrpc> grpc() {
        return Optional.ofNullable(this.grpc);
    }
    /**
     * @return Connection pool information for HTTP listeners.
     * 
     */
    public Optional<VirtualNodeSpecListenerConnectionPoolHttp> http() {
        return Optional.ofNullable(this.http);
    }
    /**
     * @return Connection pool information for HTTP2 listeners.
     * 
     */
    public Optional<VirtualNodeSpecListenerConnectionPoolHttp2> http2() {
        return Optional.ofNullable(this.http2);
    }
    /**
     * @return Connection pool information for TCP listeners.
     * 
     */
    public Optional<VirtualNodeSpecListenerConnectionPoolTcp> tcp() {
        return Optional.ofNullable(this.tcp);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualNodeSpecListenerConnectionPool defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable VirtualNodeSpecListenerConnectionPoolGrpc grpc;
        private @Nullable VirtualNodeSpecListenerConnectionPoolHttp http;
        private @Nullable VirtualNodeSpecListenerConnectionPoolHttp2 http2;
        private @Nullable VirtualNodeSpecListenerConnectionPoolTcp tcp;
        public Builder() {}
        public Builder(VirtualNodeSpecListenerConnectionPool defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.grpc = defaults.grpc;
    	      this.http = defaults.http;
    	      this.http2 = defaults.http2;
    	      this.tcp = defaults.tcp;
        }

        @CustomType.Setter
        public Builder grpc(@Nullable VirtualNodeSpecListenerConnectionPoolGrpc grpc) {
            this.grpc = grpc;
            return this;
        }
        @CustomType.Setter
        public Builder http(@Nullable VirtualNodeSpecListenerConnectionPoolHttp http) {
            this.http = http;
            return this;
        }
        @CustomType.Setter
        public Builder http2(@Nullable VirtualNodeSpecListenerConnectionPoolHttp2 http2) {
            this.http2 = http2;
            return this;
        }
        @CustomType.Setter
        public Builder tcp(@Nullable VirtualNodeSpecListenerConnectionPoolTcp tcp) {
            this.tcp = tcp;
            return this;
        }
        public VirtualNodeSpecListenerConnectionPool build() {
            final var o = new VirtualNodeSpecListenerConnectionPool();
            o.grpc = grpc;
            o.http = http;
            o.http2 = http2;
            o.tcp = tcp;
            return o;
        }
    }
}
