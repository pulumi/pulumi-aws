// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataLabelsOptionsDataLabelTypeDataPathLabelTypeArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataLabelsOptionsDataLabelTypeDataPathLabelTypeArgs Empty = new DataLabelsOptionsDataLabelTypeDataPathLabelTypeArgs();

    @Import(name="fieldId")
    private @Nullable Output<String> fieldId;

    public Optional<Output<String>> fieldId() {
        return Optional.ofNullable(this.fieldId);
    }

    @Import(name="fieldValue")
    private @Nullable Output<String> fieldValue;

    public Optional<Output<String>> fieldValue() {
        return Optional.ofNullable(this.fieldValue);
    }

    @Import(name="visibility")
    private @Nullable Output<String> visibility;

    public Optional<Output<String>> visibility() {
        return Optional.ofNullable(this.visibility);
    }

    private DataLabelsOptionsDataLabelTypeDataPathLabelTypeArgs() {}

    private DataLabelsOptionsDataLabelTypeDataPathLabelTypeArgs(DataLabelsOptionsDataLabelTypeDataPathLabelTypeArgs $) {
        this.fieldId = $.fieldId;
        this.fieldValue = $.fieldValue;
        this.visibility = $.visibility;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataLabelsOptionsDataLabelTypeDataPathLabelTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataLabelsOptionsDataLabelTypeDataPathLabelTypeArgs $;

        public Builder() {
            $ = new DataLabelsOptionsDataLabelTypeDataPathLabelTypeArgs();
        }

        public Builder(DataLabelsOptionsDataLabelTypeDataPathLabelTypeArgs defaults) {
            $ = new DataLabelsOptionsDataLabelTypeDataPathLabelTypeArgs(Objects.requireNonNull(defaults));
        }

        public Builder fieldId(@Nullable Output<String> fieldId) {
            $.fieldId = fieldId;
            return this;
        }

        public Builder fieldId(String fieldId) {
            return fieldId(Output.of(fieldId));
        }

        public Builder fieldValue(@Nullable Output<String> fieldValue) {
            $.fieldValue = fieldValue;
            return this;
        }

        public Builder fieldValue(String fieldValue) {
            return fieldValue(Output.of(fieldValue));
        }

        public Builder visibility(@Nullable Output<String> visibility) {
            $.visibility = visibility;
            return this;
        }

        public Builder visibility(String visibility) {
            return visibility(Output.of(visibility));
        }

        public DataLabelsOptionsDataLabelTypeDataPathLabelTypeArgs build() {
            return $;
        }
    }

}
