// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codebuild.outputs;

import com.pulumi.aws.codebuild.outputs.GetFleetScalingConfigurationTargetTrackingScalingConfig;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetFleetScalingConfiguration {
    /**
     * @return The desired number of instances in the ﬂeet when auto-scaling.
     * 
     */
    private Integer desiredCapacity;
    /**
     * @return The maximum number of instances in the ﬂeet when auto-scaling.
     * 
     */
    private Integer maxCapacity;
    /**
     * @return The scaling type for a compute fleet.
     * 
     */
    private String scalingType;
    /**
     * @return Nested attribute containing information about thresholds when new instance is auto-scaled into the compute fleet.
     * 
     */
    private List<GetFleetScalingConfigurationTargetTrackingScalingConfig> targetTrackingScalingConfigs;

    private GetFleetScalingConfiguration() {}
    /**
     * @return The desired number of instances in the ﬂeet when auto-scaling.
     * 
     */
    public Integer desiredCapacity() {
        return this.desiredCapacity;
    }
    /**
     * @return The maximum number of instances in the ﬂeet when auto-scaling.
     * 
     */
    public Integer maxCapacity() {
        return this.maxCapacity;
    }
    /**
     * @return The scaling type for a compute fleet.
     * 
     */
    public String scalingType() {
        return this.scalingType;
    }
    /**
     * @return Nested attribute containing information about thresholds when new instance is auto-scaled into the compute fleet.
     * 
     */
    public List<GetFleetScalingConfigurationTargetTrackingScalingConfig> targetTrackingScalingConfigs() {
        return this.targetTrackingScalingConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFleetScalingConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer desiredCapacity;
        private Integer maxCapacity;
        private String scalingType;
        private List<GetFleetScalingConfigurationTargetTrackingScalingConfig> targetTrackingScalingConfigs;
        public Builder() {}
        public Builder(GetFleetScalingConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.desiredCapacity = defaults.desiredCapacity;
    	      this.maxCapacity = defaults.maxCapacity;
    	      this.scalingType = defaults.scalingType;
    	      this.targetTrackingScalingConfigs = defaults.targetTrackingScalingConfigs;
        }

        @CustomType.Setter
        public Builder desiredCapacity(Integer desiredCapacity) {
            if (desiredCapacity == null) {
              throw new MissingRequiredPropertyException("GetFleetScalingConfiguration", "desiredCapacity");
            }
            this.desiredCapacity = desiredCapacity;
            return this;
        }
        @CustomType.Setter
        public Builder maxCapacity(Integer maxCapacity) {
            if (maxCapacity == null) {
              throw new MissingRequiredPropertyException("GetFleetScalingConfiguration", "maxCapacity");
            }
            this.maxCapacity = maxCapacity;
            return this;
        }
        @CustomType.Setter
        public Builder scalingType(String scalingType) {
            if (scalingType == null) {
              throw new MissingRequiredPropertyException("GetFleetScalingConfiguration", "scalingType");
            }
            this.scalingType = scalingType;
            return this;
        }
        @CustomType.Setter
        public Builder targetTrackingScalingConfigs(List<GetFleetScalingConfigurationTargetTrackingScalingConfig> targetTrackingScalingConfigs) {
            if (targetTrackingScalingConfigs == null) {
              throw new MissingRequiredPropertyException("GetFleetScalingConfiguration", "targetTrackingScalingConfigs");
            }
            this.targetTrackingScalingConfigs = targetTrackingScalingConfigs;
            return this;
        }
        public Builder targetTrackingScalingConfigs(GetFleetScalingConfigurationTargetTrackingScalingConfig... targetTrackingScalingConfigs) {
            return targetTrackingScalingConfigs(List.of(targetTrackingScalingConfigs));
        }
        public GetFleetScalingConfiguration build() {
            final var _resultValue = new GetFleetScalingConfiguration();
            _resultValue.desiredCapacity = desiredCapacity;
            _resultValue.maxCapacity = maxCapacity;
            _resultValue.scalingType = scalingType;
            _resultValue.targetTrackingScalingConfigs = targetTrackingScalingConfigs;
            return _resultValue;
        }
    }
}
