// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.wafv2.inputs;

import com.pulumi.aws.wafv2.inputs.WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideActionToUseArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideArgs Empty = new WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideArgs();

    /**
     * Action to use instead of the rule&#39;s original action. See below.
     * 
     */
    @Import(name="actionToUse")
    private @Nullable Output<WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideActionToUseArgs> actionToUse;

    /**
     * @return Action to use instead of the rule&#39;s original action. See below.
     * 
     */
    public Optional<Output<WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideActionToUseArgs>> actionToUse() {
        return Optional.ofNullable(this.actionToUse);
    }

    /**
     * Name of the rule to override within the rule group. Verify the name carefully. With managed rule groups, WAF silently ignores any override that uses an invalid rule name. With customer-owned rule groups, invalid rule names in your overrides will cause web ACL updates to fail. An invalid rule name is any name that doesn&#39;t exactly match the case-sensitive name of an existing rule in the rule group.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of the rule to override within the rule group. Verify the name carefully. With managed rule groups, WAF silently ignores any override that uses an invalid rule name. With customer-owned rule groups, invalid rule names in your overrides will cause web ACL updates to fail. An invalid rule name is any name that doesn&#39;t exactly match the case-sensitive name of an existing rule in the rule group.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideArgs() {}

    private WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideArgs(WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideArgs $) {
        this.actionToUse = $.actionToUse;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideArgs $;

        public Builder() {
            $ = new WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideArgs();
        }

        public Builder(WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideArgs defaults) {
            $ = new WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actionToUse Action to use instead of the rule&#39;s original action. See below.
         * 
         * @return builder
         * 
         */
        public Builder actionToUse(@Nullable Output<WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideActionToUseArgs> actionToUse) {
            $.actionToUse = actionToUse;
            return this;
        }

        /**
         * @param actionToUse Action to use instead of the rule&#39;s original action. See below.
         * 
         * @return builder
         * 
         */
        public Builder actionToUse(WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideActionToUseArgs actionToUse) {
            return actionToUse(Output.of(actionToUse));
        }

        /**
         * @param name Name of the rule to override within the rule group. Verify the name carefully. With managed rule groups, WAF silently ignores any override that uses an invalid rule name. With customer-owned rule groups, invalid rule names in your overrides will cause web ACL updates to fail. An invalid rule name is any name that doesn&#39;t exactly match the case-sensitive name of an existing rule in the rule group.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the rule to override within the rule group. Verify the name carefully. With managed rule groups, WAF silently ignores any override that uses an invalid rule name. With customer-owned rule groups, invalid rule names in your overrides will cause web ACL updates to fail. An invalid rule name is any name that doesn&#39;t exactly match the case-sensitive name of an existing rule in the rule group.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideArgs", "name");
            }
            return $;
        }
    }

}
