// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appflow.inputs;

import com.pulumi.aws.appflow.inputs.FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftArgs Empty = new FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftArgs();

    /**
     * Amazon S3 bucket prefix.
     * 
     */
    @Import(name="bucketPrefix")
    private @Nullable Output<String> bucketPrefix;

    /**
     * @return Amazon S3 bucket prefix.
     * 
     */
    public Optional<Output<String>> bucketPrefix() {
        return Optional.ofNullable(this.bucketPrefix);
    }

    /**
     * Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
     * 
     */
    @Import(name="errorHandlingConfig")
    private @Nullable Output<FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigArgs> errorHandlingConfig;

    /**
     * @return Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
     * 
     */
    public Optional<Output<FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigArgs>> errorHandlingConfig() {
        return Optional.ofNullable(this.errorHandlingConfig);
    }

    /**
     * Intermediate bucket that Amazon AppFlow uses when moving data into Amazon Redshift.
     * 
     */
    @Import(name="intermediateBucketName", required=true)
    private Output<String> intermediateBucketName;

    /**
     * @return Intermediate bucket that Amazon AppFlow uses when moving data into Amazon Redshift.
     * 
     */
    public Output<String> intermediateBucketName() {
        return this.intermediateBucketName;
    }

    /**
     * Object specified in the flow destination.
     * 
     */
    @Import(name="object", required=true)
    private Output<String> object;

    /**
     * @return Object specified in the flow destination.
     * 
     */
    public Output<String> object() {
        return this.object;
    }

    private FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftArgs() {}

    private FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftArgs(FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftArgs $) {
        this.bucketPrefix = $.bucketPrefix;
        this.errorHandlingConfig = $.errorHandlingConfig;
        this.intermediateBucketName = $.intermediateBucketName;
        this.object = $.object;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftArgs $;

        public Builder() {
            $ = new FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftArgs();
        }

        public Builder(FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftArgs defaults) {
            $ = new FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucketPrefix Amazon S3 bucket prefix.
         * 
         * @return builder
         * 
         */
        public Builder bucketPrefix(@Nullable Output<String> bucketPrefix) {
            $.bucketPrefix = bucketPrefix;
            return this;
        }

        /**
         * @param bucketPrefix Amazon S3 bucket prefix.
         * 
         * @return builder
         * 
         */
        public Builder bucketPrefix(String bucketPrefix) {
            return bucketPrefix(Output.of(bucketPrefix));
        }

        /**
         * @param errorHandlingConfig Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
         * 
         * @return builder
         * 
         */
        public Builder errorHandlingConfig(@Nullable Output<FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigArgs> errorHandlingConfig) {
            $.errorHandlingConfig = errorHandlingConfig;
            return this;
        }

        /**
         * @param errorHandlingConfig Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
         * 
         * @return builder
         * 
         */
        public Builder errorHandlingConfig(FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigArgs errorHandlingConfig) {
            return errorHandlingConfig(Output.of(errorHandlingConfig));
        }

        /**
         * @param intermediateBucketName Intermediate bucket that Amazon AppFlow uses when moving data into Amazon Redshift.
         * 
         * @return builder
         * 
         */
        public Builder intermediateBucketName(Output<String> intermediateBucketName) {
            $.intermediateBucketName = intermediateBucketName;
            return this;
        }

        /**
         * @param intermediateBucketName Intermediate bucket that Amazon AppFlow uses when moving data into Amazon Redshift.
         * 
         * @return builder
         * 
         */
        public Builder intermediateBucketName(String intermediateBucketName) {
            return intermediateBucketName(Output.of(intermediateBucketName));
        }

        /**
         * @param object Object specified in the flow destination.
         * 
         * @return builder
         * 
         */
        public Builder object(Output<String> object) {
            $.object = object;
            return this;
        }

        /**
         * @param object Object specified in the flow destination.
         * 
         * @return builder
         * 
         */
        public Builder object(String object) {
            return object(Output.of(object));
        }

        public FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftArgs build() {
            $.intermediateBucketName = Objects.requireNonNull($.intermediateBucketName, "expected parameter 'intermediateBucketName' to be non-null");
            $.object = Objects.requireNonNull($.object, "expected parameter 'object' to be non-null");
            return $;
        }
    }

}
