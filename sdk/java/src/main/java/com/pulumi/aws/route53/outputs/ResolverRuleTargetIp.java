// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.route53.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ResolverRuleTargetIp {
    /**
     * @return One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.
     * 
     */
    private @Nullable String ip;
    /**
     * @return One IPv6 address that you want to forward DNS queries to.
     * 
     */
    private @Nullable String ipv6;
    /**
     * @return Port at `ip` that you want to forward DNS queries to. Default value is `53`.
     * 
     */
    private @Nullable Integer port;
    /**
     * @return Protocol for the resolver endpoint. Valid values can be found in the [AWS documentation](https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_TargetAddress.html). Default value is `Do53`.
     * 
     */
    private @Nullable String protocol;

    private ResolverRuleTargetIp() {}
    /**
     * @return One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.
     * 
     */
    public Optional<String> ip() {
        return Optional.ofNullable(this.ip);
    }
    /**
     * @return One IPv6 address that you want to forward DNS queries to.
     * 
     */
    public Optional<String> ipv6() {
        return Optional.ofNullable(this.ipv6);
    }
    /**
     * @return Port at `ip` that you want to forward DNS queries to. Default value is `53`.
     * 
     */
    public Optional<Integer> port() {
        return Optional.ofNullable(this.port);
    }
    /**
     * @return Protocol for the resolver endpoint. Valid values can be found in the [AWS documentation](https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_TargetAddress.html). Default value is `Do53`.
     * 
     */
    public Optional<String> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResolverRuleTargetIp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String ip;
        private @Nullable String ipv6;
        private @Nullable Integer port;
        private @Nullable String protocol;
        public Builder() {}
        public Builder(ResolverRuleTargetIp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ip = defaults.ip;
    	      this.ipv6 = defaults.ipv6;
    	      this.port = defaults.port;
    	      this.protocol = defaults.protocol;
        }

        @CustomType.Setter
        public Builder ip(@Nullable String ip) {

            this.ip = ip;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6(@Nullable String ipv6) {

            this.ipv6 = ipv6;
            return this;
        }
        @CustomType.Setter
        public Builder port(@Nullable Integer port) {

            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(@Nullable String protocol) {

            this.protocol = protocol;
            return this;
        }
        public ResolverRuleTargetIp build() {
            final var _resultValue = new ResolverRuleTargetIp();
            _resultValue.ip = ip;
            _resultValue.ipv6 = ipv6;
            _resultValue.port = port;
            _resultValue.protocol = protocol;
            return _resultValue;
        }
    }
}
