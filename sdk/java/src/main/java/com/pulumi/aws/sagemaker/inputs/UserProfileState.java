// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker.inputs;

import com.pulumi.aws.sagemaker.inputs.UserProfileUserSettingsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UserProfileState extends com.pulumi.resources.ResourceArgs {

    public static final UserProfileState Empty = new UserProfileState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="domainId")
    private @Nullable Output<String> domainId;

    public Optional<Output<String>> domainId() {
        return Optional.ofNullable(this.domainId);
    }

    @Import(name="homeEfsFileSystemUid")
    private @Nullable Output<String> homeEfsFileSystemUid;

    public Optional<Output<String>> homeEfsFileSystemUid() {
        return Optional.ofNullable(this.homeEfsFileSystemUid);
    }

    @Import(name="singleSignOnUserIdentifier")
    private @Nullable Output<String> singleSignOnUserIdentifier;

    public Optional<Output<String>> singleSignOnUserIdentifier() {
        return Optional.ofNullable(this.singleSignOnUserIdentifier);
    }

    @Import(name="singleSignOnUserValue")
    private @Nullable Output<String> singleSignOnUserValue;

    public Optional<Output<String>> singleSignOnUserValue() {
        return Optional.ofNullable(this.singleSignOnUserValue);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="userProfileName")
    private @Nullable Output<String> userProfileName;

    public Optional<Output<String>> userProfileName() {
        return Optional.ofNullable(this.userProfileName);
    }

    @Import(name="userSettings")
    private @Nullable Output<UserProfileUserSettingsArgs> userSettings;

    public Optional<Output<UserProfileUserSettingsArgs>> userSettings() {
        return Optional.ofNullable(this.userSettings);
    }

    private UserProfileState() {}

    private UserProfileState(UserProfileState $) {
        this.arn = $.arn;
        this.domainId = $.domainId;
        this.homeEfsFileSystemUid = $.homeEfsFileSystemUid;
        this.singleSignOnUserIdentifier = $.singleSignOnUserIdentifier;
        this.singleSignOnUserValue = $.singleSignOnUserValue;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.userProfileName = $.userProfileName;
        this.userSettings = $.userSettings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserProfileState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserProfileState $;

        public Builder() {
            $ = new UserProfileState();
        }

        public Builder(UserProfileState defaults) {
            $ = new UserProfileState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder domainId(@Nullable Output<String> domainId) {
            $.domainId = domainId;
            return this;
        }

        public Builder domainId(String domainId) {
            return domainId(Output.of(domainId));
        }

        public Builder homeEfsFileSystemUid(@Nullable Output<String> homeEfsFileSystemUid) {
            $.homeEfsFileSystemUid = homeEfsFileSystemUid;
            return this;
        }

        public Builder homeEfsFileSystemUid(String homeEfsFileSystemUid) {
            return homeEfsFileSystemUid(Output.of(homeEfsFileSystemUid));
        }

        public Builder singleSignOnUserIdentifier(@Nullable Output<String> singleSignOnUserIdentifier) {
            $.singleSignOnUserIdentifier = singleSignOnUserIdentifier;
            return this;
        }

        public Builder singleSignOnUserIdentifier(String singleSignOnUserIdentifier) {
            return singleSignOnUserIdentifier(Output.of(singleSignOnUserIdentifier));
        }

        public Builder singleSignOnUserValue(@Nullable Output<String> singleSignOnUserValue) {
            $.singleSignOnUserValue = singleSignOnUserValue;
            return this;
        }

        public Builder singleSignOnUserValue(String singleSignOnUserValue) {
            return singleSignOnUserValue(Output.of(singleSignOnUserValue));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder userProfileName(@Nullable Output<String> userProfileName) {
            $.userProfileName = userProfileName;
            return this;
        }

        public Builder userProfileName(String userProfileName) {
            return userProfileName(Output.of(userProfileName));
        }

        public Builder userSettings(@Nullable Output<UserProfileUserSettingsArgs> userSettings) {
            $.userSettings = userSettings;
            return this;
        }

        public Builder userSettings(UserProfileUserSettingsArgs userSettings) {
            return userSettings(Output.of(userSettings));
        }

        public UserProfileState build() {
            return $;
        }
    }

}
