// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VisualCustomActionsActionOperationFilterOperationTargetVisualsConfigurationSameSheetTargetVisualConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final VisualCustomActionsActionOperationFilterOperationTargetVisualsConfigurationSameSheetTargetVisualConfigurationArgs Empty = new VisualCustomActionsActionOperationFilterOperationTargetVisualsConfigurationSameSheetTargetVisualConfigurationArgs();

    @Import(name="targetVisualOption")
    private @Nullable Output<String> targetVisualOption;

    public Optional<Output<String>> targetVisualOption() {
        return Optional.ofNullable(this.targetVisualOption);
    }

    @Import(name="targetVisuals")
    private @Nullable Output<List<String>> targetVisuals;

    public Optional<Output<List<String>>> targetVisuals() {
        return Optional.ofNullable(this.targetVisuals);
    }

    private VisualCustomActionsActionOperationFilterOperationTargetVisualsConfigurationSameSheetTargetVisualConfigurationArgs() {}

    private VisualCustomActionsActionOperationFilterOperationTargetVisualsConfigurationSameSheetTargetVisualConfigurationArgs(VisualCustomActionsActionOperationFilterOperationTargetVisualsConfigurationSameSheetTargetVisualConfigurationArgs $) {
        this.targetVisualOption = $.targetVisualOption;
        this.targetVisuals = $.targetVisuals;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VisualCustomActionsActionOperationFilterOperationTargetVisualsConfigurationSameSheetTargetVisualConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VisualCustomActionsActionOperationFilterOperationTargetVisualsConfigurationSameSheetTargetVisualConfigurationArgs $;

        public Builder() {
            $ = new VisualCustomActionsActionOperationFilterOperationTargetVisualsConfigurationSameSheetTargetVisualConfigurationArgs();
        }

        public Builder(VisualCustomActionsActionOperationFilterOperationTargetVisualsConfigurationSameSheetTargetVisualConfigurationArgs defaults) {
            $ = new VisualCustomActionsActionOperationFilterOperationTargetVisualsConfigurationSameSheetTargetVisualConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder targetVisualOption(@Nullable Output<String> targetVisualOption) {
            $.targetVisualOption = targetVisualOption;
            return this;
        }

        public Builder targetVisualOption(String targetVisualOption) {
            return targetVisualOption(Output.of(targetVisualOption));
        }

        public Builder targetVisuals(@Nullable Output<List<String>> targetVisuals) {
            $.targetVisuals = targetVisuals;
            return this;
        }

        public Builder targetVisuals(List<String> targetVisuals) {
            return targetVisuals(Output.of(targetVisuals));
        }

        public Builder targetVisuals(String... targetVisuals) {
            return targetVisuals(List.of(targetVisuals));
        }

        public VisualCustomActionsActionOperationFilterOperationTargetVisualsConfigurationSameSheetTargetVisualConfigurationArgs build() {
            return $;
        }
    }

}
