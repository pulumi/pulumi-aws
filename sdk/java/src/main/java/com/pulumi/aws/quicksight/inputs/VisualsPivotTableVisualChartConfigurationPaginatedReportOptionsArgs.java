// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VisualsPivotTableVisualChartConfigurationPaginatedReportOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final VisualsPivotTableVisualChartConfigurationPaginatedReportOptionsArgs Empty = new VisualsPivotTableVisualChartConfigurationPaginatedReportOptionsArgs();

    @Import(name="overflowColumnHeaderVisibility")
    private @Nullable Output<String> overflowColumnHeaderVisibility;

    public Optional<Output<String>> overflowColumnHeaderVisibility() {
        return Optional.ofNullable(this.overflowColumnHeaderVisibility);
    }

    @Import(name="verticalOverflowVisibility")
    private @Nullable Output<String> verticalOverflowVisibility;

    public Optional<Output<String>> verticalOverflowVisibility() {
        return Optional.ofNullable(this.verticalOverflowVisibility);
    }

    private VisualsPivotTableVisualChartConfigurationPaginatedReportOptionsArgs() {}

    private VisualsPivotTableVisualChartConfigurationPaginatedReportOptionsArgs(VisualsPivotTableVisualChartConfigurationPaginatedReportOptionsArgs $) {
        this.overflowColumnHeaderVisibility = $.overflowColumnHeaderVisibility;
        this.verticalOverflowVisibility = $.verticalOverflowVisibility;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VisualsPivotTableVisualChartConfigurationPaginatedReportOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VisualsPivotTableVisualChartConfigurationPaginatedReportOptionsArgs $;

        public Builder() {
            $ = new VisualsPivotTableVisualChartConfigurationPaginatedReportOptionsArgs();
        }

        public Builder(VisualsPivotTableVisualChartConfigurationPaginatedReportOptionsArgs defaults) {
            $ = new VisualsPivotTableVisualChartConfigurationPaginatedReportOptionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder overflowColumnHeaderVisibility(@Nullable Output<String> overflowColumnHeaderVisibility) {
            $.overflowColumnHeaderVisibility = overflowColumnHeaderVisibility;
            return this;
        }

        public Builder overflowColumnHeaderVisibility(String overflowColumnHeaderVisibility) {
            return overflowColumnHeaderVisibility(Output.of(overflowColumnHeaderVisibility));
        }

        public Builder verticalOverflowVisibility(@Nullable Output<String> verticalOverflowVisibility) {
            $.verticalOverflowVisibility = verticalOverflowVisibility;
            return this;
        }

        public Builder verticalOverflowVisibility(String verticalOverflowVisibility) {
            return verticalOverflowVisibility(Output.of(verticalOverflowVisibility));
        }

        public VisualsPivotTableVisualChartConfigurationPaginatedReportOptionsArgs build() {
            return $;
        }
    }

}
