// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.LegendOptionsArgs;
import com.pulumi.aws.quicksight.inputs.TooltipOptionsArgs;
import com.pulumi.aws.quicksight.inputs.VisualPaletteArgs;
import com.pulumi.aws.quicksight.inputs.VisualsGeospatialMapVisualChartConfigurationFieldWellsArgs;
import com.pulumi.aws.quicksight.inputs.VisualsGeospatialMapVisualChartConfigurationMapStyleOptionsArgs;
import com.pulumi.aws.quicksight.inputs.VisualsGeospatialMapVisualChartConfigurationPointStyleOptionsArgs;
import com.pulumi.aws.quicksight.inputs.VisualsGeospatialMapVisualChartConfigurationWindowOptionsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VisualsGeospatialMapVisualChartConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final VisualsGeospatialMapVisualChartConfigurationArgs Empty = new VisualsGeospatialMapVisualChartConfigurationArgs();

    @Import(name="fieldWells")
    private @Nullable Output<VisualsGeospatialMapVisualChartConfigurationFieldWellsArgs> fieldWells;

    public Optional<Output<VisualsGeospatialMapVisualChartConfigurationFieldWellsArgs>> fieldWells() {
        return Optional.ofNullable(this.fieldWells);
    }

    @Import(name="legend")
    private @Nullable Output<LegendOptionsArgs> legend;

    public Optional<Output<LegendOptionsArgs>> legend() {
        return Optional.ofNullable(this.legend);
    }

    @Import(name="mapStyleOptions")
    private @Nullable Output<VisualsGeospatialMapVisualChartConfigurationMapStyleOptionsArgs> mapStyleOptions;

    public Optional<Output<VisualsGeospatialMapVisualChartConfigurationMapStyleOptionsArgs>> mapStyleOptions() {
        return Optional.ofNullable(this.mapStyleOptions);
    }

    @Import(name="pointStyleOptions")
    private @Nullable Output<VisualsGeospatialMapVisualChartConfigurationPointStyleOptionsArgs> pointStyleOptions;

    public Optional<Output<VisualsGeospatialMapVisualChartConfigurationPointStyleOptionsArgs>> pointStyleOptions() {
        return Optional.ofNullable(this.pointStyleOptions);
    }

    @Import(name="tooltip")
    private @Nullable Output<TooltipOptionsArgs> tooltip;

    public Optional<Output<TooltipOptionsArgs>> tooltip() {
        return Optional.ofNullable(this.tooltip);
    }

    @Import(name="visualPalette")
    private @Nullable Output<VisualPaletteArgs> visualPalette;

    public Optional<Output<VisualPaletteArgs>> visualPalette() {
        return Optional.ofNullable(this.visualPalette);
    }

    @Import(name="windowOptions")
    private @Nullable Output<VisualsGeospatialMapVisualChartConfigurationWindowOptionsArgs> windowOptions;

    public Optional<Output<VisualsGeospatialMapVisualChartConfigurationWindowOptionsArgs>> windowOptions() {
        return Optional.ofNullable(this.windowOptions);
    }

    private VisualsGeospatialMapVisualChartConfigurationArgs() {}

    private VisualsGeospatialMapVisualChartConfigurationArgs(VisualsGeospatialMapVisualChartConfigurationArgs $) {
        this.fieldWells = $.fieldWells;
        this.legend = $.legend;
        this.mapStyleOptions = $.mapStyleOptions;
        this.pointStyleOptions = $.pointStyleOptions;
        this.tooltip = $.tooltip;
        this.visualPalette = $.visualPalette;
        this.windowOptions = $.windowOptions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VisualsGeospatialMapVisualChartConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VisualsGeospatialMapVisualChartConfigurationArgs $;

        public Builder() {
            $ = new VisualsGeospatialMapVisualChartConfigurationArgs();
        }

        public Builder(VisualsGeospatialMapVisualChartConfigurationArgs defaults) {
            $ = new VisualsGeospatialMapVisualChartConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder fieldWells(@Nullable Output<VisualsGeospatialMapVisualChartConfigurationFieldWellsArgs> fieldWells) {
            $.fieldWells = fieldWells;
            return this;
        }

        public Builder fieldWells(VisualsGeospatialMapVisualChartConfigurationFieldWellsArgs fieldWells) {
            return fieldWells(Output.of(fieldWells));
        }

        public Builder legend(@Nullable Output<LegendOptionsArgs> legend) {
            $.legend = legend;
            return this;
        }

        public Builder legend(LegendOptionsArgs legend) {
            return legend(Output.of(legend));
        }

        public Builder mapStyleOptions(@Nullable Output<VisualsGeospatialMapVisualChartConfigurationMapStyleOptionsArgs> mapStyleOptions) {
            $.mapStyleOptions = mapStyleOptions;
            return this;
        }

        public Builder mapStyleOptions(VisualsGeospatialMapVisualChartConfigurationMapStyleOptionsArgs mapStyleOptions) {
            return mapStyleOptions(Output.of(mapStyleOptions));
        }

        public Builder pointStyleOptions(@Nullable Output<VisualsGeospatialMapVisualChartConfigurationPointStyleOptionsArgs> pointStyleOptions) {
            $.pointStyleOptions = pointStyleOptions;
            return this;
        }

        public Builder pointStyleOptions(VisualsGeospatialMapVisualChartConfigurationPointStyleOptionsArgs pointStyleOptions) {
            return pointStyleOptions(Output.of(pointStyleOptions));
        }

        public Builder tooltip(@Nullable Output<TooltipOptionsArgs> tooltip) {
            $.tooltip = tooltip;
            return this;
        }

        public Builder tooltip(TooltipOptionsArgs tooltip) {
            return tooltip(Output.of(tooltip));
        }

        public Builder visualPalette(@Nullable Output<VisualPaletteArgs> visualPalette) {
            $.visualPalette = visualPalette;
            return this;
        }

        public Builder visualPalette(VisualPaletteArgs visualPalette) {
            return visualPalette(Output.of(visualPalette));
        }

        public Builder windowOptions(@Nullable Output<VisualsGeospatialMapVisualChartConfigurationWindowOptionsArgs> windowOptions) {
            $.windowOptions = windowOptions;
            return this;
        }

        public Builder windowOptions(VisualsGeospatialMapVisualChartConfigurationWindowOptionsArgs windowOptions) {
            return windowOptions(Output.of(windowOptions));
        }

        public VisualsGeospatialMapVisualChartConfigurationArgs build() {
            return $;
        }
    }

}
