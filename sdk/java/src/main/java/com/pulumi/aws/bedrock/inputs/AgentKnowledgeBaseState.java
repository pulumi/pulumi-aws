// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.inputs;

import com.pulumi.aws.bedrock.inputs.AgentKnowledgeBaseKnowledgeBaseConfigurationArgs;
import com.pulumi.aws.bedrock.inputs.AgentKnowledgeBaseStorageConfigurationArgs;
import com.pulumi.aws.bedrock.inputs.AgentKnowledgeBaseTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AgentKnowledgeBaseState extends com.pulumi.resources.ResourceArgs {

    public static final AgentKnowledgeBaseState Empty = new AgentKnowledgeBaseState();

    /**
     * ARN of the knowledge base.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return ARN of the knowledge base.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * Time at which the knowledge base was created.
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return Time at which the knowledge base was created.
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * Description of the knowledge base.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the knowledge base.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="failureReasons")
    private @Nullable Output<List<String>> failureReasons;

    public Optional<Output<List<String>>> failureReasons() {
        return Optional.ofNullable(this.failureReasons);
    }

    /**
     * Details about the embeddings configuration of the knowledge base. See `knowledge_base_configuration` block for details.
     * 
     */
    @Import(name="knowledgeBaseConfiguration")
    private @Nullable Output<AgentKnowledgeBaseKnowledgeBaseConfigurationArgs> knowledgeBaseConfiguration;

    /**
     * @return Details about the embeddings configuration of the knowledge base. See `knowledge_base_configuration` block for details.
     * 
     */
    public Optional<Output<AgentKnowledgeBaseKnowledgeBaseConfigurationArgs>> knowledgeBaseConfiguration() {
        return Optional.ofNullable(this.knowledgeBaseConfiguration);
    }

    /**
     * Name of the knowledge base.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the knowledge base.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * ARN of the IAM role with permissions to invoke API operations on the knowledge base.
     * 
     */
    @Import(name="roleArn")
    private @Nullable Output<String> roleArn;

    /**
     * @return ARN of the IAM role with permissions to invoke API operations on the knowledge base.
     * 
     */
    public Optional<Output<String>> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }

    /**
     * Details about the storage configuration of the knowledge base. See `storage_configuration` block for details.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="storageConfiguration")
    private @Nullable Output<AgentKnowledgeBaseStorageConfigurationArgs> storageConfiguration;

    /**
     * @return Details about the storage configuration of the knowledge base. See `storage_configuration` block for details.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<AgentKnowledgeBaseStorageConfigurationArgs>> storageConfiguration() {
        return Optional.ofNullable(this.storageConfiguration);
    }

    /**
     * Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @return Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="timeouts")
    private @Nullable Output<AgentKnowledgeBaseTimeoutsArgs> timeouts;

    public Optional<Output<AgentKnowledgeBaseTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    /**
     * Time at which the knowledge base was last updated.
     * 
     */
    @Import(name="updatedAt")
    private @Nullable Output<String> updatedAt;

    /**
     * @return Time at which the knowledge base was last updated.
     * 
     */
    public Optional<Output<String>> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    private AgentKnowledgeBaseState() {}

    private AgentKnowledgeBaseState(AgentKnowledgeBaseState $) {
        this.arn = $.arn;
        this.createdAt = $.createdAt;
        this.description = $.description;
        this.failureReasons = $.failureReasons;
        this.knowledgeBaseConfiguration = $.knowledgeBaseConfiguration;
        this.name = $.name;
        this.roleArn = $.roleArn;
        this.storageConfiguration = $.storageConfiguration;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.timeouts = $.timeouts;
        this.updatedAt = $.updatedAt;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentKnowledgeBaseState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentKnowledgeBaseState $;

        public Builder() {
            $ = new AgentKnowledgeBaseState();
        }

        public Builder(AgentKnowledgeBaseState defaults) {
            $ = new AgentKnowledgeBaseState(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn ARN of the knowledge base.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn ARN of the knowledge base.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param createdAt Time at which the knowledge base was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt Time at which the knowledge base was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param description Description of the knowledge base.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the knowledge base.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder failureReasons(@Nullable Output<List<String>> failureReasons) {
            $.failureReasons = failureReasons;
            return this;
        }

        public Builder failureReasons(List<String> failureReasons) {
            return failureReasons(Output.of(failureReasons));
        }

        public Builder failureReasons(String... failureReasons) {
            return failureReasons(List.of(failureReasons));
        }

        /**
         * @param knowledgeBaseConfiguration Details about the embeddings configuration of the knowledge base. See `knowledge_base_configuration` block for details.
         * 
         * @return builder
         * 
         */
        public Builder knowledgeBaseConfiguration(@Nullable Output<AgentKnowledgeBaseKnowledgeBaseConfigurationArgs> knowledgeBaseConfiguration) {
            $.knowledgeBaseConfiguration = knowledgeBaseConfiguration;
            return this;
        }

        /**
         * @param knowledgeBaseConfiguration Details about the embeddings configuration of the knowledge base. See `knowledge_base_configuration` block for details.
         * 
         * @return builder
         * 
         */
        public Builder knowledgeBaseConfiguration(AgentKnowledgeBaseKnowledgeBaseConfigurationArgs knowledgeBaseConfiguration) {
            return knowledgeBaseConfiguration(Output.of(knowledgeBaseConfiguration));
        }

        /**
         * @param name Name of the knowledge base.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the knowledge base.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param roleArn ARN of the IAM role with permissions to invoke API operations on the knowledge base.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(@Nullable Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn ARN of the IAM role with permissions to invoke API operations on the knowledge base.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        /**
         * @param storageConfiguration Details about the storage configuration of the knowledge base. See `storage_configuration` block for details.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder storageConfiguration(@Nullable Output<AgentKnowledgeBaseStorageConfigurationArgs> storageConfiguration) {
            $.storageConfiguration = storageConfiguration;
            return this;
        }

        /**
         * @param storageConfiguration Details about the storage configuration of the knowledge base. See `storage_configuration` block for details.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder storageConfiguration(AgentKnowledgeBaseStorageConfigurationArgs storageConfiguration) {
            return storageConfiguration(Output.of(storageConfiguration));
        }

        /**
         * @param tags Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tagsAll Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @param tagsAll Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder timeouts(@Nullable Output<AgentKnowledgeBaseTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(AgentKnowledgeBaseTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        /**
         * @param updatedAt Time at which the knowledge base was last updated.
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(@Nullable Output<String> updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        /**
         * @param updatedAt Time at which the knowledge base was last updated.
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(String updatedAt) {
            return updatedAt(Output.of(updatedAt));
        }

        public AgentKnowledgeBaseState build() {
            return $;
        }
    }

}
