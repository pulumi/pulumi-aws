// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.redshiftserverless.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UsageLimitState extends com.pulumi.resources.ResourceArgs {

    public static final UsageLimitState Empty = new UsageLimitState();

    @Import(name="amount")
    private @Nullable Output<Integer> amount;

    public Optional<Output<Integer>> amount() {
        return Optional.ofNullable(this.amount);
    }

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="breachAction")
    private @Nullable Output<String> breachAction;

    public Optional<Output<String>> breachAction() {
        return Optional.ofNullable(this.breachAction);
    }

    @Import(name="period")
    private @Nullable Output<String> period;

    public Optional<Output<String>> period() {
        return Optional.ofNullable(this.period);
    }

    @Import(name="resourceArn")
    private @Nullable Output<String> resourceArn;

    public Optional<Output<String>> resourceArn() {
        return Optional.ofNullable(this.resourceArn);
    }

    @Import(name="usageType")
    private @Nullable Output<String> usageType;

    public Optional<Output<String>> usageType() {
        return Optional.ofNullable(this.usageType);
    }

    private UsageLimitState() {}

    private UsageLimitState(UsageLimitState $) {
        this.amount = $.amount;
        this.arn = $.arn;
        this.breachAction = $.breachAction;
        this.period = $.period;
        this.resourceArn = $.resourceArn;
        this.usageType = $.usageType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UsageLimitState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UsageLimitState $;

        public Builder() {
            $ = new UsageLimitState();
        }

        public Builder(UsageLimitState defaults) {
            $ = new UsageLimitState(Objects.requireNonNull(defaults));
        }

        public Builder amount(@Nullable Output<Integer> amount) {
            $.amount = amount;
            return this;
        }

        public Builder amount(Integer amount) {
            return amount(Output.of(amount));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder breachAction(@Nullable Output<String> breachAction) {
            $.breachAction = breachAction;
            return this;
        }

        public Builder breachAction(String breachAction) {
            return breachAction(Output.of(breachAction));
        }

        public Builder period(@Nullable Output<String> period) {
            $.period = period;
            return this;
        }

        public Builder period(String period) {
            return period(Output.of(period));
        }

        public Builder resourceArn(@Nullable Output<String> resourceArn) {
            $.resourceArn = resourceArn;
            return this;
        }

        public Builder resourceArn(String resourceArn) {
            return resourceArn(Output.of(resourceArn));
        }

        public Builder usageType(@Nullable Output<String> usageType) {
            $.usageType = usageType;
            return this;
        }

        public Builder usageType(String usageType) {
            return usageType(Output.of(usageType));
        }

        public UsageLimitState build() {
            return $;
        }
    }

}
