// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lex.inputs;

import com.pulumi.aws.lex.inputs.V2modelsIntentConfirmationSettingPromptSpecificationPromptAttemptsSpecificationAllowedInputTypesArgs;
import com.pulumi.aws.lex.inputs.V2modelsIntentConfirmationSettingPromptSpecificationPromptAttemptsSpecificationAudioAndDtmfInputSpecificationArgs;
import com.pulumi.aws.lex.inputs.V2modelsIntentConfirmationSettingPromptSpecificationPromptAttemptsSpecificationTextInputSpecificationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class V2modelsIntentConfirmationSettingPromptSpecificationPromptAttemptsSpecificationArgs extends com.pulumi.resources.ResourceArgs {

    public static final V2modelsIntentConfirmationSettingPromptSpecificationPromptAttemptsSpecificationArgs Empty = new V2modelsIntentConfirmationSettingPromptSpecificationPromptAttemptsSpecificationArgs();

    /**
     * Whether the user can interrupt a speech prompt attempt from the bot.
     * 
     */
    @Import(name="allowInterrupt")
    private @Nullable Output<Boolean> allowInterrupt;

    /**
     * @return Whether the user can interrupt a speech prompt attempt from the bot.
     * 
     */
    public Optional<Output<Boolean>> allowInterrupt() {
        return Optional.ofNullable(this.allowInterrupt);
    }

    /**
     * Configuration block for the allowed input types of the prompt attempt. See `allowed_input_types`.
     * 
     */
    @Import(name="allowedInputTypes", required=true)
    private Output<V2modelsIntentConfirmationSettingPromptSpecificationPromptAttemptsSpecificationAllowedInputTypesArgs> allowedInputTypes;

    /**
     * @return Configuration block for the allowed input types of the prompt attempt. See `allowed_input_types`.
     * 
     */
    public Output<V2modelsIntentConfirmationSettingPromptSpecificationPromptAttemptsSpecificationAllowedInputTypesArgs> allowedInputTypes() {
        return this.allowedInputTypes;
    }

    /**
     * Configuration block for settings on audio and DTMF input. See `audio_and_dtmf_input_specification`.
     * 
     */
    @Import(name="audioAndDtmfInputSpecification")
    private @Nullable Output<V2modelsIntentConfirmationSettingPromptSpecificationPromptAttemptsSpecificationAudioAndDtmfInputSpecificationArgs> audioAndDtmfInputSpecification;

    /**
     * @return Configuration block for settings on audio and DTMF input. See `audio_and_dtmf_input_specification`.
     * 
     */
    public Optional<Output<V2modelsIntentConfirmationSettingPromptSpecificationPromptAttemptsSpecificationAudioAndDtmfInputSpecificationArgs>> audioAndDtmfInputSpecification() {
        return Optional.ofNullable(this.audioAndDtmfInputSpecification);
    }

    /**
     * Which attempt to configure. Valid values are `Initial`, `Retry1`, `Retry2`, `Retry3`, `Retry4`, `Retry5`.
     * 
     */
    @Import(name="mapBlockKey", required=true)
    private Output<String> mapBlockKey;

    /**
     * @return Which attempt to configure. Valid values are `Initial`, `Retry1`, `Retry2`, `Retry3`, `Retry4`, `Retry5`.
     * 
     */
    public Output<String> mapBlockKey() {
        return this.mapBlockKey;
    }

    /**
     * Configuration block for the settings on text input. See `text_input_specification`.
     * 
     */
    @Import(name="textInputSpecification")
    private @Nullable Output<V2modelsIntentConfirmationSettingPromptSpecificationPromptAttemptsSpecificationTextInputSpecificationArgs> textInputSpecification;

    /**
     * @return Configuration block for the settings on text input. See `text_input_specification`.
     * 
     */
    public Optional<Output<V2modelsIntentConfirmationSettingPromptSpecificationPromptAttemptsSpecificationTextInputSpecificationArgs>> textInputSpecification() {
        return Optional.ofNullable(this.textInputSpecification);
    }

    private V2modelsIntentConfirmationSettingPromptSpecificationPromptAttemptsSpecificationArgs() {}

    private V2modelsIntentConfirmationSettingPromptSpecificationPromptAttemptsSpecificationArgs(V2modelsIntentConfirmationSettingPromptSpecificationPromptAttemptsSpecificationArgs $) {
        this.allowInterrupt = $.allowInterrupt;
        this.allowedInputTypes = $.allowedInputTypes;
        this.audioAndDtmfInputSpecification = $.audioAndDtmfInputSpecification;
        this.mapBlockKey = $.mapBlockKey;
        this.textInputSpecification = $.textInputSpecification;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(V2modelsIntentConfirmationSettingPromptSpecificationPromptAttemptsSpecificationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private V2modelsIntentConfirmationSettingPromptSpecificationPromptAttemptsSpecificationArgs $;

        public Builder() {
            $ = new V2modelsIntentConfirmationSettingPromptSpecificationPromptAttemptsSpecificationArgs();
        }

        public Builder(V2modelsIntentConfirmationSettingPromptSpecificationPromptAttemptsSpecificationArgs defaults) {
            $ = new V2modelsIntentConfirmationSettingPromptSpecificationPromptAttemptsSpecificationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowInterrupt Whether the user can interrupt a speech prompt attempt from the bot.
         * 
         * @return builder
         * 
         */
        public Builder allowInterrupt(@Nullable Output<Boolean> allowInterrupt) {
            $.allowInterrupt = allowInterrupt;
            return this;
        }

        /**
         * @param allowInterrupt Whether the user can interrupt a speech prompt attempt from the bot.
         * 
         * @return builder
         * 
         */
        public Builder allowInterrupt(Boolean allowInterrupt) {
            return allowInterrupt(Output.of(allowInterrupt));
        }

        /**
         * @param allowedInputTypes Configuration block for the allowed input types of the prompt attempt. See `allowed_input_types`.
         * 
         * @return builder
         * 
         */
        public Builder allowedInputTypes(Output<V2modelsIntentConfirmationSettingPromptSpecificationPromptAttemptsSpecificationAllowedInputTypesArgs> allowedInputTypes) {
            $.allowedInputTypes = allowedInputTypes;
            return this;
        }

        /**
         * @param allowedInputTypes Configuration block for the allowed input types of the prompt attempt. See `allowed_input_types`.
         * 
         * @return builder
         * 
         */
        public Builder allowedInputTypes(V2modelsIntentConfirmationSettingPromptSpecificationPromptAttemptsSpecificationAllowedInputTypesArgs allowedInputTypes) {
            return allowedInputTypes(Output.of(allowedInputTypes));
        }

        /**
         * @param audioAndDtmfInputSpecification Configuration block for settings on audio and DTMF input. See `audio_and_dtmf_input_specification`.
         * 
         * @return builder
         * 
         */
        public Builder audioAndDtmfInputSpecification(@Nullable Output<V2modelsIntentConfirmationSettingPromptSpecificationPromptAttemptsSpecificationAudioAndDtmfInputSpecificationArgs> audioAndDtmfInputSpecification) {
            $.audioAndDtmfInputSpecification = audioAndDtmfInputSpecification;
            return this;
        }

        /**
         * @param audioAndDtmfInputSpecification Configuration block for settings on audio and DTMF input. See `audio_and_dtmf_input_specification`.
         * 
         * @return builder
         * 
         */
        public Builder audioAndDtmfInputSpecification(V2modelsIntentConfirmationSettingPromptSpecificationPromptAttemptsSpecificationAudioAndDtmfInputSpecificationArgs audioAndDtmfInputSpecification) {
            return audioAndDtmfInputSpecification(Output.of(audioAndDtmfInputSpecification));
        }

        /**
         * @param mapBlockKey Which attempt to configure. Valid values are `Initial`, `Retry1`, `Retry2`, `Retry3`, `Retry4`, `Retry5`.
         * 
         * @return builder
         * 
         */
        public Builder mapBlockKey(Output<String> mapBlockKey) {
            $.mapBlockKey = mapBlockKey;
            return this;
        }

        /**
         * @param mapBlockKey Which attempt to configure. Valid values are `Initial`, `Retry1`, `Retry2`, `Retry3`, `Retry4`, `Retry5`.
         * 
         * @return builder
         * 
         */
        public Builder mapBlockKey(String mapBlockKey) {
            return mapBlockKey(Output.of(mapBlockKey));
        }

        /**
         * @param textInputSpecification Configuration block for the settings on text input. See `text_input_specification`.
         * 
         * @return builder
         * 
         */
        public Builder textInputSpecification(@Nullable Output<V2modelsIntentConfirmationSettingPromptSpecificationPromptAttemptsSpecificationTextInputSpecificationArgs> textInputSpecification) {
            $.textInputSpecification = textInputSpecification;
            return this;
        }

        /**
         * @param textInputSpecification Configuration block for the settings on text input. See `text_input_specification`.
         * 
         * @return builder
         * 
         */
        public Builder textInputSpecification(V2modelsIntentConfirmationSettingPromptSpecificationPromptAttemptsSpecificationTextInputSpecificationArgs textInputSpecification) {
            return textInputSpecification(Output.of(textInputSpecification));
        }

        public V2modelsIntentConfirmationSettingPromptSpecificationPromptAttemptsSpecificationArgs build() {
            if ($.allowedInputTypes == null) {
                throw new MissingRequiredPropertyException("V2modelsIntentConfirmationSettingPromptSpecificationPromptAttemptsSpecificationArgs", "allowedInputTypes");
            }
            if ($.mapBlockKey == null) {
                throw new MissingRequiredPropertyException("V2modelsIntentConfirmationSettingPromptSpecificationPromptAttemptsSpecificationArgs", "mapBlockKey");
            }
            return $;
        }
    }

}
