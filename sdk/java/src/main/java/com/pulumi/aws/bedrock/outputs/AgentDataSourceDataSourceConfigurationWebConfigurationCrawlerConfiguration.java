// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.outputs;

import com.pulumi.aws.bedrock.outputs.AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfigurationCrawlerLimits;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfiguration {
    /**
     * @return Configuration of crawl limits for the web URLs. See `crawler_limits` block for details.
     * 
     */
    private @Nullable AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfigurationCrawlerLimits crawlerLimits;
    /**
     * @return List of one or more exclusion regular expression patterns to exclude certain object types that adhere to the pattern.
     * 
     */
    private @Nullable List<String> exclusionFilters;
    /**
     * @return List of one or more inclusion regular expression patterns to include certain object types that adhere to the pattern.
     * 
     */
    private @Nullable List<String> inclusionFilters;
    /**
     * @return Scope of what is crawled for your URLs.
     * 
     */
    private @Nullable String scope;
    /**
     * @return String used for identifying the crawler or a bot when it accesses a web server. Default value is `bedrockbot_UUID`.
     * 
     */
    private @Nullable String userAgent;

    private AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfiguration() {}
    /**
     * @return Configuration of crawl limits for the web URLs. See `crawler_limits` block for details.
     * 
     */
    public Optional<AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfigurationCrawlerLimits> crawlerLimits() {
        return Optional.ofNullable(this.crawlerLimits);
    }
    /**
     * @return List of one or more exclusion regular expression patterns to exclude certain object types that adhere to the pattern.
     * 
     */
    public List<String> exclusionFilters() {
        return this.exclusionFilters == null ? List.of() : this.exclusionFilters;
    }
    /**
     * @return List of one or more inclusion regular expression patterns to include certain object types that adhere to the pattern.
     * 
     */
    public List<String> inclusionFilters() {
        return this.inclusionFilters == null ? List.of() : this.inclusionFilters;
    }
    /**
     * @return Scope of what is crawled for your URLs.
     * 
     */
    public Optional<String> scope() {
        return Optional.ofNullable(this.scope);
    }
    /**
     * @return String used for identifying the crawler or a bot when it accesses a web server. Default value is `bedrockbot_UUID`.
     * 
     */
    public Optional<String> userAgent() {
        return Optional.ofNullable(this.userAgent);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfigurationCrawlerLimits crawlerLimits;
        private @Nullable List<String> exclusionFilters;
        private @Nullable List<String> inclusionFilters;
        private @Nullable String scope;
        private @Nullable String userAgent;
        public Builder() {}
        public Builder(AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.crawlerLimits = defaults.crawlerLimits;
    	      this.exclusionFilters = defaults.exclusionFilters;
    	      this.inclusionFilters = defaults.inclusionFilters;
    	      this.scope = defaults.scope;
    	      this.userAgent = defaults.userAgent;
        }

        @CustomType.Setter
        public Builder crawlerLimits(@Nullable AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfigurationCrawlerLimits crawlerLimits) {

            this.crawlerLimits = crawlerLimits;
            return this;
        }
        @CustomType.Setter
        public Builder exclusionFilters(@Nullable List<String> exclusionFilters) {

            this.exclusionFilters = exclusionFilters;
            return this;
        }
        public Builder exclusionFilters(String... exclusionFilters) {
            return exclusionFilters(List.of(exclusionFilters));
        }
        @CustomType.Setter
        public Builder inclusionFilters(@Nullable List<String> inclusionFilters) {

            this.inclusionFilters = inclusionFilters;
            return this;
        }
        public Builder inclusionFilters(String... inclusionFilters) {
            return inclusionFilters(List.of(inclusionFilters));
        }
        @CustomType.Setter
        public Builder scope(@Nullable String scope) {

            this.scope = scope;
            return this;
        }
        @CustomType.Setter
        public Builder userAgent(@Nullable String userAgent) {

            this.userAgent = userAgent;
            return this;
        }
        public AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfiguration build() {
            final var _resultValue = new AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfiguration();
            _resultValue.crawlerLimits = crawlerLimits;
            _resultValue.exclusionFilters = exclusionFilters;
            _resultValue.inclusionFilters = inclusionFilters;
            _resultValue.scope = scope;
            _resultValue.userAgent = userAgent;
            return _resultValue;
        }
    }
}
