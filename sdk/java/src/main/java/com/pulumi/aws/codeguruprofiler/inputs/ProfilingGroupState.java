// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codeguruprofiler.inputs;

import com.pulumi.aws.codeguruprofiler.inputs.ProfilingGroupAgentOrchestrationConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProfilingGroupState extends com.pulumi.resources.ResourceArgs {

    public static final ProfilingGroupState Empty = new ProfilingGroupState();

    /**
     * Specifies whether profiling is enabled or disabled for the created profiling. See Agent Orchestration Config for more details.
     * 
     */
    @Import(name="agentOrchestrationConfig")
    private @Nullable Output<ProfilingGroupAgentOrchestrationConfigArgs> agentOrchestrationConfig;

    /**
     * @return Specifies whether profiling is enabled or disabled for the created profiling. See Agent Orchestration Config for more details.
     * 
     */
    public Optional<Output<ProfilingGroupAgentOrchestrationConfigArgs>> agentOrchestrationConfig() {
        return Optional.ofNullable(this.agentOrchestrationConfig);
    }

    /**
     * ARN of the profiling group.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return ARN of the profiling group.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * Compute platform of the profiling group.
     * 
     */
    @Import(name="computePlatform")
    private @Nullable Output<String> computePlatform;

    /**
     * @return Compute platform of the profiling group.
     * 
     */
    public Optional<Output<String>> computePlatform() {
        return Optional.ofNullable(this.computePlatform);
    }

    /**
     * Name of the profiling group.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the profiling group.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A map of tags assigned to the WorkSpaces Connection Alias. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A map of tags assigned to the WorkSpaces Connection Alias. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private ProfilingGroupState() {}

    private ProfilingGroupState(ProfilingGroupState $) {
        this.agentOrchestrationConfig = $.agentOrchestrationConfig;
        this.arn = $.arn;
        this.computePlatform = $.computePlatform;
        this.name = $.name;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProfilingGroupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProfilingGroupState $;

        public Builder() {
            $ = new ProfilingGroupState();
        }

        public Builder(ProfilingGroupState defaults) {
            $ = new ProfilingGroupState(Objects.requireNonNull(defaults));
        }

        /**
         * @param agentOrchestrationConfig Specifies whether profiling is enabled or disabled for the created profiling. See Agent Orchestration Config for more details.
         * 
         * @return builder
         * 
         */
        public Builder agentOrchestrationConfig(@Nullable Output<ProfilingGroupAgentOrchestrationConfigArgs> agentOrchestrationConfig) {
            $.agentOrchestrationConfig = agentOrchestrationConfig;
            return this;
        }

        /**
         * @param agentOrchestrationConfig Specifies whether profiling is enabled or disabled for the created profiling. See Agent Orchestration Config for more details.
         * 
         * @return builder
         * 
         */
        public Builder agentOrchestrationConfig(ProfilingGroupAgentOrchestrationConfigArgs agentOrchestrationConfig) {
            return agentOrchestrationConfig(Output.of(agentOrchestrationConfig));
        }

        /**
         * @param arn ARN of the profiling group.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn ARN of the profiling group.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param computePlatform Compute platform of the profiling group.
         * 
         * @return builder
         * 
         */
        public Builder computePlatform(@Nullable Output<String> computePlatform) {
            $.computePlatform = computePlatform;
            return this;
        }

        /**
         * @param computePlatform Compute platform of the profiling group.
         * 
         * @return builder
         * 
         */
        public Builder computePlatform(String computePlatform) {
            return computePlatform(Output.of(computePlatform));
        }

        /**
         * @param name Name of the profiling group.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the profiling group.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param tags A map of tags assigned to the WorkSpaces Connection Alias. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A map of tags assigned to the WorkSpaces Connection Alias. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public ProfilingGroupState build() {
            return $;
        }
    }

}
