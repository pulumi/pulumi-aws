// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.pipes.outputs;

import com.pulumi.aws.pipes.outputs.PipeTargetParametersEcsTaskParametersOverridesContainerOverrideEnvironment;
import com.pulumi.aws.pipes.outputs.PipeTargetParametersEcsTaskParametersOverridesContainerOverrideEnvironmentFile;
import com.pulumi.aws.pipes.outputs.PipeTargetParametersEcsTaskParametersOverridesContainerOverrideResourceRequirement;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PipeTargetParametersEcsTaskParametersOverridesContainerOverride {
    private @Nullable List<String> commands;
    private @Nullable Integer cpu;
    private @Nullable List<PipeTargetParametersEcsTaskParametersOverridesContainerOverrideEnvironmentFile> environmentFiles;
    private @Nullable List<PipeTargetParametersEcsTaskParametersOverridesContainerOverrideEnvironment> environments;
    private @Nullable Integer memory;
    private @Nullable Integer memoryReservation;
    /**
     * @return Name of the pipe. If omitted, the provider will assign a random, unique name. Conflicts with `name_prefix`.
     * 
     */
    private @Nullable String name;
    private @Nullable List<PipeTargetParametersEcsTaskParametersOverridesContainerOverrideResourceRequirement> resourceRequirements;

    private PipeTargetParametersEcsTaskParametersOverridesContainerOverride() {}
    public List<String> commands() {
        return this.commands == null ? List.of() : this.commands;
    }
    public Optional<Integer> cpu() {
        return Optional.ofNullable(this.cpu);
    }
    public List<PipeTargetParametersEcsTaskParametersOverridesContainerOverrideEnvironmentFile> environmentFiles() {
        return this.environmentFiles == null ? List.of() : this.environmentFiles;
    }
    public List<PipeTargetParametersEcsTaskParametersOverridesContainerOverrideEnvironment> environments() {
        return this.environments == null ? List.of() : this.environments;
    }
    public Optional<Integer> memory() {
        return Optional.ofNullable(this.memory);
    }
    public Optional<Integer> memoryReservation() {
        return Optional.ofNullable(this.memoryReservation);
    }
    /**
     * @return Name of the pipe. If omitted, the provider will assign a random, unique name. Conflicts with `name_prefix`.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public List<PipeTargetParametersEcsTaskParametersOverridesContainerOverrideResourceRequirement> resourceRequirements() {
        return this.resourceRequirements == null ? List.of() : this.resourceRequirements;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PipeTargetParametersEcsTaskParametersOverridesContainerOverride defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> commands;
        private @Nullable Integer cpu;
        private @Nullable List<PipeTargetParametersEcsTaskParametersOverridesContainerOverrideEnvironmentFile> environmentFiles;
        private @Nullable List<PipeTargetParametersEcsTaskParametersOverridesContainerOverrideEnvironment> environments;
        private @Nullable Integer memory;
        private @Nullable Integer memoryReservation;
        private @Nullable String name;
        private @Nullable List<PipeTargetParametersEcsTaskParametersOverridesContainerOverrideResourceRequirement> resourceRequirements;
        public Builder() {}
        public Builder(PipeTargetParametersEcsTaskParametersOverridesContainerOverride defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.commands = defaults.commands;
    	      this.cpu = defaults.cpu;
    	      this.environmentFiles = defaults.environmentFiles;
    	      this.environments = defaults.environments;
    	      this.memory = defaults.memory;
    	      this.memoryReservation = defaults.memoryReservation;
    	      this.name = defaults.name;
    	      this.resourceRequirements = defaults.resourceRequirements;
        }

        @CustomType.Setter
        public Builder commands(@Nullable List<String> commands) {

            this.commands = commands;
            return this;
        }
        public Builder commands(String... commands) {
            return commands(List.of(commands));
        }
        @CustomType.Setter
        public Builder cpu(@Nullable Integer cpu) {

            this.cpu = cpu;
            return this;
        }
        @CustomType.Setter
        public Builder environmentFiles(@Nullable List<PipeTargetParametersEcsTaskParametersOverridesContainerOverrideEnvironmentFile> environmentFiles) {

            this.environmentFiles = environmentFiles;
            return this;
        }
        public Builder environmentFiles(PipeTargetParametersEcsTaskParametersOverridesContainerOverrideEnvironmentFile... environmentFiles) {
            return environmentFiles(List.of(environmentFiles));
        }
        @CustomType.Setter
        public Builder environments(@Nullable List<PipeTargetParametersEcsTaskParametersOverridesContainerOverrideEnvironment> environments) {

            this.environments = environments;
            return this;
        }
        public Builder environments(PipeTargetParametersEcsTaskParametersOverridesContainerOverrideEnvironment... environments) {
            return environments(List.of(environments));
        }
        @CustomType.Setter
        public Builder memory(@Nullable Integer memory) {

            this.memory = memory;
            return this;
        }
        @CustomType.Setter
        public Builder memoryReservation(@Nullable Integer memoryReservation) {

            this.memoryReservation = memoryReservation;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder resourceRequirements(@Nullable List<PipeTargetParametersEcsTaskParametersOverridesContainerOverrideResourceRequirement> resourceRequirements) {

            this.resourceRequirements = resourceRequirements;
            return this;
        }
        public Builder resourceRequirements(PipeTargetParametersEcsTaskParametersOverridesContainerOverrideResourceRequirement... resourceRequirements) {
            return resourceRequirements(List.of(resourceRequirements));
        }
        public PipeTargetParametersEcsTaskParametersOverridesContainerOverride build() {
            final var _resultValue = new PipeTargetParametersEcsTaskParametersOverridesContainerOverride();
            _resultValue.commands = commands;
            _resultValue.cpu = cpu;
            _resultValue.environmentFiles = environmentFiles;
            _resultValue.environments = environments;
            _resultValue.memory = memory;
            _resultValue.memoryReservation = memoryReservation;
            _resultValue.name = name;
            _resultValue.resourceRequirements = resourceRequirements;
            return _resultValue;
        }
    }
}
