// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.pipes.outputs;

import com.pulumi.aws.pipes.outputs.PipeTargetParametersBatchJobParametersContainerOverridesEnvironment;
import com.pulumi.aws.pipes.outputs.PipeTargetParametersBatchJobParametersContainerOverridesResourceRequirement;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PipeTargetParametersBatchJobParametersContainerOverrides {
    /**
     * @return List of commands to send to the container that overrides the default command from the Docker image or the task definition. You must also specify a container name.
     * 
     */
    private @Nullable List<String> commands;
    /**
     * @return The environment variables to send to the container. You can add new environment variables, which are added to the container at launch, or you can override the existing environment variables from the Docker image or the task definition. You must also specify a container name. Detailed below.
     * 
     */
    private @Nullable List<PipeTargetParametersBatchJobParametersContainerOverridesEnvironment> environments;
    /**
     * @return The instance type to use for a multi-node parallel job. This parameter isn&#39;t applicable to single-node container jobs or jobs that run on Fargate resources, and shouldn&#39;t be provided.
     * 
     */
    private @Nullable String instanceType;
    /**
     * @return The type and amount of a resource to assign to a container, instead of the default value from the task definition. The only supported resource is a GPU. Detailed below.
     * 
     */
    private @Nullable List<PipeTargetParametersBatchJobParametersContainerOverridesResourceRequirement> resourceRequirements;

    private PipeTargetParametersBatchJobParametersContainerOverrides() {}
    /**
     * @return List of commands to send to the container that overrides the default command from the Docker image or the task definition. You must also specify a container name.
     * 
     */
    public List<String> commands() {
        return this.commands == null ? List.of() : this.commands;
    }
    /**
     * @return The environment variables to send to the container. You can add new environment variables, which are added to the container at launch, or you can override the existing environment variables from the Docker image or the task definition. You must also specify a container name. Detailed below.
     * 
     */
    public List<PipeTargetParametersBatchJobParametersContainerOverridesEnvironment> environments() {
        return this.environments == null ? List.of() : this.environments;
    }
    /**
     * @return The instance type to use for a multi-node parallel job. This parameter isn&#39;t applicable to single-node container jobs or jobs that run on Fargate resources, and shouldn&#39;t be provided.
     * 
     */
    public Optional<String> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }
    /**
     * @return The type and amount of a resource to assign to a container, instead of the default value from the task definition. The only supported resource is a GPU. Detailed below.
     * 
     */
    public List<PipeTargetParametersBatchJobParametersContainerOverridesResourceRequirement> resourceRequirements() {
        return this.resourceRequirements == null ? List.of() : this.resourceRequirements;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PipeTargetParametersBatchJobParametersContainerOverrides defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> commands;
        private @Nullable List<PipeTargetParametersBatchJobParametersContainerOverridesEnvironment> environments;
        private @Nullable String instanceType;
        private @Nullable List<PipeTargetParametersBatchJobParametersContainerOverridesResourceRequirement> resourceRequirements;
        public Builder() {}
        public Builder(PipeTargetParametersBatchJobParametersContainerOverrides defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.commands = defaults.commands;
    	      this.environments = defaults.environments;
    	      this.instanceType = defaults.instanceType;
    	      this.resourceRequirements = defaults.resourceRequirements;
        }

        @CustomType.Setter
        public Builder commands(@Nullable List<String> commands) {
            this.commands = commands;
            return this;
        }
        public Builder commands(String... commands) {
            return commands(List.of(commands));
        }
        @CustomType.Setter
        public Builder environments(@Nullable List<PipeTargetParametersBatchJobParametersContainerOverridesEnvironment> environments) {
            this.environments = environments;
            return this;
        }
        public Builder environments(PipeTargetParametersBatchJobParametersContainerOverridesEnvironment... environments) {
            return environments(List.of(environments));
        }
        @CustomType.Setter
        public Builder instanceType(@Nullable String instanceType) {
            this.instanceType = instanceType;
            return this;
        }
        @CustomType.Setter
        public Builder resourceRequirements(@Nullable List<PipeTargetParametersBatchJobParametersContainerOverridesResourceRequirement> resourceRequirements) {
            this.resourceRequirements = resourceRequirements;
            return this;
        }
        public Builder resourceRequirements(PipeTargetParametersBatchJobParametersContainerOverridesResourceRequirement... resourceRequirements) {
            return resourceRequirements(List.of(resourceRequirements));
        }
        public PipeTargetParametersBatchJobParametersContainerOverrides build() {
            final var _resultValue = new PipeTargetParametersBatchJobParametersContainerOverrides();
            _resultValue.commands = commands;
            _resultValue.environments = environments;
            _resultValue.instanceType = instanceType;
            _resultValue.resourceRequirements = resourceRequirements;
            return _resultValue;
        }
    }
}
