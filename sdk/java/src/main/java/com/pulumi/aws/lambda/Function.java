// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lambda;

import com.pulumi.asset.Archive;
import com.pulumi.aws.Utilities;
import com.pulumi.aws.lambda.FunctionArgs;
import com.pulumi.aws.lambda.inputs.FunctionState;
import com.pulumi.aws.lambda.outputs.FunctionDeadLetterConfig;
import com.pulumi.aws.lambda.outputs.FunctionEnvironment;
import com.pulumi.aws.lambda.outputs.FunctionEphemeralStorage;
import com.pulumi.aws.lambda.outputs.FunctionFileSystemConfig;
import com.pulumi.aws.lambda.outputs.FunctionImageConfig;
import com.pulumi.aws.lambda.outputs.FunctionSnapStart;
import com.pulumi.aws.lambda.outputs.FunctionTracingConfig;
import com.pulumi.aws.lambda.outputs.FunctionVpcConfig;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="aws:lambda/function:Function")
public class Function extends com.pulumi.resources.CustomResource {
    @Export(name="architectures", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> architectures;

    public Output<List<String>> architectures() {
        return this.architectures;
    }
    @Export(name="arn", refs={String.class}, tree="[0]")
    private Output<String> arn;

    public Output<String> arn() {
        return this.arn;
    }
    @Export(name="code", refs={Archive.class}, tree="[0]")
    private Output</* @Nullable */ Archive> code;

    public Output<Optional<Archive>> code() {
        return Codegen.optional(this.code);
    }
    @Export(name="codeSigningConfigArn", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> codeSigningConfigArn;

    public Output<Optional<String>> codeSigningConfigArn() {
        return Codegen.optional(this.codeSigningConfigArn);
    }
    @Export(name="deadLetterConfig", refs={FunctionDeadLetterConfig.class}, tree="[0]")
    private Output</* @Nullable */ FunctionDeadLetterConfig> deadLetterConfig;

    public Output<Optional<FunctionDeadLetterConfig>> deadLetterConfig() {
        return Codegen.optional(this.deadLetterConfig);
    }
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    @Export(name="environment", refs={FunctionEnvironment.class}, tree="[0]")
    private Output</* @Nullable */ FunctionEnvironment> environment;

    public Output<Optional<FunctionEnvironment>> environment() {
        return Codegen.optional(this.environment);
    }
    @Export(name="ephemeralStorage", refs={FunctionEphemeralStorage.class}, tree="[0]")
    private Output<FunctionEphemeralStorage> ephemeralStorage;

    public Output<FunctionEphemeralStorage> ephemeralStorage() {
        return this.ephemeralStorage;
    }
    @Export(name="fileSystemConfig", refs={FunctionFileSystemConfig.class}, tree="[0]")
    private Output</* @Nullable */ FunctionFileSystemConfig> fileSystemConfig;

    public Output<Optional<FunctionFileSystemConfig>> fileSystemConfig() {
        return Codegen.optional(this.fileSystemConfig);
    }
    @Export(name="handler", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> handler;

    public Output<Optional<String>> handler() {
        return Codegen.optional(this.handler);
    }
    @Export(name="imageConfig", refs={FunctionImageConfig.class}, tree="[0]")
    private Output</* @Nullable */ FunctionImageConfig> imageConfig;

    public Output<Optional<FunctionImageConfig>> imageConfig() {
        return Codegen.optional(this.imageConfig);
    }
    @Export(name="imageUri", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> imageUri;

    public Output<Optional<String>> imageUri() {
        return Codegen.optional(this.imageUri);
    }
    @Export(name="invokeArn", refs={String.class}, tree="[0]")
    private Output<String> invokeArn;

    public Output<String> invokeArn() {
        return this.invokeArn;
    }
    @Export(name="kmsKeyArn", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> kmsKeyArn;

    public Output<Optional<String>> kmsKeyArn() {
        return Codegen.optional(this.kmsKeyArn);
    }
    @Export(name="lastModified", refs={String.class}, tree="[0]")
    private Output<String> lastModified;

    public Output<String> lastModified() {
        return this.lastModified;
    }
    @Export(name="layers", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> layers;

    public Output<Optional<List<String>>> layers() {
        return Codegen.optional(this.layers);
    }
    @Export(name="memorySize", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> memorySize;

    public Output<Optional<Integer>> memorySize() {
        return Codegen.optional(this.memorySize);
    }
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }
    @Export(name="packageType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> packageType;

    public Output<Optional<String>> packageType() {
        return Codegen.optional(this.packageType);
    }
    @Export(name="publish", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> publish;

    public Output<Optional<Boolean>> publish() {
        return Codegen.optional(this.publish);
    }
    @Export(name="qualifiedArn", refs={String.class}, tree="[0]")
    private Output<String> qualifiedArn;

    public Output<String> qualifiedArn() {
        return this.qualifiedArn;
    }
    @Export(name="qualifiedInvokeArn", refs={String.class}, tree="[0]")
    private Output<String> qualifiedInvokeArn;

    public Output<String> qualifiedInvokeArn() {
        return this.qualifiedInvokeArn;
    }
    @Export(name="reservedConcurrentExecutions", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> reservedConcurrentExecutions;

    public Output<Optional<Integer>> reservedConcurrentExecutions() {
        return Codegen.optional(this.reservedConcurrentExecutions);
    }
    @Export(name="role", refs={String.class}, tree="[0]")
    private Output<String> role;

    public Output<String> role() {
        return this.role;
    }
    @Export(name="runtime", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> runtime;

    public Output<Optional<String>> runtime() {
        return Codegen.optional(this.runtime);
    }
    @Export(name="s3Bucket", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> s3Bucket;

    public Output<Optional<String>> s3Bucket() {
        return Codegen.optional(this.s3Bucket);
    }
    @Export(name="s3Key", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> s3Key;

    public Output<Optional<String>> s3Key() {
        return Codegen.optional(this.s3Key);
    }
    @Export(name="s3ObjectVersion", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> s3ObjectVersion;

    public Output<Optional<String>> s3ObjectVersion() {
        return Codegen.optional(this.s3ObjectVersion);
    }
    @Export(name="signingJobArn", refs={String.class}, tree="[0]")
    private Output<String> signingJobArn;

    public Output<String> signingJobArn() {
        return this.signingJobArn;
    }
    @Export(name="signingProfileVersionArn", refs={String.class}, tree="[0]")
    private Output<String> signingProfileVersionArn;

    public Output<String> signingProfileVersionArn() {
        return this.signingProfileVersionArn;
    }
    @Export(name="snapStart", refs={FunctionSnapStart.class}, tree="[0]")
    private Output</* @Nullable */ FunctionSnapStart> snapStart;

    public Output<Optional<FunctionSnapStart>> snapStart() {
        return Codegen.optional(this.snapStart);
    }
    @Export(name="sourceCodeHash", refs={String.class}, tree="[0]")
    private Output<String> sourceCodeHash;

    public Output<String> sourceCodeHash() {
        return this.sourceCodeHash;
    }
    @Export(name="sourceCodeSize", refs={Integer.class}, tree="[0]")
    private Output<Integer> sourceCodeSize;

    public Output<Integer> sourceCodeSize() {
        return this.sourceCodeSize;
    }
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    @Export(name="tagsAll", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll;
    }
    @Export(name="timeout", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> timeout;

    public Output<Optional<Integer>> timeout() {
        return Codegen.optional(this.timeout);
    }
    @Export(name="tracingConfig", refs={FunctionTracingConfig.class}, tree="[0]")
    private Output<FunctionTracingConfig> tracingConfig;

    public Output<FunctionTracingConfig> tracingConfig() {
        return this.tracingConfig;
    }
    @Export(name="version", refs={String.class}, tree="[0]")
    private Output<String> version;

    public Output<String> version() {
        return this.version;
    }
    @Export(name="vpcConfig", refs={FunctionVpcConfig.class}, tree="[0]")
    private Output</* @Nullable */ FunctionVpcConfig> vpcConfig;

    public Output<Optional<FunctionVpcConfig>> vpcConfig() {
        return Codegen.optional(this.vpcConfig);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Function(String name) {
        this(name, FunctionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Function(String name, FunctionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Function(String name, FunctionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:lambda/function:Function", name, args == null ? FunctionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Function(String name, Output<String> id, @Nullable FunctionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:lambda/function:Function", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Function get(String name, Output<String> id, @Nullable FunctionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Function(name, id, state, options);
    }
}
