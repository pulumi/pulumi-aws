// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.wafv2;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.wafv2.WebAclRuleGroupAssociationArgs;
import com.pulumi.aws.wafv2.inputs.WebAclRuleGroupAssociationState;
import com.pulumi.aws.wafv2.outputs.WebAclRuleGroupAssociationManagedRuleGroup;
import com.pulumi.aws.wafv2.outputs.WebAclRuleGroupAssociationRuleGroupReference;
import com.pulumi.aws.wafv2.outputs.WebAclRuleGroupAssociationTimeouts;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Associates a WAFv2 Rule Group (custom or managed) with a Web ACL by adding a rule that references the Rule Group. Use this resource to apply the rules defined in a Rule Group to a Web ACL without duplicating rule definitions.
 * 
 * This resource supports both:
 * 
 * - **Custom Rule Groups**: User-created rule groups that you manage within your AWS account
 * - **Managed Rule Groups**: Pre-configured rule groups provided by AWS or third-party vendors
 * 
 * !&gt; **Warning:** Verify the rule names in your `rule_action_override`s carefully. With managed rule groups, WAF silently ignores any override that uses an invalid rule name. With customer-owned rule groups, invalid rule names in your overrides will cause web ACL updates to fail. An invalid rule name is any name that doesn&#39;t exactly match the case-sensitive name of an existing rule in the rule group.
 * 
 * !&gt; **Warning:** Using this resource will cause the associated Web ACL resource to show configuration drift in the `rule` argument unless you add `lifecycle { ignore_changes = [rule] }` to the Web ACL resource configuration. This is because this resource modifies the Web ACL&#39;s rules outside of the Web ACL resource&#39;s direct management.
 * 
 * &gt; **Note:** This resource creates a rule within the Web ACL that references the entire Rule Group. The rule group&#39;s individual rules are evaluated as a unit when requests are processed by the Web ACL.
 * 
 * ## Example Usage
 * 
 * ### Custom Rule Group - Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.wafv2.RuleGroup;
 * import com.pulumi.aws.wafv2.RuleGroupArgs;
 * import com.pulumi.aws.wafv2.inputs.RuleGroupRuleArgs;
 * import com.pulumi.aws.wafv2.inputs.RuleGroupRuleActionArgs;
 * import com.pulumi.aws.wafv2.inputs.RuleGroupRuleActionBlockArgs;
 * import com.pulumi.aws.wafv2.inputs.RuleGroupRuleStatementArgs;
 * import com.pulumi.aws.wafv2.inputs.RuleGroupRuleStatementGeoMatchStatementArgs;
 * import com.pulumi.aws.wafv2.inputs.RuleGroupRuleVisibilityConfigArgs;
 * import com.pulumi.aws.wafv2.inputs.RuleGroupVisibilityConfigArgs;
 * import com.pulumi.aws.wafv2.WebAcl;
 * import com.pulumi.aws.wafv2.WebAclArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclDefaultActionArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclDefaultActionAllowArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclVisibilityConfigArgs;
 * import com.pulumi.aws.wafv2.WebAclRuleGroupAssociation;
 * import com.pulumi.aws.wafv2.WebAclRuleGroupAssociationArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclRuleGroupAssociationRuleGroupReferenceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new RuleGroup("example", RuleGroupArgs.builder()
 *             .name("example-rule-group")
 *             .scope("REGIONAL")
 *             .capacity(10)
 *             .rules(RuleGroupRuleArgs.builder()
 *                 .name("block-suspicious-requests")
 *                 .priority(1)
 *                 .action(RuleGroupRuleActionArgs.builder()
 *                     .block(RuleGroupRuleActionBlockArgs.builder()
 *                         .build())
 *                     .build())
 *                 .statement(RuleGroupRuleStatementArgs.builder()
 *                     .geoMatchStatement(RuleGroupRuleStatementGeoMatchStatementArgs.builder()
 *                         .countryCodes(                        
 *                             "CN",
 *                             "RU")
 *                         .build())
 *                     .build())
 *                 .visibilityConfig(RuleGroupRuleVisibilityConfigArgs.builder()
 *                     .cloudwatchMetricsEnabled(true)
 *                     .metricName("block-suspicious-requests")
 *                     .sampledRequestsEnabled(true)
 *                     .build())
 *                 .build())
 *             .visibilityConfig(RuleGroupVisibilityConfigArgs.builder()
 *                 .cloudwatchMetricsEnabled(true)
 *                 .metricName("example-rule-group")
 *                 .sampledRequestsEnabled(true)
 *                 .build())
 *             .build());
 * 
 *         var exampleWebAcl = new WebAcl("exampleWebAcl", WebAclArgs.builder()
 *             .name("example-web-acl")
 *             .scope("REGIONAL")
 *             .defaultAction(WebAclDefaultActionArgs.builder()
 *                 .allow(WebAclDefaultActionAllowArgs.builder()
 *                     .build())
 *                 .build())
 *             .visibilityConfig(WebAclVisibilityConfigArgs.builder()
 *                 .cloudwatchMetricsEnabled(true)
 *                 .metricName("example-web-acl")
 *                 .sampledRequestsEnabled(true)
 *                 .build())
 *             .build());
 * 
 *         var exampleWebAclRuleGroupAssociation = new WebAclRuleGroupAssociation("exampleWebAclRuleGroupAssociation", WebAclRuleGroupAssociationArgs.builder()
 *             .ruleName("example-rule-group-rule")
 *             .priority(100)
 *             .webAclArn(exampleWebAcl.arn())
 *             .ruleGroupReference(WebAclRuleGroupAssociationRuleGroupReferenceArgs.builder()
 *                 .arn(example.arn())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Managed Rule Group - Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.wafv2.WebAcl;
 * import com.pulumi.aws.wafv2.WebAclArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclDefaultActionArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclDefaultActionAllowArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclVisibilityConfigArgs;
 * import com.pulumi.aws.wafv2.WebAclRuleGroupAssociation;
 * import com.pulumi.aws.wafv2.WebAclRuleGroupAssociationArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclRuleGroupAssociationManagedRuleGroupArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new WebAcl("example", WebAclArgs.builder()
 *             .name("example-web-acl")
 *             .scope("REGIONAL")
 *             .defaultAction(WebAclDefaultActionArgs.builder()
 *                 .allow(WebAclDefaultActionAllowArgs.builder()
 *                     .build())
 *                 .build())
 *             .visibilityConfig(WebAclVisibilityConfigArgs.builder()
 *                 .cloudwatchMetricsEnabled(true)
 *                 .metricName("example-web-acl")
 *                 .sampledRequestsEnabled(true)
 *                 .build())
 *             .build());
 * 
 *         var managedExample = new WebAclRuleGroupAssociation("managedExample", WebAclRuleGroupAssociationArgs.builder()
 *             .ruleName("aws-common-rule-set")
 *             .priority(50)
 *             .webAclArn(example.arn())
 *             .managedRuleGroup(WebAclRuleGroupAssociationManagedRuleGroupArgs.builder()
 *                 .name("AWSManagedRulesCommonRuleSet")
 *                 .vendorName("AWS")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Managed Rule Group - With Version
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.wafv2.WebAclRuleGroupAssociation;
 * import com.pulumi.aws.wafv2.WebAclRuleGroupAssociationArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclRuleGroupAssociationManagedRuleGroupArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var managedVersioned = new WebAclRuleGroupAssociation("managedVersioned", WebAclRuleGroupAssociationArgs.builder()
 *             .ruleName("aws-common-rule-set-versioned")
 *             .priority(60)
 *             .webAclArn(example.arn())
 *             .managedRuleGroup(WebAclRuleGroupAssociationManagedRuleGroupArgs.builder()
 *                 .name("AWSManagedRulesCommonRuleSet")
 *                 .vendorName("AWS")
 *                 .version("Version_1.0")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Managed Rule Group - With Rule Action Overrides
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.wafv2.WebAclRuleGroupAssociation;
 * import com.pulumi.aws.wafv2.WebAclRuleGroupAssociationArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclRuleGroupAssociationManagedRuleGroupArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var managedWithOverrides = new WebAclRuleGroupAssociation("managedWithOverrides", WebAclRuleGroupAssociationArgs.builder()
 *             .ruleName("aws-common-rule-set-with-overrides")
 *             .priority(70)
 *             .webAclArn(example.arn())
 *             .managedRuleGroup(WebAclRuleGroupAssociationManagedRuleGroupArgs.builder()
 *                 .name("AWSManagedRulesCommonRuleSet")
 *                 .vendorName("AWS")
 *                 .ruleActionOverrides(                
 *                     WebAclRuleGroupAssociationManagedRuleGroupRuleActionOverrideArgs.builder()
 *                         .name("GenericRFI_BODY")
 *                         .actionToUse(WebAclRuleGroupAssociationManagedRuleGroupRuleActionOverrideActionToUseArgs.builder()
 *                             .count(WebAclRuleGroupAssociationManagedRuleGroupRuleActionOverrideActionToUseCountArgs.builder()
 *                                 .customRequestHandling(WebAclRuleGroupAssociationManagedRuleGroupRuleActionOverrideActionToUseCountCustomRequestHandlingArgs.builder()
 *                                     .insertHeaders(WebAclRuleGroupAssociationManagedRuleGroupRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeaderArgs.builder()
 *                                         .name("X-RFI-Override")
 *                                         .value("counted")
 *                                         .build())
 *                                     .build())
 *                                 .build())
 *                             .build())
 *                         .build(),
 *                     WebAclRuleGroupAssociationManagedRuleGroupRuleActionOverrideArgs.builder()
 *                         .name("SizeRestrictions_BODY")
 *                         .actionToUse(WebAclRuleGroupAssociationManagedRuleGroupRuleActionOverrideActionToUseArgs.builder()
 *                             .captcha(WebAclRuleGroupAssociationManagedRuleGroupRuleActionOverrideActionToUseCaptchaArgs.builder()
 *                                 .build())
 *                             .build())
 *                         .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Custom Rule Group - With Override Action
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.wafv2.WebAclRuleGroupAssociation;
 * import com.pulumi.aws.wafv2.WebAclRuleGroupAssociationArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclRuleGroupAssociationRuleGroupReferenceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new WebAclRuleGroupAssociation("example", WebAclRuleGroupAssociationArgs.builder()
 *             .ruleName("example-rule-group-rule")
 *             .priority(100)
 *             .webAclArn(exampleAwsWafv2WebAcl.arn())
 *             .overrideAction("count")
 *             .ruleGroupReference(WebAclRuleGroupAssociationRuleGroupReferenceArgs.builder()
 *                 .arn(exampleAwsWafv2RuleGroup.arn())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Custom Rule Group - With Rule Action Overrides
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.wafv2.RuleGroup;
 * import com.pulumi.aws.wafv2.RuleGroupArgs;
 * import com.pulumi.aws.wafv2.inputs.RuleGroupRuleArgs;
 * import com.pulumi.aws.wafv2.inputs.RuleGroupRuleActionArgs;
 * import com.pulumi.aws.wafv2.inputs.RuleGroupRuleActionBlockArgs;
 * import com.pulumi.aws.wafv2.inputs.RuleGroupRuleStatementArgs;
 * import com.pulumi.aws.wafv2.inputs.RuleGroupRuleStatementGeoMatchStatementArgs;
 * import com.pulumi.aws.wafv2.inputs.RuleGroupRuleVisibilityConfigArgs;
 * import com.pulumi.aws.wafv2.inputs.RuleGroupRuleStatementRateBasedStatementArgs;
 * import com.pulumi.aws.wafv2.inputs.RuleGroupVisibilityConfigArgs;
 * import com.pulumi.aws.wafv2.WebAcl;
 * import com.pulumi.aws.wafv2.WebAclArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclDefaultActionArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclDefaultActionAllowArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclVisibilityConfigArgs;
 * import com.pulumi.aws.wafv2.WebAclRuleGroupAssociation;
 * import com.pulumi.aws.wafv2.WebAclRuleGroupAssociationArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclRuleGroupAssociationRuleGroupReferenceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new RuleGroup("example", RuleGroupArgs.builder()
 *             .name("example-rule-group")
 *             .scope("REGIONAL")
 *             .capacity(10)
 *             .rules(            
 *                 RuleGroupRuleArgs.builder()
 *                     .name("geo-block-rule")
 *                     .priority(1)
 *                     .action(RuleGroupRuleActionArgs.builder()
 *                         .block(RuleGroupRuleActionBlockArgs.builder()
 *                             .build())
 *                         .build())
 *                     .statement(RuleGroupRuleStatementArgs.builder()
 *                         .geoMatchStatement(RuleGroupRuleStatementGeoMatchStatementArgs.builder()
 *                             .countryCodes(                            
 *                                 "CN",
 *                                 "RU")
 *                             .build())
 *                         .build())
 *                     .visibilityConfig(RuleGroupRuleVisibilityConfigArgs.builder()
 *                         .cloudwatchMetricsEnabled(true)
 *                         .metricName("geo-block-rule")
 *                         .sampledRequestsEnabled(true)
 *                         .build())
 *                     .build(),
 *                 RuleGroupRuleArgs.builder()
 *                     .name("rate-limit-rule")
 *                     .priority(2)
 *                     .action(RuleGroupRuleActionArgs.builder()
 *                         .block(RuleGroupRuleActionBlockArgs.builder()
 *                             .build())
 *                         .build())
 *                     .statement(Map.of("rateBasedStatement", RuleGroupRuleStatementRateBasedStatementArgs.builder()
 *                         .limit(1000)
 *                         .aggregateKeyType("IP")
 *                         .build()))
 *                     .visibilityConfig(RuleGroupRuleVisibilityConfigArgs.builder()
 *                         .cloudwatchMetricsEnabled(true)
 *                         .metricName("rate-limit-rule")
 *                         .sampledRequestsEnabled(true)
 *                         .build())
 *                     .build())
 *             .visibilityConfig(RuleGroupVisibilityConfigArgs.builder()
 *                 .cloudwatchMetricsEnabled(true)
 *                 .metricName("example-rule-group")
 *                 .sampledRequestsEnabled(true)
 *                 .build())
 *             .build());
 * 
 *         var exampleWebAcl = new WebAcl("exampleWebAcl", WebAclArgs.builder()
 *             .name("example-web-acl")
 *             .scope("REGIONAL")
 *             .defaultAction(WebAclDefaultActionArgs.builder()
 *                 .allow(WebAclDefaultActionAllowArgs.builder()
 *                     .build())
 *                 .build())
 *             .visibilityConfig(WebAclVisibilityConfigArgs.builder()
 *                 .cloudwatchMetricsEnabled(true)
 *                 .metricName("example-web-acl")
 *                 .sampledRequestsEnabled(true)
 *                 .build())
 *             .build());
 * 
 *         var exampleWebAclRuleGroupAssociation = new WebAclRuleGroupAssociation("exampleWebAclRuleGroupAssociation", WebAclRuleGroupAssociationArgs.builder()
 *             .ruleName("example-rule-group-rule")
 *             .priority(100)
 *             .webAclArn(exampleWebAcl.arn())
 *             .ruleGroupReference(WebAclRuleGroupAssociationRuleGroupReferenceArgs.builder()
 *                 .arn(example.arn())
 *                 .ruleActionOverrides(                
 *                     WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideArgs.builder()
 *                         .name("geo-block-rule")
 *                         .actionToUse(WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideActionToUseArgs.builder()
 *                             .count(WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideActionToUseCountArgs.builder()
 *                                 .customRequestHandling(WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideActionToUseCountCustomRequestHandlingArgs.builder()
 *                                     .insertHeaders(WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeaderArgs.builder()
 *                                         .name("X-Geo-Block-Override")
 *                                         .value("counted")
 *                                         .build())
 *                                     .build())
 *                                 .build())
 *                             .build())
 *                         .build(),
 *                     WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideArgs.builder()
 *                         .name("rate-limit-rule")
 *                         .actionToUse(WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideActionToUseArgs.builder()
 *                             .captcha(WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideActionToUseCaptchaArgs.builder()
 *                                 .customRequestHandling(WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideActionToUseCaptchaCustomRequestHandlingArgs.builder()
 *                                     .insertHeaders(WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeaderArgs.builder()
 *                                         .name("X-Rate-Limit-Override")
 *                                         .value("captcha-required")
 *                                         .build())
 *                                     .build())
 *                                 .build())
 *                             .build())
 *                         .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Custom Rule Group - CloudFront Web ACL
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.wafv2.RuleGroup;
 * import com.pulumi.aws.wafv2.RuleGroupArgs;
 * import com.pulumi.aws.wafv2.inputs.RuleGroupRuleArgs;
 * import com.pulumi.aws.wafv2.inputs.RuleGroupRuleActionArgs;
 * import com.pulumi.aws.wafv2.inputs.RuleGroupRuleActionBlockArgs;
 * import com.pulumi.aws.wafv2.inputs.RuleGroupRuleStatementArgs;
 * import com.pulumi.aws.wafv2.inputs.RuleGroupRuleStatementRateBasedStatementArgs;
 * import com.pulumi.aws.wafv2.inputs.RuleGroupRuleVisibilityConfigArgs;
 * import com.pulumi.aws.wafv2.inputs.RuleGroupVisibilityConfigArgs;
 * import com.pulumi.aws.wafv2.WebAcl;
 * import com.pulumi.aws.wafv2.WebAclArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclDefaultActionArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclDefaultActionAllowArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclVisibilityConfigArgs;
 * import com.pulumi.aws.wafv2.WebAclRuleGroupAssociation;
 * import com.pulumi.aws.wafv2.WebAclRuleGroupAssociationArgs;
 * import com.pulumi.aws.wafv2.inputs.WebAclRuleGroupAssociationRuleGroupReferenceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var cloudfrontExample = new RuleGroup("cloudfrontExample", RuleGroupArgs.builder()
 *             .name("cloudfront-rule-group")
 *             .scope("CLOUDFRONT")
 *             .capacity(10)
 *             .rules(RuleGroupRuleArgs.builder()
 *                 .name("rate-limit")
 *                 .priority(1)
 *                 .action(RuleGroupRuleActionArgs.builder()
 *                     .block(RuleGroupRuleActionBlockArgs.builder()
 *                         .build())
 *                     .build())
 *                 .statement(RuleGroupRuleStatementArgs.builder()
 *                     .rateBasedStatement(RuleGroupRuleStatementRateBasedStatementArgs.builder()
 *                         .limit(2000)
 *                         .aggregateKeyType("IP")
 *                         .build())
 *                     .build())
 *                 .visibilityConfig(RuleGroupRuleVisibilityConfigArgs.builder()
 *                     .cloudwatchMetricsEnabled(true)
 *                     .metricName("rate-limit")
 *                     .sampledRequestsEnabled(true)
 *                     .build())
 *                 .build())
 *             .visibilityConfig(RuleGroupVisibilityConfigArgs.builder()
 *                 .cloudwatchMetricsEnabled(true)
 *                 .metricName("cloudfront-rule-group")
 *                 .sampledRequestsEnabled(true)
 *                 .build())
 *             .build());
 * 
 *         var cloudfrontExampleWebAcl = new WebAcl("cloudfrontExampleWebAcl", WebAclArgs.builder()
 *             .name("cloudfront-web-acl")
 *             .scope("CLOUDFRONT")
 *             .defaultAction(WebAclDefaultActionArgs.builder()
 *                 .allow(WebAclDefaultActionAllowArgs.builder()
 *                     .build())
 *                 .build())
 *             .visibilityConfig(WebAclVisibilityConfigArgs.builder()
 *                 .cloudwatchMetricsEnabled(true)
 *                 .metricName("cloudfront-web-acl")
 *                 .sampledRequestsEnabled(true)
 *                 .build())
 *             .build());
 * 
 *         var cloudfrontExampleWebAclRuleGroupAssociation = new WebAclRuleGroupAssociation("cloudfrontExampleWebAclRuleGroupAssociation", WebAclRuleGroupAssociationArgs.builder()
 *             .ruleName("cloudfront-rule-group-rule")
 *             .priority(50)
 *             .webAclArn(cloudfrontExampleWebAcl.arn())
 *             .ruleGroupReference(WebAclRuleGroupAssociationRuleGroupReferenceArgs.builder()
 *                 .arn(cloudfrontExample.arn())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Using `pulumi import`, import WAFv2 web ACL custom rule group associations using `WebACLARN,RuleGroupARN,RuleName`. For example:
 * 
 * ```sh
 * $ pulumi import aws:wafv2/webAclRuleGroupAssociation:WebAclRuleGroupAssociation example &#34;arn:aws:wafv2:us-east-1:123456789012:regional/webacl/example-web-acl/12345678-1234-1234-1234-123456789012,arn:aws:wafv2:us-east-1:123456789012:regional/rulegroup/example-rule-group/87654321-4321-4321-4321-210987654321,example-rule-group-rule&#34;
 * ```
 * Using `pulumi import`, import WAFv2 web ACL managed rule group associations using `WebACLARN,VendorName:RuleGroupName[:Version],RuleName`. For example:
 * 
 * ```sh
 * $ pulumi import aws:wafv2/webAclRuleGroupAssociation:WebAclRuleGroupAssociation managed_example &#34;arn:aws:wafv2:us-east-1:123456789012:regional/webacl/example-web-acl/12345678-1234-1234-1234-123456789012,AWS:AWSManagedRulesCommonRuleSet,aws-common-rule-set&#34;
 * ```
 * 
 */
@ResourceType(type="aws:wafv2/webAclRuleGroupAssociation:WebAclRuleGroupAssociation")
public class WebAclRuleGroupAssociation extends com.pulumi.resources.CustomResource {
    /**
     * Managed Rule Group configuration. One of `rule_group_reference` or `managed_rule_group` is required. Conflicts with `rule_group_reference`. See below.
     * 
     */
    @Export(name="managedRuleGroup", refs={WebAclRuleGroupAssociationManagedRuleGroup.class}, tree="[0]")
    private Output</* @Nullable */ WebAclRuleGroupAssociationManagedRuleGroup> managedRuleGroup;

    /**
     * @return Managed Rule Group configuration. One of `rule_group_reference` or `managed_rule_group` is required. Conflicts with `rule_group_reference`. See below.
     * 
     */
    public Output<Optional<WebAclRuleGroupAssociationManagedRuleGroup>> managedRuleGroup() {
        return Codegen.optional(this.managedRuleGroup);
    }
    /**
     * Override action for the rule group. Valid values are `none` and `count`. Defaults to `none`. When set to `count`, the actions defined in the rule group rules are overridden to count matches instead of blocking or allowing requests.
     * 
     */
    @Export(name="overrideAction", refs={String.class}, tree="[0]")
    private Output<String> overrideAction;

    /**
     * @return Override action for the rule group. Valid values are `none` and `count`. Defaults to `none`. When set to `count`, the actions defined in the rule group rules are overridden to count matches instead of blocking or allowing requests.
     * 
     */
    public Output<String> overrideAction() {
        return this.overrideAction;
    }
    /**
     * Priority of the rule within the Web ACL. Rules are evaluated in order of priority, with lower numbers evaluated first.
     * 
     */
    @Export(name="priority", refs={Integer.class}, tree="[0]")
    private Output<Integer> priority;

    /**
     * @return Priority of the rule within the Web ACL. Rules are evaluated in order of priority, with lower numbers evaluated first.
     * 
     */
    public Output<Integer> priority() {
        return this.priority;
    }
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * Custom Rule Group reference configuration. One of `rule_group_reference` or `managed_rule_group` is required. Conflicts with `managed_rule_group`. See below.
     * 
     */
    @Export(name="ruleGroupReference", refs={WebAclRuleGroupAssociationRuleGroupReference.class}, tree="[0]")
    private Output</* @Nullable */ WebAclRuleGroupAssociationRuleGroupReference> ruleGroupReference;

    /**
     * @return Custom Rule Group reference configuration. One of `rule_group_reference` or `managed_rule_group` is required. Conflicts with `managed_rule_group`. See below.
     * 
     */
    public Output<Optional<WebAclRuleGroupAssociationRuleGroupReference>> ruleGroupReference() {
        return Codegen.optional(this.ruleGroupReference);
    }
    /**
     * Name of the rule to create in the Web ACL that references the rule group. Must be between 1 and 128 characters.
     * 
     */
    @Export(name="ruleName", refs={String.class}, tree="[0]")
    private Output<String> ruleName;

    /**
     * @return Name of the rule to create in the Web ACL that references the rule group. Must be between 1 and 128 characters.
     * 
     */
    public Output<String> ruleName() {
        return this.ruleName;
    }
    @Export(name="timeouts", refs={WebAclRuleGroupAssociationTimeouts.class}, tree="[0]")
    private Output</* @Nullable */ WebAclRuleGroupAssociationTimeouts> timeouts;

    public Output<Optional<WebAclRuleGroupAssociationTimeouts>> timeouts() {
        return Codegen.optional(this.timeouts);
    }
    /**
     * ARN of the Web ACL to associate the Rule Group with.
     * 
     * The following arguments are optional:
     * 
     */
    @Export(name="webAclArn", refs={String.class}, tree="[0]")
    private Output<String> webAclArn;

    /**
     * @return ARN of the Web ACL to associate the Rule Group with.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<String> webAclArn() {
        return this.webAclArn;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public WebAclRuleGroupAssociation(java.lang.String name) {
        this(name, WebAclRuleGroupAssociationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public WebAclRuleGroupAssociation(java.lang.String name, WebAclRuleGroupAssociationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public WebAclRuleGroupAssociation(java.lang.String name, WebAclRuleGroupAssociationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:wafv2/webAclRuleGroupAssociation:WebAclRuleGroupAssociation", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private WebAclRuleGroupAssociation(java.lang.String name, Output<java.lang.String> id, @Nullable WebAclRuleGroupAssociationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:wafv2/webAclRuleGroupAssociation:WebAclRuleGroupAssociation", name, state, makeResourceOptions(options, id), false);
    }

    private static WebAclRuleGroupAssociationArgs makeArgs(WebAclRuleGroupAssociationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? WebAclRuleGroupAssociationArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static WebAclRuleGroupAssociation get(java.lang.String name, Output<java.lang.String> id, @Nullable WebAclRuleGroupAssociationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new WebAclRuleGroupAssociation(name, id, state, options);
    }
}
