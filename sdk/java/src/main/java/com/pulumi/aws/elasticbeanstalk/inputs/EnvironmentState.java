// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elasticbeanstalk.inputs;

import com.pulumi.aws.elasticbeanstalk.inputs.EnvironmentAllSettingArgs;
import com.pulumi.aws.elasticbeanstalk.inputs.EnvironmentSettingArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EnvironmentState extends com.pulumi.resources.ResourceArgs {

    public static final EnvironmentState Empty = new EnvironmentState();

    @Import(name="allSettings")
    private @Nullable Output<List<EnvironmentAllSettingArgs>> allSettings;

    public Optional<Output<List<EnvironmentAllSettingArgs>>> allSettings() {
        return Optional.ofNullable(this.allSettings);
    }

    @Import(name="application")
    private @Nullable Output<String> application;

    public Optional<Output<String>> application() {
        return Optional.ofNullable(this.application);
    }

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="autoscalingGroups")
    private @Nullable Output<List<String>> autoscalingGroups;

    public Optional<Output<List<String>>> autoscalingGroups() {
        return Optional.ofNullable(this.autoscalingGroups);
    }

    @Import(name="cname")
    private @Nullable Output<String> cname;

    public Optional<Output<String>> cname() {
        return Optional.ofNullable(this.cname);
    }

    @Import(name="cnamePrefix")
    private @Nullable Output<String> cnamePrefix;

    public Optional<Output<String>> cnamePrefix() {
        return Optional.ofNullable(this.cnamePrefix);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="endpointUrl")
    private @Nullable Output<String> endpointUrl;

    public Optional<Output<String>> endpointUrl() {
        return Optional.ofNullable(this.endpointUrl);
    }

    @Import(name="instances")
    private @Nullable Output<List<String>> instances;

    public Optional<Output<List<String>>> instances() {
        return Optional.ofNullable(this.instances);
    }

    @Import(name="launchConfigurations")
    private @Nullable Output<List<String>> launchConfigurations;

    public Optional<Output<List<String>>> launchConfigurations() {
        return Optional.ofNullable(this.launchConfigurations);
    }

    @Import(name="loadBalancers")
    private @Nullable Output<List<String>> loadBalancers;

    public Optional<Output<List<String>>> loadBalancers() {
        return Optional.ofNullable(this.loadBalancers);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="platformArn")
    private @Nullable Output<String> platformArn;

    public Optional<Output<String>> platformArn() {
        return Optional.ofNullable(this.platformArn);
    }

    @Import(name="pollInterval")
    private @Nullable Output<String> pollInterval;

    public Optional<Output<String>> pollInterval() {
        return Optional.ofNullable(this.pollInterval);
    }

    @Import(name="queues")
    private @Nullable Output<List<String>> queues;

    public Optional<Output<List<String>>> queues() {
        return Optional.ofNullable(this.queues);
    }

    @Import(name="settings")
    private @Nullable Output<List<EnvironmentSettingArgs>> settings;

    public Optional<Output<List<EnvironmentSettingArgs>>> settings() {
        return Optional.ofNullable(this.settings);
    }

    @Import(name="solutionStackName")
    private @Nullable Output<String> solutionStackName;

    public Optional<Output<String>> solutionStackName() {
        return Optional.ofNullable(this.solutionStackName);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="templateName")
    private @Nullable Output<String> templateName;

    public Optional<Output<String>> templateName() {
        return Optional.ofNullable(this.templateName);
    }

    @Import(name="tier")
    private @Nullable Output<String> tier;

    public Optional<Output<String>> tier() {
        return Optional.ofNullable(this.tier);
    }

    @Import(name="triggers")
    private @Nullable Output<List<String>> triggers;

    public Optional<Output<List<String>>> triggers() {
        return Optional.ofNullable(this.triggers);
    }

    @Import(name="version")
    private @Nullable Output<String> version;

    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    @Import(name="waitForReadyTimeout")
    private @Nullable Output<String> waitForReadyTimeout;

    public Optional<Output<String>> waitForReadyTimeout() {
        return Optional.ofNullable(this.waitForReadyTimeout);
    }

    private EnvironmentState() {}

    private EnvironmentState(EnvironmentState $) {
        this.allSettings = $.allSettings;
        this.application = $.application;
        this.arn = $.arn;
        this.autoscalingGroups = $.autoscalingGroups;
        this.cname = $.cname;
        this.cnamePrefix = $.cnamePrefix;
        this.description = $.description;
        this.endpointUrl = $.endpointUrl;
        this.instances = $.instances;
        this.launchConfigurations = $.launchConfigurations;
        this.loadBalancers = $.loadBalancers;
        this.name = $.name;
        this.platformArn = $.platformArn;
        this.pollInterval = $.pollInterval;
        this.queues = $.queues;
        this.settings = $.settings;
        this.solutionStackName = $.solutionStackName;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.templateName = $.templateName;
        this.tier = $.tier;
        this.triggers = $.triggers;
        this.version = $.version;
        this.waitForReadyTimeout = $.waitForReadyTimeout;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnvironmentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnvironmentState $;

        public Builder() {
            $ = new EnvironmentState();
        }

        public Builder(EnvironmentState defaults) {
            $ = new EnvironmentState(Objects.requireNonNull(defaults));
        }

        public Builder allSettings(@Nullable Output<List<EnvironmentAllSettingArgs>> allSettings) {
            $.allSettings = allSettings;
            return this;
        }

        public Builder allSettings(List<EnvironmentAllSettingArgs> allSettings) {
            return allSettings(Output.of(allSettings));
        }

        public Builder allSettings(EnvironmentAllSettingArgs... allSettings) {
            return allSettings(List.of(allSettings));
        }

        public Builder application(@Nullable Output<String> application) {
            $.application = application;
            return this;
        }

        public Builder application(String application) {
            return application(Output.of(application));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder autoscalingGroups(@Nullable Output<List<String>> autoscalingGroups) {
            $.autoscalingGroups = autoscalingGroups;
            return this;
        }

        public Builder autoscalingGroups(List<String> autoscalingGroups) {
            return autoscalingGroups(Output.of(autoscalingGroups));
        }

        public Builder autoscalingGroups(String... autoscalingGroups) {
            return autoscalingGroups(List.of(autoscalingGroups));
        }

        public Builder cname(@Nullable Output<String> cname) {
            $.cname = cname;
            return this;
        }

        public Builder cname(String cname) {
            return cname(Output.of(cname));
        }

        public Builder cnamePrefix(@Nullable Output<String> cnamePrefix) {
            $.cnamePrefix = cnamePrefix;
            return this;
        }

        public Builder cnamePrefix(String cnamePrefix) {
            return cnamePrefix(Output.of(cnamePrefix));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder endpointUrl(@Nullable Output<String> endpointUrl) {
            $.endpointUrl = endpointUrl;
            return this;
        }

        public Builder endpointUrl(String endpointUrl) {
            return endpointUrl(Output.of(endpointUrl));
        }

        public Builder instances(@Nullable Output<List<String>> instances) {
            $.instances = instances;
            return this;
        }

        public Builder instances(List<String> instances) {
            return instances(Output.of(instances));
        }

        public Builder instances(String... instances) {
            return instances(List.of(instances));
        }

        public Builder launchConfigurations(@Nullable Output<List<String>> launchConfigurations) {
            $.launchConfigurations = launchConfigurations;
            return this;
        }

        public Builder launchConfigurations(List<String> launchConfigurations) {
            return launchConfigurations(Output.of(launchConfigurations));
        }

        public Builder launchConfigurations(String... launchConfigurations) {
            return launchConfigurations(List.of(launchConfigurations));
        }

        public Builder loadBalancers(@Nullable Output<List<String>> loadBalancers) {
            $.loadBalancers = loadBalancers;
            return this;
        }

        public Builder loadBalancers(List<String> loadBalancers) {
            return loadBalancers(Output.of(loadBalancers));
        }

        public Builder loadBalancers(String... loadBalancers) {
            return loadBalancers(List.of(loadBalancers));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder platformArn(@Nullable Output<String> platformArn) {
            $.platformArn = platformArn;
            return this;
        }

        public Builder platformArn(String platformArn) {
            return platformArn(Output.of(platformArn));
        }

        public Builder pollInterval(@Nullable Output<String> pollInterval) {
            $.pollInterval = pollInterval;
            return this;
        }

        public Builder pollInterval(String pollInterval) {
            return pollInterval(Output.of(pollInterval));
        }

        public Builder queues(@Nullable Output<List<String>> queues) {
            $.queues = queues;
            return this;
        }

        public Builder queues(List<String> queues) {
            return queues(Output.of(queues));
        }

        public Builder queues(String... queues) {
            return queues(List.of(queues));
        }

        public Builder settings(@Nullable Output<List<EnvironmentSettingArgs>> settings) {
            $.settings = settings;
            return this;
        }

        public Builder settings(List<EnvironmentSettingArgs> settings) {
            return settings(Output.of(settings));
        }

        public Builder settings(EnvironmentSettingArgs... settings) {
            return settings(List.of(settings));
        }

        public Builder solutionStackName(@Nullable Output<String> solutionStackName) {
            $.solutionStackName = solutionStackName;
            return this;
        }

        public Builder solutionStackName(String solutionStackName) {
            return solutionStackName(Output.of(solutionStackName));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder templateName(@Nullable Output<String> templateName) {
            $.templateName = templateName;
            return this;
        }

        public Builder templateName(String templateName) {
            return templateName(Output.of(templateName));
        }

        public Builder tier(@Nullable Output<String> tier) {
            $.tier = tier;
            return this;
        }

        public Builder tier(String tier) {
            return tier(Output.of(tier));
        }

        public Builder triggers(@Nullable Output<List<String>> triggers) {
            $.triggers = triggers;
            return this;
        }

        public Builder triggers(List<String> triggers) {
            return triggers(Output.of(triggers));
        }

        public Builder triggers(String... triggers) {
            return triggers(List.of(triggers));
        }

        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        public Builder version(String version) {
            return version(Output.of(version));
        }

        public Builder waitForReadyTimeout(@Nullable Output<String> waitForReadyTimeout) {
            $.waitForReadyTimeout = waitForReadyTimeout;
            return this;
        }

        public Builder waitForReadyTimeout(String waitForReadyTimeout) {
            return waitForReadyTimeout(Output.of(waitForReadyTimeout));
        }

        public EnvironmentState build() {
            return $;
        }
    }

}
