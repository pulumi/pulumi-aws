// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.outputs;

import com.pulumi.aws.ec2.outputs.GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRange;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetNetworkInsightsAnalysisExplanationSecurityGroupRule {
    private String cidr;
    private String direction;
    private List<GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRange> portRanges;
    private String prefixListId;
    private String protocol;
    private String securityGroupId;

    private GetNetworkInsightsAnalysisExplanationSecurityGroupRule() {}
    public String cidr() {
        return this.cidr;
    }
    public String direction() {
        return this.direction;
    }
    public List<GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRange> portRanges() {
        return this.portRanges;
    }
    public String prefixListId() {
        return this.prefixListId;
    }
    public String protocol() {
        return this.protocol;
    }
    public String securityGroupId() {
        return this.securityGroupId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkInsightsAnalysisExplanationSecurityGroupRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cidr;
        private String direction;
        private List<GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRange> portRanges;
        private String prefixListId;
        private String protocol;
        private String securityGroupId;
        public Builder() {}
        public Builder(GetNetworkInsightsAnalysisExplanationSecurityGroupRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cidr = defaults.cidr;
    	      this.direction = defaults.direction;
    	      this.portRanges = defaults.portRanges;
    	      this.prefixListId = defaults.prefixListId;
    	      this.protocol = defaults.protocol;
    	      this.securityGroupId = defaults.securityGroupId;
        }

        @CustomType.Setter
        public Builder cidr(String cidr) {
            if (cidr == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanationSecurityGroupRule", "cidr");
            }
            this.cidr = cidr;
            return this;
        }
        @CustomType.Setter
        public Builder direction(String direction) {
            if (direction == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanationSecurityGroupRule", "direction");
            }
            this.direction = direction;
            return this;
        }
        @CustomType.Setter
        public Builder portRanges(List<GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRange> portRanges) {
            if (portRanges == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanationSecurityGroupRule", "portRanges");
            }
            this.portRanges = portRanges;
            return this;
        }
        public Builder portRanges(GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRange... portRanges) {
            return portRanges(List.of(portRanges));
        }
        @CustomType.Setter
        public Builder prefixListId(String prefixListId) {
            if (prefixListId == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanationSecurityGroupRule", "prefixListId");
            }
            this.prefixListId = prefixListId;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(String protocol) {
            if (protocol == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanationSecurityGroupRule", "protocol");
            }
            this.protocol = protocol;
            return this;
        }
        @CustomType.Setter
        public Builder securityGroupId(String securityGroupId) {
            if (securityGroupId == null) {
              throw new MissingRequiredPropertyException("GetNetworkInsightsAnalysisExplanationSecurityGroupRule", "securityGroupId");
            }
            this.securityGroupId = securityGroupId;
            return this;
        }
        public GetNetworkInsightsAnalysisExplanationSecurityGroupRule build() {
            final var _resultValue = new GetNetworkInsightsAnalysisExplanationSecurityGroupRule();
            _resultValue.cidr = cidr;
            _resultValue.direction = direction;
            _resultValue.portRanges = portRanges;
            _resultValue.prefixListId = prefixListId;
            _resultValue.protocol = protocol;
            _resultValue.securityGroupId = securityGroupId;
            return _resultValue;
        }
    }
}
