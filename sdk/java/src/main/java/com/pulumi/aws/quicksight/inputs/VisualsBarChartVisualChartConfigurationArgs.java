// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.AxisDisplayOptionsArgs;
import com.pulumi.aws.quicksight.inputs.ChartAxisLabelOptionsArgs;
import com.pulumi.aws.quicksight.inputs.ContributionAnalysisDefaultsArgs;
import com.pulumi.aws.quicksight.inputs.DataLabelsOptionsArgs;
import com.pulumi.aws.quicksight.inputs.LegendOptionsArgs;
import com.pulumi.aws.quicksight.inputs.ReferenceLineArgs;
import com.pulumi.aws.quicksight.inputs.SmallMultiplesOptionsArgs;
import com.pulumi.aws.quicksight.inputs.TooltipOptionsArgs;
import com.pulumi.aws.quicksight.inputs.VisualPaletteArgs;
import com.pulumi.aws.quicksight.inputs.VisualsBarChartVisualChartConfigurationFieldWellsArgs;
import com.pulumi.aws.quicksight.inputs.VisualsBarChartVisualChartConfigurationSortConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VisualsBarChartVisualChartConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final VisualsBarChartVisualChartConfigurationArgs Empty = new VisualsBarChartVisualChartConfigurationArgs();

    @Import(name="barsArrangement")
    private @Nullable Output<String> barsArrangement;

    public Optional<Output<String>> barsArrangement() {
        return Optional.ofNullable(this.barsArrangement);
    }

    @Import(name="categoryAxis")
    private @Nullable Output<AxisDisplayOptionsArgs> categoryAxis;

    public Optional<Output<AxisDisplayOptionsArgs>> categoryAxis() {
        return Optional.ofNullable(this.categoryAxis);
    }

    @Import(name="categoryLabelOptions")
    private @Nullable Output<ChartAxisLabelOptionsArgs> categoryLabelOptions;

    public Optional<Output<ChartAxisLabelOptionsArgs>> categoryLabelOptions() {
        return Optional.ofNullable(this.categoryLabelOptions);
    }

    @Import(name="colorLabelOptions")
    private @Nullable Output<ChartAxisLabelOptionsArgs> colorLabelOptions;

    public Optional<Output<ChartAxisLabelOptionsArgs>> colorLabelOptions() {
        return Optional.ofNullable(this.colorLabelOptions);
    }

    @Import(name="contributionAnalysisDefaults")
    private @Nullable Output<List<ContributionAnalysisDefaultsArgs>> contributionAnalysisDefaults;

    public Optional<Output<List<ContributionAnalysisDefaultsArgs>>> contributionAnalysisDefaults() {
        return Optional.ofNullable(this.contributionAnalysisDefaults);
    }

    @Import(name="dataLabels")
    private @Nullable Output<DataLabelsOptionsArgs> dataLabels;

    public Optional<Output<DataLabelsOptionsArgs>> dataLabels() {
        return Optional.ofNullable(this.dataLabels);
    }

    @Import(name="fieldWells")
    private @Nullable Output<VisualsBarChartVisualChartConfigurationFieldWellsArgs> fieldWells;

    public Optional<Output<VisualsBarChartVisualChartConfigurationFieldWellsArgs>> fieldWells() {
        return Optional.ofNullable(this.fieldWells);
    }

    @Import(name="legend")
    private @Nullable Output<LegendOptionsArgs> legend;

    public Optional<Output<LegendOptionsArgs>> legend() {
        return Optional.ofNullable(this.legend);
    }

    @Import(name="orientation")
    private @Nullable Output<String> orientation;

    public Optional<Output<String>> orientation() {
        return Optional.ofNullable(this.orientation);
    }

    @Import(name="referenceLines")
    private @Nullable Output<List<ReferenceLineArgs>> referenceLines;

    public Optional<Output<List<ReferenceLineArgs>>> referenceLines() {
        return Optional.ofNullable(this.referenceLines);
    }

    @Import(name="smallMultiplesOptions")
    private @Nullable Output<SmallMultiplesOptionsArgs> smallMultiplesOptions;

    public Optional<Output<SmallMultiplesOptionsArgs>> smallMultiplesOptions() {
        return Optional.ofNullable(this.smallMultiplesOptions);
    }

    @Import(name="sortConfiguration")
    private @Nullable Output<VisualsBarChartVisualChartConfigurationSortConfigurationArgs> sortConfiguration;

    public Optional<Output<VisualsBarChartVisualChartConfigurationSortConfigurationArgs>> sortConfiguration() {
        return Optional.ofNullable(this.sortConfiguration);
    }

    @Import(name="tooltip")
    private @Nullable Output<TooltipOptionsArgs> tooltip;

    public Optional<Output<TooltipOptionsArgs>> tooltip() {
        return Optional.ofNullable(this.tooltip);
    }

    @Import(name="valueAxis")
    private @Nullable Output<AxisDisplayOptionsArgs> valueAxis;

    public Optional<Output<AxisDisplayOptionsArgs>> valueAxis() {
        return Optional.ofNullable(this.valueAxis);
    }

    @Import(name="valueLabelOptions")
    private @Nullable Output<ChartAxisLabelOptionsArgs> valueLabelOptions;

    public Optional<Output<ChartAxisLabelOptionsArgs>> valueLabelOptions() {
        return Optional.ofNullable(this.valueLabelOptions);
    }

    @Import(name="visualPalette")
    private @Nullable Output<VisualPaletteArgs> visualPalette;

    public Optional<Output<VisualPaletteArgs>> visualPalette() {
        return Optional.ofNullable(this.visualPalette);
    }

    private VisualsBarChartVisualChartConfigurationArgs() {}

    private VisualsBarChartVisualChartConfigurationArgs(VisualsBarChartVisualChartConfigurationArgs $) {
        this.barsArrangement = $.barsArrangement;
        this.categoryAxis = $.categoryAxis;
        this.categoryLabelOptions = $.categoryLabelOptions;
        this.colorLabelOptions = $.colorLabelOptions;
        this.contributionAnalysisDefaults = $.contributionAnalysisDefaults;
        this.dataLabels = $.dataLabels;
        this.fieldWells = $.fieldWells;
        this.legend = $.legend;
        this.orientation = $.orientation;
        this.referenceLines = $.referenceLines;
        this.smallMultiplesOptions = $.smallMultiplesOptions;
        this.sortConfiguration = $.sortConfiguration;
        this.tooltip = $.tooltip;
        this.valueAxis = $.valueAxis;
        this.valueLabelOptions = $.valueLabelOptions;
        this.visualPalette = $.visualPalette;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VisualsBarChartVisualChartConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VisualsBarChartVisualChartConfigurationArgs $;

        public Builder() {
            $ = new VisualsBarChartVisualChartConfigurationArgs();
        }

        public Builder(VisualsBarChartVisualChartConfigurationArgs defaults) {
            $ = new VisualsBarChartVisualChartConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder barsArrangement(@Nullable Output<String> barsArrangement) {
            $.barsArrangement = barsArrangement;
            return this;
        }

        public Builder barsArrangement(String barsArrangement) {
            return barsArrangement(Output.of(barsArrangement));
        }

        public Builder categoryAxis(@Nullable Output<AxisDisplayOptionsArgs> categoryAxis) {
            $.categoryAxis = categoryAxis;
            return this;
        }

        public Builder categoryAxis(AxisDisplayOptionsArgs categoryAxis) {
            return categoryAxis(Output.of(categoryAxis));
        }

        public Builder categoryLabelOptions(@Nullable Output<ChartAxisLabelOptionsArgs> categoryLabelOptions) {
            $.categoryLabelOptions = categoryLabelOptions;
            return this;
        }

        public Builder categoryLabelOptions(ChartAxisLabelOptionsArgs categoryLabelOptions) {
            return categoryLabelOptions(Output.of(categoryLabelOptions));
        }

        public Builder colorLabelOptions(@Nullable Output<ChartAxisLabelOptionsArgs> colorLabelOptions) {
            $.colorLabelOptions = colorLabelOptions;
            return this;
        }

        public Builder colorLabelOptions(ChartAxisLabelOptionsArgs colorLabelOptions) {
            return colorLabelOptions(Output.of(colorLabelOptions));
        }

        public Builder contributionAnalysisDefaults(@Nullable Output<List<ContributionAnalysisDefaultsArgs>> contributionAnalysisDefaults) {
            $.contributionAnalysisDefaults = contributionAnalysisDefaults;
            return this;
        }

        public Builder contributionAnalysisDefaults(List<ContributionAnalysisDefaultsArgs> contributionAnalysisDefaults) {
            return contributionAnalysisDefaults(Output.of(contributionAnalysisDefaults));
        }

        public Builder contributionAnalysisDefaults(ContributionAnalysisDefaultsArgs... contributionAnalysisDefaults) {
            return contributionAnalysisDefaults(List.of(contributionAnalysisDefaults));
        }

        public Builder dataLabels(@Nullable Output<DataLabelsOptionsArgs> dataLabels) {
            $.dataLabels = dataLabels;
            return this;
        }

        public Builder dataLabels(DataLabelsOptionsArgs dataLabels) {
            return dataLabels(Output.of(dataLabels));
        }

        public Builder fieldWells(@Nullable Output<VisualsBarChartVisualChartConfigurationFieldWellsArgs> fieldWells) {
            $.fieldWells = fieldWells;
            return this;
        }

        public Builder fieldWells(VisualsBarChartVisualChartConfigurationFieldWellsArgs fieldWells) {
            return fieldWells(Output.of(fieldWells));
        }

        public Builder legend(@Nullable Output<LegendOptionsArgs> legend) {
            $.legend = legend;
            return this;
        }

        public Builder legend(LegendOptionsArgs legend) {
            return legend(Output.of(legend));
        }

        public Builder orientation(@Nullable Output<String> orientation) {
            $.orientation = orientation;
            return this;
        }

        public Builder orientation(String orientation) {
            return orientation(Output.of(orientation));
        }

        public Builder referenceLines(@Nullable Output<List<ReferenceLineArgs>> referenceLines) {
            $.referenceLines = referenceLines;
            return this;
        }

        public Builder referenceLines(List<ReferenceLineArgs> referenceLines) {
            return referenceLines(Output.of(referenceLines));
        }

        public Builder referenceLines(ReferenceLineArgs... referenceLines) {
            return referenceLines(List.of(referenceLines));
        }

        public Builder smallMultiplesOptions(@Nullable Output<SmallMultiplesOptionsArgs> smallMultiplesOptions) {
            $.smallMultiplesOptions = smallMultiplesOptions;
            return this;
        }

        public Builder smallMultiplesOptions(SmallMultiplesOptionsArgs smallMultiplesOptions) {
            return smallMultiplesOptions(Output.of(smallMultiplesOptions));
        }

        public Builder sortConfiguration(@Nullable Output<VisualsBarChartVisualChartConfigurationSortConfigurationArgs> sortConfiguration) {
            $.sortConfiguration = sortConfiguration;
            return this;
        }

        public Builder sortConfiguration(VisualsBarChartVisualChartConfigurationSortConfigurationArgs sortConfiguration) {
            return sortConfiguration(Output.of(sortConfiguration));
        }

        public Builder tooltip(@Nullable Output<TooltipOptionsArgs> tooltip) {
            $.tooltip = tooltip;
            return this;
        }

        public Builder tooltip(TooltipOptionsArgs tooltip) {
            return tooltip(Output.of(tooltip));
        }

        public Builder valueAxis(@Nullable Output<AxisDisplayOptionsArgs> valueAxis) {
            $.valueAxis = valueAxis;
            return this;
        }

        public Builder valueAxis(AxisDisplayOptionsArgs valueAxis) {
            return valueAxis(Output.of(valueAxis));
        }

        public Builder valueLabelOptions(@Nullable Output<ChartAxisLabelOptionsArgs> valueLabelOptions) {
            $.valueLabelOptions = valueLabelOptions;
            return this;
        }

        public Builder valueLabelOptions(ChartAxisLabelOptionsArgs valueLabelOptions) {
            return valueLabelOptions(Output.of(valueLabelOptions));
        }

        public Builder visualPalette(@Nullable Output<VisualPaletteArgs> visualPalette) {
            $.visualPalette = visualPalette;
            return this;
        }

        public Builder visualPalette(VisualPaletteArgs visualPalette) {
            return visualPalette(Output.of(visualPalette));
        }

        public VisualsBarChartVisualChartConfigurationArgs build() {
            return $;
        }
    }

}
