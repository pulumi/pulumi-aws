// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.memorydb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetAclResult {
    /**
     * @return ARN of the ACL.
     * 
     */
    private String arn;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The minimum engine version supported by the ACL.
     * 
     */
    private String minimumEngineVersion;
    private String name;
    /**
     * @return Map of tags assigned to the ACL.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return Set of MemoryDB user names included in this ACL.
     * 
     */
    private List<String> userNames;

    private GetAclResult() {}
    /**
     * @return ARN of the ACL.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The minimum engine version supported by the ACL.
     * 
     */
    public String minimumEngineVersion() {
        return this.minimumEngineVersion;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return Map of tags assigned to the ACL.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return Set of MemoryDB user names included in this ACL.
     * 
     */
    public List<String> userNames() {
        return this.userNames;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAclResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private String id;
        private String minimumEngineVersion;
        private String name;
        private Map<String,String> tags;
        private List<String> userNames;
        public Builder() {}
        public Builder(GetAclResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.id = defaults.id;
    	      this.minimumEngineVersion = defaults.minimumEngineVersion;
    	      this.name = defaults.name;
    	      this.tags = defaults.tags;
    	      this.userNames = defaults.userNames;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            if (arn == null) {
              throw new MissingRequiredPropertyException("GetAclResult", "arn");
            }
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAclResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder minimumEngineVersion(String minimumEngineVersion) {
            if (minimumEngineVersion == null) {
              throw new MissingRequiredPropertyException("GetAclResult", "minimumEngineVersion");
            }
            this.minimumEngineVersion = minimumEngineVersion;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetAclResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetAclResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder userNames(List<String> userNames) {
            if (userNames == null) {
              throw new MissingRequiredPropertyException("GetAclResult", "userNames");
            }
            this.userNames = userNames;
            return this;
        }
        public Builder userNames(String... userNames) {
            return userNames(List.of(userNames));
        }
        public GetAclResult build() {
            final var _resultValue = new GetAclResult();
            _resultValue.arn = arn;
            _resultValue.id = id;
            _resultValue.minimumEngineVersion = minimumEngineVersion;
            _resultValue.name = name;
            _resultValue.tags = tags;
            _resultValue.userNames = userNames;
            return _resultValue;
        }
    }
}
