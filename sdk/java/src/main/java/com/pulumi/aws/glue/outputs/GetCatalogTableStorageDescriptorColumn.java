// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.glue.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetCatalogTableStorageDescriptorColumn {
    /**
     * @return Free-form text comment.
     * 
     */
    private String comment;
    /**
     * @return Name of the table.
     * 
     */
    private String name;
    /**
     * @return Map of initialization parameters for the SerDe, in key-value form.
     * 
     */
    private Map<String,String> parameters;
    /**
     * @return Datatype of data in the Column.
     * 
     */
    private String type;

    private GetCatalogTableStorageDescriptorColumn() {}
    /**
     * @return Free-form text comment.
     * 
     */
    public String comment() {
        return this.comment;
    }
    /**
     * @return Name of the table.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Map of initialization parameters for the SerDe, in key-value form.
     * 
     */
    public Map<String,String> parameters() {
        return this.parameters;
    }
    /**
     * @return Datatype of data in the Column.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCatalogTableStorageDescriptorColumn defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String comment;
        private String name;
        private Map<String,String> parameters;
        private String type;
        public Builder() {}
        public Builder(GetCatalogTableStorageDescriptorColumn defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.comment = defaults.comment;
    	      this.name = defaults.name;
    	      this.parameters = defaults.parameters;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder comment(String comment) {
            this.comment = Objects.requireNonNull(comment);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder parameters(Map<String,String> parameters) {
            this.parameters = Objects.requireNonNull(parameters);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetCatalogTableStorageDescriptorColumn build() {
            final var o = new GetCatalogTableStorageDescriptorColumn();
            o.comment = comment;
            o.name = name;
            o.parameters = parameters;
            o.type = type;
            return o;
        }
    }
}
