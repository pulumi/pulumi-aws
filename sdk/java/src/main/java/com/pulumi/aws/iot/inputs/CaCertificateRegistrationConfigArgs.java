// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iot.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CaCertificateRegistrationConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final CaCertificateRegistrationConfigArgs Empty = new CaCertificateRegistrationConfigArgs();

    /**
     * The ARN of the role.
     * 
     */
    @Import(name="roleArn")
    private @Nullable Output<Boolean> roleArn;

    /**
     * @return The ARN of the role.
     * 
     */
    public Optional<Output<Boolean>> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }

    /**
     * The template body.
     * 
     */
    @Import(name="templateBody")
    private @Nullable Output<String> templateBody;

    /**
     * @return The template body.
     * 
     */
    public Optional<Output<String>> templateBody() {
        return Optional.ofNullable(this.templateBody);
    }

    /**
     * The name of the provisioning template.
     * 
     */
    @Import(name="templateName")
    private @Nullable Output<String> templateName;

    /**
     * @return The name of the provisioning template.
     * 
     */
    public Optional<Output<String>> templateName() {
        return Optional.ofNullable(this.templateName);
    }

    private CaCertificateRegistrationConfigArgs() {}

    private CaCertificateRegistrationConfigArgs(CaCertificateRegistrationConfigArgs $) {
        this.roleArn = $.roleArn;
        this.templateBody = $.templateBody;
        this.templateName = $.templateName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CaCertificateRegistrationConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CaCertificateRegistrationConfigArgs $;

        public Builder() {
            $ = new CaCertificateRegistrationConfigArgs();
        }

        public Builder(CaCertificateRegistrationConfigArgs defaults) {
            $ = new CaCertificateRegistrationConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param roleArn The ARN of the role.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(@Nullable Output<Boolean> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn The ARN of the role.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(Boolean roleArn) {
            return roleArn(Output.of(roleArn));
        }

        /**
         * @param templateBody The template body.
         * 
         * @return builder
         * 
         */
        public Builder templateBody(@Nullable Output<String> templateBody) {
            $.templateBody = templateBody;
            return this;
        }

        /**
         * @param templateBody The template body.
         * 
         * @return builder
         * 
         */
        public Builder templateBody(String templateBody) {
            return templateBody(Output.of(templateBody));
        }

        /**
         * @param templateName The name of the provisioning template.
         * 
         * @return builder
         * 
         */
        public Builder templateName(@Nullable Output<String> templateName) {
            $.templateName = templateName;
            return this;
        }

        /**
         * @param templateName The name of the provisioning template.
         * 
         * @return builder
         * 
         */
        public Builder templateName(String templateName) {
            return templateName(Output.of(templateName));
        }

        public CaCertificateRegistrationConfigArgs build() {
            return $;
        }
    }

}
