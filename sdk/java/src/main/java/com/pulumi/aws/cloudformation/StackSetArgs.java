// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudformation;

import com.pulumi.aws.cloudformation.inputs.StackSetAutoDeploymentArgs;
import com.pulumi.aws.cloudformation.inputs.StackSetOperationPreferencesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StackSetArgs extends com.pulumi.resources.ResourceArgs {

    public static final StackSetArgs Empty = new StackSetArgs();

    @Import(name="administrationRoleArn")
    private @Nullable Output<String> administrationRoleArn;

    public Optional<Output<String>> administrationRoleArn() {
        return Optional.ofNullable(this.administrationRoleArn);
    }

    @Import(name="autoDeployment")
    private @Nullable Output<StackSetAutoDeploymentArgs> autoDeployment;

    public Optional<Output<StackSetAutoDeploymentArgs>> autoDeployment() {
        return Optional.ofNullable(this.autoDeployment);
    }

    @Import(name="callAs")
    private @Nullable Output<String> callAs;

    public Optional<Output<String>> callAs() {
        return Optional.ofNullable(this.callAs);
    }

    @Import(name="capabilities")
    private @Nullable Output<List<String>> capabilities;

    public Optional<Output<List<String>>> capabilities() {
        return Optional.ofNullable(this.capabilities);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="executionRoleName")
    private @Nullable Output<String> executionRoleName;

    public Optional<Output<String>> executionRoleName() {
        return Optional.ofNullable(this.executionRoleName);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="operationPreferences")
    private @Nullable Output<StackSetOperationPreferencesArgs> operationPreferences;

    public Optional<Output<StackSetOperationPreferencesArgs>> operationPreferences() {
        return Optional.ofNullable(this.operationPreferences);
    }

    @Import(name="parameters")
    private @Nullable Output<Map<String,String>> parameters;

    public Optional<Output<Map<String,String>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    @Import(name="permissionModel")
    private @Nullable Output<String> permissionModel;

    public Optional<Output<String>> permissionModel() {
        return Optional.ofNullable(this.permissionModel);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="templateBody")
    private @Nullable Output<String> templateBody;

    public Optional<Output<String>> templateBody() {
        return Optional.ofNullable(this.templateBody);
    }

    @Import(name="templateUrl")
    private @Nullable Output<String> templateUrl;

    public Optional<Output<String>> templateUrl() {
        return Optional.ofNullable(this.templateUrl);
    }

    private StackSetArgs() {}

    private StackSetArgs(StackSetArgs $) {
        this.administrationRoleArn = $.administrationRoleArn;
        this.autoDeployment = $.autoDeployment;
        this.callAs = $.callAs;
        this.capabilities = $.capabilities;
        this.description = $.description;
        this.executionRoleName = $.executionRoleName;
        this.name = $.name;
        this.operationPreferences = $.operationPreferences;
        this.parameters = $.parameters;
        this.permissionModel = $.permissionModel;
        this.tags = $.tags;
        this.templateBody = $.templateBody;
        this.templateUrl = $.templateUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StackSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StackSetArgs $;

        public Builder() {
            $ = new StackSetArgs();
        }

        public Builder(StackSetArgs defaults) {
            $ = new StackSetArgs(Objects.requireNonNull(defaults));
        }

        public Builder administrationRoleArn(@Nullable Output<String> administrationRoleArn) {
            $.administrationRoleArn = administrationRoleArn;
            return this;
        }

        public Builder administrationRoleArn(String administrationRoleArn) {
            return administrationRoleArn(Output.of(administrationRoleArn));
        }

        public Builder autoDeployment(@Nullable Output<StackSetAutoDeploymentArgs> autoDeployment) {
            $.autoDeployment = autoDeployment;
            return this;
        }

        public Builder autoDeployment(StackSetAutoDeploymentArgs autoDeployment) {
            return autoDeployment(Output.of(autoDeployment));
        }

        public Builder callAs(@Nullable Output<String> callAs) {
            $.callAs = callAs;
            return this;
        }

        public Builder callAs(String callAs) {
            return callAs(Output.of(callAs));
        }

        public Builder capabilities(@Nullable Output<List<String>> capabilities) {
            $.capabilities = capabilities;
            return this;
        }

        public Builder capabilities(List<String> capabilities) {
            return capabilities(Output.of(capabilities));
        }

        public Builder capabilities(String... capabilities) {
            return capabilities(List.of(capabilities));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder executionRoleName(@Nullable Output<String> executionRoleName) {
            $.executionRoleName = executionRoleName;
            return this;
        }

        public Builder executionRoleName(String executionRoleName) {
            return executionRoleName(Output.of(executionRoleName));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder operationPreferences(@Nullable Output<StackSetOperationPreferencesArgs> operationPreferences) {
            $.operationPreferences = operationPreferences;
            return this;
        }

        public Builder operationPreferences(StackSetOperationPreferencesArgs operationPreferences) {
            return operationPreferences(Output.of(operationPreferences));
        }

        public Builder parameters(@Nullable Output<Map<String,String>> parameters) {
            $.parameters = parameters;
            return this;
        }

        public Builder parameters(Map<String,String> parameters) {
            return parameters(Output.of(parameters));
        }

        public Builder permissionModel(@Nullable Output<String> permissionModel) {
            $.permissionModel = permissionModel;
            return this;
        }

        public Builder permissionModel(String permissionModel) {
            return permissionModel(Output.of(permissionModel));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder templateBody(@Nullable Output<String> templateBody) {
            $.templateBody = templateBody;
            return this;
        }

        public Builder templateBody(String templateBody) {
            return templateBody(Output.of(templateBody));
        }

        public Builder templateUrl(@Nullable Output<String> templateUrl) {
            $.templateUrl = templateUrl;
            return this;
        }

        public Builder templateUrl(String templateUrl) {
            return templateUrl(Output.of(templateUrl));
        }

        public StackSetArgs build() {
            return $;
        }
    }

}
