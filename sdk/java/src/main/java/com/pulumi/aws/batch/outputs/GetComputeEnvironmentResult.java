// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.batch.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetComputeEnvironmentResult {
    /**
     * @return ARN of the compute environment.
     * 
     */
    private @Nullable String arn;
    private String computeEnvironmentName;
    /**
     * @return ARN of the underlying Amazon ECS cluster used by the compute environment.
     * 
     */
    private @Nullable String ecsClusterArn;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return ARN of the IAM role that allows AWS Batch to make calls to other AWS services on your behalf.
     * 
     */
    private @Nullable String serviceRole;
    /**
     * @return State of the compute environment (for example, `ENABLED` or `DISABLED`). If the state is `ENABLED`, then the compute environment accepts jobs from a queue and can scale out automatically based on queues.
     * 
     */
    private @Nullable String state;
    /**
     * @return Current status of the compute environment (for example, `CREATING` or `VALID`).
     * 
     */
    private @Nullable String status;
    /**
     * @return Short, human-readable string to provide additional details about the current status of the compute environment.
     * 
     */
    private @Nullable String statusReason;
    /**
     * @return Key-value map of resource tags
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Type of the compute environment (for example, `MANAGED` or `UNMANAGED`).
     * 
     */
    private @Nullable String type;

    private GetComputeEnvironmentResult() {}
    /**
     * @return ARN of the compute environment.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    public String computeEnvironmentName() {
        return this.computeEnvironmentName;
    }
    /**
     * @return ARN of the underlying Amazon ECS cluster used by the compute environment.
     * 
     */
    public Optional<String> ecsClusterArn() {
        return Optional.ofNullable(this.ecsClusterArn);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return ARN of the IAM role that allows AWS Batch to make calls to other AWS services on your behalf.
     * 
     */
    public Optional<String> serviceRole() {
        return Optional.ofNullable(this.serviceRole);
    }
    /**
     * @return State of the compute environment (for example, `ENABLED` or `DISABLED`). If the state is `ENABLED`, then the compute environment accepts jobs from a queue and can scale out automatically based on queues.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return Current status of the compute environment (for example, `CREATING` or `VALID`).
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return Short, human-readable string to provide additional details about the current status of the compute environment.
     * 
     */
    public Optional<String> statusReason() {
        return Optional.ofNullable(this.statusReason);
    }
    /**
     * @return Key-value map of resource tags
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Type of the compute environment (for example, `MANAGED` or `UNMANAGED`).
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetComputeEnvironmentResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private String computeEnvironmentName;
        private @Nullable String ecsClusterArn;
        private @Nullable String id;
        private @Nullable String serviceRole;
        private @Nullable String state;
        private @Nullable String status;
        private @Nullable String statusReason;
        private @Nullable Map<String,String> tags;
        private @Nullable String type;
        public Builder() {}
        public Builder(GetComputeEnvironmentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.computeEnvironmentName = defaults.computeEnvironmentName;
    	      this.ecsClusterArn = defaults.ecsClusterArn;
    	      this.id = defaults.id;
    	      this.serviceRole = defaults.serviceRole;
    	      this.state = defaults.state;
    	      this.status = defaults.status;
    	      this.statusReason = defaults.statusReason;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder computeEnvironmentName(String computeEnvironmentName) {
            this.computeEnvironmentName = Objects.requireNonNull(computeEnvironmentName);
            return this;
        }
        @CustomType.Setter
        public Builder ecsClusterArn(@Nullable String ecsClusterArn) {
            this.ecsClusterArn = ecsClusterArn;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder serviceRole(@Nullable String serviceRole) {
            this.serviceRole = serviceRole;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder statusReason(@Nullable String statusReason) {
            this.statusReason = statusReason;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        public GetComputeEnvironmentResult build() {
            final var o = new GetComputeEnvironmentResult();
            o.arn = arn;
            o.computeEnvironmentName = computeEnvironmentName;
            o.ecsClusterArn = ecsClusterArn;
            o.id = id;
            o.serviceRole = serviceRole;
            o.state = state;
            o.status = status;
            o.statusReason = statusReason;
            o.tags = tags;
            o.type = type;
            return o;
        }
    }
}
