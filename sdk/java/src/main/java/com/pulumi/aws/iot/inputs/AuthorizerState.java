// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iot.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AuthorizerState extends com.pulumi.resources.ResourceArgs {

    public static final AuthorizerState Empty = new AuthorizerState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="authorizerFunctionArn")
    private @Nullable Output<String> authorizerFunctionArn;

    public Optional<Output<String>> authorizerFunctionArn() {
        return Optional.ofNullable(this.authorizerFunctionArn);
    }

    @Import(name="enableCachingForHttp")
    private @Nullable Output<Boolean> enableCachingForHttp;

    public Optional<Output<Boolean>> enableCachingForHttp() {
        return Optional.ofNullable(this.enableCachingForHttp);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="signingDisabled")
    private @Nullable Output<Boolean> signingDisabled;

    public Optional<Output<Boolean>> signingDisabled() {
        return Optional.ofNullable(this.signingDisabled);
    }

    @Import(name="status")
    private @Nullable Output<String> status;

    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    @Import(name="tokenKeyName")
    private @Nullable Output<String> tokenKeyName;

    public Optional<Output<String>> tokenKeyName() {
        return Optional.ofNullable(this.tokenKeyName);
    }

    @Import(name="tokenSigningPublicKeys")
    private @Nullable Output<Map<String,String>> tokenSigningPublicKeys;

    public Optional<Output<Map<String,String>>> tokenSigningPublicKeys() {
        return Optional.ofNullable(this.tokenSigningPublicKeys);
    }

    private AuthorizerState() {}

    private AuthorizerState(AuthorizerState $) {
        this.arn = $.arn;
        this.authorizerFunctionArn = $.authorizerFunctionArn;
        this.enableCachingForHttp = $.enableCachingForHttp;
        this.name = $.name;
        this.signingDisabled = $.signingDisabled;
        this.status = $.status;
        this.tokenKeyName = $.tokenKeyName;
        this.tokenSigningPublicKeys = $.tokenSigningPublicKeys;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuthorizerState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuthorizerState $;

        public Builder() {
            $ = new AuthorizerState();
        }

        public Builder(AuthorizerState defaults) {
            $ = new AuthorizerState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder authorizerFunctionArn(@Nullable Output<String> authorizerFunctionArn) {
            $.authorizerFunctionArn = authorizerFunctionArn;
            return this;
        }

        public Builder authorizerFunctionArn(String authorizerFunctionArn) {
            return authorizerFunctionArn(Output.of(authorizerFunctionArn));
        }

        public Builder enableCachingForHttp(@Nullable Output<Boolean> enableCachingForHttp) {
            $.enableCachingForHttp = enableCachingForHttp;
            return this;
        }

        public Builder enableCachingForHttp(Boolean enableCachingForHttp) {
            return enableCachingForHttp(Output.of(enableCachingForHttp));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder signingDisabled(@Nullable Output<Boolean> signingDisabled) {
            $.signingDisabled = signingDisabled;
            return this;
        }

        public Builder signingDisabled(Boolean signingDisabled) {
            return signingDisabled(Output.of(signingDisabled));
        }

        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        public Builder status(String status) {
            return status(Output.of(status));
        }

        public Builder tokenKeyName(@Nullable Output<String> tokenKeyName) {
            $.tokenKeyName = tokenKeyName;
            return this;
        }

        public Builder tokenKeyName(String tokenKeyName) {
            return tokenKeyName(Output.of(tokenKeyName));
        }

        public Builder tokenSigningPublicKeys(@Nullable Output<Map<String,String>> tokenSigningPublicKeys) {
            $.tokenSigningPublicKeys = tokenSigningPublicKeys;
            return this;
        }

        public Builder tokenSigningPublicKeys(Map<String,String> tokenSigningPublicKeys) {
            return tokenSigningPublicKeys(Output.of(tokenSigningPublicKeys));
        }

        public AuthorizerState build() {
            return $;
        }
    }

}
