// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apigatewayv2.outputs;

import com.pulumi.aws.apigatewayv2.outputs.GetApiCorsConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetApiResult {
    /**
     * @return URI of the API, of the form `https://{api-id}.execute-api.{region}.amazonaws.com` for HTTP APIs and `wss://{api-id}.execute-api.{region}.amazonaws.com` for WebSocket APIs.
     * 
     */
    private String apiEndpoint;
    private String apiId;
    /**
     * @return An [API key selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions).
     * Applicable for WebSocket APIs.
     * 
     */
    private String apiKeySelectionExpression;
    /**
     * @return ARN of the API.
     * 
     */
    private String arn;
    /**
     * @return Cross-origin resource sharing (CORS) [configuration](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-cors.html).
     * Applicable for HTTP APIs.
     * 
     */
    private List<GetApiCorsConfiguration> corsConfigurations;
    /**
     * @return Description of the API.
     * 
     */
    private String description;
    /**
     * @return Whether clients can invoke the API by using the default `execute-api` endpoint.
     * 
     */
    private Boolean disableExecuteApiEndpoint;
    /**
     * @return ARN prefix to be used in an `aws.lambda.Permission`&#39;s `source_arn` attribute
     * or in an `aws.iam.Policy` to authorize access to the [`@connections` API](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-how-to-call-websocket-api-connections.html).
     * See the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-control-access-iam.html) for details.
     * 
     */
    private String executionArn;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Name of the API.
     * 
     */
    private String name;
    /**
     * @return API protocol.
     * 
     */
    private String protocolType;
    /**
     * @return The [route selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-route-selection-expressions) for the API.
     * 
     */
    private String routeSelectionExpression;
    /**
     * @return Map of resource tags.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return Version identifier for the API.
     * 
     */
    private String version;

    private GetApiResult() {}
    /**
     * @return URI of the API, of the form `https://{api-id}.execute-api.{region}.amazonaws.com` for HTTP APIs and `wss://{api-id}.execute-api.{region}.amazonaws.com` for WebSocket APIs.
     * 
     */
    public String apiEndpoint() {
        return this.apiEndpoint;
    }
    public String apiId() {
        return this.apiId;
    }
    /**
     * @return An [API key selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions).
     * Applicable for WebSocket APIs.
     * 
     */
    public String apiKeySelectionExpression() {
        return this.apiKeySelectionExpression;
    }
    /**
     * @return ARN of the API.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return Cross-origin resource sharing (CORS) [configuration](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-cors.html).
     * Applicable for HTTP APIs.
     * 
     */
    public List<GetApiCorsConfiguration> corsConfigurations() {
        return this.corsConfigurations;
    }
    /**
     * @return Description of the API.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Whether clients can invoke the API by using the default `execute-api` endpoint.
     * 
     */
    public Boolean disableExecuteApiEndpoint() {
        return this.disableExecuteApiEndpoint;
    }
    /**
     * @return ARN prefix to be used in an `aws.lambda.Permission`&#39;s `source_arn` attribute
     * or in an `aws.iam.Policy` to authorize access to the [`@connections` API](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-how-to-call-websocket-api-connections.html).
     * See the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-control-access-iam.html) for details.
     * 
     */
    public String executionArn() {
        return this.executionArn;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Name of the API.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return API protocol.
     * 
     */
    public String protocolType() {
        return this.protocolType;
    }
    /**
     * @return The [route selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-route-selection-expressions) for the API.
     * 
     */
    public String routeSelectionExpression() {
        return this.routeSelectionExpression;
    }
    /**
     * @return Map of resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return Version identifier for the API.
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApiResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String apiEndpoint;
        private String apiId;
        private String apiKeySelectionExpression;
        private String arn;
        private List<GetApiCorsConfiguration> corsConfigurations;
        private String description;
        private Boolean disableExecuteApiEndpoint;
        private String executionArn;
        private String id;
        private String name;
        private String protocolType;
        private String routeSelectionExpression;
        private Map<String,String> tags;
        private String version;
        public Builder() {}
        public Builder(GetApiResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiEndpoint = defaults.apiEndpoint;
    	      this.apiId = defaults.apiId;
    	      this.apiKeySelectionExpression = defaults.apiKeySelectionExpression;
    	      this.arn = defaults.arn;
    	      this.corsConfigurations = defaults.corsConfigurations;
    	      this.description = defaults.description;
    	      this.disableExecuteApiEndpoint = defaults.disableExecuteApiEndpoint;
    	      this.executionArn = defaults.executionArn;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.protocolType = defaults.protocolType;
    	      this.routeSelectionExpression = defaults.routeSelectionExpression;
    	      this.tags = defaults.tags;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder apiEndpoint(String apiEndpoint) {
            this.apiEndpoint = Objects.requireNonNull(apiEndpoint);
            return this;
        }
        @CustomType.Setter
        public Builder apiId(String apiId) {
            this.apiId = Objects.requireNonNull(apiId);
            return this;
        }
        @CustomType.Setter
        public Builder apiKeySelectionExpression(String apiKeySelectionExpression) {
            this.apiKeySelectionExpression = Objects.requireNonNull(apiKeySelectionExpression);
            return this;
        }
        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder corsConfigurations(List<GetApiCorsConfiguration> corsConfigurations) {
            this.corsConfigurations = Objects.requireNonNull(corsConfigurations);
            return this;
        }
        public Builder corsConfigurations(GetApiCorsConfiguration... corsConfigurations) {
            return corsConfigurations(List.of(corsConfigurations));
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder disableExecuteApiEndpoint(Boolean disableExecuteApiEndpoint) {
            this.disableExecuteApiEndpoint = Objects.requireNonNull(disableExecuteApiEndpoint);
            return this;
        }
        @CustomType.Setter
        public Builder executionArn(String executionArn) {
            this.executionArn = Objects.requireNonNull(executionArn);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder protocolType(String protocolType) {
            this.protocolType = Objects.requireNonNull(protocolType);
            return this;
        }
        @CustomType.Setter
        public Builder routeSelectionExpression(String routeSelectionExpression) {
            this.routeSelectionExpression = Objects.requireNonNull(routeSelectionExpression);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }
        public GetApiResult build() {
            final var _resultValue = new GetApiResult();
            _resultValue.apiEndpoint = apiEndpoint;
            _resultValue.apiId = apiId;
            _resultValue.apiKeySelectionExpression = apiKeySelectionExpression;
            _resultValue.arn = arn;
            _resultValue.corsConfigurations = corsConfigurations;
            _resultValue.description = description;
            _resultValue.disableExecuteApiEndpoint = disableExecuteApiEndpoint;
            _resultValue.executionArn = executionArn;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.protocolType = protocolType;
            _resultValue.routeSelectionExpression = routeSelectionExpression;
            _resultValue.tags = tags;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
