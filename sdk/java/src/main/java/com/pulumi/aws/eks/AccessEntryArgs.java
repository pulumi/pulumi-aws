// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.eks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccessEntryArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccessEntryArgs Empty = new AccessEntryArgs();

    /**
     * Name of the EKS Cluster.
     * 
     */
    @Import(name="clusterName", required=true)
    private Output<String> clusterName;

    /**
     * @return Name of the EKS Cluster.
     * 
     */
    public Output<String> clusterName() {
        return this.clusterName;
    }

    /**
     * List of string which can optionally specify the Kubernetes groups the user would belong to when creating an access entry.
     * 
     */
    @Import(name="kubernetesGroups")
    private @Nullable Output<List<String>> kubernetesGroups;

    /**
     * @return List of string which can optionally specify the Kubernetes groups the user would belong to when creating an access entry.
     * 
     */
    public Optional<Output<List<String>>> kubernetesGroups() {
        return Optional.ofNullable(this.kubernetesGroups);
    }

    /**
     * The IAM Principal ARN which requires Authentication access to the EKS cluster.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="principalArn", required=true)
    private Output<String> principalArn;

    /**
     * @return The IAM Principal ARN which requires Authentication access to the EKS cluster.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<String> principalArn() {
        return this.principalArn;
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Defaults to STANDARD which provides the standard workflow. EC2_LINUX, EC2_WINDOWS, FARGATE_LINUX types disallow users to input a username or groups, and prevent associations.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Defaults to STANDARD which provides the standard workflow. EC2_LINUX, EC2_WINDOWS, FARGATE_LINUX types disallow users to input a username or groups, and prevent associations.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * Defaults to principal ARN if user is principal else defaults to assume-role/session-name is role is used.
     * 
     */
    @Import(name="userName")
    private @Nullable Output<String> userName;

    /**
     * @return Defaults to principal ARN if user is principal else defaults to assume-role/session-name is role is used.
     * 
     */
    public Optional<Output<String>> userName() {
        return Optional.ofNullable(this.userName);
    }

    private AccessEntryArgs() {}

    private AccessEntryArgs(AccessEntryArgs $) {
        this.clusterName = $.clusterName;
        this.kubernetesGroups = $.kubernetesGroups;
        this.principalArn = $.principalArn;
        this.tags = $.tags;
        this.type = $.type;
        this.userName = $.userName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccessEntryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccessEntryArgs $;

        public Builder() {
            $ = new AccessEntryArgs();
        }

        public Builder(AccessEntryArgs defaults) {
            $ = new AccessEntryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterName Name of the EKS Cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(Output<String> clusterName) {
            $.clusterName = clusterName;
            return this;
        }

        /**
         * @param clusterName Name of the EKS Cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(String clusterName) {
            return clusterName(Output.of(clusterName));
        }

        /**
         * @param kubernetesGroups List of string which can optionally specify the Kubernetes groups the user would belong to when creating an access entry.
         * 
         * @return builder
         * 
         */
        public Builder kubernetesGroups(@Nullable Output<List<String>> kubernetesGroups) {
            $.kubernetesGroups = kubernetesGroups;
            return this;
        }

        /**
         * @param kubernetesGroups List of string which can optionally specify the Kubernetes groups the user would belong to when creating an access entry.
         * 
         * @return builder
         * 
         */
        public Builder kubernetesGroups(List<String> kubernetesGroups) {
            return kubernetesGroups(Output.of(kubernetesGroups));
        }

        /**
         * @param kubernetesGroups List of string which can optionally specify the Kubernetes groups the user would belong to when creating an access entry.
         * 
         * @return builder
         * 
         */
        public Builder kubernetesGroups(String... kubernetesGroups) {
            return kubernetesGroups(List.of(kubernetesGroups));
        }

        /**
         * @param principalArn The IAM Principal ARN which requires Authentication access to the EKS cluster.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder principalArn(Output<String> principalArn) {
            $.principalArn = principalArn;
            return this;
        }

        /**
         * @param principalArn The IAM Principal ARN which requires Authentication access to the EKS cluster.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder principalArn(String principalArn) {
            return principalArn(Output.of(principalArn));
        }

        /**
         * @param tags Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param type Defaults to STANDARD which provides the standard workflow. EC2_LINUX, EC2_WINDOWS, FARGATE_LINUX types disallow users to input a username or groups, and prevent associations.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Defaults to STANDARD which provides the standard workflow. EC2_LINUX, EC2_WINDOWS, FARGATE_LINUX types disallow users to input a username or groups, and prevent associations.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param userName Defaults to principal ARN if user is principal else defaults to assume-role/session-name is role is used.
         * 
         * @return builder
         * 
         */
        public Builder userName(@Nullable Output<String> userName) {
            $.userName = userName;
            return this;
        }

        /**
         * @param userName Defaults to principal ARN if user is principal else defaults to assume-role/session-name is role is used.
         * 
         * @return builder
         * 
         */
        public Builder userName(String userName) {
            return userName(Output.of(userName));
        }

        public AccessEntryArgs build() {
            if ($.clusterName == null) {
                throw new MissingRequiredPropertyException("AccessEntryArgs", "clusterName");
            }
            if ($.principalArn == null) {
                throw new MissingRequiredPropertyException("AccessEntryArgs", "principalArn");
            }
            return $;
        }
    }

}
