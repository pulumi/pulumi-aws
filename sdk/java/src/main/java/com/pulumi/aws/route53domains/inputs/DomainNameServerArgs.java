// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.route53domains.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class DomainNameServerArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainNameServerArgs Empty = new DomainNameServerArgs();

    /**
     * Glue IP addresses of a name server. The list can contain only one IPv4 and one IPv6 address.
     * 
     */
    @Import(name="glueIps", required=true)
    private Output<List<String>> glueIps;

    /**
     * @return Glue IP addresses of a name server. The list can contain only one IPv4 and one IPv6 address.
     * 
     */
    public Output<List<String>> glueIps() {
        return this.glueIps;
    }

    /**
     * The fully qualified host name of the name server.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The fully qualified host name of the name server.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private DomainNameServerArgs() {}

    private DomainNameServerArgs(DomainNameServerArgs $) {
        this.glueIps = $.glueIps;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainNameServerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainNameServerArgs $;

        public Builder() {
            $ = new DomainNameServerArgs();
        }

        public Builder(DomainNameServerArgs defaults) {
            $ = new DomainNameServerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param glueIps Glue IP addresses of a name server. The list can contain only one IPv4 and one IPv6 address.
         * 
         * @return builder
         * 
         */
        public Builder glueIps(Output<List<String>> glueIps) {
            $.glueIps = glueIps;
            return this;
        }

        /**
         * @param glueIps Glue IP addresses of a name server. The list can contain only one IPv4 and one IPv6 address.
         * 
         * @return builder
         * 
         */
        public Builder glueIps(List<String> glueIps) {
            return glueIps(Output.of(glueIps));
        }

        /**
         * @param glueIps Glue IP addresses of a name server. The list can contain only one IPv4 and one IPv6 address.
         * 
         * @return builder
         * 
         */
        public Builder glueIps(String... glueIps) {
            return glueIps(List.of(glueIps));
        }

        /**
         * @param name The fully qualified host name of the name server.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The fully qualified host name of the name server.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public DomainNameServerArgs build() {
            if ($.glueIps == null) {
                throw new MissingRequiredPropertyException("DomainNameServerArgs", "glueIps");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("DomainNameServerArgs", "name");
            }
            return $;
        }
    }

}
