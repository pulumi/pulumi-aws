// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.chimesdkmediapipelines.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MediaInsightsPipelineConfigurationRealTimeAlertConfigurationRuleKeywordMatchConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final MediaInsightsPipelineConfigurationRealTimeAlertConfigurationRuleKeywordMatchConfigurationArgs Empty = new MediaInsightsPipelineConfigurationRealTimeAlertConfigurationRuleKeywordMatchConfigurationArgs();

    @Import(name="keywords", required=true)
    private Output<List<String>> keywords;

    public Output<List<String>> keywords() {
        return this.keywords;
    }

    @Import(name="negate")
    private @Nullable Output<Boolean> negate;

    public Optional<Output<Boolean>> negate() {
        return Optional.ofNullable(this.negate);
    }

    @Import(name="ruleName", required=true)
    private Output<String> ruleName;

    public Output<String> ruleName() {
        return this.ruleName;
    }

    private MediaInsightsPipelineConfigurationRealTimeAlertConfigurationRuleKeywordMatchConfigurationArgs() {}

    private MediaInsightsPipelineConfigurationRealTimeAlertConfigurationRuleKeywordMatchConfigurationArgs(MediaInsightsPipelineConfigurationRealTimeAlertConfigurationRuleKeywordMatchConfigurationArgs $) {
        this.keywords = $.keywords;
        this.negate = $.negate;
        this.ruleName = $.ruleName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MediaInsightsPipelineConfigurationRealTimeAlertConfigurationRuleKeywordMatchConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MediaInsightsPipelineConfigurationRealTimeAlertConfigurationRuleKeywordMatchConfigurationArgs $;

        public Builder() {
            $ = new MediaInsightsPipelineConfigurationRealTimeAlertConfigurationRuleKeywordMatchConfigurationArgs();
        }

        public Builder(MediaInsightsPipelineConfigurationRealTimeAlertConfigurationRuleKeywordMatchConfigurationArgs defaults) {
            $ = new MediaInsightsPipelineConfigurationRealTimeAlertConfigurationRuleKeywordMatchConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder keywords(Output<List<String>> keywords) {
            $.keywords = keywords;
            return this;
        }

        public Builder keywords(List<String> keywords) {
            return keywords(Output.of(keywords));
        }

        public Builder keywords(String... keywords) {
            return keywords(List.of(keywords));
        }

        public Builder negate(@Nullable Output<Boolean> negate) {
            $.negate = negate;
            return this;
        }

        public Builder negate(Boolean negate) {
            return negate(Output.of(negate));
        }

        public Builder ruleName(Output<String> ruleName) {
            $.ruleName = ruleName;
            return this;
        }

        public Builder ruleName(String ruleName) {
            return ruleName(Output.of(ruleName));
        }

        public MediaInsightsPipelineConfigurationRealTimeAlertConfigurationRuleKeywordMatchConfigurationArgs build() {
            if ($.keywords == null) {
                throw new MissingRequiredPropertyException("MediaInsightsPipelineConfigurationRealTimeAlertConfigurationRuleKeywordMatchConfigurationArgs", "keywords");
            }
            if ($.ruleName == null) {
                throw new MissingRequiredPropertyException("MediaInsightsPipelineConfigurationRealTimeAlertConfigurationRuleKeywordMatchConfigurationArgs", "ruleName");
            }
            return $;
        }
    }

}
