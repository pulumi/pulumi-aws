// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codepipeline;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.codepipeline.PipelineArgs;
import com.pulumi.aws.codepipeline.inputs.PipelineState;
import com.pulumi.aws.codepipeline.outputs.PipelineArtifactStore;
import com.pulumi.aws.codepipeline.outputs.PipelineStage;
import com.pulumi.aws.codepipeline.outputs.PipelineTrigger;
import com.pulumi.aws.codepipeline.outputs.PipelineTriggerAll;
import com.pulumi.aws.codepipeline.outputs.PipelineVariable;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a CodePipeline.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.codestarconnections.Connection;
 * import com.pulumi.aws.codestarconnections.ConnectionArgs;
 * import com.pulumi.aws.s3.BucketV2;
 * import com.pulumi.aws.s3.BucketV2Args;
 * import com.pulumi.aws.iam.IamFunctions;
 * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
 * import com.pulumi.aws.iam.Role;
 * import com.pulumi.aws.iam.RoleArgs;
 * import com.pulumi.aws.kms.KmsFunctions;
 * import com.pulumi.aws.kms.inputs.GetAliasArgs;
 * import com.pulumi.aws.codepipeline.Pipeline;
 * import com.pulumi.aws.codepipeline.PipelineArgs;
 * import com.pulumi.aws.codepipeline.inputs.PipelineArtifactStoreArgs;
 * import com.pulumi.aws.codepipeline.inputs.PipelineArtifactStoreEncryptionKeyArgs;
 * import com.pulumi.aws.codepipeline.inputs.PipelineStageArgs;
 * import com.pulumi.aws.s3.BucketPublicAccessBlock;
 * import com.pulumi.aws.s3.BucketPublicAccessBlockArgs;
 * import com.pulumi.aws.iam.RolePolicy;
 * import com.pulumi.aws.iam.RolePolicyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Connection("example", ConnectionArgs.builder()
 *             .name("example-connection")
 *             .providerType("GitHub")
 *             .build());
 * 
 *         var codepipelineBucket = new BucketV2("codepipelineBucket", BucketV2Args.builder()
 *             .bucket("test-bucket")
 *             .build());
 * 
 *         final var assumeRole = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
 *             .statements(GetPolicyDocumentStatementArgs.builder()
 *                 .effect("Allow")
 *                 .principals(GetPolicyDocumentStatementPrincipalArgs.builder()
 *                     .type("Service")
 *                     .identifiers("codepipeline.amazonaws.com")
 *                     .build())
 *                 .actions("sts:AssumeRole")
 *                 .build())
 *             .build());
 * 
 *         var codepipelineRole = new Role("codepipelineRole", RoleArgs.builder()
 *             .name("test-role")
 *             .assumeRolePolicy(assumeRole.json())
 *             .build());
 * 
 *         final var s3kmskey = KmsFunctions.getAlias(GetAliasArgs.builder()
 *             .name("alias/myKmsKey")
 *             .build());
 * 
 *         var codepipeline = new Pipeline("codepipeline", PipelineArgs.builder()
 *             .name("tf-test-pipeline")
 *             .roleArn(codepipelineRole.arn())
 *             .artifactStores(PipelineArtifactStoreArgs.builder()
 *                 .location(codepipelineBucket.bucket())
 *                 .type("S3")
 *                 .encryptionKey(PipelineArtifactStoreEncryptionKeyArgs.builder()
 *                     .id(s3kmskey.arn())
 *                     .type("KMS")
 *                     .build())
 *                 .build())
 *             .stages(            
 *                 PipelineStageArgs.builder()
 *                     .name("Source")
 *                     .actions(PipelineStageActionArgs.builder()
 *                         .name("Source")
 *                         .category("Source")
 *                         .owner("AWS")
 *                         .provider("CodeStarSourceConnection")
 *                         .version("1")
 *                         .outputArtifacts("source_output")
 *                         .configuration(Map.ofEntries(
 *                             Map.entry("ConnectionArn", example.arn()),
 *                             Map.entry("FullRepositoryId", "my-organization/example"),
 *                             Map.entry("BranchName", "main")
 *                         ))
 *                         .build())
 *                     .build(),
 *                 PipelineStageArgs.builder()
 *                     .name("Build")
 *                     .actions(PipelineStageActionArgs.builder()
 *                         .name("Build")
 *                         .category("Build")
 *                         .owner("AWS")
 *                         .provider("CodeBuild")
 *                         .inputArtifacts("source_output")
 *                         .outputArtifacts("build_output")
 *                         .version("1")
 *                         .configuration(Map.of("ProjectName", "test"))
 *                         .build())
 *                     .build(),
 *                 PipelineStageArgs.builder()
 *                     .name("Deploy")
 *                     .actions(PipelineStageActionArgs.builder()
 *                         .name("Deploy")
 *                         .category("Deploy")
 *                         .owner("AWS")
 *                         .provider("CloudFormation")
 *                         .inputArtifacts("build_output")
 *                         .version("1")
 *                         .configuration(Map.ofEntries(
 *                             Map.entry("ActionMode", "REPLACE_ON_FAILURE"),
 *                             Map.entry("Capabilities", "CAPABILITY_AUTO_EXPAND,CAPABILITY_IAM"),
 *                             Map.entry("OutputFileName", "CreateStackOutput.json"),
 *                             Map.entry("StackName", "MyStack"),
 *                             Map.entry("TemplatePath", "build_output::sam-templated.yaml")
 *                         ))
 *                         .build())
 *                     .build())
 *             .build());
 * 
 *         var codepipelineBucketPab = new BucketPublicAccessBlock("codepipelineBucketPab", BucketPublicAccessBlockArgs.builder()
 *             .bucket(codepipelineBucket.id())
 *             .blockPublicAcls(true)
 *             .blockPublicPolicy(true)
 *             .ignorePublicAcls(true)
 *             .restrictPublicBuckets(true)
 *             .build());
 * 
 *         final var codepipelinePolicy = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
 *             .statements(            
 *                 GetPolicyDocumentStatementArgs.builder()
 *                     .effect("Allow")
 *                     .actions(                    
 *                         "s3:GetObject",
 *                         "s3:GetObjectVersion",
 *                         "s3:GetBucketVersioning",
 *                         "s3:PutObjectAcl",
 *                         "s3:PutObject")
 *                     .resources(                    
 *                         codepipelineBucket.arn(),
 *                         codepipelineBucket.arn().applyValue(_arn -> String.format("%s/*", _arn)))
 *                     .build(),
 *                 GetPolicyDocumentStatementArgs.builder()
 *                     .effect("Allow")
 *                     .actions("codestar-connections:UseConnection")
 *                     .resources(example.arn())
 *                     .build(),
 *                 GetPolicyDocumentStatementArgs.builder()
 *                     .effect("Allow")
 *                     .actions(                    
 *                         "codebuild:BatchGetBuilds",
 *                         "codebuild:StartBuild")
 *                     .resources("*")
 *                     .build())
 *             .build());
 * 
 *         var codepipelinePolicyRolePolicy = new RolePolicy("codepipelinePolicyRolePolicy", RolePolicyArgs.builder()
 *             .name("codepipeline_policy")
 *             .role(codepipelineRole.id())
 *             .policy(codepipelinePolicy.applyValue(_codepipelinePolicy -> _codepipelinePolicy.json()))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Using `pulumi import`, import CodePipelines using the `name`. For example:
 * 
 * ```sh
 * $ pulumi import aws:codepipeline/pipeline:Pipeline example example-pipeline
 * ```
 * 
 */
@ResourceType(type="aws:codepipeline/pipeline:Pipeline")
public class Pipeline extends com.pulumi.resources.CustomResource {
    /**
     * Codepipeline ARN.
     * 
     */
    @Export(name="arn", refs={String.class}, tree="[0]")
    private Output<String> arn;

    /**
     * @return Codepipeline ARN.
     * 
     */
    public Output<String> arn() {
        return this.arn;
    }
    /**
     * One or more artifact_store blocks. Artifact stores are documented below.
     * 
     */
    @Export(name="artifactStores", refs={List.class,PipelineArtifactStore.class}, tree="[0,1]")
    private Output<List<PipelineArtifactStore>> artifactStores;

    /**
     * @return One or more artifact_store blocks. Artifact stores are documented below.
     * 
     */
    public Output<List<PipelineArtifactStore>> artifactStores() {
        return this.artifactStores;
    }
    /**
     * The method that the pipeline will use to handle multiple executions. The default mode is `SUPERSEDED`. For value values, refer to the [AWS documentation](https://docs.aws.amazon.com/codepipeline/latest/APIReference/API_PipelineDeclaration.html#CodePipeline-Type-PipelineDeclaration-executionMode).
     * 
     * **Note:** `QUEUED` or `PARALLEL` mode can only be used with V2 pipelines.
     * 
     */
    @Export(name="executionMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> executionMode;

    /**
     * @return The method that the pipeline will use to handle multiple executions. The default mode is `SUPERSEDED`. For value values, refer to the [AWS documentation](https://docs.aws.amazon.com/codepipeline/latest/APIReference/API_PipelineDeclaration.html#CodePipeline-Type-PipelineDeclaration-executionMode).
     * 
     * **Note:** `QUEUED` or `PARALLEL` mode can only be used with V2 pipelines.
     * 
     */
    public Output<Optional<String>> executionMode() {
        return Codegen.optional(this.executionMode);
    }
    /**
     * The name of the pipeline.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the pipeline.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Type of the pipeline. Possible values are: `V1` and `V2`. Default value is `V1`.
     * 
     */
    @Export(name="pipelineType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> pipelineType;

    /**
     * @return Type of the pipeline. Possible values are: `V1` and `V2`. Default value is `V1`.
     * 
     */
    public Output<Optional<String>> pipelineType() {
        return Codegen.optional(this.pipelineType);
    }
    /**
     * A service role Amazon Resource Name (ARN) that grants AWS CodePipeline permission to make calls to AWS services on your behalf.
     * 
     */
    @Export(name="roleArn", refs={String.class}, tree="[0]")
    private Output<String> roleArn;

    /**
     * @return A service role Amazon Resource Name (ARN) that grants AWS CodePipeline permission to make calls to AWS services on your behalf.
     * 
     */
    public Output<String> roleArn() {
        return this.roleArn;
    }
    /**
     * A stage block. Stages are documented below.
     * 
     */
    @Export(name="stages", refs={List.class,PipelineStage.class}, tree="[0,1]")
    private Output<List<PipelineStage>> stages;

    /**
     * @return A stage block. Stages are documented below.
     * 
     */
    public Output<List<PipelineStage>> stages() {
        return this.stages;
    }
    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Export(name="tagsAll", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll;
    }
    /**
     * A list of all triggers present on the pipeline, including default triggers added by AWS for `V2` pipelines which omit an explicit `trigger` definition.
     * 
     */
    @Export(name="triggerAlls", refs={List.class,PipelineTriggerAll.class}, tree="[0,1]")
    private Output<List<PipelineTriggerAll>> triggerAlls;

    /**
     * @return A list of all triggers present on the pipeline, including default triggers added by AWS for `V2` pipelines which omit an explicit `trigger` definition.
     * 
     */
    public Output<List<PipelineTriggerAll>> triggerAlls() {
        return this.triggerAlls;
    }
    /**
     * A trigger block. Valid only when `pipeline_type` is `V2`. Triggers are documented below.
     * 
     */
    @Export(name="triggers", refs={List.class,PipelineTrigger.class}, tree="[0,1]")
    private Output</* @Nullable */ List<PipelineTrigger>> triggers;

    /**
     * @return A trigger block. Valid only when `pipeline_type` is `V2`. Triggers are documented below.
     * 
     */
    public Output<Optional<List<PipelineTrigger>>> triggers() {
        return Codegen.optional(this.triggers);
    }
    /**
     * A pipeline-level variable block. Valid only when `pipeline_type` is `V2`. Variable are documented below.
     * 
     */
    @Export(name="variables", refs={List.class,PipelineVariable.class}, tree="[0,1]")
    private Output</* @Nullable */ List<PipelineVariable>> variables;

    /**
     * @return A pipeline-level variable block. Valid only when `pipeline_type` is `V2`. Variable are documented below.
     * 
     */
    public Output<Optional<List<PipelineVariable>>> variables() {
        return Codegen.optional(this.variables);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Pipeline(java.lang.String name) {
        this(name, PipelineArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Pipeline(java.lang.String name, PipelineArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Pipeline(java.lang.String name, PipelineArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:codepipeline/pipeline:Pipeline", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Pipeline(java.lang.String name, Output<java.lang.String> id, @Nullable PipelineState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:codepipeline/pipeline:Pipeline", name, state, makeResourceOptions(options, id), false);
    }

    private static PipelineArgs makeArgs(PipelineArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? PipelineArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Pipeline get(java.lang.String name, Output<java.lang.String> id, @Nullable PipelineState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Pipeline(name, id, state, options);
    }
}
