// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ssoadmin.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetApplicationAssignmentsApplicationAssignment extends com.pulumi.resources.InvokeArgs {

    public static final GetApplicationAssignmentsApplicationAssignment Empty = new GetApplicationAssignmentsApplicationAssignment();

    /**
     * ARN of the application.
     * 
     */
    @Import(name="applicationArn", required=true)
    private String applicationArn;

    /**
     * @return ARN of the application.
     * 
     */
    public String applicationArn() {
        return this.applicationArn;
    }

    /**
     * An identifier for an object in IAM Identity Center, such as a user or group.
     * 
     */
    @Import(name="principalId", required=true)
    private String principalId;

    /**
     * @return An identifier for an object in IAM Identity Center, such as a user or group.
     * 
     */
    public String principalId() {
        return this.principalId;
    }

    /**
     * Entity type for which the assignment will be created. Valid values are `USER` or `GROUP`.
     * 
     */
    @Import(name="principalType", required=true)
    private String principalType;

    /**
     * @return Entity type for which the assignment will be created. Valid values are `USER` or `GROUP`.
     * 
     */
    public String principalType() {
        return this.principalType;
    }

    private GetApplicationAssignmentsApplicationAssignment() {}

    private GetApplicationAssignmentsApplicationAssignment(GetApplicationAssignmentsApplicationAssignment $) {
        this.applicationArn = $.applicationArn;
        this.principalId = $.principalId;
        this.principalType = $.principalType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetApplicationAssignmentsApplicationAssignment defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetApplicationAssignmentsApplicationAssignment $;

        public Builder() {
            $ = new GetApplicationAssignmentsApplicationAssignment();
        }

        public Builder(GetApplicationAssignmentsApplicationAssignment defaults) {
            $ = new GetApplicationAssignmentsApplicationAssignment(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationArn ARN of the application.
         * 
         * @return builder
         * 
         */
        public Builder applicationArn(String applicationArn) {
            $.applicationArn = applicationArn;
            return this;
        }

        /**
         * @param principalId An identifier for an object in IAM Identity Center, such as a user or group.
         * 
         * @return builder
         * 
         */
        public Builder principalId(String principalId) {
            $.principalId = principalId;
            return this;
        }

        /**
         * @param principalType Entity type for which the assignment will be created. Valid values are `USER` or `GROUP`.
         * 
         * @return builder
         * 
         */
        public Builder principalType(String principalType) {
            $.principalType = principalType;
            return this;
        }

        public GetApplicationAssignmentsApplicationAssignment build() {
            $.applicationArn = Objects.requireNonNull($.applicationArn, "expected parameter 'applicationArn' to be non-null");
            $.principalId = Objects.requireNonNull($.principalId, "expected parameter 'principalId' to be non-null");
            $.principalType = Objects.requireNonNull($.principalType, "expected parameter 'principalType' to be non-null");
            return $;
        }
    }

}
