// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.batch.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobDefinitionEksPropertiesPodPropertiesContainerSecurityContextArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobDefinitionEksPropertiesPodPropertiesContainerSecurityContextArgs Empty = new JobDefinitionEksPropertiesPodPropertiesContainerSecurityContextArgs();

    @Import(name="privileged")
    private @Nullable Output<Boolean> privileged;

    public Optional<Output<Boolean>> privileged() {
        return Optional.ofNullable(this.privileged);
    }

    @Import(name="readOnlyRootFileSystem")
    private @Nullable Output<Boolean> readOnlyRootFileSystem;

    public Optional<Output<Boolean>> readOnlyRootFileSystem() {
        return Optional.ofNullable(this.readOnlyRootFileSystem);
    }

    @Import(name="runAsGroup")
    private @Nullable Output<Integer> runAsGroup;

    public Optional<Output<Integer>> runAsGroup() {
        return Optional.ofNullable(this.runAsGroup);
    }

    @Import(name="runAsNonRoot")
    private @Nullable Output<Boolean> runAsNonRoot;

    public Optional<Output<Boolean>> runAsNonRoot() {
        return Optional.ofNullable(this.runAsNonRoot);
    }

    @Import(name="runAsUser")
    private @Nullable Output<Integer> runAsUser;

    public Optional<Output<Integer>> runAsUser() {
        return Optional.ofNullable(this.runAsUser);
    }

    private JobDefinitionEksPropertiesPodPropertiesContainerSecurityContextArgs() {}

    private JobDefinitionEksPropertiesPodPropertiesContainerSecurityContextArgs(JobDefinitionEksPropertiesPodPropertiesContainerSecurityContextArgs $) {
        this.privileged = $.privileged;
        this.readOnlyRootFileSystem = $.readOnlyRootFileSystem;
        this.runAsGroup = $.runAsGroup;
        this.runAsNonRoot = $.runAsNonRoot;
        this.runAsUser = $.runAsUser;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobDefinitionEksPropertiesPodPropertiesContainerSecurityContextArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobDefinitionEksPropertiesPodPropertiesContainerSecurityContextArgs $;

        public Builder() {
            $ = new JobDefinitionEksPropertiesPodPropertiesContainerSecurityContextArgs();
        }

        public Builder(JobDefinitionEksPropertiesPodPropertiesContainerSecurityContextArgs defaults) {
            $ = new JobDefinitionEksPropertiesPodPropertiesContainerSecurityContextArgs(Objects.requireNonNull(defaults));
        }

        public Builder privileged(@Nullable Output<Boolean> privileged) {
            $.privileged = privileged;
            return this;
        }

        public Builder privileged(Boolean privileged) {
            return privileged(Output.of(privileged));
        }

        public Builder readOnlyRootFileSystem(@Nullable Output<Boolean> readOnlyRootFileSystem) {
            $.readOnlyRootFileSystem = readOnlyRootFileSystem;
            return this;
        }

        public Builder readOnlyRootFileSystem(Boolean readOnlyRootFileSystem) {
            return readOnlyRootFileSystem(Output.of(readOnlyRootFileSystem));
        }

        public Builder runAsGroup(@Nullable Output<Integer> runAsGroup) {
            $.runAsGroup = runAsGroup;
            return this;
        }

        public Builder runAsGroup(Integer runAsGroup) {
            return runAsGroup(Output.of(runAsGroup));
        }

        public Builder runAsNonRoot(@Nullable Output<Boolean> runAsNonRoot) {
            $.runAsNonRoot = runAsNonRoot;
            return this;
        }

        public Builder runAsNonRoot(Boolean runAsNonRoot) {
            return runAsNonRoot(Output.of(runAsNonRoot));
        }

        public Builder runAsUser(@Nullable Output<Integer> runAsUser) {
            $.runAsUser = runAsUser;
            return this;
        }

        public Builder runAsUser(Integer runAsUser) {
            return runAsUser(Output.of(runAsUser));
        }

        public JobDefinitionEksPropertiesPodPropertiesContainerSecurityContextArgs build() {
            return $;
        }
    }

}
