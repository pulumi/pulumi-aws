// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.ec2.TrafficMirrorFilterRuleArgs;
import com.pulumi.aws.ec2.inputs.TrafficMirrorFilterRuleState;
import com.pulumi.aws.ec2.outputs.TrafficMirrorFilterRuleDestinationPortRange;
import com.pulumi.aws.ec2.outputs.TrafficMirrorFilterRuleSourcePortRange;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="aws:ec2/trafficMirrorFilterRule:TrafficMirrorFilterRule")
public class TrafficMirrorFilterRule extends com.pulumi.resources.CustomResource {
    @Export(name="arn", refs={String.class}, tree="[0]")
    private Output<String> arn;

    public Output<String> arn() {
        return this.arn;
    }
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    @Export(name="destinationCidrBlock", refs={String.class}, tree="[0]")
    private Output<String> destinationCidrBlock;

    public Output<String> destinationCidrBlock() {
        return this.destinationCidrBlock;
    }
    @Export(name="destinationPortRange", refs={TrafficMirrorFilterRuleDestinationPortRange.class}, tree="[0]")
    private Output</* @Nullable */ TrafficMirrorFilterRuleDestinationPortRange> destinationPortRange;

    public Output<Optional<TrafficMirrorFilterRuleDestinationPortRange>> destinationPortRange() {
        return Codegen.optional(this.destinationPortRange);
    }
    @Export(name="protocol", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> protocol;

    public Output<Optional<Integer>> protocol() {
        return Codegen.optional(this.protocol);
    }
    @Export(name="ruleAction", refs={String.class}, tree="[0]")
    private Output<String> ruleAction;

    public Output<String> ruleAction() {
        return this.ruleAction;
    }
    @Export(name="ruleNumber", refs={Integer.class}, tree="[0]")
    private Output<Integer> ruleNumber;

    public Output<Integer> ruleNumber() {
        return this.ruleNumber;
    }
    @Export(name="sourceCidrBlock", refs={String.class}, tree="[0]")
    private Output<String> sourceCidrBlock;

    public Output<String> sourceCidrBlock() {
        return this.sourceCidrBlock;
    }
    @Export(name="sourcePortRange", refs={TrafficMirrorFilterRuleSourcePortRange.class}, tree="[0]")
    private Output</* @Nullable */ TrafficMirrorFilterRuleSourcePortRange> sourcePortRange;

    public Output<Optional<TrafficMirrorFilterRuleSourcePortRange>> sourcePortRange() {
        return Codegen.optional(this.sourcePortRange);
    }
    @Export(name="trafficDirection", refs={String.class}, tree="[0]")
    private Output<String> trafficDirection;

    public Output<String> trafficDirection() {
        return this.trafficDirection;
    }
    @Export(name="trafficMirrorFilterId", refs={String.class}, tree="[0]")
    private Output<String> trafficMirrorFilterId;

    public Output<String> trafficMirrorFilterId() {
        return this.trafficMirrorFilterId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public TrafficMirrorFilterRule(String name) {
        this(name, TrafficMirrorFilterRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public TrafficMirrorFilterRule(String name, TrafficMirrorFilterRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public TrafficMirrorFilterRule(String name, TrafficMirrorFilterRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:ec2/trafficMirrorFilterRule:TrafficMirrorFilterRule", name, args == null ? TrafficMirrorFilterRuleArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private TrafficMirrorFilterRule(String name, Output<String> id, @Nullable TrafficMirrorFilterRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:ec2/trafficMirrorFilterRule:TrafficMirrorFilterRule", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static TrafficMirrorFilterRule get(String name, Output<String> id, @Nullable TrafficMirrorFilterRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new TrafficMirrorFilterRule(name, id, state, options);
    }
}
