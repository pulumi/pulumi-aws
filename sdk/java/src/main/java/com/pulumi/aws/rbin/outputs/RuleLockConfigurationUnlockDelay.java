// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.rbin.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class RuleLockConfigurationUnlockDelay {
    /**
     * @return The unit of time in which to measure the unlock delay. Currently, the unlock delay can be measure only in days.
     * 
     */
    private String unlockDelayUnit;
    /**
     * @return The unlock delay period, measured in the unit specified for UnlockDelayUnit.
     * 
     */
    private Integer unlockDelayValue;

    private RuleLockConfigurationUnlockDelay() {}
    /**
     * @return The unit of time in which to measure the unlock delay. Currently, the unlock delay can be measure only in days.
     * 
     */
    public String unlockDelayUnit() {
        return this.unlockDelayUnit;
    }
    /**
     * @return The unlock delay period, measured in the unit specified for UnlockDelayUnit.
     * 
     */
    public Integer unlockDelayValue() {
        return this.unlockDelayValue;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RuleLockConfigurationUnlockDelay defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String unlockDelayUnit;
        private Integer unlockDelayValue;
        public Builder() {}
        public Builder(RuleLockConfigurationUnlockDelay defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.unlockDelayUnit = defaults.unlockDelayUnit;
    	      this.unlockDelayValue = defaults.unlockDelayValue;
        }

        @CustomType.Setter
        public Builder unlockDelayUnit(String unlockDelayUnit) {
            if (unlockDelayUnit == null) {
              throw new MissingRequiredPropertyException("RuleLockConfigurationUnlockDelay", "unlockDelayUnit");
            }
            this.unlockDelayUnit = unlockDelayUnit;
            return this;
        }
        @CustomType.Setter
        public Builder unlockDelayValue(Integer unlockDelayValue) {
            if (unlockDelayValue == null) {
              throw new MissingRequiredPropertyException("RuleLockConfigurationUnlockDelay", "unlockDelayValue");
            }
            this.unlockDelayValue = unlockDelayValue;
            return this;
        }
        public RuleLockConfigurationUnlockDelay build() {
            final var _resultValue = new RuleLockConfigurationUnlockDelay();
            _resultValue.unlockDelayUnit = unlockDelayUnit;
            _resultValue.unlockDelayValue = unlockDelayValue;
            return _resultValue;
        }
    }
}
