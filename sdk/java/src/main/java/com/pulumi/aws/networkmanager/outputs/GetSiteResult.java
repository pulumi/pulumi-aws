// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.networkmanager.outputs;

import com.pulumi.aws.networkmanager.outputs.GetSiteLocation;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetSiteResult {
    /**
     * @return ARN of the site.
     * 
     */
    private String arn;
    /**
     * @return Description of the site.
     * 
     */
    private String description;
    private String globalNetworkId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Site location as documented below.
     * 
     */
    private List<GetSiteLocation> locations;
    private String siteId;
    /**
     * @return Key-value tags for the Site.
     * 
     */
    private Map<String,String> tags;

    private GetSiteResult() {}
    /**
     * @return ARN of the site.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return Description of the site.
     * 
     */
    public String description() {
        return this.description;
    }
    public String globalNetworkId() {
        return this.globalNetworkId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Site location as documented below.
     * 
     */
    public List<GetSiteLocation> locations() {
        return this.locations;
    }
    public String siteId() {
        return this.siteId;
    }
    /**
     * @return Key-value tags for the Site.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSiteResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private String description;
        private String globalNetworkId;
        private String id;
        private List<GetSiteLocation> locations;
        private String siteId;
        private Map<String,String> tags;
        public Builder() {}
        public Builder(GetSiteResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.description = defaults.description;
    	      this.globalNetworkId = defaults.globalNetworkId;
    	      this.id = defaults.id;
    	      this.locations = defaults.locations;
    	      this.siteId = defaults.siteId;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            if (arn == null) {
              throw new MissingRequiredPropertyException("GetSiteResult", "arn");
            }
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetSiteResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder globalNetworkId(String globalNetworkId) {
            if (globalNetworkId == null) {
              throw new MissingRequiredPropertyException("GetSiteResult", "globalNetworkId");
            }
            this.globalNetworkId = globalNetworkId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSiteResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder locations(List<GetSiteLocation> locations) {
            if (locations == null) {
              throw new MissingRequiredPropertyException("GetSiteResult", "locations");
            }
            this.locations = locations;
            return this;
        }
        public Builder locations(GetSiteLocation... locations) {
            return locations(List.of(locations));
        }
        @CustomType.Setter
        public Builder siteId(String siteId) {
            if (siteId == null) {
              throw new MissingRequiredPropertyException("GetSiteResult", "siteId");
            }
            this.siteId = siteId;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetSiteResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        public GetSiteResult build() {
            final var _resultValue = new GetSiteResult();
            _resultValue.arn = arn;
            _resultValue.description = description;
            _resultValue.globalNetworkId = globalNetworkId;
            _resultValue.id = id;
            _resultValue.locations = locations;
            _resultValue.siteId = siteId;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
