// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudwatch;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.cloudwatch.MetricAlarmArgs;
import com.pulumi.aws.cloudwatch.inputs.MetricAlarmState;
import com.pulumi.aws.cloudwatch.outputs.MetricAlarmMetricQuery;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="aws:cloudwatch/metricAlarm:MetricAlarm")
public class MetricAlarm extends com.pulumi.resources.CustomResource {
    @Export(name="actionsEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> actionsEnabled;

    public Output<Optional<Boolean>> actionsEnabled() {
        return Codegen.optional(this.actionsEnabled);
    }
    @Export(name="alarmActions", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> alarmActions;

    public Output<Optional<List<String>>> alarmActions() {
        return Codegen.optional(this.alarmActions);
    }
    @Export(name="alarmDescription", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> alarmDescription;

    public Output<Optional<String>> alarmDescription() {
        return Codegen.optional(this.alarmDescription);
    }
    @Export(name="arn", refs={String.class}, tree="[0]")
    private Output<String> arn;

    public Output<String> arn() {
        return this.arn;
    }
    @Export(name="comparisonOperator", refs={String.class}, tree="[0]")
    private Output<String> comparisonOperator;

    public Output<String> comparisonOperator() {
        return this.comparisonOperator;
    }
    @Export(name="datapointsToAlarm", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> datapointsToAlarm;

    public Output<Optional<Integer>> datapointsToAlarm() {
        return Codegen.optional(this.datapointsToAlarm);
    }
    @Export(name="dimensions", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> dimensions;

    public Output<Optional<Map<String,String>>> dimensions() {
        return Codegen.optional(this.dimensions);
    }
    @Export(name="evaluateLowSampleCountPercentiles", refs={String.class}, tree="[0]")
    private Output<String> evaluateLowSampleCountPercentiles;

    public Output<String> evaluateLowSampleCountPercentiles() {
        return this.evaluateLowSampleCountPercentiles;
    }
    @Export(name="evaluationPeriods", refs={Integer.class}, tree="[0]")
    private Output<Integer> evaluationPeriods;

    public Output<Integer> evaluationPeriods() {
        return this.evaluationPeriods;
    }
    @Export(name="extendedStatistic", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> extendedStatistic;

    public Output<Optional<String>> extendedStatistic() {
        return Codegen.optional(this.extendedStatistic);
    }
    @Export(name="insufficientDataActions", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> insufficientDataActions;

    public Output<Optional<List<String>>> insufficientDataActions() {
        return Codegen.optional(this.insufficientDataActions);
    }
    @Export(name="metricName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> metricName;

    public Output<Optional<String>> metricName() {
        return Codegen.optional(this.metricName);
    }
    @Export(name="metricQueries", refs={List.class,MetricAlarmMetricQuery.class}, tree="[0,1]")
    private Output</* @Nullable */ List<MetricAlarmMetricQuery>> metricQueries;

    public Output<Optional<List<MetricAlarmMetricQuery>>> metricQueries() {
        return Codegen.optional(this.metricQueries);
    }
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }
    @Export(name="namespace", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> namespace;

    public Output<Optional<String>> namespace() {
        return Codegen.optional(this.namespace);
    }
    @Export(name="okActions", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> okActions;

    public Output<Optional<List<String>>> okActions() {
        return Codegen.optional(this.okActions);
    }
    @Export(name="period", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> period;

    public Output<Optional<Integer>> period() {
        return Codegen.optional(this.period);
    }
    @Export(name="statistic", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> statistic;

    public Output<Optional<String>> statistic() {
        return Codegen.optional(this.statistic);
    }
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    @Export(name="tagsAll", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll;
    }
    @Export(name="threshold", refs={Double.class}, tree="[0]")
    private Output</* @Nullable */ Double> threshold;

    public Output<Optional<Double>> threshold() {
        return Codegen.optional(this.threshold);
    }
    @Export(name="thresholdMetricId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> thresholdMetricId;

    public Output<Optional<String>> thresholdMetricId() {
        return Codegen.optional(this.thresholdMetricId);
    }
    @Export(name="treatMissingData", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> treatMissingData;

    public Output<Optional<String>> treatMissingData() {
        return Codegen.optional(this.treatMissingData);
    }
    @Export(name="unit", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> unit;

    public Output<Optional<String>> unit() {
        return Codegen.optional(this.unit);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public MetricAlarm(String name) {
        this(name, MetricAlarmArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public MetricAlarm(String name, MetricAlarmArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public MetricAlarm(String name, MetricAlarmArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:cloudwatch/metricAlarm:MetricAlarm", name, args == null ? MetricAlarmArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private MetricAlarm(String name, Output<String> id, @Nullable MetricAlarmState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:cloudwatch/metricAlarm:MetricAlarm", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static MetricAlarm get(String name, Output<String> id, @Nullable MetricAlarmState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new MetricAlarm(name, id, state, options);
    }
}
