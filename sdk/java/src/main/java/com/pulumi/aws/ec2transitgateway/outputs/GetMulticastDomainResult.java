// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2transitgateway.outputs;

import com.pulumi.aws.ec2transitgateway.outputs.GetMulticastDomainAssociation;
import com.pulumi.aws.ec2transitgateway.outputs.GetMulticastDomainFilter;
import com.pulumi.aws.ec2transitgateway.outputs.GetMulticastDomainMember;
import com.pulumi.aws.ec2transitgateway.outputs.GetMulticastDomainSource;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetMulticastDomainResult {
    /**
     * @return EC2 Transit Gateway Multicast Domain ARN.
     * 
     */
    private String arn;
    /**
     * @return EC2 Transit Gateway Multicast Domain Associations
     * 
     */
    private List<GetMulticastDomainAssociation> associations;
    /**
     * @return Whether to automatically accept cross-account subnet associations that are associated with the EC2 Transit Gateway Multicast Domain.
     * 
     */
    private String autoAcceptSharedAssociations;
    private @Nullable List<GetMulticastDomainFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Whether to enable Internet Group Management Protocol (IGMP) version 2 for the EC2 Transit Gateway Multicast Domain.
     * 
     */
    private String igmpv2Support;
    /**
     * @return EC2 Multicast Domain Group Members
     * 
     */
    private List<GetMulticastDomainMember> members;
    /**
     * @return Identifier of the AWS account that owns the EC2 Transit Gateway Multicast Domain.
     * 
     */
    private String ownerId;
    /**
     * @return EC2 Multicast Domain Group Sources
     * 
     */
    private List<GetMulticastDomainSource> sources;
    private String state;
    /**
     * @return Whether to enable support for statically configuring multicast group sources for the EC2 Transit Gateway Multicast Domain.
     * 
     */
    private String staticSourcesSupport;
    /**
     * @return Key-value tags for the EC2 Transit Gateway Multicast Domain.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return The ID of the transit gateway attachment.
     * 
     */
    private String transitGatewayAttachmentId;
    /**
     * @return EC2 Transit Gateway identifier.
     * 
     */
    private String transitGatewayId;
    private String transitGatewayMulticastDomainId;

    private GetMulticastDomainResult() {}
    /**
     * @return EC2 Transit Gateway Multicast Domain ARN.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return EC2 Transit Gateway Multicast Domain Associations
     * 
     */
    public List<GetMulticastDomainAssociation> associations() {
        return this.associations;
    }
    /**
     * @return Whether to automatically accept cross-account subnet associations that are associated with the EC2 Transit Gateway Multicast Domain.
     * 
     */
    public String autoAcceptSharedAssociations() {
        return this.autoAcceptSharedAssociations;
    }
    public List<GetMulticastDomainFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Whether to enable Internet Group Management Protocol (IGMP) version 2 for the EC2 Transit Gateway Multicast Domain.
     * 
     */
    public String igmpv2Support() {
        return this.igmpv2Support;
    }
    /**
     * @return EC2 Multicast Domain Group Members
     * 
     */
    public List<GetMulticastDomainMember> members() {
        return this.members;
    }
    /**
     * @return Identifier of the AWS account that owns the EC2 Transit Gateway Multicast Domain.
     * 
     */
    public String ownerId() {
        return this.ownerId;
    }
    /**
     * @return EC2 Multicast Domain Group Sources
     * 
     */
    public List<GetMulticastDomainSource> sources() {
        return this.sources;
    }
    public String state() {
        return this.state;
    }
    /**
     * @return Whether to enable support for statically configuring multicast group sources for the EC2 Transit Gateway Multicast Domain.
     * 
     */
    public String staticSourcesSupport() {
        return this.staticSourcesSupport;
    }
    /**
     * @return Key-value tags for the EC2 Transit Gateway Multicast Domain.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return The ID of the transit gateway attachment.
     * 
     */
    public String transitGatewayAttachmentId() {
        return this.transitGatewayAttachmentId;
    }
    /**
     * @return EC2 Transit Gateway identifier.
     * 
     */
    public String transitGatewayId() {
        return this.transitGatewayId;
    }
    public String transitGatewayMulticastDomainId() {
        return this.transitGatewayMulticastDomainId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMulticastDomainResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private List<GetMulticastDomainAssociation> associations;
        private String autoAcceptSharedAssociations;
        private @Nullable List<GetMulticastDomainFilter> filters;
        private String id;
        private String igmpv2Support;
        private List<GetMulticastDomainMember> members;
        private String ownerId;
        private List<GetMulticastDomainSource> sources;
        private String state;
        private String staticSourcesSupport;
        private Map<String,String> tags;
        private String transitGatewayAttachmentId;
        private String transitGatewayId;
        private String transitGatewayMulticastDomainId;
        public Builder() {}
        public Builder(GetMulticastDomainResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.associations = defaults.associations;
    	      this.autoAcceptSharedAssociations = defaults.autoAcceptSharedAssociations;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.igmpv2Support = defaults.igmpv2Support;
    	      this.members = defaults.members;
    	      this.ownerId = defaults.ownerId;
    	      this.sources = defaults.sources;
    	      this.state = defaults.state;
    	      this.staticSourcesSupport = defaults.staticSourcesSupport;
    	      this.tags = defaults.tags;
    	      this.transitGatewayAttachmentId = defaults.transitGatewayAttachmentId;
    	      this.transitGatewayId = defaults.transitGatewayId;
    	      this.transitGatewayMulticastDomainId = defaults.transitGatewayMulticastDomainId;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder associations(List<GetMulticastDomainAssociation> associations) {
            this.associations = Objects.requireNonNull(associations);
            return this;
        }
        public Builder associations(GetMulticastDomainAssociation... associations) {
            return associations(List.of(associations));
        }
        @CustomType.Setter
        public Builder autoAcceptSharedAssociations(String autoAcceptSharedAssociations) {
            this.autoAcceptSharedAssociations = Objects.requireNonNull(autoAcceptSharedAssociations);
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetMulticastDomainFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetMulticastDomainFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder igmpv2Support(String igmpv2Support) {
            this.igmpv2Support = Objects.requireNonNull(igmpv2Support);
            return this;
        }
        @CustomType.Setter
        public Builder members(List<GetMulticastDomainMember> members) {
            this.members = Objects.requireNonNull(members);
            return this;
        }
        public Builder members(GetMulticastDomainMember... members) {
            return members(List.of(members));
        }
        @CustomType.Setter
        public Builder ownerId(String ownerId) {
            this.ownerId = Objects.requireNonNull(ownerId);
            return this;
        }
        @CustomType.Setter
        public Builder sources(List<GetMulticastDomainSource> sources) {
            this.sources = Objects.requireNonNull(sources);
            return this;
        }
        public Builder sources(GetMulticastDomainSource... sources) {
            return sources(List.of(sources));
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder staticSourcesSupport(String staticSourcesSupport) {
            this.staticSourcesSupport = Objects.requireNonNull(staticSourcesSupport);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder transitGatewayAttachmentId(String transitGatewayAttachmentId) {
            this.transitGatewayAttachmentId = Objects.requireNonNull(transitGatewayAttachmentId);
            return this;
        }
        @CustomType.Setter
        public Builder transitGatewayId(String transitGatewayId) {
            this.transitGatewayId = Objects.requireNonNull(transitGatewayId);
            return this;
        }
        @CustomType.Setter
        public Builder transitGatewayMulticastDomainId(String transitGatewayMulticastDomainId) {
            this.transitGatewayMulticastDomainId = Objects.requireNonNull(transitGatewayMulticastDomainId);
            return this;
        }
        public GetMulticastDomainResult build() {
            final var _resultValue = new GetMulticastDomainResult();
            _resultValue.arn = arn;
            _resultValue.associations = associations;
            _resultValue.autoAcceptSharedAssociations = autoAcceptSharedAssociations;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.igmpv2Support = igmpv2Support;
            _resultValue.members = members;
            _resultValue.ownerId = ownerId;
            _resultValue.sources = sources;
            _resultValue.state = state;
            _resultValue.staticSourcesSupport = staticSourcesSupport;
            _resultValue.tags = tags;
            _resultValue.transitGatewayAttachmentId = transitGatewayAttachmentId;
            _resultValue.transitGatewayId = transitGatewayId;
            _resultValue.transitGatewayMulticastDomainId = transitGatewayMulticastDomainId;
            return _resultValue;
        }
    }
}
