// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2transitgateway.outputs;

import com.pulumi.aws.ec2transitgateway.outputs.GetMulticastDomainAssociation;
import com.pulumi.aws.ec2transitgateway.outputs.GetMulticastDomainFilter;
import com.pulumi.aws.ec2transitgateway.outputs.GetMulticastDomainMember;
import com.pulumi.aws.ec2transitgateway.outputs.GetMulticastDomainSource;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMulticastDomainResult {
    /**
     * @return EC2 Transit Gateway Multicast Domain ARN.
     * 
     */
    private @Nullable String arn;
    /**
     * @return EC2 Transit Gateway Multicast Domain Associations
     * 
     */
    private @Nullable List<GetMulticastDomainAssociation> associations;
    /**
     * @return Whether to automatically accept cross-account subnet associations that are associated with the EC2 Transit Gateway Multicast Domain.
     * 
     */
    private @Nullable String autoAcceptSharedAssociations;
    private @Nullable List<GetMulticastDomainFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return Whether to enable Internet Group Management Protocol (IGMP) version 2 for the EC2 Transit Gateway Multicast Domain.
     * 
     */
    private @Nullable String igmpv2Support;
    /**
     * @return EC2 Multicast Domain Group Members
     * 
     */
    private @Nullable List<GetMulticastDomainMember> members;
    /**
     * @return Identifier of the AWS account that owns the EC2 Transit Gateway Multicast Domain.
     * 
     */
    private @Nullable String ownerId;
    /**
     * @return EC2 Multicast Domain Group Sources
     * 
     */
    private @Nullable List<GetMulticastDomainSource> sources;
    private @Nullable String state;
    /**
     * @return Whether to enable support for statically configuring multicast group sources for the EC2 Transit Gateway Multicast Domain.
     * 
     */
    private @Nullable String staticSourcesSupport;
    /**
     * @return Key-value tags for the EC2 Transit Gateway Multicast Domain.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return The ID of the transit gateway attachment.
     * 
     */
    private @Nullable String transitGatewayAttachmentId;
    /**
     * @return EC2 Transit Gateway identifier.
     * 
     */
    private @Nullable String transitGatewayId;
    private @Nullable String transitGatewayMulticastDomainId;

    private GetMulticastDomainResult() {}
    /**
     * @return EC2 Transit Gateway Multicast Domain ARN.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return EC2 Transit Gateway Multicast Domain Associations
     * 
     */
    public List<GetMulticastDomainAssociation> associations() {
        return this.associations == null ? List.of() : this.associations;
    }
    /**
     * @return Whether to automatically accept cross-account subnet associations that are associated with the EC2 Transit Gateway Multicast Domain.
     * 
     */
    public Optional<String> autoAcceptSharedAssociations() {
        return Optional.ofNullable(this.autoAcceptSharedAssociations);
    }
    public List<GetMulticastDomainFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Whether to enable Internet Group Management Protocol (IGMP) version 2 for the EC2 Transit Gateway Multicast Domain.
     * 
     */
    public Optional<String> igmpv2Support() {
        return Optional.ofNullable(this.igmpv2Support);
    }
    /**
     * @return EC2 Multicast Domain Group Members
     * 
     */
    public List<GetMulticastDomainMember> members() {
        return this.members == null ? List.of() : this.members;
    }
    /**
     * @return Identifier of the AWS account that owns the EC2 Transit Gateway Multicast Domain.
     * 
     */
    public Optional<String> ownerId() {
        return Optional.ofNullable(this.ownerId);
    }
    /**
     * @return EC2 Multicast Domain Group Sources
     * 
     */
    public List<GetMulticastDomainSource> sources() {
        return this.sources == null ? List.of() : this.sources;
    }
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return Whether to enable support for statically configuring multicast group sources for the EC2 Transit Gateway Multicast Domain.
     * 
     */
    public Optional<String> staticSourcesSupport() {
        return Optional.ofNullable(this.staticSourcesSupport);
    }
    /**
     * @return Key-value tags for the EC2 Transit Gateway Multicast Domain.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The ID of the transit gateway attachment.
     * 
     */
    public Optional<String> transitGatewayAttachmentId() {
        return Optional.ofNullable(this.transitGatewayAttachmentId);
    }
    /**
     * @return EC2 Transit Gateway identifier.
     * 
     */
    public Optional<String> transitGatewayId() {
        return Optional.ofNullable(this.transitGatewayId);
    }
    public Optional<String> transitGatewayMulticastDomainId() {
        return Optional.ofNullable(this.transitGatewayMulticastDomainId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMulticastDomainResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable List<GetMulticastDomainAssociation> associations;
        private @Nullable String autoAcceptSharedAssociations;
        private @Nullable List<GetMulticastDomainFilter> filters;
        private @Nullable String id;
        private @Nullable String igmpv2Support;
        private @Nullable List<GetMulticastDomainMember> members;
        private @Nullable String ownerId;
        private @Nullable List<GetMulticastDomainSource> sources;
        private @Nullable String state;
        private @Nullable String staticSourcesSupport;
        private @Nullable Map<String,String> tags;
        private @Nullable String transitGatewayAttachmentId;
        private @Nullable String transitGatewayId;
        private @Nullable String transitGatewayMulticastDomainId;
        public Builder() {}
        public Builder(GetMulticastDomainResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.associations = defaults.associations;
    	      this.autoAcceptSharedAssociations = defaults.autoAcceptSharedAssociations;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.igmpv2Support = defaults.igmpv2Support;
    	      this.members = defaults.members;
    	      this.ownerId = defaults.ownerId;
    	      this.sources = defaults.sources;
    	      this.state = defaults.state;
    	      this.staticSourcesSupport = defaults.staticSourcesSupport;
    	      this.tags = defaults.tags;
    	      this.transitGatewayAttachmentId = defaults.transitGatewayAttachmentId;
    	      this.transitGatewayId = defaults.transitGatewayId;
    	      this.transitGatewayMulticastDomainId = defaults.transitGatewayMulticastDomainId;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder associations(@Nullable List<GetMulticastDomainAssociation> associations) {
            this.associations = associations;
            return this;
        }
        public Builder associations(GetMulticastDomainAssociation... associations) {
            return associations(List.of(associations));
        }
        @CustomType.Setter
        public Builder autoAcceptSharedAssociations(@Nullable String autoAcceptSharedAssociations) {
            this.autoAcceptSharedAssociations = autoAcceptSharedAssociations;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetMulticastDomainFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetMulticastDomainFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder igmpv2Support(@Nullable String igmpv2Support) {
            this.igmpv2Support = igmpv2Support;
            return this;
        }
        @CustomType.Setter
        public Builder members(@Nullable List<GetMulticastDomainMember> members) {
            this.members = members;
            return this;
        }
        public Builder members(GetMulticastDomainMember... members) {
            return members(List.of(members));
        }
        @CustomType.Setter
        public Builder ownerId(@Nullable String ownerId) {
            this.ownerId = ownerId;
            return this;
        }
        @CustomType.Setter
        public Builder sources(@Nullable List<GetMulticastDomainSource> sources) {
            this.sources = sources;
            return this;
        }
        public Builder sources(GetMulticastDomainSource... sources) {
            return sources(List.of(sources));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder staticSourcesSupport(@Nullable String staticSourcesSupport) {
            this.staticSourcesSupport = staticSourcesSupport;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder transitGatewayAttachmentId(@Nullable String transitGatewayAttachmentId) {
            this.transitGatewayAttachmentId = transitGatewayAttachmentId;
            return this;
        }
        @CustomType.Setter
        public Builder transitGatewayId(@Nullable String transitGatewayId) {
            this.transitGatewayId = transitGatewayId;
            return this;
        }
        @CustomType.Setter
        public Builder transitGatewayMulticastDomainId(@Nullable String transitGatewayMulticastDomainId) {
            this.transitGatewayMulticastDomainId = transitGatewayMulticastDomainId;
            return this;
        }
        public GetMulticastDomainResult build() {
            final var o = new GetMulticastDomainResult();
            o.arn = arn;
            o.associations = associations;
            o.autoAcceptSharedAssociations = autoAcceptSharedAssociations;
            o.filters = filters;
            o.id = id;
            o.igmpv2Support = igmpv2Support;
            o.members = members;
            o.ownerId = ownerId;
            o.sources = sources;
            o.state = state;
            o.staticSourcesSupport = staticSourcesSupport;
            o.tags = tags;
            o.transitGatewayAttachmentId = transitGatewayAttachmentId;
            o.transitGatewayId = transitGatewayId;
            o.transitGatewayMulticastDomainId = transitGatewayMulticastDomainId;
            return o;
        }
    }
}
