// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apprunner;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CustomDomainAssociationArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomDomainAssociationArgs Empty = new CustomDomainAssociationArgs();

    @Import(name="domainName", required=true)
    private Output<String> domainName;

    public Output<String> domainName() {
        return this.domainName;
    }

    @Import(name="enableWwwSubdomain")
    private @Nullable Output<Boolean> enableWwwSubdomain;

    public Optional<Output<Boolean>> enableWwwSubdomain() {
        return Optional.ofNullable(this.enableWwwSubdomain);
    }

    @Import(name="serviceArn", required=true)
    private Output<String> serviceArn;

    public Output<String> serviceArn() {
        return this.serviceArn;
    }

    private CustomDomainAssociationArgs() {}

    private CustomDomainAssociationArgs(CustomDomainAssociationArgs $) {
        this.domainName = $.domainName;
        this.enableWwwSubdomain = $.enableWwwSubdomain;
        this.serviceArn = $.serviceArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomDomainAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomDomainAssociationArgs $;

        public Builder() {
            $ = new CustomDomainAssociationArgs();
        }

        public Builder(CustomDomainAssociationArgs defaults) {
            $ = new CustomDomainAssociationArgs(Objects.requireNonNull(defaults));
        }

        public Builder domainName(Output<String> domainName) {
            $.domainName = domainName;
            return this;
        }

        public Builder domainName(String domainName) {
            return domainName(Output.of(domainName));
        }

        public Builder enableWwwSubdomain(@Nullable Output<Boolean> enableWwwSubdomain) {
            $.enableWwwSubdomain = enableWwwSubdomain;
            return this;
        }

        public Builder enableWwwSubdomain(Boolean enableWwwSubdomain) {
            return enableWwwSubdomain(Output.of(enableWwwSubdomain));
        }

        public Builder serviceArn(Output<String> serviceArn) {
            $.serviceArn = serviceArn;
            return this;
        }

        public Builder serviceArn(String serviceArn) {
            return serviceArn(Output.of(serviceArn));
        }

        public CustomDomainAssociationArgs build() {
            $.domainName = Objects.requireNonNull($.domainName, "expected parameter 'domainName' to be non-null");
            $.serviceArn = Objects.requireNonNull($.serviceArn, "expected parameter 'serviceArn' to be non-null");
            return $;
        }
    }

}
