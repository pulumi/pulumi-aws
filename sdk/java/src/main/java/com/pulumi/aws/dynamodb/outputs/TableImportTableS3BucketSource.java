// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dynamodb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TableImportTableS3BucketSource {
    /**
     * @return The S3 bucket that is being imported from.
     * 
     */
    private String bucket;
    /**
     * @return The account number of the S3 bucket that is being imported from.
     * 
     */
    private @Nullable String bucketOwner;
    /**
     * @return The key prefix shared by all S3 Objects that are being imported.
     * 
     */
    private @Nullable String keyPrefix;

    private TableImportTableS3BucketSource() {}
    /**
     * @return The S3 bucket that is being imported from.
     * 
     */
    public String bucket() {
        return this.bucket;
    }
    /**
     * @return The account number of the S3 bucket that is being imported from.
     * 
     */
    public Optional<String> bucketOwner() {
        return Optional.ofNullable(this.bucketOwner);
    }
    /**
     * @return The key prefix shared by all S3 Objects that are being imported.
     * 
     */
    public Optional<String> keyPrefix() {
        return Optional.ofNullable(this.keyPrefix);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TableImportTableS3BucketSource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String bucket;
        private @Nullable String bucketOwner;
        private @Nullable String keyPrefix;
        public Builder() {}
        public Builder(TableImportTableS3BucketSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucket = defaults.bucket;
    	      this.bucketOwner = defaults.bucketOwner;
    	      this.keyPrefix = defaults.keyPrefix;
        }

        @CustomType.Setter
        public Builder bucket(String bucket) {
            if (bucket == null) {
              throw new MissingRequiredPropertyException("TableImportTableS3BucketSource", "bucket");
            }
            this.bucket = bucket;
            return this;
        }
        @CustomType.Setter
        public Builder bucketOwner(@Nullable String bucketOwner) {

            this.bucketOwner = bucketOwner;
            return this;
        }
        @CustomType.Setter
        public Builder keyPrefix(@Nullable String keyPrefix) {

            this.keyPrefix = keyPrefix;
            return this;
        }
        public TableImportTableS3BucketSource build() {
            final var _resultValue = new TableImportTableS3BucketSource();
            _resultValue.bucket = bucket;
            _resultValue.bucketOwner = bucketOwner;
            _resultValue.keyPrefix = keyPrefix;
            return _resultValue;
        }
    }
}
