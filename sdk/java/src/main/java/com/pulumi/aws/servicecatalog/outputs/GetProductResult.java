// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.servicecatalog.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetProductResult {
    private @Nullable String acceptLanguage;
    /**
     * @return ARN of the product.
     * 
     */
    private @Nullable String arn;
    /**
     * @return Time when the product was created.
     * 
     */
    private @Nullable String createdTime;
    /**
     * @return Description of the product.
     * 
     */
    private @Nullable String description;
    /**
     * @return Vendor of the product.
     * 
     */
    private @Nullable String distributor;
    /**
     * @return Whether the product has a default path.
     * 
     */
    private @Nullable Boolean hasDefaultPath;
    private String id;
    /**
     * @return Name of the product.
     * 
     */
    private @Nullable String name;
    /**
     * @return Owner of the product.
     * 
     */
    private @Nullable String owner;
    /**
     * @return Status of the product.
     * 
     */
    private @Nullable String status;
    /**
     * @return Field that provides support information about the product.
     * 
     */
    private @Nullable String supportDescription;
    /**
     * @return Contact email for product support.
     * 
     */
    private @Nullable String supportEmail;
    /**
     * @return Contact URL for product support.
     * 
     */
    private @Nullable String supportUrl;
    /**
     * @return Tags applied to the product.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Type of product.
     * 
     */
    private @Nullable String type;

    private GetProductResult() {}
    public Optional<String> acceptLanguage() {
        return Optional.ofNullable(this.acceptLanguage);
    }
    /**
     * @return ARN of the product.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return Time when the product was created.
     * 
     */
    public Optional<String> createdTime() {
        return Optional.ofNullable(this.createdTime);
    }
    /**
     * @return Description of the product.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Vendor of the product.
     * 
     */
    public Optional<String> distributor() {
        return Optional.ofNullable(this.distributor);
    }
    /**
     * @return Whether the product has a default path.
     * 
     */
    public Optional<Boolean> hasDefaultPath() {
        return Optional.ofNullable(this.hasDefaultPath);
    }
    public String id() {
        return this.id;
    }
    /**
     * @return Name of the product.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Owner of the product.
     * 
     */
    public Optional<String> owner() {
        return Optional.ofNullable(this.owner);
    }
    /**
     * @return Status of the product.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return Field that provides support information about the product.
     * 
     */
    public Optional<String> supportDescription() {
        return Optional.ofNullable(this.supportDescription);
    }
    /**
     * @return Contact email for product support.
     * 
     */
    public Optional<String> supportEmail() {
        return Optional.ofNullable(this.supportEmail);
    }
    /**
     * @return Contact URL for product support.
     * 
     */
    public Optional<String> supportUrl() {
        return Optional.ofNullable(this.supportUrl);
    }
    /**
     * @return Tags applied to the product.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Type of product.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProductResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String acceptLanguage;
        private @Nullable String arn;
        private @Nullable String createdTime;
        private @Nullable String description;
        private @Nullable String distributor;
        private @Nullable Boolean hasDefaultPath;
        private String id;
        private @Nullable String name;
        private @Nullable String owner;
        private @Nullable String status;
        private @Nullable String supportDescription;
        private @Nullable String supportEmail;
        private @Nullable String supportUrl;
        private @Nullable Map<String,String> tags;
        private @Nullable String type;
        public Builder() {}
        public Builder(GetProductResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acceptLanguage = defaults.acceptLanguage;
    	      this.arn = defaults.arn;
    	      this.createdTime = defaults.createdTime;
    	      this.description = defaults.description;
    	      this.distributor = defaults.distributor;
    	      this.hasDefaultPath = defaults.hasDefaultPath;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.owner = defaults.owner;
    	      this.status = defaults.status;
    	      this.supportDescription = defaults.supportDescription;
    	      this.supportEmail = defaults.supportEmail;
    	      this.supportUrl = defaults.supportUrl;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder acceptLanguage(@Nullable String acceptLanguage) {
            this.acceptLanguage = acceptLanguage;
            return this;
        }
        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder createdTime(@Nullable String createdTime) {
            this.createdTime = createdTime;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder distributor(@Nullable String distributor) {
            this.distributor = distributor;
            return this;
        }
        @CustomType.Setter
        public Builder hasDefaultPath(@Nullable Boolean hasDefaultPath) {
            this.hasDefaultPath = hasDefaultPath;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder owner(@Nullable String owner) {
            this.owner = owner;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder supportDescription(@Nullable String supportDescription) {
            this.supportDescription = supportDescription;
            return this;
        }
        @CustomType.Setter
        public Builder supportEmail(@Nullable String supportEmail) {
            this.supportEmail = supportEmail;
            return this;
        }
        @CustomType.Setter
        public Builder supportUrl(@Nullable String supportUrl) {
            this.supportUrl = supportUrl;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        public GetProductResult build() {
            final var o = new GetProductResult();
            o.acceptLanguage = acceptLanguage;
            o.arn = arn;
            o.createdTime = createdTime;
            o.description = description;
            o.distributor = distributor;
            o.hasDefaultPath = hasDefaultPath;
            o.id = id;
            o.name = name;
            o.owner = owner;
            o.status = status;
            o.supportDescription = supportDescription;
            o.supportEmail = supportEmail;
            o.supportUrl = supportUrl;
            o.tags = tags;
            o.type = type;
            return o;
        }
    }
}
