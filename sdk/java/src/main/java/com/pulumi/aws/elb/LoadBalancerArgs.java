// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elb;

import com.pulumi.aws.elb.inputs.LoadBalancerAccessLogsArgs;
import com.pulumi.aws.elb.inputs.LoadBalancerHealthCheckArgs;
import com.pulumi.aws.elb.inputs.LoadBalancerListenerArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LoadBalancerArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoadBalancerArgs Empty = new LoadBalancerArgs();

    @Import(name="accessLogs")
    private @Nullable Output<LoadBalancerAccessLogsArgs> accessLogs;

    public Optional<Output<LoadBalancerAccessLogsArgs>> accessLogs() {
        return Optional.ofNullable(this.accessLogs);
    }

    @Import(name="availabilityZones")
    private @Nullable Output<List<String>> availabilityZones;

    public Optional<Output<List<String>>> availabilityZones() {
        return Optional.ofNullable(this.availabilityZones);
    }

    @Import(name="connectionDraining")
    private @Nullable Output<Boolean> connectionDraining;

    public Optional<Output<Boolean>> connectionDraining() {
        return Optional.ofNullable(this.connectionDraining);
    }

    @Import(name="connectionDrainingTimeout")
    private @Nullable Output<Integer> connectionDrainingTimeout;

    public Optional<Output<Integer>> connectionDrainingTimeout() {
        return Optional.ofNullable(this.connectionDrainingTimeout);
    }

    @Import(name="crossZoneLoadBalancing")
    private @Nullable Output<Boolean> crossZoneLoadBalancing;

    public Optional<Output<Boolean>> crossZoneLoadBalancing() {
        return Optional.ofNullable(this.crossZoneLoadBalancing);
    }

    @Import(name="desyncMitigationMode")
    private @Nullable Output<String> desyncMitigationMode;

    public Optional<Output<String>> desyncMitigationMode() {
        return Optional.ofNullable(this.desyncMitigationMode);
    }

    @Import(name="healthCheck")
    private @Nullable Output<LoadBalancerHealthCheckArgs> healthCheck;

    public Optional<Output<LoadBalancerHealthCheckArgs>> healthCheck() {
        return Optional.ofNullable(this.healthCheck);
    }

    @Import(name="idleTimeout")
    private @Nullable Output<Integer> idleTimeout;

    public Optional<Output<Integer>> idleTimeout() {
        return Optional.ofNullable(this.idleTimeout);
    }

    @Import(name="instances")
    private @Nullable Output<List<String>> instances;

    public Optional<Output<List<String>>> instances() {
        return Optional.ofNullable(this.instances);
    }

    @Import(name="internal")
    private @Nullable Output<Boolean> internal;

    public Optional<Output<Boolean>> internal() {
        return Optional.ofNullable(this.internal);
    }

    @Import(name="listeners", required=true)
    private Output<List<LoadBalancerListenerArgs>> listeners;

    public Output<List<LoadBalancerListenerArgs>> listeners() {
        return this.listeners;
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="namePrefix")
    private @Nullable Output<String> namePrefix;

    public Optional<Output<String>> namePrefix() {
        return Optional.ofNullable(this.namePrefix);
    }

    @Import(name="securityGroups")
    private @Nullable Output<List<String>> securityGroups;

    public Optional<Output<List<String>>> securityGroups() {
        return Optional.ofNullable(this.securityGroups);
    }

    @Import(name="sourceSecurityGroup")
    private @Nullable Output<String> sourceSecurityGroup;

    public Optional<Output<String>> sourceSecurityGroup() {
        return Optional.ofNullable(this.sourceSecurityGroup);
    }

    @Import(name="subnets")
    private @Nullable Output<List<String>> subnets;

    public Optional<Output<List<String>>> subnets() {
        return Optional.ofNullable(this.subnets);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private LoadBalancerArgs() {}

    private LoadBalancerArgs(LoadBalancerArgs $) {
        this.accessLogs = $.accessLogs;
        this.availabilityZones = $.availabilityZones;
        this.connectionDraining = $.connectionDraining;
        this.connectionDrainingTimeout = $.connectionDrainingTimeout;
        this.crossZoneLoadBalancing = $.crossZoneLoadBalancing;
        this.desyncMitigationMode = $.desyncMitigationMode;
        this.healthCheck = $.healthCheck;
        this.idleTimeout = $.idleTimeout;
        this.instances = $.instances;
        this.internal = $.internal;
        this.listeners = $.listeners;
        this.name = $.name;
        this.namePrefix = $.namePrefix;
        this.securityGroups = $.securityGroups;
        this.sourceSecurityGroup = $.sourceSecurityGroup;
        this.subnets = $.subnets;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoadBalancerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoadBalancerArgs $;

        public Builder() {
            $ = new LoadBalancerArgs();
        }

        public Builder(LoadBalancerArgs defaults) {
            $ = new LoadBalancerArgs(Objects.requireNonNull(defaults));
        }

        public Builder accessLogs(@Nullable Output<LoadBalancerAccessLogsArgs> accessLogs) {
            $.accessLogs = accessLogs;
            return this;
        }

        public Builder accessLogs(LoadBalancerAccessLogsArgs accessLogs) {
            return accessLogs(Output.of(accessLogs));
        }

        public Builder availabilityZones(@Nullable Output<List<String>> availabilityZones) {
            $.availabilityZones = availabilityZones;
            return this;
        }

        public Builder availabilityZones(List<String> availabilityZones) {
            return availabilityZones(Output.of(availabilityZones));
        }

        public Builder availabilityZones(String... availabilityZones) {
            return availabilityZones(List.of(availabilityZones));
        }

        public Builder connectionDraining(@Nullable Output<Boolean> connectionDraining) {
            $.connectionDraining = connectionDraining;
            return this;
        }

        public Builder connectionDraining(Boolean connectionDraining) {
            return connectionDraining(Output.of(connectionDraining));
        }

        public Builder connectionDrainingTimeout(@Nullable Output<Integer> connectionDrainingTimeout) {
            $.connectionDrainingTimeout = connectionDrainingTimeout;
            return this;
        }

        public Builder connectionDrainingTimeout(Integer connectionDrainingTimeout) {
            return connectionDrainingTimeout(Output.of(connectionDrainingTimeout));
        }

        public Builder crossZoneLoadBalancing(@Nullable Output<Boolean> crossZoneLoadBalancing) {
            $.crossZoneLoadBalancing = crossZoneLoadBalancing;
            return this;
        }

        public Builder crossZoneLoadBalancing(Boolean crossZoneLoadBalancing) {
            return crossZoneLoadBalancing(Output.of(crossZoneLoadBalancing));
        }

        public Builder desyncMitigationMode(@Nullable Output<String> desyncMitigationMode) {
            $.desyncMitigationMode = desyncMitigationMode;
            return this;
        }

        public Builder desyncMitigationMode(String desyncMitigationMode) {
            return desyncMitigationMode(Output.of(desyncMitigationMode));
        }

        public Builder healthCheck(@Nullable Output<LoadBalancerHealthCheckArgs> healthCheck) {
            $.healthCheck = healthCheck;
            return this;
        }

        public Builder healthCheck(LoadBalancerHealthCheckArgs healthCheck) {
            return healthCheck(Output.of(healthCheck));
        }

        public Builder idleTimeout(@Nullable Output<Integer> idleTimeout) {
            $.idleTimeout = idleTimeout;
            return this;
        }

        public Builder idleTimeout(Integer idleTimeout) {
            return idleTimeout(Output.of(idleTimeout));
        }

        public Builder instances(@Nullable Output<List<String>> instances) {
            $.instances = instances;
            return this;
        }

        public Builder instances(List<String> instances) {
            return instances(Output.of(instances));
        }

        public Builder instances(String... instances) {
            return instances(List.of(instances));
        }

        public Builder internal(@Nullable Output<Boolean> internal) {
            $.internal = internal;
            return this;
        }

        public Builder internal(Boolean internal) {
            return internal(Output.of(internal));
        }

        public Builder listeners(Output<List<LoadBalancerListenerArgs>> listeners) {
            $.listeners = listeners;
            return this;
        }

        public Builder listeners(List<LoadBalancerListenerArgs> listeners) {
            return listeners(Output.of(listeners));
        }

        public Builder listeners(LoadBalancerListenerArgs... listeners) {
            return listeners(List.of(listeners));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder namePrefix(@Nullable Output<String> namePrefix) {
            $.namePrefix = namePrefix;
            return this;
        }

        public Builder namePrefix(String namePrefix) {
            return namePrefix(Output.of(namePrefix));
        }

        public Builder securityGroups(@Nullable Output<List<String>> securityGroups) {
            $.securityGroups = securityGroups;
            return this;
        }

        public Builder securityGroups(List<String> securityGroups) {
            return securityGroups(Output.of(securityGroups));
        }

        public Builder securityGroups(String... securityGroups) {
            return securityGroups(List.of(securityGroups));
        }

        public Builder sourceSecurityGroup(@Nullable Output<String> sourceSecurityGroup) {
            $.sourceSecurityGroup = sourceSecurityGroup;
            return this;
        }

        public Builder sourceSecurityGroup(String sourceSecurityGroup) {
            return sourceSecurityGroup(Output.of(sourceSecurityGroup));
        }

        public Builder subnets(@Nullable Output<List<String>> subnets) {
            $.subnets = subnets;
            return this;
        }

        public Builder subnets(List<String> subnets) {
            return subnets(Output.of(subnets));
        }

        public Builder subnets(String... subnets) {
            return subnets(List.of(subnets));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public LoadBalancerArgs build() {
            $.listeners = Objects.requireNonNull($.listeners, "expected parameter 'listeners' to be non-null");
            return $;
        }
    }

}
