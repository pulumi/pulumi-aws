// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.medialive.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ChannelEncoderSettingsOutputGroupOutputOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ChannelEncoderSettingsOutputGroupOutputOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsArgs Empty = new ChannelEncoderSettingsOutputGroupOutputOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsArgs();

    @Import(name="audioFramesPerPes")
    private @Nullable Output<Integer> audioFramesPerPes;

    public Optional<Output<Integer>> audioFramesPerPes() {
        return Optional.ofNullable(this.audioFramesPerPes);
    }

    @Import(name="audioPids")
    private @Nullable Output<String> audioPids;

    public Optional<Output<String>> audioPids() {
        return Optional.ofNullable(this.audioPids);
    }

    @Import(name="ecmPid")
    private @Nullable Output<String> ecmPid;

    public Optional<Output<String>> ecmPid() {
        return Optional.ofNullable(this.ecmPid);
    }

    @Import(name="nielsenId3Behavior")
    private @Nullable Output<String> nielsenId3Behavior;

    public Optional<Output<String>> nielsenId3Behavior() {
        return Optional.ofNullable(this.nielsenId3Behavior);
    }

    @Import(name="patInterval")
    private @Nullable Output<Integer> patInterval;

    public Optional<Output<Integer>> patInterval() {
        return Optional.ofNullable(this.patInterval);
    }

    @Import(name="pcrControl")
    private @Nullable Output<String> pcrControl;

    public Optional<Output<String>> pcrControl() {
        return Optional.ofNullable(this.pcrControl);
    }

    @Import(name="pcrPeriod")
    private @Nullable Output<Integer> pcrPeriod;

    public Optional<Output<Integer>> pcrPeriod() {
        return Optional.ofNullable(this.pcrPeriod);
    }

    @Import(name="pcrPid")
    private @Nullable Output<String> pcrPid;

    public Optional<Output<String>> pcrPid() {
        return Optional.ofNullable(this.pcrPid);
    }

    @Import(name="pmtInterval")
    private @Nullable Output<Integer> pmtInterval;

    public Optional<Output<Integer>> pmtInterval() {
        return Optional.ofNullable(this.pmtInterval);
    }

    @Import(name="pmtPid")
    private @Nullable Output<String> pmtPid;

    public Optional<Output<String>> pmtPid() {
        return Optional.ofNullable(this.pmtPid);
    }

    @Import(name="programNum")
    private @Nullable Output<Integer> programNum;

    public Optional<Output<Integer>> programNum() {
        return Optional.ofNullable(this.programNum);
    }

    @Import(name="scte35Behavior")
    private @Nullable Output<String> scte35Behavior;

    public Optional<Output<String>> scte35Behavior() {
        return Optional.ofNullable(this.scte35Behavior);
    }

    /**
     * PID from which to read SCTE-35 messages.
     * 
     */
    @Import(name="scte35Pid")
    private @Nullable Output<String> scte35Pid;

    /**
     * @return PID from which to read SCTE-35 messages.
     * 
     */
    public Optional<Output<String>> scte35Pid() {
        return Optional.ofNullable(this.scte35Pid);
    }

    @Import(name="timedMetadataBehavior")
    private @Nullable Output<String> timedMetadataBehavior;

    public Optional<Output<String>> timedMetadataBehavior() {
        return Optional.ofNullable(this.timedMetadataBehavior);
    }

    @Import(name="timedMetadataPid")
    private @Nullable Output<String> timedMetadataPid;

    public Optional<Output<String>> timedMetadataPid() {
        return Optional.ofNullable(this.timedMetadataPid);
    }

    @Import(name="transportStreamId")
    private @Nullable Output<Integer> transportStreamId;

    public Optional<Output<Integer>> transportStreamId() {
        return Optional.ofNullable(this.transportStreamId);
    }

    @Import(name="videoPid")
    private @Nullable Output<String> videoPid;

    public Optional<Output<String>> videoPid() {
        return Optional.ofNullable(this.videoPid);
    }

    private ChannelEncoderSettingsOutputGroupOutputOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsArgs() {}

    private ChannelEncoderSettingsOutputGroupOutputOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsArgs(ChannelEncoderSettingsOutputGroupOutputOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsArgs $) {
        this.audioFramesPerPes = $.audioFramesPerPes;
        this.audioPids = $.audioPids;
        this.ecmPid = $.ecmPid;
        this.nielsenId3Behavior = $.nielsenId3Behavior;
        this.patInterval = $.patInterval;
        this.pcrControl = $.pcrControl;
        this.pcrPeriod = $.pcrPeriod;
        this.pcrPid = $.pcrPid;
        this.pmtInterval = $.pmtInterval;
        this.pmtPid = $.pmtPid;
        this.programNum = $.programNum;
        this.scte35Behavior = $.scte35Behavior;
        this.scte35Pid = $.scte35Pid;
        this.timedMetadataBehavior = $.timedMetadataBehavior;
        this.timedMetadataPid = $.timedMetadataPid;
        this.transportStreamId = $.transportStreamId;
        this.videoPid = $.videoPid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ChannelEncoderSettingsOutputGroupOutputOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ChannelEncoderSettingsOutputGroupOutputOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsArgs $;

        public Builder() {
            $ = new ChannelEncoderSettingsOutputGroupOutputOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsArgs();
        }

        public Builder(ChannelEncoderSettingsOutputGroupOutputOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsArgs defaults) {
            $ = new ChannelEncoderSettingsOutputGroupOutputOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsArgs(Objects.requireNonNull(defaults));
        }

        public Builder audioFramesPerPes(@Nullable Output<Integer> audioFramesPerPes) {
            $.audioFramesPerPes = audioFramesPerPes;
            return this;
        }

        public Builder audioFramesPerPes(Integer audioFramesPerPes) {
            return audioFramesPerPes(Output.of(audioFramesPerPes));
        }

        public Builder audioPids(@Nullable Output<String> audioPids) {
            $.audioPids = audioPids;
            return this;
        }

        public Builder audioPids(String audioPids) {
            return audioPids(Output.of(audioPids));
        }

        public Builder ecmPid(@Nullable Output<String> ecmPid) {
            $.ecmPid = ecmPid;
            return this;
        }

        public Builder ecmPid(String ecmPid) {
            return ecmPid(Output.of(ecmPid));
        }

        public Builder nielsenId3Behavior(@Nullable Output<String> nielsenId3Behavior) {
            $.nielsenId3Behavior = nielsenId3Behavior;
            return this;
        }

        public Builder nielsenId3Behavior(String nielsenId3Behavior) {
            return nielsenId3Behavior(Output.of(nielsenId3Behavior));
        }

        public Builder patInterval(@Nullable Output<Integer> patInterval) {
            $.patInterval = patInterval;
            return this;
        }

        public Builder patInterval(Integer patInterval) {
            return patInterval(Output.of(patInterval));
        }

        public Builder pcrControl(@Nullable Output<String> pcrControl) {
            $.pcrControl = pcrControl;
            return this;
        }

        public Builder pcrControl(String pcrControl) {
            return pcrControl(Output.of(pcrControl));
        }

        public Builder pcrPeriod(@Nullable Output<Integer> pcrPeriod) {
            $.pcrPeriod = pcrPeriod;
            return this;
        }

        public Builder pcrPeriod(Integer pcrPeriod) {
            return pcrPeriod(Output.of(pcrPeriod));
        }

        public Builder pcrPid(@Nullable Output<String> pcrPid) {
            $.pcrPid = pcrPid;
            return this;
        }

        public Builder pcrPid(String pcrPid) {
            return pcrPid(Output.of(pcrPid));
        }

        public Builder pmtInterval(@Nullable Output<Integer> pmtInterval) {
            $.pmtInterval = pmtInterval;
            return this;
        }

        public Builder pmtInterval(Integer pmtInterval) {
            return pmtInterval(Output.of(pmtInterval));
        }

        public Builder pmtPid(@Nullable Output<String> pmtPid) {
            $.pmtPid = pmtPid;
            return this;
        }

        public Builder pmtPid(String pmtPid) {
            return pmtPid(Output.of(pmtPid));
        }

        public Builder programNum(@Nullable Output<Integer> programNum) {
            $.programNum = programNum;
            return this;
        }

        public Builder programNum(Integer programNum) {
            return programNum(Output.of(programNum));
        }

        public Builder scte35Behavior(@Nullable Output<String> scte35Behavior) {
            $.scte35Behavior = scte35Behavior;
            return this;
        }

        public Builder scte35Behavior(String scte35Behavior) {
            return scte35Behavior(Output.of(scte35Behavior));
        }

        /**
         * @param scte35Pid PID from which to read SCTE-35 messages.
         * 
         * @return builder
         * 
         */
        public Builder scte35Pid(@Nullable Output<String> scte35Pid) {
            $.scte35Pid = scte35Pid;
            return this;
        }

        /**
         * @param scte35Pid PID from which to read SCTE-35 messages.
         * 
         * @return builder
         * 
         */
        public Builder scte35Pid(String scte35Pid) {
            return scte35Pid(Output.of(scte35Pid));
        }

        public Builder timedMetadataBehavior(@Nullable Output<String> timedMetadataBehavior) {
            $.timedMetadataBehavior = timedMetadataBehavior;
            return this;
        }

        public Builder timedMetadataBehavior(String timedMetadataBehavior) {
            return timedMetadataBehavior(Output.of(timedMetadataBehavior));
        }

        public Builder timedMetadataPid(@Nullable Output<String> timedMetadataPid) {
            $.timedMetadataPid = timedMetadataPid;
            return this;
        }

        public Builder timedMetadataPid(String timedMetadataPid) {
            return timedMetadataPid(Output.of(timedMetadataPid));
        }

        public Builder transportStreamId(@Nullable Output<Integer> transportStreamId) {
            $.transportStreamId = transportStreamId;
            return this;
        }

        public Builder transportStreamId(Integer transportStreamId) {
            return transportStreamId(Output.of(transportStreamId));
        }

        public Builder videoPid(@Nullable Output<String> videoPid) {
            $.videoPid = videoPid;
            return this;
        }

        public Builder videoPid(String videoPid) {
            return videoPid(Output.of(videoPid));
        }

        public ChannelEncoderSettingsOutputGroupOutputOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsArgs build() {
            return $;
        }
    }

}
