// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.macie;

import com.pulumi.aws.macie.inputs.FindingsFilterFindingCriteriaArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FindingsFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final FindingsFilterArgs Empty = new FindingsFilterArgs();

    @Import(name="action", required=true)
    private Output<String> action;

    public Output<String> action() {
        return this.action;
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="findingCriteria", required=true)
    private Output<FindingsFilterFindingCriteriaArgs> findingCriteria;

    public Output<FindingsFilterFindingCriteriaArgs> findingCriteria() {
        return this.findingCriteria;
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="namePrefix")
    private @Nullable Output<String> namePrefix;

    public Optional<Output<String>> namePrefix() {
        return Optional.ofNullable(this.namePrefix);
    }

    @Import(name="position")
    private @Nullable Output<Integer> position;

    public Optional<Output<Integer>> position() {
        return Optional.ofNullable(this.position);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private FindingsFilterArgs() {}

    private FindingsFilterArgs(FindingsFilterArgs $) {
        this.action = $.action;
        this.description = $.description;
        this.findingCriteria = $.findingCriteria;
        this.name = $.name;
        this.namePrefix = $.namePrefix;
        this.position = $.position;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FindingsFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FindingsFilterArgs $;

        public Builder() {
            $ = new FindingsFilterArgs();
        }

        public Builder(FindingsFilterArgs defaults) {
            $ = new FindingsFilterArgs(Objects.requireNonNull(defaults));
        }

        public Builder action(Output<String> action) {
            $.action = action;
            return this;
        }

        public Builder action(String action) {
            return action(Output.of(action));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder findingCriteria(Output<FindingsFilterFindingCriteriaArgs> findingCriteria) {
            $.findingCriteria = findingCriteria;
            return this;
        }

        public Builder findingCriteria(FindingsFilterFindingCriteriaArgs findingCriteria) {
            return findingCriteria(Output.of(findingCriteria));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder namePrefix(@Nullable Output<String> namePrefix) {
            $.namePrefix = namePrefix;
            return this;
        }

        public Builder namePrefix(String namePrefix) {
            return namePrefix(Output.of(namePrefix));
        }

        public Builder position(@Nullable Output<Integer> position) {
            $.position = position;
            return this;
        }

        public Builder position(Integer position) {
            return position(Output.of(position));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public FindingsFilterArgs build() {
            $.action = Objects.requireNonNull($.action, "expected parameter 'action' to be non-null");
            $.findingCriteria = Objects.requireNonNull($.findingCriteria, "expected parameter 'findingCriteria' to be non-null");
            return $;
        }
    }

}
