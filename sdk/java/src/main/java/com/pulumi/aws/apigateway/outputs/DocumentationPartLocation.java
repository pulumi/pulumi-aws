// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apigateway.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DocumentationPartLocation {
    /**
     * @return HTTP verb of a method. The default value is `*` for any method.
     * 
     */
    private @Nullable String method;
    /**
     * @return Name of the targeted API entity.
     * 
     */
    private @Nullable String name;
    /**
     * @return URL path of the target. The default value is `/` for the root resource.
     * 
     */
    private @Nullable String path;
    /**
     * @return HTTP status code of a response. The default value is `*` for any status code.
     * 
     */
    private @Nullable String statusCode;
    /**
     * @return Type of API entity to which the documentation content appliesE.g., `API`, `METHOD` or `REQUEST_BODY`
     * 
     */
    private String type;

    private DocumentationPartLocation() {}
    /**
     * @return HTTP verb of a method. The default value is `*` for any method.
     * 
     */
    public Optional<String> method() {
        return Optional.ofNullable(this.method);
    }
    /**
     * @return Name of the targeted API entity.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return URL path of the target. The default value is `/` for the root resource.
     * 
     */
    public Optional<String> path() {
        return Optional.ofNullable(this.path);
    }
    /**
     * @return HTTP status code of a response. The default value is `*` for any status code.
     * 
     */
    public Optional<String> statusCode() {
        return Optional.ofNullable(this.statusCode);
    }
    /**
     * @return Type of API entity to which the documentation content appliesE.g., `API`, `METHOD` or `REQUEST_BODY`
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DocumentationPartLocation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String method;
        private @Nullable String name;
        private @Nullable String path;
        private @Nullable String statusCode;
        private String type;
        public Builder() {}
        public Builder(DocumentationPartLocation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.method = defaults.method;
    	      this.name = defaults.name;
    	      this.path = defaults.path;
    	      this.statusCode = defaults.statusCode;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder method(@Nullable String method) {

            this.method = method;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder path(@Nullable String path) {

            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder statusCode(@Nullable String statusCode) {

            this.statusCode = statusCode;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("DocumentationPartLocation", "type");
            }
            this.type = type;
            return this;
        }
        public DocumentationPartLocation build() {
            final var _resultValue = new DocumentationPartLocation();
            _resultValue.method = method;
            _resultValue.name = name;
            _resultValue.path = path;
            _resultValue.statusCode = statusCode;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
