// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.location.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GeofenceCollectionState extends com.pulumi.resources.ResourceArgs {

    public static final GeofenceCollectionState Empty = new GeofenceCollectionState();

    /**
     * The Amazon Resource Name (ARN) for the geofence collection resource. Used when you need to specify a resource across all AWS.
     * 
     */
    @Import(name="collectionArn")
    private @Nullable Output<String> collectionArn;

    /**
     * @return The Amazon Resource Name (ARN) for the geofence collection resource. Used when you need to specify a resource across all AWS.
     * 
     */
    public Optional<Output<String>> collectionArn() {
        return Optional.ofNullable(this.collectionArn);
    }

    /**
     * The name of the geofence collection.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="collectionName")
    private @Nullable Output<String> collectionName;

    /**
     * @return The name of the geofence collection.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<String>> collectionName() {
        return Optional.ofNullable(this.collectionName);
    }

    /**
     * The timestamp for when the geofence collection resource was created in ISO 8601 format.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The timestamp for when the geofence collection resource was created in ISO 8601 format.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * The optional description for the geofence collection.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The optional description for the geofence collection.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * A key identifier for an AWS KMS customer managed key assigned to the Amazon Location resource.
     * 
     */
    @Import(name="kmsKeyId")
    private @Nullable Output<String> kmsKeyId;

    /**
     * @return A key identifier for an AWS KMS customer managed key assigned to the Amazon Location resource.
     * 
     */
    public Optional<Output<String>> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }

    /**
     * Key-value tags for the geofence collection. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Key-value tags for the geofence collection. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    /**
     * The timestamp for when the geofence collection resource was last updated in ISO 8601 format.
     * 
     */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    /**
     * @return The timestamp for when the geofence collection resource was last updated in ISO 8601 format.
     * 
     */
    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    private GeofenceCollectionState() {}

    private GeofenceCollectionState(GeofenceCollectionState $) {
        this.collectionArn = $.collectionArn;
        this.collectionName = $.collectionName;
        this.createTime = $.createTime;
        this.description = $.description;
        this.kmsKeyId = $.kmsKeyId;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.updateTime = $.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GeofenceCollectionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GeofenceCollectionState $;

        public Builder() {
            $ = new GeofenceCollectionState();
        }

        public Builder(GeofenceCollectionState defaults) {
            $ = new GeofenceCollectionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param collectionArn The Amazon Resource Name (ARN) for the geofence collection resource. Used when you need to specify a resource across all AWS.
         * 
         * @return builder
         * 
         */
        public Builder collectionArn(@Nullable Output<String> collectionArn) {
            $.collectionArn = collectionArn;
            return this;
        }

        /**
         * @param collectionArn The Amazon Resource Name (ARN) for the geofence collection resource. Used when you need to specify a resource across all AWS.
         * 
         * @return builder
         * 
         */
        public Builder collectionArn(String collectionArn) {
            return collectionArn(Output.of(collectionArn));
        }

        /**
         * @param collectionName The name of the geofence collection.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder collectionName(@Nullable Output<String> collectionName) {
            $.collectionName = collectionName;
            return this;
        }

        /**
         * @param collectionName The name of the geofence collection.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder collectionName(String collectionName) {
            return collectionName(Output.of(collectionName));
        }

        /**
         * @param createTime The timestamp for when the geofence collection resource was created in ISO 8601 format.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The timestamp for when the geofence collection resource was created in ISO 8601 format.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param description The optional description for the geofence collection.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The optional description for the geofence collection.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param kmsKeyId A key identifier for an AWS KMS customer managed key assigned to the Amazon Location resource.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(@Nullable Output<String> kmsKeyId) {
            $.kmsKeyId = kmsKeyId;
            return this;
        }

        /**
         * @param kmsKeyId A key identifier for an AWS KMS customer managed key assigned to the Amazon Location resource.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(String kmsKeyId) {
            return kmsKeyId(Output.of(kmsKeyId));
        }

        /**
         * @param tags Key-value tags for the geofence collection. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Key-value tags for the geofence collection. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        /**
         * @param updateTime The timestamp for when the geofence collection resource was last updated in ISO 8601 format.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        /**
         * @param updateTime The timestamp for when the geofence collection resource was last updated in ISO 8601 format.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        public GeofenceCollectionState build() {
            return $;
        }
    }

}
