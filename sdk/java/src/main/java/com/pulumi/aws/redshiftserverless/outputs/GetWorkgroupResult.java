// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.redshiftserverless.outputs;

import com.pulumi.aws.redshiftserverless.outputs.GetWorkgroupEndpoint;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetWorkgroupResult {
    /**
     * @return Amazon Resource Name (ARN) of the Redshift Serverless Workgroup.
     * 
     */
    private String arn;
    /**
     * @return The endpoint that is created from the workgroup. See `Endpoint` below.
     * 
     */
    private List<GetWorkgroupEndpoint> endpoints;
    /**
     * @return The value that specifies whether to turn on enhanced virtual private cloud (VPC) routing, which forces Amazon Redshift Serverless to route traffic through your VPC instead of over the internet.
     * 
     */
    private Boolean enhancedVpcRouting;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String namespaceName;
    /**
     * @return A value that specifies whether the workgroup can be accessed from a public network.
     * 
     */
    private Boolean publiclyAccessible;
    /**
     * @return An array of security group IDs to associate with the workgroup.
     * 
     */
    private List<String> securityGroupIds;
    /**
     * @return An array of VPC subnet IDs to associate with the workgroup. When set, must contain at least three subnets spanning three Availability Zones. A minimum number of IP addresses is required and scales with the Base Capacity. For more information, see the following [AWS document](https://docs.aws.amazon.com/redshift/latest/mgmt/serverless-known-issues.html).
     * 
     */
    private List<String> subnetIds;
    /**
     * @return The Redshift Workgroup ID.
     * 
     */
    private String workgroupId;
    private String workgroupName;

    private GetWorkgroupResult() {}
    /**
     * @return Amazon Resource Name (ARN) of the Redshift Serverless Workgroup.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return The endpoint that is created from the workgroup. See `Endpoint` below.
     * 
     */
    public List<GetWorkgroupEndpoint> endpoints() {
        return this.endpoints;
    }
    /**
     * @return The value that specifies whether to turn on enhanced virtual private cloud (VPC) routing, which forces Amazon Redshift Serverless to route traffic through your VPC instead of over the internet.
     * 
     */
    public Boolean enhancedVpcRouting() {
        return this.enhancedVpcRouting;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String namespaceName() {
        return this.namespaceName;
    }
    /**
     * @return A value that specifies whether the workgroup can be accessed from a public network.
     * 
     */
    public Boolean publiclyAccessible() {
        return this.publiclyAccessible;
    }
    /**
     * @return An array of security group IDs to associate with the workgroup.
     * 
     */
    public List<String> securityGroupIds() {
        return this.securityGroupIds;
    }
    /**
     * @return An array of VPC subnet IDs to associate with the workgroup. When set, must contain at least three subnets spanning three Availability Zones. A minimum number of IP addresses is required and scales with the Base Capacity. For more information, see the following [AWS document](https://docs.aws.amazon.com/redshift/latest/mgmt/serverless-known-issues.html).
     * 
     */
    public List<String> subnetIds() {
        return this.subnetIds;
    }
    /**
     * @return The Redshift Workgroup ID.
     * 
     */
    public String workgroupId() {
        return this.workgroupId;
    }
    public String workgroupName() {
        return this.workgroupName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkgroupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private List<GetWorkgroupEndpoint> endpoints;
        private Boolean enhancedVpcRouting;
        private String id;
        private String namespaceName;
        private Boolean publiclyAccessible;
        private List<String> securityGroupIds;
        private List<String> subnetIds;
        private String workgroupId;
        private String workgroupName;
        public Builder() {}
        public Builder(GetWorkgroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.endpoints = defaults.endpoints;
    	      this.enhancedVpcRouting = defaults.enhancedVpcRouting;
    	      this.id = defaults.id;
    	      this.namespaceName = defaults.namespaceName;
    	      this.publiclyAccessible = defaults.publiclyAccessible;
    	      this.securityGroupIds = defaults.securityGroupIds;
    	      this.subnetIds = defaults.subnetIds;
    	      this.workgroupId = defaults.workgroupId;
    	      this.workgroupName = defaults.workgroupName;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder endpoints(List<GetWorkgroupEndpoint> endpoints) {
            this.endpoints = Objects.requireNonNull(endpoints);
            return this;
        }
        public Builder endpoints(GetWorkgroupEndpoint... endpoints) {
            return endpoints(List.of(endpoints));
        }
        @CustomType.Setter
        public Builder enhancedVpcRouting(Boolean enhancedVpcRouting) {
            this.enhancedVpcRouting = Objects.requireNonNull(enhancedVpcRouting);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder namespaceName(String namespaceName) {
            this.namespaceName = Objects.requireNonNull(namespaceName);
            return this;
        }
        @CustomType.Setter
        public Builder publiclyAccessible(Boolean publiclyAccessible) {
            this.publiclyAccessible = Objects.requireNonNull(publiclyAccessible);
            return this;
        }
        @CustomType.Setter
        public Builder securityGroupIds(List<String> securityGroupIds) {
            this.securityGroupIds = Objects.requireNonNull(securityGroupIds);
            return this;
        }
        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }
        @CustomType.Setter
        public Builder subnetIds(List<String> subnetIds) {
            this.subnetIds = Objects.requireNonNull(subnetIds);
            return this;
        }
        public Builder subnetIds(String... subnetIds) {
            return subnetIds(List.of(subnetIds));
        }
        @CustomType.Setter
        public Builder workgroupId(String workgroupId) {
            this.workgroupId = Objects.requireNonNull(workgroupId);
            return this;
        }
        @CustomType.Setter
        public Builder workgroupName(String workgroupName) {
            this.workgroupName = Objects.requireNonNull(workgroupName);
            return this;
        }
        public GetWorkgroupResult build() {
            final var o = new GetWorkgroupResult();
            o.arn = arn;
            o.endpoints = endpoints;
            o.enhancedVpcRouting = enhancedVpcRouting;
            o.id = id;
            o.namespaceName = namespaceName;
            o.publiclyAccessible = publiclyAccessible;
            o.securityGroupIds = securityGroupIds;
            o.subnetIds = subnetIds;
            o.workgroupId = workgroupId;
            o.workgroupName = workgroupName;
            return o;
        }
    }
}
