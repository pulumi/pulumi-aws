// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.storagegateway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TapePoolState extends com.pulumi.resources.ResourceArgs {

    public static final TapePoolState Empty = new TapePoolState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="poolName")
    private @Nullable Output<String> poolName;

    public Optional<Output<String>> poolName() {
        return Optional.ofNullable(this.poolName);
    }

    @Import(name="retentionLockTimeInDays")
    private @Nullable Output<Integer> retentionLockTimeInDays;

    public Optional<Output<Integer>> retentionLockTimeInDays() {
        return Optional.ofNullable(this.retentionLockTimeInDays);
    }

    @Import(name="retentionLockType")
    private @Nullable Output<String> retentionLockType;

    public Optional<Output<String>> retentionLockType() {
        return Optional.ofNullable(this.retentionLockType);
    }

    @Import(name="storageClass")
    private @Nullable Output<String> storageClass;

    public Optional<Output<String>> storageClass() {
        return Optional.ofNullable(this.storageClass);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private TapePoolState() {}

    private TapePoolState(TapePoolState $) {
        this.arn = $.arn;
        this.poolName = $.poolName;
        this.retentionLockTimeInDays = $.retentionLockTimeInDays;
        this.retentionLockType = $.retentionLockType;
        this.storageClass = $.storageClass;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TapePoolState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TapePoolState $;

        public Builder() {
            $ = new TapePoolState();
        }

        public Builder(TapePoolState defaults) {
            $ = new TapePoolState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder poolName(@Nullable Output<String> poolName) {
            $.poolName = poolName;
            return this;
        }

        public Builder poolName(String poolName) {
            return poolName(Output.of(poolName));
        }

        public Builder retentionLockTimeInDays(@Nullable Output<Integer> retentionLockTimeInDays) {
            $.retentionLockTimeInDays = retentionLockTimeInDays;
            return this;
        }

        public Builder retentionLockTimeInDays(Integer retentionLockTimeInDays) {
            return retentionLockTimeInDays(Output.of(retentionLockTimeInDays));
        }

        public Builder retentionLockType(@Nullable Output<String> retentionLockType) {
            $.retentionLockType = retentionLockType;
            return this;
        }

        public Builder retentionLockType(String retentionLockType) {
            return retentionLockType(Output.of(retentionLockType));
        }

        public Builder storageClass(@Nullable Output<String> storageClass) {
            $.storageClass = storageClass;
            return this;
        }

        public Builder storageClass(String storageClass) {
            return storageClass(Output.of(storageClass));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public TapePoolState build() {
            return $;
        }
    }

}
