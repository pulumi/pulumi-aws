// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecs.outputs;

import com.pulumi.aws.ecs.outputs.GetServiceLoadBalancerAdvancedConfiguration;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetServiceLoadBalancer {
    /**
     * @return Settings for Blue/Green deployment. See `advanced_configuration` Block for details.
     * 
     */
    private List<GetServiceLoadBalancerAdvancedConfiguration> advancedConfigurations;
    /**
     * @return Name of the container to associate with the load balancer.
     * 
     */
    private String containerName;
    /**
     * @return Port on the container to associate with the load balancer.
     * 
     */
    private Integer containerPort;
    /**
     * @return Name of the load balancer.
     * 
     */
    private String elbName;
    /**
     * @return ARN of the target group to associate with the load balancer.
     * 
     */
    private String targetGroupArn;

    private GetServiceLoadBalancer() {}
    /**
     * @return Settings for Blue/Green deployment. See `advanced_configuration` Block for details.
     * 
     */
    public List<GetServiceLoadBalancerAdvancedConfiguration> advancedConfigurations() {
        return this.advancedConfigurations;
    }
    /**
     * @return Name of the container to associate with the load balancer.
     * 
     */
    public String containerName() {
        return this.containerName;
    }
    /**
     * @return Port on the container to associate with the load balancer.
     * 
     */
    public Integer containerPort() {
        return this.containerPort;
    }
    /**
     * @return Name of the load balancer.
     * 
     */
    public String elbName() {
        return this.elbName;
    }
    /**
     * @return ARN of the target group to associate with the load balancer.
     * 
     */
    public String targetGroupArn() {
        return this.targetGroupArn;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceLoadBalancer defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetServiceLoadBalancerAdvancedConfiguration> advancedConfigurations;
        private String containerName;
        private Integer containerPort;
        private String elbName;
        private String targetGroupArn;
        public Builder() {}
        public Builder(GetServiceLoadBalancer defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.advancedConfigurations = defaults.advancedConfigurations;
    	      this.containerName = defaults.containerName;
    	      this.containerPort = defaults.containerPort;
    	      this.elbName = defaults.elbName;
    	      this.targetGroupArn = defaults.targetGroupArn;
        }

        @CustomType.Setter
        public Builder advancedConfigurations(List<GetServiceLoadBalancerAdvancedConfiguration> advancedConfigurations) {
            if (advancedConfigurations == null) {
              throw new MissingRequiredPropertyException("GetServiceLoadBalancer", "advancedConfigurations");
            }
            this.advancedConfigurations = advancedConfigurations;
            return this;
        }
        public Builder advancedConfigurations(GetServiceLoadBalancerAdvancedConfiguration... advancedConfigurations) {
            return advancedConfigurations(List.of(advancedConfigurations));
        }
        @CustomType.Setter
        public Builder containerName(String containerName) {
            if (containerName == null) {
              throw new MissingRequiredPropertyException("GetServiceLoadBalancer", "containerName");
            }
            this.containerName = containerName;
            return this;
        }
        @CustomType.Setter
        public Builder containerPort(Integer containerPort) {
            if (containerPort == null) {
              throw new MissingRequiredPropertyException("GetServiceLoadBalancer", "containerPort");
            }
            this.containerPort = containerPort;
            return this;
        }
        @CustomType.Setter
        public Builder elbName(String elbName) {
            if (elbName == null) {
              throw new MissingRequiredPropertyException("GetServiceLoadBalancer", "elbName");
            }
            this.elbName = elbName;
            return this;
        }
        @CustomType.Setter
        public Builder targetGroupArn(String targetGroupArn) {
            if (targetGroupArn == null) {
              throw new MissingRequiredPropertyException("GetServiceLoadBalancer", "targetGroupArn");
            }
            this.targetGroupArn = targetGroupArn;
            return this;
        }
        public GetServiceLoadBalancer build() {
            final var _resultValue = new GetServiceLoadBalancer();
            _resultValue.advancedConfigurations = advancedConfigurations;
            _resultValue.containerName = containerName;
            _resultValue.containerPort = containerPort;
            _resultValue.elbName = elbName;
            _resultValue.targetGroupArn = targetGroupArn;
            return _resultValue;
        }
    }
}
