// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dlm.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LifecyclePolicyPolicyDetailsScheduleCreateRule {
    private @Nullable String cronExpression;
    private @Nullable Integer interval;
    private @Nullable String intervalUnit;
    private @Nullable String location;
    private @Nullable String times;

    private LifecyclePolicyPolicyDetailsScheduleCreateRule() {}
    public Optional<String> cronExpression() {
        return Optional.ofNullable(this.cronExpression);
    }
    public Optional<Integer> interval() {
        return Optional.ofNullable(this.interval);
    }
    public Optional<String> intervalUnit() {
        return Optional.ofNullable(this.intervalUnit);
    }
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    public Optional<String> times() {
        return Optional.ofNullable(this.times);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LifecyclePolicyPolicyDetailsScheduleCreateRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String cronExpression;
        private @Nullable Integer interval;
        private @Nullable String intervalUnit;
        private @Nullable String location;
        private @Nullable String times;
        public Builder() {}
        public Builder(LifecyclePolicyPolicyDetailsScheduleCreateRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cronExpression = defaults.cronExpression;
    	      this.interval = defaults.interval;
    	      this.intervalUnit = defaults.intervalUnit;
    	      this.location = defaults.location;
    	      this.times = defaults.times;
        }

        @CustomType.Setter
        public Builder cronExpression(@Nullable String cronExpression) {

            this.cronExpression = cronExpression;
            return this;
        }
        @CustomType.Setter
        public Builder interval(@Nullable Integer interval) {

            this.interval = interval;
            return this;
        }
        @CustomType.Setter
        public Builder intervalUnit(@Nullable String intervalUnit) {

            this.intervalUnit = intervalUnit;
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {

            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder times(@Nullable String times) {

            this.times = times;
            return this;
        }
        public LifecyclePolicyPolicyDetailsScheduleCreateRule build() {
            final var _resultValue = new LifecyclePolicyPolicyDetailsScheduleCreateRule();
            _resultValue.cronExpression = cronExpression;
            _resultValue.interval = interval;
            _resultValue.intervalUnit = intervalUnit;
            _resultValue.location = location;
            _resultValue.times = times;
            return _resultValue;
        }
    }
}
