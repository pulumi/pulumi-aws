// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudwatch.outputs;

import com.pulumi.aws.cloudwatch.outputs.GetContributorManagedInsightRulesManagedRuleRuleState;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetContributorManagedInsightRulesManagedRule {
    /**
     * @return ARN of an Amazon Web Services resource that has managed Contributor Insights rules.
     * 
     */
    private String resourceArn;
    /**
     * @return Describes the state of a managed rule. If the rule is enabled, it contains information about the Contributor Insights rule that contains information about the related Amazon Web Services resource. See `rule_state reference` below for details.
     * 
     */
    private List<GetContributorManagedInsightRulesManagedRuleRuleState> ruleStates;
    /**
     * @return Template name for the managed rule. Used to enable managed rules using `PutManagedInsightRules`.
     * 
     */
    private String templateName;

    private GetContributorManagedInsightRulesManagedRule() {}
    /**
     * @return ARN of an Amazon Web Services resource that has managed Contributor Insights rules.
     * 
     */
    public String resourceArn() {
        return this.resourceArn;
    }
    /**
     * @return Describes the state of a managed rule. If the rule is enabled, it contains information about the Contributor Insights rule that contains information about the related Amazon Web Services resource. See `rule_state reference` below for details.
     * 
     */
    public List<GetContributorManagedInsightRulesManagedRuleRuleState> ruleStates() {
        return this.ruleStates;
    }
    /**
     * @return Template name for the managed rule. Used to enable managed rules using `PutManagedInsightRules`.
     * 
     */
    public String templateName() {
        return this.templateName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetContributorManagedInsightRulesManagedRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String resourceArn;
        private List<GetContributorManagedInsightRulesManagedRuleRuleState> ruleStates;
        private String templateName;
        public Builder() {}
        public Builder(GetContributorManagedInsightRulesManagedRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.resourceArn = defaults.resourceArn;
    	      this.ruleStates = defaults.ruleStates;
    	      this.templateName = defaults.templateName;
        }

        @CustomType.Setter
        public Builder resourceArn(String resourceArn) {
            if (resourceArn == null) {
              throw new MissingRequiredPropertyException("GetContributorManagedInsightRulesManagedRule", "resourceArn");
            }
            this.resourceArn = resourceArn;
            return this;
        }
        @CustomType.Setter
        public Builder ruleStates(List<GetContributorManagedInsightRulesManagedRuleRuleState> ruleStates) {
            if (ruleStates == null) {
              throw new MissingRequiredPropertyException("GetContributorManagedInsightRulesManagedRule", "ruleStates");
            }
            this.ruleStates = ruleStates;
            return this;
        }
        public Builder ruleStates(GetContributorManagedInsightRulesManagedRuleRuleState... ruleStates) {
            return ruleStates(List.of(ruleStates));
        }
        @CustomType.Setter
        public Builder templateName(String templateName) {
            if (templateName == null) {
              throw new MissingRequiredPropertyException("GetContributorManagedInsightRulesManagedRule", "templateName");
            }
            this.templateName = templateName;
            return this;
        }
        public GetContributorManagedInsightRulesManagedRule build() {
            final var _resultValue = new GetContributorManagedInsightRulesManagedRule();
            _resultValue.resourceArn = resourceArn;
            _resultValue.ruleStates = ruleStates;
            _resultValue.templateName = templateName;
            return _resultValue;
        }
    }
}
