// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.transfer.outputs;

import com.pulumi.aws.transfer.outputs.WorkflowOnExceptionStepCopyStepDetails;
import com.pulumi.aws.transfer.outputs.WorkflowOnExceptionStepCustomStepDetails;
import com.pulumi.aws.transfer.outputs.WorkflowOnExceptionStepDecryptStepDetails;
import com.pulumi.aws.transfer.outputs.WorkflowOnExceptionStepDeleteStepDetails;
import com.pulumi.aws.transfer.outputs.WorkflowOnExceptionStepTagStepDetails;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WorkflowOnExceptionStep {
    /**
     * @return Details for a step that performs a file copy. See Copy Step Details below.
     * 
     */
    private @Nullable WorkflowOnExceptionStepCopyStepDetails copyStepDetails;
    /**
     * @return Details for a step that invokes a lambda function.
     * 
     */
    private @Nullable WorkflowOnExceptionStepCustomStepDetails customStepDetails;
    /**
     * @return Details for a step that decrypts the file.
     * 
     */
    private @Nullable WorkflowOnExceptionStepDecryptStepDetails decryptStepDetails;
    /**
     * @return Details for a step that deletes the file.
     * 
     */
    private @Nullable WorkflowOnExceptionStepDeleteStepDetails deleteStepDetails;
    /**
     * @return Details for a step that creates one or more tags.
     * 
     */
    private @Nullable WorkflowOnExceptionStepTagStepDetails tagStepDetails;
    /**
     * @return One of the following step types are supported. `COPY`, `CUSTOM`, `DECRYPT`, `DELETE`, and `TAG`.
     * 
     */
    private String type;

    private WorkflowOnExceptionStep() {}
    /**
     * @return Details for a step that performs a file copy. See Copy Step Details below.
     * 
     */
    public Optional<WorkflowOnExceptionStepCopyStepDetails> copyStepDetails() {
        return Optional.ofNullable(this.copyStepDetails);
    }
    /**
     * @return Details for a step that invokes a lambda function.
     * 
     */
    public Optional<WorkflowOnExceptionStepCustomStepDetails> customStepDetails() {
        return Optional.ofNullable(this.customStepDetails);
    }
    /**
     * @return Details for a step that decrypts the file.
     * 
     */
    public Optional<WorkflowOnExceptionStepDecryptStepDetails> decryptStepDetails() {
        return Optional.ofNullable(this.decryptStepDetails);
    }
    /**
     * @return Details for a step that deletes the file.
     * 
     */
    public Optional<WorkflowOnExceptionStepDeleteStepDetails> deleteStepDetails() {
        return Optional.ofNullable(this.deleteStepDetails);
    }
    /**
     * @return Details for a step that creates one or more tags.
     * 
     */
    public Optional<WorkflowOnExceptionStepTagStepDetails> tagStepDetails() {
        return Optional.ofNullable(this.tagStepDetails);
    }
    /**
     * @return One of the following step types are supported. `COPY`, `CUSTOM`, `DECRYPT`, `DELETE`, and `TAG`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkflowOnExceptionStep defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable WorkflowOnExceptionStepCopyStepDetails copyStepDetails;
        private @Nullable WorkflowOnExceptionStepCustomStepDetails customStepDetails;
        private @Nullable WorkflowOnExceptionStepDecryptStepDetails decryptStepDetails;
        private @Nullable WorkflowOnExceptionStepDeleteStepDetails deleteStepDetails;
        private @Nullable WorkflowOnExceptionStepTagStepDetails tagStepDetails;
        private String type;
        public Builder() {}
        public Builder(WorkflowOnExceptionStep defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.copyStepDetails = defaults.copyStepDetails;
    	      this.customStepDetails = defaults.customStepDetails;
    	      this.decryptStepDetails = defaults.decryptStepDetails;
    	      this.deleteStepDetails = defaults.deleteStepDetails;
    	      this.tagStepDetails = defaults.tagStepDetails;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder copyStepDetails(@Nullable WorkflowOnExceptionStepCopyStepDetails copyStepDetails) {
            this.copyStepDetails = copyStepDetails;
            return this;
        }
        @CustomType.Setter
        public Builder customStepDetails(@Nullable WorkflowOnExceptionStepCustomStepDetails customStepDetails) {
            this.customStepDetails = customStepDetails;
            return this;
        }
        @CustomType.Setter
        public Builder decryptStepDetails(@Nullable WorkflowOnExceptionStepDecryptStepDetails decryptStepDetails) {
            this.decryptStepDetails = decryptStepDetails;
            return this;
        }
        @CustomType.Setter
        public Builder deleteStepDetails(@Nullable WorkflowOnExceptionStepDeleteStepDetails deleteStepDetails) {
            this.deleteStepDetails = deleteStepDetails;
            return this;
        }
        @CustomType.Setter
        public Builder tagStepDetails(@Nullable WorkflowOnExceptionStepTagStepDetails tagStepDetails) {
            this.tagStepDetails = tagStepDetails;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public WorkflowOnExceptionStep build() {
            final var o = new WorkflowOnExceptionStep();
            o.copyStepDetails = copyStepDetails;
            o.customStepDetails = customStepDetails;
            o.decryptStepDetails = decryptStepDetails;
            o.deleteStepDetails = deleteStepDetails;
            o.tagStepDetails = tagStepDetails;
            o.type = type;
            return o;
        }
    }
}
