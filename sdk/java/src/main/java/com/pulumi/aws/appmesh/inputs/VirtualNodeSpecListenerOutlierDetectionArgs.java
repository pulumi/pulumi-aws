// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.inputs;

import com.pulumi.aws.appmesh.inputs.VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs;
import com.pulumi.aws.appmesh.inputs.VirtualNodeSpecListenerOutlierDetectionIntervalArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;


public final class VirtualNodeSpecListenerOutlierDetectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualNodeSpecListenerOutlierDetectionArgs Empty = new VirtualNodeSpecListenerOutlierDetectionArgs();

    @Import(name="baseEjectionDuration", required=true)
    private Output<VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs> baseEjectionDuration;

    public Output<VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs> baseEjectionDuration() {
        return this.baseEjectionDuration;
    }

    @Import(name="interval", required=true)
    private Output<VirtualNodeSpecListenerOutlierDetectionIntervalArgs> interval;

    public Output<VirtualNodeSpecListenerOutlierDetectionIntervalArgs> interval() {
        return this.interval;
    }

    @Import(name="maxEjectionPercent", required=true)
    private Output<Integer> maxEjectionPercent;

    public Output<Integer> maxEjectionPercent() {
        return this.maxEjectionPercent;
    }

    @Import(name="maxServerErrors", required=true)
    private Output<Integer> maxServerErrors;

    public Output<Integer> maxServerErrors() {
        return this.maxServerErrors;
    }

    private VirtualNodeSpecListenerOutlierDetectionArgs() {}

    private VirtualNodeSpecListenerOutlierDetectionArgs(VirtualNodeSpecListenerOutlierDetectionArgs $) {
        this.baseEjectionDuration = $.baseEjectionDuration;
        this.interval = $.interval;
        this.maxEjectionPercent = $.maxEjectionPercent;
        this.maxServerErrors = $.maxServerErrors;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualNodeSpecListenerOutlierDetectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualNodeSpecListenerOutlierDetectionArgs $;

        public Builder() {
            $ = new VirtualNodeSpecListenerOutlierDetectionArgs();
        }

        public Builder(VirtualNodeSpecListenerOutlierDetectionArgs defaults) {
            $ = new VirtualNodeSpecListenerOutlierDetectionArgs(Objects.requireNonNull(defaults));
        }

        public Builder baseEjectionDuration(Output<VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs> baseEjectionDuration) {
            $.baseEjectionDuration = baseEjectionDuration;
            return this;
        }

        public Builder baseEjectionDuration(VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs baseEjectionDuration) {
            return baseEjectionDuration(Output.of(baseEjectionDuration));
        }

        public Builder interval(Output<VirtualNodeSpecListenerOutlierDetectionIntervalArgs> interval) {
            $.interval = interval;
            return this;
        }

        public Builder interval(VirtualNodeSpecListenerOutlierDetectionIntervalArgs interval) {
            return interval(Output.of(interval));
        }

        public Builder maxEjectionPercent(Output<Integer> maxEjectionPercent) {
            $.maxEjectionPercent = maxEjectionPercent;
            return this;
        }

        public Builder maxEjectionPercent(Integer maxEjectionPercent) {
            return maxEjectionPercent(Output.of(maxEjectionPercent));
        }

        public Builder maxServerErrors(Output<Integer> maxServerErrors) {
            $.maxServerErrors = maxServerErrors;
            return this;
        }

        public Builder maxServerErrors(Integer maxServerErrors) {
            return maxServerErrors(Output.of(maxServerErrors));
        }

        public VirtualNodeSpecListenerOutlierDetectionArgs build() {
            $.baseEjectionDuration = Objects.requireNonNull($.baseEjectionDuration, "expected parameter 'baseEjectionDuration' to be non-null");
            $.interval = Objects.requireNonNull($.interval, "expected parameter 'interval' to be non-null");
            $.maxEjectionPercent = Objects.requireNonNull($.maxEjectionPercent, "expected parameter 'maxEjectionPercent' to be non-null");
            $.maxServerErrors = Objects.requireNonNull($.maxServerErrors, "expected parameter 'maxServerErrors' to be non-null");
            return $;
        }
    }

}
