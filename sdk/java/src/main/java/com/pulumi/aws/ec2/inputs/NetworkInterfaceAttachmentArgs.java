// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkInterfaceAttachmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkInterfaceAttachmentArgs Empty = new NetworkInterfaceAttachmentArgs();

    @Import(name="attachmentId")
    private @Nullable Output<String> attachmentId;

    public Optional<Output<String>> attachmentId() {
        return Optional.ofNullable(this.attachmentId);
    }

    /**
     * Integer to define the devices index.
     * 
     */
    @Import(name="deviceIndex", required=true)
    private Output<Integer> deviceIndex;

    /**
     * @return Integer to define the devices index.
     * 
     */
    public Output<Integer> deviceIndex() {
        return this.deviceIndex;
    }

    /**
     * ID of the instance to attach to.
     * 
     */
    @Import(name="instance", required=true)
    private Output<String> instance;

    /**
     * @return ID of the instance to attach to.
     * 
     */
    public Output<String> instance() {
        return this.instance;
    }

    private NetworkInterfaceAttachmentArgs() {}

    private NetworkInterfaceAttachmentArgs(NetworkInterfaceAttachmentArgs $) {
        this.attachmentId = $.attachmentId;
        this.deviceIndex = $.deviceIndex;
        this.instance = $.instance;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkInterfaceAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkInterfaceAttachmentArgs $;

        public Builder() {
            $ = new NetworkInterfaceAttachmentArgs();
        }

        public Builder(NetworkInterfaceAttachmentArgs defaults) {
            $ = new NetworkInterfaceAttachmentArgs(Objects.requireNonNull(defaults));
        }

        public Builder attachmentId(@Nullable Output<String> attachmentId) {
            $.attachmentId = attachmentId;
            return this;
        }

        public Builder attachmentId(String attachmentId) {
            return attachmentId(Output.of(attachmentId));
        }

        /**
         * @param deviceIndex Integer to define the devices index.
         * 
         * @return builder
         * 
         */
        public Builder deviceIndex(Output<Integer> deviceIndex) {
            $.deviceIndex = deviceIndex;
            return this;
        }

        /**
         * @param deviceIndex Integer to define the devices index.
         * 
         * @return builder
         * 
         */
        public Builder deviceIndex(Integer deviceIndex) {
            return deviceIndex(Output.of(deviceIndex));
        }

        /**
         * @param instance ID of the instance to attach to.
         * 
         * @return builder
         * 
         */
        public Builder instance(Output<String> instance) {
            $.instance = instance;
            return this;
        }

        /**
         * @param instance ID of the instance to attach to.
         * 
         * @return builder
         * 
         */
        public Builder instance(String instance) {
            return instance(Output.of(instance));
        }

        public NetworkInterfaceAttachmentArgs build() {
            if ($.deviceIndex == null) {
                throw new MissingRequiredPropertyException("NetworkInterfaceAttachmentArgs", "deviceIndex");
            }
            if ($.instance == null) {
                throw new MissingRequiredPropertyException("NetworkInterfaceAttachmentArgs", "instance");
            }
            return $;
        }
    }

}
