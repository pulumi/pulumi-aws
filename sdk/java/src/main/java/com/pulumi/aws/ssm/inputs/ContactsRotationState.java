// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ssm.inputs;

import com.pulumi.aws.ssm.inputs.ContactsRotationRecurrenceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ContactsRotationState extends com.pulumi.resources.ResourceArgs {

    public static final ContactsRotationState Empty = new ContactsRotationState();

    /**
     * The Amazon Resource Name (ARN) of the rotation.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return The Amazon Resource Name (ARN) of the rotation.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * Amazon Resource Names (ARNs) of the contacts to add to the rotation. The order in which you list the contacts is their shift order in the rotation schedule.
     * 
     */
    @Import(name="contactIds")
    private @Nullable Output<List<String>> contactIds;

    /**
     * @return Amazon Resource Names (ARNs) of the contacts to add to the rotation. The order in which you list the contacts is their shift order in the rotation schedule.
     * 
     */
    public Optional<Output<List<String>>> contactIds() {
        return Optional.ofNullable(this.contactIds);
    }

    /**
     * The name for the rotation.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name for the rotation.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Information about when an on-call rotation is in effect and how long the rotation period lasts. Exactly one of either `daily_settings`, `monthly_settings`, or `weekly_settings` must be populated. See Recurrence for more details.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="recurrence")
    private @Nullable Output<ContactsRotationRecurrenceArgs> recurrence;

    /**
     * @return Information about when an on-call rotation is in effect and how long the rotation period lasts. Exactly one of either `daily_settings`, `monthly_settings`, or `weekly_settings` must be populated. See Recurrence for more details.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<ContactsRotationRecurrenceArgs>> recurrence() {
        return Optional.ofNullable(this.recurrence);
    }

    /**
     * The date and time, in RFC 3339 format, that the rotation goes into effect.
     * 
     */
    @Import(name="startTime")
    private @Nullable Output<String> startTime;

    /**
     * @return The date and time, in RFC 3339 format, that the rotation goes into effect.
     * 
     */
    public Optional<Output<String>> startTime() {
        return Optional.ofNullable(this.startTime);
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    /**
     * The time zone to base the rotation’s activity on in Internet Assigned Numbers Authority (IANA) format.
     * 
     */
    @Import(name="timeZoneId")
    private @Nullable Output<String> timeZoneId;

    /**
     * @return The time zone to base the rotation’s activity on in Internet Assigned Numbers Authority (IANA) format.
     * 
     */
    public Optional<Output<String>> timeZoneId() {
        return Optional.ofNullable(this.timeZoneId);
    }

    private ContactsRotationState() {}

    private ContactsRotationState(ContactsRotationState $) {
        this.arn = $.arn;
        this.contactIds = $.contactIds;
        this.name = $.name;
        this.recurrence = $.recurrence;
        this.startTime = $.startTime;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.timeZoneId = $.timeZoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContactsRotationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContactsRotationState $;

        public Builder() {
            $ = new ContactsRotationState();
        }

        public Builder(ContactsRotationState defaults) {
            $ = new ContactsRotationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn The Amazon Resource Name (ARN) of the rotation.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn The Amazon Resource Name (ARN) of the rotation.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param contactIds Amazon Resource Names (ARNs) of the contacts to add to the rotation. The order in which you list the contacts is their shift order in the rotation schedule.
         * 
         * @return builder
         * 
         */
        public Builder contactIds(@Nullable Output<List<String>> contactIds) {
            $.contactIds = contactIds;
            return this;
        }

        /**
         * @param contactIds Amazon Resource Names (ARNs) of the contacts to add to the rotation. The order in which you list the contacts is their shift order in the rotation schedule.
         * 
         * @return builder
         * 
         */
        public Builder contactIds(List<String> contactIds) {
            return contactIds(Output.of(contactIds));
        }

        /**
         * @param contactIds Amazon Resource Names (ARNs) of the contacts to add to the rotation. The order in which you list the contacts is their shift order in the rotation schedule.
         * 
         * @return builder
         * 
         */
        public Builder contactIds(String... contactIds) {
            return contactIds(List.of(contactIds));
        }

        /**
         * @param name The name for the rotation.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name for the rotation.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param recurrence Information about when an on-call rotation is in effect and how long the rotation period lasts. Exactly one of either `daily_settings`, `monthly_settings`, or `weekly_settings` must be populated. See Recurrence for more details.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder recurrence(@Nullable Output<ContactsRotationRecurrenceArgs> recurrence) {
            $.recurrence = recurrence;
            return this;
        }

        /**
         * @param recurrence Information about when an on-call rotation is in effect and how long the rotation period lasts. Exactly one of either `daily_settings`, `monthly_settings`, or `weekly_settings` must be populated. See Recurrence for more details.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder recurrence(ContactsRotationRecurrenceArgs recurrence) {
            return recurrence(Output.of(recurrence));
        }

        /**
         * @param startTime The date and time, in RFC 3339 format, that the rotation goes into effect.
         * 
         * @return builder
         * 
         */
        public Builder startTime(@Nullable Output<String> startTime) {
            $.startTime = startTime;
            return this;
        }

        /**
         * @param startTime The date and time, in RFC 3339 format, that the rotation goes into effect.
         * 
         * @return builder
         * 
         */
        public Builder startTime(String startTime) {
            return startTime(Output.of(startTime));
        }

        /**
         * @param tags A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        /**
         * @param timeZoneId The time zone to base the rotation’s activity on in Internet Assigned Numbers Authority (IANA) format.
         * 
         * @return builder
         * 
         */
        public Builder timeZoneId(@Nullable Output<String> timeZoneId) {
            $.timeZoneId = timeZoneId;
            return this;
        }

        /**
         * @param timeZoneId The time zone to base the rotation’s activity on in Internet Assigned Numbers Authority (IANA) format.
         * 
         * @return builder
         * 
         */
        public Builder timeZoneId(String timeZoneId) {
            return timeZoneId(Output.of(timeZoneId));
        }

        public ContactsRotationState build() {
            return $;
        }
    }

}
