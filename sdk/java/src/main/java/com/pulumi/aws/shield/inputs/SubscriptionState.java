// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.shield.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SubscriptionState extends com.pulumi.resources.ResourceArgs {

    public static final SubscriptionState Empty = new SubscriptionState();

    /**
     * Toggle for automated renewal of the subscription. Valid values are `ENABLED` or `DISABLED`. Default is `ENABLED`.
     * 
     */
    @Import(name="autoRenew")
    private @Nullable Output<String> autoRenew;

    /**
     * @return Toggle for automated renewal of the subscription. Valid values are `ENABLED` or `DISABLED`. Default is `ENABLED`.
     * 
     */
    public Optional<Output<String>> autoRenew() {
        return Optional.ofNullable(this.autoRenew);
    }

    /**
     * Skip attempting to disable automated renewal upon destruction. If set to `true`, the `auto_renew` value will be left as-is and the resource will simply be removed from state.
     * 
     */
    @Import(name="skipDestroy")
    private @Nullable Output<Boolean> skipDestroy;

    /**
     * @return Skip attempting to disable automated renewal upon destruction. If set to `true`, the `auto_renew` value will be left as-is and the resource will simply be removed from state.
     * 
     */
    public Optional<Output<Boolean>> skipDestroy() {
        return Optional.ofNullable(this.skipDestroy);
    }

    private SubscriptionState() {}

    private SubscriptionState(SubscriptionState $) {
        this.autoRenew = $.autoRenew;
        this.skipDestroy = $.skipDestroy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SubscriptionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SubscriptionState $;

        public Builder() {
            $ = new SubscriptionState();
        }

        public Builder(SubscriptionState defaults) {
            $ = new SubscriptionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoRenew Toggle for automated renewal of the subscription. Valid values are `ENABLED` or `DISABLED`. Default is `ENABLED`.
         * 
         * @return builder
         * 
         */
        public Builder autoRenew(@Nullable Output<String> autoRenew) {
            $.autoRenew = autoRenew;
            return this;
        }

        /**
         * @param autoRenew Toggle for automated renewal of the subscription. Valid values are `ENABLED` or `DISABLED`. Default is `ENABLED`.
         * 
         * @return builder
         * 
         */
        public Builder autoRenew(String autoRenew) {
            return autoRenew(Output.of(autoRenew));
        }

        /**
         * @param skipDestroy Skip attempting to disable automated renewal upon destruction. If set to `true`, the `auto_renew` value will be left as-is and the resource will simply be removed from state.
         * 
         * @return builder
         * 
         */
        public Builder skipDestroy(@Nullable Output<Boolean> skipDestroy) {
            $.skipDestroy = skipDestroy;
            return this;
        }

        /**
         * @param skipDestroy Skip attempting to disable automated renewal upon destruction. If set to `true`, the `auto_renew` value will be left as-is and the resource will simply be removed from state.
         * 
         * @return builder
         * 
         */
        public Builder skipDestroy(Boolean skipDestroy) {
            return skipDestroy(Output.of(skipDestroy));
        }

        public SubscriptionState build() {
            return $;
        }
    }

}
