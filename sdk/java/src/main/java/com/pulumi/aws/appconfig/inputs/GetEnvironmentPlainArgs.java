// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appconfig.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetEnvironmentPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetEnvironmentPlainArgs Empty = new GetEnvironmentPlainArgs();

    /**
     * ID of the AppConfig Application to which this Environment belongs.
     * 
     */
    @Import(name="applicationId", required=true)
    private String applicationId;

    /**
     * @return ID of the AppConfig Application to which this Environment belongs.
     * 
     */
    public String applicationId() {
        return this.applicationId;
    }

    /**
     * ID of the AppConfig Environment.
     * 
     */
    @Import(name="environmentId", required=true)
    private String environmentId;

    /**
     * @return ID of the AppConfig Environment.
     * 
     */
    public String environmentId() {
        return this.environmentId;
    }

    /**
     * Map of tags for the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Map<String,String> tags;

    /**
     * @return Map of tags for the resource.
     * 
     */
    public Optional<Map<String,String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private GetEnvironmentPlainArgs() {}

    private GetEnvironmentPlainArgs(GetEnvironmentPlainArgs $) {
        this.applicationId = $.applicationId;
        this.environmentId = $.environmentId;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEnvironmentPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEnvironmentPlainArgs $;

        public Builder() {
            $ = new GetEnvironmentPlainArgs();
        }

        public Builder(GetEnvironmentPlainArgs defaults) {
            $ = new GetEnvironmentPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationId ID of the AppConfig Application to which this Environment belongs.
         * 
         * @return builder
         * 
         */
        public Builder applicationId(String applicationId) {
            $.applicationId = applicationId;
            return this;
        }

        /**
         * @param environmentId ID of the AppConfig Environment.
         * 
         * @return builder
         * 
         */
        public Builder environmentId(String environmentId) {
            $.environmentId = environmentId;
            return this;
        }

        /**
         * @param tags Map of tags for the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Map<String,String> tags) {
            $.tags = tags;
            return this;
        }

        public GetEnvironmentPlainArgs build() {
            $.applicationId = Objects.requireNonNull($.applicationId, "expected parameter 'applicationId' to be non-null");
            $.environmentId = Objects.requireNonNull($.environmentId, "expected parameter 'environmentId' to be non-null");
            return $;
        }
    }

}
