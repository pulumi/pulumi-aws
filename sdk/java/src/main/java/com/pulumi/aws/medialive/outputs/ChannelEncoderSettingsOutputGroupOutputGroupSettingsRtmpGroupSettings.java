// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.medialive.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ChannelEncoderSettingsOutputGroupOutputGroupSettingsRtmpGroupSettings {
    /**
     * @return The ad marker type for this output group.
     * 
     */
    private @Nullable List<String> adMarkers;
    /**
     * @return Authentication scheme to use when connecting with CDN.
     * 
     */
    private @Nullable String authenticationScheme;
    /**
     * @return Controls behavior when content cache fills up.
     * 
     */
    private @Nullable String cacheFullBehavior;
    /**
     * @return Cache length in seconds, is used to calculate buffer size.
     * 
     */
    private @Nullable Integer cacheLength;
    /**
     * @return Controls the types of data that passes to onCaptionInfo outputs.
     * 
     */
    private @Nullable String captionData;
    /**
     * @return Specifies behavior of last resort when input video os lost.
     * 
     */
    private @Nullable String inputLossAction;
    /**
     * @return Number of seconds to wait until a restart is initiated.
     * 
     */
    private @Nullable Integer restartDelay;

    private ChannelEncoderSettingsOutputGroupOutputGroupSettingsRtmpGroupSettings() {}
    /**
     * @return The ad marker type for this output group.
     * 
     */
    public List<String> adMarkers() {
        return this.adMarkers == null ? List.of() : this.adMarkers;
    }
    /**
     * @return Authentication scheme to use when connecting with CDN.
     * 
     */
    public Optional<String> authenticationScheme() {
        return Optional.ofNullable(this.authenticationScheme);
    }
    /**
     * @return Controls behavior when content cache fills up.
     * 
     */
    public Optional<String> cacheFullBehavior() {
        return Optional.ofNullable(this.cacheFullBehavior);
    }
    /**
     * @return Cache length in seconds, is used to calculate buffer size.
     * 
     */
    public Optional<Integer> cacheLength() {
        return Optional.ofNullable(this.cacheLength);
    }
    /**
     * @return Controls the types of data that passes to onCaptionInfo outputs.
     * 
     */
    public Optional<String> captionData() {
        return Optional.ofNullable(this.captionData);
    }
    /**
     * @return Specifies behavior of last resort when input video os lost.
     * 
     */
    public Optional<String> inputLossAction() {
        return Optional.ofNullable(this.inputLossAction);
    }
    /**
     * @return Number of seconds to wait until a restart is initiated.
     * 
     */
    public Optional<Integer> restartDelay() {
        return Optional.ofNullable(this.restartDelay);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ChannelEncoderSettingsOutputGroupOutputGroupSettingsRtmpGroupSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> adMarkers;
        private @Nullable String authenticationScheme;
        private @Nullable String cacheFullBehavior;
        private @Nullable Integer cacheLength;
        private @Nullable String captionData;
        private @Nullable String inputLossAction;
        private @Nullable Integer restartDelay;
        public Builder() {}
        public Builder(ChannelEncoderSettingsOutputGroupOutputGroupSettingsRtmpGroupSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adMarkers = defaults.adMarkers;
    	      this.authenticationScheme = defaults.authenticationScheme;
    	      this.cacheFullBehavior = defaults.cacheFullBehavior;
    	      this.cacheLength = defaults.cacheLength;
    	      this.captionData = defaults.captionData;
    	      this.inputLossAction = defaults.inputLossAction;
    	      this.restartDelay = defaults.restartDelay;
        }

        @CustomType.Setter
        public Builder adMarkers(@Nullable List<String> adMarkers) {
            this.adMarkers = adMarkers;
            return this;
        }
        public Builder adMarkers(String... adMarkers) {
            return adMarkers(List.of(adMarkers));
        }
        @CustomType.Setter
        public Builder authenticationScheme(@Nullable String authenticationScheme) {
            this.authenticationScheme = authenticationScheme;
            return this;
        }
        @CustomType.Setter
        public Builder cacheFullBehavior(@Nullable String cacheFullBehavior) {
            this.cacheFullBehavior = cacheFullBehavior;
            return this;
        }
        @CustomType.Setter
        public Builder cacheLength(@Nullable Integer cacheLength) {
            this.cacheLength = cacheLength;
            return this;
        }
        @CustomType.Setter
        public Builder captionData(@Nullable String captionData) {
            this.captionData = captionData;
            return this;
        }
        @CustomType.Setter
        public Builder inputLossAction(@Nullable String inputLossAction) {
            this.inputLossAction = inputLossAction;
            return this;
        }
        @CustomType.Setter
        public Builder restartDelay(@Nullable Integer restartDelay) {
            this.restartDelay = restartDelay;
            return this;
        }
        public ChannelEncoderSettingsOutputGroupOutputGroupSettingsRtmpGroupSettings build() {
            final var o = new ChannelEncoderSettingsOutputGroupOutputGroupSettingsRtmpGroupSettings();
            o.adMarkers = adMarkers;
            o.authenticationScheme = authenticationScheme;
            o.cacheFullBehavior = cacheFullBehavior;
            o.cacheLength = cacheLength;
            o.captionData = captionData;
            o.inputLossAction = inputLossAction;
            o.restartDelay = restartDelay;
            return o;
        }
    }
}
