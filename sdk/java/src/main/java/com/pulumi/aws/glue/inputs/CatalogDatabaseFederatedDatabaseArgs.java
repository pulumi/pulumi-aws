// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.glue.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CatalogDatabaseFederatedDatabaseArgs extends com.pulumi.resources.ResourceArgs {

    public static final CatalogDatabaseFederatedDatabaseArgs Empty = new CatalogDatabaseFederatedDatabaseArgs();

    /**
     * Name of the connection to the external metastore.
     * 
     */
    @Import(name="connectionName")
    private @Nullable Output<String> connectionName;

    /**
     * @return Name of the connection to the external metastore.
     * 
     */
    public Optional<Output<String>> connectionName() {
        return Optional.ofNullable(this.connectionName);
    }

    /**
     * Unique identifier for the federated database.
     * 
     */
    @Import(name="identifier")
    private @Nullable Output<String> identifier;

    /**
     * @return Unique identifier for the federated database.
     * 
     */
    public Optional<Output<String>> identifier() {
        return Optional.ofNullable(this.identifier);
    }

    private CatalogDatabaseFederatedDatabaseArgs() {}

    private CatalogDatabaseFederatedDatabaseArgs(CatalogDatabaseFederatedDatabaseArgs $) {
        this.connectionName = $.connectionName;
        this.identifier = $.identifier;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CatalogDatabaseFederatedDatabaseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CatalogDatabaseFederatedDatabaseArgs $;

        public Builder() {
            $ = new CatalogDatabaseFederatedDatabaseArgs();
        }

        public Builder(CatalogDatabaseFederatedDatabaseArgs defaults) {
            $ = new CatalogDatabaseFederatedDatabaseArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectionName Name of the connection to the external metastore.
         * 
         * @return builder
         * 
         */
        public Builder connectionName(@Nullable Output<String> connectionName) {
            $.connectionName = connectionName;
            return this;
        }

        /**
         * @param connectionName Name of the connection to the external metastore.
         * 
         * @return builder
         * 
         */
        public Builder connectionName(String connectionName) {
            return connectionName(Output.of(connectionName));
        }

        /**
         * @param identifier Unique identifier for the federated database.
         * 
         * @return builder
         * 
         */
        public Builder identifier(@Nullable Output<String> identifier) {
            $.identifier = identifier;
            return this;
        }

        /**
         * @param identifier Unique identifier for the federated database.
         * 
         * @return builder
         * 
         */
        public Builder identifier(String identifier) {
            return identifier(Output.of(identifier));
        }

        public CatalogDatabaseFederatedDatabaseArgs build() {
            return $;
        }
    }

}
