// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.ColumnHierarchiesExplicitHierarchyColumnArgs;
import com.pulumi.aws.quicksight.inputs.DrillDownFiltersArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ColumnHierarchiesExplicitHierarchyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ColumnHierarchiesExplicitHierarchyArgs Empty = new ColumnHierarchiesExplicitHierarchyArgs();

    @Import(name="columns", required=true)
    private Output<List<ColumnHierarchiesExplicitHierarchyColumnArgs>> columns;

    public Output<List<ColumnHierarchiesExplicitHierarchyColumnArgs>> columns() {
        return this.columns;
    }

    @Import(name="drillDownFilters")
    private @Nullable Output<List<DrillDownFiltersArgs>> drillDownFilters;

    public Optional<Output<List<DrillDownFiltersArgs>>> drillDownFilters() {
        return Optional.ofNullable(this.drillDownFilters);
    }

    @Import(name="hierarchyId", required=true)
    private Output<String> hierarchyId;

    public Output<String> hierarchyId() {
        return this.hierarchyId;
    }

    private ColumnHierarchiesExplicitHierarchyArgs() {}

    private ColumnHierarchiesExplicitHierarchyArgs(ColumnHierarchiesExplicitHierarchyArgs $) {
        this.columns = $.columns;
        this.drillDownFilters = $.drillDownFilters;
        this.hierarchyId = $.hierarchyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ColumnHierarchiesExplicitHierarchyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ColumnHierarchiesExplicitHierarchyArgs $;

        public Builder() {
            $ = new ColumnHierarchiesExplicitHierarchyArgs();
        }

        public Builder(ColumnHierarchiesExplicitHierarchyArgs defaults) {
            $ = new ColumnHierarchiesExplicitHierarchyArgs(Objects.requireNonNull(defaults));
        }

        public Builder columns(Output<List<ColumnHierarchiesExplicitHierarchyColumnArgs>> columns) {
            $.columns = columns;
            return this;
        }

        public Builder columns(List<ColumnHierarchiesExplicitHierarchyColumnArgs> columns) {
            return columns(Output.of(columns));
        }

        public Builder columns(ColumnHierarchiesExplicitHierarchyColumnArgs... columns) {
            return columns(List.of(columns));
        }

        public Builder drillDownFilters(@Nullable Output<List<DrillDownFiltersArgs>> drillDownFilters) {
            $.drillDownFilters = drillDownFilters;
            return this;
        }

        public Builder drillDownFilters(List<DrillDownFiltersArgs> drillDownFilters) {
            return drillDownFilters(Output.of(drillDownFilters));
        }

        public Builder drillDownFilters(DrillDownFiltersArgs... drillDownFilters) {
            return drillDownFilters(List.of(drillDownFilters));
        }

        public Builder hierarchyId(Output<String> hierarchyId) {
            $.hierarchyId = hierarchyId;
            return this;
        }

        public Builder hierarchyId(String hierarchyId) {
            return hierarchyId(Output.of(hierarchyId));
        }

        public ColumnHierarchiesExplicitHierarchyArgs build() {
            if ($.columns == null) {
                throw new MissingRequiredPropertyException("ColumnHierarchiesExplicitHierarchyArgs", "columns");
            }
            if ($.hierarchyId == null) {
                throw new MissingRequiredPropertyException("ColumnHierarchiesExplicitHierarchyArgs", "hierarchyId");
            }
            return $;
        }
    }

}
