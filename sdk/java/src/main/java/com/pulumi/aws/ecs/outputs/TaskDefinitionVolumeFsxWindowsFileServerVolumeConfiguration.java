// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecs.outputs;

import com.pulumi.aws.ecs.outputs.TaskDefinitionVolumeFsxWindowsFileServerVolumeConfigurationAuthorizationConfig;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class TaskDefinitionVolumeFsxWindowsFileServerVolumeConfiguration {
    private TaskDefinitionVolumeFsxWindowsFileServerVolumeConfigurationAuthorizationConfig authorizationConfig;
    private String fileSystemId;
    private String rootDirectory;

    private TaskDefinitionVolumeFsxWindowsFileServerVolumeConfiguration() {}
    public TaskDefinitionVolumeFsxWindowsFileServerVolumeConfigurationAuthorizationConfig authorizationConfig() {
        return this.authorizationConfig;
    }
    public String fileSystemId() {
        return this.fileSystemId;
    }
    public String rootDirectory() {
        return this.rootDirectory;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TaskDefinitionVolumeFsxWindowsFileServerVolumeConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private TaskDefinitionVolumeFsxWindowsFileServerVolumeConfigurationAuthorizationConfig authorizationConfig;
        private String fileSystemId;
        private String rootDirectory;
        public Builder() {}
        public Builder(TaskDefinitionVolumeFsxWindowsFileServerVolumeConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizationConfig = defaults.authorizationConfig;
    	      this.fileSystemId = defaults.fileSystemId;
    	      this.rootDirectory = defaults.rootDirectory;
        }

        @CustomType.Setter
        public Builder authorizationConfig(TaskDefinitionVolumeFsxWindowsFileServerVolumeConfigurationAuthorizationConfig authorizationConfig) {
            this.authorizationConfig = Objects.requireNonNull(authorizationConfig);
            return this;
        }
        @CustomType.Setter
        public Builder fileSystemId(String fileSystemId) {
            this.fileSystemId = Objects.requireNonNull(fileSystemId);
            return this;
        }
        @CustomType.Setter
        public Builder rootDirectory(String rootDirectory) {
            this.rootDirectory = Objects.requireNonNull(rootDirectory);
            return this;
        }
        public TaskDefinitionVolumeFsxWindowsFileServerVolumeConfiguration build() {
            final var o = new TaskDefinitionVolumeFsxWindowsFileServerVolumeConfiguration();
            o.authorizationConfig = authorizationConfig;
            o.fileSystemId = fileSystemId;
            o.rootDirectory = rootDirectory;
            return o;
        }
    }
}
