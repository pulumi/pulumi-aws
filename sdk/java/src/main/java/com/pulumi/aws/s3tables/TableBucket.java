// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3tables;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.s3tables.TableBucketArgs;
import com.pulumi.aws.s3tables.inputs.TableBucketState;
import com.pulumi.aws.s3tables.outputs.TableBucketEncryptionConfiguration;
import com.pulumi.aws.s3tables.outputs.TableBucketMaintenanceConfiguration;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for managing an Amazon S3 Tables Table Bucket.
 * 
 * ## Example Usage
 * 
 * ### Basic Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.s3tables.TableBucket;
 * import com.pulumi.aws.s3tables.TableBucketArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new TableBucket("example", TableBucketArgs.builder()
 *             .name("example-bucket")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * Using `pulumi import`, import S3 Tables Table Bucket using the `arn`. For example:
 * 
 * ```sh
 * $ pulumi import aws:s3tables/tableBucket:TableBucket example arn:aws:s3tables:us-west-2:123456789012:bucket/example-bucket
 * ```
 * 
 */
@ResourceType(type="aws:s3tables/tableBucket:TableBucket")
public class TableBucket extends com.pulumi.resources.CustomResource {
    /**
     * ARN of the table bucket.
     * 
     */
    @Export(name="arn", refs={String.class}, tree="[0]")
    private Output<String> arn;

    /**
     * @return ARN of the table bucket.
     * 
     */
    public Output<String> arn() {
        return this.arn;
    }
    /**
     * Date and time when the bucket was created.
     * 
     */
    @Export(name="createdAt", refs={String.class}, tree="[0]")
    private Output<String> createdAt;

    /**
     * @return Date and time when the bucket was created.
     * 
     */
    public Output<String> createdAt() {
        return this.createdAt;
    }
    /**
     * A single table bucket encryption configuration object.
     * See `encryption_configuration` below.
     * 
     */
    @Export(name="encryptionConfiguration", refs={TableBucketEncryptionConfiguration.class}, tree="[0]")
    private Output</* @Nullable */ TableBucketEncryptionConfiguration> encryptionConfiguration;

    /**
     * @return A single table bucket encryption configuration object.
     * See `encryption_configuration` below.
     * 
     */
    public Output<Optional<TableBucketEncryptionConfiguration>> encryptionConfiguration() {
        return Codegen.optional(this.encryptionConfiguration);
    }
    /**
     * Whether all tables and namespaces within the table bucket should be deleted *when the table bucket is destroyed* so that the table bucket can be destroyed without error. These tables and namespaces are *not* recoverable. This only deletes tables and namespaces when the table bucket is destroyed, *not* when setting this parameter to `true`. Once this parameter is set to `true`, there must be a successful `pulumi up` run before a destroy is required to update this value in the resource state. Without a successful `pulumi up` after this parameter is set, this flag will have no effect. If setting this field in the same operation that would require replacing the table bucket or destroying the table bucket, this flag will not work. Additionally when importing a table bucket, a successful `pulumi up` is required to set this value in state before it will take effect on a destroy operation.
     * 
     */
    @Export(name="forceDestroy", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> forceDestroy;

    /**
     * @return Whether all tables and namespaces within the table bucket should be deleted *when the table bucket is destroyed* so that the table bucket can be destroyed without error. These tables and namespaces are *not* recoverable. This only deletes tables and namespaces when the table bucket is destroyed, *not* when setting this parameter to `true`. Once this parameter is set to `true`, there must be a successful `pulumi up` run before a destroy is required to update this value in the resource state. Without a successful `pulumi up` after this parameter is set, this flag will have no effect. If setting this field in the same operation that would require replacing the table bucket or destroying the table bucket, this flag will not work. Additionally when importing a table bucket, a successful `pulumi up` is required to set this value in state before it will take effect on a destroy operation.
     * 
     */
    public Output<Boolean> forceDestroy() {
        return this.forceDestroy;
    }
    /**
     * A single table bucket maintenance configuration object.
     * See `maintenance_configuration` below.
     * 
     */
    @Export(name="maintenanceConfiguration", refs={TableBucketMaintenanceConfiguration.class}, tree="[0]")
    private Output<TableBucketMaintenanceConfiguration> maintenanceConfiguration;

    /**
     * @return A single table bucket maintenance configuration object.
     * See `maintenance_configuration` below.
     * 
     */
    public Output<TableBucketMaintenanceConfiguration> maintenanceConfiguration() {
        return this.maintenanceConfiguration;
    }
    /**
     * Name of the table bucket.
     * Must be between 3 and 63 characters in length.
     * Can consist of lowercase letters, numbers, and hyphens, and must begin and end with a lowercase letter or number.
     * A full list of bucket naming rules can be found in the [S3 Tables documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-tables-buckets-naming.html#table-buckets-naming-rules).
     * 
     * The following arguments are optional:
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the table bucket.
     * Must be between 3 and 63 characters in length.
     * Can consist of lowercase letters, numbers, and hyphens, and must begin and end with a lowercase letter or number.
     * A full list of bucket naming rules can be found in the [S3 Tables documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-tables-buckets-naming.html#table-buckets-naming-rules).
     * 
     * The following arguments are optional:
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Account ID of the account that owns the table bucket.
     * 
     */
    @Export(name="ownerAccountId", refs={String.class}, tree="[0]")
    private Output<String> ownerAccountId;

    /**
     * @return Account ID of the account that owns the table bucket.
     * 
     */
    public Output<String> ownerAccountId() {
        return this.ownerAccountId;
    }
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Output<String> region() {
        return this.region;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public TableBucket(java.lang.String name) {
        this(name, TableBucketArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public TableBucket(java.lang.String name, @Nullable TableBucketArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public TableBucket(java.lang.String name, @Nullable TableBucketArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:s3tables/tableBucket:TableBucket", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private TableBucket(java.lang.String name, Output<java.lang.String> id, @Nullable TableBucketState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:s3tables/tableBucket:TableBucket", name, state, makeResourceOptions(options, id), false);
    }

    private static TableBucketArgs makeArgs(@Nullable TableBucketArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? TableBucketArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static TableBucket get(java.lang.String name, Output<java.lang.String> id, @Nullable TableBucketState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new TableBucket(name, id, state, options);
    }
}
