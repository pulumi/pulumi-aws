// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apigateway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetExportArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetExportArgs Empty = new GetExportArgs();

    @Import(name="accepts")
    private @Nullable Output<String> accepts;

    public Optional<Output<String>> accepts() {
        return Optional.ofNullable(this.accepts);
    }

    @Import(name="exportType", required=true)
    private Output<String> exportType;

    public Output<String> exportType() {
        return this.exportType;
    }

    @Import(name="parameters")
    private @Nullable Output<Map<String,String>> parameters;

    public Optional<Output<Map<String,String>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    @Import(name="restApiId", required=true)
    private Output<String> restApiId;

    public Output<String> restApiId() {
        return this.restApiId;
    }

    @Import(name="stageName", required=true)
    private Output<String> stageName;

    public Output<String> stageName() {
        return this.stageName;
    }

    private GetExportArgs() {}

    private GetExportArgs(GetExportArgs $) {
        this.accepts = $.accepts;
        this.exportType = $.exportType;
        this.parameters = $.parameters;
        this.restApiId = $.restApiId;
        this.stageName = $.stageName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetExportArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetExportArgs $;

        public Builder() {
            $ = new GetExportArgs();
        }

        public Builder(GetExportArgs defaults) {
            $ = new GetExportArgs(Objects.requireNonNull(defaults));
        }

        public Builder accepts(@Nullable Output<String> accepts) {
            $.accepts = accepts;
            return this;
        }

        public Builder accepts(String accepts) {
            return accepts(Output.of(accepts));
        }

        public Builder exportType(Output<String> exportType) {
            $.exportType = exportType;
            return this;
        }

        public Builder exportType(String exportType) {
            return exportType(Output.of(exportType));
        }

        public Builder parameters(@Nullable Output<Map<String,String>> parameters) {
            $.parameters = parameters;
            return this;
        }

        public Builder parameters(Map<String,String> parameters) {
            return parameters(Output.of(parameters));
        }

        public Builder restApiId(Output<String> restApiId) {
            $.restApiId = restApiId;
            return this;
        }

        public Builder restApiId(String restApiId) {
            return restApiId(Output.of(restApiId));
        }

        public Builder stageName(Output<String> stageName) {
            $.stageName = stageName;
            return this;
        }

        public Builder stageName(String stageName) {
            return stageName(Output.of(stageName));
        }

        public GetExportArgs build() {
            $.exportType = Objects.requireNonNull($.exportType, "expected parameter 'exportType' to be non-null");
            $.restApiId = Objects.requireNonNull($.restApiId, "expected parameter 'restApiId' to be non-null");
            $.stageName = Objects.requireNonNull($.stageName, "expected parameter 'stageName' to be non-null");
            return $;
        }
    }

}
