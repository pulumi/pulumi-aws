// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apigateway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AuthorizerArgs extends com.pulumi.resources.ResourceArgs {

    public static final AuthorizerArgs Empty = new AuthorizerArgs();

    @Import(name="authorizerCredentials")
    private @Nullable Output<String> authorizerCredentials;

    public Optional<Output<String>> authorizerCredentials() {
        return Optional.ofNullable(this.authorizerCredentials);
    }

    @Import(name="authorizerResultTtlInSeconds")
    private @Nullable Output<Integer> authorizerResultTtlInSeconds;

    public Optional<Output<Integer>> authorizerResultTtlInSeconds() {
        return Optional.ofNullable(this.authorizerResultTtlInSeconds);
    }

    @Import(name="authorizerUri")
    private @Nullable Output<String> authorizerUri;

    public Optional<Output<String>> authorizerUri() {
        return Optional.ofNullable(this.authorizerUri);
    }

    @Import(name="identitySource")
    private @Nullable Output<String> identitySource;

    public Optional<Output<String>> identitySource() {
        return Optional.ofNullable(this.identitySource);
    }

    @Import(name="identityValidationExpression")
    private @Nullable Output<String> identityValidationExpression;

    public Optional<Output<String>> identityValidationExpression() {
        return Optional.ofNullable(this.identityValidationExpression);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="providerArns")
    private @Nullable Output<List<String>> providerArns;

    public Optional<Output<List<String>>> providerArns() {
        return Optional.ofNullable(this.providerArns);
    }

    @Import(name="restApi", required=true)
    private Output<String> restApi;

    public Output<String> restApi() {
        return this.restApi;
    }

    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private AuthorizerArgs() {}

    private AuthorizerArgs(AuthorizerArgs $) {
        this.authorizerCredentials = $.authorizerCredentials;
        this.authorizerResultTtlInSeconds = $.authorizerResultTtlInSeconds;
        this.authorizerUri = $.authorizerUri;
        this.identitySource = $.identitySource;
        this.identityValidationExpression = $.identityValidationExpression;
        this.name = $.name;
        this.providerArns = $.providerArns;
        this.restApi = $.restApi;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuthorizerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuthorizerArgs $;

        public Builder() {
            $ = new AuthorizerArgs();
        }

        public Builder(AuthorizerArgs defaults) {
            $ = new AuthorizerArgs(Objects.requireNonNull(defaults));
        }

        public Builder authorizerCredentials(@Nullable Output<String> authorizerCredentials) {
            $.authorizerCredentials = authorizerCredentials;
            return this;
        }

        public Builder authorizerCredentials(String authorizerCredentials) {
            return authorizerCredentials(Output.of(authorizerCredentials));
        }

        public Builder authorizerResultTtlInSeconds(@Nullable Output<Integer> authorizerResultTtlInSeconds) {
            $.authorizerResultTtlInSeconds = authorizerResultTtlInSeconds;
            return this;
        }

        public Builder authorizerResultTtlInSeconds(Integer authorizerResultTtlInSeconds) {
            return authorizerResultTtlInSeconds(Output.of(authorizerResultTtlInSeconds));
        }

        public Builder authorizerUri(@Nullable Output<String> authorizerUri) {
            $.authorizerUri = authorizerUri;
            return this;
        }

        public Builder authorizerUri(String authorizerUri) {
            return authorizerUri(Output.of(authorizerUri));
        }

        public Builder identitySource(@Nullable Output<String> identitySource) {
            $.identitySource = identitySource;
            return this;
        }

        public Builder identitySource(String identitySource) {
            return identitySource(Output.of(identitySource));
        }

        public Builder identityValidationExpression(@Nullable Output<String> identityValidationExpression) {
            $.identityValidationExpression = identityValidationExpression;
            return this;
        }

        public Builder identityValidationExpression(String identityValidationExpression) {
            return identityValidationExpression(Output.of(identityValidationExpression));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder providerArns(@Nullable Output<List<String>> providerArns) {
            $.providerArns = providerArns;
            return this;
        }

        public Builder providerArns(List<String> providerArns) {
            return providerArns(Output.of(providerArns));
        }

        public Builder providerArns(String... providerArns) {
            return providerArns(List.of(providerArns));
        }

        public Builder restApi(Output<String> restApi) {
            $.restApi = restApi;
            return this;
        }

        public Builder restApi(String restApi) {
            return restApi(Output.of(restApi));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public AuthorizerArgs build() {
            $.restApi = Objects.requireNonNull($.restApi, "expected parameter 'restApi' to be non-null");
            return $;
        }
    }

}
