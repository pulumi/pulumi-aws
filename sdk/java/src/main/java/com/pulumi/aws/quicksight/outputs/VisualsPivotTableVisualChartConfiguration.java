// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.VisualsPivotTableVisualChartConfigurationFieldOptions;
import com.pulumi.aws.quicksight.outputs.VisualsPivotTableVisualChartConfigurationFieldWells;
import com.pulumi.aws.quicksight.outputs.VisualsPivotTableVisualChartConfigurationPaginatedReportOptions;
import com.pulumi.aws.quicksight.outputs.VisualsPivotTableVisualChartConfigurationSortConfiguration;
import com.pulumi.aws.quicksight.outputs.VisualsPivotTableVisualChartConfigurationTableOptions;
import com.pulumi.aws.quicksight.outputs.VisualsPivotTableVisualChartConfigurationTotalOptions;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VisualsPivotTableVisualChartConfiguration {
    private @Nullable VisualsPivotTableVisualChartConfigurationFieldOptions fieldOptions;
    private @Nullable VisualsPivotTableVisualChartConfigurationFieldWells fieldWells;
    private @Nullable VisualsPivotTableVisualChartConfigurationPaginatedReportOptions paginatedReportOptions;
    private @Nullable VisualsPivotTableVisualChartConfigurationSortConfiguration sortConfiguration;
    private @Nullable VisualsPivotTableVisualChartConfigurationTableOptions tableOptions;
    private @Nullable VisualsPivotTableVisualChartConfigurationTotalOptions totalOptions;

    private VisualsPivotTableVisualChartConfiguration() {}
    public Optional<VisualsPivotTableVisualChartConfigurationFieldOptions> fieldOptions() {
        return Optional.ofNullable(this.fieldOptions);
    }
    public Optional<VisualsPivotTableVisualChartConfigurationFieldWells> fieldWells() {
        return Optional.ofNullable(this.fieldWells);
    }
    public Optional<VisualsPivotTableVisualChartConfigurationPaginatedReportOptions> paginatedReportOptions() {
        return Optional.ofNullable(this.paginatedReportOptions);
    }
    public Optional<VisualsPivotTableVisualChartConfigurationSortConfiguration> sortConfiguration() {
        return Optional.ofNullable(this.sortConfiguration);
    }
    public Optional<VisualsPivotTableVisualChartConfigurationTableOptions> tableOptions() {
        return Optional.ofNullable(this.tableOptions);
    }
    public Optional<VisualsPivotTableVisualChartConfigurationTotalOptions> totalOptions() {
        return Optional.ofNullable(this.totalOptions);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VisualsPivotTableVisualChartConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable VisualsPivotTableVisualChartConfigurationFieldOptions fieldOptions;
        private @Nullable VisualsPivotTableVisualChartConfigurationFieldWells fieldWells;
        private @Nullable VisualsPivotTableVisualChartConfigurationPaginatedReportOptions paginatedReportOptions;
        private @Nullable VisualsPivotTableVisualChartConfigurationSortConfiguration sortConfiguration;
        private @Nullable VisualsPivotTableVisualChartConfigurationTableOptions tableOptions;
        private @Nullable VisualsPivotTableVisualChartConfigurationTotalOptions totalOptions;
        public Builder() {}
        public Builder(VisualsPivotTableVisualChartConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fieldOptions = defaults.fieldOptions;
    	      this.fieldWells = defaults.fieldWells;
    	      this.paginatedReportOptions = defaults.paginatedReportOptions;
    	      this.sortConfiguration = defaults.sortConfiguration;
    	      this.tableOptions = defaults.tableOptions;
    	      this.totalOptions = defaults.totalOptions;
        }

        @CustomType.Setter
        public Builder fieldOptions(@Nullable VisualsPivotTableVisualChartConfigurationFieldOptions fieldOptions) {

            this.fieldOptions = fieldOptions;
            return this;
        }
        @CustomType.Setter
        public Builder fieldWells(@Nullable VisualsPivotTableVisualChartConfigurationFieldWells fieldWells) {

            this.fieldWells = fieldWells;
            return this;
        }
        @CustomType.Setter
        public Builder paginatedReportOptions(@Nullable VisualsPivotTableVisualChartConfigurationPaginatedReportOptions paginatedReportOptions) {

            this.paginatedReportOptions = paginatedReportOptions;
            return this;
        }
        @CustomType.Setter
        public Builder sortConfiguration(@Nullable VisualsPivotTableVisualChartConfigurationSortConfiguration sortConfiguration) {

            this.sortConfiguration = sortConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder tableOptions(@Nullable VisualsPivotTableVisualChartConfigurationTableOptions tableOptions) {

            this.tableOptions = tableOptions;
            return this;
        }
        @CustomType.Setter
        public Builder totalOptions(@Nullable VisualsPivotTableVisualChartConfigurationTotalOptions totalOptions) {

            this.totalOptions = totalOptions;
            return this;
        }
        public VisualsPivotTableVisualChartConfiguration build() {
            final var _resultValue = new VisualsPivotTableVisualChartConfiguration();
            _resultValue.fieldOptions = fieldOptions;
            _resultValue.fieldWells = fieldWells;
            _resultValue.paginatedReportOptions = paginatedReportOptions;
            _resultValue.sortConfiguration = sortConfiguration;
            _resultValue.tableOptions = tableOptions;
            _resultValue.totalOptions = totalOptions;
            return _resultValue;
        }
    }
}
