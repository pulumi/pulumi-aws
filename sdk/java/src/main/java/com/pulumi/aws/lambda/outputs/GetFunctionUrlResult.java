// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lambda.outputs;

import com.pulumi.aws.lambda.outputs.GetFunctionUrlCor;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetFunctionUrlResult {
    /**
     * @return Type of authentication that the function URL uses.
     * 
     */
    private @Nullable String authorizationType;
    /**
     * @return The [cross-origin resource sharing (CORS)](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) settings for the function URL. See the `aws.lambda.FunctionUrl` resource documentation for more details.
     * 
     */
    private @Nullable List<GetFunctionUrlCor> cors;
    /**
     * @return When the function URL was created, in [ISO-8601 format](https://www.w3.org/TR/NOTE-datetime).
     * 
     */
    private @Nullable String creationTime;
    /**
     * @return ARN of the function.
     * 
     */
    private @Nullable String functionArn;
    private String functionName;
    /**
     * @return HTTP URL endpoint for the function in the format `https://&lt;url_id&gt;.lambda-url.&lt;region&gt;.on.aws`.
     * 
     */
    private @Nullable String functionUrl;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return Whether the Lambda function responds in `BUFFERED` or `RESPONSE_STREAM` mode.
     * 
     */
    private @Nullable String invokeMode;
    /**
     * @return When the function URL configuration was last updated, in [ISO-8601 format](https://www.w3.org/TR/NOTE-datetime).
     * 
     */
    private @Nullable String lastModifiedTime;
    private @Nullable String qualifier;
    /**
     * @return Generated ID for the endpoint.
     * 
     */
    private @Nullable String urlId;

    private GetFunctionUrlResult() {}
    /**
     * @return Type of authentication that the function URL uses.
     * 
     */
    public Optional<String> authorizationType() {
        return Optional.ofNullable(this.authorizationType);
    }
    /**
     * @return The [cross-origin resource sharing (CORS)](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) settings for the function URL. See the `aws.lambda.FunctionUrl` resource documentation for more details.
     * 
     */
    public List<GetFunctionUrlCor> cors() {
        return this.cors == null ? List.of() : this.cors;
    }
    /**
     * @return When the function URL was created, in [ISO-8601 format](https://www.w3.org/TR/NOTE-datetime).
     * 
     */
    public Optional<String> creationTime() {
        return Optional.ofNullable(this.creationTime);
    }
    /**
     * @return ARN of the function.
     * 
     */
    public Optional<String> functionArn() {
        return Optional.ofNullable(this.functionArn);
    }
    public String functionName() {
        return this.functionName;
    }
    /**
     * @return HTTP URL endpoint for the function in the format `https://&lt;url_id&gt;.lambda-url.&lt;region&gt;.on.aws`.
     * 
     */
    public Optional<String> functionUrl() {
        return Optional.ofNullable(this.functionUrl);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Whether the Lambda function responds in `BUFFERED` or `RESPONSE_STREAM` mode.
     * 
     */
    public Optional<String> invokeMode() {
        return Optional.ofNullable(this.invokeMode);
    }
    /**
     * @return When the function URL configuration was last updated, in [ISO-8601 format](https://www.w3.org/TR/NOTE-datetime).
     * 
     */
    public Optional<String> lastModifiedTime() {
        return Optional.ofNullable(this.lastModifiedTime);
    }
    public Optional<String> qualifier() {
        return Optional.ofNullable(this.qualifier);
    }
    /**
     * @return Generated ID for the endpoint.
     * 
     */
    public Optional<String> urlId() {
        return Optional.ofNullable(this.urlId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFunctionUrlResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String authorizationType;
        private @Nullable List<GetFunctionUrlCor> cors;
        private @Nullable String creationTime;
        private @Nullable String functionArn;
        private String functionName;
        private @Nullable String functionUrl;
        private @Nullable String id;
        private @Nullable String invokeMode;
        private @Nullable String lastModifiedTime;
        private @Nullable String qualifier;
        private @Nullable String urlId;
        public Builder() {}
        public Builder(GetFunctionUrlResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizationType = defaults.authorizationType;
    	      this.cors = defaults.cors;
    	      this.creationTime = defaults.creationTime;
    	      this.functionArn = defaults.functionArn;
    	      this.functionName = defaults.functionName;
    	      this.functionUrl = defaults.functionUrl;
    	      this.id = defaults.id;
    	      this.invokeMode = defaults.invokeMode;
    	      this.lastModifiedTime = defaults.lastModifiedTime;
    	      this.qualifier = defaults.qualifier;
    	      this.urlId = defaults.urlId;
        }

        @CustomType.Setter
        public Builder authorizationType(@Nullable String authorizationType) {
            this.authorizationType = authorizationType;
            return this;
        }
        @CustomType.Setter
        public Builder cors(@Nullable List<GetFunctionUrlCor> cors) {
            this.cors = cors;
            return this;
        }
        public Builder cors(GetFunctionUrlCor... cors) {
            return cors(List.of(cors));
        }
        @CustomType.Setter
        public Builder creationTime(@Nullable String creationTime) {
            this.creationTime = creationTime;
            return this;
        }
        @CustomType.Setter
        public Builder functionArn(@Nullable String functionArn) {
            this.functionArn = functionArn;
            return this;
        }
        @CustomType.Setter
        public Builder functionName(String functionName) {
            this.functionName = Objects.requireNonNull(functionName);
            return this;
        }
        @CustomType.Setter
        public Builder functionUrl(@Nullable String functionUrl) {
            this.functionUrl = functionUrl;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder invokeMode(@Nullable String invokeMode) {
            this.invokeMode = invokeMode;
            return this;
        }
        @CustomType.Setter
        public Builder lastModifiedTime(@Nullable String lastModifiedTime) {
            this.lastModifiedTime = lastModifiedTime;
            return this;
        }
        @CustomType.Setter
        public Builder qualifier(@Nullable String qualifier) {
            this.qualifier = qualifier;
            return this;
        }
        @CustomType.Setter
        public Builder urlId(@Nullable String urlId) {
            this.urlId = urlId;
            return this;
        }
        public GetFunctionUrlResult build() {
            final var o = new GetFunctionUrlResult();
            o.authorizationType = authorizationType;
            o.cors = cors;
            o.creationTime = creationTime;
            o.functionArn = functionArn;
            o.functionName = functionName;
            o.functionUrl = functionUrl;
            o.id = id;
            o.invokeMode = invokeMode;
            o.lastModifiedTime = lastModifiedTime;
            o.qualifier = qualifier;
            o.urlId = urlId;
            return o;
        }
    }
}
