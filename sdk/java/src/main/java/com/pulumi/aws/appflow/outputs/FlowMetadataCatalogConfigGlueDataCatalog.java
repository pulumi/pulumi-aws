// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appflow.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class FlowMetadataCatalogConfigGlueDataCatalog {
    /**
     * @return The name of an existing Glue database to store the metadata tables that Amazon AppFlow creates.
     * 
     */
    private String databaseName;
    /**
     * @return The ARN of an IAM role that grants AppFlow the permissions it needs to create Data Catalog tables, databases, and partitions.
     * 
     */
    private String roleArn;
    /**
     * @return A naming prefix for each Data Catalog table that Amazon AppFlow creates
     * 
     */
    private String tablePrefix;

    private FlowMetadataCatalogConfigGlueDataCatalog() {}
    /**
     * @return The name of an existing Glue database to store the metadata tables that Amazon AppFlow creates.
     * 
     */
    public String databaseName() {
        return this.databaseName;
    }
    /**
     * @return The ARN of an IAM role that grants AppFlow the permissions it needs to create Data Catalog tables, databases, and partitions.
     * 
     */
    public String roleArn() {
        return this.roleArn;
    }
    /**
     * @return A naming prefix for each Data Catalog table that Amazon AppFlow creates
     * 
     */
    public String tablePrefix() {
        return this.tablePrefix;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlowMetadataCatalogConfigGlueDataCatalog defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String databaseName;
        private String roleArn;
        private String tablePrefix;
        public Builder() {}
        public Builder(FlowMetadataCatalogConfigGlueDataCatalog defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.databaseName = defaults.databaseName;
    	      this.roleArn = defaults.roleArn;
    	      this.tablePrefix = defaults.tablePrefix;
        }

        @CustomType.Setter
        public Builder databaseName(String databaseName) {
            if (databaseName == null) {
              throw new MissingRequiredPropertyException("FlowMetadataCatalogConfigGlueDataCatalog", "databaseName");
            }
            this.databaseName = databaseName;
            return this;
        }
        @CustomType.Setter
        public Builder roleArn(String roleArn) {
            if (roleArn == null) {
              throw new MissingRequiredPropertyException("FlowMetadataCatalogConfigGlueDataCatalog", "roleArn");
            }
            this.roleArn = roleArn;
            return this;
        }
        @CustomType.Setter
        public Builder tablePrefix(String tablePrefix) {
            if (tablePrefix == null) {
              throw new MissingRequiredPropertyException("FlowMetadataCatalogConfigGlueDataCatalog", "tablePrefix");
            }
            this.tablePrefix = tablePrefix;
            return this;
        }
        public FlowMetadataCatalogConfigGlueDataCatalog build() {
            final var _resultValue = new FlowMetadataCatalogConfigGlueDataCatalog();
            _resultValue.databaseName = databaseName;
            _resultValue.roleArn = roleArn;
            _resultValue.tablePrefix = tablePrefix;
            return _resultValue;
        }
    }
}
