// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lambda.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EventSourceMappingScalingConfig {
    /**
     * @return Limits the number of concurrent instances that the Amazon SQS event source can invoke. Must be between `2` and `1000`. See [Configuring maximum concurrency for Amazon SQS event sources](https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html#events-sqs-max-concurrency).
     * 
     */
    private @Nullable Integer maximumConcurrency;

    private EventSourceMappingScalingConfig() {}
    /**
     * @return Limits the number of concurrent instances that the Amazon SQS event source can invoke. Must be between `2` and `1000`. See [Configuring maximum concurrency for Amazon SQS event sources](https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html#events-sqs-max-concurrency).
     * 
     */
    public Optional<Integer> maximumConcurrency() {
        return Optional.ofNullable(this.maximumConcurrency);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EventSourceMappingScalingConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer maximumConcurrency;
        public Builder() {}
        public Builder(EventSourceMappingScalingConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maximumConcurrency = defaults.maximumConcurrency;
        }

        @CustomType.Setter
        public Builder maximumConcurrency(@Nullable Integer maximumConcurrency) {
            this.maximumConcurrency = maximumConcurrency;
            return this;
        }
        public EventSourceMappingScalingConfig build() {
            final var _resultValue = new EventSourceMappingScalingConfig();
            _resultValue.maximumConcurrency = maximumConcurrency;
            return _resultValue;
        }
    }
}
