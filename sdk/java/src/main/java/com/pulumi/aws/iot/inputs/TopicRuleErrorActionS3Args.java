// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iot.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TopicRuleErrorActionS3Args extends com.pulumi.resources.ResourceArgs {

    public static final TopicRuleErrorActionS3Args Empty = new TopicRuleErrorActionS3Args();

    /**
     * The Amazon S3 bucket name.
     * 
     */
    @Import(name="bucketName", required=true)
    private Output<String> bucketName;

    /**
     * @return The Amazon S3 bucket name.
     * 
     */
    public Output<String> bucketName() {
        return this.bucketName;
    }

    /**
     * The Amazon S3 canned ACL that controls access to the object identified by the object key. [Valid values](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl).
     * 
     */
    @Import(name="cannedAcl")
    private @Nullable Output<String> cannedAcl;

    /**
     * @return The Amazon S3 canned ACL that controls access to the object identified by the object key. [Valid values](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl).
     * 
     */
    public Optional<Output<String>> cannedAcl() {
        return Optional.ofNullable(this.cannedAcl);
    }

    /**
     * The object key.
     * 
     */
    @Import(name="key", required=true)
    private Output<String> key;

    /**
     * @return The object key.
     * 
     */
    public Output<String> key() {
        return this.key;
    }

    /**
     * The ARN of the IAM role that grants access.
     * 
     */
    @Import(name="roleArn", required=true)
    private Output<String> roleArn;

    /**
     * @return The ARN of the IAM role that grants access.
     * 
     */
    public Output<String> roleArn() {
        return this.roleArn;
    }

    private TopicRuleErrorActionS3Args() {}

    private TopicRuleErrorActionS3Args(TopicRuleErrorActionS3Args $) {
        this.bucketName = $.bucketName;
        this.cannedAcl = $.cannedAcl;
        this.key = $.key;
        this.roleArn = $.roleArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TopicRuleErrorActionS3Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TopicRuleErrorActionS3Args $;

        public Builder() {
            $ = new TopicRuleErrorActionS3Args();
        }

        public Builder(TopicRuleErrorActionS3Args defaults) {
            $ = new TopicRuleErrorActionS3Args(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucketName The Amazon S3 bucket name.
         * 
         * @return builder
         * 
         */
        public Builder bucketName(Output<String> bucketName) {
            $.bucketName = bucketName;
            return this;
        }

        /**
         * @param bucketName The Amazon S3 bucket name.
         * 
         * @return builder
         * 
         */
        public Builder bucketName(String bucketName) {
            return bucketName(Output.of(bucketName));
        }

        /**
         * @param cannedAcl The Amazon S3 canned ACL that controls access to the object identified by the object key. [Valid values](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl).
         * 
         * @return builder
         * 
         */
        public Builder cannedAcl(@Nullable Output<String> cannedAcl) {
            $.cannedAcl = cannedAcl;
            return this;
        }

        /**
         * @param cannedAcl The Amazon S3 canned ACL that controls access to the object identified by the object key. [Valid values](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl).
         * 
         * @return builder
         * 
         */
        public Builder cannedAcl(String cannedAcl) {
            return cannedAcl(Output.of(cannedAcl));
        }

        /**
         * @param key The object key.
         * 
         * @return builder
         * 
         */
        public Builder key(Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key The object key.
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param roleArn The ARN of the IAM role that grants access.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn The ARN of the IAM role that grants access.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public TopicRuleErrorActionS3Args build() {
            if ($.bucketName == null) {
                throw new MissingRequiredPropertyException("TopicRuleErrorActionS3Args", "bucketName");
            }
            if ($.key == null) {
                throw new MissingRequiredPropertyException("TopicRuleErrorActionS3Args", "key");
            }
            if ($.roleArn == null) {
                throw new MissingRequiredPropertyException("TopicRuleErrorActionS3Args", "roleArn");
            }
            return $;
        }
    }

}
