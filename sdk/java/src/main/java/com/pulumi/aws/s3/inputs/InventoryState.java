// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3.inputs;

import com.pulumi.aws.s3.inputs.InventoryDestinationArgs;
import com.pulumi.aws.s3.inputs.InventoryFilterArgs;
import com.pulumi.aws.s3.inputs.InventoryScheduleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InventoryState extends com.pulumi.resources.ResourceArgs {

    public static final InventoryState Empty = new InventoryState();

    @Import(name="bucket")
    private @Nullable Output<String> bucket;

    public Optional<Output<String>> bucket() {
        return Optional.ofNullable(this.bucket);
    }

    @Import(name="destination")
    private @Nullable Output<InventoryDestinationArgs> destination;

    public Optional<Output<InventoryDestinationArgs>> destination() {
        return Optional.ofNullable(this.destination);
    }

    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    @Import(name="filter")
    private @Nullable Output<InventoryFilterArgs> filter;

    public Optional<Output<InventoryFilterArgs>> filter() {
        return Optional.ofNullable(this.filter);
    }

    @Import(name="includedObjectVersions")
    private @Nullable Output<String> includedObjectVersions;

    public Optional<Output<String>> includedObjectVersions() {
        return Optional.ofNullable(this.includedObjectVersions);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="optionalFields")
    private @Nullable Output<List<String>> optionalFields;

    public Optional<Output<List<String>>> optionalFields() {
        return Optional.ofNullable(this.optionalFields);
    }

    @Import(name="schedule")
    private @Nullable Output<InventoryScheduleArgs> schedule;

    public Optional<Output<InventoryScheduleArgs>> schedule() {
        return Optional.ofNullable(this.schedule);
    }

    private InventoryState() {}

    private InventoryState(InventoryState $) {
        this.bucket = $.bucket;
        this.destination = $.destination;
        this.enabled = $.enabled;
        this.filter = $.filter;
        this.includedObjectVersions = $.includedObjectVersions;
        this.name = $.name;
        this.optionalFields = $.optionalFields;
        this.schedule = $.schedule;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InventoryState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InventoryState $;

        public Builder() {
            $ = new InventoryState();
        }

        public Builder(InventoryState defaults) {
            $ = new InventoryState(Objects.requireNonNull(defaults));
        }

        public Builder bucket(@Nullable Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        public Builder destination(@Nullable Output<InventoryDestinationArgs> destination) {
            $.destination = destination;
            return this;
        }

        public Builder destination(InventoryDestinationArgs destination) {
            return destination(Output.of(destination));
        }

        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder filter(@Nullable Output<InventoryFilterArgs> filter) {
            $.filter = filter;
            return this;
        }

        public Builder filter(InventoryFilterArgs filter) {
            return filter(Output.of(filter));
        }

        public Builder includedObjectVersions(@Nullable Output<String> includedObjectVersions) {
            $.includedObjectVersions = includedObjectVersions;
            return this;
        }

        public Builder includedObjectVersions(String includedObjectVersions) {
            return includedObjectVersions(Output.of(includedObjectVersions));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder optionalFields(@Nullable Output<List<String>> optionalFields) {
            $.optionalFields = optionalFields;
            return this;
        }

        public Builder optionalFields(List<String> optionalFields) {
            return optionalFields(Output.of(optionalFields));
        }

        public Builder optionalFields(String... optionalFields) {
            return optionalFields(List.of(optionalFields));
        }

        public Builder schedule(@Nullable Output<InventoryScheduleArgs> schedule) {
            $.schedule = schedule;
            return this;
        }

        public Builder schedule(InventoryScheduleArgs schedule) {
            return schedule(Output.of(schedule));
        }

        public InventoryState build() {
            return $;
        }
    }

}
