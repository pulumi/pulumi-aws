// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lakeformation;

import com.pulumi.aws.lakeformation.inputs.DataCellsFilterTableDataArgs;
import com.pulumi.aws.lakeformation.inputs.DataCellsFilterTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataCellsFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataCellsFilterArgs Empty = new DataCellsFilterArgs();

    /**
     * The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Information about the data cells filter. See Table Data below for details.
     * 
     */
    @Import(name="tableData")
    private @Nullable Output<DataCellsFilterTableDataArgs> tableData;

    /**
     * @return Information about the data cells filter. See Table Data below for details.
     * 
     */
    public Optional<Output<DataCellsFilterTableDataArgs>> tableData() {
        return Optional.ofNullable(this.tableData);
    }

    @Import(name="timeouts")
    private @Nullable Output<DataCellsFilterTimeoutsArgs> timeouts;

    public Optional<Output<DataCellsFilterTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private DataCellsFilterArgs() {}

    private DataCellsFilterArgs(DataCellsFilterArgs $) {
        this.region = $.region;
        this.tableData = $.tableData;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataCellsFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataCellsFilterArgs $;

        public Builder() {
            $ = new DataCellsFilterArgs();
        }

        public Builder(DataCellsFilterArgs defaults) {
            $ = new DataCellsFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param region The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param tableData Information about the data cells filter. See Table Data below for details.
         * 
         * @return builder
         * 
         */
        public Builder tableData(@Nullable Output<DataCellsFilterTableDataArgs> tableData) {
            $.tableData = tableData;
            return this;
        }

        /**
         * @param tableData Information about the data cells filter. See Table Data below for details.
         * 
         * @return builder
         * 
         */
        public Builder tableData(DataCellsFilterTableDataArgs tableData) {
            return tableData(Output.of(tableData));
        }

        public Builder timeouts(@Nullable Output<DataCellsFilterTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(DataCellsFilterTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public DataCellsFilterArgs build() {
            return $;
        }
    }

}
