// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lambda.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class CodeSigningConfigAllowedPublishersArgs extends com.pulumi.resources.ResourceArgs {

    public static final CodeSigningConfigAllowedPublishersArgs Empty = new CodeSigningConfigAllowedPublishersArgs();

    /**
     * Set of ARNs for each of the signing profiles. A signing profile defines a trusted user who can sign a code package. Maximum of 20 signing profiles.
     * 
     */
    @Import(name="signingProfileVersionArns", required=true)
    private Output<List<String>> signingProfileVersionArns;

    /**
     * @return Set of ARNs for each of the signing profiles. A signing profile defines a trusted user who can sign a code package. Maximum of 20 signing profiles.
     * 
     */
    public Output<List<String>> signingProfileVersionArns() {
        return this.signingProfileVersionArns;
    }

    private CodeSigningConfigAllowedPublishersArgs() {}

    private CodeSigningConfigAllowedPublishersArgs(CodeSigningConfigAllowedPublishersArgs $) {
        this.signingProfileVersionArns = $.signingProfileVersionArns;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CodeSigningConfigAllowedPublishersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CodeSigningConfigAllowedPublishersArgs $;

        public Builder() {
            $ = new CodeSigningConfigAllowedPublishersArgs();
        }

        public Builder(CodeSigningConfigAllowedPublishersArgs defaults) {
            $ = new CodeSigningConfigAllowedPublishersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param signingProfileVersionArns Set of ARNs for each of the signing profiles. A signing profile defines a trusted user who can sign a code package. Maximum of 20 signing profiles.
         * 
         * @return builder
         * 
         */
        public Builder signingProfileVersionArns(Output<List<String>> signingProfileVersionArns) {
            $.signingProfileVersionArns = signingProfileVersionArns;
            return this;
        }

        /**
         * @param signingProfileVersionArns Set of ARNs for each of the signing profiles. A signing profile defines a trusted user who can sign a code package. Maximum of 20 signing profiles.
         * 
         * @return builder
         * 
         */
        public Builder signingProfileVersionArns(List<String> signingProfileVersionArns) {
            return signingProfileVersionArns(Output.of(signingProfileVersionArns));
        }

        /**
         * @param signingProfileVersionArns Set of ARNs for each of the signing profiles. A signing profile defines a trusted user who can sign a code package. Maximum of 20 signing profiles.
         * 
         * @return builder
         * 
         */
        public Builder signingProfileVersionArns(String... signingProfileVersionArns) {
            return signingProfileVersionArns(List.of(signingProfileVersionArns));
        }

        public CodeSigningConfigAllowedPublishersArgs build() {
            if ($.signingProfileVersionArns == null) {
                throw new MissingRequiredPropertyException("CodeSigningConfigAllowedPublishersArgs", "signingProfileVersionArns");
            }
            return $;
        }
    }

}
