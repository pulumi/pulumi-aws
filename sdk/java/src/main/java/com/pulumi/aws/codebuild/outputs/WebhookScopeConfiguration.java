// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codebuild.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WebhookScopeConfiguration {
    /**
     * @return The domain of the GitHub Enterprise organization. Required if your project&#39;s source type is GITHUB_ENTERPRISE.
     * 
     */
    private @Nullable String domain;
    /**
     * @return The name of either the enterprise or organization.
     * 
     */
    private String name;
    /**
     * @return The type of scope for a GitHub webhook. Valid values for this parameter are: `GITHUB_ORGANIZATION`, `GITHUB_GLOBAL`.
     * 
     */
    private String scope;

    private WebhookScopeConfiguration() {}
    /**
     * @return The domain of the GitHub Enterprise organization. Required if your project&#39;s source type is GITHUB_ENTERPRISE.
     * 
     */
    public Optional<String> domain() {
        return Optional.ofNullable(this.domain);
    }
    /**
     * @return The name of either the enterprise or organization.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The type of scope for a GitHub webhook. Valid values for this parameter are: `GITHUB_ORGANIZATION`, `GITHUB_GLOBAL`.
     * 
     */
    public String scope() {
        return this.scope;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebhookScopeConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String domain;
        private String name;
        private String scope;
        public Builder() {}
        public Builder(WebhookScopeConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domain = defaults.domain;
    	      this.name = defaults.name;
    	      this.scope = defaults.scope;
        }

        @CustomType.Setter
        public Builder domain(@Nullable String domain) {

            this.domain = domain;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("WebhookScopeConfiguration", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder scope(String scope) {
            if (scope == null) {
              throw new MissingRequiredPropertyException("WebhookScopeConfiguration", "scope");
            }
            this.scope = scope;
            return this;
        }
        public WebhookScopeConfiguration build() {
            final var _resultValue = new WebhookScopeConfiguration();
            _resultValue.domain = domain;
            _resultValue.name = name;
            _resultValue.scope = scope;
            return _resultValue;
        }
    }
}
