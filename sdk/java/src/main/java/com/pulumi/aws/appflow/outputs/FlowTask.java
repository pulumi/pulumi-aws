// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appflow.outputs;

import com.pulumi.aws.appflow.outputs.FlowTaskConnectorOperator;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FlowTask {
    /**
     * @return Operation to be performed on the provided source fields. See Connector Operator for details.
     * 
     */
    private @Nullable List<FlowTaskConnectorOperator> connectorOperators;
    /**
     * @return Field in a destination connector, or a field value against which Amazon AppFlow validates a source field.
     * 
     */
    private @Nullable String destinationField;
    /**
     * @return Source fields to which a particular task is applied.
     * 
     */
    private List<String> sourceFields;
    /**
     * @return Map used to store task-related information. The execution service looks for particular information based on the `TaskType`. Valid keys are `VALUE`, `VALUES`, `DATA_TYPE`, `UPPER_BOUND`, `LOWER_BOUND`, `SOURCE_DATA_TYPE`, `DESTINATION_DATA_TYPE`, `VALIDATION_ACTION`, `MASK_VALUE`, `MASK_LENGTH`, `TRUNCATE_LENGTH`, `MATH_OPERATION_FIELDS_ORDER`, `CONCAT_FORMAT`, `SUBFIELD_CATEGORY_MAP`, and `EXCLUDE_SOURCE_FIELDS_LIST`.
     * 
     */
    private @Nullable Map<String,String> taskProperties;
    /**
     * @return Particular task implementation that Amazon AppFlow performs. Valid values are `Arithmetic`, `Filter`, `Map`, `Map_all`, `Mask`, `Merge`, `Passthrough`, `Truncate`, and `Validate`.
     * 
     */
    private String taskType;

    private FlowTask() {}
    /**
     * @return Operation to be performed on the provided source fields. See Connector Operator for details.
     * 
     */
    public List<FlowTaskConnectorOperator> connectorOperators() {
        return this.connectorOperators == null ? List.of() : this.connectorOperators;
    }
    /**
     * @return Field in a destination connector, or a field value against which Amazon AppFlow validates a source field.
     * 
     */
    public Optional<String> destinationField() {
        return Optional.ofNullable(this.destinationField);
    }
    /**
     * @return Source fields to which a particular task is applied.
     * 
     */
    public List<String> sourceFields() {
        return this.sourceFields;
    }
    /**
     * @return Map used to store task-related information. The execution service looks for particular information based on the `TaskType`. Valid keys are `VALUE`, `VALUES`, `DATA_TYPE`, `UPPER_BOUND`, `LOWER_BOUND`, `SOURCE_DATA_TYPE`, `DESTINATION_DATA_TYPE`, `VALIDATION_ACTION`, `MASK_VALUE`, `MASK_LENGTH`, `TRUNCATE_LENGTH`, `MATH_OPERATION_FIELDS_ORDER`, `CONCAT_FORMAT`, `SUBFIELD_CATEGORY_MAP`, and `EXCLUDE_SOURCE_FIELDS_LIST`.
     * 
     */
    public Map<String,String> taskProperties() {
        return this.taskProperties == null ? Map.of() : this.taskProperties;
    }
    /**
     * @return Particular task implementation that Amazon AppFlow performs. Valid values are `Arithmetic`, `Filter`, `Map`, `Map_all`, `Mask`, `Merge`, `Passthrough`, `Truncate`, and `Validate`.
     * 
     */
    public String taskType() {
        return this.taskType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlowTask defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<FlowTaskConnectorOperator> connectorOperators;
        private @Nullable String destinationField;
        private List<String> sourceFields;
        private @Nullable Map<String,String> taskProperties;
        private String taskType;
        public Builder() {}
        public Builder(FlowTask defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectorOperators = defaults.connectorOperators;
    	      this.destinationField = defaults.destinationField;
    	      this.sourceFields = defaults.sourceFields;
    	      this.taskProperties = defaults.taskProperties;
    	      this.taskType = defaults.taskType;
        }

        @CustomType.Setter
        public Builder connectorOperators(@Nullable List<FlowTaskConnectorOperator> connectorOperators) {

            this.connectorOperators = connectorOperators;
            return this;
        }
        public Builder connectorOperators(FlowTaskConnectorOperator... connectorOperators) {
            return connectorOperators(List.of(connectorOperators));
        }
        @CustomType.Setter
        public Builder destinationField(@Nullable String destinationField) {

            this.destinationField = destinationField;
            return this;
        }
        @CustomType.Setter
        public Builder sourceFields(List<String> sourceFields) {
            if (sourceFields == null) {
              throw new MissingRequiredPropertyException("FlowTask", "sourceFields");
            }
            this.sourceFields = sourceFields;
            return this;
        }
        public Builder sourceFields(String... sourceFields) {
            return sourceFields(List.of(sourceFields));
        }
        @CustomType.Setter
        public Builder taskProperties(@Nullable Map<String,String> taskProperties) {

            this.taskProperties = taskProperties;
            return this;
        }
        @CustomType.Setter
        public Builder taskType(String taskType) {
            if (taskType == null) {
              throw new MissingRequiredPropertyException("FlowTask", "taskType");
            }
            this.taskType = taskType;
            return this;
        }
        public FlowTask build() {
            final var _resultValue = new FlowTask();
            _resultValue.connectorOperators = connectorOperators;
            _resultValue.destinationField = destinationField;
            _resultValue.sourceFields = sourceFields;
            _resultValue.taskProperties = taskProperties;
            _resultValue.taskType = taskType;
            return _resultValue;
        }
    }
}
