// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lambda.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class EventSourceMappingMetricsConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final EventSourceMappingMetricsConfigArgs Empty = new EventSourceMappingMetricsConfigArgs();

    /**
     * A list containing the metrics to be produced by the event source mapping. Valid values: `EventCount`.
     * 
     */
    @Import(name="metrics", required=true)
    private Output<List<String>> metrics;

    /**
     * @return A list containing the metrics to be produced by the event source mapping. Valid values: `EventCount`.
     * 
     */
    public Output<List<String>> metrics() {
        return this.metrics;
    }

    private EventSourceMappingMetricsConfigArgs() {}

    private EventSourceMappingMetricsConfigArgs(EventSourceMappingMetricsConfigArgs $) {
        this.metrics = $.metrics;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventSourceMappingMetricsConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventSourceMappingMetricsConfigArgs $;

        public Builder() {
            $ = new EventSourceMappingMetricsConfigArgs();
        }

        public Builder(EventSourceMappingMetricsConfigArgs defaults) {
            $ = new EventSourceMappingMetricsConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param metrics A list containing the metrics to be produced by the event source mapping. Valid values: `EventCount`.
         * 
         * @return builder
         * 
         */
        public Builder metrics(Output<List<String>> metrics) {
            $.metrics = metrics;
            return this;
        }

        /**
         * @param metrics A list containing the metrics to be produced by the event source mapping. Valid values: `EventCount`.
         * 
         * @return builder
         * 
         */
        public Builder metrics(List<String> metrics) {
            return metrics(Output.of(metrics));
        }

        /**
         * @param metrics A list containing the metrics to be produced by the event source mapping. Valid values: `EventCount`.
         * 
         * @return builder
         * 
         */
        public Builder metrics(String... metrics) {
            return metrics(List.of(metrics));
        }

        public EventSourceMappingMetricsConfigArgs build() {
            if ($.metrics == null) {
                throw new MissingRequiredPropertyException("EventSourceMappingMetricsConfigArgs", "metrics");
            }
            return $;
        }
    }

}
