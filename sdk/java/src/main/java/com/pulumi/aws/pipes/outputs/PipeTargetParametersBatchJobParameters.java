// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.pipes.outputs;

import com.pulumi.aws.pipes.outputs.PipeTargetParametersBatchJobParametersArrayProperties;
import com.pulumi.aws.pipes.outputs.PipeTargetParametersBatchJobParametersContainerOverrides;
import com.pulumi.aws.pipes.outputs.PipeTargetParametersBatchJobParametersDependsOn;
import com.pulumi.aws.pipes.outputs.PipeTargetParametersBatchJobParametersRetryStrategy;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PipeTargetParametersBatchJobParameters {
    private @Nullable PipeTargetParametersBatchJobParametersArrayProperties arrayProperties;
    private @Nullable PipeTargetParametersBatchJobParametersContainerOverrides containerOverrides;
    private @Nullable List<PipeTargetParametersBatchJobParametersDependsOn> dependsOns;
    private String jobDefinition;
    private String jobName;
    private @Nullable Map<String,String> parameters;
    private @Nullable PipeTargetParametersBatchJobParametersRetryStrategy retryStrategy;

    private PipeTargetParametersBatchJobParameters() {}
    public Optional<PipeTargetParametersBatchJobParametersArrayProperties> arrayProperties() {
        return Optional.ofNullable(this.arrayProperties);
    }
    public Optional<PipeTargetParametersBatchJobParametersContainerOverrides> containerOverrides() {
        return Optional.ofNullable(this.containerOverrides);
    }
    public List<PipeTargetParametersBatchJobParametersDependsOn> dependsOns() {
        return this.dependsOns == null ? List.of() : this.dependsOns;
    }
    public String jobDefinition() {
        return this.jobDefinition;
    }
    public String jobName() {
        return this.jobName;
    }
    public Map<String,String> parameters() {
        return this.parameters == null ? Map.of() : this.parameters;
    }
    public Optional<PipeTargetParametersBatchJobParametersRetryStrategy> retryStrategy() {
        return Optional.ofNullable(this.retryStrategy);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PipeTargetParametersBatchJobParameters defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable PipeTargetParametersBatchJobParametersArrayProperties arrayProperties;
        private @Nullable PipeTargetParametersBatchJobParametersContainerOverrides containerOverrides;
        private @Nullable List<PipeTargetParametersBatchJobParametersDependsOn> dependsOns;
        private String jobDefinition;
        private String jobName;
        private @Nullable Map<String,String> parameters;
        private @Nullable PipeTargetParametersBatchJobParametersRetryStrategy retryStrategy;
        public Builder() {}
        public Builder(PipeTargetParametersBatchJobParameters defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arrayProperties = defaults.arrayProperties;
    	      this.containerOverrides = defaults.containerOverrides;
    	      this.dependsOns = defaults.dependsOns;
    	      this.jobDefinition = defaults.jobDefinition;
    	      this.jobName = defaults.jobName;
    	      this.parameters = defaults.parameters;
    	      this.retryStrategy = defaults.retryStrategy;
        }

        @CustomType.Setter
        public Builder arrayProperties(@Nullable PipeTargetParametersBatchJobParametersArrayProperties arrayProperties) {

            this.arrayProperties = arrayProperties;
            return this;
        }
        @CustomType.Setter
        public Builder containerOverrides(@Nullable PipeTargetParametersBatchJobParametersContainerOverrides containerOverrides) {

            this.containerOverrides = containerOverrides;
            return this;
        }
        @CustomType.Setter
        public Builder dependsOns(@Nullable List<PipeTargetParametersBatchJobParametersDependsOn> dependsOns) {

            this.dependsOns = dependsOns;
            return this;
        }
        public Builder dependsOns(PipeTargetParametersBatchJobParametersDependsOn... dependsOns) {
            return dependsOns(List.of(dependsOns));
        }
        @CustomType.Setter
        public Builder jobDefinition(String jobDefinition) {
            if (jobDefinition == null) {
              throw new MissingRequiredPropertyException("PipeTargetParametersBatchJobParameters", "jobDefinition");
            }
            this.jobDefinition = jobDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder jobName(String jobName) {
            if (jobName == null) {
              throw new MissingRequiredPropertyException("PipeTargetParametersBatchJobParameters", "jobName");
            }
            this.jobName = jobName;
            return this;
        }
        @CustomType.Setter
        public Builder parameters(@Nullable Map<String,String> parameters) {

            this.parameters = parameters;
            return this;
        }
        @CustomType.Setter
        public Builder retryStrategy(@Nullable PipeTargetParametersBatchJobParametersRetryStrategy retryStrategy) {

            this.retryStrategy = retryStrategy;
            return this;
        }
        public PipeTargetParametersBatchJobParameters build() {
            final var _resultValue = new PipeTargetParametersBatchJobParameters();
            _resultValue.arrayProperties = arrayProperties;
            _resultValue.containerOverrides = containerOverrides;
            _resultValue.dependsOns = dependsOns;
            _resultValue.jobDefinition = jobDefinition;
            _resultValue.jobName = jobName;
            _resultValue.parameters = parameters;
            _resultValue.retryStrategy = retryStrategy;
            return _resultValue;
        }
    }
}
