// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetCapacityBlockOfferingResult {
    /**
     * @return The Availability Zone in which to create the Capacity Reservation.
     * 
     */
    private String availabilityZone;
    /**
     * @return The Capacity Block Reservation ID.
     * 
     */
    private String capacityBlockOfferingId;
    private Integer capacityDurationHours;
    /**
     * @return The currency of the payment for the Capacity Block.
     * 
     */
    private String currencyCode;
    private String endDateRange;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private Integer instanceCount;
    private String instanceType;
    private String startDateRange;
    /**
     * @return Indicates the tenancy of the Capacity Reservation. Specify either `default` or `dedicated`.
     * 
     */
    private String tenancy;
    /**
     * @return The total price to be paid up front.
     * 
     */
    private String upfrontFee;

    private GetCapacityBlockOfferingResult() {}
    /**
     * @return The Availability Zone in which to create the Capacity Reservation.
     * 
     */
    public String availabilityZone() {
        return this.availabilityZone;
    }
    /**
     * @return The Capacity Block Reservation ID.
     * 
     */
    public String capacityBlockOfferingId() {
        return this.capacityBlockOfferingId;
    }
    public Integer capacityDurationHours() {
        return this.capacityDurationHours;
    }
    /**
     * @return The currency of the payment for the Capacity Block.
     * 
     */
    public String currencyCode() {
        return this.currencyCode;
    }
    public String endDateRange() {
        return this.endDateRange;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Integer instanceCount() {
        return this.instanceCount;
    }
    public String instanceType() {
        return this.instanceType;
    }
    public String startDateRange() {
        return this.startDateRange;
    }
    /**
     * @return Indicates the tenancy of the Capacity Reservation. Specify either `default` or `dedicated`.
     * 
     */
    public String tenancy() {
        return this.tenancy;
    }
    /**
     * @return The total price to be paid up front.
     * 
     */
    public String upfrontFee() {
        return this.upfrontFee;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCapacityBlockOfferingResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String availabilityZone;
        private String capacityBlockOfferingId;
        private Integer capacityDurationHours;
        private String currencyCode;
        private String endDateRange;
        private String id;
        private Integer instanceCount;
        private String instanceType;
        private String startDateRange;
        private String tenancy;
        private String upfrontFee;
        public Builder() {}
        public Builder(GetCapacityBlockOfferingResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityZone = defaults.availabilityZone;
    	      this.capacityBlockOfferingId = defaults.capacityBlockOfferingId;
    	      this.capacityDurationHours = defaults.capacityDurationHours;
    	      this.currencyCode = defaults.currencyCode;
    	      this.endDateRange = defaults.endDateRange;
    	      this.id = defaults.id;
    	      this.instanceCount = defaults.instanceCount;
    	      this.instanceType = defaults.instanceType;
    	      this.startDateRange = defaults.startDateRange;
    	      this.tenancy = defaults.tenancy;
    	      this.upfrontFee = defaults.upfrontFee;
        }

        @CustomType.Setter
        public Builder availabilityZone(String availabilityZone) {
            if (availabilityZone == null) {
              throw new MissingRequiredPropertyException("GetCapacityBlockOfferingResult", "availabilityZone");
            }
            this.availabilityZone = availabilityZone;
            return this;
        }
        @CustomType.Setter
        public Builder capacityBlockOfferingId(String capacityBlockOfferingId) {
            if (capacityBlockOfferingId == null) {
              throw new MissingRequiredPropertyException("GetCapacityBlockOfferingResult", "capacityBlockOfferingId");
            }
            this.capacityBlockOfferingId = capacityBlockOfferingId;
            return this;
        }
        @CustomType.Setter
        public Builder capacityDurationHours(Integer capacityDurationHours) {
            if (capacityDurationHours == null) {
              throw new MissingRequiredPropertyException("GetCapacityBlockOfferingResult", "capacityDurationHours");
            }
            this.capacityDurationHours = capacityDurationHours;
            return this;
        }
        @CustomType.Setter
        public Builder currencyCode(String currencyCode) {
            if (currencyCode == null) {
              throw new MissingRequiredPropertyException("GetCapacityBlockOfferingResult", "currencyCode");
            }
            this.currencyCode = currencyCode;
            return this;
        }
        @CustomType.Setter
        public Builder endDateRange(String endDateRange) {
            if (endDateRange == null) {
              throw new MissingRequiredPropertyException("GetCapacityBlockOfferingResult", "endDateRange");
            }
            this.endDateRange = endDateRange;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCapacityBlockOfferingResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder instanceCount(Integer instanceCount) {
            if (instanceCount == null) {
              throw new MissingRequiredPropertyException("GetCapacityBlockOfferingResult", "instanceCount");
            }
            this.instanceCount = instanceCount;
            return this;
        }
        @CustomType.Setter
        public Builder instanceType(String instanceType) {
            if (instanceType == null) {
              throw new MissingRequiredPropertyException("GetCapacityBlockOfferingResult", "instanceType");
            }
            this.instanceType = instanceType;
            return this;
        }
        @CustomType.Setter
        public Builder startDateRange(String startDateRange) {
            if (startDateRange == null) {
              throw new MissingRequiredPropertyException("GetCapacityBlockOfferingResult", "startDateRange");
            }
            this.startDateRange = startDateRange;
            return this;
        }
        @CustomType.Setter
        public Builder tenancy(String tenancy) {
            if (tenancy == null) {
              throw new MissingRequiredPropertyException("GetCapacityBlockOfferingResult", "tenancy");
            }
            this.tenancy = tenancy;
            return this;
        }
        @CustomType.Setter
        public Builder upfrontFee(String upfrontFee) {
            if (upfrontFee == null) {
              throw new MissingRequiredPropertyException("GetCapacityBlockOfferingResult", "upfrontFee");
            }
            this.upfrontFee = upfrontFee;
            return this;
        }
        public GetCapacityBlockOfferingResult build() {
            final var _resultValue = new GetCapacityBlockOfferingResult();
            _resultValue.availabilityZone = availabilityZone;
            _resultValue.capacityBlockOfferingId = capacityBlockOfferingId;
            _resultValue.capacityDurationHours = capacityDurationHours;
            _resultValue.currencyCode = currencyCode;
            _resultValue.endDateRange = endDateRange;
            _resultValue.id = id;
            _resultValue.instanceCount = instanceCount;
            _resultValue.instanceType = instanceType;
            _resultValue.startDateRange = startDateRange;
            _resultValue.tenancy = tenancy;
            _resultValue.upfrontFee = upfrontFee;
            return _resultValue;
        }
    }
}
