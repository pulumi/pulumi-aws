// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appflow.outputs;

import com.pulumi.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfig;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift {
    private @Nullable String bucketPrefix;
    private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfig errorHandlingConfig;
    private String intermediateBucketName;
    private String object;

    private FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift() {}
    public Optional<String> bucketPrefix() {
        return Optional.ofNullable(this.bucketPrefix);
    }
    public Optional<FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfig> errorHandlingConfig() {
        return Optional.ofNullable(this.errorHandlingConfig);
    }
    public String intermediateBucketName() {
        return this.intermediateBucketName;
    }
    public String object() {
        return this.object;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String bucketPrefix;
        private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfig errorHandlingConfig;
        private String intermediateBucketName;
        private String object;
        public Builder() {}
        public Builder(FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucketPrefix = defaults.bucketPrefix;
    	      this.errorHandlingConfig = defaults.errorHandlingConfig;
    	      this.intermediateBucketName = defaults.intermediateBucketName;
    	      this.object = defaults.object;
        }

        @CustomType.Setter
        public Builder bucketPrefix(@Nullable String bucketPrefix) {

            this.bucketPrefix = bucketPrefix;
            return this;
        }
        @CustomType.Setter
        public Builder errorHandlingConfig(@Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfig errorHandlingConfig) {

            this.errorHandlingConfig = errorHandlingConfig;
            return this;
        }
        @CustomType.Setter
        public Builder intermediateBucketName(String intermediateBucketName) {
            if (intermediateBucketName == null) {
              throw new MissingRequiredPropertyException("FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift", "intermediateBucketName");
            }
            this.intermediateBucketName = intermediateBucketName;
            return this;
        }
        @CustomType.Setter
        public Builder object(String object) {
            if (object == null) {
              throw new MissingRequiredPropertyException("FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift", "object");
            }
            this.object = object;
            return this;
        }
        public FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift build() {
            final var _resultValue = new FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift();
            _resultValue.bucketPrefix = bucketPrefix;
            _resultValue.errorHandlingConfig = errorHandlingConfig;
            _resultValue.intermediateBucketName = intermediateBucketName;
            _resultValue.object = object;
            return _resultValue;
        }
    }
}
