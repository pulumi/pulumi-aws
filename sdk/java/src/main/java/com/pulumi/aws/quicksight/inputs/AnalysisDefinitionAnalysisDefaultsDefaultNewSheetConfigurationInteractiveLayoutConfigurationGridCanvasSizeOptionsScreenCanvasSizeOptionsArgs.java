// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AnalysisDefinitionAnalysisDefaultsDefaultNewSheetConfigurationInteractiveLayoutConfigurationGridCanvasSizeOptionsScreenCanvasSizeOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final AnalysisDefinitionAnalysisDefaultsDefaultNewSheetConfigurationInteractiveLayoutConfigurationGridCanvasSizeOptionsScreenCanvasSizeOptionsArgs Empty = new AnalysisDefinitionAnalysisDefaultsDefaultNewSheetConfigurationInteractiveLayoutConfigurationGridCanvasSizeOptionsScreenCanvasSizeOptionsArgs();

    @Import(name="optimizedViewPortWidth")
    private @Nullable Output<String> optimizedViewPortWidth;

    public Optional<Output<String>> optimizedViewPortWidth() {
        return Optional.ofNullable(this.optimizedViewPortWidth);
    }

    @Import(name="resizeOption", required=true)
    private Output<String> resizeOption;

    public Output<String> resizeOption() {
        return this.resizeOption;
    }

    private AnalysisDefinitionAnalysisDefaultsDefaultNewSheetConfigurationInteractiveLayoutConfigurationGridCanvasSizeOptionsScreenCanvasSizeOptionsArgs() {}

    private AnalysisDefinitionAnalysisDefaultsDefaultNewSheetConfigurationInteractiveLayoutConfigurationGridCanvasSizeOptionsScreenCanvasSizeOptionsArgs(AnalysisDefinitionAnalysisDefaultsDefaultNewSheetConfigurationInteractiveLayoutConfigurationGridCanvasSizeOptionsScreenCanvasSizeOptionsArgs $) {
        this.optimizedViewPortWidth = $.optimizedViewPortWidth;
        this.resizeOption = $.resizeOption;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AnalysisDefinitionAnalysisDefaultsDefaultNewSheetConfigurationInteractiveLayoutConfigurationGridCanvasSizeOptionsScreenCanvasSizeOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AnalysisDefinitionAnalysisDefaultsDefaultNewSheetConfigurationInteractiveLayoutConfigurationGridCanvasSizeOptionsScreenCanvasSizeOptionsArgs $;

        public Builder() {
            $ = new AnalysisDefinitionAnalysisDefaultsDefaultNewSheetConfigurationInteractiveLayoutConfigurationGridCanvasSizeOptionsScreenCanvasSizeOptionsArgs();
        }

        public Builder(AnalysisDefinitionAnalysisDefaultsDefaultNewSheetConfigurationInteractiveLayoutConfigurationGridCanvasSizeOptionsScreenCanvasSizeOptionsArgs defaults) {
            $ = new AnalysisDefinitionAnalysisDefaultsDefaultNewSheetConfigurationInteractiveLayoutConfigurationGridCanvasSizeOptionsScreenCanvasSizeOptionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder optimizedViewPortWidth(@Nullable Output<String> optimizedViewPortWidth) {
            $.optimizedViewPortWidth = optimizedViewPortWidth;
            return this;
        }

        public Builder optimizedViewPortWidth(String optimizedViewPortWidth) {
            return optimizedViewPortWidth(Output.of(optimizedViewPortWidth));
        }

        public Builder resizeOption(Output<String> resizeOption) {
            $.resizeOption = resizeOption;
            return this;
        }

        public Builder resizeOption(String resizeOption) {
            return resizeOption(Output.of(resizeOption));
        }

        public AnalysisDefinitionAnalysisDefaultsDefaultNewSheetConfigurationInteractiveLayoutConfigurationGridCanvasSizeOptionsScreenCanvasSizeOptionsArgs build() {
            if ($.resizeOption == null) {
                throw new MissingRequiredPropertyException("AnalysisDefinitionAnalysisDefaultsDefaultNewSheetConfigurationInteractiveLayoutConfigurationGridCanvasSizeOptionsScreenCanvasSizeOptionsArgs", "resizeOption");
            }
            return $;
        }
    }

}
