// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.msk.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetClusterResult {
    private String arn;
    private String bootstrapBrokers;
    private String bootstrapBrokersPublicSaslIam;
    private String bootstrapBrokersPublicSaslScram;
    private String bootstrapBrokersPublicTls;
    private String bootstrapBrokersSaslIam;
    private String bootstrapBrokersSaslScram;
    private String bootstrapBrokersTls;
    private String clusterName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String kafkaVersion;
    private Integer numberOfBrokerNodes;
    private Map<String,String> tags;
    private String zookeeperConnectString;
    private String zookeeperConnectStringTls;

    private GetClusterResult() {}
    public String arn() {
        return this.arn;
    }
    public String bootstrapBrokers() {
        return this.bootstrapBrokers;
    }
    public String bootstrapBrokersPublicSaslIam() {
        return this.bootstrapBrokersPublicSaslIam;
    }
    public String bootstrapBrokersPublicSaslScram() {
        return this.bootstrapBrokersPublicSaslScram;
    }
    public String bootstrapBrokersPublicTls() {
        return this.bootstrapBrokersPublicTls;
    }
    public String bootstrapBrokersSaslIam() {
        return this.bootstrapBrokersSaslIam;
    }
    public String bootstrapBrokersSaslScram() {
        return this.bootstrapBrokersSaslScram;
    }
    public String bootstrapBrokersTls() {
        return this.bootstrapBrokersTls;
    }
    public String clusterName() {
        return this.clusterName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String kafkaVersion() {
        return this.kafkaVersion;
    }
    public Integer numberOfBrokerNodes() {
        return this.numberOfBrokerNodes;
    }
    public Map<String,String> tags() {
        return this.tags;
    }
    public String zookeeperConnectString() {
        return this.zookeeperConnectString;
    }
    public String zookeeperConnectStringTls() {
        return this.zookeeperConnectStringTls;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private String bootstrapBrokers;
        private String bootstrapBrokersPublicSaslIam;
        private String bootstrapBrokersPublicSaslScram;
        private String bootstrapBrokersPublicTls;
        private String bootstrapBrokersSaslIam;
        private String bootstrapBrokersSaslScram;
        private String bootstrapBrokersTls;
        private String clusterName;
        private String id;
        private String kafkaVersion;
        private Integer numberOfBrokerNodes;
        private Map<String,String> tags;
        private String zookeeperConnectString;
        private String zookeeperConnectStringTls;
        public Builder() {}
        public Builder(GetClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.bootstrapBrokers = defaults.bootstrapBrokers;
    	      this.bootstrapBrokersPublicSaslIam = defaults.bootstrapBrokersPublicSaslIam;
    	      this.bootstrapBrokersPublicSaslScram = defaults.bootstrapBrokersPublicSaslScram;
    	      this.bootstrapBrokersPublicTls = defaults.bootstrapBrokersPublicTls;
    	      this.bootstrapBrokersSaslIam = defaults.bootstrapBrokersSaslIam;
    	      this.bootstrapBrokersSaslScram = defaults.bootstrapBrokersSaslScram;
    	      this.bootstrapBrokersTls = defaults.bootstrapBrokersTls;
    	      this.clusterName = defaults.clusterName;
    	      this.id = defaults.id;
    	      this.kafkaVersion = defaults.kafkaVersion;
    	      this.numberOfBrokerNodes = defaults.numberOfBrokerNodes;
    	      this.tags = defaults.tags;
    	      this.zookeeperConnectString = defaults.zookeeperConnectString;
    	      this.zookeeperConnectStringTls = defaults.zookeeperConnectStringTls;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder bootstrapBrokers(String bootstrapBrokers) {
            this.bootstrapBrokers = Objects.requireNonNull(bootstrapBrokers);
            return this;
        }
        @CustomType.Setter
        public Builder bootstrapBrokersPublicSaslIam(String bootstrapBrokersPublicSaslIam) {
            this.bootstrapBrokersPublicSaslIam = Objects.requireNonNull(bootstrapBrokersPublicSaslIam);
            return this;
        }
        @CustomType.Setter
        public Builder bootstrapBrokersPublicSaslScram(String bootstrapBrokersPublicSaslScram) {
            this.bootstrapBrokersPublicSaslScram = Objects.requireNonNull(bootstrapBrokersPublicSaslScram);
            return this;
        }
        @CustomType.Setter
        public Builder bootstrapBrokersPublicTls(String bootstrapBrokersPublicTls) {
            this.bootstrapBrokersPublicTls = Objects.requireNonNull(bootstrapBrokersPublicTls);
            return this;
        }
        @CustomType.Setter
        public Builder bootstrapBrokersSaslIam(String bootstrapBrokersSaslIam) {
            this.bootstrapBrokersSaslIam = Objects.requireNonNull(bootstrapBrokersSaslIam);
            return this;
        }
        @CustomType.Setter
        public Builder bootstrapBrokersSaslScram(String bootstrapBrokersSaslScram) {
            this.bootstrapBrokersSaslScram = Objects.requireNonNull(bootstrapBrokersSaslScram);
            return this;
        }
        @CustomType.Setter
        public Builder bootstrapBrokersTls(String bootstrapBrokersTls) {
            this.bootstrapBrokersTls = Objects.requireNonNull(bootstrapBrokersTls);
            return this;
        }
        @CustomType.Setter
        public Builder clusterName(String clusterName) {
            this.clusterName = Objects.requireNonNull(clusterName);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder kafkaVersion(String kafkaVersion) {
            this.kafkaVersion = Objects.requireNonNull(kafkaVersion);
            return this;
        }
        @CustomType.Setter
        public Builder numberOfBrokerNodes(Integer numberOfBrokerNodes) {
            this.numberOfBrokerNodes = Objects.requireNonNull(numberOfBrokerNodes);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder zookeeperConnectString(String zookeeperConnectString) {
            this.zookeeperConnectString = Objects.requireNonNull(zookeeperConnectString);
            return this;
        }
        @CustomType.Setter
        public Builder zookeeperConnectStringTls(String zookeeperConnectStringTls) {
            this.zookeeperConnectStringTls = Objects.requireNonNull(zookeeperConnectStringTls);
            return this;
        }
        public GetClusterResult build() {
            final var o = new GetClusterResult();
            o.arn = arn;
            o.bootstrapBrokers = bootstrapBrokers;
            o.bootstrapBrokersPublicSaslIam = bootstrapBrokersPublicSaslIam;
            o.bootstrapBrokersPublicSaslScram = bootstrapBrokersPublicSaslScram;
            o.bootstrapBrokersPublicTls = bootstrapBrokersPublicTls;
            o.bootstrapBrokersSaslIam = bootstrapBrokersSaslIam;
            o.bootstrapBrokersSaslScram = bootstrapBrokersSaslScram;
            o.bootstrapBrokersTls = bootstrapBrokersTls;
            o.clusterName = clusterName;
            o.id = id;
            o.kafkaVersion = kafkaVersion;
            o.numberOfBrokerNodes = numberOfBrokerNodes;
            o.tags = tags;
            o.zookeeperConnectString = zookeeperConnectString;
            o.zookeeperConnectStringTls = zookeeperConnectStringTls;
            return o;
        }
    }
}
