// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lex.inputs;

import com.pulumi.aws.lex.inputs.V2modelsSlotMultipleValuesSettingArgs;
import com.pulumi.aws.lex.inputs.V2modelsSlotObfuscationSettingArgs;
import com.pulumi.aws.lex.inputs.V2modelsSlotTimeoutsArgs;
import com.pulumi.aws.lex.inputs.V2modelsSlotValueElicitationSettingArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class V2modelsSlotState extends com.pulumi.resources.ResourceArgs {

    public static final V2modelsSlotState Empty = new V2modelsSlotState();

    /**
     * Identifier of the bot associated with the slot.
     * 
     */
    @Import(name="botId")
    private @Nullable Output<String> botId;

    /**
     * @return Identifier of the bot associated with the slot.
     * 
     */
    public Optional<Output<String>> botId() {
        return Optional.ofNullable(this.botId);
    }

    /**
     * Version of the bot associated with the slot.
     * 
     */
    @Import(name="botVersion")
    private @Nullable Output<String> botVersion;

    /**
     * @return Version of the bot associated with the slot.
     * 
     */
    public Optional<Output<String>> botVersion() {
        return Optional.ofNullable(this.botVersion);
    }

    /**
     * Description of the slot.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the slot.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Identifier of the intent that contains the slot.
     * 
     */
    @Import(name="intentId")
    private @Nullable Output<String> intentId;

    /**
     * @return Identifier of the intent that contains the slot.
     * 
     */
    public Optional<Output<String>> intentId() {
        return Optional.ofNullable(this.intentId);
    }

    /**
     * Identifier of the language and locale that the slot will be used in.
     * 
     */
    @Import(name="localeId")
    private @Nullable Output<String> localeId;

    /**
     * @return Identifier of the language and locale that the slot will be used in.
     * 
     */
    public Optional<Output<String>> localeId() {
        return Optional.ofNullable(this.localeId);
    }

    /**
     * Whether the slot returns multiple values in one response. See the `multiple_values_setting` argument reference below.
     * 
     */
    @Import(name="multipleValuesSettings")
    private @Nullable Output<List<V2modelsSlotMultipleValuesSettingArgs>> multipleValuesSettings;

    /**
     * @return Whether the slot returns multiple values in one response. See the `multiple_values_setting` argument reference below.
     * 
     */
    public Optional<Output<List<V2modelsSlotMultipleValuesSettingArgs>>> multipleValuesSettings() {
        return Optional.ofNullable(this.multipleValuesSettings);
    }

    /**
     * Name of the slot.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the slot.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Determines how slot values are used in Amazon CloudWatch logs. See the `obfuscation_setting` argument reference below.
     * 
     */
    @Import(name="obfuscationSettings")
    private @Nullable Output<List<V2modelsSlotObfuscationSettingArgs>> obfuscationSettings;

    /**
     * @return Determines how slot values are used in Amazon CloudWatch logs. See the `obfuscation_setting` argument reference below.
     * 
     */
    public Optional<Output<List<V2modelsSlotObfuscationSettingArgs>>> obfuscationSettings() {
        return Optional.ofNullable(this.obfuscationSettings);
    }

    /**
     * Unique identifier associated with the slot.
     * 
     */
    @Import(name="slotId")
    private @Nullable Output<String> slotId;

    /**
     * @return Unique identifier associated with the slot.
     * 
     */
    public Optional<Output<String>> slotId() {
        return Optional.ofNullable(this.slotId);
    }

    /**
     * Unique identifier for the slot type associated with this slot.
     * 
     */
    @Import(name="slotTypeId")
    private @Nullable Output<String> slotTypeId;

    /**
     * @return Unique identifier for the slot type associated with this slot.
     * 
     */
    public Optional<Output<String>> slotTypeId() {
        return Optional.ofNullable(this.slotTypeId);
    }

    @Import(name="timeouts")
    private @Nullable Output<V2modelsSlotTimeoutsArgs> timeouts;

    public Optional<Output<V2modelsSlotTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    /**
     * Prompts that Amazon Lex sends to the user to elicit a response that provides the value for the slot.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="valueElicitationSetting")
    private @Nullable Output<V2modelsSlotValueElicitationSettingArgs> valueElicitationSetting;

    /**
     * @return Prompts that Amazon Lex sends to the user to elicit a response that provides the value for the slot.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<V2modelsSlotValueElicitationSettingArgs>> valueElicitationSetting() {
        return Optional.ofNullable(this.valueElicitationSetting);
    }

    private V2modelsSlotState() {}

    private V2modelsSlotState(V2modelsSlotState $) {
        this.botId = $.botId;
        this.botVersion = $.botVersion;
        this.description = $.description;
        this.intentId = $.intentId;
        this.localeId = $.localeId;
        this.multipleValuesSettings = $.multipleValuesSettings;
        this.name = $.name;
        this.obfuscationSettings = $.obfuscationSettings;
        this.slotId = $.slotId;
        this.slotTypeId = $.slotTypeId;
        this.timeouts = $.timeouts;
        this.valueElicitationSetting = $.valueElicitationSetting;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(V2modelsSlotState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private V2modelsSlotState $;

        public Builder() {
            $ = new V2modelsSlotState();
        }

        public Builder(V2modelsSlotState defaults) {
            $ = new V2modelsSlotState(Objects.requireNonNull(defaults));
        }

        /**
         * @param botId Identifier of the bot associated with the slot.
         * 
         * @return builder
         * 
         */
        public Builder botId(@Nullable Output<String> botId) {
            $.botId = botId;
            return this;
        }

        /**
         * @param botId Identifier of the bot associated with the slot.
         * 
         * @return builder
         * 
         */
        public Builder botId(String botId) {
            return botId(Output.of(botId));
        }

        /**
         * @param botVersion Version of the bot associated with the slot.
         * 
         * @return builder
         * 
         */
        public Builder botVersion(@Nullable Output<String> botVersion) {
            $.botVersion = botVersion;
            return this;
        }

        /**
         * @param botVersion Version of the bot associated with the slot.
         * 
         * @return builder
         * 
         */
        public Builder botVersion(String botVersion) {
            return botVersion(Output.of(botVersion));
        }

        /**
         * @param description Description of the slot.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the slot.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param intentId Identifier of the intent that contains the slot.
         * 
         * @return builder
         * 
         */
        public Builder intentId(@Nullable Output<String> intentId) {
            $.intentId = intentId;
            return this;
        }

        /**
         * @param intentId Identifier of the intent that contains the slot.
         * 
         * @return builder
         * 
         */
        public Builder intentId(String intentId) {
            return intentId(Output.of(intentId));
        }

        /**
         * @param localeId Identifier of the language and locale that the slot will be used in.
         * 
         * @return builder
         * 
         */
        public Builder localeId(@Nullable Output<String> localeId) {
            $.localeId = localeId;
            return this;
        }

        /**
         * @param localeId Identifier of the language and locale that the slot will be used in.
         * 
         * @return builder
         * 
         */
        public Builder localeId(String localeId) {
            return localeId(Output.of(localeId));
        }

        /**
         * @param multipleValuesSettings Whether the slot returns multiple values in one response. See the `multiple_values_setting` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder multipleValuesSettings(@Nullable Output<List<V2modelsSlotMultipleValuesSettingArgs>> multipleValuesSettings) {
            $.multipleValuesSettings = multipleValuesSettings;
            return this;
        }

        /**
         * @param multipleValuesSettings Whether the slot returns multiple values in one response. See the `multiple_values_setting` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder multipleValuesSettings(List<V2modelsSlotMultipleValuesSettingArgs> multipleValuesSettings) {
            return multipleValuesSettings(Output.of(multipleValuesSettings));
        }

        /**
         * @param multipleValuesSettings Whether the slot returns multiple values in one response. See the `multiple_values_setting` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder multipleValuesSettings(V2modelsSlotMultipleValuesSettingArgs... multipleValuesSettings) {
            return multipleValuesSettings(List.of(multipleValuesSettings));
        }

        /**
         * @param name Name of the slot.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the slot.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param obfuscationSettings Determines how slot values are used in Amazon CloudWatch logs. See the `obfuscation_setting` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder obfuscationSettings(@Nullable Output<List<V2modelsSlotObfuscationSettingArgs>> obfuscationSettings) {
            $.obfuscationSettings = obfuscationSettings;
            return this;
        }

        /**
         * @param obfuscationSettings Determines how slot values are used in Amazon CloudWatch logs. See the `obfuscation_setting` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder obfuscationSettings(List<V2modelsSlotObfuscationSettingArgs> obfuscationSettings) {
            return obfuscationSettings(Output.of(obfuscationSettings));
        }

        /**
         * @param obfuscationSettings Determines how slot values are used in Amazon CloudWatch logs. See the `obfuscation_setting` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder obfuscationSettings(V2modelsSlotObfuscationSettingArgs... obfuscationSettings) {
            return obfuscationSettings(List.of(obfuscationSettings));
        }

        /**
         * @param slotId Unique identifier associated with the slot.
         * 
         * @return builder
         * 
         */
        public Builder slotId(@Nullable Output<String> slotId) {
            $.slotId = slotId;
            return this;
        }

        /**
         * @param slotId Unique identifier associated with the slot.
         * 
         * @return builder
         * 
         */
        public Builder slotId(String slotId) {
            return slotId(Output.of(slotId));
        }

        /**
         * @param slotTypeId Unique identifier for the slot type associated with this slot.
         * 
         * @return builder
         * 
         */
        public Builder slotTypeId(@Nullable Output<String> slotTypeId) {
            $.slotTypeId = slotTypeId;
            return this;
        }

        /**
         * @param slotTypeId Unique identifier for the slot type associated with this slot.
         * 
         * @return builder
         * 
         */
        public Builder slotTypeId(String slotTypeId) {
            return slotTypeId(Output.of(slotTypeId));
        }

        public Builder timeouts(@Nullable Output<V2modelsSlotTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(V2modelsSlotTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        /**
         * @param valueElicitationSetting Prompts that Amazon Lex sends to the user to elicit a response that provides the value for the slot.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder valueElicitationSetting(@Nullable Output<V2modelsSlotValueElicitationSettingArgs> valueElicitationSetting) {
            $.valueElicitationSetting = valueElicitationSetting;
            return this;
        }

        /**
         * @param valueElicitationSetting Prompts that Amazon Lex sends to the user to elicit a response that provides the value for the slot.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder valueElicitationSetting(V2modelsSlotValueElicitationSettingArgs valueElicitationSetting) {
            return valueElicitationSetting(Output.of(valueElicitationSetting));
        }

        public V2modelsSlotState build() {
            return $;
        }
    }

}
