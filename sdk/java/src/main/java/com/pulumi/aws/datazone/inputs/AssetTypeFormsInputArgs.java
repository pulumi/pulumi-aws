// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.datazone.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AssetTypeFormsInputArgs extends com.pulumi.resources.ResourceArgs {

    public static final AssetTypeFormsInputArgs Empty = new AssetTypeFormsInputArgs();

    @Import(name="mapBlockKey", required=true)
    private Output<String> mapBlockKey;

    public Output<String> mapBlockKey() {
        return this.mapBlockKey;
    }

    @Import(name="required")
    private @Nullable Output<Boolean> required;

    public Optional<Output<Boolean>> required() {
        return Optional.ofNullable(this.required);
    }

    @Import(name="typeIdentifier", required=true)
    private Output<String> typeIdentifier;

    public Output<String> typeIdentifier() {
        return this.typeIdentifier;
    }

    @Import(name="typeRevision", required=true)
    private Output<String> typeRevision;

    public Output<String> typeRevision() {
        return this.typeRevision;
    }

    private AssetTypeFormsInputArgs() {}

    private AssetTypeFormsInputArgs(AssetTypeFormsInputArgs $) {
        this.mapBlockKey = $.mapBlockKey;
        this.required = $.required;
        this.typeIdentifier = $.typeIdentifier;
        this.typeRevision = $.typeRevision;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AssetTypeFormsInputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AssetTypeFormsInputArgs $;

        public Builder() {
            $ = new AssetTypeFormsInputArgs();
        }

        public Builder(AssetTypeFormsInputArgs defaults) {
            $ = new AssetTypeFormsInputArgs(Objects.requireNonNull(defaults));
        }

        public Builder mapBlockKey(Output<String> mapBlockKey) {
            $.mapBlockKey = mapBlockKey;
            return this;
        }

        public Builder mapBlockKey(String mapBlockKey) {
            return mapBlockKey(Output.of(mapBlockKey));
        }

        public Builder required(@Nullable Output<Boolean> required) {
            $.required = required;
            return this;
        }

        public Builder required(Boolean required) {
            return required(Output.of(required));
        }

        public Builder typeIdentifier(Output<String> typeIdentifier) {
            $.typeIdentifier = typeIdentifier;
            return this;
        }

        public Builder typeIdentifier(String typeIdentifier) {
            return typeIdentifier(Output.of(typeIdentifier));
        }

        public Builder typeRevision(Output<String> typeRevision) {
            $.typeRevision = typeRevision;
            return this;
        }

        public Builder typeRevision(String typeRevision) {
            return typeRevision(Output.of(typeRevision));
        }

        public AssetTypeFormsInputArgs build() {
            if ($.mapBlockKey == null) {
                throw new MissingRequiredPropertyException("AssetTypeFormsInputArgs", "mapBlockKey");
            }
            if ($.typeIdentifier == null) {
                throw new MissingRequiredPropertyException("AssetTypeFormsInputArgs", "typeIdentifier");
            }
            if ($.typeRevision == null) {
                throw new MissingRequiredPropertyException("AssetTypeFormsInputArgs", "typeRevision");
            }
            return $;
        }
    }

}
