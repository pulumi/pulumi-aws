// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.organizations.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccountState extends com.pulumi.resources.ResourceArgs {

    public static final AccountState Empty = new AccountState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="closeOnDeletion")
    private @Nullable Output<Boolean> closeOnDeletion;

    public Optional<Output<Boolean>> closeOnDeletion() {
        return Optional.ofNullable(this.closeOnDeletion);
    }

    @Import(name="createGovcloud")
    private @Nullable Output<Boolean> createGovcloud;

    public Optional<Output<Boolean>> createGovcloud() {
        return Optional.ofNullable(this.createGovcloud);
    }

    @Import(name="email")
    private @Nullable Output<String> email;

    public Optional<Output<String>> email() {
        return Optional.ofNullable(this.email);
    }

    @Import(name="govcloudId")
    private @Nullable Output<String> govcloudId;

    public Optional<Output<String>> govcloudId() {
        return Optional.ofNullable(this.govcloudId);
    }

    @Import(name="iamUserAccessToBilling")
    private @Nullable Output<String> iamUserAccessToBilling;

    public Optional<Output<String>> iamUserAccessToBilling() {
        return Optional.ofNullable(this.iamUserAccessToBilling);
    }

    @Import(name="joinedMethod")
    private @Nullable Output<String> joinedMethod;

    public Optional<Output<String>> joinedMethod() {
        return Optional.ofNullable(this.joinedMethod);
    }

    @Import(name="joinedTimestamp")
    private @Nullable Output<String> joinedTimestamp;

    public Optional<Output<String>> joinedTimestamp() {
        return Optional.ofNullable(this.joinedTimestamp);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="parentId")
    private @Nullable Output<String> parentId;

    public Optional<Output<String>> parentId() {
        return Optional.ofNullable(this.parentId);
    }

    @Import(name="roleName")
    private @Nullable Output<String> roleName;

    public Optional<Output<String>> roleName() {
        return Optional.ofNullable(this.roleName);
    }

    @Import(name="status")
    private @Nullable Output<String> status;

    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private AccountState() {}

    private AccountState(AccountState $) {
        this.arn = $.arn;
        this.closeOnDeletion = $.closeOnDeletion;
        this.createGovcloud = $.createGovcloud;
        this.email = $.email;
        this.govcloudId = $.govcloudId;
        this.iamUserAccessToBilling = $.iamUserAccessToBilling;
        this.joinedMethod = $.joinedMethod;
        this.joinedTimestamp = $.joinedTimestamp;
        this.name = $.name;
        this.parentId = $.parentId;
        this.roleName = $.roleName;
        this.status = $.status;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccountState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccountState $;

        public Builder() {
            $ = new AccountState();
        }

        public Builder(AccountState defaults) {
            $ = new AccountState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder closeOnDeletion(@Nullable Output<Boolean> closeOnDeletion) {
            $.closeOnDeletion = closeOnDeletion;
            return this;
        }

        public Builder closeOnDeletion(Boolean closeOnDeletion) {
            return closeOnDeletion(Output.of(closeOnDeletion));
        }

        public Builder createGovcloud(@Nullable Output<Boolean> createGovcloud) {
            $.createGovcloud = createGovcloud;
            return this;
        }

        public Builder createGovcloud(Boolean createGovcloud) {
            return createGovcloud(Output.of(createGovcloud));
        }

        public Builder email(@Nullable Output<String> email) {
            $.email = email;
            return this;
        }

        public Builder email(String email) {
            return email(Output.of(email));
        }

        public Builder govcloudId(@Nullable Output<String> govcloudId) {
            $.govcloudId = govcloudId;
            return this;
        }

        public Builder govcloudId(String govcloudId) {
            return govcloudId(Output.of(govcloudId));
        }

        public Builder iamUserAccessToBilling(@Nullable Output<String> iamUserAccessToBilling) {
            $.iamUserAccessToBilling = iamUserAccessToBilling;
            return this;
        }

        public Builder iamUserAccessToBilling(String iamUserAccessToBilling) {
            return iamUserAccessToBilling(Output.of(iamUserAccessToBilling));
        }

        public Builder joinedMethod(@Nullable Output<String> joinedMethod) {
            $.joinedMethod = joinedMethod;
            return this;
        }

        public Builder joinedMethod(String joinedMethod) {
            return joinedMethod(Output.of(joinedMethod));
        }

        public Builder joinedTimestamp(@Nullable Output<String> joinedTimestamp) {
            $.joinedTimestamp = joinedTimestamp;
            return this;
        }

        public Builder joinedTimestamp(String joinedTimestamp) {
            return joinedTimestamp(Output.of(joinedTimestamp));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder parentId(@Nullable Output<String> parentId) {
            $.parentId = parentId;
            return this;
        }

        public Builder parentId(String parentId) {
            return parentId(Output.of(parentId));
        }

        public Builder roleName(@Nullable Output<String> roleName) {
            $.roleName = roleName;
            return this;
        }

        public Builder roleName(String roleName) {
            return roleName(Output.of(roleName));
        }

        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        public Builder status(String status) {
            return status(Output.of(status));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public AccountState build() {
            return $;
        }
    }

}
