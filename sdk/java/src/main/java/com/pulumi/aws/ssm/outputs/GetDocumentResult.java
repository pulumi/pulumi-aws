// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ssm.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDocumentResult {
    /**
     * @return ARN of the document. If the document is an AWS managed document, this value will be set to the name of the document instead.
     * 
     */
    private @Nullable String arn;
    /**
     * @return Contents of the document.
     * 
     */
    private @Nullable String content;
    private @Nullable String documentFormat;
    /**
     * @return Type of the document.
     * 
     */
    private @Nullable String documentType;
    private @Nullable String documentVersion;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private String name;

    private GetDocumentResult() {}
    /**
     * @return ARN of the document. If the document is an AWS managed document, this value will be set to the name of the document instead.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return Contents of the document.
     * 
     */
    public Optional<String> content() {
        return Optional.ofNullable(this.content);
    }
    public Optional<String> documentFormat() {
        return Optional.ofNullable(this.documentFormat);
    }
    /**
     * @return Type of the document.
     * 
     */
    public Optional<String> documentType() {
        return Optional.ofNullable(this.documentType);
    }
    public Optional<String> documentVersion() {
        return Optional.ofNullable(this.documentVersion);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDocumentResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String content;
        private @Nullable String documentFormat;
        private @Nullable String documentType;
        private @Nullable String documentVersion;
        private @Nullable String id;
        private String name;
        public Builder() {}
        public Builder(GetDocumentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.content = defaults.content;
    	      this.documentFormat = defaults.documentFormat;
    	      this.documentType = defaults.documentType;
    	      this.documentVersion = defaults.documentVersion;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder content(@Nullable String content) {
            this.content = content;
            return this;
        }
        @CustomType.Setter
        public Builder documentFormat(@Nullable String documentFormat) {
            this.documentFormat = documentFormat;
            return this;
        }
        @CustomType.Setter
        public Builder documentType(@Nullable String documentType) {
            this.documentType = documentType;
            return this;
        }
        @CustomType.Setter
        public Builder documentVersion(@Nullable String documentVersion) {
            this.documentVersion = documentVersion;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public GetDocumentResult build() {
            final var o = new GetDocumentResult();
            o.arn = arn;
            o.content = content;
            o.documentFormat = documentFormat;
            o.documentType = documentType;
            o.documentVersion = documentVersion;
            o.id = id;
            o.name = name;
            return o;
        }
    }
}
