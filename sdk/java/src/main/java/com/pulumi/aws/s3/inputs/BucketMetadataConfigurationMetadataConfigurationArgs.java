// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3.inputs;

import com.pulumi.aws.s3.inputs.BucketMetadataConfigurationMetadataConfigurationDestinationArgs;
import com.pulumi.aws.s3.inputs.BucketMetadataConfigurationMetadataConfigurationInventoryTableConfigurationArgs;
import com.pulumi.aws.s3.inputs.BucketMetadataConfigurationMetadataConfigurationJournalTableConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketMetadataConfigurationMetadataConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketMetadataConfigurationMetadataConfigurationArgs Empty = new BucketMetadataConfigurationMetadataConfigurationArgs();

    /**
     * Destination information for the S3 Metadata configuration.
     * 
     */
    @Import(name="destinations")
    private @Nullable Output<List<BucketMetadataConfigurationMetadataConfigurationDestinationArgs>> destinations;

    /**
     * @return Destination information for the S3 Metadata configuration.
     * 
     */
    public Optional<Output<List<BucketMetadataConfigurationMetadataConfigurationDestinationArgs>>> destinations() {
        return Optional.ofNullable(this.destinations);
    }

    /**
     * Inventory table configuration. See `inventory_table_configuration` Block for details.
     * 
     */
    @Import(name="inventoryTableConfiguration")
    private @Nullable Output<BucketMetadataConfigurationMetadataConfigurationInventoryTableConfigurationArgs> inventoryTableConfiguration;

    /**
     * @return Inventory table configuration. See `inventory_table_configuration` Block for details.
     * 
     */
    public Optional<Output<BucketMetadataConfigurationMetadataConfigurationInventoryTableConfigurationArgs>> inventoryTableConfiguration() {
        return Optional.ofNullable(this.inventoryTableConfiguration);
    }

    /**
     * Journal table configuration. See `journal_table_configuration` Block for details.
     * 
     */
    @Import(name="journalTableConfiguration")
    private @Nullable Output<BucketMetadataConfigurationMetadataConfigurationJournalTableConfigurationArgs> journalTableConfiguration;

    /**
     * @return Journal table configuration. See `journal_table_configuration` Block for details.
     * 
     */
    public Optional<Output<BucketMetadataConfigurationMetadataConfigurationJournalTableConfigurationArgs>> journalTableConfiguration() {
        return Optional.ofNullable(this.journalTableConfiguration);
    }

    private BucketMetadataConfigurationMetadataConfigurationArgs() {}

    private BucketMetadataConfigurationMetadataConfigurationArgs(BucketMetadataConfigurationMetadataConfigurationArgs $) {
        this.destinations = $.destinations;
        this.inventoryTableConfiguration = $.inventoryTableConfiguration;
        this.journalTableConfiguration = $.journalTableConfiguration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketMetadataConfigurationMetadataConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketMetadataConfigurationMetadataConfigurationArgs $;

        public Builder() {
            $ = new BucketMetadataConfigurationMetadataConfigurationArgs();
        }

        public Builder(BucketMetadataConfigurationMetadataConfigurationArgs defaults) {
            $ = new BucketMetadataConfigurationMetadataConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param destinations Destination information for the S3 Metadata configuration.
         * 
         * @return builder
         * 
         */
        public Builder destinations(@Nullable Output<List<BucketMetadataConfigurationMetadataConfigurationDestinationArgs>> destinations) {
            $.destinations = destinations;
            return this;
        }

        /**
         * @param destinations Destination information for the S3 Metadata configuration.
         * 
         * @return builder
         * 
         */
        public Builder destinations(List<BucketMetadataConfigurationMetadataConfigurationDestinationArgs> destinations) {
            return destinations(Output.of(destinations));
        }

        /**
         * @param destinations Destination information for the S3 Metadata configuration.
         * 
         * @return builder
         * 
         */
        public Builder destinations(BucketMetadataConfigurationMetadataConfigurationDestinationArgs... destinations) {
            return destinations(List.of(destinations));
        }

        /**
         * @param inventoryTableConfiguration Inventory table configuration. See `inventory_table_configuration` Block for details.
         * 
         * @return builder
         * 
         */
        public Builder inventoryTableConfiguration(@Nullable Output<BucketMetadataConfigurationMetadataConfigurationInventoryTableConfigurationArgs> inventoryTableConfiguration) {
            $.inventoryTableConfiguration = inventoryTableConfiguration;
            return this;
        }

        /**
         * @param inventoryTableConfiguration Inventory table configuration. See `inventory_table_configuration` Block for details.
         * 
         * @return builder
         * 
         */
        public Builder inventoryTableConfiguration(BucketMetadataConfigurationMetadataConfigurationInventoryTableConfigurationArgs inventoryTableConfiguration) {
            return inventoryTableConfiguration(Output.of(inventoryTableConfiguration));
        }

        /**
         * @param journalTableConfiguration Journal table configuration. See `journal_table_configuration` Block for details.
         * 
         * @return builder
         * 
         */
        public Builder journalTableConfiguration(@Nullable Output<BucketMetadataConfigurationMetadataConfigurationJournalTableConfigurationArgs> journalTableConfiguration) {
            $.journalTableConfiguration = journalTableConfiguration;
            return this;
        }

        /**
         * @param journalTableConfiguration Journal table configuration. See `journal_table_configuration` Block for details.
         * 
         * @return builder
         * 
         */
        public Builder journalTableConfiguration(BucketMetadataConfigurationMetadataConfigurationJournalTableConfigurationArgs journalTableConfiguration) {
            return journalTableConfiguration(Output.of(journalTableConfiguration));
        }

        public BucketMetadataConfigurationMetadataConfigurationArgs build() {
            return $;
        }
    }

}
