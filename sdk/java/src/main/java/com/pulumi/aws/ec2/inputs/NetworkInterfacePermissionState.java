// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.aws.ec2.inputs.NetworkInterfacePermissionTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkInterfacePermissionState extends com.pulumi.resources.ResourceArgs {

    public static final NetworkInterfacePermissionState Empty = new NetworkInterfacePermissionState();

    /**
     * The Amazon Web Services account ID.
     * 
     */
    @Import(name="awsAccountId")
    private @Nullable Output<String> awsAccountId;

    /**
     * @return The Amazon Web Services account ID.
     * 
     */
    public Optional<Output<String>> awsAccountId() {
        return Optional.ofNullable(this.awsAccountId);
    }

    /**
     * The ID of the network interface.
     * 
     */
    @Import(name="networkInterfaceId")
    private @Nullable Output<String> networkInterfaceId;

    /**
     * @return The ID of the network interface.
     * 
     */
    public Optional<Output<String>> networkInterfaceId() {
        return Optional.ofNullable(this.networkInterfaceId);
    }

    /**
     * ENI permission ID.
     * 
     */
    @Import(name="networkInterfacePermissionId")
    private @Nullable Output<String> networkInterfacePermissionId;

    /**
     * @return ENI permission ID.
     * 
     */
    public Optional<Output<String>> networkInterfacePermissionId() {
        return Optional.ofNullable(this.networkInterfacePermissionId);
    }

    /**
     * The type of permission to grant. Valid values are `INSTANCE-ATTACH` or `EIP-ASSOCIATE`.
     * 
     */
    @Import(name="permission")
    private @Nullable Output<String> permission;

    /**
     * @return The type of permission to grant. Valid values are `INSTANCE-ATTACH` or `EIP-ASSOCIATE`.
     * 
     */
    public Optional<Output<String>> permission() {
        return Optional.ofNullable(this.permission);
    }

    @Import(name="timeouts")
    private @Nullable Output<NetworkInterfacePermissionTimeoutsArgs> timeouts;

    public Optional<Output<NetworkInterfacePermissionTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private NetworkInterfacePermissionState() {}

    private NetworkInterfacePermissionState(NetworkInterfacePermissionState $) {
        this.awsAccountId = $.awsAccountId;
        this.networkInterfaceId = $.networkInterfaceId;
        this.networkInterfacePermissionId = $.networkInterfacePermissionId;
        this.permission = $.permission;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkInterfacePermissionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkInterfacePermissionState $;

        public Builder() {
            $ = new NetworkInterfacePermissionState();
        }

        public Builder(NetworkInterfacePermissionState defaults) {
            $ = new NetworkInterfacePermissionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param awsAccountId The Amazon Web Services account ID.
         * 
         * @return builder
         * 
         */
        public Builder awsAccountId(@Nullable Output<String> awsAccountId) {
            $.awsAccountId = awsAccountId;
            return this;
        }

        /**
         * @param awsAccountId The Amazon Web Services account ID.
         * 
         * @return builder
         * 
         */
        public Builder awsAccountId(String awsAccountId) {
            return awsAccountId(Output.of(awsAccountId));
        }

        /**
         * @param networkInterfaceId The ID of the network interface.
         * 
         * @return builder
         * 
         */
        public Builder networkInterfaceId(@Nullable Output<String> networkInterfaceId) {
            $.networkInterfaceId = networkInterfaceId;
            return this;
        }

        /**
         * @param networkInterfaceId The ID of the network interface.
         * 
         * @return builder
         * 
         */
        public Builder networkInterfaceId(String networkInterfaceId) {
            return networkInterfaceId(Output.of(networkInterfaceId));
        }

        /**
         * @param networkInterfacePermissionId ENI permission ID.
         * 
         * @return builder
         * 
         */
        public Builder networkInterfacePermissionId(@Nullable Output<String> networkInterfacePermissionId) {
            $.networkInterfacePermissionId = networkInterfacePermissionId;
            return this;
        }

        /**
         * @param networkInterfacePermissionId ENI permission ID.
         * 
         * @return builder
         * 
         */
        public Builder networkInterfacePermissionId(String networkInterfacePermissionId) {
            return networkInterfacePermissionId(Output.of(networkInterfacePermissionId));
        }

        /**
         * @param permission The type of permission to grant. Valid values are `INSTANCE-ATTACH` or `EIP-ASSOCIATE`.
         * 
         * @return builder
         * 
         */
        public Builder permission(@Nullable Output<String> permission) {
            $.permission = permission;
            return this;
        }

        /**
         * @param permission The type of permission to grant. Valid values are `INSTANCE-ATTACH` or `EIP-ASSOCIATE`.
         * 
         * @return builder
         * 
         */
        public Builder permission(String permission) {
            return permission(Output.of(permission));
        }

        public Builder timeouts(@Nullable Output<NetworkInterfacePermissionTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(NetworkInterfacePermissionTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public NetworkInterfacePermissionState build() {
            return $;
        }
    }

}
