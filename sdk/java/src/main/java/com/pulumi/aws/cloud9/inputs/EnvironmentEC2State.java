// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloud9.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EnvironmentEC2State extends com.pulumi.resources.ResourceArgs {

    public static final EnvironmentEC2State Empty = new EnvironmentEC2State();

    /**
     * The ARN of the environment.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return The ARN of the environment.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * The number of minutes until the running instance is shut down after the environment has last been used.
     * 
     */
    @Import(name="automaticStopTimeMinutes")
    private @Nullable Output<Integer> automaticStopTimeMinutes;

    /**
     * @return The number of minutes until the running instance is shut down after the environment has last been used.
     * 
     */
    public Optional<Output<Integer>> automaticStopTimeMinutes() {
        return Optional.ofNullable(this.automaticStopTimeMinutes);
    }

    /**
     * The connection type used for connecting to an Amazon EC2 environment. Valid values are `CONNECT_SSH` and `CONNECT_SSM`. For more information please refer [AWS documentation for Cloud9](https://docs.aws.amazon.com/cloud9/latest/user-guide/ec2-ssm.html).
     * 
     */
    @Import(name="connectionType")
    private @Nullable Output<String> connectionType;

    /**
     * @return The connection type used for connecting to an Amazon EC2 environment. Valid values are `CONNECT_SSH` and `CONNECT_SSM`. For more information please refer [AWS documentation for Cloud9](https://docs.aws.amazon.com/cloud9/latest/user-guide/ec2-ssm.html).
     * 
     */
    public Optional<Output<String>> connectionType() {
        return Optional.ofNullable(this.connectionType);
    }

    /**
     * The description of the environment.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the environment.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The identifier for the Amazon Machine Image (AMI) that&#39;s used to create the EC2 instance. Valid values are
     * * `amazonlinux-1-x86_64`
     * * `amazonlinux-2-x86_64`
     * * `ubuntu-18.04-x86_64`
     * * `resolve:ssm:/aws/service/cloud9/amis/amazonlinux-1-x86_64`
     * * `resolve:ssm:/aws/service/cloud9/amis/amazonlinux-2-x86_64`
     * * `resolve:ssm:/aws/service/cloud9/amis/ubuntu-18.04-x86_64`
     * 
     */
    @Import(name="imageId")
    private @Nullable Output<String> imageId;

    /**
     * @return The identifier for the Amazon Machine Image (AMI) that&#39;s used to create the EC2 instance. Valid values are
     * * `amazonlinux-1-x86_64`
     * * `amazonlinux-2-x86_64`
     * * `ubuntu-18.04-x86_64`
     * * `resolve:ssm:/aws/service/cloud9/amis/amazonlinux-1-x86_64`
     * * `resolve:ssm:/aws/service/cloud9/amis/amazonlinux-2-x86_64`
     * * `resolve:ssm:/aws/service/cloud9/amis/ubuntu-18.04-x86_64`
     * 
     */
    public Optional<Output<String>> imageId() {
        return Optional.ofNullable(this.imageId);
    }

    /**
     * The type of instance to connect to the environment, e.g., `t2.micro`.
     * 
     */
    @Import(name="instanceType")
    private @Nullable Output<String> instanceType;

    /**
     * @return The type of instance to connect to the environment, e.g., `t2.micro`.
     * 
     */
    public Optional<Output<String>> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    /**
     * The name of the environment.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the environment.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ARN of the environment owner. This can be ARN of any AWS IAM principal. Defaults to the environment&#39;s creator.
     * 
     */
    @Import(name="ownerArn")
    private @Nullable Output<String> ownerArn;

    /**
     * @return The ARN of the environment owner. This can be ARN of any AWS IAM principal. Defaults to the environment&#39;s creator.
     * 
     */
    public Optional<Output<String>> ownerArn() {
        return Optional.ofNullable(this.ownerArn);
    }

    /**
     * The ID of the subnet in Amazon VPC that AWS Cloud9 will use to communicate with the Amazon EC2 instance.
     * 
     */
    @Import(name="subnetId")
    private @Nullable Output<String> subnetId;

    /**
     * @return The ID of the subnet in Amazon VPC that AWS Cloud9 will use to communicate with the Amazon EC2 instance.
     * 
     */
    public Optional<Output<String>> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }

    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    /**
     * The type of the environment (e.g., `ssh` or `ec2`)
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of the environment (e.g., `ssh` or `ec2`)
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private EnvironmentEC2State() {}

    private EnvironmentEC2State(EnvironmentEC2State $) {
        this.arn = $.arn;
        this.automaticStopTimeMinutes = $.automaticStopTimeMinutes;
        this.connectionType = $.connectionType;
        this.description = $.description;
        this.imageId = $.imageId;
        this.instanceType = $.instanceType;
        this.name = $.name;
        this.ownerArn = $.ownerArn;
        this.subnetId = $.subnetId;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnvironmentEC2State defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnvironmentEC2State $;

        public Builder() {
            $ = new EnvironmentEC2State();
        }

        public Builder(EnvironmentEC2State defaults) {
            $ = new EnvironmentEC2State(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn The ARN of the environment.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn The ARN of the environment.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param automaticStopTimeMinutes The number of minutes until the running instance is shut down after the environment has last been used.
         * 
         * @return builder
         * 
         */
        public Builder automaticStopTimeMinutes(@Nullable Output<Integer> automaticStopTimeMinutes) {
            $.automaticStopTimeMinutes = automaticStopTimeMinutes;
            return this;
        }

        /**
         * @param automaticStopTimeMinutes The number of minutes until the running instance is shut down after the environment has last been used.
         * 
         * @return builder
         * 
         */
        public Builder automaticStopTimeMinutes(Integer automaticStopTimeMinutes) {
            return automaticStopTimeMinutes(Output.of(automaticStopTimeMinutes));
        }

        /**
         * @param connectionType The connection type used for connecting to an Amazon EC2 environment. Valid values are `CONNECT_SSH` and `CONNECT_SSM`. For more information please refer [AWS documentation for Cloud9](https://docs.aws.amazon.com/cloud9/latest/user-guide/ec2-ssm.html).
         * 
         * @return builder
         * 
         */
        public Builder connectionType(@Nullable Output<String> connectionType) {
            $.connectionType = connectionType;
            return this;
        }

        /**
         * @param connectionType The connection type used for connecting to an Amazon EC2 environment. Valid values are `CONNECT_SSH` and `CONNECT_SSM`. For more information please refer [AWS documentation for Cloud9](https://docs.aws.amazon.com/cloud9/latest/user-guide/ec2-ssm.html).
         * 
         * @return builder
         * 
         */
        public Builder connectionType(String connectionType) {
            return connectionType(Output.of(connectionType));
        }

        /**
         * @param description The description of the environment.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the environment.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param imageId The identifier for the Amazon Machine Image (AMI) that&#39;s used to create the EC2 instance. Valid values are
         * * `amazonlinux-1-x86_64`
         * * `amazonlinux-2-x86_64`
         * * `ubuntu-18.04-x86_64`
         * * `resolve:ssm:/aws/service/cloud9/amis/amazonlinux-1-x86_64`
         * * `resolve:ssm:/aws/service/cloud9/amis/amazonlinux-2-x86_64`
         * * `resolve:ssm:/aws/service/cloud9/amis/ubuntu-18.04-x86_64`
         * 
         * @return builder
         * 
         */
        public Builder imageId(@Nullable Output<String> imageId) {
            $.imageId = imageId;
            return this;
        }

        /**
         * @param imageId The identifier for the Amazon Machine Image (AMI) that&#39;s used to create the EC2 instance. Valid values are
         * * `amazonlinux-1-x86_64`
         * * `amazonlinux-2-x86_64`
         * * `ubuntu-18.04-x86_64`
         * * `resolve:ssm:/aws/service/cloud9/amis/amazonlinux-1-x86_64`
         * * `resolve:ssm:/aws/service/cloud9/amis/amazonlinux-2-x86_64`
         * * `resolve:ssm:/aws/service/cloud9/amis/ubuntu-18.04-x86_64`
         * 
         * @return builder
         * 
         */
        public Builder imageId(String imageId) {
            return imageId(Output.of(imageId));
        }

        /**
         * @param instanceType The type of instance to connect to the environment, e.g., `t2.micro`.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(@Nullable Output<String> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        /**
         * @param instanceType The type of instance to connect to the environment, e.g., `t2.micro`.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(String instanceType) {
            return instanceType(Output.of(instanceType));
        }

        /**
         * @param name The name of the environment.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the environment.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param ownerArn The ARN of the environment owner. This can be ARN of any AWS IAM principal. Defaults to the environment&#39;s creator.
         * 
         * @return builder
         * 
         */
        public Builder ownerArn(@Nullable Output<String> ownerArn) {
            $.ownerArn = ownerArn;
            return this;
        }

        /**
         * @param ownerArn The ARN of the environment owner. This can be ARN of any AWS IAM principal. Defaults to the environment&#39;s creator.
         * 
         * @return builder
         * 
         */
        public Builder ownerArn(String ownerArn) {
            return ownerArn(Output.of(ownerArn));
        }

        /**
         * @param subnetId The ID of the subnet in Amazon VPC that AWS Cloud9 will use to communicate with the Amazon EC2 instance.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(@Nullable Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId The ID of the subnet in Amazon VPC that AWS Cloud9 will use to communicate with the Amazon EC2 instance.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        /**
         * @param tags Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        /**
         * @param type The type of the environment (e.g., `ssh` or `ec2`)
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of the environment (e.g., `ssh` or `ec2`)
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public EnvironmentEC2State build() {
            return $;
        }
    }

}
