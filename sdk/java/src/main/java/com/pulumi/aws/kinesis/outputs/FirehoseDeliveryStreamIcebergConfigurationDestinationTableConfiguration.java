// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kinesis.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FirehoseDeliveryStreamIcebergConfigurationDestinationTableConfiguration {
    /**
     * @return The name of the Apache Iceberg database.
     * 
     */
    private String databaseName;
    /**
     * @return The table specific S3 error output prefix. All the errors that occurred while delivering to this table will be prefixed with this value in S3 destination.
     * 
     */
    private @Nullable String s3ErrorOutputPrefix;
    /**
     * @return The name of the Apache Iceberg Table.
     * 
     */
    private String tableName;
    /**
     * @return A list of unique keys for a given Apache Iceberg table. Firehose will use these for running Create, Update, or Delete operations on the given Iceberg table.
     * 
     */
    private @Nullable List<String> uniqueKeys;

    private FirehoseDeliveryStreamIcebergConfigurationDestinationTableConfiguration() {}
    /**
     * @return The name of the Apache Iceberg database.
     * 
     */
    public String databaseName() {
        return this.databaseName;
    }
    /**
     * @return The table specific S3 error output prefix. All the errors that occurred while delivering to this table will be prefixed with this value in S3 destination.
     * 
     */
    public Optional<String> s3ErrorOutputPrefix() {
        return Optional.ofNullable(this.s3ErrorOutputPrefix);
    }
    /**
     * @return The name of the Apache Iceberg Table.
     * 
     */
    public String tableName() {
        return this.tableName;
    }
    /**
     * @return A list of unique keys for a given Apache Iceberg table. Firehose will use these for running Create, Update, or Delete operations on the given Iceberg table.
     * 
     */
    public List<String> uniqueKeys() {
        return this.uniqueKeys == null ? List.of() : this.uniqueKeys;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FirehoseDeliveryStreamIcebergConfigurationDestinationTableConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String databaseName;
        private @Nullable String s3ErrorOutputPrefix;
        private String tableName;
        private @Nullable List<String> uniqueKeys;
        public Builder() {}
        public Builder(FirehoseDeliveryStreamIcebergConfigurationDestinationTableConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.databaseName = defaults.databaseName;
    	      this.s3ErrorOutputPrefix = defaults.s3ErrorOutputPrefix;
    	      this.tableName = defaults.tableName;
    	      this.uniqueKeys = defaults.uniqueKeys;
        }

        @CustomType.Setter
        public Builder databaseName(String databaseName) {
            if (databaseName == null) {
              throw new MissingRequiredPropertyException("FirehoseDeliveryStreamIcebergConfigurationDestinationTableConfiguration", "databaseName");
            }
            this.databaseName = databaseName;
            return this;
        }
        @CustomType.Setter
        public Builder s3ErrorOutputPrefix(@Nullable String s3ErrorOutputPrefix) {

            this.s3ErrorOutputPrefix = s3ErrorOutputPrefix;
            return this;
        }
        @CustomType.Setter
        public Builder tableName(String tableName) {
            if (tableName == null) {
              throw new MissingRequiredPropertyException("FirehoseDeliveryStreamIcebergConfigurationDestinationTableConfiguration", "tableName");
            }
            this.tableName = tableName;
            return this;
        }
        @CustomType.Setter
        public Builder uniqueKeys(@Nullable List<String> uniqueKeys) {

            this.uniqueKeys = uniqueKeys;
            return this;
        }
        public Builder uniqueKeys(String... uniqueKeys) {
            return uniqueKeys(List.of(uniqueKeys));
        }
        public FirehoseDeliveryStreamIcebergConfigurationDestinationTableConfiguration build() {
            final var _resultValue = new FirehoseDeliveryStreamIcebergConfigurationDestinationTableConfiguration();
            _resultValue.databaseName = databaseName;
            _resultValue.s3ErrorOutputPrefix = s3ErrorOutputPrefix;
            _resultValue.tableName = tableName;
            _resultValue.uniqueKeys = uniqueKeys;
            return _resultValue;
        }
    }
}
