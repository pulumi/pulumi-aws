// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudwatch.inputs;

import com.pulumi.aws.cloudwatch.inputs.GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogs;
import com.pulumi.aws.cloudwatch.inputs.GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehose;
import com.pulumi.aws.cloudwatch.inputs.GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestination extends com.pulumi.resources.InvokeArgs {

    public static final GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestination Empty = new GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestination();

    /**
     * Configures CloudWatch Logs as a findings destination.
     * 
     */
    @Import(name="cloudwatchLogs")
    private @Nullable GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogs cloudwatchLogs;

    /**
     * @return Configures CloudWatch Logs as a findings destination.
     * 
     */
    public Optional<GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogs> cloudwatchLogs() {
        return Optional.ofNullable(this.cloudwatchLogs);
    }

    /**
     * Configures Kinesis Firehose as a findings destination.
     * 
     */
    @Import(name="firehose")
    private @Nullable GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehose firehose;

    /**
     * @return Configures Kinesis Firehose as a findings destination.
     * 
     */
    public Optional<GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehose> firehose() {
        return Optional.ofNullable(this.firehose);
    }

    /**
     * Configures S3 as a findings destination.
     * 
     */
    @Import(name="s3")
    private @Nullable GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3 s3;

    /**
     * @return Configures S3 as a findings destination.
     * 
     */
    public Optional<GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3> s3() {
        return Optional.ofNullable(this.s3);
    }

    private GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestination() {}

    private GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestination(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestination $) {
        this.cloudwatchLogs = $.cloudwatchLogs;
        this.firehose = $.firehose;
        this.s3 = $.s3;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestination defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestination $;

        public Builder() {
            $ = new GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestination();
        }

        public Builder(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestination defaults) {
            $ = new GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestination(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudwatchLogs Configures CloudWatch Logs as a findings destination.
         * 
         * @return builder
         * 
         */
        public Builder cloudwatchLogs(@Nullable GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogs cloudwatchLogs) {
            $.cloudwatchLogs = cloudwatchLogs;
            return this;
        }

        /**
         * @param firehose Configures Kinesis Firehose as a findings destination.
         * 
         * @return builder
         * 
         */
        public Builder firehose(@Nullable GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehose firehose) {
            $.firehose = firehose;
            return this;
        }

        /**
         * @param s3 Configures S3 as a findings destination.
         * 
         * @return builder
         * 
         */
        public Builder s3(@Nullable GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3 s3) {
            $.s3 = s3;
            return this;
        }

        public GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestination build() {
            return $;
        }
    }

}
