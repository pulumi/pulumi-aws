// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cognito.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class GetUserPoolDeviceConfiguration {
    /**
     * @return - Whether a challenge is required on new devices.
     * 
     */
    private Boolean challengeRequiredOnNewDevice;
    /**
     * @return - Whether devices are only remembered if the user prompts it.
     * 
     */
    private Boolean deviceOnlyRememberedOnUserPrompt;

    private GetUserPoolDeviceConfiguration() {}
    /**
     * @return - Whether a challenge is required on new devices.
     * 
     */
    public Boolean challengeRequiredOnNewDevice() {
        return this.challengeRequiredOnNewDevice;
    }
    /**
     * @return - Whether devices are only remembered if the user prompts it.
     * 
     */
    public Boolean deviceOnlyRememberedOnUserPrompt() {
        return this.deviceOnlyRememberedOnUserPrompt;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUserPoolDeviceConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean challengeRequiredOnNewDevice;
        private Boolean deviceOnlyRememberedOnUserPrompt;
        public Builder() {}
        public Builder(GetUserPoolDeviceConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.challengeRequiredOnNewDevice = defaults.challengeRequiredOnNewDevice;
    	      this.deviceOnlyRememberedOnUserPrompt = defaults.deviceOnlyRememberedOnUserPrompt;
        }

        @CustomType.Setter
        public Builder challengeRequiredOnNewDevice(Boolean challengeRequiredOnNewDevice) {
            if (challengeRequiredOnNewDevice == null) {
              throw new MissingRequiredPropertyException("GetUserPoolDeviceConfiguration", "challengeRequiredOnNewDevice");
            }
            this.challengeRequiredOnNewDevice = challengeRequiredOnNewDevice;
            return this;
        }
        @CustomType.Setter
        public Builder deviceOnlyRememberedOnUserPrompt(Boolean deviceOnlyRememberedOnUserPrompt) {
            if (deviceOnlyRememberedOnUserPrompt == null) {
              throw new MissingRequiredPropertyException("GetUserPoolDeviceConfiguration", "deviceOnlyRememberedOnUserPrompt");
            }
            this.deviceOnlyRememberedOnUserPrompt = deviceOnlyRememberedOnUserPrompt;
            return this;
        }
        public GetUserPoolDeviceConfiguration build() {
            final var _resultValue = new GetUserPoolDeviceConfiguration();
            _resultValue.challengeRequiredOnNewDevice = challengeRequiredOnNewDevice;
            _resultValue.deviceOnlyRememberedOnUserPrompt = deviceOnlyRememberedOnUserPrompt;
            return _resultValue;
        }
    }
}
