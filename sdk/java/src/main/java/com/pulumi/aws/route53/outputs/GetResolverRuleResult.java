// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.route53.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetResolverRuleResult {
    /**
     * @return ARN (Amazon Resource Name) for the resolver rule.
     * 
     */
    private String arn;
    private String domainName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String name;
    /**
     * @return When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.
     * 
     */
    private String ownerId;
    private String resolverEndpointId;
    private String resolverRuleId;
    private String ruleType;
    /**
     * @return Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.
     * Values are `NOT_SHARED`, `SHARED_BY_ME` or `SHARED_WITH_ME`
     * 
     */
    private String shareStatus;
    /**
     * @return Map of tags assigned to the resolver rule.
     * 
     */
    private Map<String,String> tags;

    private GetResolverRuleResult() {}
    /**
     * @return ARN (Amazon Resource Name) for the resolver rule.
     * 
     */
    public String arn() {
        return this.arn;
    }
    public String domainName() {
        return this.domainName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.
     * 
     */
    public String ownerId() {
        return this.ownerId;
    }
    public String resolverEndpointId() {
        return this.resolverEndpointId;
    }
    public String resolverRuleId() {
        return this.resolverRuleId;
    }
    public String ruleType() {
        return this.ruleType;
    }
    /**
     * @return Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.
     * Values are `NOT_SHARED`, `SHARED_BY_ME` or `SHARED_WITH_ME`
     * 
     */
    public String shareStatus() {
        return this.shareStatus;
    }
    /**
     * @return Map of tags assigned to the resolver rule.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResolverRuleResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private String domainName;
        private String id;
        private String name;
        private String ownerId;
        private String resolverEndpointId;
        private String resolverRuleId;
        private String ruleType;
        private String shareStatus;
        private Map<String,String> tags;
        public Builder() {}
        public Builder(GetResolverRuleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.domainName = defaults.domainName;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.ownerId = defaults.ownerId;
    	      this.resolverEndpointId = defaults.resolverEndpointId;
    	      this.resolverRuleId = defaults.resolverRuleId;
    	      this.ruleType = defaults.ruleType;
    	      this.shareStatus = defaults.shareStatus;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder domainName(String domainName) {
            this.domainName = Objects.requireNonNull(domainName);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder ownerId(String ownerId) {
            this.ownerId = Objects.requireNonNull(ownerId);
            return this;
        }
        @CustomType.Setter
        public Builder resolverEndpointId(String resolverEndpointId) {
            this.resolverEndpointId = Objects.requireNonNull(resolverEndpointId);
            return this;
        }
        @CustomType.Setter
        public Builder resolverRuleId(String resolverRuleId) {
            this.resolverRuleId = Objects.requireNonNull(resolverRuleId);
            return this;
        }
        @CustomType.Setter
        public Builder ruleType(String ruleType) {
            this.ruleType = Objects.requireNonNull(ruleType);
            return this;
        }
        @CustomType.Setter
        public Builder shareStatus(String shareStatus) {
            this.shareStatus = Objects.requireNonNull(shareStatus);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public GetResolverRuleResult build() {
            final var o = new GetResolverRuleResult();
            o.arn = arn;
            o.domainName = domainName;
            o.id = id;
            o.name = name;
            o.ownerId = ownerId;
            o.resolverEndpointId = resolverEndpointId;
            o.resolverRuleId = resolverRuleId;
            o.ruleType = ruleType;
            o.shareStatus = shareStatus;
            o.tags = tags;
            return o;
        }
    }
}
