// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.route53.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetResolverRuleResult {
    /**
     * @return ARN (Amazon Resource Name) for the resolver rule.
     * 
     */
    private @Nullable String arn;
    private @Nullable String domainName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private @Nullable String name;
    /**
     * @return When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.
     * 
     */
    private @Nullable String ownerId;
    private @Nullable String resolverEndpointId;
    private @Nullable String resolverRuleId;
    private @Nullable String ruleType;
    /**
     * @return Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.
     * Values are `NOT_SHARED`, `SHARED_BY_ME` or `SHARED_WITH_ME`
     * 
     */
    private @Nullable String shareStatus;
    /**
     * @return Map of tags assigned to the resolver rule.
     * 
     */
    private @Nullable Map<String,String> tags;

    private GetResolverRuleResult() {}
    /**
     * @return ARN (Amazon Resource Name) for the resolver rule.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    public Optional<String> domainName() {
        return Optional.ofNullable(this.domainName);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.
     * 
     */
    public Optional<String> ownerId() {
        return Optional.ofNullable(this.ownerId);
    }
    public Optional<String> resolverEndpointId() {
        return Optional.ofNullable(this.resolverEndpointId);
    }
    public Optional<String> resolverRuleId() {
        return Optional.ofNullable(this.resolverRuleId);
    }
    public Optional<String> ruleType() {
        return Optional.ofNullable(this.ruleType);
    }
    /**
     * @return Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.
     * Values are `NOT_SHARED`, `SHARED_BY_ME` or `SHARED_WITH_ME`
     * 
     */
    public Optional<String> shareStatus() {
        return Optional.ofNullable(this.shareStatus);
    }
    /**
     * @return Map of tags assigned to the resolver rule.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResolverRuleResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String domainName;
        private @Nullable String id;
        private @Nullable String name;
        private @Nullable String ownerId;
        private @Nullable String resolverEndpointId;
        private @Nullable String resolverRuleId;
        private @Nullable String ruleType;
        private @Nullable String shareStatus;
        private @Nullable Map<String,String> tags;
        public Builder() {}
        public Builder(GetResolverRuleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.domainName = defaults.domainName;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.ownerId = defaults.ownerId;
    	      this.resolverEndpointId = defaults.resolverEndpointId;
    	      this.resolverRuleId = defaults.resolverRuleId;
    	      this.ruleType = defaults.ruleType;
    	      this.shareStatus = defaults.shareStatus;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder domainName(@Nullable String domainName) {
            this.domainName = domainName;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder ownerId(@Nullable String ownerId) {
            this.ownerId = ownerId;
            return this;
        }
        @CustomType.Setter
        public Builder resolverEndpointId(@Nullable String resolverEndpointId) {
            this.resolverEndpointId = resolverEndpointId;
            return this;
        }
        @CustomType.Setter
        public Builder resolverRuleId(@Nullable String resolverRuleId) {
            this.resolverRuleId = resolverRuleId;
            return this;
        }
        @CustomType.Setter
        public Builder ruleType(@Nullable String ruleType) {
            this.ruleType = ruleType;
            return this;
        }
        @CustomType.Setter
        public Builder shareStatus(@Nullable String shareStatus) {
            this.shareStatus = shareStatus;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public GetResolverRuleResult build() {
            final var o = new GetResolverRuleResult();
            o.arn = arn;
            o.domainName = domainName;
            o.id = id;
            o.name = name;
            o.ownerId = ownerId;
            o.resolverEndpointId = resolverEndpointId;
            o.resolverRuleId = resolverRuleId;
            o.ruleType = ruleType;
            o.shareStatus = shareStatus;
            o.tags = tags;
            return o;
        }
    }
}
