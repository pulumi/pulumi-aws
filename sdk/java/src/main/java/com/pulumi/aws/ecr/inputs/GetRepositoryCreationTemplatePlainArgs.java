// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecr.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRepositoryCreationTemplatePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRepositoryCreationTemplatePlainArgs Empty = new GetRepositoryCreationTemplatePlainArgs();

    /**
     * The repository name prefix that the template matches against.
     * 
     */
    @Import(name="prefix", required=true)
    private String prefix;

    /**
     * @return The repository name prefix that the template matches against.
     * 
     */
    public String prefix() {
        return this.prefix;
    }

    /**
     * A map of tags to assign to any created repositories.
     * 
     */
    @Import(name="resourceTags")
    private @Nullable Map<String,String> resourceTags;

    /**
     * @return A map of tags to assign to any created repositories.
     * 
     */
    public Optional<Map<String,String>> resourceTags() {
        return Optional.ofNullable(this.resourceTags);
    }

    private GetRepositoryCreationTemplatePlainArgs() {}

    private GetRepositoryCreationTemplatePlainArgs(GetRepositoryCreationTemplatePlainArgs $) {
        this.prefix = $.prefix;
        this.resourceTags = $.resourceTags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRepositoryCreationTemplatePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRepositoryCreationTemplatePlainArgs $;

        public Builder() {
            $ = new GetRepositoryCreationTemplatePlainArgs();
        }

        public Builder(GetRepositoryCreationTemplatePlainArgs defaults) {
            $ = new GetRepositoryCreationTemplatePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param prefix The repository name prefix that the template matches against.
         * 
         * @return builder
         * 
         */
        public Builder prefix(String prefix) {
            $.prefix = prefix;
            return this;
        }

        /**
         * @param resourceTags A map of tags to assign to any created repositories.
         * 
         * @return builder
         * 
         */
        public Builder resourceTags(@Nullable Map<String,String> resourceTags) {
            $.resourceTags = resourceTags;
            return this;
        }

        public GetRepositoryCreationTemplatePlainArgs build() {
            if ($.prefix == null) {
                throw new MissingRequiredPropertyException("GetRepositoryCreationTemplatePlainArgs", "prefix");
            }
            return $;
        }
    }

}
