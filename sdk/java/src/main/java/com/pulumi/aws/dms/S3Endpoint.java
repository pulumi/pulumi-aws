// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dms;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.dms.S3EndpointArgs;
import com.pulumi.aws.dms.inputs.S3EndpointState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="aws:dms/s3Endpoint:S3Endpoint")
public class S3Endpoint extends com.pulumi.resources.CustomResource {
    @Export(name="addColumnName", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> addColumnName;

    public Output<Optional<Boolean>> addColumnName() {
        return Codegen.optional(this.addColumnName);
    }
    @Export(name="addTrailingPaddingCharacter", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> addTrailingPaddingCharacter;

    public Output<Optional<Boolean>> addTrailingPaddingCharacter() {
        return Codegen.optional(this.addTrailingPaddingCharacter);
    }
    @Export(name="bucketFolder", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> bucketFolder;

    public Output<Optional<String>> bucketFolder() {
        return Codegen.optional(this.bucketFolder);
    }
    @Export(name="bucketName", refs={String.class}, tree="[0]")
    private Output<String> bucketName;

    public Output<String> bucketName() {
        return this.bucketName;
    }
    @Export(name="cannedAclForObjects", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> cannedAclForObjects;

    public Output<Optional<String>> cannedAclForObjects() {
        return Codegen.optional(this.cannedAclForObjects);
    }
    @Export(name="cdcInsertsAndUpdates", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> cdcInsertsAndUpdates;

    public Output<Optional<Boolean>> cdcInsertsAndUpdates() {
        return Codegen.optional(this.cdcInsertsAndUpdates);
    }
    @Export(name="cdcInsertsOnly", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> cdcInsertsOnly;

    public Output<Optional<Boolean>> cdcInsertsOnly() {
        return Codegen.optional(this.cdcInsertsOnly);
    }
    @Export(name="cdcMaxBatchInterval", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> cdcMaxBatchInterval;

    public Output<Optional<Integer>> cdcMaxBatchInterval() {
        return Codegen.optional(this.cdcMaxBatchInterval);
    }
    @Export(name="cdcMinFileSize", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> cdcMinFileSize;

    public Output<Optional<Integer>> cdcMinFileSize() {
        return Codegen.optional(this.cdcMinFileSize);
    }
    @Export(name="cdcPath", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> cdcPath;

    public Output<Optional<String>> cdcPath() {
        return Codegen.optional(this.cdcPath);
    }
    @Export(name="certificateArn", refs={String.class}, tree="[0]")
    private Output<String> certificateArn;

    public Output<String> certificateArn() {
        return this.certificateArn;
    }
    @Export(name="compressionType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> compressionType;

    public Output<Optional<String>> compressionType() {
        return Codegen.optional(this.compressionType);
    }
    @Export(name="csvDelimiter", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> csvDelimiter;

    public Output<Optional<String>> csvDelimiter() {
        return Codegen.optional(this.csvDelimiter);
    }
    @Export(name="csvNoSupValue", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> csvNoSupValue;

    public Output<Optional<String>> csvNoSupValue() {
        return Codegen.optional(this.csvNoSupValue);
    }
    @Export(name="csvNullValue", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> csvNullValue;

    public Output<Optional<String>> csvNullValue() {
        return Codegen.optional(this.csvNullValue);
    }
    @Export(name="csvRowDelimiter", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> csvRowDelimiter;

    public Output<Optional<String>> csvRowDelimiter() {
        return Codegen.optional(this.csvRowDelimiter);
    }
    @Export(name="dataFormat", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> dataFormat;

    public Output<Optional<String>> dataFormat() {
        return Codegen.optional(this.dataFormat);
    }
    @Export(name="dataPageSize", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> dataPageSize;

    public Output<Optional<Integer>> dataPageSize() {
        return Codegen.optional(this.dataPageSize);
    }
    @Export(name="datePartitionDelimiter", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> datePartitionDelimiter;

    public Output<Optional<String>> datePartitionDelimiter() {
        return Codegen.optional(this.datePartitionDelimiter);
    }
    @Export(name="datePartitionEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> datePartitionEnabled;

    public Output<Optional<Boolean>> datePartitionEnabled() {
        return Codegen.optional(this.datePartitionEnabled);
    }
    @Export(name="datePartitionSequence", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> datePartitionSequence;

    public Output<Optional<String>> datePartitionSequence() {
        return Codegen.optional(this.datePartitionSequence);
    }
    @Export(name="datePartitionTimezone", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> datePartitionTimezone;

    public Output<Optional<String>> datePartitionTimezone() {
        return Codegen.optional(this.datePartitionTimezone);
    }
    @Export(name="dictPageSizeLimit", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> dictPageSizeLimit;

    public Output<Optional<Integer>> dictPageSizeLimit() {
        return Codegen.optional(this.dictPageSizeLimit);
    }
    @Export(name="enableStatistics", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enableStatistics;

    public Output<Optional<Boolean>> enableStatistics() {
        return Codegen.optional(this.enableStatistics);
    }
    @Export(name="encodingType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> encodingType;

    public Output<Optional<String>> encodingType() {
        return Codegen.optional(this.encodingType);
    }
    @Export(name="encryptionMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> encryptionMode;

    public Output<Optional<String>> encryptionMode() {
        return Codegen.optional(this.encryptionMode);
    }
    @Export(name="endpointArn", refs={String.class}, tree="[0]")
    private Output<String> endpointArn;

    public Output<String> endpointArn() {
        return this.endpointArn;
    }
    @Export(name="endpointId", refs={String.class}, tree="[0]")
    private Output<String> endpointId;

    public Output<String> endpointId() {
        return this.endpointId;
    }
    @Export(name="endpointType", refs={String.class}, tree="[0]")
    private Output<String> endpointType;

    public Output<String> endpointType() {
        return this.endpointType;
    }
    @Export(name="engineDisplayName", refs={String.class}, tree="[0]")
    private Output<String> engineDisplayName;

    public Output<String> engineDisplayName() {
        return this.engineDisplayName;
    }
    @Export(name="expectedBucketOwner", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> expectedBucketOwner;

    public Output<Optional<String>> expectedBucketOwner() {
        return Codegen.optional(this.expectedBucketOwner);
    }
    @Export(name="externalId", refs={String.class}, tree="[0]")
    private Output<String> externalId;

    public Output<String> externalId() {
        return this.externalId;
    }
    @Export(name="externalTableDefinition", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> externalTableDefinition;

    public Output<Optional<String>> externalTableDefinition() {
        return Codegen.optional(this.externalTableDefinition);
    }
    @Export(name="ignoreHeaderRows", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> ignoreHeaderRows;

    public Output<Optional<Integer>> ignoreHeaderRows() {
        return Codegen.optional(this.ignoreHeaderRows);
    }
    @Export(name="includeOpForFullLoad", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> includeOpForFullLoad;

    public Output<Optional<Boolean>> includeOpForFullLoad() {
        return Codegen.optional(this.includeOpForFullLoad);
    }
    @Export(name="kmsKeyArn", refs={String.class}, tree="[0]")
    private Output<String> kmsKeyArn;

    public Output<String> kmsKeyArn() {
        return this.kmsKeyArn;
    }
    @Export(name="maxFileSize", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> maxFileSize;

    public Output<Optional<Integer>> maxFileSize() {
        return Codegen.optional(this.maxFileSize);
    }
    @Export(name="parquetTimestampInMillisecond", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> parquetTimestampInMillisecond;

    public Output<Optional<Boolean>> parquetTimestampInMillisecond() {
        return Codegen.optional(this.parquetTimestampInMillisecond);
    }
    @Export(name="parquetVersion", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> parquetVersion;

    public Output<Optional<String>> parquetVersion() {
        return Codegen.optional(this.parquetVersion);
    }
    @Export(name="preserveTransactions", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> preserveTransactions;

    public Output<Optional<Boolean>> preserveTransactions() {
        return Codegen.optional(this.preserveTransactions);
    }
    @Export(name="rfc4180", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> rfc4180;

    public Output<Optional<Boolean>> rfc4180() {
        return Codegen.optional(this.rfc4180);
    }
    @Export(name="rowGroupLength", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> rowGroupLength;

    public Output<Optional<Integer>> rowGroupLength() {
        return Codegen.optional(this.rowGroupLength);
    }
    @Export(name="serverSideEncryptionKmsKeyId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> serverSideEncryptionKmsKeyId;

    public Output<Optional<String>> serverSideEncryptionKmsKeyId() {
        return Codegen.optional(this.serverSideEncryptionKmsKeyId);
    }
    @Export(name="serviceAccessRoleArn", refs={String.class}, tree="[0]")
    private Output<String> serviceAccessRoleArn;

    public Output<String> serviceAccessRoleArn() {
        return this.serviceAccessRoleArn;
    }
    @Export(name="sslMode", refs={String.class}, tree="[0]")
    private Output<String> sslMode;

    public Output<String> sslMode() {
        return this.sslMode;
    }
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    public Output<String> status() {
        return this.status;
    }
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    @Export(name="tagsAll", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll;
    }
    @Export(name="timestampColumnName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> timestampColumnName;

    public Output<Optional<String>> timestampColumnName() {
        return Codegen.optional(this.timestampColumnName);
    }
    @Export(name="useCsvNoSupValue", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> useCsvNoSupValue;

    public Output<Optional<Boolean>> useCsvNoSupValue() {
        return Codegen.optional(this.useCsvNoSupValue);
    }
    @Export(name="useTaskStartTimeForFullLoadTimestamp", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> useTaskStartTimeForFullLoadTimestamp;

    public Output<Optional<Boolean>> useTaskStartTimeForFullLoadTimestamp() {
        return Codegen.optional(this.useTaskStartTimeForFullLoadTimestamp);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public S3Endpoint(String name) {
        this(name, S3EndpointArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public S3Endpoint(String name, S3EndpointArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public S3Endpoint(String name, S3EndpointArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:dms/s3Endpoint:S3Endpoint", name, args == null ? S3EndpointArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private S3Endpoint(String name, Output<String> id, @Nullable S3EndpointState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:dms/s3Endpoint:S3Endpoint", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static S3Endpoint get(String name, Output<String> id, @Nullable S3EndpointState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new S3Endpoint(name, id, state, options);
    }
}
