// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iot.inputs;

import com.pulumi.aws.iot.inputs.ThingGroupMetadataArgs;
import com.pulumi.aws.iot.inputs.ThingGroupPropertiesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ThingGroupState extends com.pulumi.resources.ResourceArgs {

    public static final ThingGroupState Empty = new ThingGroupState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="metadatas")
    private @Nullable Output<List<ThingGroupMetadataArgs>> metadatas;

    public Optional<Output<List<ThingGroupMetadataArgs>>> metadatas() {
        return Optional.ofNullable(this.metadatas);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="parentGroupName")
    private @Nullable Output<String> parentGroupName;

    public Optional<Output<String>> parentGroupName() {
        return Optional.ofNullable(this.parentGroupName);
    }

    @Import(name="properties")
    private @Nullable Output<ThingGroupPropertiesArgs> properties;

    public Optional<Output<ThingGroupPropertiesArgs>> properties() {
        return Optional.ofNullable(this.properties);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="version")
    private @Nullable Output<Integer> version;

    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    private ThingGroupState() {}

    private ThingGroupState(ThingGroupState $) {
        this.arn = $.arn;
        this.metadatas = $.metadatas;
        this.name = $.name;
        this.parentGroupName = $.parentGroupName;
        this.properties = $.properties;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ThingGroupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ThingGroupState $;

        public Builder() {
            $ = new ThingGroupState();
        }

        public Builder(ThingGroupState defaults) {
            $ = new ThingGroupState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder metadatas(@Nullable Output<List<ThingGroupMetadataArgs>> metadatas) {
            $.metadatas = metadatas;
            return this;
        }

        public Builder metadatas(List<ThingGroupMetadataArgs> metadatas) {
            return metadatas(Output.of(metadatas));
        }

        public Builder metadatas(ThingGroupMetadataArgs... metadatas) {
            return metadatas(List.of(metadatas));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder parentGroupName(@Nullable Output<String> parentGroupName) {
            $.parentGroupName = parentGroupName;
            return this;
        }

        public Builder parentGroupName(String parentGroupName) {
            return parentGroupName(Output.of(parentGroupName));
        }

        public Builder properties(@Nullable Output<ThingGroupPropertiesArgs> properties) {
            $.properties = properties;
            return this;
        }

        public Builder properties(ThingGroupPropertiesArgs properties) {
            return properties(Output.of(properties));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public ThingGroupState build() {
            return $;
        }
    }

}
