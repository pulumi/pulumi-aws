// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.fsx.inputs;

import com.pulumi.aws.fsx.inputs.DataRepositoryAssociationS3Args;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataRepositoryAssociationState extends com.pulumi.resources.ResourceArgs {

    public static final DataRepositoryAssociationState Empty = new DataRepositoryAssociationState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="associationId")
    private @Nullable Output<String> associationId;

    public Optional<Output<String>> associationId() {
        return Optional.ofNullable(this.associationId);
    }

    @Import(name="batchImportMetaDataOnCreate")
    private @Nullable Output<Boolean> batchImportMetaDataOnCreate;

    public Optional<Output<Boolean>> batchImportMetaDataOnCreate() {
        return Optional.ofNullable(this.batchImportMetaDataOnCreate);
    }

    @Import(name="dataRepositoryPath")
    private @Nullable Output<String> dataRepositoryPath;

    public Optional<Output<String>> dataRepositoryPath() {
        return Optional.ofNullable(this.dataRepositoryPath);
    }

    @Import(name="deleteDataInFilesystem")
    private @Nullable Output<Boolean> deleteDataInFilesystem;

    public Optional<Output<Boolean>> deleteDataInFilesystem() {
        return Optional.ofNullable(this.deleteDataInFilesystem);
    }

    @Import(name="fileSystemId")
    private @Nullable Output<String> fileSystemId;

    public Optional<Output<String>> fileSystemId() {
        return Optional.ofNullable(this.fileSystemId);
    }

    @Import(name="fileSystemPath")
    private @Nullable Output<String> fileSystemPath;

    public Optional<Output<String>> fileSystemPath() {
        return Optional.ofNullable(this.fileSystemPath);
    }

    @Import(name="importedFileChunkSize")
    private @Nullable Output<Integer> importedFileChunkSize;

    public Optional<Output<Integer>> importedFileChunkSize() {
        return Optional.ofNullable(this.importedFileChunkSize);
    }

    @Import(name="s3")
    private @Nullable Output<DataRepositoryAssociationS3Args> s3;

    public Optional<Output<DataRepositoryAssociationS3Args>> s3() {
        return Optional.ofNullable(this.s3);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private DataRepositoryAssociationState() {}

    private DataRepositoryAssociationState(DataRepositoryAssociationState $) {
        this.arn = $.arn;
        this.associationId = $.associationId;
        this.batchImportMetaDataOnCreate = $.batchImportMetaDataOnCreate;
        this.dataRepositoryPath = $.dataRepositoryPath;
        this.deleteDataInFilesystem = $.deleteDataInFilesystem;
        this.fileSystemId = $.fileSystemId;
        this.fileSystemPath = $.fileSystemPath;
        this.importedFileChunkSize = $.importedFileChunkSize;
        this.s3 = $.s3;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataRepositoryAssociationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataRepositoryAssociationState $;

        public Builder() {
            $ = new DataRepositoryAssociationState();
        }

        public Builder(DataRepositoryAssociationState defaults) {
            $ = new DataRepositoryAssociationState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder associationId(@Nullable Output<String> associationId) {
            $.associationId = associationId;
            return this;
        }

        public Builder associationId(String associationId) {
            return associationId(Output.of(associationId));
        }

        public Builder batchImportMetaDataOnCreate(@Nullable Output<Boolean> batchImportMetaDataOnCreate) {
            $.batchImportMetaDataOnCreate = batchImportMetaDataOnCreate;
            return this;
        }

        public Builder batchImportMetaDataOnCreate(Boolean batchImportMetaDataOnCreate) {
            return batchImportMetaDataOnCreate(Output.of(batchImportMetaDataOnCreate));
        }

        public Builder dataRepositoryPath(@Nullable Output<String> dataRepositoryPath) {
            $.dataRepositoryPath = dataRepositoryPath;
            return this;
        }

        public Builder dataRepositoryPath(String dataRepositoryPath) {
            return dataRepositoryPath(Output.of(dataRepositoryPath));
        }

        public Builder deleteDataInFilesystem(@Nullable Output<Boolean> deleteDataInFilesystem) {
            $.deleteDataInFilesystem = deleteDataInFilesystem;
            return this;
        }

        public Builder deleteDataInFilesystem(Boolean deleteDataInFilesystem) {
            return deleteDataInFilesystem(Output.of(deleteDataInFilesystem));
        }

        public Builder fileSystemId(@Nullable Output<String> fileSystemId) {
            $.fileSystemId = fileSystemId;
            return this;
        }

        public Builder fileSystemId(String fileSystemId) {
            return fileSystemId(Output.of(fileSystemId));
        }

        public Builder fileSystemPath(@Nullable Output<String> fileSystemPath) {
            $.fileSystemPath = fileSystemPath;
            return this;
        }

        public Builder fileSystemPath(String fileSystemPath) {
            return fileSystemPath(Output.of(fileSystemPath));
        }

        public Builder importedFileChunkSize(@Nullable Output<Integer> importedFileChunkSize) {
            $.importedFileChunkSize = importedFileChunkSize;
            return this;
        }

        public Builder importedFileChunkSize(Integer importedFileChunkSize) {
            return importedFileChunkSize(Output.of(importedFileChunkSize));
        }

        public Builder s3(@Nullable Output<DataRepositoryAssociationS3Args> s3) {
            $.s3 = s3;
            return this;
        }

        public Builder s3(DataRepositoryAssociationS3Args s3) {
            return s3(Output.of(s3));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public DataRepositoryAssociationState build() {
            return $;
        }
    }

}
