// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kinesis.inputs;

import com.pulumi.aws.kinesis.inputs.FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs;
import com.pulumi.aws.kinesis.inputs.FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs;
import com.pulumi.aws.kinesis.inputs.FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationArgs;
import com.pulumi.aws.kinesis.inputs.FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs;
import com.pulumi.aws.kinesis.inputs.FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FirehoseDeliveryStreamExtendedS3ConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final FirehoseDeliveryStreamExtendedS3ConfigurationArgs Empty = new FirehoseDeliveryStreamExtendedS3ConfigurationArgs();

    @Import(name="bucketArn", required=true)
    private Output<String> bucketArn;

    public Output<String> bucketArn() {
        return this.bucketArn;
    }

    @Import(name="bufferInterval")
    private @Nullable Output<Integer> bufferInterval;

    public Optional<Output<Integer>> bufferInterval() {
        return Optional.ofNullable(this.bufferInterval);
    }

    @Import(name="bufferSize")
    private @Nullable Output<Integer> bufferSize;

    public Optional<Output<Integer>> bufferSize() {
        return Optional.ofNullable(this.bufferSize);
    }

    @Import(name="cloudwatchLoggingOptions")
    private @Nullable Output<FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs> cloudwatchLoggingOptions;

    public Optional<Output<FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs>> cloudwatchLoggingOptions() {
        return Optional.ofNullable(this.cloudwatchLoggingOptions);
    }

    @Import(name="compressionFormat")
    private @Nullable Output<String> compressionFormat;

    public Optional<Output<String>> compressionFormat() {
        return Optional.ofNullable(this.compressionFormat);
    }

    @Import(name="dataFormatConversionConfiguration")
    private @Nullable Output<FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs> dataFormatConversionConfiguration;

    public Optional<Output<FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs>> dataFormatConversionConfiguration() {
        return Optional.ofNullable(this.dataFormatConversionConfiguration);
    }

    @Import(name="dynamicPartitioningConfiguration")
    private @Nullable Output<FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationArgs> dynamicPartitioningConfiguration;

    public Optional<Output<FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationArgs>> dynamicPartitioningConfiguration() {
        return Optional.ofNullable(this.dynamicPartitioningConfiguration);
    }

    @Import(name="errorOutputPrefix")
    private @Nullable Output<String> errorOutputPrefix;

    public Optional<Output<String>> errorOutputPrefix() {
        return Optional.ofNullable(this.errorOutputPrefix);
    }

    @Import(name="kmsKeyArn")
    private @Nullable Output<String> kmsKeyArn;

    public Optional<Output<String>> kmsKeyArn() {
        return Optional.ofNullable(this.kmsKeyArn);
    }

    @Import(name="prefix")
    private @Nullable Output<String> prefix;

    public Optional<Output<String>> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    @Import(name="processingConfiguration")
    private @Nullable Output<FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs> processingConfiguration;

    public Optional<Output<FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs>> processingConfiguration() {
        return Optional.ofNullable(this.processingConfiguration);
    }

    @Import(name="roleArn", required=true)
    private Output<String> roleArn;

    public Output<String> roleArn() {
        return this.roleArn;
    }

    @Import(name="s3BackupConfiguration")
    private @Nullable Output<FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs> s3BackupConfiguration;

    public Optional<Output<FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs>> s3BackupConfiguration() {
        return Optional.ofNullable(this.s3BackupConfiguration);
    }

    @Import(name="s3BackupMode")
    private @Nullable Output<String> s3BackupMode;

    public Optional<Output<String>> s3BackupMode() {
        return Optional.ofNullable(this.s3BackupMode);
    }

    private FirehoseDeliveryStreamExtendedS3ConfigurationArgs() {}

    private FirehoseDeliveryStreamExtendedS3ConfigurationArgs(FirehoseDeliveryStreamExtendedS3ConfigurationArgs $) {
        this.bucketArn = $.bucketArn;
        this.bufferInterval = $.bufferInterval;
        this.bufferSize = $.bufferSize;
        this.cloudwatchLoggingOptions = $.cloudwatchLoggingOptions;
        this.compressionFormat = $.compressionFormat;
        this.dataFormatConversionConfiguration = $.dataFormatConversionConfiguration;
        this.dynamicPartitioningConfiguration = $.dynamicPartitioningConfiguration;
        this.errorOutputPrefix = $.errorOutputPrefix;
        this.kmsKeyArn = $.kmsKeyArn;
        this.prefix = $.prefix;
        this.processingConfiguration = $.processingConfiguration;
        this.roleArn = $.roleArn;
        this.s3BackupConfiguration = $.s3BackupConfiguration;
        this.s3BackupMode = $.s3BackupMode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirehoseDeliveryStreamExtendedS3ConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirehoseDeliveryStreamExtendedS3ConfigurationArgs $;

        public Builder() {
            $ = new FirehoseDeliveryStreamExtendedS3ConfigurationArgs();
        }

        public Builder(FirehoseDeliveryStreamExtendedS3ConfigurationArgs defaults) {
            $ = new FirehoseDeliveryStreamExtendedS3ConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder bucketArn(Output<String> bucketArn) {
            $.bucketArn = bucketArn;
            return this;
        }

        public Builder bucketArn(String bucketArn) {
            return bucketArn(Output.of(bucketArn));
        }

        public Builder bufferInterval(@Nullable Output<Integer> bufferInterval) {
            $.bufferInterval = bufferInterval;
            return this;
        }

        public Builder bufferInterval(Integer bufferInterval) {
            return bufferInterval(Output.of(bufferInterval));
        }

        public Builder bufferSize(@Nullable Output<Integer> bufferSize) {
            $.bufferSize = bufferSize;
            return this;
        }

        public Builder bufferSize(Integer bufferSize) {
            return bufferSize(Output.of(bufferSize));
        }

        public Builder cloudwatchLoggingOptions(@Nullable Output<FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs> cloudwatchLoggingOptions) {
            $.cloudwatchLoggingOptions = cloudwatchLoggingOptions;
            return this;
        }

        public Builder cloudwatchLoggingOptions(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs cloudwatchLoggingOptions) {
            return cloudwatchLoggingOptions(Output.of(cloudwatchLoggingOptions));
        }

        public Builder compressionFormat(@Nullable Output<String> compressionFormat) {
            $.compressionFormat = compressionFormat;
            return this;
        }

        public Builder compressionFormat(String compressionFormat) {
            return compressionFormat(Output.of(compressionFormat));
        }

        public Builder dataFormatConversionConfiguration(@Nullable Output<FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs> dataFormatConversionConfiguration) {
            $.dataFormatConversionConfiguration = dataFormatConversionConfiguration;
            return this;
        }

        public Builder dataFormatConversionConfiguration(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs dataFormatConversionConfiguration) {
            return dataFormatConversionConfiguration(Output.of(dataFormatConversionConfiguration));
        }

        public Builder dynamicPartitioningConfiguration(@Nullable Output<FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationArgs> dynamicPartitioningConfiguration) {
            $.dynamicPartitioningConfiguration = dynamicPartitioningConfiguration;
            return this;
        }

        public Builder dynamicPartitioningConfiguration(FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationArgs dynamicPartitioningConfiguration) {
            return dynamicPartitioningConfiguration(Output.of(dynamicPartitioningConfiguration));
        }

        public Builder errorOutputPrefix(@Nullable Output<String> errorOutputPrefix) {
            $.errorOutputPrefix = errorOutputPrefix;
            return this;
        }

        public Builder errorOutputPrefix(String errorOutputPrefix) {
            return errorOutputPrefix(Output.of(errorOutputPrefix));
        }

        public Builder kmsKeyArn(@Nullable Output<String> kmsKeyArn) {
            $.kmsKeyArn = kmsKeyArn;
            return this;
        }

        public Builder kmsKeyArn(String kmsKeyArn) {
            return kmsKeyArn(Output.of(kmsKeyArn));
        }

        public Builder prefix(@Nullable Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        public Builder processingConfiguration(@Nullable Output<FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs> processingConfiguration) {
            $.processingConfiguration = processingConfiguration;
            return this;
        }

        public Builder processingConfiguration(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs processingConfiguration) {
            return processingConfiguration(Output.of(processingConfiguration));
        }

        public Builder roleArn(Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public Builder s3BackupConfiguration(@Nullable Output<FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs> s3BackupConfiguration) {
            $.s3BackupConfiguration = s3BackupConfiguration;
            return this;
        }

        public Builder s3BackupConfiguration(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs s3BackupConfiguration) {
            return s3BackupConfiguration(Output.of(s3BackupConfiguration));
        }

        public Builder s3BackupMode(@Nullable Output<String> s3BackupMode) {
            $.s3BackupMode = s3BackupMode;
            return this;
        }

        public Builder s3BackupMode(String s3BackupMode) {
            return s3BackupMode(Output.of(s3BackupMode));
        }

        public FirehoseDeliveryStreamExtendedS3ConfigurationArgs build() {
            $.bucketArn = Objects.requireNonNull($.bucketArn, "expected parameter 'bucketArn' to be non-null");
            $.roleArn = Objects.requireNonNull($.roleArn, "expected parameter 'roleArn' to be non-null");
            return $;
        }
    }

}
