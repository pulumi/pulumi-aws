// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.msk.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConfigurationState extends com.pulumi.resources.ResourceArgs {

    public static final ConfigurationState Empty = new ConfigurationState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="kafkaVersions")
    private @Nullable Output<List<String>> kafkaVersions;

    public Optional<Output<List<String>>> kafkaVersions() {
        return Optional.ofNullable(this.kafkaVersions);
    }

    @Import(name="latestRevision")
    private @Nullable Output<Integer> latestRevision;

    public Optional<Output<Integer>> latestRevision() {
        return Optional.ofNullable(this.latestRevision);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="serverProperties")
    private @Nullable Output<String> serverProperties;

    public Optional<Output<String>> serverProperties() {
        return Optional.ofNullable(this.serverProperties);
    }

    private ConfigurationState() {}

    private ConfigurationState(ConfigurationState $) {
        this.arn = $.arn;
        this.description = $.description;
        this.kafkaVersions = $.kafkaVersions;
        this.latestRevision = $.latestRevision;
        this.name = $.name;
        this.serverProperties = $.serverProperties;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigurationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigurationState $;

        public Builder() {
            $ = new ConfigurationState();
        }

        public Builder(ConfigurationState defaults) {
            $ = new ConfigurationState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder kafkaVersions(@Nullable Output<List<String>> kafkaVersions) {
            $.kafkaVersions = kafkaVersions;
            return this;
        }

        public Builder kafkaVersions(List<String> kafkaVersions) {
            return kafkaVersions(Output.of(kafkaVersions));
        }

        public Builder kafkaVersions(String... kafkaVersions) {
            return kafkaVersions(List.of(kafkaVersions));
        }

        public Builder latestRevision(@Nullable Output<Integer> latestRevision) {
            $.latestRevision = latestRevision;
            return this;
        }

        public Builder latestRevision(Integer latestRevision) {
            return latestRevision(Output.of(latestRevision));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder serverProperties(@Nullable Output<String> serverProperties) {
            $.serverProperties = serverProperties;
            return this;
        }

        public Builder serverProperties(String serverProperties) {
            return serverProperties(Output.of(serverProperties));
        }

        public ConfigurationState build() {
            return $;
        }
    }

}
