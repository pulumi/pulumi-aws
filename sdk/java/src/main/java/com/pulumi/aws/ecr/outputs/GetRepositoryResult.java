// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecr.outputs;

import com.pulumi.aws.ecr.outputs.GetRepositoryEncryptionConfiguration;
import com.pulumi.aws.ecr.outputs.GetRepositoryImageScanningConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRepositoryResult {
    /**
     * @return Full ARN of the repository.
     * 
     */
    private @Nullable String arn;
    /**
     * @return Encryption configuration for the repository. See Encryption Configuration below.
     * 
     */
    private @Nullable List<GetRepositoryEncryptionConfiguration> encryptionConfigurations;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return Configuration block that defines image scanning configuration for the repository. See Image Scanning Configuration below.
     * 
     */
    private @Nullable List<GetRepositoryImageScanningConfiguration> imageScanningConfigurations;
    /**
     * @return The tag mutability setting for the repository.
     * 
     */
    private @Nullable String imageTagMutability;
    /**
     * @return List of image tags associated with the most recently pushed image in the repository.
     * 
     */
    private @Nullable List<String> mostRecentImageTags;
    private String name;
    private @Nullable String registryId;
    /**
     * @return URL of the repository (in the form `aws_account_id.dkr.ecr.region.amazonaws.com/repositoryName`).
     * 
     */
    private @Nullable String repositoryUrl;
    /**
     * @return Map of tags assigned to the resource.
     * 
     */
    private @Nullable Map<String,String> tags;

    private GetRepositoryResult() {}
    /**
     * @return Full ARN of the repository.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return Encryption configuration for the repository. See Encryption Configuration below.
     * 
     */
    public List<GetRepositoryEncryptionConfiguration> encryptionConfigurations() {
        return this.encryptionConfigurations == null ? List.of() : this.encryptionConfigurations;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Configuration block that defines image scanning configuration for the repository. See Image Scanning Configuration below.
     * 
     */
    public List<GetRepositoryImageScanningConfiguration> imageScanningConfigurations() {
        return this.imageScanningConfigurations == null ? List.of() : this.imageScanningConfigurations;
    }
    /**
     * @return The tag mutability setting for the repository.
     * 
     */
    public Optional<String> imageTagMutability() {
        return Optional.ofNullable(this.imageTagMutability);
    }
    /**
     * @return List of image tags associated with the most recently pushed image in the repository.
     * 
     */
    public List<String> mostRecentImageTags() {
        return this.mostRecentImageTags == null ? List.of() : this.mostRecentImageTags;
    }
    public String name() {
        return this.name;
    }
    public Optional<String> registryId() {
        return Optional.ofNullable(this.registryId);
    }
    /**
     * @return URL of the repository (in the form `aws_account_id.dkr.ecr.region.amazonaws.com/repositoryName`).
     * 
     */
    public Optional<String> repositoryUrl() {
        return Optional.ofNullable(this.repositoryUrl);
    }
    /**
     * @return Map of tags assigned to the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRepositoryResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable List<GetRepositoryEncryptionConfiguration> encryptionConfigurations;
        private @Nullable String id;
        private @Nullable List<GetRepositoryImageScanningConfiguration> imageScanningConfigurations;
        private @Nullable String imageTagMutability;
        private @Nullable List<String> mostRecentImageTags;
        private String name;
        private @Nullable String registryId;
        private @Nullable String repositoryUrl;
        private @Nullable Map<String,String> tags;
        public Builder() {}
        public Builder(GetRepositoryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.encryptionConfigurations = defaults.encryptionConfigurations;
    	      this.id = defaults.id;
    	      this.imageScanningConfigurations = defaults.imageScanningConfigurations;
    	      this.imageTagMutability = defaults.imageTagMutability;
    	      this.mostRecentImageTags = defaults.mostRecentImageTags;
    	      this.name = defaults.name;
    	      this.registryId = defaults.registryId;
    	      this.repositoryUrl = defaults.repositoryUrl;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder encryptionConfigurations(@Nullable List<GetRepositoryEncryptionConfiguration> encryptionConfigurations) {
            this.encryptionConfigurations = encryptionConfigurations;
            return this;
        }
        public Builder encryptionConfigurations(GetRepositoryEncryptionConfiguration... encryptionConfigurations) {
            return encryptionConfigurations(List.of(encryptionConfigurations));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder imageScanningConfigurations(@Nullable List<GetRepositoryImageScanningConfiguration> imageScanningConfigurations) {
            this.imageScanningConfigurations = imageScanningConfigurations;
            return this;
        }
        public Builder imageScanningConfigurations(GetRepositoryImageScanningConfiguration... imageScanningConfigurations) {
            return imageScanningConfigurations(List.of(imageScanningConfigurations));
        }
        @CustomType.Setter
        public Builder imageTagMutability(@Nullable String imageTagMutability) {
            this.imageTagMutability = imageTagMutability;
            return this;
        }
        @CustomType.Setter
        public Builder mostRecentImageTags(@Nullable List<String> mostRecentImageTags) {
            this.mostRecentImageTags = mostRecentImageTags;
            return this;
        }
        public Builder mostRecentImageTags(String... mostRecentImageTags) {
            return mostRecentImageTags(List.of(mostRecentImageTags));
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder registryId(@Nullable String registryId) {
            this.registryId = registryId;
            return this;
        }
        @CustomType.Setter
        public Builder repositoryUrl(@Nullable String repositoryUrl) {
            this.repositoryUrl = repositoryUrl;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public GetRepositoryResult build() {
            final var o = new GetRepositoryResult();
            o.arn = arn;
            o.encryptionConfigurations = encryptionConfigurations;
            o.id = id;
            o.imageScanningConfigurations = imageScanningConfigurations;
            o.imageTagMutability = imageTagMutability;
            o.mostRecentImageTags = mostRecentImageTags;
            o.name = name;
            o.registryId = registryId;
            o.repositoryUrl = repositoryUrl;
            o.tags = tags;
            return o;
        }
    }
}
