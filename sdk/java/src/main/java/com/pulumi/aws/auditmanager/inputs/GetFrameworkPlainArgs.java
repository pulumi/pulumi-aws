// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.auditmanager.inputs;

import com.pulumi.aws.auditmanager.inputs.GetFrameworkControlSet;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetFrameworkPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetFrameworkPlainArgs Empty = new GetFrameworkPlainArgs();

    @Import(name="controlSets")
    private @Nullable List<GetFrameworkControlSet> controlSets;

    public Optional<List<GetFrameworkControlSet>> controlSets() {
        return Optional.ofNullable(this.controlSets);
    }

    @Import(name="frameworkType", required=true)
    private String frameworkType;

    public String frameworkType() {
        return this.frameworkType;
    }

    /**
     * Name of the framework.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return Name of the framework.
     * 
     */
    public String name() {
        return this.name;
    }

    private GetFrameworkPlainArgs() {}

    private GetFrameworkPlainArgs(GetFrameworkPlainArgs $) {
        this.controlSets = $.controlSets;
        this.frameworkType = $.frameworkType;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFrameworkPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFrameworkPlainArgs $;

        public Builder() {
            $ = new GetFrameworkPlainArgs();
        }

        public Builder(GetFrameworkPlainArgs defaults) {
            $ = new GetFrameworkPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder controlSets(@Nullable List<GetFrameworkControlSet> controlSets) {
            $.controlSets = controlSets;
            return this;
        }

        public Builder controlSets(GetFrameworkControlSet... controlSets) {
            return controlSets(List.of(controlSets));
        }

        public Builder frameworkType(String frameworkType) {
            $.frameworkType = frameworkType;
            return this;
        }

        /**
         * @param name Name of the framework.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public GetFrameworkPlainArgs build() {
            if ($.frameworkType == null) {
                throw new MissingRequiredPropertyException("GetFrameworkPlainArgs", "frameworkType");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetFrameworkPlainArgs", "name");
            }
            return $;
        }
    }

}
