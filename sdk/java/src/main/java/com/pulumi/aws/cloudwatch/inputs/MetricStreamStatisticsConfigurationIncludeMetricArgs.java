// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudwatch.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class MetricStreamStatisticsConfigurationIncludeMetricArgs extends com.pulumi.resources.ResourceArgs {

    public static final MetricStreamStatisticsConfigurationIncludeMetricArgs Empty = new MetricStreamStatisticsConfigurationIncludeMetricArgs();

    /**
     * The name of the metric.
     * 
     */
    @Import(name="metricName", required=true)
    private Output<String> metricName;

    /**
     * @return The name of the metric.
     * 
     */
    public Output<String> metricName() {
        return this.metricName;
    }

    /**
     * Name of the metric namespace in the filter.
     * 
     */
    @Import(name="namespace", required=true)
    private Output<String> namespace;

    /**
     * @return Name of the metric namespace in the filter.
     * 
     */
    public Output<String> namespace() {
        return this.namespace;
    }

    private MetricStreamStatisticsConfigurationIncludeMetricArgs() {}

    private MetricStreamStatisticsConfigurationIncludeMetricArgs(MetricStreamStatisticsConfigurationIncludeMetricArgs $) {
        this.metricName = $.metricName;
        this.namespace = $.namespace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MetricStreamStatisticsConfigurationIncludeMetricArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MetricStreamStatisticsConfigurationIncludeMetricArgs $;

        public Builder() {
            $ = new MetricStreamStatisticsConfigurationIncludeMetricArgs();
        }

        public Builder(MetricStreamStatisticsConfigurationIncludeMetricArgs defaults) {
            $ = new MetricStreamStatisticsConfigurationIncludeMetricArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param metricName The name of the metric.
         * 
         * @return builder
         * 
         */
        public Builder metricName(Output<String> metricName) {
            $.metricName = metricName;
            return this;
        }

        /**
         * @param metricName The name of the metric.
         * 
         * @return builder
         * 
         */
        public Builder metricName(String metricName) {
            return metricName(Output.of(metricName));
        }

        /**
         * @param namespace Name of the metric namespace in the filter.
         * 
         * @return builder
         * 
         */
        public Builder namespace(Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace Name of the metric namespace in the filter.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        public MetricStreamStatisticsConfigurationIncludeMetricArgs build() {
            $.metricName = Objects.requireNonNull($.metricName, "expected parameter 'metricName' to be non-null");
            $.namespace = Objects.requireNonNull($.namespace, "expected parameter 'namespace' to be non-null");
            return $;
        }
    }

}
