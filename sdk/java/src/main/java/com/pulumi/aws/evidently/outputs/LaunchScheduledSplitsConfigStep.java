// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.evidently.outputs;

import com.pulumi.aws.evidently.outputs.LaunchScheduledSplitsConfigStepSegmentOverride;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class LaunchScheduledSplitsConfigStep {
    /**
     * @return The traffic allocation percentages among the feature variations during one step of a launch. This is a set of key-value pairs. The keys are variation names. The values represent the percentage of traffic to allocate to that variation during this step. For more information, refer to the [AWS documentation for ScheduledSplitConfig groupWeights](https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_ScheduledSplitConfig.html).
     * 
     */
    private Map<String,Integer> groupWeights;
    /**
     * @return One or up to six blocks that specify different traffic splits for one or more audience segments. A segment is a portion of your audience that share one or more characteristics. Examples could be Chrome browser users, users in Europe, or Firefox browser users in Europe who also fit other criteria that your application collects, such as age. Detailed below.
     * 
     */
    private @Nullable List<LaunchScheduledSplitsConfigStepSegmentOverride> segmentOverrides;
    /**
     * @return Specifies the date and time that this step of the launch starts.
     * 
     */
    private String startTime;

    private LaunchScheduledSplitsConfigStep() {}
    /**
     * @return The traffic allocation percentages among the feature variations during one step of a launch. This is a set of key-value pairs. The keys are variation names. The values represent the percentage of traffic to allocate to that variation during this step. For more information, refer to the [AWS documentation for ScheduledSplitConfig groupWeights](https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_ScheduledSplitConfig.html).
     * 
     */
    public Map<String,Integer> groupWeights() {
        return this.groupWeights;
    }
    /**
     * @return One or up to six blocks that specify different traffic splits for one or more audience segments. A segment is a portion of your audience that share one or more characteristics. Examples could be Chrome browser users, users in Europe, or Firefox browser users in Europe who also fit other criteria that your application collects, such as age. Detailed below.
     * 
     */
    public List<LaunchScheduledSplitsConfigStepSegmentOverride> segmentOverrides() {
        return this.segmentOverrides == null ? List.of() : this.segmentOverrides;
    }
    /**
     * @return Specifies the date and time that this step of the launch starts.
     * 
     */
    public String startTime() {
        return this.startTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LaunchScheduledSplitsConfigStep defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,Integer> groupWeights;
        private @Nullable List<LaunchScheduledSplitsConfigStepSegmentOverride> segmentOverrides;
        private String startTime;
        public Builder() {}
        public Builder(LaunchScheduledSplitsConfigStep defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.groupWeights = defaults.groupWeights;
    	      this.segmentOverrides = defaults.segmentOverrides;
    	      this.startTime = defaults.startTime;
        }

        @CustomType.Setter
        public Builder groupWeights(Map<String,Integer> groupWeights) {
            if (groupWeights == null) {
              throw new MissingRequiredPropertyException("LaunchScheduledSplitsConfigStep", "groupWeights");
            }
            this.groupWeights = groupWeights;
            return this;
        }
        @CustomType.Setter
        public Builder segmentOverrides(@Nullable List<LaunchScheduledSplitsConfigStepSegmentOverride> segmentOverrides) {

            this.segmentOverrides = segmentOverrides;
            return this;
        }
        public Builder segmentOverrides(LaunchScheduledSplitsConfigStepSegmentOverride... segmentOverrides) {
            return segmentOverrides(List.of(segmentOverrides));
        }
        @CustomType.Setter
        public Builder startTime(String startTime) {
            if (startTime == null) {
              throw new MissingRequiredPropertyException("LaunchScheduledSplitsConfigStep", "startTime");
            }
            this.startTime = startTime;
            return this;
        }
        public LaunchScheduledSplitsConfigStep build() {
            final var _resultValue = new LaunchScheduledSplitsConfigStep();
            _resultValue.groupWeights = groupWeights;
            _resultValue.segmentOverrides = segmentOverrides;
            _resultValue.startTime = startTime;
            return _resultValue;
        }
    }
}
