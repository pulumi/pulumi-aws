// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.wafv2.inputs;

import com.pulumi.aws.wafv2.inputs.WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionArgs;
import com.pulumi.aws.wafv2.inputs.WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetArgs Empty = new WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetArgs();

    /**
     * Whether or not to allow the use of regular expressions in the login page path.
     * 
     */
    @Import(name="enableRegexInPath")
    private @Nullable Output<Boolean> enableRegexInPath;

    /**
     * @return Whether or not to allow the use of regular expressions in the login page path.
     * 
     */
    public Optional<Output<Boolean>> enableRegexInPath() {
        return Optional.ofNullable(this.enableRegexInPath);
    }

    /**
     * The path of the login endpoint for your application.
     * 
     */
    @Import(name="loginPath", required=true)
    private Output<String> loginPath;

    /**
     * @return The path of the login endpoint for your application.
     * 
     */
    public Output<String> loginPath() {
        return this.loginPath;
    }

    /**
     * The criteria for inspecting login requests, used by the ATP rule group to validate credentials usage. See `request_inspection` for more details.
     * 
     */
    @Import(name="requestInspection")
    private @Nullable Output<WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionArgs> requestInspection;

    /**
     * @return The criteria for inspecting login requests, used by the ATP rule group to validate credentials usage. See `request_inspection` for more details.
     * 
     */
    public Optional<Output<WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionArgs>> requestInspection() {
        return Optional.ofNullable(this.requestInspection);
    }

    /**
     * The criteria for inspecting responses to login requests, used by the ATP rule group to track login failure rates. Note that Response Inspection is available only on web ACLs that protect CloudFront distributions. See `response_inspection` for more details.
     * 
     */
    @Import(name="responseInspection")
    private @Nullable Output<WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionArgs> responseInspection;

    /**
     * @return The criteria for inspecting responses to login requests, used by the ATP rule group to track login failure rates. Note that Response Inspection is available only on web ACLs that protect CloudFront distributions. See `response_inspection` for more details.
     * 
     */
    public Optional<Output<WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionArgs>> responseInspection() {
        return Optional.ofNullable(this.responseInspection);
    }

    private WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetArgs() {}

    private WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetArgs(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetArgs $) {
        this.enableRegexInPath = $.enableRegexInPath;
        this.loginPath = $.loginPath;
        this.requestInspection = $.requestInspection;
        this.responseInspection = $.responseInspection;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetArgs $;

        public Builder() {
            $ = new WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetArgs();
        }

        public Builder(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetArgs defaults) {
            $ = new WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enableRegexInPath Whether or not to allow the use of regular expressions in the login page path.
         * 
         * @return builder
         * 
         */
        public Builder enableRegexInPath(@Nullable Output<Boolean> enableRegexInPath) {
            $.enableRegexInPath = enableRegexInPath;
            return this;
        }

        /**
         * @param enableRegexInPath Whether or not to allow the use of regular expressions in the login page path.
         * 
         * @return builder
         * 
         */
        public Builder enableRegexInPath(Boolean enableRegexInPath) {
            return enableRegexInPath(Output.of(enableRegexInPath));
        }

        /**
         * @param loginPath The path of the login endpoint for your application.
         * 
         * @return builder
         * 
         */
        public Builder loginPath(Output<String> loginPath) {
            $.loginPath = loginPath;
            return this;
        }

        /**
         * @param loginPath The path of the login endpoint for your application.
         * 
         * @return builder
         * 
         */
        public Builder loginPath(String loginPath) {
            return loginPath(Output.of(loginPath));
        }

        /**
         * @param requestInspection The criteria for inspecting login requests, used by the ATP rule group to validate credentials usage. See `request_inspection` for more details.
         * 
         * @return builder
         * 
         */
        public Builder requestInspection(@Nullable Output<WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionArgs> requestInspection) {
            $.requestInspection = requestInspection;
            return this;
        }

        /**
         * @param requestInspection The criteria for inspecting login requests, used by the ATP rule group to validate credentials usage. See `request_inspection` for more details.
         * 
         * @return builder
         * 
         */
        public Builder requestInspection(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionArgs requestInspection) {
            return requestInspection(Output.of(requestInspection));
        }

        /**
         * @param responseInspection The criteria for inspecting responses to login requests, used by the ATP rule group to track login failure rates. Note that Response Inspection is available only on web ACLs that protect CloudFront distributions. See `response_inspection` for more details.
         * 
         * @return builder
         * 
         */
        public Builder responseInspection(@Nullable Output<WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionArgs> responseInspection) {
            $.responseInspection = responseInspection;
            return this;
        }

        /**
         * @param responseInspection The criteria for inspecting responses to login requests, used by the ATP rule group to track login failure rates. Note that Response Inspection is available only on web ACLs that protect CloudFront distributions. See `response_inspection` for more details.
         * 
         * @return builder
         * 
         */
        public Builder responseInspection(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionArgs responseInspection) {
            return responseInspection(Output.of(responseInspection));
        }

        public WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetArgs build() {
            if ($.loginPath == null) {
                throw new MissingRequiredPropertyException("WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetArgs", "loginPath");
            }
            return $;
        }
    }

}
