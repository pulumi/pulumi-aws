// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.emr.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedScalingPolicyComputeLimitArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedScalingPolicyComputeLimitArgs Empty = new ManagedScalingPolicyComputeLimitArgs();

    @Import(name="maximumCapacityUnits", required=true)
    private Output<Integer> maximumCapacityUnits;

    public Output<Integer> maximumCapacityUnits() {
        return this.maximumCapacityUnits;
    }

    @Import(name="maximumCoreCapacityUnits")
    private @Nullable Output<Integer> maximumCoreCapacityUnits;

    public Optional<Output<Integer>> maximumCoreCapacityUnits() {
        return Optional.ofNullable(this.maximumCoreCapacityUnits);
    }

    @Import(name="maximumOndemandCapacityUnits")
    private @Nullable Output<Integer> maximumOndemandCapacityUnits;

    public Optional<Output<Integer>> maximumOndemandCapacityUnits() {
        return Optional.ofNullable(this.maximumOndemandCapacityUnits);
    }

    @Import(name="minimumCapacityUnits", required=true)
    private Output<Integer> minimumCapacityUnits;

    public Output<Integer> minimumCapacityUnits() {
        return this.minimumCapacityUnits;
    }

    @Import(name="unitType", required=true)
    private Output<String> unitType;

    public Output<String> unitType() {
        return this.unitType;
    }

    private ManagedScalingPolicyComputeLimitArgs() {}

    private ManagedScalingPolicyComputeLimitArgs(ManagedScalingPolicyComputeLimitArgs $) {
        this.maximumCapacityUnits = $.maximumCapacityUnits;
        this.maximumCoreCapacityUnits = $.maximumCoreCapacityUnits;
        this.maximumOndemandCapacityUnits = $.maximumOndemandCapacityUnits;
        this.minimumCapacityUnits = $.minimumCapacityUnits;
        this.unitType = $.unitType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedScalingPolicyComputeLimitArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedScalingPolicyComputeLimitArgs $;

        public Builder() {
            $ = new ManagedScalingPolicyComputeLimitArgs();
        }

        public Builder(ManagedScalingPolicyComputeLimitArgs defaults) {
            $ = new ManagedScalingPolicyComputeLimitArgs(Objects.requireNonNull(defaults));
        }

        public Builder maximumCapacityUnits(Output<Integer> maximumCapacityUnits) {
            $.maximumCapacityUnits = maximumCapacityUnits;
            return this;
        }

        public Builder maximumCapacityUnits(Integer maximumCapacityUnits) {
            return maximumCapacityUnits(Output.of(maximumCapacityUnits));
        }

        public Builder maximumCoreCapacityUnits(@Nullable Output<Integer> maximumCoreCapacityUnits) {
            $.maximumCoreCapacityUnits = maximumCoreCapacityUnits;
            return this;
        }

        public Builder maximumCoreCapacityUnits(Integer maximumCoreCapacityUnits) {
            return maximumCoreCapacityUnits(Output.of(maximumCoreCapacityUnits));
        }

        public Builder maximumOndemandCapacityUnits(@Nullable Output<Integer> maximumOndemandCapacityUnits) {
            $.maximumOndemandCapacityUnits = maximumOndemandCapacityUnits;
            return this;
        }

        public Builder maximumOndemandCapacityUnits(Integer maximumOndemandCapacityUnits) {
            return maximumOndemandCapacityUnits(Output.of(maximumOndemandCapacityUnits));
        }

        public Builder minimumCapacityUnits(Output<Integer> minimumCapacityUnits) {
            $.minimumCapacityUnits = minimumCapacityUnits;
            return this;
        }

        public Builder minimumCapacityUnits(Integer minimumCapacityUnits) {
            return minimumCapacityUnits(Output.of(minimumCapacityUnits));
        }

        public Builder unitType(Output<String> unitType) {
            $.unitType = unitType;
            return this;
        }

        public Builder unitType(String unitType) {
            return unitType(Output.of(unitType));
        }

        public ManagedScalingPolicyComputeLimitArgs build() {
            $.maximumCapacityUnits = Objects.requireNonNull($.maximumCapacityUnits, "expected parameter 'maximumCapacityUnits' to be non-null");
            $.minimumCapacityUnits = Objects.requireNonNull($.minimumCapacityUnits, "expected parameter 'minimumCapacityUnits' to be non-null");
            $.unitType = Objects.requireNonNull($.unitType, "expected parameter 'unitType' to be non-null");
            return $;
        }
    }

}
