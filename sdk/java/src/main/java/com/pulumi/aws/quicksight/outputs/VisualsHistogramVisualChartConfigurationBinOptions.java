// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.VisualsHistogramVisualChartConfigurationBinOptionsBinCount;
import com.pulumi.aws.quicksight.outputs.VisualsHistogramVisualChartConfigurationBinOptionsBinWidth;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VisualsHistogramVisualChartConfigurationBinOptions {
    private @Nullable VisualsHistogramVisualChartConfigurationBinOptionsBinCount binCount;
    private @Nullable VisualsHistogramVisualChartConfigurationBinOptionsBinWidth binWidth;
    private @Nullable String selectedBinType;
    private @Nullable Double startValue;

    private VisualsHistogramVisualChartConfigurationBinOptions() {}
    public Optional<VisualsHistogramVisualChartConfigurationBinOptionsBinCount> binCount() {
        return Optional.ofNullable(this.binCount);
    }
    public Optional<VisualsHistogramVisualChartConfigurationBinOptionsBinWidth> binWidth() {
        return Optional.ofNullable(this.binWidth);
    }
    public Optional<String> selectedBinType() {
        return Optional.ofNullable(this.selectedBinType);
    }
    public Optional<Double> startValue() {
        return Optional.ofNullable(this.startValue);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VisualsHistogramVisualChartConfigurationBinOptions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable VisualsHistogramVisualChartConfigurationBinOptionsBinCount binCount;
        private @Nullable VisualsHistogramVisualChartConfigurationBinOptionsBinWidth binWidth;
        private @Nullable String selectedBinType;
        private @Nullable Double startValue;
        public Builder() {}
        public Builder(VisualsHistogramVisualChartConfigurationBinOptions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.binCount = defaults.binCount;
    	      this.binWidth = defaults.binWidth;
    	      this.selectedBinType = defaults.selectedBinType;
    	      this.startValue = defaults.startValue;
        }

        @CustomType.Setter
        public Builder binCount(@Nullable VisualsHistogramVisualChartConfigurationBinOptionsBinCount binCount) {

            this.binCount = binCount;
            return this;
        }
        @CustomType.Setter
        public Builder binWidth(@Nullable VisualsHistogramVisualChartConfigurationBinOptionsBinWidth binWidth) {

            this.binWidth = binWidth;
            return this;
        }
        @CustomType.Setter
        public Builder selectedBinType(@Nullable String selectedBinType) {

            this.selectedBinType = selectedBinType;
            return this;
        }
        @CustomType.Setter
        public Builder startValue(@Nullable Double startValue) {

            this.startValue = startValue;
            return this;
        }
        public VisualsHistogramVisualChartConfigurationBinOptions build() {
            final var _resultValue = new VisualsHistogramVisualChartConfigurationBinOptions();
            _resultValue.binCount = binCount;
            _resultValue.binWidth = binWidth;
            _resultValue.selectedBinType = selectedBinType;
            _resultValue.startValue = startValue;
            return _resultValue;
        }
    }
}
