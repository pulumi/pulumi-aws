// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.timestreamquery.inputs;

import com.pulumi.aws.timestreamquery.inputs.ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsArgs Empty = new ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsArgs();

    /**
     * Attribute mappings to be used for mapping query results to ingest data for multi-measure attributes. See above.
     * 
     */
    @Import(name="multiMeasureAttributeMappings")
    private @Nullable Output<List<ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArgs>> multiMeasureAttributeMappings;

    /**
     * @return Attribute mappings to be used for mapping query results to ingest data for multi-measure attributes. See above.
     * 
     */
    public Optional<Output<List<ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArgs>>> multiMeasureAttributeMappings() {
        return Optional.ofNullable(this.multiMeasureAttributeMappings);
    }

    /**
     * Name of the target multi-measure name in the derived table. This input is required when `measure_name_column` is not provided. If `measure_name_column` is provided, then the value from that column will be used as the multi-measure name.
     * 
     */
    @Import(name="targetMultiMeasureName")
    private @Nullable Output<String> targetMultiMeasureName;

    /**
     * @return Name of the target multi-measure name in the derived table. This input is required when `measure_name_column` is not provided. If `measure_name_column` is provided, then the value from that column will be used as the multi-measure name.
     * 
     */
    public Optional<Output<String>> targetMultiMeasureName() {
        return Optional.ofNullable(this.targetMultiMeasureName);
    }

    private ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsArgs() {}

    private ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsArgs(ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsArgs $) {
        this.multiMeasureAttributeMappings = $.multiMeasureAttributeMappings;
        this.targetMultiMeasureName = $.targetMultiMeasureName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsArgs $;

        public Builder() {
            $ = new ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsArgs();
        }

        public Builder(ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsArgs defaults) {
            $ = new ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param multiMeasureAttributeMappings Attribute mappings to be used for mapping query results to ingest data for multi-measure attributes. See above.
         * 
         * @return builder
         * 
         */
        public Builder multiMeasureAttributeMappings(@Nullable Output<List<ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArgs>> multiMeasureAttributeMappings) {
            $.multiMeasureAttributeMappings = multiMeasureAttributeMappings;
            return this;
        }

        /**
         * @param multiMeasureAttributeMappings Attribute mappings to be used for mapping query results to ingest data for multi-measure attributes. See above.
         * 
         * @return builder
         * 
         */
        public Builder multiMeasureAttributeMappings(List<ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArgs> multiMeasureAttributeMappings) {
            return multiMeasureAttributeMappings(Output.of(multiMeasureAttributeMappings));
        }

        /**
         * @param multiMeasureAttributeMappings Attribute mappings to be used for mapping query results to ingest data for multi-measure attributes. See above.
         * 
         * @return builder
         * 
         */
        public Builder multiMeasureAttributeMappings(ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArgs... multiMeasureAttributeMappings) {
            return multiMeasureAttributeMappings(List.of(multiMeasureAttributeMappings));
        }

        /**
         * @param targetMultiMeasureName Name of the target multi-measure name in the derived table. This input is required when `measure_name_column` is not provided. If `measure_name_column` is provided, then the value from that column will be used as the multi-measure name.
         * 
         * @return builder
         * 
         */
        public Builder targetMultiMeasureName(@Nullable Output<String> targetMultiMeasureName) {
            $.targetMultiMeasureName = targetMultiMeasureName;
            return this;
        }

        /**
         * @param targetMultiMeasureName Name of the target multi-measure name in the derived table. This input is required when `measure_name_column` is not provided. If `measure_name_column` is provided, then the value from that column will be used as the multi-measure name.
         * 
         * @return builder
         * 
         */
        public Builder targetMultiMeasureName(String targetMultiMeasureName) {
            return targetMultiMeasureName(Output.of(targetMultiMeasureName));
        }

        public ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsArgs build() {
            return $;
        }
    }

}
