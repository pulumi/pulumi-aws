// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.VisualsGeospatialMapVisualChartConfigurationWindowOptionsBounds;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VisualsGeospatialMapVisualChartConfigurationWindowOptions {
    private @Nullable VisualsGeospatialMapVisualChartConfigurationWindowOptionsBounds bounds;
    private @Nullable String mapZoomMode;

    private VisualsGeospatialMapVisualChartConfigurationWindowOptions() {}
    public Optional<VisualsGeospatialMapVisualChartConfigurationWindowOptionsBounds> bounds() {
        return Optional.ofNullable(this.bounds);
    }
    public Optional<String> mapZoomMode() {
        return Optional.ofNullable(this.mapZoomMode);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VisualsGeospatialMapVisualChartConfigurationWindowOptions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable VisualsGeospatialMapVisualChartConfigurationWindowOptionsBounds bounds;
        private @Nullable String mapZoomMode;
        public Builder() {}
        public Builder(VisualsGeospatialMapVisualChartConfigurationWindowOptions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bounds = defaults.bounds;
    	      this.mapZoomMode = defaults.mapZoomMode;
        }

        @CustomType.Setter
        public Builder bounds(@Nullable VisualsGeospatialMapVisualChartConfigurationWindowOptionsBounds bounds) {

            this.bounds = bounds;
            return this;
        }
        @CustomType.Setter
        public Builder mapZoomMode(@Nullable String mapZoomMode) {

            this.mapZoomMode = mapZoomMode;
            return this;
        }
        public VisualsGeospatialMapVisualChartConfigurationWindowOptions build() {
            final var _resultValue = new VisualsGeospatialMapVisualChartConfigurationWindowOptions();
            _resultValue.bounds = bounds;
            _resultValue.mapZoomMode = mapZoomMode;
            return _resultValue;
        }
    }
}
