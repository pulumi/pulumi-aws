// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lb.outputs;

import com.pulumi.aws.lb.outputs.GetLoadBalancerAccessLogs;
import com.pulumi.aws.lb.outputs.GetLoadBalancerSubnetMapping;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetLoadBalancerResult {
    private @Nullable GetLoadBalancerAccessLogs accessLogs;
    private @Nullable String arn;
    private @Nullable String arnSuffix;
    private @Nullable String customerOwnedIpv4Pool;
    private @Nullable String desyncMitigationMode;
    private @Nullable String dnsName;
    private @Nullable Boolean dropInvalidHeaderFields;
    private @Nullable Boolean enableCrossZoneLoadBalancing;
    private @Nullable Boolean enableDeletionProtection;
    private @Nullable Boolean enableHttp2;
    private @Nullable Boolean enableTlsVersionAndCipherSuiteHeaders;
    private @Nullable Boolean enableWafFailOpen;
    private @Nullable Boolean enableXffClientPort;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private @Nullable Integer idleTimeout;
    private @Nullable Boolean internal;
    private @Nullable String ipAddressType;
    private @Nullable String loadBalancerType;
    private @Nullable String name;
    private @Nullable Boolean preserveHostHeader;
    private @Nullable List<String> securityGroups;
    private @Nullable List<GetLoadBalancerSubnetMapping> subnetMappings;
    private @Nullable List<String> subnets;
    private @Nullable Map<String,String> tags;
    private @Nullable String vpcId;
    private @Nullable String xffHeaderProcessingMode;
    private @Nullable String zoneId;

    private GetLoadBalancerResult() {}
    public Optional<GetLoadBalancerAccessLogs> accessLogs() {
        return Optional.ofNullable(this.accessLogs);
    }
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    public Optional<String> arnSuffix() {
        return Optional.ofNullable(this.arnSuffix);
    }
    public Optional<String> customerOwnedIpv4Pool() {
        return Optional.ofNullable(this.customerOwnedIpv4Pool);
    }
    public Optional<String> desyncMitigationMode() {
        return Optional.ofNullable(this.desyncMitigationMode);
    }
    public Optional<String> dnsName() {
        return Optional.ofNullable(this.dnsName);
    }
    public Optional<Boolean> dropInvalidHeaderFields() {
        return Optional.ofNullable(this.dropInvalidHeaderFields);
    }
    public Optional<Boolean> enableCrossZoneLoadBalancing() {
        return Optional.ofNullable(this.enableCrossZoneLoadBalancing);
    }
    public Optional<Boolean> enableDeletionProtection() {
        return Optional.ofNullable(this.enableDeletionProtection);
    }
    public Optional<Boolean> enableHttp2() {
        return Optional.ofNullable(this.enableHttp2);
    }
    public Optional<Boolean> enableTlsVersionAndCipherSuiteHeaders() {
        return Optional.ofNullable(this.enableTlsVersionAndCipherSuiteHeaders);
    }
    public Optional<Boolean> enableWafFailOpen() {
        return Optional.ofNullable(this.enableWafFailOpen);
    }
    public Optional<Boolean> enableXffClientPort() {
        return Optional.ofNullable(this.enableXffClientPort);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<Integer> idleTimeout() {
        return Optional.ofNullable(this.idleTimeout);
    }
    public Optional<Boolean> internal() {
        return Optional.ofNullable(this.internal);
    }
    public Optional<String> ipAddressType() {
        return Optional.ofNullable(this.ipAddressType);
    }
    public Optional<String> loadBalancerType() {
        return Optional.ofNullable(this.loadBalancerType);
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<Boolean> preserveHostHeader() {
        return Optional.ofNullable(this.preserveHostHeader);
    }
    public List<String> securityGroups() {
        return this.securityGroups == null ? List.of() : this.securityGroups;
    }
    public List<GetLoadBalancerSubnetMapping> subnetMappings() {
        return this.subnetMappings == null ? List.of() : this.subnetMappings;
    }
    public List<String> subnets() {
        return this.subnets == null ? List.of() : this.subnets;
    }
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public Optional<String> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }
    public Optional<String> xffHeaderProcessingMode() {
        return Optional.ofNullable(this.xffHeaderProcessingMode);
    }
    public Optional<String> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLoadBalancerResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable GetLoadBalancerAccessLogs accessLogs;
        private @Nullable String arn;
        private @Nullable String arnSuffix;
        private @Nullable String customerOwnedIpv4Pool;
        private @Nullable String desyncMitigationMode;
        private @Nullable String dnsName;
        private @Nullable Boolean dropInvalidHeaderFields;
        private @Nullable Boolean enableCrossZoneLoadBalancing;
        private @Nullable Boolean enableDeletionProtection;
        private @Nullable Boolean enableHttp2;
        private @Nullable Boolean enableTlsVersionAndCipherSuiteHeaders;
        private @Nullable Boolean enableWafFailOpen;
        private @Nullable Boolean enableXffClientPort;
        private @Nullable String id;
        private @Nullable Integer idleTimeout;
        private @Nullable Boolean internal;
        private @Nullable String ipAddressType;
        private @Nullable String loadBalancerType;
        private @Nullable String name;
        private @Nullable Boolean preserveHostHeader;
        private @Nullable List<String> securityGroups;
        private @Nullable List<GetLoadBalancerSubnetMapping> subnetMappings;
        private @Nullable List<String> subnets;
        private @Nullable Map<String,String> tags;
        private @Nullable String vpcId;
        private @Nullable String xffHeaderProcessingMode;
        private @Nullable String zoneId;
        public Builder() {}
        public Builder(GetLoadBalancerResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessLogs = defaults.accessLogs;
    	      this.arn = defaults.arn;
    	      this.arnSuffix = defaults.arnSuffix;
    	      this.customerOwnedIpv4Pool = defaults.customerOwnedIpv4Pool;
    	      this.desyncMitigationMode = defaults.desyncMitigationMode;
    	      this.dnsName = defaults.dnsName;
    	      this.dropInvalidHeaderFields = defaults.dropInvalidHeaderFields;
    	      this.enableCrossZoneLoadBalancing = defaults.enableCrossZoneLoadBalancing;
    	      this.enableDeletionProtection = defaults.enableDeletionProtection;
    	      this.enableHttp2 = defaults.enableHttp2;
    	      this.enableTlsVersionAndCipherSuiteHeaders = defaults.enableTlsVersionAndCipherSuiteHeaders;
    	      this.enableWafFailOpen = defaults.enableWafFailOpen;
    	      this.enableXffClientPort = defaults.enableXffClientPort;
    	      this.id = defaults.id;
    	      this.idleTimeout = defaults.idleTimeout;
    	      this.internal = defaults.internal;
    	      this.ipAddressType = defaults.ipAddressType;
    	      this.loadBalancerType = defaults.loadBalancerType;
    	      this.name = defaults.name;
    	      this.preserveHostHeader = defaults.preserveHostHeader;
    	      this.securityGroups = defaults.securityGroups;
    	      this.subnetMappings = defaults.subnetMappings;
    	      this.subnets = defaults.subnets;
    	      this.tags = defaults.tags;
    	      this.vpcId = defaults.vpcId;
    	      this.xffHeaderProcessingMode = defaults.xffHeaderProcessingMode;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder accessLogs(@Nullable GetLoadBalancerAccessLogs accessLogs) {
            this.accessLogs = accessLogs;
            return this;
        }
        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder arnSuffix(@Nullable String arnSuffix) {
            this.arnSuffix = arnSuffix;
            return this;
        }
        @CustomType.Setter
        public Builder customerOwnedIpv4Pool(@Nullable String customerOwnedIpv4Pool) {
            this.customerOwnedIpv4Pool = customerOwnedIpv4Pool;
            return this;
        }
        @CustomType.Setter
        public Builder desyncMitigationMode(@Nullable String desyncMitigationMode) {
            this.desyncMitigationMode = desyncMitigationMode;
            return this;
        }
        @CustomType.Setter
        public Builder dnsName(@Nullable String dnsName) {
            this.dnsName = dnsName;
            return this;
        }
        @CustomType.Setter
        public Builder dropInvalidHeaderFields(@Nullable Boolean dropInvalidHeaderFields) {
            this.dropInvalidHeaderFields = dropInvalidHeaderFields;
            return this;
        }
        @CustomType.Setter
        public Builder enableCrossZoneLoadBalancing(@Nullable Boolean enableCrossZoneLoadBalancing) {
            this.enableCrossZoneLoadBalancing = enableCrossZoneLoadBalancing;
            return this;
        }
        @CustomType.Setter
        public Builder enableDeletionProtection(@Nullable Boolean enableDeletionProtection) {
            this.enableDeletionProtection = enableDeletionProtection;
            return this;
        }
        @CustomType.Setter
        public Builder enableHttp2(@Nullable Boolean enableHttp2) {
            this.enableHttp2 = enableHttp2;
            return this;
        }
        @CustomType.Setter
        public Builder enableTlsVersionAndCipherSuiteHeaders(@Nullable Boolean enableTlsVersionAndCipherSuiteHeaders) {
            this.enableTlsVersionAndCipherSuiteHeaders = enableTlsVersionAndCipherSuiteHeaders;
            return this;
        }
        @CustomType.Setter
        public Builder enableWafFailOpen(@Nullable Boolean enableWafFailOpen) {
            this.enableWafFailOpen = enableWafFailOpen;
            return this;
        }
        @CustomType.Setter
        public Builder enableXffClientPort(@Nullable Boolean enableXffClientPort) {
            this.enableXffClientPort = enableXffClientPort;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder idleTimeout(@Nullable Integer idleTimeout) {
            this.idleTimeout = idleTimeout;
            return this;
        }
        @CustomType.Setter
        public Builder internal(@Nullable Boolean internal) {
            this.internal = internal;
            return this;
        }
        @CustomType.Setter
        public Builder ipAddressType(@Nullable String ipAddressType) {
            this.ipAddressType = ipAddressType;
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancerType(@Nullable String loadBalancerType) {
            this.loadBalancerType = loadBalancerType;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder preserveHostHeader(@Nullable Boolean preserveHostHeader) {
            this.preserveHostHeader = preserveHostHeader;
            return this;
        }
        @CustomType.Setter
        public Builder securityGroups(@Nullable List<String> securityGroups) {
            this.securityGroups = securityGroups;
            return this;
        }
        public Builder securityGroups(String... securityGroups) {
            return securityGroups(List.of(securityGroups));
        }
        @CustomType.Setter
        public Builder subnetMappings(@Nullable List<GetLoadBalancerSubnetMapping> subnetMappings) {
            this.subnetMappings = subnetMappings;
            return this;
        }
        public Builder subnetMappings(GetLoadBalancerSubnetMapping... subnetMappings) {
            return subnetMappings(List.of(subnetMappings));
        }
        @CustomType.Setter
        public Builder subnets(@Nullable List<String> subnets) {
            this.subnets = subnets;
            return this;
        }
        public Builder subnets(String... subnets) {
            return subnets(List.of(subnets));
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder vpcId(@Nullable String vpcId) {
            this.vpcId = vpcId;
            return this;
        }
        @CustomType.Setter
        public Builder xffHeaderProcessingMode(@Nullable String xffHeaderProcessingMode) {
            this.xffHeaderProcessingMode = xffHeaderProcessingMode;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(@Nullable String zoneId) {
            this.zoneId = zoneId;
            return this;
        }
        public GetLoadBalancerResult build() {
            final var o = new GetLoadBalancerResult();
            o.accessLogs = accessLogs;
            o.arn = arn;
            o.arnSuffix = arnSuffix;
            o.customerOwnedIpv4Pool = customerOwnedIpv4Pool;
            o.desyncMitigationMode = desyncMitigationMode;
            o.dnsName = dnsName;
            o.dropInvalidHeaderFields = dropInvalidHeaderFields;
            o.enableCrossZoneLoadBalancing = enableCrossZoneLoadBalancing;
            o.enableDeletionProtection = enableDeletionProtection;
            o.enableHttp2 = enableHttp2;
            o.enableTlsVersionAndCipherSuiteHeaders = enableTlsVersionAndCipherSuiteHeaders;
            o.enableWafFailOpen = enableWafFailOpen;
            o.enableXffClientPort = enableXffClientPort;
            o.id = id;
            o.idleTimeout = idleTimeout;
            o.internal = internal;
            o.ipAddressType = ipAddressType;
            o.loadBalancerType = loadBalancerType;
            o.name = name;
            o.preserveHostHeader = preserveHostHeader;
            o.securityGroups = securityGroups;
            o.subnetMappings = subnetMappings;
            o.subnets = subnets;
            o.tags = tags;
            o.vpcId = vpcId;
            o.xffHeaderProcessingMode = xffHeaderProcessingMode;
            o.zoneId = zoneId;
            return o;
        }
    }
}
