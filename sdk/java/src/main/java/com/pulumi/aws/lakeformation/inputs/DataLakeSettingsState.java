// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lakeformation.inputs;

import com.pulumi.aws.lakeformation.inputs.DataLakeSettingsCreateDatabaseDefaultPermissionArgs;
import com.pulumi.aws.lakeformation.inputs.DataLakeSettingsCreateTableDefaultPermissionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataLakeSettingsState extends com.pulumi.resources.ResourceArgs {

    public static final DataLakeSettingsState Empty = new DataLakeSettingsState();

    @Import(name="admins")
    private @Nullable Output<List<String>> admins;

    public Optional<Output<List<String>>> admins() {
        return Optional.ofNullable(this.admins);
    }

    @Import(name="catalogId")
    private @Nullable Output<String> catalogId;

    public Optional<Output<String>> catalogId() {
        return Optional.ofNullable(this.catalogId);
    }

    @Import(name="createDatabaseDefaultPermissions")
    private @Nullable Output<List<DataLakeSettingsCreateDatabaseDefaultPermissionArgs>> createDatabaseDefaultPermissions;

    public Optional<Output<List<DataLakeSettingsCreateDatabaseDefaultPermissionArgs>>> createDatabaseDefaultPermissions() {
        return Optional.ofNullable(this.createDatabaseDefaultPermissions);
    }

    @Import(name="createTableDefaultPermissions")
    private @Nullable Output<List<DataLakeSettingsCreateTableDefaultPermissionArgs>> createTableDefaultPermissions;

    public Optional<Output<List<DataLakeSettingsCreateTableDefaultPermissionArgs>>> createTableDefaultPermissions() {
        return Optional.ofNullable(this.createTableDefaultPermissions);
    }

    @Import(name="trustedResourceOwners")
    private @Nullable Output<List<String>> trustedResourceOwners;

    public Optional<Output<List<String>>> trustedResourceOwners() {
        return Optional.ofNullable(this.trustedResourceOwners);
    }

    private DataLakeSettingsState() {}

    private DataLakeSettingsState(DataLakeSettingsState $) {
        this.admins = $.admins;
        this.catalogId = $.catalogId;
        this.createDatabaseDefaultPermissions = $.createDatabaseDefaultPermissions;
        this.createTableDefaultPermissions = $.createTableDefaultPermissions;
        this.trustedResourceOwners = $.trustedResourceOwners;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataLakeSettingsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataLakeSettingsState $;

        public Builder() {
            $ = new DataLakeSettingsState();
        }

        public Builder(DataLakeSettingsState defaults) {
            $ = new DataLakeSettingsState(Objects.requireNonNull(defaults));
        }

        public Builder admins(@Nullable Output<List<String>> admins) {
            $.admins = admins;
            return this;
        }

        public Builder admins(List<String> admins) {
            return admins(Output.of(admins));
        }

        public Builder admins(String... admins) {
            return admins(List.of(admins));
        }

        public Builder catalogId(@Nullable Output<String> catalogId) {
            $.catalogId = catalogId;
            return this;
        }

        public Builder catalogId(String catalogId) {
            return catalogId(Output.of(catalogId));
        }

        public Builder createDatabaseDefaultPermissions(@Nullable Output<List<DataLakeSettingsCreateDatabaseDefaultPermissionArgs>> createDatabaseDefaultPermissions) {
            $.createDatabaseDefaultPermissions = createDatabaseDefaultPermissions;
            return this;
        }

        public Builder createDatabaseDefaultPermissions(List<DataLakeSettingsCreateDatabaseDefaultPermissionArgs> createDatabaseDefaultPermissions) {
            return createDatabaseDefaultPermissions(Output.of(createDatabaseDefaultPermissions));
        }

        public Builder createDatabaseDefaultPermissions(DataLakeSettingsCreateDatabaseDefaultPermissionArgs... createDatabaseDefaultPermissions) {
            return createDatabaseDefaultPermissions(List.of(createDatabaseDefaultPermissions));
        }

        public Builder createTableDefaultPermissions(@Nullable Output<List<DataLakeSettingsCreateTableDefaultPermissionArgs>> createTableDefaultPermissions) {
            $.createTableDefaultPermissions = createTableDefaultPermissions;
            return this;
        }

        public Builder createTableDefaultPermissions(List<DataLakeSettingsCreateTableDefaultPermissionArgs> createTableDefaultPermissions) {
            return createTableDefaultPermissions(Output.of(createTableDefaultPermissions));
        }

        public Builder createTableDefaultPermissions(DataLakeSettingsCreateTableDefaultPermissionArgs... createTableDefaultPermissions) {
            return createTableDefaultPermissions(List.of(createTableDefaultPermissions));
        }

        public Builder trustedResourceOwners(@Nullable Output<List<String>> trustedResourceOwners) {
            $.trustedResourceOwners = trustedResourceOwners;
            return this;
        }

        public Builder trustedResourceOwners(List<String> trustedResourceOwners) {
            return trustedResourceOwners(Output.of(trustedResourceOwners));
        }

        public Builder trustedResourceOwners(String... trustedResourceOwners) {
            return trustedResourceOwners(List.of(trustedResourceOwners));
        }

        public DataLakeSettingsState build() {
            return $;
        }
    }

}
