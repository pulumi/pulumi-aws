// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.ColumnArgs;
import com.pulumi.aws.quicksight.inputs.NumberFormatConfigurationArgs;
import com.pulumi.aws.quicksight.inputs.NumericalAggregationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VisualsRadarChartVisualChartConfigurationFieldWellsRadarChartAggregatedFieldWellsValueNumericalMeasureFieldArgs extends com.pulumi.resources.ResourceArgs {

    public static final VisualsRadarChartVisualChartConfigurationFieldWellsRadarChartAggregatedFieldWellsValueNumericalMeasureFieldArgs Empty = new VisualsRadarChartVisualChartConfigurationFieldWellsRadarChartAggregatedFieldWellsValueNumericalMeasureFieldArgs();

    @Import(name="aggregationFunction")
    private @Nullable Output<NumericalAggregationArgs> aggregationFunction;

    public Optional<Output<NumericalAggregationArgs>> aggregationFunction() {
        return Optional.ofNullable(this.aggregationFunction);
    }

    @Import(name="column", required=true)
    private Output<ColumnArgs> column;

    public Output<ColumnArgs> column() {
        return this.column;
    }

    @Import(name="fieldId", required=true)
    private Output<String> fieldId;

    public Output<String> fieldId() {
        return this.fieldId;
    }

    @Import(name="formatConfiguration")
    private @Nullable Output<NumberFormatConfigurationArgs> formatConfiguration;

    public Optional<Output<NumberFormatConfigurationArgs>> formatConfiguration() {
        return Optional.ofNullable(this.formatConfiguration);
    }

    private VisualsRadarChartVisualChartConfigurationFieldWellsRadarChartAggregatedFieldWellsValueNumericalMeasureFieldArgs() {}

    private VisualsRadarChartVisualChartConfigurationFieldWellsRadarChartAggregatedFieldWellsValueNumericalMeasureFieldArgs(VisualsRadarChartVisualChartConfigurationFieldWellsRadarChartAggregatedFieldWellsValueNumericalMeasureFieldArgs $) {
        this.aggregationFunction = $.aggregationFunction;
        this.column = $.column;
        this.fieldId = $.fieldId;
        this.formatConfiguration = $.formatConfiguration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VisualsRadarChartVisualChartConfigurationFieldWellsRadarChartAggregatedFieldWellsValueNumericalMeasureFieldArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VisualsRadarChartVisualChartConfigurationFieldWellsRadarChartAggregatedFieldWellsValueNumericalMeasureFieldArgs $;

        public Builder() {
            $ = new VisualsRadarChartVisualChartConfigurationFieldWellsRadarChartAggregatedFieldWellsValueNumericalMeasureFieldArgs();
        }

        public Builder(VisualsRadarChartVisualChartConfigurationFieldWellsRadarChartAggregatedFieldWellsValueNumericalMeasureFieldArgs defaults) {
            $ = new VisualsRadarChartVisualChartConfigurationFieldWellsRadarChartAggregatedFieldWellsValueNumericalMeasureFieldArgs(Objects.requireNonNull(defaults));
        }

        public Builder aggregationFunction(@Nullable Output<NumericalAggregationArgs> aggregationFunction) {
            $.aggregationFunction = aggregationFunction;
            return this;
        }

        public Builder aggregationFunction(NumericalAggregationArgs aggregationFunction) {
            return aggregationFunction(Output.of(aggregationFunction));
        }

        public Builder column(Output<ColumnArgs> column) {
            $.column = column;
            return this;
        }

        public Builder column(ColumnArgs column) {
            return column(Output.of(column));
        }

        public Builder fieldId(Output<String> fieldId) {
            $.fieldId = fieldId;
            return this;
        }

        public Builder fieldId(String fieldId) {
            return fieldId(Output.of(fieldId));
        }

        public Builder formatConfiguration(@Nullable Output<NumberFormatConfigurationArgs> formatConfiguration) {
            $.formatConfiguration = formatConfiguration;
            return this;
        }

        public Builder formatConfiguration(NumberFormatConfigurationArgs formatConfiguration) {
            return formatConfiguration(Output.of(formatConfiguration));
        }

        public VisualsRadarChartVisualChartConfigurationFieldWellsRadarChartAggregatedFieldWellsValueNumericalMeasureFieldArgs build() {
            if ($.column == null) {
                throw new MissingRequiredPropertyException("VisualsRadarChartVisualChartConfigurationFieldWellsRadarChartAggregatedFieldWellsValueNumericalMeasureFieldArgs", "column");
            }
            if ($.fieldId == null) {
                throw new MissingRequiredPropertyException("VisualsRadarChartVisualChartConfigurationFieldWellsRadarChartAggregatedFieldWellsValueNumericalMeasureFieldArgs", "fieldId");
            }
            return $;
        }
    }

}
