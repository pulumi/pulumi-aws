// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.glue.outputs;

import com.pulumi.aws.glue.outputs.GetCatalogTableStorageDescriptorSchemaReferenceSchemaId;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCatalogTableStorageDescriptorSchemaReference {
    /**
     * @return Configuration block that contains schema identity fields. See `schema_id` below.
     * 
     */
    private List<GetCatalogTableStorageDescriptorSchemaReferenceSchemaId> schemaIds;
    /**
     * @return Unique ID assigned to a version of the schema.
     * 
     */
    private String schemaVersionId;
    /**
     * @return Version number of the schema.
     * 
     */
    private Integer schemaVersionNumber;

    private GetCatalogTableStorageDescriptorSchemaReference() {}
    /**
     * @return Configuration block that contains schema identity fields. See `schema_id` below.
     * 
     */
    public List<GetCatalogTableStorageDescriptorSchemaReferenceSchemaId> schemaIds() {
        return this.schemaIds;
    }
    /**
     * @return Unique ID assigned to a version of the schema.
     * 
     */
    public String schemaVersionId() {
        return this.schemaVersionId;
    }
    /**
     * @return Version number of the schema.
     * 
     */
    public Integer schemaVersionNumber() {
        return this.schemaVersionNumber;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCatalogTableStorageDescriptorSchemaReference defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetCatalogTableStorageDescriptorSchemaReferenceSchemaId> schemaIds;
        private String schemaVersionId;
        private Integer schemaVersionNumber;
        public Builder() {}
        public Builder(GetCatalogTableStorageDescriptorSchemaReference defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.schemaIds = defaults.schemaIds;
    	      this.schemaVersionId = defaults.schemaVersionId;
    	      this.schemaVersionNumber = defaults.schemaVersionNumber;
        }

        @CustomType.Setter
        public Builder schemaIds(List<GetCatalogTableStorageDescriptorSchemaReferenceSchemaId> schemaIds) {
            this.schemaIds = Objects.requireNonNull(schemaIds);
            return this;
        }
        public Builder schemaIds(GetCatalogTableStorageDescriptorSchemaReferenceSchemaId... schemaIds) {
            return schemaIds(List.of(schemaIds));
        }
        @CustomType.Setter
        public Builder schemaVersionId(String schemaVersionId) {
            this.schemaVersionId = Objects.requireNonNull(schemaVersionId);
            return this;
        }
        @CustomType.Setter
        public Builder schemaVersionNumber(Integer schemaVersionNumber) {
            this.schemaVersionNumber = Objects.requireNonNull(schemaVersionNumber);
            return this;
        }
        public GetCatalogTableStorageDescriptorSchemaReference build() {
            final var _resultValue = new GetCatalogTableStorageDescriptorSchemaReference();
            _resultValue.schemaIds = schemaIds;
            _resultValue.schemaVersionId = schemaVersionId;
            _resultValue.schemaVersionNumber = schemaVersionNumber;
            return _resultValue;
        }
    }
}
