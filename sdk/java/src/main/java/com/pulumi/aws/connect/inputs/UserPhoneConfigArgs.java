// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.connect.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UserPhoneConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final UserPhoneConfigArgs Empty = new UserPhoneConfigArgs();

    @Import(name="afterContactWorkTimeLimit")
    private @Nullable Output<Integer> afterContactWorkTimeLimit;

    public Optional<Output<Integer>> afterContactWorkTimeLimit() {
        return Optional.ofNullable(this.afterContactWorkTimeLimit);
    }

    @Import(name="autoAccept")
    private @Nullable Output<Boolean> autoAccept;

    public Optional<Output<Boolean>> autoAccept() {
        return Optional.ofNullable(this.autoAccept);
    }

    @Import(name="deskPhoneNumber")
    private @Nullable Output<String> deskPhoneNumber;

    public Optional<Output<String>> deskPhoneNumber() {
        return Optional.ofNullable(this.deskPhoneNumber);
    }

    @Import(name="phoneType", required=true)
    private Output<String> phoneType;

    public Output<String> phoneType() {
        return this.phoneType;
    }

    private UserPhoneConfigArgs() {}

    private UserPhoneConfigArgs(UserPhoneConfigArgs $) {
        this.afterContactWorkTimeLimit = $.afterContactWorkTimeLimit;
        this.autoAccept = $.autoAccept;
        this.deskPhoneNumber = $.deskPhoneNumber;
        this.phoneType = $.phoneType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserPhoneConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserPhoneConfigArgs $;

        public Builder() {
            $ = new UserPhoneConfigArgs();
        }

        public Builder(UserPhoneConfigArgs defaults) {
            $ = new UserPhoneConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder afterContactWorkTimeLimit(@Nullable Output<Integer> afterContactWorkTimeLimit) {
            $.afterContactWorkTimeLimit = afterContactWorkTimeLimit;
            return this;
        }

        public Builder afterContactWorkTimeLimit(Integer afterContactWorkTimeLimit) {
            return afterContactWorkTimeLimit(Output.of(afterContactWorkTimeLimit));
        }

        public Builder autoAccept(@Nullable Output<Boolean> autoAccept) {
            $.autoAccept = autoAccept;
            return this;
        }

        public Builder autoAccept(Boolean autoAccept) {
            return autoAccept(Output.of(autoAccept));
        }

        public Builder deskPhoneNumber(@Nullable Output<String> deskPhoneNumber) {
            $.deskPhoneNumber = deskPhoneNumber;
            return this;
        }

        public Builder deskPhoneNumber(String deskPhoneNumber) {
            return deskPhoneNumber(Output.of(deskPhoneNumber));
        }

        public Builder phoneType(Output<String> phoneType) {
            $.phoneType = phoneType;
            return this;
        }

        public Builder phoneType(String phoneType) {
            return phoneType(Output.of(phoneType));
        }

        public UserPhoneConfigArgs build() {
            $.phoneType = Objects.requireNonNull($.phoneType, "expected parameter 'phoneType' to be non-null");
            return $;
        }
    }

}
