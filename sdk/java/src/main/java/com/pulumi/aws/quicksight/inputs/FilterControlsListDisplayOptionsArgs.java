// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.LabelOptionsArgs;
import com.pulumi.aws.quicksight.inputs.SelectAllOptionsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FilterControlsListDisplayOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final FilterControlsListDisplayOptionsArgs Empty = new FilterControlsListDisplayOptionsArgs();

    @Import(name="searchOptions")
    private @Nullable Output<SelectAllOptionsArgs> searchOptions;

    public Optional<Output<SelectAllOptionsArgs>> searchOptions() {
        return Optional.ofNullable(this.searchOptions);
    }

    @Import(name="selectAllOptions")
    private @Nullable Output<SelectAllOptionsArgs> selectAllOptions;

    public Optional<Output<SelectAllOptionsArgs>> selectAllOptions() {
        return Optional.ofNullable(this.selectAllOptions);
    }

    @Import(name="titleOptions")
    private @Nullable Output<LabelOptionsArgs> titleOptions;

    public Optional<Output<LabelOptionsArgs>> titleOptions() {
        return Optional.ofNullable(this.titleOptions);
    }

    private FilterControlsListDisplayOptionsArgs() {}

    private FilterControlsListDisplayOptionsArgs(FilterControlsListDisplayOptionsArgs $) {
        this.searchOptions = $.searchOptions;
        this.selectAllOptions = $.selectAllOptions;
        this.titleOptions = $.titleOptions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FilterControlsListDisplayOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FilterControlsListDisplayOptionsArgs $;

        public Builder() {
            $ = new FilterControlsListDisplayOptionsArgs();
        }

        public Builder(FilterControlsListDisplayOptionsArgs defaults) {
            $ = new FilterControlsListDisplayOptionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder searchOptions(@Nullable Output<SelectAllOptionsArgs> searchOptions) {
            $.searchOptions = searchOptions;
            return this;
        }

        public Builder searchOptions(SelectAllOptionsArgs searchOptions) {
            return searchOptions(Output.of(searchOptions));
        }

        public Builder selectAllOptions(@Nullable Output<SelectAllOptionsArgs> selectAllOptions) {
            $.selectAllOptions = selectAllOptions;
            return this;
        }

        public Builder selectAllOptions(SelectAllOptionsArgs selectAllOptions) {
            return selectAllOptions(Output.of(selectAllOptions));
        }

        public Builder titleOptions(@Nullable Output<LabelOptionsArgs> titleOptions) {
            $.titleOptions = titleOptions;
            return this;
        }

        public Builder titleOptions(LabelOptionsArgs titleOptions) {
            return titleOptions(Output.of(titleOptions));
        }

        public FilterControlsListDisplayOptionsArgs build() {
            return $;
        }
    }

}
