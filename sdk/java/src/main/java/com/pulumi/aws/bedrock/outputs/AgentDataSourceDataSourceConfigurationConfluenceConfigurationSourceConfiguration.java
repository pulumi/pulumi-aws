// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class AgentDataSourceDataSourceConfigurationConfluenceConfigurationSourceConfiguration {
    /**
     * @return The supported authentication type to authenticate and connect to your SharePoint site. Valid values: `OAUTH2_CLIENT_CREDENTIALS`, `OAUTH2_SHAREPOINT_APP_ONLY_CLIENT_CREDENTIALS`.
     * 
     */
    private String authType;
    /**
     * @return The Amazon Resource Name of an AWS Secrets Manager secret that stores your authentication credentials for your SharePoint site. For more information on the key-value pairs that must be included in your secret, depending on your authentication type, see SharePoint connection configuration. Pattern: ^arn:aws(|-cn|-us-gov):secretsmanager:[a-z0-9-]{1,20}:([0-9]{12}|):secret:[a-zA-Z0-9!/_+=.{@literal @}-]{1,512}$.
     * 
     */
    private String credentialsSecretArn;
    /**
     * @return The supported host type, whether online/cloud or server/on-premises. Valid values: `ONLINE`.
     * 
     */
    private String hostType;
    /**
     * @return The Salesforce host URL or instance URL. Pattern: `^https://[A-Za-z0-9][^\s]*$`.
     * 
     */
    private String hostUrl;

    private AgentDataSourceDataSourceConfigurationConfluenceConfigurationSourceConfiguration() {}
    /**
     * @return The supported authentication type to authenticate and connect to your SharePoint site. Valid values: `OAUTH2_CLIENT_CREDENTIALS`, `OAUTH2_SHAREPOINT_APP_ONLY_CLIENT_CREDENTIALS`.
     * 
     */
    public String authType() {
        return this.authType;
    }
    /**
     * @return The Amazon Resource Name of an AWS Secrets Manager secret that stores your authentication credentials for your SharePoint site. For more information on the key-value pairs that must be included in your secret, depending on your authentication type, see SharePoint connection configuration. Pattern: ^arn:aws(|-cn|-us-gov):secretsmanager:[a-z0-9-]{1,20}:([0-9]{12}|):secret:[a-zA-Z0-9!/_+=.{@literal @}-]{1,512}$.
     * 
     */
    public String credentialsSecretArn() {
        return this.credentialsSecretArn;
    }
    /**
     * @return The supported host type, whether online/cloud or server/on-premises. Valid values: `ONLINE`.
     * 
     */
    public String hostType() {
        return this.hostType;
    }
    /**
     * @return The Salesforce host URL or instance URL. Pattern: `^https://[A-Za-z0-9][^\s]*$`.
     * 
     */
    public String hostUrl() {
        return this.hostUrl;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AgentDataSourceDataSourceConfigurationConfluenceConfigurationSourceConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String authType;
        private String credentialsSecretArn;
        private String hostType;
        private String hostUrl;
        public Builder() {}
        public Builder(AgentDataSourceDataSourceConfigurationConfluenceConfigurationSourceConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authType = defaults.authType;
    	      this.credentialsSecretArn = defaults.credentialsSecretArn;
    	      this.hostType = defaults.hostType;
    	      this.hostUrl = defaults.hostUrl;
        }

        @CustomType.Setter
        public Builder authType(String authType) {
            if (authType == null) {
              throw new MissingRequiredPropertyException("AgentDataSourceDataSourceConfigurationConfluenceConfigurationSourceConfiguration", "authType");
            }
            this.authType = authType;
            return this;
        }
        @CustomType.Setter
        public Builder credentialsSecretArn(String credentialsSecretArn) {
            if (credentialsSecretArn == null) {
              throw new MissingRequiredPropertyException("AgentDataSourceDataSourceConfigurationConfluenceConfigurationSourceConfiguration", "credentialsSecretArn");
            }
            this.credentialsSecretArn = credentialsSecretArn;
            return this;
        }
        @CustomType.Setter
        public Builder hostType(String hostType) {
            if (hostType == null) {
              throw new MissingRequiredPropertyException("AgentDataSourceDataSourceConfigurationConfluenceConfigurationSourceConfiguration", "hostType");
            }
            this.hostType = hostType;
            return this;
        }
        @CustomType.Setter
        public Builder hostUrl(String hostUrl) {
            if (hostUrl == null) {
              throw new MissingRequiredPropertyException("AgentDataSourceDataSourceConfigurationConfluenceConfigurationSourceConfiguration", "hostUrl");
            }
            this.hostUrl = hostUrl;
            return this;
        }
        public AgentDataSourceDataSourceConfigurationConfluenceConfigurationSourceConfiguration build() {
            final var _resultValue = new AgentDataSourceDataSourceConfigurationConfluenceConfigurationSourceConfiguration();
            _resultValue.authType = authType;
            _resultValue.credentialsSecretArn = credentialsSecretArn;
            _resultValue.hostType = hostType;
            _resultValue.hostUrl = hostUrl;
            return _resultValue;
        }
    }
}
