// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lex.outputs;

import com.pulumi.aws.lex.outputs.V2modelsIntentFulfillmentCodeHookFulfillmentUpdatesSpecification;
import com.pulumi.aws.lex.outputs.V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecification;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class V2modelsIntentFulfillmentCodeHook {
    /**
     * @return Whether the fulfillment code hook is used. When active is false, the code hook doesn&#39;t run.
     * 
     */
    private @Nullable Boolean active;
    /**
     * @return Whether a Lambda function should be invoked to fulfill a specific intent.
     * 
     */
    private Boolean enabled;
    /**
     * @return Configuration block for settings for update messages sent to the user for long-running Lambda fulfillment functions. Fulfillment updates can be used only with streaming conversations. See `fulfillment_updates_specification`.
     * 
     */
    private @Nullable V2modelsIntentFulfillmentCodeHookFulfillmentUpdatesSpecification fulfillmentUpdatesSpecification;
    /**
     * @return Configuration block for settings for messages sent to the user for after the Lambda fulfillment function completes. Post-fulfillment messages can be sent for both streaming and non-streaming conversations. See `post_fulfillment_status_specification`.
     * 
     */
    private @Nullable V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecification postFulfillmentStatusSpecification;

    private V2modelsIntentFulfillmentCodeHook() {}
    /**
     * @return Whether the fulfillment code hook is used. When active is false, the code hook doesn&#39;t run.
     * 
     */
    public Optional<Boolean> active() {
        return Optional.ofNullable(this.active);
    }
    /**
     * @return Whether a Lambda function should be invoked to fulfill a specific intent.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return Configuration block for settings for update messages sent to the user for long-running Lambda fulfillment functions. Fulfillment updates can be used only with streaming conversations. See `fulfillment_updates_specification`.
     * 
     */
    public Optional<V2modelsIntentFulfillmentCodeHookFulfillmentUpdatesSpecification> fulfillmentUpdatesSpecification() {
        return Optional.ofNullable(this.fulfillmentUpdatesSpecification);
    }
    /**
     * @return Configuration block for settings for messages sent to the user for after the Lambda fulfillment function completes. Post-fulfillment messages can be sent for both streaming and non-streaming conversations. See `post_fulfillment_status_specification`.
     * 
     */
    public Optional<V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecification> postFulfillmentStatusSpecification() {
        return Optional.ofNullable(this.postFulfillmentStatusSpecification);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(V2modelsIntentFulfillmentCodeHook defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean active;
        private Boolean enabled;
        private @Nullable V2modelsIntentFulfillmentCodeHookFulfillmentUpdatesSpecification fulfillmentUpdatesSpecification;
        private @Nullable V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecification postFulfillmentStatusSpecification;
        public Builder() {}
        public Builder(V2modelsIntentFulfillmentCodeHook defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.active = defaults.active;
    	      this.enabled = defaults.enabled;
    	      this.fulfillmentUpdatesSpecification = defaults.fulfillmentUpdatesSpecification;
    	      this.postFulfillmentStatusSpecification = defaults.postFulfillmentStatusSpecification;
        }

        @CustomType.Setter
        public Builder active(@Nullable Boolean active) {

            this.active = active;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("V2modelsIntentFulfillmentCodeHook", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder fulfillmentUpdatesSpecification(@Nullable V2modelsIntentFulfillmentCodeHookFulfillmentUpdatesSpecification fulfillmentUpdatesSpecification) {

            this.fulfillmentUpdatesSpecification = fulfillmentUpdatesSpecification;
            return this;
        }
        @CustomType.Setter
        public Builder postFulfillmentStatusSpecification(@Nullable V2modelsIntentFulfillmentCodeHookPostFulfillmentStatusSpecification postFulfillmentStatusSpecification) {

            this.postFulfillmentStatusSpecification = postFulfillmentStatusSpecification;
            return this;
        }
        public V2modelsIntentFulfillmentCodeHook build() {
            final var _resultValue = new V2modelsIntentFulfillmentCodeHook();
            _resultValue.active = active;
            _resultValue.enabled = enabled;
            _resultValue.fulfillmentUpdatesSpecification = fulfillmentUpdatesSpecification;
            _resultValue.postFulfillmentStatusSpecification = postFulfillmentStatusSpecification;
            return _resultValue;
        }
    }
}
