// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.inputs;

import com.pulumi.aws.appmesh.inputs.GatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GatewayRouteSpecGrpcRouteActionTargetArgs extends com.pulumi.resources.ResourceArgs {

    public static final GatewayRouteSpecGrpcRouteActionTargetArgs Empty = new GatewayRouteSpecGrpcRouteActionTargetArgs();

    /**
     * The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.
     * 
     */
    @Import(name="port")
    private @Nullable Output<Integer> port;

    /**
     * @return The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.
     * 
     */
    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    /**
     * Virtual service gateway route target.
     * 
     */
    @Import(name="virtualService", required=true)
    private Output<GatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs> virtualService;

    /**
     * @return Virtual service gateway route target.
     * 
     */
    public Output<GatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs> virtualService() {
        return this.virtualService;
    }

    private GatewayRouteSpecGrpcRouteActionTargetArgs() {}

    private GatewayRouteSpecGrpcRouteActionTargetArgs(GatewayRouteSpecGrpcRouteActionTargetArgs $) {
        this.port = $.port;
        this.virtualService = $.virtualService;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GatewayRouteSpecGrpcRouteActionTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GatewayRouteSpecGrpcRouteActionTargetArgs $;

        public Builder() {
            $ = new GatewayRouteSpecGrpcRouteActionTargetArgs();
        }

        public Builder(GatewayRouteSpecGrpcRouteActionTargetArgs defaults) {
            $ = new GatewayRouteSpecGrpcRouteActionTargetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param port The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        /**
         * @param virtualService Virtual service gateway route target.
         * 
         * @return builder
         * 
         */
        public Builder virtualService(Output<GatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs> virtualService) {
            $.virtualService = virtualService;
            return this;
        }

        /**
         * @param virtualService Virtual service gateway route target.
         * 
         * @return builder
         * 
         */
        public Builder virtualService(GatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs virtualService) {
            return virtualService(Output.of(virtualService));
        }

        public GatewayRouteSpecGrpcRouteActionTargetArgs build() {
            if ($.virtualService == null) {
                throw new MissingRequiredPropertyException("GatewayRouteSpecGrpcRouteActionTargetArgs", "virtualService");
            }
            return $;
        }
    }

}
