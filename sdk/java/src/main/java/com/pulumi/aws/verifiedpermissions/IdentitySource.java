// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.verifiedpermissions;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.verifiedpermissions.IdentitySourceArgs;
import com.pulumi.aws.verifiedpermissions.inputs.IdentitySourceState;
import com.pulumi.aws.verifiedpermissions.outputs.IdentitySourceConfiguration;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for managing an AWS Verified Permissions Identity Source.
 * 
 * ## Example Usage
 * 
 * ### Cognito User Pool Configuration Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.verifiedpermissions.PolicyStore;
 * import com.pulumi.aws.verifiedpermissions.PolicyStoreArgs;
 * import com.pulumi.aws.verifiedpermissions.inputs.PolicyStoreValidationSettingsArgs;
 * import com.pulumi.aws.cognito.UserPool;
 * import com.pulumi.aws.cognito.UserPoolArgs;
 * import com.pulumi.aws.cognito.UserPoolClient;
 * import com.pulumi.aws.cognito.UserPoolClientArgs;
 * import com.pulumi.aws.verifiedpermissions.IdentitySource;
 * import com.pulumi.aws.verifiedpermissions.IdentitySourceArgs;
 * import com.pulumi.aws.verifiedpermissions.inputs.IdentitySourceConfigurationArgs;
 * import com.pulumi.aws.verifiedpermissions.inputs.IdentitySourceConfigurationCognitoUserPoolConfigurationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new PolicyStore("example", PolicyStoreArgs.builder()
 *             .validationSettings(PolicyStoreValidationSettingsArgs.builder()
 *                 .mode("STRICT")
 *                 .build())
 *             .build());
 * 
 *         var exampleUserPool = new UserPool("exampleUserPool", UserPoolArgs.builder()
 *             .name("example")
 *             .build());
 * 
 *         var exampleUserPoolClient = new UserPoolClient("exampleUserPoolClient", UserPoolClientArgs.builder()
 *             .name("example")
 *             .userPoolId(exampleUserPool.id())
 *             .explicitAuthFlows("ADMIN_NO_SRP_AUTH")
 *             .build());
 * 
 *         var exampleIdentitySource = new IdentitySource("exampleIdentitySource", IdentitySourceArgs.builder()
 *             .policyStoreId(example.id())
 *             .configuration(IdentitySourceConfigurationArgs.builder()
 *                 .cognitoUserPoolConfiguration(IdentitySourceConfigurationCognitoUserPoolConfigurationArgs.builder()
 *                     .userPoolArn(exampleUserPool.arn())
 *                     .clientIds(exampleUserPoolClient.id())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### OpenID Connect Configuration Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.verifiedpermissions.PolicyStore;
 * import com.pulumi.aws.verifiedpermissions.PolicyStoreArgs;
 * import com.pulumi.aws.verifiedpermissions.inputs.PolicyStoreValidationSettingsArgs;
 * import com.pulumi.aws.verifiedpermissions.IdentitySource;
 * import com.pulumi.aws.verifiedpermissions.IdentitySourceArgs;
 * import com.pulumi.aws.verifiedpermissions.inputs.IdentitySourceConfigurationArgs;
 * import com.pulumi.aws.verifiedpermissions.inputs.IdentitySourceConfigurationOpenIdConnectConfigurationArgs;
 * import com.pulumi.aws.verifiedpermissions.inputs.IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelectionArgs;
 * import com.pulumi.aws.verifiedpermissions.inputs.IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelectionAccessTokenOnlyArgs;
 * import com.pulumi.aws.verifiedpermissions.inputs.IdentitySourceConfigurationOpenIdConnectConfigurationGroupConfigurationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new PolicyStore("example", PolicyStoreArgs.builder()
 *             .validationSettings(PolicyStoreValidationSettingsArgs.builder()
 *                 .mode("STRICT")
 *                 .build())
 *             .build());
 * 
 *         var exampleIdentitySource = new IdentitySource("exampleIdentitySource", IdentitySourceArgs.builder()
 *             .policyStoreId(example.id())
 *             .configuration(IdentitySourceConfigurationArgs.builder()
 *                 .openIdConnectConfiguration(IdentitySourceConfigurationOpenIdConnectConfigurationArgs.builder()
 *                     .issuer("https://auth.example.com")
 *                     .tokenSelection(IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelectionArgs.builder()
 *                         .accessTokenOnly(IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelectionAccessTokenOnlyArgs.builder()
 *                             .audiences("https://myapp.example.com")
 *                             .principalIdClaim("sub")
 *                             .build())
 *                         .build())
 *                     .entityIdPrefix("MyOIDCProvider")
 *                     .groupConfiguration(IdentitySourceConfigurationOpenIdConnectConfigurationGroupConfigurationArgs.builder()
 *                         .groupClaim("groups")
 *                         .groupEntityType("MyCorp::UserGroup")
 *                         .build())
 *                     .build())
 *                 .build())
 *             .principalEntityType("MyCorp::User")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Using `pulumi import`, import Verified Permissions Identity Source using the `policy_store_id:identity_source_id`. For example:
 * 
 * ```sh
 * $ pulumi import aws:verifiedpermissions/identitySource:IdentitySource example policy-store-id-12345678:identity-source-id-12345678
 * ```
 * 
 */
@ResourceType(type="aws:verifiedpermissions/identitySource:IdentitySource")
public class IdentitySource extends com.pulumi.resources.CustomResource {
    /**
     * Specifies the details required to communicate with the identity provider (IdP) associated with this identity source. See Configuration below.
     * 
     */
    @Export(name="configuration", refs={IdentitySourceConfiguration.class}, tree="[0]")
    private Output</* @Nullable */ IdentitySourceConfiguration> configuration;

    /**
     * @return Specifies the details required to communicate with the identity provider (IdP) associated with this identity source. See Configuration below.
     * 
     */
    public Output<Optional<IdentitySourceConfiguration>> configuration() {
        return Codegen.optional(this.configuration);
    }
    /**
     * Specifies the ID of the policy store in which you want to store this identity source.
     * 
     */
    @Export(name="policyStoreId", refs={String.class}, tree="[0]")
    private Output<String> policyStoreId;

    /**
     * @return Specifies the ID of the policy store in which you want to store this identity source.
     * 
     */
    public Output<String> policyStoreId() {
        return this.policyStoreId;
    }
    /**
     * Specifies the namespace and data type of the principals generated for identities authenticated by the new identity source.
     * 
     */
    @Export(name="principalEntityType", refs={String.class}, tree="[0]")
    private Output<String> principalEntityType;

    /**
     * @return Specifies the namespace and data type of the principals generated for identities authenticated by the new identity source.
     * 
     */
    public Output<String> principalEntityType() {
        return this.principalEntityType;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public IdentitySource(java.lang.String name) {
        this(name, IdentitySourceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public IdentitySource(java.lang.String name, IdentitySourceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public IdentitySource(java.lang.String name, IdentitySourceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:verifiedpermissions/identitySource:IdentitySource", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private IdentitySource(java.lang.String name, Output<java.lang.String> id, @Nullable IdentitySourceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:verifiedpermissions/identitySource:IdentitySource", name, state, makeResourceOptions(options, id), false);
    }

    private static IdentitySourceArgs makeArgs(IdentitySourceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? IdentitySourceArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static IdentitySource get(java.lang.String name, Output<java.lang.String> id, @Nullable IdentitySourceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new IdentitySource(name, id, state, options);
    }
}
