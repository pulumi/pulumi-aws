// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codedeploy.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DeploymentConfigMinimumHealthyHosts {
    /**
     * @return The type can either be `FLEET_PERCENT` or `HOST_COUNT`.
     * 
     */
    private @Nullable String type;
    /**
     * @return The value when the type is `FLEET_PERCENT` represents the minimum number of healthy instances as
     * a percentage of the total number of instances in the deployment. If you specify FLEET_PERCENT, at the start of the
     * deployment, AWS CodeDeploy converts the percentage to the equivalent number of instance and rounds up fractional instances.
     * When the type is `HOST_COUNT`, the value represents the minimum number of healthy instances as an absolute value.
     * 
     */
    private @Nullable Integer value;

    private DeploymentConfigMinimumHealthyHosts() {}
    /**
     * @return The type can either be `FLEET_PERCENT` or `HOST_COUNT`.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    /**
     * @return The value when the type is `FLEET_PERCENT` represents the minimum number of healthy instances as
     * a percentage of the total number of instances in the deployment. If you specify FLEET_PERCENT, at the start of the
     * deployment, AWS CodeDeploy converts the percentage to the equivalent number of instance and rounds up fractional instances.
     * When the type is `HOST_COUNT`, the value represents the minimum number of healthy instances as an absolute value.
     * 
     */
    public Optional<Integer> value() {
        return Optional.ofNullable(this.value);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeploymentConfigMinimumHealthyHosts defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String type;
        private @Nullable Integer value;
        public Builder() {}
        public Builder(DeploymentConfigMinimumHealthyHosts defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.type = defaults.type;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder value(@Nullable Integer value) {
            this.value = value;
            return this;
        }
        public DeploymentConfigMinimumHealthyHosts build() {
            final var o = new DeploymentConfigMinimumHealthyHosts();
            o.type = type;
            o.value = value;
            return o;
        }
    }
}
