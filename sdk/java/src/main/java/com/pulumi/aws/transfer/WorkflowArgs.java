// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.transfer;

import com.pulumi.aws.transfer.inputs.WorkflowOnExceptionStepArgs;
import com.pulumi.aws.transfer.inputs.WorkflowStepArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkflowArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkflowArgs Empty = new WorkflowArgs();

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="onExceptionSteps")
    private @Nullable Output<List<WorkflowOnExceptionStepArgs>> onExceptionSteps;

    public Optional<Output<List<WorkflowOnExceptionStepArgs>>> onExceptionSteps() {
        return Optional.ofNullable(this.onExceptionSteps);
    }

    @Import(name="steps", required=true)
    private Output<List<WorkflowStepArgs>> steps;

    public Output<List<WorkflowStepArgs>> steps() {
        return this.steps;
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private WorkflowArgs() {}

    private WorkflowArgs(WorkflowArgs $) {
        this.description = $.description;
        this.onExceptionSteps = $.onExceptionSteps;
        this.steps = $.steps;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkflowArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkflowArgs $;

        public Builder() {
            $ = new WorkflowArgs();
        }

        public Builder(WorkflowArgs defaults) {
            $ = new WorkflowArgs(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder onExceptionSteps(@Nullable Output<List<WorkflowOnExceptionStepArgs>> onExceptionSteps) {
            $.onExceptionSteps = onExceptionSteps;
            return this;
        }

        public Builder onExceptionSteps(List<WorkflowOnExceptionStepArgs> onExceptionSteps) {
            return onExceptionSteps(Output.of(onExceptionSteps));
        }

        public Builder onExceptionSteps(WorkflowOnExceptionStepArgs... onExceptionSteps) {
            return onExceptionSteps(List.of(onExceptionSteps));
        }

        public Builder steps(Output<List<WorkflowStepArgs>> steps) {
            $.steps = steps;
            return this;
        }

        public Builder steps(List<WorkflowStepArgs> steps) {
            return steps(Output.of(steps));
        }

        public Builder steps(WorkflowStepArgs... steps) {
            return steps(List.of(steps));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public WorkflowArgs build() {
            $.steps = Objects.requireNonNull($.steps, "expected parameter 'steps' to be non-null");
            return $;
        }
    }

}
