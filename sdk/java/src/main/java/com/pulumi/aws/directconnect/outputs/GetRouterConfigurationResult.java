// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.directconnect.outputs;

import com.pulumi.aws.directconnect.outputs.GetRouterConfigurationRouter;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRouterConfigurationResult {
    /**
     * @return Instructions for configuring your router
     * 
     */
    private String customerRouterConfig;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Router type identifier
     * 
     */
    private String routerTypeIdentifier;
    /**
     * @return Block of the router type details
     * 
     */
    private List<GetRouterConfigurationRouter> routers;
    private String virtualInterfaceId;
    private String virtualInterfaceName;

    private GetRouterConfigurationResult() {}
    /**
     * @return Instructions for configuring your router
     * 
     */
    public String customerRouterConfig() {
        return this.customerRouterConfig;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Router type identifier
     * 
     */
    public String routerTypeIdentifier() {
        return this.routerTypeIdentifier;
    }
    /**
     * @return Block of the router type details
     * 
     */
    public List<GetRouterConfigurationRouter> routers() {
        return this.routers;
    }
    public String virtualInterfaceId() {
        return this.virtualInterfaceId;
    }
    public String virtualInterfaceName() {
        return this.virtualInterfaceName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRouterConfigurationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String customerRouterConfig;
        private String id;
        private String routerTypeIdentifier;
        private List<GetRouterConfigurationRouter> routers;
        private String virtualInterfaceId;
        private String virtualInterfaceName;
        public Builder() {}
        public Builder(GetRouterConfigurationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customerRouterConfig = defaults.customerRouterConfig;
    	      this.id = defaults.id;
    	      this.routerTypeIdentifier = defaults.routerTypeIdentifier;
    	      this.routers = defaults.routers;
    	      this.virtualInterfaceId = defaults.virtualInterfaceId;
    	      this.virtualInterfaceName = defaults.virtualInterfaceName;
        }

        @CustomType.Setter
        public Builder customerRouterConfig(String customerRouterConfig) {
            this.customerRouterConfig = Objects.requireNonNull(customerRouterConfig);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder routerTypeIdentifier(String routerTypeIdentifier) {
            this.routerTypeIdentifier = Objects.requireNonNull(routerTypeIdentifier);
            return this;
        }
        @CustomType.Setter
        public Builder routers(List<GetRouterConfigurationRouter> routers) {
            this.routers = Objects.requireNonNull(routers);
            return this;
        }
        public Builder routers(GetRouterConfigurationRouter... routers) {
            return routers(List.of(routers));
        }
        @CustomType.Setter
        public Builder virtualInterfaceId(String virtualInterfaceId) {
            this.virtualInterfaceId = Objects.requireNonNull(virtualInterfaceId);
            return this;
        }
        @CustomType.Setter
        public Builder virtualInterfaceName(String virtualInterfaceName) {
            this.virtualInterfaceName = Objects.requireNonNull(virtualInterfaceName);
            return this;
        }
        public GetRouterConfigurationResult build() {
            final var o = new GetRouterConfigurationResult();
            o.customerRouterConfig = customerRouterConfig;
            o.id = id;
            o.routerTypeIdentifier = routerTypeIdentifier;
            o.routers = routers;
            o.virtualInterfaceId = virtualInterfaceId;
            o.virtualInterfaceName = virtualInterfaceName;
            return o;
        }
    }
}
