// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class DataSetRefreshPropertiesRefreshConfigurationIncrementalRefreshLookbackWindowArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataSetRefreshPropertiesRefreshConfigurationIncrementalRefreshLookbackWindowArgs Empty = new DataSetRefreshPropertiesRefreshConfigurationIncrementalRefreshLookbackWindowArgs();

    /**
     * The name of the lookback window column.
     * 
     */
    @Import(name="columnName", required=true)
    private Output<String> columnName;

    /**
     * @return The name of the lookback window column.
     * 
     */
    public Output<String> columnName() {
        return this.columnName;
    }

    /**
     * The lookback window column size.
     * 
     */
    @Import(name="size", required=true)
    private Output<Integer> size;

    /**
     * @return The lookback window column size.
     * 
     */
    public Output<Integer> size() {
        return this.size;
    }

    /**
     * The size unit that is used for the lookback window column. Valid values for this structure are `HOUR`, `DAY`, and `WEEK`.
     * 
     */
    @Import(name="sizeUnit", required=true)
    private Output<String> sizeUnit;

    /**
     * @return The size unit that is used for the lookback window column. Valid values for this structure are `HOUR`, `DAY`, and `WEEK`.
     * 
     */
    public Output<String> sizeUnit() {
        return this.sizeUnit;
    }

    private DataSetRefreshPropertiesRefreshConfigurationIncrementalRefreshLookbackWindowArgs() {}

    private DataSetRefreshPropertiesRefreshConfigurationIncrementalRefreshLookbackWindowArgs(DataSetRefreshPropertiesRefreshConfigurationIncrementalRefreshLookbackWindowArgs $) {
        this.columnName = $.columnName;
        this.size = $.size;
        this.sizeUnit = $.sizeUnit;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataSetRefreshPropertiesRefreshConfigurationIncrementalRefreshLookbackWindowArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataSetRefreshPropertiesRefreshConfigurationIncrementalRefreshLookbackWindowArgs $;

        public Builder() {
            $ = new DataSetRefreshPropertiesRefreshConfigurationIncrementalRefreshLookbackWindowArgs();
        }

        public Builder(DataSetRefreshPropertiesRefreshConfigurationIncrementalRefreshLookbackWindowArgs defaults) {
            $ = new DataSetRefreshPropertiesRefreshConfigurationIncrementalRefreshLookbackWindowArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param columnName The name of the lookback window column.
         * 
         * @return builder
         * 
         */
        public Builder columnName(Output<String> columnName) {
            $.columnName = columnName;
            return this;
        }

        /**
         * @param columnName The name of the lookback window column.
         * 
         * @return builder
         * 
         */
        public Builder columnName(String columnName) {
            return columnName(Output.of(columnName));
        }

        /**
         * @param size The lookback window column size.
         * 
         * @return builder
         * 
         */
        public Builder size(Output<Integer> size) {
            $.size = size;
            return this;
        }

        /**
         * @param size The lookback window column size.
         * 
         * @return builder
         * 
         */
        public Builder size(Integer size) {
            return size(Output.of(size));
        }

        /**
         * @param sizeUnit The size unit that is used for the lookback window column. Valid values for this structure are `HOUR`, `DAY`, and `WEEK`.
         * 
         * @return builder
         * 
         */
        public Builder sizeUnit(Output<String> sizeUnit) {
            $.sizeUnit = sizeUnit;
            return this;
        }

        /**
         * @param sizeUnit The size unit that is used for the lookback window column. Valid values for this structure are `HOUR`, `DAY`, and `WEEK`.
         * 
         * @return builder
         * 
         */
        public Builder sizeUnit(String sizeUnit) {
            return sizeUnit(Output.of(sizeUnit));
        }

        public DataSetRefreshPropertiesRefreshConfigurationIncrementalRefreshLookbackWindowArgs build() {
            $.columnName = Objects.requireNonNull($.columnName, "expected parameter 'columnName' to be non-null");
            $.size = Objects.requireNonNull($.size, "expected parameter 'size' to be non-null");
            $.sizeUnit = Objects.requireNonNull($.sizeUnit, "expected parameter 'sizeUnit' to be non-null");
            return $;
        }
    }

}
