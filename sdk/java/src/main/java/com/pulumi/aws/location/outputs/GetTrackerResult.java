// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.location.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetTrackerResult {
    /**
     * @return Timestamp for when the tracker resource was created in ISO 8601 format.
     * 
     */
    private @Nullable String createTime;
    /**
     * @return Optional description for the tracker resource.
     * 
     */
    private @Nullable String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return Key identifier for an AWS KMS customer managed key assigned to the Amazon Location resource.
     * 
     */
    private @Nullable String kmsKeyId;
    /**
     * @return Position filtering method of the tracker resource.
     * 
     */
    private @Nullable String positionFiltering;
    /**
     * @return Key-value map of resource tags for the tracker.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return ARN for the tracker resource. Used when you need to specify a resource across all AWS.
     * 
     */
    private @Nullable String trackerArn;
    private String trackerName;
    /**
     * @return Timestamp for when the tracker resource was last updated in ISO 8601 format.
     * 
     */
    private @Nullable String updateTime;

    private GetTrackerResult() {}
    /**
     * @return Timestamp for when the tracker resource was created in ISO 8601 format.
     * 
     */
    public Optional<String> createTime() {
        return Optional.ofNullable(this.createTime);
    }
    /**
     * @return Optional description for the tracker resource.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Key identifier for an AWS KMS customer managed key assigned to the Amazon Location resource.
     * 
     */
    public Optional<String> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }
    /**
     * @return Position filtering method of the tracker resource.
     * 
     */
    public Optional<String> positionFiltering() {
        return Optional.ofNullable(this.positionFiltering);
    }
    /**
     * @return Key-value map of resource tags for the tracker.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return ARN for the tracker resource. Used when you need to specify a resource across all AWS.
     * 
     */
    public Optional<String> trackerArn() {
        return Optional.ofNullable(this.trackerArn);
    }
    public String trackerName() {
        return this.trackerName;
    }
    /**
     * @return Timestamp for when the tracker resource was last updated in ISO 8601 format.
     * 
     */
    public Optional<String> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTrackerResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String createTime;
        private @Nullable String description;
        private @Nullable String id;
        private @Nullable String kmsKeyId;
        private @Nullable String positionFiltering;
        private @Nullable Map<String,String> tags;
        private @Nullable String trackerArn;
        private String trackerName;
        private @Nullable String updateTime;
        public Builder() {}
        public Builder(GetTrackerResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.positionFiltering = defaults.positionFiltering;
    	      this.tags = defaults.tags;
    	      this.trackerArn = defaults.trackerArn;
    	      this.trackerName = defaults.trackerName;
    	      this.updateTime = defaults.updateTime;
        }

        @CustomType.Setter
        public Builder createTime(@Nullable String createTime) {
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyId(@Nullable String kmsKeyId) {
            this.kmsKeyId = kmsKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder positionFiltering(@Nullable String positionFiltering) {
            this.positionFiltering = positionFiltering;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder trackerArn(@Nullable String trackerArn) {
            this.trackerArn = trackerArn;
            return this;
        }
        @CustomType.Setter
        public Builder trackerName(String trackerName) {
            this.trackerName = Objects.requireNonNull(trackerName);
            return this;
        }
        @CustomType.Setter
        public Builder updateTime(@Nullable String updateTime) {
            this.updateTime = updateTime;
            return this;
        }
        public GetTrackerResult build() {
            final var o = new GetTrackerResult();
            o.createTime = createTime;
            o.description = description;
            o.id = id;
            o.kmsKeyId = kmsKeyId;
            o.positionFiltering = positionFiltering;
            o.tags = tags;
            o.trackerArn = trackerArn;
            o.trackerName = trackerName;
            o.updateTime = updateTime;
            return o;
        }
    }
}
