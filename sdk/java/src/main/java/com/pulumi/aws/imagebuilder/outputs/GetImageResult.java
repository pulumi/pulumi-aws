// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.imagebuilder.outputs;

import com.pulumi.aws.imagebuilder.outputs.GetImageImageScanningConfiguration;
import com.pulumi.aws.imagebuilder.outputs.GetImageImageTestsConfiguration;
import com.pulumi.aws.imagebuilder.outputs.GetImageOutputResource;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetImageResult {
    private String arn;
    /**
     * @return Build version ARN of the image. This will always have the `#.#.#/#` suffix.
     * 
     */
    private @Nullable String buildVersionArn;
    /**
     * @return ARN of the container recipe.
     * 
     */
    private @Nullable String containerRecipeArn;
    /**
     * @return Date the image was created.
     * 
     */
    private @Nullable String dateCreated;
    /**
     * @return ARN of the Image Builder Distribution Configuration.
     * 
     */
    private @Nullable String distributionConfigurationArn;
    /**
     * @return Whether additional information about the image being created is collected.
     * 
     */
    private @Nullable Boolean enhancedImageMetadataEnabled;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return ARN of the image recipe.
     * 
     */
    private @Nullable String imageRecipeArn;
    /**
     * @return List of an object with image scanning configuration fields.
     * 
     */
    private @Nullable List<GetImageImageScanningConfiguration> imageScanningConfigurations;
    /**
     * @return List of an object with image tests configuration.
     * 
     */
    private @Nullable List<GetImageImageTestsConfiguration> imageTestsConfigurations;
    /**
     * @return ARN of the Image Builder Infrastructure Configuration.
     * 
     */
    private @Nullable String infrastructureConfigurationArn;
    /**
     * @return Name of the AMI.
     * 
     */
    private @Nullable String name;
    /**
     * @return Operating System version of the image.
     * 
     */
    private @Nullable String osVersion;
    /**
     * @return List of objects with resources created by the image.
     * 
     */
    private @Nullable List<GetImageOutputResource> outputResources;
    /**
     * @return Platform of the image.
     * 
     */
    private @Nullable String platform;
    /**
     * @return Key-value map of resource tags for the image.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Version of the image.
     * 
     */
    private @Nullable String version;

    private GetImageResult() {}
    public String arn() {
        return this.arn;
    }
    /**
     * @return Build version ARN of the image. This will always have the `#.#.#/#` suffix.
     * 
     */
    public Optional<String> buildVersionArn() {
        return Optional.ofNullable(this.buildVersionArn);
    }
    /**
     * @return ARN of the container recipe.
     * 
     */
    public Optional<String> containerRecipeArn() {
        return Optional.ofNullable(this.containerRecipeArn);
    }
    /**
     * @return Date the image was created.
     * 
     */
    public Optional<String> dateCreated() {
        return Optional.ofNullable(this.dateCreated);
    }
    /**
     * @return ARN of the Image Builder Distribution Configuration.
     * 
     */
    public Optional<String> distributionConfigurationArn() {
        return Optional.ofNullable(this.distributionConfigurationArn);
    }
    /**
     * @return Whether additional information about the image being created is collected.
     * 
     */
    public Optional<Boolean> enhancedImageMetadataEnabled() {
        return Optional.ofNullable(this.enhancedImageMetadataEnabled);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return ARN of the image recipe.
     * 
     */
    public Optional<String> imageRecipeArn() {
        return Optional.ofNullable(this.imageRecipeArn);
    }
    /**
     * @return List of an object with image scanning configuration fields.
     * 
     */
    public List<GetImageImageScanningConfiguration> imageScanningConfigurations() {
        return this.imageScanningConfigurations == null ? List.of() : this.imageScanningConfigurations;
    }
    /**
     * @return List of an object with image tests configuration.
     * 
     */
    public List<GetImageImageTestsConfiguration> imageTestsConfigurations() {
        return this.imageTestsConfigurations == null ? List.of() : this.imageTestsConfigurations;
    }
    /**
     * @return ARN of the Image Builder Infrastructure Configuration.
     * 
     */
    public Optional<String> infrastructureConfigurationArn() {
        return Optional.ofNullable(this.infrastructureConfigurationArn);
    }
    /**
     * @return Name of the AMI.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Operating System version of the image.
     * 
     */
    public Optional<String> osVersion() {
        return Optional.ofNullable(this.osVersion);
    }
    /**
     * @return List of objects with resources created by the image.
     * 
     */
    public List<GetImageOutputResource> outputResources() {
        return this.outputResources == null ? List.of() : this.outputResources;
    }
    /**
     * @return Platform of the image.
     * 
     */
    public Optional<String> platform() {
        return Optional.ofNullable(this.platform);
    }
    /**
     * @return Key-value map of resource tags for the image.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Version of the image.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetImageResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private @Nullable String buildVersionArn;
        private @Nullable String containerRecipeArn;
        private @Nullable String dateCreated;
        private @Nullable String distributionConfigurationArn;
        private @Nullable Boolean enhancedImageMetadataEnabled;
        private @Nullable String id;
        private @Nullable String imageRecipeArn;
        private @Nullable List<GetImageImageScanningConfiguration> imageScanningConfigurations;
        private @Nullable List<GetImageImageTestsConfiguration> imageTestsConfigurations;
        private @Nullable String infrastructureConfigurationArn;
        private @Nullable String name;
        private @Nullable String osVersion;
        private @Nullable List<GetImageOutputResource> outputResources;
        private @Nullable String platform;
        private @Nullable Map<String,String> tags;
        private @Nullable String version;
        public Builder() {}
        public Builder(GetImageResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.buildVersionArn = defaults.buildVersionArn;
    	      this.containerRecipeArn = defaults.containerRecipeArn;
    	      this.dateCreated = defaults.dateCreated;
    	      this.distributionConfigurationArn = defaults.distributionConfigurationArn;
    	      this.enhancedImageMetadataEnabled = defaults.enhancedImageMetadataEnabled;
    	      this.id = defaults.id;
    	      this.imageRecipeArn = defaults.imageRecipeArn;
    	      this.imageScanningConfigurations = defaults.imageScanningConfigurations;
    	      this.imageTestsConfigurations = defaults.imageTestsConfigurations;
    	      this.infrastructureConfigurationArn = defaults.infrastructureConfigurationArn;
    	      this.name = defaults.name;
    	      this.osVersion = defaults.osVersion;
    	      this.outputResources = defaults.outputResources;
    	      this.platform = defaults.platform;
    	      this.tags = defaults.tags;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder buildVersionArn(@Nullable String buildVersionArn) {
            this.buildVersionArn = buildVersionArn;
            return this;
        }
        @CustomType.Setter
        public Builder containerRecipeArn(@Nullable String containerRecipeArn) {
            this.containerRecipeArn = containerRecipeArn;
            return this;
        }
        @CustomType.Setter
        public Builder dateCreated(@Nullable String dateCreated) {
            this.dateCreated = dateCreated;
            return this;
        }
        @CustomType.Setter
        public Builder distributionConfigurationArn(@Nullable String distributionConfigurationArn) {
            this.distributionConfigurationArn = distributionConfigurationArn;
            return this;
        }
        @CustomType.Setter
        public Builder enhancedImageMetadataEnabled(@Nullable Boolean enhancedImageMetadataEnabled) {
            this.enhancedImageMetadataEnabled = enhancedImageMetadataEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder imageRecipeArn(@Nullable String imageRecipeArn) {
            this.imageRecipeArn = imageRecipeArn;
            return this;
        }
        @CustomType.Setter
        public Builder imageScanningConfigurations(@Nullable List<GetImageImageScanningConfiguration> imageScanningConfigurations) {
            this.imageScanningConfigurations = imageScanningConfigurations;
            return this;
        }
        public Builder imageScanningConfigurations(GetImageImageScanningConfiguration... imageScanningConfigurations) {
            return imageScanningConfigurations(List.of(imageScanningConfigurations));
        }
        @CustomType.Setter
        public Builder imageTestsConfigurations(@Nullable List<GetImageImageTestsConfiguration> imageTestsConfigurations) {
            this.imageTestsConfigurations = imageTestsConfigurations;
            return this;
        }
        public Builder imageTestsConfigurations(GetImageImageTestsConfiguration... imageTestsConfigurations) {
            return imageTestsConfigurations(List.of(imageTestsConfigurations));
        }
        @CustomType.Setter
        public Builder infrastructureConfigurationArn(@Nullable String infrastructureConfigurationArn) {
            this.infrastructureConfigurationArn = infrastructureConfigurationArn;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder osVersion(@Nullable String osVersion) {
            this.osVersion = osVersion;
            return this;
        }
        @CustomType.Setter
        public Builder outputResources(@Nullable List<GetImageOutputResource> outputResources) {
            this.outputResources = outputResources;
            return this;
        }
        public Builder outputResources(GetImageOutputResource... outputResources) {
            return outputResources(List.of(outputResources));
        }
        @CustomType.Setter
        public Builder platform(@Nullable String platform) {
            this.platform = platform;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }
        public GetImageResult build() {
            final var o = new GetImageResult();
            o.arn = arn;
            o.buildVersionArn = buildVersionArn;
            o.containerRecipeArn = containerRecipeArn;
            o.dateCreated = dateCreated;
            o.distributionConfigurationArn = distributionConfigurationArn;
            o.enhancedImageMetadataEnabled = enhancedImageMetadataEnabled;
            o.id = id;
            o.imageRecipeArn = imageRecipeArn;
            o.imageScanningConfigurations = imageScanningConfigurations;
            o.imageTestsConfigurations = imageTestsConfigurations;
            o.infrastructureConfigurationArn = infrastructureConfigurationArn;
            o.name = name;
            o.osVersion = osVersion;
            o.outputResources = outputResources;
            o.platform = platform;
            o.tags = tags;
            o.version = version;
            return o;
        }
    }
}
