// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.imagebuilder.outputs;

import com.pulumi.aws.imagebuilder.outputs.GetImageImageTestsConfiguration;
import com.pulumi.aws.imagebuilder.outputs.GetImageOutputResource;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetImageResult {
    private String arn;
    private String buildVersionArn;
    private String containerRecipeArn;
    private String dateCreated;
    private String distributionConfigurationArn;
    private Boolean enhancedImageMetadataEnabled;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String imageRecipeArn;
    private List<GetImageImageTestsConfiguration> imageTestsConfigurations;
    private String infrastructureConfigurationArn;
    private String name;
    private String osVersion;
    private List<GetImageOutputResource> outputResources;
    private String platform;
    private Map<String,String> tags;
    private String version;

    private GetImageResult() {}
    public String arn() {
        return this.arn;
    }
    public String buildVersionArn() {
        return this.buildVersionArn;
    }
    public String containerRecipeArn() {
        return this.containerRecipeArn;
    }
    public String dateCreated() {
        return this.dateCreated;
    }
    public String distributionConfigurationArn() {
        return this.distributionConfigurationArn;
    }
    public Boolean enhancedImageMetadataEnabled() {
        return this.enhancedImageMetadataEnabled;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String imageRecipeArn() {
        return this.imageRecipeArn;
    }
    public List<GetImageImageTestsConfiguration> imageTestsConfigurations() {
        return this.imageTestsConfigurations;
    }
    public String infrastructureConfigurationArn() {
        return this.infrastructureConfigurationArn;
    }
    public String name() {
        return this.name;
    }
    public String osVersion() {
        return this.osVersion;
    }
    public List<GetImageOutputResource> outputResources() {
        return this.outputResources;
    }
    public String platform() {
        return this.platform;
    }
    public Map<String,String> tags() {
        return this.tags;
    }
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetImageResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private String buildVersionArn;
        private String containerRecipeArn;
        private String dateCreated;
        private String distributionConfigurationArn;
        private Boolean enhancedImageMetadataEnabled;
        private String id;
        private String imageRecipeArn;
        private List<GetImageImageTestsConfiguration> imageTestsConfigurations;
        private String infrastructureConfigurationArn;
        private String name;
        private String osVersion;
        private List<GetImageOutputResource> outputResources;
        private String platform;
        private Map<String,String> tags;
        private String version;
        public Builder() {}
        public Builder(GetImageResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.buildVersionArn = defaults.buildVersionArn;
    	      this.containerRecipeArn = defaults.containerRecipeArn;
    	      this.dateCreated = defaults.dateCreated;
    	      this.distributionConfigurationArn = defaults.distributionConfigurationArn;
    	      this.enhancedImageMetadataEnabled = defaults.enhancedImageMetadataEnabled;
    	      this.id = defaults.id;
    	      this.imageRecipeArn = defaults.imageRecipeArn;
    	      this.imageTestsConfigurations = defaults.imageTestsConfigurations;
    	      this.infrastructureConfigurationArn = defaults.infrastructureConfigurationArn;
    	      this.name = defaults.name;
    	      this.osVersion = defaults.osVersion;
    	      this.outputResources = defaults.outputResources;
    	      this.platform = defaults.platform;
    	      this.tags = defaults.tags;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder buildVersionArn(String buildVersionArn) {
            this.buildVersionArn = Objects.requireNonNull(buildVersionArn);
            return this;
        }
        @CustomType.Setter
        public Builder containerRecipeArn(String containerRecipeArn) {
            this.containerRecipeArn = Objects.requireNonNull(containerRecipeArn);
            return this;
        }
        @CustomType.Setter
        public Builder dateCreated(String dateCreated) {
            this.dateCreated = Objects.requireNonNull(dateCreated);
            return this;
        }
        @CustomType.Setter
        public Builder distributionConfigurationArn(String distributionConfigurationArn) {
            this.distributionConfigurationArn = Objects.requireNonNull(distributionConfigurationArn);
            return this;
        }
        @CustomType.Setter
        public Builder enhancedImageMetadataEnabled(Boolean enhancedImageMetadataEnabled) {
            this.enhancedImageMetadataEnabled = Objects.requireNonNull(enhancedImageMetadataEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder imageRecipeArn(String imageRecipeArn) {
            this.imageRecipeArn = Objects.requireNonNull(imageRecipeArn);
            return this;
        }
        @CustomType.Setter
        public Builder imageTestsConfigurations(List<GetImageImageTestsConfiguration> imageTestsConfigurations) {
            this.imageTestsConfigurations = Objects.requireNonNull(imageTestsConfigurations);
            return this;
        }
        public Builder imageTestsConfigurations(GetImageImageTestsConfiguration... imageTestsConfigurations) {
            return imageTestsConfigurations(List.of(imageTestsConfigurations));
        }
        @CustomType.Setter
        public Builder infrastructureConfigurationArn(String infrastructureConfigurationArn) {
            this.infrastructureConfigurationArn = Objects.requireNonNull(infrastructureConfigurationArn);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder osVersion(String osVersion) {
            this.osVersion = Objects.requireNonNull(osVersion);
            return this;
        }
        @CustomType.Setter
        public Builder outputResources(List<GetImageOutputResource> outputResources) {
            this.outputResources = Objects.requireNonNull(outputResources);
            return this;
        }
        public Builder outputResources(GetImageOutputResource... outputResources) {
            return outputResources(List.of(outputResources));
        }
        @CustomType.Setter
        public Builder platform(String platform) {
            this.platform = Objects.requireNonNull(platform);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }
        public GetImageResult build() {
            final var o = new GetImageResult();
            o.arn = arn;
            o.buildVersionArn = buildVersionArn;
            o.containerRecipeArn = containerRecipeArn;
            o.dateCreated = dateCreated;
            o.distributionConfigurationArn = distributionConfigurationArn;
            o.enhancedImageMetadataEnabled = enhancedImageMetadataEnabled;
            o.id = id;
            o.imageRecipeArn = imageRecipeArn;
            o.imageTestsConfigurations = imageTestsConfigurations;
            o.infrastructureConfigurationArn = infrastructureConfigurationArn;
            o.name = name;
            o.osVersion = osVersion;
            o.outputResources = outputResources;
            o.platform = platform;
            o.tags = tags;
            o.version = version;
            return o;
        }
    }
}
