// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iam.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetPolicyDocumentStatementPrincipalArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetPolicyDocumentStatementPrincipalArgs Empty = new GetPolicyDocumentStatementPrincipalArgs();

    @Import(name="identifiers", required=true)
    private Output<List<String>> identifiers;

    public Output<List<String>> identifiers() {
        return this.identifiers;
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    private GetPolicyDocumentStatementPrincipalArgs() {}

    private GetPolicyDocumentStatementPrincipalArgs(GetPolicyDocumentStatementPrincipalArgs $) {
        this.identifiers = $.identifiers;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPolicyDocumentStatementPrincipalArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPolicyDocumentStatementPrincipalArgs $;

        public Builder() {
            $ = new GetPolicyDocumentStatementPrincipalArgs();
        }

        public Builder(GetPolicyDocumentStatementPrincipalArgs defaults) {
            $ = new GetPolicyDocumentStatementPrincipalArgs(Objects.requireNonNull(defaults));
        }

        public Builder identifiers(Output<List<String>> identifiers) {
            $.identifiers = identifiers;
            return this;
        }

        public Builder identifiers(List<String> identifiers) {
            return identifiers(Output.of(identifiers));
        }

        public Builder identifiers(String... identifiers) {
            return identifiers(List.of(identifiers));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public GetPolicyDocumentStatementPrincipalArgs build() {
            $.identifiers = Objects.requireNonNull($.identifiers, "expected parameter 'identifiers' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
