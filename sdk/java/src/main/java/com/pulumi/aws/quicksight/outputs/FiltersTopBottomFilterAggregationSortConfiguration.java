// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.AggregationFunction;
import com.pulumi.aws.quicksight.outputs.Column;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class FiltersTopBottomFilterAggregationSortConfiguration {
    private AggregationFunction aggregationFunction;
    private Column column;
    private String sortDirection;

    private FiltersTopBottomFilterAggregationSortConfiguration() {}
    public AggregationFunction aggregationFunction() {
        return this.aggregationFunction;
    }
    public Column column() {
        return this.column;
    }
    public String sortDirection() {
        return this.sortDirection;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FiltersTopBottomFilterAggregationSortConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private AggregationFunction aggregationFunction;
        private Column column;
        private String sortDirection;
        public Builder() {}
        public Builder(FiltersTopBottomFilterAggregationSortConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aggregationFunction = defaults.aggregationFunction;
    	      this.column = defaults.column;
    	      this.sortDirection = defaults.sortDirection;
        }

        @CustomType.Setter
        public Builder aggregationFunction(AggregationFunction aggregationFunction) {
            if (aggregationFunction == null) {
              throw new MissingRequiredPropertyException("FiltersTopBottomFilterAggregationSortConfiguration", "aggregationFunction");
            }
            this.aggregationFunction = aggregationFunction;
            return this;
        }
        @CustomType.Setter
        public Builder column(Column column) {
            if (column == null) {
              throw new MissingRequiredPropertyException("FiltersTopBottomFilterAggregationSortConfiguration", "column");
            }
            this.column = column;
            return this;
        }
        @CustomType.Setter
        public Builder sortDirection(String sortDirection) {
            if (sortDirection == null) {
              throw new MissingRequiredPropertyException("FiltersTopBottomFilterAggregationSortConfiguration", "sortDirection");
            }
            this.sortDirection = sortDirection;
            return this;
        }
        public FiltersTopBottomFilterAggregationSortConfiguration build() {
            final var _resultValue = new FiltersTopBottomFilterAggregationSortConfiguration();
            _resultValue.aggregationFunction = aggregationFunction;
            _resultValue.column = column;
            _resultValue.sortDirection = sortDirection;
            return _resultValue;
        }
    }
}
