// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bcmdata;

import com.pulumi.aws.bcmdata.inputs.ExportExportArgs;
import com.pulumi.aws.bcmdata.inputs.ExportTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExportArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExportArgs Empty = new ExportArgs();

    /**
     * The details of the export, including data query, name, description, and destination configuration.  See the `export` argument reference below.
     * 
     */
    @Import(name="export")
    private @Nullable Output<ExportExportArgs> export;

    /**
     * @return The details of the export, including data query, name, description, and destination configuration.  See the `export` argument reference below.
     * 
     */
    public Optional<Output<ExportExportArgs>> export() {
        return Optional.ofNullable(this.export);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="timeouts")
    private @Nullable Output<ExportTimeoutsArgs> timeouts;

    public Optional<Output<ExportTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private ExportArgs() {}

    private ExportArgs(ExportArgs $) {
        this.export = $.export;
        this.tags = $.tags;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExportArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExportArgs $;

        public Builder() {
            $ = new ExportArgs();
        }

        public Builder(ExportArgs defaults) {
            $ = new ExportArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param export The details of the export, including data query, name, description, and destination configuration.  See the `export` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder export(@Nullable Output<ExportExportArgs> export) {
            $.export = export;
            return this;
        }

        /**
         * @param export The details of the export, including data query, name, description, and destination configuration.  See the `export` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder export(ExportExportArgs export) {
            return export(Output.of(export));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder timeouts(@Nullable Output<ExportTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(ExportTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public ExportArgs build() {
            return $;
        }
    }

}
