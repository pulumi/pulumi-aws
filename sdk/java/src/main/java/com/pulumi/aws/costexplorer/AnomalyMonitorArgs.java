// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.costexplorer;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AnomalyMonitorArgs extends com.pulumi.resources.ResourceArgs {

    public static final AnomalyMonitorArgs Empty = new AnomalyMonitorArgs();

    @Import(name="monitorDimension")
    private @Nullable Output<String> monitorDimension;

    public Optional<Output<String>> monitorDimension() {
        return Optional.ofNullable(this.monitorDimension);
    }

    @Import(name="monitorSpecification")
    private @Nullable Output<String> monitorSpecification;

    public Optional<Output<String>> monitorSpecification() {
        return Optional.ofNullable(this.monitorSpecification);
    }

    @Import(name="monitorType", required=true)
    private Output<String> monitorType;

    public Output<String> monitorType() {
        return this.monitorType;
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private AnomalyMonitorArgs() {}

    private AnomalyMonitorArgs(AnomalyMonitorArgs $) {
        this.monitorDimension = $.monitorDimension;
        this.monitorSpecification = $.monitorSpecification;
        this.monitorType = $.monitorType;
        this.name = $.name;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AnomalyMonitorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AnomalyMonitorArgs $;

        public Builder() {
            $ = new AnomalyMonitorArgs();
        }

        public Builder(AnomalyMonitorArgs defaults) {
            $ = new AnomalyMonitorArgs(Objects.requireNonNull(defaults));
        }

        public Builder monitorDimension(@Nullable Output<String> monitorDimension) {
            $.monitorDimension = monitorDimension;
            return this;
        }

        public Builder monitorDimension(String monitorDimension) {
            return monitorDimension(Output.of(monitorDimension));
        }

        public Builder monitorSpecification(@Nullable Output<String> monitorSpecification) {
            $.monitorSpecification = monitorSpecification;
            return this;
        }

        public Builder monitorSpecification(String monitorSpecification) {
            return monitorSpecification(Output.of(monitorSpecification));
        }

        public Builder monitorType(Output<String> monitorType) {
            $.monitorType = monitorType;
            return this;
        }

        public Builder monitorType(String monitorType) {
            return monitorType(Output.of(monitorType));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public AnomalyMonitorArgs build() {
            $.monitorType = Objects.requireNonNull($.monitorType, "expected parameter 'monitorType' to be non-null");
            return $;
        }
    }

}
