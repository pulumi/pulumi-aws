// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.m2;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.m2.EnvironmentArgs;
import com.pulumi.aws.m2.inputs.EnvironmentState;
import com.pulumi.aws.m2.outputs.EnvironmentHighAvailabilityConfig;
import com.pulumi.aws.m2.outputs.EnvironmentStorageConfiguration;
import com.pulumi.aws.m2.outputs.EnvironmentTimeouts;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for managing an [AWS Mainframe Modernization Environment](https://docs.aws.amazon.com/m2/latest/userguide/environments-m2.html).
 * 
 * ## Example Usage
 * 
 * ### Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### High Availability
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### EFS Filesystem
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### FSX Filesystem
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Using `pulumi import`, import Mainframe Modernization Environment using the `01234567890abcdef012345678`. For example:
 * 
 * ```sh
 * $ pulumi import aws:m2/environment:Environment example 01234567890abcdef012345678
 * ```
 * 
 */
@ResourceType(type="aws:m2/environment:Environment")
public class Environment extends com.pulumi.resources.CustomResource {
    @Export(name="applyChangesDuringMaintenanceWindow", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> applyChangesDuringMaintenanceWindow;

    public Output<Optional<Boolean>> applyChangesDuringMaintenanceWindow() {
        return Codegen.optional(this.applyChangesDuringMaintenanceWindow);
    }
    /**
     * ARN of the Environment.
     * 
     */
    @Export(name="arn", refs={String.class}, tree="[0]")
    private Output<String> arn;

    /**
     * @return ARN of the Environment.
     * 
     */
    public Output<String> arn() {
        return this.arn;
    }
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Engine type must be `microfocus` or `bluage`.
     * 
     */
    @Export(name="engineType", refs={String.class}, tree="[0]")
    private Output<String> engineType;

    /**
     * @return Engine type must be `microfocus` or `bluage`.
     * 
     */
    public Output<String> engineType() {
        return this.engineType;
    }
    /**
     * The specific version of the engine for the Environment.
     * 
     */
    @Export(name="engineVersion", refs={String.class}, tree="[0]")
    private Output<String> engineVersion;

    /**
     * @return The specific version of the engine for the Environment.
     * 
     */
    public Output<String> engineVersion() {
        return this.engineVersion;
    }
    /**
     * The id of the Environment.
     * 
     */
    @Export(name="environmentId", refs={String.class}, tree="[0]")
    private Output<String> environmentId;

    /**
     * @return The id of the Environment.
     * 
     */
    public Output<String> environmentId() {
        return this.environmentId;
    }
    /**
     * Force update the environment even if applications are running.
     * 
     */
    @Export(name="forceUpdate", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> forceUpdate;

    /**
     * @return Force update the environment even if applications are running.
     * 
     */
    public Output<Optional<Boolean>> forceUpdate() {
        return Codegen.optional(this.forceUpdate);
    }
    @Export(name="highAvailabilityConfig", refs={EnvironmentHighAvailabilityConfig.class}, tree="[0]")
    private Output</* @Nullable */ EnvironmentHighAvailabilityConfig> highAvailabilityConfig;

    public Output<Optional<EnvironmentHighAvailabilityConfig>> highAvailabilityConfig() {
        return Codegen.optional(this.highAvailabilityConfig);
    }
    /**
     * M2 Instance Type.
     * 
     * The following arguments are optional:
     * 
     */
    @Export(name="instanceType", refs={String.class}, tree="[0]")
    private Output<String> instanceType;

    /**
     * @return M2 Instance Type.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<String> instanceType() {
        return this.instanceType;
    }
    /**
     * ARN of the KMS key to use for the Environment.
     * 
     */
    @Export(name="kmsKeyId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> kmsKeyId;

    /**
     * @return ARN of the KMS key to use for the Environment.
     * 
     */
    public Output<Optional<String>> kmsKeyId() {
        return Codegen.optional(this.kmsKeyId);
    }
    /**
     * ARN of the load balancer created by the Environment.
     * 
     */
    @Export(name="loadBalancerArn", refs={String.class}, tree="[0]")
    private Output<String> loadBalancerArn;

    /**
     * @return ARN of the load balancer created by the Environment.
     * 
     */
    public Output<String> loadBalancerArn() {
        return this.loadBalancerArn;
    }
    /**
     * Name of the runtime environment. Must be unique within the account.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the runtime environment. Must be unique within the account.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Configures the maintenance window that you want for the runtime environment. The maintenance window must have the format `ddd:hh24:mi-ddd:hh24:mi` and must be less than 24 hours. If not provided a random value will be used.
     * 
     */
    @Export(name="preferredMaintenanceWindow", refs={String.class}, tree="[0]")
    private Output<String> preferredMaintenanceWindow;

    /**
     * @return Configures the maintenance window that you want for the runtime environment. The maintenance window must have the format `ddd:hh24:mi-ddd:hh24:mi` and must be less than 24 hours. If not provided a random value will be used.
     * 
     */
    public Output<String> preferredMaintenanceWindow() {
        return this.preferredMaintenanceWindow;
    }
    /**
     * Allow applications deployed to this environment to be publicly accessible.
     * 
     */
    @Export(name="publiclyAccessible", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> publiclyAccessible;

    /**
     * @return Allow applications deployed to this environment to be publicly accessible.
     * 
     */
    public Output<Boolean> publiclyAccessible() {
        return this.publiclyAccessible;
    }
    /**
     * List of security group ids.
     * 
     */
    @Export(name="securityGroupIds", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> securityGroupIds;

    /**
     * @return List of security group ids.
     * 
     */
    public Output<List<String>> securityGroupIds() {
        return this.securityGroupIds;
    }
    @Export(name="storageConfiguration", refs={EnvironmentStorageConfiguration.class}, tree="[0]")
    private Output</* @Nullable */ EnvironmentStorageConfiguration> storageConfiguration;

    public Output<Optional<EnvironmentStorageConfiguration>> storageConfiguration() {
        return Codegen.optional(this.storageConfiguration);
    }
    /**
     * List of subnet ids to deploy environment to.
     * 
     */
    @Export(name="subnetIds", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> subnetIds;

    /**
     * @return List of subnet ids to deploy environment to.
     * 
     */
    public Output<List<String>> subnetIds() {
        return this.subnetIds;
    }
    /**
     * Key-value tags for the place index. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Key-value tags for the place index. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Export(name="tagsAll", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll;
    }
    @Export(name="timeouts", refs={EnvironmentTimeouts.class}, tree="[0]")
    private Output</* @Nullable */ EnvironmentTimeouts> timeouts;

    public Output<Optional<EnvironmentTimeouts>> timeouts() {
        return Codegen.optional(this.timeouts);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Environment(java.lang.String name) {
        this(name, EnvironmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Environment(java.lang.String name, EnvironmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Environment(java.lang.String name, EnvironmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:m2/environment:Environment", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Environment(java.lang.String name, Output<java.lang.String> id, @Nullable EnvironmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:m2/environment:Environment", name, state, makeResourceOptions(options, id), false);
    }

    private static EnvironmentArgs makeArgs(EnvironmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? EnvironmentArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Environment get(java.lang.String name, Output<java.lang.String> id, @Nullable EnvironmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Environment(name, id, state, options);
    }
}
