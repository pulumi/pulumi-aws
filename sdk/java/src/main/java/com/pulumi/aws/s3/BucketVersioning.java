// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.s3.BucketVersioningArgs;
import com.pulumi.aws.s3.inputs.BucketVersioningState;
import com.pulumi.aws.s3.outputs.BucketVersioningVersioningConfiguration;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a resource for controlling versioning on an S3 bucket.
 * Deleting this resource will either suspend versioning on the associated S3 bucket or
 * simply remove the resource from state if the associated S3 bucket is unversioned.
 * 
 * For more information, see [How S3 versioning works](https://docs.aws.amazon.com/AmazonS3/latest/userguide/manage-versioning-examples.html).
 * 
 * &gt; **NOTE:** If you are enabling versioning on the bucket for the first time, AWS recommends that you wait for 15 minutes after enabling versioning before issuing write operations (PUT or DELETE) on objects in the bucket.
 * 
 * &gt; This resource cannot be used with S3 directory buckets.
 * 
 * ## Example Usage
 * 
 * ### With Versioning Enabled
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.s3.Bucket;
 * import com.pulumi.aws.s3.BucketArgs;
 * import com.pulumi.aws.s3.BucketAcl;
 * import com.pulumi.aws.s3.BucketAclArgs;
 * import com.pulumi.aws.s3.BucketVersioning;
 * import com.pulumi.aws.s3.BucketVersioningArgs;
 * import com.pulumi.aws.s3.inputs.BucketVersioningVersioningConfigurationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Bucket("example", BucketArgs.builder()
 *             .bucket("example-bucket")
 *             .build());
 * 
 *         var exampleBucketAcl = new BucketAcl("exampleBucketAcl", BucketAclArgs.builder()
 *             .bucket(example.id())
 *             .acl("private")
 *             .build());
 * 
 *         var versioningExample = new BucketVersioning("versioningExample", BucketVersioningArgs.builder()
 *             .bucket(example.id())
 *             .versioningConfiguration(BucketVersioningVersioningConfigurationArgs.builder()
 *                 .status("Enabled")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ### With Versioning Disabled
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.s3.Bucket;
 * import com.pulumi.aws.s3.BucketArgs;
 * import com.pulumi.aws.s3.BucketAcl;
 * import com.pulumi.aws.s3.BucketAclArgs;
 * import com.pulumi.aws.s3.BucketVersioning;
 * import com.pulumi.aws.s3.BucketVersioningArgs;
 * import com.pulumi.aws.s3.inputs.BucketVersioningVersioningConfigurationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Bucket("example", BucketArgs.builder()
 *             .bucket("example-bucket")
 *             .build());
 * 
 *         var exampleBucketAcl = new BucketAcl("exampleBucketAcl", BucketAclArgs.builder()
 *             .bucket(example.id())
 *             .acl("private")
 *             .build());
 * 
 *         var versioningExample = new BucketVersioning("versioningExample", BucketVersioningArgs.builder()
 *             .bucket(example.id())
 *             .versioningConfiguration(BucketVersioningVersioningConfigurationArgs.builder()
 *                 .status("Disabled")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ### Object Dependency On Versioning
 * 
 * When you create an object whose `versionId` you need and an `aws.s3.BucketVersioning` resource in the same configuration, you are more likely to have success by ensuring the `s3Object` depends either implicitly (see below) or explicitly (i.e., using `dependsOn = [aws_s3_bucket_versioning.example]`) on the `aws.s3.BucketVersioning` resource.
 * 
 * &gt; **NOTE:** For critical and/or production S3 objects, do not create a bucket, enable versioning, and create an object in the bucket within the same configuration. Doing so will not allow the AWS-recommended 15 minutes between enabling versioning and writing to the bucket.
 * 
 * This example shows the `aws_s3_object.example` depending implicitly on the versioning resource through the reference to `aws_s3_bucket_versioning.example.bucket` to define `bucket`:
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.s3.Bucket;
 * import com.pulumi.aws.s3.BucketArgs;
 * import com.pulumi.aws.s3.BucketVersioning;
 * import com.pulumi.aws.s3.BucketVersioningArgs;
 * import com.pulumi.aws.s3.inputs.BucketVersioningVersioningConfigurationArgs;
 * import com.pulumi.aws.s3.BucketObjectv2;
 * import com.pulumi.aws.s3.BucketObjectv2Args;
 * import com.pulumi.asset.FileAsset;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Bucket("example", BucketArgs.builder()
 *             .bucket("yotto")
 *             .build());
 * 
 *         var exampleBucketVersioning = new BucketVersioning("exampleBucketVersioning", BucketVersioningArgs.builder()
 *             .bucket(example.id())
 *             .versioningConfiguration(BucketVersioningVersioningConfigurationArgs.builder()
 *                 .status("Enabled")
 *                 .build())
 *             .build());
 * 
 *         var exampleBucketObjectv2 = new BucketObjectv2("exampleBucketObjectv2", BucketObjectv2Args.builder()
 *             .bucket(exampleBucketVersioning.id())
 *             .key("droeloe")
 *             .source(new FileAsset("example.txt"))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * If the owner (account ID) of the source bucket differs from the account used to configure the AWS Provider, import using the `bucket` and `expected_bucket_owner` separated by a comma (`,`):
 * 
 * __Using `pulumi import` to import__ S3 bucket versioning using the `bucket` or using the `bucket` and `expected_bucket_owner` separated by a comma (`,`). For example:
 * 
 * If the owner (account ID) of the source bucket is the same account used to configure the AWS Provider, import using the `bucket`:
 * 
 * ```sh
 * $ pulumi import aws:s3/bucketVersioning:BucketVersioning example bucket-name
 * ```
 * If the owner (account ID) of the source bucket differs from the account used to configure the AWS Provider, import using the `bucket` and `expected_bucket_owner` separated by a comma (`,`):
 * 
 * ```sh
 * $ pulumi import aws:s3/bucketVersioning:BucketVersioning example bucket-name,123456789012
 * ```
 * 
 */
@ResourceType(type="aws:s3/bucketVersioning:BucketVersioning")
public class BucketVersioning extends com.pulumi.resources.CustomResource {
    /**
     * Name of the S3 bucket.
     * 
     */
    @Export(name="bucket", refs={String.class}, tree="[0]")
    private Output<String> bucket;

    /**
     * @return Name of the S3 bucket.
     * 
     */
    public Output<String> bucket() {
        return this.bucket;
    }
    /**
     * Account ID of the expected bucket owner.
     * 
     */
    @Export(name="expectedBucketOwner", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> expectedBucketOwner;

    /**
     * @return Account ID of the expected bucket owner.
     * 
     */
    public Output<Optional<String>> expectedBucketOwner() {
        return Codegen.optional(this.expectedBucketOwner);
    }
    /**
     * Concatenation of the authentication device&#39;s serial number, a space, and the value that is displayed on your authentication device.
     * 
     */
    @Export(name="mfa", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> mfa;

    /**
     * @return Concatenation of the authentication device&#39;s serial number, a space, and the value that is displayed on your authentication device.
     * 
     */
    public Output<Optional<String>> mfa() {
        return Codegen.optional(this.mfa);
    }
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * Configuration block for the versioning parameters. See below.
     * 
     */
    @Export(name="versioningConfiguration", refs={BucketVersioningVersioningConfiguration.class}, tree="[0]")
    private Output<BucketVersioningVersioningConfiguration> versioningConfiguration;

    /**
     * @return Configuration block for the versioning parameters. See below.
     * 
     */
    public Output<BucketVersioningVersioningConfiguration> versioningConfiguration() {
        return this.versioningConfiguration;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public BucketVersioning(java.lang.String name) {
        this(name, BucketVersioningArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public BucketVersioning(java.lang.String name, BucketVersioningArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public BucketVersioning(java.lang.String name, BucketVersioningArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:s3/bucketVersioning:BucketVersioning", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private BucketVersioning(java.lang.String name, Output<java.lang.String> id, @Nullable BucketVersioningState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:s3/bucketVersioning:BucketVersioning", name, state, makeResourceOptions(options, id), false);
    }

    private static BucketVersioningArgs makeArgs(BucketVersioningArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? BucketVersioningArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("aws:s3/bucketVersioningV2:BucketVersioningV2").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static BucketVersioning get(java.lang.String name, Output<java.lang.String> id, @Nullable BucketVersioningState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new BucketVersioning(name, id, state, options);
    }
}
