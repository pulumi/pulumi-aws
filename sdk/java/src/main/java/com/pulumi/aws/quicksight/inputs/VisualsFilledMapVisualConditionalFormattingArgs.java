// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.VisualsFilledMapVisualConditionalFormattingConditionalFormattingOptionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.List;
import java.util.Objects;


public final class VisualsFilledMapVisualConditionalFormattingArgs extends com.pulumi.resources.ResourceArgs {

    public static final VisualsFilledMapVisualConditionalFormattingArgs Empty = new VisualsFilledMapVisualConditionalFormattingArgs();

    @Import(name="conditionalFormattingOptions", required=true)
    private Output<List<VisualsFilledMapVisualConditionalFormattingConditionalFormattingOptionArgs>> conditionalFormattingOptions;

    public Output<List<VisualsFilledMapVisualConditionalFormattingConditionalFormattingOptionArgs>> conditionalFormattingOptions() {
        return this.conditionalFormattingOptions;
    }

    private VisualsFilledMapVisualConditionalFormattingArgs() {}

    private VisualsFilledMapVisualConditionalFormattingArgs(VisualsFilledMapVisualConditionalFormattingArgs $) {
        this.conditionalFormattingOptions = $.conditionalFormattingOptions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VisualsFilledMapVisualConditionalFormattingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VisualsFilledMapVisualConditionalFormattingArgs $;

        public Builder() {
            $ = new VisualsFilledMapVisualConditionalFormattingArgs();
        }

        public Builder(VisualsFilledMapVisualConditionalFormattingArgs defaults) {
            $ = new VisualsFilledMapVisualConditionalFormattingArgs(Objects.requireNonNull(defaults));
        }

        public Builder conditionalFormattingOptions(Output<List<VisualsFilledMapVisualConditionalFormattingConditionalFormattingOptionArgs>> conditionalFormattingOptions) {
            $.conditionalFormattingOptions = conditionalFormattingOptions;
            return this;
        }

        public Builder conditionalFormattingOptions(List<VisualsFilledMapVisualConditionalFormattingConditionalFormattingOptionArgs> conditionalFormattingOptions) {
            return conditionalFormattingOptions(Output.of(conditionalFormattingOptions));
        }

        public Builder conditionalFormattingOptions(VisualsFilledMapVisualConditionalFormattingConditionalFormattingOptionArgs... conditionalFormattingOptions) {
            return conditionalFormattingOptions(List.of(conditionalFormattingOptions));
        }

        public VisualsFilledMapVisualConditionalFormattingArgs build() {
            if ($.conditionalFormattingOptions == null) {
                throw new MissingRequiredPropertyException("VisualsFilledMapVisualConditionalFormattingArgs", "conditionalFormattingOptions");
            }
            return $;
        }
    }

}
