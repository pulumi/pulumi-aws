// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.glue.inputs;

import com.pulumi.aws.glue.inputs.PartitionIndexPartitionIndexArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PartitionIndexState extends com.pulumi.resources.ResourceArgs {

    public static final PartitionIndexState Empty = new PartitionIndexState();

    @Import(name="catalogId")
    private @Nullable Output<String> catalogId;

    public Optional<Output<String>> catalogId() {
        return Optional.ofNullable(this.catalogId);
    }

    @Import(name="databaseName")
    private @Nullable Output<String> databaseName;

    public Optional<Output<String>> databaseName() {
        return Optional.ofNullable(this.databaseName);
    }

    @Import(name="partitionIndex")
    private @Nullable Output<PartitionIndexPartitionIndexArgs> partitionIndex;

    public Optional<Output<PartitionIndexPartitionIndexArgs>> partitionIndex() {
        return Optional.ofNullable(this.partitionIndex);
    }

    @Import(name="tableName")
    private @Nullable Output<String> tableName;

    public Optional<Output<String>> tableName() {
        return Optional.ofNullable(this.tableName);
    }

    private PartitionIndexState() {}

    private PartitionIndexState(PartitionIndexState $) {
        this.catalogId = $.catalogId;
        this.databaseName = $.databaseName;
        this.partitionIndex = $.partitionIndex;
        this.tableName = $.tableName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PartitionIndexState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PartitionIndexState $;

        public Builder() {
            $ = new PartitionIndexState();
        }

        public Builder(PartitionIndexState defaults) {
            $ = new PartitionIndexState(Objects.requireNonNull(defaults));
        }

        public Builder catalogId(@Nullable Output<String> catalogId) {
            $.catalogId = catalogId;
            return this;
        }

        public Builder catalogId(String catalogId) {
            return catalogId(Output.of(catalogId));
        }

        public Builder databaseName(@Nullable Output<String> databaseName) {
            $.databaseName = databaseName;
            return this;
        }

        public Builder databaseName(String databaseName) {
            return databaseName(Output.of(databaseName));
        }

        public Builder partitionIndex(@Nullable Output<PartitionIndexPartitionIndexArgs> partitionIndex) {
            $.partitionIndex = partitionIndex;
            return this;
        }

        public Builder partitionIndex(PartitionIndexPartitionIndexArgs partitionIndex) {
            return partitionIndex(Output.of(partitionIndex));
        }

        public Builder tableName(@Nullable Output<String> tableName) {
            $.tableName = tableName;
            return this;
        }

        public Builder tableName(String tableName) {
            return tableName(Output.of(tableName));
        }

        public PartitionIndexState build() {
            return $;
        }
    }

}
