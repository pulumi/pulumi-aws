// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetQuicksightUserResult {
    /**
     * @return The active status of user. When you create an Amazon QuickSight user that’s not an IAM user or an Active Directory user, that user is inactive until they sign in and provide a password.
     * 
     */
    private @Nullable Boolean active;
    /**
     * @return The Amazon Resource Name (ARN) for the user.
     * 
     */
    private @Nullable String arn;
    private @Nullable String awsAccountId;
    /**
     * @return The user&#39;s email address.
     * 
     */
    private @Nullable String email;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return The type of identity authentication used by the user.
     * 
     */
    private @Nullable String identityType;
    private @Nullable String namespace;
    /**
     * @return The principal ID of the user.
     * 
     */
    private @Nullable String principalId;
    private String userName;
    /**
     * @return The Amazon QuickSight role for the user. The user role can be one of the following:.
     * 
     */
    private @Nullable String userRole;

    private GetQuicksightUserResult() {}
    /**
     * @return The active status of user. When you create an Amazon QuickSight user that’s not an IAM user or an Active Directory user, that user is inactive until they sign in and provide a password.
     * 
     */
    public Optional<Boolean> active() {
        return Optional.ofNullable(this.active);
    }
    /**
     * @return The Amazon Resource Name (ARN) for the user.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    public Optional<String> awsAccountId() {
        return Optional.ofNullable(this.awsAccountId);
    }
    /**
     * @return The user&#39;s email address.
     * 
     */
    public Optional<String> email() {
        return Optional.ofNullable(this.email);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The type of identity authentication used by the user.
     * 
     */
    public Optional<String> identityType() {
        return Optional.ofNullable(this.identityType);
    }
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }
    /**
     * @return The principal ID of the user.
     * 
     */
    public Optional<String> principalId() {
        return Optional.ofNullable(this.principalId);
    }
    public String userName() {
        return this.userName;
    }
    /**
     * @return The Amazon QuickSight role for the user. The user role can be one of the following:.
     * 
     */
    public Optional<String> userRole() {
        return Optional.ofNullable(this.userRole);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetQuicksightUserResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean active;
        private @Nullable String arn;
        private @Nullable String awsAccountId;
        private @Nullable String email;
        private @Nullable String id;
        private @Nullable String identityType;
        private @Nullable String namespace;
        private @Nullable String principalId;
        private String userName;
        private @Nullable String userRole;
        public Builder() {}
        public Builder(GetQuicksightUserResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.active = defaults.active;
    	      this.arn = defaults.arn;
    	      this.awsAccountId = defaults.awsAccountId;
    	      this.email = defaults.email;
    	      this.id = defaults.id;
    	      this.identityType = defaults.identityType;
    	      this.namespace = defaults.namespace;
    	      this.principalId = defaults.principalId;
    	      this.userName = defaults.userName;
    	      this.userRole = defaults.userRole;
        }

        @CustomType.Setter
        public Builder active(@Nullable Boolean active) {
            this.active = active;
            return this;
        }
        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder awsAccountId(@Nullable String awsAccountId) {
            this.awsAccountId = awsAccountId;
            return this;
        }
        @CustomType.Setter
        public Builder email(@Nullable String email) {
            this.email = email;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder identityType(@Nullable String identityType) {
            this.identityType = identityType;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(@Nullable String namespace) {
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder principalId(@Nullable String principalId) {
            this.principalId = principalId;
            return this;
        }
        @CustomType.Setter
        public Builder userName(String userName) {
            this.userName = Objects.requireNonNull(userName);
            return this;
        }
        @CustomType.Setter
        public Builder userRole(@Nullable String userRole) {
            this.userRole = userRole;
            return this;
        }
        public GetQuicksightUserResult build() {
            final var o = new GetQuicksightUserResult();
            o.active = active;
            o.arn = arn;
            o.awsAccountId = awsAccountId;
            o.email = email;
            o.id = id;
            o.identityType = identityType;
            o.namespace = namespace;
            o.principalId = principalId;
            o.userName = userName;
            o.userRole = userRole;
            return o;
        }
    }
}
