// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpcEndpointServicePrivateDnsNameConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final VpcEndpointServicePrivateDnsNameConfigurationArgs Empty = new VpcEndpointServicePrivateDnsNameConfigurationArgs();

    /**
     * Name of the record subdomain the service provider needs to create.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the record subdomain the service provider needs to create.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Verification state of the VPC endpoint service. Consumers of the endpoint service can use the private name only when the state is `verified`.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return Verification state of the VPC endpoint service. Consumers of the endpoint service can use the private name only when the state is `verified`.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * Endpoint service verification type, for example `TXT`.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Endpoint service verification type, for example `TXT`.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * Value the service provider adds to the private DNS name domain record before verification.
     * 
     */
    @Import(name="value")
    private @Nullable Output<String> value;

    /**
     * @return Value the service provider adds to the private DNS name domain record before verification.
     * 
     */
    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    private VpcEndpointServicePrivateDnsNameConfigurationArgs() {}

    private VpcEndpointServicePrivateDnsNameConfigurationArgs(VpcEndpointServicePrivateDnsNameConfigurationArgs $) {
        this.name = $.name;
        this.state = $.state;
        this.type = $.type;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpcEndpointServicePrivateDnsNameConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpcEndpointServicePrivateDnsNameConfigurationArgs $;

        public Builder() {
            $ = new VpcEndpointServicePrivateDnsNameConfigurationArgs();
        }

        public Builder(VpcEndpointServicePrivateDnsNameConfigurationArgs defaults) {
            $ = new VpcEndpointServicePrivateDnsNameConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Name of the record subdomain the service provider needs to create.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the record subdomain the service provider needs to create.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param state Verification state of the VPC endpoint service. Consumers of the endpoint service can use the private name only when the state is `verified`.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state Verification state of the VPC endpoint service. Consumers of the endpoint service can use the private name only when the state is `verified`.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param type Endpoint service verification type, for example `TXT`.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Endpoint service verification type, for example `TXT`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param value Value the service provider adds to the private DNS name domain record before verification.
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value Value the service provider adds to the private DNS name domain record before verification.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public VpcEndpointServicePrivateDnsNameConfigurationArgs build() {
            return $;
        }
    }

}
