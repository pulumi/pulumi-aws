// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.glue.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CatalogTableOptimizerConfigurationRetentionConfigurationIcebergConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final CatalogTableOptimizerConfigurationRetentionConfigurationIcebergConfigurationArgs Empty = new CatalogTableOptimizerConfigurationRetentionConfigurationIcebergConfigurationArgs();

    /**
     * If set to `false`, snapshots are only deleted from table metadata, and the underlying data and metadata files are not deleted. Defaults to `false`.
     * 
     */
    @Import(name="cleanExpiredFiles")
    private @Nullable Output<Boolean> cleanExpiredFiles;

    /**
     * @return If set to `false`, snapshots are only deleted from table metadata, and the underlying data and metadata files are not deleted. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> cleanExpiredFiles() {
        return Optional.ofNullable(this.cleanExpiredFiles);
    }

    /**
     * The number of Iceberg snapshots to retain within the retention period. Defaults to `1` or the corresponding Iceberg table configuration field if it exists.
     * 
     */
    @Import(name="numberOfSnapshotsToRetain")
    private @Nullable Output<Integer> numberOfSnapshotsToRetain;

    /**
     * @return The number of Iceberg snapshots to retain within the retention period. Defaults to `1` or the corresponding Iceberg table configuration field if it exists.
     * 
     */
    public Optional<Output<Integer>> numberOfSnapshotsToRetain() {
        return Optional.ofNullable(this.numberOfSnapshotsToRetain);
    }

    /**
     * The number of days to retain the Iceberg snapshots. Defaults to `5`, or the corresponding Iceberg table configuration field if it exists.
     * 
     */
    @Import(name="snapshotRetentionPeriodInDays")
    private @Nullable Output<Integer> snapshotRetentionPeriodInDays;

    /**
     * @return The number of days to retain the Iceberg snapshots. Defaults to `5`, or the corresponding Iceberg table configuration field if it exists.
     * 
     */
    public Optional<Output<Integer>> snapshotRetentionPeriodInDays() {
        return Optional.ofNullable(this.snapshotRetentionPeriodInDays);
    }

    private CatalogTableOptimizerConfigurationRetentionConfigurationIcebergConfigurationArgs() {}

    private CatalogTableOptimizerConfigurationRetentionConfigurationIcebergConfigurationArgs(CatalogTableOptimizerConfigurationRetentionConfigurationIcebergConfigurationArgs $) {
        this.cleanExpiredFiles = $.cleanExpiredFiles;
        this.numberOfSnapshotsToRetain = $.numberOfSnapshotsToRetain;
        this.snapshotRetentionPeriodInDays = $.snapshotRetentionPeriodInDays;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CatalogTableOptimizerConfigurationRetentionConfigurationIcebergConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CatalogTableOptimizerConfigurationRetentionConfigurationIcebergConfigurationArgs $;

        public Builder() {
            $ = new CatalogTableOptimizerConfigurationRetentionConfigurationIcebergConfigurationArgs();
        }

        public Builder(CatalogTableOptimizerConfigurationRetentionConfigurationIcebergConfigurationArgs defaults) {
            $ = new CatalogTableOptimizerConfigurationRetentionConfigurationIcebergConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cleanExpiredFiles If set to `false`, snapshots are only deleted from table metadata, and the underlying data and metadata files are not deleted. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder cleanExpiredFiles(@Nullable Output<Boolean> cleanExpiredFiles) {
            $.cleanExpiredFiles = cleanExpiredFiles;
            return this;
        }

        /**
         * @param cleanExpiredFiles If set to `false`, snapshots are only deleted from table metadata, and the underlying data and metadata files are not deleted. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder cleanExpiredFiles(Boolean cleanExpiredFiles) {
            return cleanExpiredFiles(Output.of(cleanExpiredFiles));
        }

        /**
         * @param numberOfSnapshotsToRetain The number of Iceberg snapshots to retain within the retention period. Defaults to `1` or the corresponding Iceberg table configuration field if it exists.
         * 
         * @return builder
         * 
         */
        public Builder numberOfSnapshotsToRetain(@Nullable Output<Integer> numberOfSnapshotsToRetain) {
            $.numberOfSnapshotsToRetain = numberOfSnapshotsToRetain;
            return this;
        }

        /**
         * @param numberOfSnapshotsToRetain The number of Iceberg snapshots to retain within the retention period. Defaults to `1` or the corresponding Iceberg table configuration field if it exists.
         * 
         * @return builder
         * 
         */
        public Builder numberOfSnapshotsToRetain(Integer numberOfSnapshotsToRetain) {
            return numberOfSnapshotsToRetain(Output.of(numberOfSnapshotsToRetain));
        }

        /**
         * @param snapshotRetentionPeriodInDays The number of days to retain the Iceberg snapshots. Defaults to `5`, or the corresponding Iceberg table configuration field if it exists.
         * 
         * @return builder
         * 
         */
        public Builder snapshotRetentionPeriodInDays(@Nullable Output<Integer> snapshotRetentionPeriodInDays) {
            $.snapshotRetentionPeriodInDays = snapshotRetentionPeriodInDays;
            return this;
        }

        /**
         * @param snapshotRetentionPeriodInDays The number of days to retain the Iceberg snapshots. Defaults to `5`, or the corresponding Iceberg table configuration field if it exists.
         * 
         * @return builder
         * 
         */
        public Builder snapshotRetentionPeriodInDays(Integer snapshotRetentionPeriodInDays) {
            return snapshotRetentionPeriodInDays(Output.of(snapshotRetentionPeriodInDays));
        }

        public CatalogTableOptimizerConfigurationRetentionConfigurationIcebergConfigurationArgs build() {
            return $;
        }
    }

}
