// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codedeploy.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeploymentGroupDeploymentStyleArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentGroupDeploymentStyleArgs Empty = new DeploymentGroupDeploymentStyleArgs();

    /**
     * Indicates whether to route deployment traffic behind a load balancer. Valid Values are `WITH_TRAFFIC_CONTROL` or `WITHOUT_TRAFFIC_CONTROL`. Default is `WITHOUT_TRAFFIC_CONTROL`.
     * 
     */
    @Import(name="deploymentOption")
    private @Nullable Output<String> deploymentOption;

    /**
     * @return Indicates whether to route deployment traffic behind a load balancer. Valid Values are `WITH_TRAFFIC_CONTROL` or `WITHOUT_TRAFFIC_CONTROL`. Default is `WITHOUT_TRAFFIC_CONTROL`.
     * 
     */
    public Optional<Output<String>> deploymentOption() {
        return Optional.ofNullable(this.deploymentOption);
    }

    /**
     * Indicates whether to run an in-place deployment or a blue/green deployment. Valid Values are `IN_PLACE` or `BLUE_GREEN`. Default is `IN_PLACE`.
     * 
     */
    @Import(name="deploymentType")
    private @Nullable Output<String> deploymentType;

    /**
     * @return Indicates whether to run an in-place deployment or a blue/green deployment. Valid Values are `IN_PLACE` or `BLUE_GREEN`. Default is `IN_PLACE`.
     * 
     */
    public Optional<Output<String>> deploymentType() {
        return Optional.ofNullable(this.deploymentType);
    }

    private DeploymentGroupDeploymentStyleArgs() {}

    private DeploymentGroupDeploymentStyleArgs(DeploymentGroupDeploymentStyleArgs $) {
        this.deploymentOption = $.deploymentOption;
        this.deploymentType = $.deploymentType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentGroupDeploymentStyleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentGroupDeploymentStyleArgs $;

        public Builder() {
            $ = new DeploymentGroupDeploymentStyleArgs();
        }

        public Builder(DeploymentGroupDeploymentStyleArgs defaults) {
            $ = new DeploymentGroupDeploymentStyleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deploymentOption Indicates whether to route deployment traffic behind a load balancer. Valid Values are `WITH_TRAFFIC_CONTROL` or `WITHOUT_TRAFFIC_CONTROL`. Default is `WITHOUT_TRAFFIC_CONTROL`.
         * 
         * @return builder
         * 
         */
        public Builder deploymentOption(@Nullable Output<String> deploymentOption) {
            $.deploymentOption = deploymentOption;
            return this;
        }

        /**
         * @param deploymentOption Indicates whether to route deployment traffic behind a load balancer. Valid Values are `WITH_TRAFFIC_CONTROL` or `WITHOUT_TRAFFIC_CONTROL`. Default is `WITHOUT_TRAFFIC_CONTROL`.
         * 
         * @return builder
         * 
         */
        public Builder deploymentOption(String deploymentOption) {
            return deploymentOption(Output.of(deploymentOption));
        }

        /**
         * @param deploymentType Indicates whether to run an in-place deployment or a blue/green deployment. Valid Values are `IN_PLACE` or `BLUE_GREEN`. Default is `IN_PLACE`.
         * 
         * @return builder
         * 
         */
        public Builder deploymentType(@Nullable Output<String> deploymentType) {
            $.deploymentType = deploymentType;
            return this;
        }

        /**
         * @param deploymentType Indicates whether to run an in-place deployment or a blue/green deployment. Valid Values are `IN_PLACE` or `BLUE_GREEN`. Default is `IN_PLACE`.
         * 
         * @return builder
         * 
         */
        public Builder deploymentType(String deploymentType) {
            return deploymentType(Output.of(deploymentType));
        }

        public DeploymentGroupDeploymentStyleArgs build() {
            return $;
        }
    }

}
