// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.eks.outputs;

import com.pulumi.aws.eks.outputs.GetClusterCertificateAuthority;
import com.pulumi.aws.eks.outputs.GetClusterIdentity;
import com.pulumi.aws.eks.outputs.GetClusterKubernetesNetworkConfig;
import com.pulumi.aws.eks.outputs.GetClusterOutpostConfig;
import com.pulumi.aws.eks.outputs.GetClusterVpcConfig;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetClusterResult {
    /**
     * @return ARN of the cluster.
     * 
     */
    private String arn;
    /**
     * @return Nested attribute containing `certificate-authority-data` for your cluster.
     * 
     */
    private List<GetClusterCertificateAuthority> certificateAuthorities;
    /**
     * @return The ID of your local Amazon EKS cluster on the AWS Outpost. This attribute isn&#39;t available for an AWS EKS cluster on AWS cloud.
     * 
     */
    private String clusterId;
    /**
     * @return Unix epoch time stamp in seconds for when the cluster was created.
     * 
     */
    private String createdAt;
    /**
     * @return The enabled control plane logs.
     * 
     */
    private List<String> enabledClusterLogTypes;
    /**
     * @return Endpoint for your Kubernetes API server.
     * 
     */
    private String endpoint;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Nested attribute containing identity provider information for your cluster. Only available on Kubernetes version 1.13 and 1.14 clusters created or upgraded on or after September 3, 2019. For an example using this information to enable IAM Roles for Service Accounts, see the `aws.eks.Cluster` resource documentation.
     * 
     */
    private List<GetClusterIdentity> identities;
    /**
     * @return Nested list containing Kubernetes Network Configuration.
     * 
     */
    private List<GetClusterKubernetesNetworkConfig> kubernetesNetworkConfigs;
    private String name;
    /**
     * @return Contains Outpost Configuration.
     * 
     */
    private List<GetClusterOutpostConfig> outpostConfigs;
    /**
     * @return Platform version for the cluster.
     * 
     */
    private String platformVersion;
    /**
     * @return ARN of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.
     * 
     */
    private String roleArn;
    /**
     * @return Status of the EKS cluster. One of `CREATING`, `ACTIVE`, `DELETING`, `FAILED`.
     * 
     */
    private String status;
    /**
     * @return Key-value map of resource tags.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return Kubernetes server version for the cluster.
     * 
     */
    private String version;
    /**
     * @return Nested list containing VPC configuration for the cluster.
     * 
     */
    private GetClusterVpcConfig vpcConfig;

    private GetClusterResult() {}
    /**
     * @return ARN of the cluster.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return Nested attribute containing `certificate-authority-data` for your cluster.
     * 
     */
    public List<GetClusterCertificateAuthority> certificateAuthorities() {
        return this.certificateAuthorities;
    }
    /**
     * @return The ID of your local Amazon EKS cluster on the AWS Outpost. This attribute isn&#39;t available for an AWS EKS cluster on AWS cloud.
     * 
     */
    public String clusterId() {
        return this.clusterId;
    }
    /**
     * @return Unix epoch time stamp in seconds for when the cluster was created.
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return The enabled control plane logs.
     * 
     */
    public List<String> enabledClusterLogTypes() {
        return this.enabledClusterLogTypes;
    }
    /**
     * @return Endpoint for your Kubernetes API server.
     * 
     */
    public String endpoint() {
        return this.endpoint;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Nested attribute containing identity provider information for your cluster. Only available on Kubernetes version 1.13 and 1.14 clusters created or upgraded on or after September 3, 2019. For an example using this information to enable IAM Roles for Service Accounts, see the `aws.eks.Cluster` resource documentation.
     * 
     */
    public List<GetClusterIdentity> identities() {
        return this.identities;
    }
    /**
     * @return Nested list containing Kubernetes Network Configuration.
     * 
     */
    public List<GetClusterKubernetesNetworkConfig> kubernetesNetworkConfigs() {
        return this.kubernetesNetworkConfigs;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return Contains Outpost Configuration.
     * 
     */
    public List<GetClusterOutpostConfig> outpostConfigs() {
        return this.outpostConfigs;
    }
    /**
     * @return Platform version for the cluster.
     * 
     */
    public String platformVersion() {
        return this.platformVersion;
    }
    /**
     * @return ARN of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.
     * 
     */
    public String roleArn() {
        return this.roleArn;
    }
    /**
     * @return Status of the EKS cluster. One of `CREATING`, `ACTIVE`, `DELETING`, `FAILED`.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Key-value map of resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return Kubernetes server version for the cluster.
     * 
     */
    public String version() {
        return this.version;
    }
    /**
     * @return Nested list containing VPC configuration for the cluster.
     * 
     */
    public GetClusterVpcConfig vpcConfig() {
        return this.vpcConfig;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private List<GetClusterCertificateAuthority> certificateAuthorities;
        private String clusterId;
        private String createdAt;
        private List<String> enabledClusterLogTypes;
        private String endpoint;
        private String id;
        private List<GetClusterIdentity> identities;
        private List<GetClusterKubernetesNetworkConfig> kubernetesNetworkConfigs;
        private String name;
        private List<GetClusterOutpostConfig> outpostConfigs;
        private String platformVersion;
        private String roleArn;
        private String status;
        private Map<String,String> tags;
        private String version;
        private GetClusterVpcConfig vpcConfig;
        public Builder() {}
        public Builder(GetClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.certificateAuthorities = defaults.certificateAuthorities;
    	      this.clusterId = defaults.clusterId;
    	      this.createdAt = defaults.createdAt;
    	      this.enabledClusterLogTypes = defaults.enabledClusterLogTypes;
    	      this.endpoint = defaults.endpoint;
    	      this.id = defaults.id;
    	      this.identities = defaults.identities;
    	      this.kubernetesNetworkConfigs = defaults.kubernetesNetworkConfigs;
    	      this.name = defaults.name;
    	      this.outpostConfigs = defaults.outpostConfigs;
    	      this.platformVersion = defaults.platformVersion;
    	      this.roleArn = defaults.roleArn;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.version = defaults.version;
    	      this.vpcConfig = defaults.vpcConfig;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder certificateAuthorities(List<GetClusterCertificateAuthority> certificateAuthorities) {
            this.certificateAuthorities = Objects.requireNonNull(certificateAuthorities);
            return this;
        }
        public Builder certificateAuthorities(GetClusterCertificateAuthority... certificateAuthorities) {
            return certificateAuthorities(List.of(certificateAuthorities));
        }
        @CustomType.Setter
        public Builder clusterId(String clusterId) {
            this.clusterId = Objects.requireNonNull(clusterId);
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt);
            return this;
        }
        @CustomType.Setter
        public Builder enabledClusterLogTypes(List<String> enabledClusterLogTypes) {
            this.enabledClusterLogTypes = Objects.requireNonNull(enabledClusterLogTypes);
            return this;
        }
        public Builder enabledClusterLogTypes(String... enabledClusterLogTypes) {
            return enabledClusterLogTypes(List.of(enabledClusterLogTypes));
        }
        @CustomType.Setter
        public Builder endpoint(String endpoint) {
            this.endpoint = Objects.requireNonNull(endpoint);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder identities(List<GetClusterIdentity> identities) {
            this.identities = Objects.requireNonNull(identities);
            return this;
        }
        public Builder identities(GetClusterIdentity... identities) {
            return identities(List.of(identities));
        }
        @CustomType.Setter
        public Builder kubernetesNetworkConfigs(List<GetClusterKubernetesNetworkConfig> kubernetesNetworkConfigs) {
            this.kubernetesNetworkConfigs = Objects.requireNonNull(kubernetesNetworkConfigs);
            return this;
        }
        public Builder kubernetesNetworkConfigs(GetClusterKubernetesNetworkConfig... kubernetesNetworkConfigs) {
            return kubernetesNetworkConfigs(List.of(kubernetesNetworkConfigs));
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder outpostConfigs(List<GetClusterOutpostConfig> outpostConfigs) {
            this.outpostConfigs = Objects.requireNonNull(outpostConfigs);
            return this;
        }
        public Builder outpostConfigs(GetClusterOutpostConfig... outpostConfigs) {
            return outpostConfigs(List.of(outpostConfigs));
        }
        @CustomType.Setter
        public Builder platformVersion(String platformVersion) {
            this.platformVersion = Objects.requireNonNull(platformVersion);
            return this;
        }
        @CustomType.Setter
        public Builder roleArn(String roleArn) {
            this.roleArn = Objects.requireNonNull(roleArn);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }
        @CustomType.Setter
        public Builder vpcConfig(GetClusterVpcConfig vpcConfig) {
            this.vpcConfig = Objects.requireNonNull(vpcConfig);
            return this;
        }
        public GetClusterResult build() {
            final var o = new GetClusterResult();
            o.arn = arn;
            o.certificateAuthorities = certificateAuthorities;
            o.clusterId = clusterId;
            o.createdAt = createdAt;
            o.enabledClusterLogTypes = enabledClusterLogTypes;
            o.endpoint = endpoint;
            o.id = id;
            o.identities = identities;
            o.kubernetesNetworkConfigs = kubernetesNetworkConfigs;
            o.name = name;
            o.outpostConfigs = outpostConfigs;
            o.platformVersion = platformVersion;
            o.roleArn = roleArn;
            o.status = status;
            o.tags = tags;
            o.version = version;
            o.vpcConfig = vpcConfig;
            return o;
        }
    }
}
