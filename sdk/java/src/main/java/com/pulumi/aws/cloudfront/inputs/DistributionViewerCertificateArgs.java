// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudfront.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DistributionViewerCertificateArgs extends com.pulumi.resources.ResourceArgs {

    public static final DistributionViewerCertificateArgs Empty = new DistributionViewerCertificateArgs();

    @Import(name="acmCertificateArn")
    private @Nullable Output<String> acmCertificateArn;

    public Optional<Output<String>> acmCertificateArn() {
        return Optional.ofNullable(this.acmCertificateArn);
    }

    @Import(name="cloudfrontDefaultCertificate")
    private @Nullable Output<Boolean> cloudfrontDefaultCertificate;

    public Optional<Output<Boolean>> cloudfrontDefaultCertificate() {
        return Optional.ofNullable(this.cloudfrontDefaultCertificate);
    }

    @Import(name="iamCertificateId")
    private @Nullable Output<String> iamCertificateId;

    public Optional<Output<String>> iamCertificateId() {
        return Optional.ofNullable(this.iamCertificateId);
    }

    @Import(name="minimumProtocolVersion")
    private @Nullable Output<String> minimumProtocolVersion;

    public Optional<Output<String>> minimumProtocolVersion() {
        return Optional.ofNullable(this.minimumProtocolVersion);
    }

    @Import(name="sslSupportMethod")
    private @Nullable Output<String> sslSupportMethod;

    public Optional<Output<String>> sslSupportMethod() {
        return Optional.ofNullable(this.sslSupportMethod);
    }

    private DistributionViewerCertificateArgs() {}

    private DistributionViewerCertificateArgs(DistributionViewerCertificateArgs $) {
        this.acmCertificateArn = $.acmCertificateArn;
        this.cloudfrontDefaultCertificate = $.cloudfrontDefaultCertificate;
        this.iamCertificateId = $.iamCertificateId;
        this.minimumProtocolVersion = $.minimumProtocolVersion;
        this.sslSupportMethod = $.sslSupportMethod;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DistributionViewerCertificateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DistributionViewerCertificateArgs $;

        public Builder() {
            $ = new DistributionViewerCertificateArgs();
        }

        public Builder(DistributionViewerCertificateArgs defaults) {
            $ = new DistributionViewerCertificateArgs(Objects.requireNonNull(defaults));
        }

        public Builder acmCertificateArn(@Nullable Output<String> acmCertificateArn) {
            $.acmCertificateArn = acmCertificateArn;
            return this;
        }

        public Builder acmCertificateArn(String acmCertificateArn) {
            return acmCertificateArn(Output.of(acmCertificateArn));
        }

        public Builder cloudfrontDefaultCertificate(@Nullable Output<Boolean> cloudfrontDefaultCertificate) {
            $.cloudfrontDefaultCertificate = cloudfrontDefaultCertificate;
            return this;
        }

        public Builder cloudfrontDefaultCertificate(Boolean cloudfrontDefaultCertificate) {
            return cloudfrontDefaultCertificate(Output.of(cloudfrontDefaultCertificate));
        }

        public Builder iamCertificateId(@Nullable Output<String> iamCertificateId) {
            $.iamCertificateId = iamCertificateId;
            return this;
        }

        public Builder iamCertificateId(String iamCertificateId) {
            return iamCertificateId(Output.of(iamCertificateId));
        }

        public Builder minimumProtocolVersion(@Nullable Output<String> minimumProtocolVersion) {
            $.minimumProtocolVersion = minimumProtocolVersion;
            return this;
        }

        public Builder minimumProtocolVersion(String minimumProtocolVersion) {
            return minimumProtocolVersion(Output.of(minimumProtocolVersion));
        }

        public Builder sslSupportMethod(@Nullable Output<String> sslSupportMethod) {
            $.sslSupportMethod = sslSupportMethod;
            return this;
        }

        public Builder sslSupportMethod(String sslSupportMethod) {
            return sslSupportMethod(Output.of(sslSupportMethod));
        }

        public DistributionViewerCertificateArgs build() {
            return $;
        }
    }

}
