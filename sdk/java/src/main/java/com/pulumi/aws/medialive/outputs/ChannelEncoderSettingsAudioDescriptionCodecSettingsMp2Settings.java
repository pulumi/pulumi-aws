// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.medialive.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ChannelEncoderSettingsAudioDescriptionCodecSettingsMp2Settings {
    /**
     * @return Average bitrate in bits/second.
     * 
     */
    private @Nullable Double bitrate;
    /**
     * @return Mono, Stereo, or 5.1 channel layout.
     * 
     */
    private @Nullable String codingMode;
    /**
     * @return Sample rate in Hz.
     * 
     */
    private @Nullable Double sampleRate;

    private ChannelEncoderSettingsAudioDescriptionCodecSettingsMp2Settings() {}
    /**
     * @return Average bitrate in bits/second.
     * 
     */
    public Optional<Double> bitrate() {
        return Optional.ofNullable(this.bitrate);
    }
    /**
     * @return Mono, Stereo, or 5.1 channel layout.
     * 
     */
    public Optional<String> codingMode() {
        return Optional.ofNullable(this.codingMode);
    }
    /**
     * @return Sample rate in Hz.
     * 
     */
    public Optional<Double> sampleRate() {
        return Optional.ofNullable(this.sampleRate);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ChannelEncoderSettingsAudioDescriptionCodecSettingsMp2Settings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Double bitrate;
        private @Nullable String codingMode;
        private @Nullable Double sampleRate;
        public Builder() {}
        public Builder(ChannelEncoderSettingsAudioDescriptionCodecSettingsMp2Settings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bitrate = defaults.bitrate;
    	      this.codingMode = defaults.codingMode;
    	      this.sampleRate = defaults.sampleRate;
        }

        @CustomType.Setter
        public Builder bitrate(@Nullable Double bitrate) {
            this.bitrate = bitrate;
            return this;
        }
        @CustomType.Setter
        public Builder codingMode(@Nullable String codingMode) {
            this.codingMode = codingMode;
            return this;
        }
        @CustomType.Setter
        public Builder sampleRate(@Nullable Double sampleRate) {
            this.sampleRate = sampleRate;
            return this;
        }
        public ChannelEncoderSettingsAudioDescriptionCodecSettingsMp2Settings build() {
            final var _resultValue = new ChannelEncoderSettingsAudioDescriptionCodecSettingsMp2Settings();
            _resultValue.bitrate = bitrate;
            _resultValue.codingMode = codingMode;
            _resultValue.sampleRate = sampleRate;
            return _resultValue;
        }
    }
}
