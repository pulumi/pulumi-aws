// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.costexplorer.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTagsSortBy extends com.pulumi.resources.InvokeArgs {

    public static final GetTagsSortBy Empty = new GetTagsSortBy();

    /**
     * key that&#39;s used to sort the data. Valid values are: `BlendedCost`,  `UnblendedCost`, `AmortizedCost`, `NetAmortizedCost`, `NetUnblendedCost`, `UsageQuantity`, `NormalizedUsageAmount`.
     * 
     */
    @Import(name="key")
    private @Nullable String key;

    /**
     * @return key that&#39;s used to sort the data. Valid values are: `BlendedCost`,  `UnblendedCost`, `AmortizedCost`, `NetAmortizedCost`, `NetUnblendedCost`, `UsageQuantity`, `NormalizedUsageAmount`.
     * 
     */
    public Optional<String> key() {
        return Optional.ofNullable(this.key);
    }

    /**
     * order that&#39;s used to sort the data. Valid values are: `ASCENDING`,  `DESCENDING`.
     * 
     */
    @Import(name="sortOrder")
    private @Nullable String sortOrder;

    /**
     * @return order that&#39;s used to sort the data. Valid values are: `ASCENDING`,  `DESCENDING`.
     * 
     */
    public Optional<String> sortOrder() {
        return Optional.ofNullable(this.sortOrder);
    }

    private GetTagsSortBy() {}

    private GetTagsSortBy(GetTagsSortBy $) {
        this.key = $.key;
        this.sortOrder = $.sortOrder;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTagsSortBy defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTagsSortBy $;

        public Builder() {
            $ = new GetTagsSortBy();
        }

        public Builder(GetTagsSortBy defaults) {
            $ = new GetTagsSortBy(Objects.requireNonNull(defaults));
        }

        /**
         * @param key key that&#39;s used to sort the data. Valid values are: `BlendedCost`,  `UnblendedCost`, `AmortizedCost`, `NetAmortizedCost`, `NetUnblendedCost`, `UsageQuantity`, `NormalizedUsageAmount`.
         * 
         * @return builder
         * 
         */
        public Builder key(@Nullable String key) {
            $.key = key;
            return this;
        }

        /**
         * @param sortOrder order that&#39;s used to sort the data. Valid values are: `ASCENDING`,  `DESCENDING`.
         * 
         * @return builder
         * 
         */
        public Builder sortOrder(@Nullable String sortOrder) {
            $.sortOrder = sortOrder;
            return this;
        }

        public GetTagsSortBy build() {
            return $;
        }
    }

}
