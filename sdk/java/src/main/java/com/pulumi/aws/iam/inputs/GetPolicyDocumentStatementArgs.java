// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iam.inputs;

import com.pulumi.aws.iam.inputs.GetPolicyDocumentStatementConditionArgs;
import com.pulumi.aws.iam.inputs.GetPolicyDocumentStatementNotPrincipalArgs;
import com.pulumi.aws.iam.inputs.GetPolicyDocumentStatementPrincipalArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPolicyDocumentStatementArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetPolicyDocumentStatementArgs Empty = new GetPolicyDocumentStatementArgs();

    @Import(name="actions")
    private @Nullable Output<List<String>> actions;

    public Optional<Output<List<String>>> actions() {
        return Optional.ofNullable(this.actions);
    }

    @Import(name="conditions")
    private @Nullable Output<List<GetPolicyDocumentStatementConditionArgs>> conditions;

    public Optional<Output<List<GetPolicyDocumentStatementConditionArgs>>> conditions() {
        return Optional.ofNullable(this.conditions);
    }

    @Import(name="effect")
    private @Nullable Output<String> effect;

    public Optional<Output<String>> effect() {
        return Optional.ofNullable(this.effect);
    }

    @Import(name="notActions")
    private @Nullable Output<List<String>> notActions;

    public Optional<Output<List<String>>> notActions() {
        return Optional.ofNullable(this.notActions);
    }

    @Import(name="notPrincipals")
    private @Nullable Output<List<GetPolicyDocumentStatementNotPrincipalArgs>> notPrincipals;

    public Optional<Output<List<GetPolicyDocumentStatementNotPrincipalArgs>>> notPrincipals() {
        return Optional.ofNullable(this.notPrincipals);
    }

    @Import(name="notResources")
    private @Nullable Output<List<String>> notResources;

    public Optional<Output<List<String>>> notResources() {
        return Optional.ofNullable(this.notResources);
    }

    @Import(name="principals")
    private @Nullable Output<List<GetPolicyDocumentStatementPrincipalArgs>> principals;

    public Optional<Output<List<GetPolicyDocumentStatementPrincipalArgs>>> principals() {
        return Optional.ofNullable(this.principals);
    }

    @Import(name="resources")
    private @Nullable Output<List<String>> resources;

    public Optional<Output<List<String>>> resources() {
        return Optional.ofNullable(this.resources);
    }

    @Import(name="sid")
    private @Nullable Output<String> sid;

    public Optional<Output<String>> sid() {
        return Optional.ofNullable(this.sid);
    }

    private GetPolicyDocumentStatementArgs() {}

    private GetPolicyDocumentStatementArgs(GetPolicyDocumentStatementArgs $) {
        this.actions = $.actions;
        this.conditions = $.conditions;
        this.effect = $.effect;
        this.notActions = $.notActions;
        this.notPrincipals = $.notPrincipals;
        this.notResources = $.notResources;
        this.principals = $.principals;
        this.resources = $.resources;
        this.sid = $.sid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPolicyDocumentStatementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPolicyDocumentStatementArgs $;

        public Builder() {
            $ = new GetPolicyDocumentStatementArgs();
        }

        public Builder(GetPolicyDocumentStatementArgs defaults) {
            $ = new GetPolicyDocumentStatementArgs(Objects.requireNonNull(defaults));
        }

        public Builder actions(@Nullable Output<List<String>> actions) {
            $.actions = actions;
            return this;
        }

        public Builder actions(List<String> actions) {
            return actions(Output.of(actions));
        }

        public Builder actions(String... actions) {
            return actions(List.of(actions));
        }

        public Builder conditions(@Nullable Output<List<GetPolicyDocumentStatementConditionArgs>> conditions) {
            $.conditions = conditions;
            return this;
        }

        public Builder conditions(List<GetPolicyDocumentStatementConditionArgs> conditions) {
            return conditions(Output.of(conditions));
        }

        public Builder conditions(GetPolicyDocumentStatementConditionArgs... conditions) {
            return conditions(List.of(conditions));
        }

        public Builder effect(@Nullable Output<String> effect) {
            $.effect = effect;
            return this;
        }

        public Builder effect(String effect) {
            return effect(Output.of(effect));
        }

        public Builder notActions(@Nullable Output<List<String>> notActions) {
            $.notActions = notActions;
            return this;
        }

        public Builder notActions(List<String> notActions) {
            return notActions(Output.of(notActions));
        }

        public Builder notActions(String... notActions) {
            return notActions(List.of(notActions));
        }

        public Builder notPrincipals(@Nullable Output<List<GetPolicyDocumentStatementNotPrincipalArgs>> notPrincipals) {
            $.notPrincipals = notPrincipals;
            return this;
        }

        public Builder notPrincipals(List<GetPolicyDocumentStatementNotPrincipalArgs> notPrincipals) {
            return notPrincipals(Output.of(notPrincipals));
        }

        public Builder notPrincipals(GetPolicyDocumentStatementNotPrincipalArgs... notPrincipals) {
            return notPrincipals(List.of(notPrincipals));
        }

        public Builder notResources(@Nullable Output<List<String>> notResources) {
            $.notResources = notResources;
            return this;
        }

        public Builder notResources(List<String> notResources) {
            return notResources(Output.of(notResources));
        }

        public Builder notResources(String... notResources) {
            return notResources(List.of(notResources));
        }

        public Builder principals(@Nullable Output<List<GetPolicyDocumentStatementPrincipalArgs>> principals) {
            $.principals = principals;
            return this;
        }

        public Builder principals(List<GetPolicyDocumentStatementPrincipalArgs> principals) {
            return principals(Output.of(principals));
        }

        public Builder principals(GetPolicyDocumentStatementPrincipalArgs... principals) {
            return principals(List.of(principals));
        }

        public Builder resources(@Nullable Output<List<String>> resources) {
            $.resources = resources;
            return this;
        }

        public Builder resources(List<String> resources) {
            return resources(Output.of(resources));
        }

        public Builder resources(String... resources) {
            return resources(List.of(resources));
        }

        public Builder sid(@Nullable Output<String> sid) {
            $.sid = sid;
            return this;
        }

        public Builder sid(String sid) {
            return sid(Output.of(sid));
        }

        public GetPolicyDocumentStatementArgs build() {
            return $;
        }
    }

}
