// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.odb;

import com.pulumi.aws.odb.inputs.CloudExadataInfrastructureCustomerContactsToSendToOciArgs;
import com.pulumi.aws.odb.inputs.CloudExadataInfrastructureMaintenanceWindowArgs;
import com.pulumi.aws.odb.inputs.CloudExadataInfrastructureTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudExadataInfrastructureArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudExadataInfrastructureArgs Empty = new CloudExadataInfrastructureArgs();

    @Import(name="availabilityZone")
    private @Nullable Output<String> availabilityZone;

    public Optional<Output<String>> availabilityZone() {
        return Optional.ofNullable(this.availabilityZone);
    }

    @Import(name="availabilityZoneId", required=true)
    private Output<String> availabilityZoneId;

    public Output<String> availabilityZoneId() {
        return this.availabilityZoneId;
    }

    /**
     * The number of compute instances that the Exadata infrastructure is located
     * 
     */
    @Import(name="computeCount")
    private @Nullable Output<Integer> computeCount;

    /**
     * @return The number of compute instances that the Exadata infrastructure is located
     * 
     */
    public Optional<Output<Integer>> computeCount() {
        return Optional.ofNullable(this.computeCount);
    }

    @Import(name="customerContactsToSendToOcis")
    private @Nullable Output<List<CloudExadataInfrastructureCustomerContactsToSendToOciArgs>> customerContactsToSendToOcis;

    public Optional<Output<List<CloudExadataInfrastructureCustomerContactsToSendToOciArgs>>> customerContactsToSendToOcis() {
        return Optional.ofNullable(this.customerContactsToSendToOcis);
    }

    /**
     * The database server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation
     * 
     */
    @Import(name="databaseServerType")
    private @Nullable Output<String> databaseServerType;

    /**
     * @return The database server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation
     * 
     */
    public Optional<Output<String>> databaseServerType() {
        return Optional.ofNullable(this.databaseServerType);
    }

    @Import(name="displayName", required=true)
    private Output<String> displayName;

    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * The scheduling details for the maintenance window. Patching and system updates take place during the maintenance window
     * 
     */
    @Import(name="maintenanceWindow")
    private @Nullable Output<CloudExadataInfrastructureMaintenanceWindowArgs> maintenanceWindow;

    /**
     * @return The scheduling details for the maintenance window. Patching and system updates take place during the maintenance window
     * 
     */
    public Optional<Output<CloudExadataInfrastructureMaintenanceWindowArgs>> maintenanceWindow() {
        return Optional.ofNullable(this.maintenanceWindow);
    }

    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    @Import(name="shape", required=true)
    private Output<String> shape;

    public Output<String> shape() {
        return this.shape;
    }

    /**
     * TThe number of storage servers that are activated for the Exadata infrastructure
     * 
     */
    @Import(name="storageCount")
    private @Nullable Output<Integer> storageCount;

    /**
     * @return TThe number of storage servers that are activated for the Exadata infrastructure
     * 
     */
    public Optional<Output<Integer>> storageCount() {
        return Optional.ofNullable(this.storageCount);
    }

    /**
     * The storage server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation
     * 
     */
    @Import(name="storageServerType")
    private @Nullable Output<String> storageServerType;

    /**
     * @return The storage server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation
     * 
     */
    public Optional<Output<String>> storageServerType() {
        return Optional.ofNullable(this.storageServerType);
    }

    /**
     * A map of tags to assign to the exadata infrastructure. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the exadata infrastructure. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="timeouts")
    private @Nullable Output<CloudExadataInfrastructureTimeoutsArgs> timeouts;

    public Optional<Output<CloudExadataInfrastructureTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private CloudExadataInfrastructureArgs() {}

    private CloudExadataInfrastructureArgs(CloudExadataInfrastructureArgs $) {
        this.availabilityZone = $.availabilityZone;
        this.availabilityZoneId = $.availabilityZoneId;
        this.computeCount = $.computeCount;
        this.customerContactsToSendToOcis = $.customerContactsToSendToOcis;
        this.databaseServerType = $.databaseServerType;
        this.displayName = $.displayName;
        this.maintenanceWindow = $.maintenanceWindow;
        this.region = $.region;
        this.shape = $.shape;
        this.storageCount = $.storageCount;
        this.storageServerType = $.storageServerType;
        this.tags = $.tags;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudExadataInfrastructureArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudExadataInfrastructureArgs $;

        public Builder() {
            $ = new CloudExadataInfrastructureArgs();
        }

        public Builder(CloudExadataInfrastructureArgs defaults) {
            $ = new CloudExadataInfrastructureArgs(Objects.requireNonNull(defaults));
        }

        public Builder availabilityZone(@Nullable Output<String> availabilityZone) {
            $.availabilityZone = availabilityZone;
            return this;
        }

        public Builder availabilityZone(String availabilityZone) {
            return availabilityZone(Output.of(availabilityZone));
        }

        public Builder availabilityZoneId(Output<String> availabilityZoneId) {
            $.availabilityZoneId = availabilityZoneId;
            return this;
        }

        public Builder availabilityZoneId(String availabilityZoneId) {
            return availabilityZoneId(Output.of(availabilityZoneId));
        }

        /**
         * @param computeCount The number of compute instances that the Exadata infrastructure is located
         * 
         * @return builder
         * 
         */
        public Builder computeCount(@Nullable Output<Integer> computeCount) {
            $.computeCount = computeCount;
            return this;
        }

        /**
         * @param computeCount The number of compute instances that the Exadata infrastructure is located
         * 
         * @return builder
         * 
         */
        public Builder computeCount(Integer computeCount) {
            return computeCount(Output.of(computeCount));
        }

        public Builder customerContactsToSendToOcis(@Nullable Output<List<CloudExadataInfrastructureCustomerContactsToSendToOciArgs>> customerContactsToSendToOcis) {
            $.customerContactsToSendToOcis = customerContactsToSendToOcis;
            return this;
        }

        public Builder customerContactsToSendToOcis(List<CloudExadataInfrastructureCustomerContactsToSendToOciArgs> customerContactsToSendToOcis) {
            return customerContactsToSendToOcis(Output.of(customerContactsToSendToOcis));
        }

        public Builder customerContactsToSendToOcis(CloudExadataInfrastructureCustomerContactsToSendToOciArgs... customerContactsToSendToOcis) {
            return customerContactsToSendToOcis(List.of(customerContactsToSendToOcis));
        }

        /**
         * @param databaseServerType The database server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation
         * 
         * @return builder
         * 
         */
        public Builder databaseServerType(@Nullable Output<String> databaseServerType) {
            $.databaseServerType = databaseServerType;
            return this;
        }

        /**
         * @param databaseServerType The database server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation
         * 
         * @return builder
         * 
         */
        public Builder databaseServerType(String databaseServerType) {
            return databaseServerType(Output.of(databaseServerType));
        }

        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param maintenanceWindow The scheduling details for the maintenance window. Patching and system updates take place during the maintenance window
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindow(@Nullable Output<CloudExadataInfrastructureMaintenanceWindowArgs> maintenanceWindow) {
            $.maintenanceWindow = maintenanceWindow;
            return this;
        }

        /**
         * @param maintenanceWindow The scheduling details for the maintenance window. Patching and system updates take place during the maintenance window
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindow(CloudExadataInfrastructureMaintenanceWindowArgs maintenanceWindow) {
            return maintenanceWindow(Output.of(maintenanceWindow));
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public Builder shape(Output<String> shape) {
            $.shape = shape;
            return this;
        }

        public Builder shape(String shape) {
            return shape(Output.of(shape));
        }

        /**
         * @param storageCount TThe number of storage servers that are activated for the Exadata infrastructure
         * 
         * @return builder
         * 
         */
        public Builder storageCount(@Nullable Output<Integer> storageCount) {
            $.storageCount = storageCount;
            return this;
        }

        /**
         * @param storageCount TThe number of storage servers that are activated for the Exadata infrastructure
         * 
         * @return builder
         * 
         */
        public Builder storageCount(Integer storageCount) {
            return storageCount(Output.of(storageCount));
        }

        /**
         * @param storageServerType The storage server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation
         * 
         * @return builder
         * 
         */
        public Builder storageServerType(@Nullable Output<String> storageServerType) {
            $.storageServerType = storageServerType;
            return this;
        }

        /**
         * @param storageServerType The storage server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation
         * 
         * @return builder
         * 
         */
        public Builder storageServerType(String storageServerType) {
            return storageServerType(Output.of(storageServerType));
        }

        /**
         * @param tags A map of tags to assign to the exadata infrastructure. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A map of tags to assign to the exadata infrastructure. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder timeouts(@Nullable Output<CloudExadataInfrastructureTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(CloudExadataInfrastructureTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public CloudExadataInfrastructureArgs build() {
            if ($.availabilityZoneId == null) {
                throw new MissingRequiredPropertyException("CloudExadataInfrastructureArgs", "availabilityZoneId");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("CloudExadataInfrastructureArgs", "displayName");
            }
            if ($.shape == null) {
                throw new MissingRequiredPropertyException("CloudExadataInfrastructureArgs", "shape");
            }
            return $;
        }
    }

}
