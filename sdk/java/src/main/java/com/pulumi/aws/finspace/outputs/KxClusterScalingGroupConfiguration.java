// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.finspace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class KxClusterScalingGroupConfiguration {
    /**
     * @return The number of vCPUs that you want to reserve for each node of this kdb cluster on the scaling group host.
     * 
     */
    private @Nullable Double cpu;
    /**
     * @return An optional hard limit on the amount of memory a kdb cluster can use.
     * 
     */
    private @Nullable Integer memoryLimit;
    /**
     * @return A reservation of the minimum amount of memory that should be available on the scaling group for a kdb cluster to be successfully placed in a scaling group.
     * 
     */
    private Integer memoryReservation;
    /**
     * @return The number of kdb cluster nodes.
     * 
     */
    private Integer nodeCount;
    /**
     * @return A unique identifier for the kdb scaling group.
     * 
     */
    private String scalingGroupName;

    private KxClusterScalingGroupConfiguration() {}
    /**
     * @return The number of vCPUs that you want to reserve for each node of this kdb cluster on the scaling group host.
     * 
     */
    public Optional<Double> cpu() {
        return Optional.ofNullable(this.cpu);
    }
    /**
     * @return An optional hard limit on the amount of memory a kdb cluster can use.
     * 
     */
    public Optional<Integer> memoryLimit() {
        return Optional.ofNullable(this.memoryLimit);
    }
    /**
     * @return A reservation of the minimum amount of memory that should be available on the scaling group for a kdb cluster to be successfully placed in a scaling group.
     * 
     */
    public Integer memoryReservation() {
        return this.memoryReservation;
    }
    /**
     * @return The number of kdb cluster nodes.
     * 
     */
    public Integer nodeCount() {
        return this.nodeCount;
    }
    /**
     * @return A unique identifier for the kdb scaling group.
     * 
     */
    public String scalingGroupName() {
        return this.scalingGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KxClusterScalingGroupConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Double cpu;
        private @Nullable Integer memoryLimit;
        private Integer memoryReservation;
        private Integer nodeCount;
        private String scalingGroupName;
        public Builder() {}
        public Builder(KxClusterScalingGroupConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cpu = defaults.cpu;
    	      this.memoryLimit = defaults.memoryLimit;
    	      this.memoryReservation = defaults.memoryReservation;
    	      this.nodeCount = defaults.nodeCount;
    	      this.scalingGroupName = defaults.scalingGroupName;
        }

        @CustomType.Setter
        public Builder cpu(@Nullable Double cpu) {

            this.cpu = cpu;
            return this;
        }
        @CustomType.Setter
        public Builder memoryLimit(@Nullable Integer memoryLimit) {

            this.memoryLimit = memoryLimit;
            return this;
        }
        @CustomType.Setter
        public Builder memoryReservation(Integer memoryReservation) {
            if (memoryReservation == null) {
              throw new MissingRequiredPropertyException("KxClusterScalingGroupConfiguration", "memoryReservation");
            }
            this.memoryReservation = memoryReservation;
            return this;
        }
        @CustomType.Setter
        public Builder nodeCount(Integer nodeCount) {
            if (nodeCount == null) {
              throw new MissingRequiredPropertyException("KxClusterScalingGroupConfiguration", "nodeCount");
            }
            this.nodeCount = nodeCount;
            return this;
        }
        @CustomType.Setter
        public Builder scalingGroupName(String scalingGroupName) {
            if (scalingGroupName == null) {
              throw new MissingRequiredPropertyException("KxClusterScalingGroupConfiguration", "scalingGroupName");
            }
            this.scalingGroupName = scalingGroupName;
            return this;
        }
        public KxClusterScalingGroupConfiguration build() {
            final var _resultValue = new KxClusterScalingGroupConfiguration();
            _resultValue.cpu = cpu;
            _resultValue.memoryLimit = memoryLimit;
            _resultValue.memoryReservation = memoryReservation;
            _resultValue.nodeCount = nodeCount;
            _resultValue.scalingGroupName = scalingGroupName;
            return _resultValue;
        }
    }
}
