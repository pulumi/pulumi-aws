// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.budgets;

import com.pulumi.aws.budgets.inputs.BudgetActionActionThresholdArgs;
import com.pulumi.aws.budgets.inputs.BudgetActionDefinitionArgs;
import com.pulumi.aws.budgets.inputs.BudgetActionSubscriberArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BudgetActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final BudgetActionArgs Empty = new BudgetActionArgs();

    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    @Import(name="actionThreshold", required=true)
    private Output<BudgetActionActionThresholdArgs> actionThreshold;

    public Output<BudgetActionActionThresholdArgs> actionThreshold() {
        return this.actionThreshold;
    }

    @Import(name="actionType", required=true)
    private Output<String> actionType;

    public Output<String> actionType() {
        return this.actionType;
    }

    @Import(name="approvalModel", required=true)
    private Output<String> approvalModel;

    public Output<String> approvalModel() {
        return this.approvalModel;
    }

    @Import(name="budgetName", required=true)
    private Output<String> budgetName;

    public Output<String> budgetName() {
        return this.budgetName;
    }

    @Import(name="definition", required=true)
    private Output<BudgetActionDefinitionArgs> definition;

    public Output<BudgetActionDefinitionArgs> definition() {
        return this.definition;
    }

    @Import(name="executionRoleArn", required=true)
    private Output<String> executionRoleArn;

    public Output<String> executionRoleArn() {
        return this.executionRoleArn;
    }

    @Import(name="notificationType", required=true)
    private Output<String> notificationType;

    public Output<String> notificationType() {
        return this.notificationType;
    }

    @Import(name="subscribers", required=true)
    private Output<List<BudgetActionSubscriberArgs>> subscribers;

    public Output<List<BudgetActionSubscriberArgs>> subscribers() {
        return this.subscribers;
    }

    private BudgetActionArgs() {}

    private BudgetActionArgs(BudgetActionArgs $) {
        this.accountId = $.accountId;
        this.actionThreshold = $.actionThreshold;
        this.actionType = $.actionType;
        this.approvalModel = $.approvalModel;
        this.budgetName = $.budgetName;
        this.definition = $.definition;
        this.executionRoleArn = $.executionRoleArn;
        this.notificationType = $.notificationType;
        this.subscribers = $.subscribers;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BudgetActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BudgetActionArgs $;

        public Builder() {
            $ = new BudgetActionArgs();
        }

        public Builder(BudgetActionArgs defaults) {
            $ = new BudgetActionArgs(Objects.requireNonNull(defaults));
        }

        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        public Builder actionThreshold(Output<BudgetActionActionThresholdArgs> actionThreshold) {
            $.actionThreshold = actionThreshold;
            return this;
        }

        public Builder actionThreshold(BudgetActionActionThresholdArgs actionThreshold) {
            return actionThreshold(Output.of(actionThreshold));
        }

        public Builder actionType(Output<String> actionType) {
            $.actionType = actionType;
            return this;
        }

        public Builder actionType(String actionType) {
            return actionType(Output.of(actionType));
        }

        public Builder approvalModel(Output<String> approvalModel) {
            $.approvalModel = approvalModel;
            return this;
        }

        public Builder approvalModel(String approvalModel) {
            return approvalModel(Output.of(approvalModel));
        }

        public Builder budgetName(Output<String> budgetName) {
            $.budgetName = budgetName;
            return this;
        }

        public Builder budgetName(String budgetName) {
            return budgetName(Output.of(budgetName));
        }

        public Builder definition(Output<BudgetActionDefinitionArgs> definition) {
            $.definition = definition;
            return this;
        }

        public Builder definition(BudgetActionDefinitionArgs definition) {
            return definition(Output.of(definition));
        }

        public Builder executionRoleArn(Output<String> executionRoleArn) {
            $.executionRoleArn = executionRoleArn;
            return this;
        }

        public Builder executionRoleArn(String executionRoleArn) {
            return executionRoleArn(Output.of(executionRoleArn));
        }

        public Builder notificationType(Output<String> notificationType) {
            $.notificationType = notificationType;
            return this;
        }

        public Builder notificationType(String notificationType) {
            return notificationType(Output.of(notificationType));
        }

        public Builder subscribers(Output<List<BudgetActionSubscriberArgs>> subscribers) {
            $.subscribers = subscribers;
            return this;
        }

        public Builder subscribers(List<BudgetActionSubscriberArgs> subscribers) {
            return subscribers(Output.of(subscribers));
        }

        public Builder subscribers(BudgetActionSubscriberArgs... subscribers) {
            return subscribers(List.of(subscribers));
        }

        public BudgetActionArgs build() {
            $.actionThreshold = Objects.requireNonNull($.actionThreshold, "expected parameter 'actionThreshold' to be non-null");
            $.actionType = Objects.requireNonNull($.actionType, "expected parameter 'actionType' to be non-null");
            $.approvalModel = Objects.requireNonNull($.approvalModel, "expected parameter 'approvalModel' to be non-null");
            $.budgetName = Objects.requireNonNull($.budgetName, "expected parameter 'budgetName' to be non-null");
            $.definition = Objects.requireNonNull($.definition, "expected parameter 'definition' to be non-null");
            $.executionRoleArn = Objects.requireNonNull($.executionRoleArn, "expected parameter 'executionRoleArn' to be non-null");
            $.notificationType = Objects.requireNonNull($.notificationType, "expected parameter 'notificationType' to be non-null");
            $.subscribers = Objects.requireNonNull($.subscribers, "expected parameter 'subscribers' to be non-null");
            return $;
        }
    }

}
