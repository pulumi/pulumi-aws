// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ebs.inputs;

import com.pulumi.aws.ebs.inputs.SnapshotImportDiskContainerUserBucketArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SnapshotImportDiskContainerArgs extends com.pulumi.resources.ResourceArgs {

    public static final SnapshotImportDiskContainerArgs Empty = new SnapshotImportDiskContainerArgs();

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="format", required=true)
    private Output<String> format;

    public Output<String> format() {
        return this.format;
    }

    @Import(name="url")
    private @Nullable Output<String> url;

    public Optional<Output<String>> url() {
        return Optional.ofNullable(this.url);
    }

    @Import(name="userBucket")
    private @Nullable Output<SnapshotImportDiskContainerUserBucketArgs> userBucket;

    public Optional<Output<SnapshotImportDiskContainerUserBucketArgs>> userBucket() {
        return Optional.ofNullable(this.userBucket);
    }

    private SnapshotImportDiskContainerArgs() {}

    private SnapshotImportDiskContainerArgs(SnapshotImportDiskContainerArgs $) {
        this.description = $.description;
        this.format = $.format;
        this.url = $.url;
        this.userBucket = $.userBucket;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SnapshotImportDiskContainerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SnapshotImportDiskContainerArgs $;

        public Builder() {
            $ = new SnapshotImportDiskContainerArgs();
        }

        public Builder(SnapshotImportDiskContainerArgs defaults) {
            $ = new SnapshotImportDiskContainerArgs(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder format(Output<String> format) {
            $.format = format;
            return this;
        }

        public Builder format(String format) {
            return format(Output.of(format));
        }

        public Builder url(@Nullable Output<String> url) {
            $.url = url;
            return this;
        }

        public Builder url(String url) {
            return url(Output.of(url));
        }

        public Builder userBucket(@Nullable Output<SnapshotImportDiskContainerUserBucketArgs> userBucket) {
            $.userBucket = userBucket;
            return this;
        }

        public Builder userBucket(SnapshotImportDiskContainerUserBucketArgs userBucket) {
            return userBucket(Output.of(userBucket));
        }

        public SnapshotImportDiskContainerArgs build() {
            $.format = Objects.requireNonNull($.format, "expected parameter 'format' to be non-null");
            return $;
        }
    }

}
