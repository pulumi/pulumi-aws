// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.glue.inputs;

import com.pulumi.aws.glue.inputs.SecurityConfigurationEncryptionConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecurityConfigurationState extends com.pulumi.resources.ResourceArgs {

    public static final SecurityConfigurationState Empty = new SecurityConfigurationState();

    /**
     * Configuration block containing encryption configuration. Detailed below.
     * 
     */
    @Import(name="encryptionConfiguration")
    private @Nullable Output<SecurityConfigurationEncryptionConfigurationArgs> encryptionConfiguration;

    /**
     * @return Configuration block containing encryption configuration. Detailed below.
     * 
     */
    public Optional<Output<SecurityConfigurationEncryptionConfigurationArgs>> encryptionConfiguration() {
        return Optional.ofNullable(this.encryptionConfiguration);
    }

    /**
     * Name of the security configuration.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the security configuration.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private SecurityConfigurationState() {}

    private SecurityConfigurationState(SecurityConfigurationState $) {
        this.encryptionConfiguration = $.encryptionConfiguration;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityConfigurationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityConfigurationState $;

        public Builder() {
            $ = new SecurityConfigurationState();
        }

        public Builder(SecurityConfigurationState defaults) {
            $ = new SecurityConfigurationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param encryptionConfiguration Configuration block containing encryption configuration. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder encryptionConfiguration(@Nullable Output<SecurityConfigurationEncryptionConfigurationArgs> encryptionConfiguration) {
            $.encryptionConfiguration = encryptionConfiguration;
            return this;
        }

        /**
         * @param encryptionConfiguration Configuration block containing encryption configuration. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder encryptionConfiguration(SecurityConfigurationEncryptionConfigurationArgs encryptionConfiguration) {
            return encryptionConfiguration(Output.of(encryptionConfiguration));
        }

        /**
         * @param name Name of the security configuration.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the security configuration.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public SecurityConfigurationState build() {
            return $;
        }
    }

}
