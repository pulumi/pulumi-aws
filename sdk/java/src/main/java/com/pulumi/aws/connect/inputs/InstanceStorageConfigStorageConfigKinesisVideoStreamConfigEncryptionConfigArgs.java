// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.connect.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs Empty = new InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs();

    /**
     * The type of encryption. Valid Values: `KMS`.
     * 
     */
    @Import(name="encryptionType", required=true)
    private Output<String> encryptionType;

    /**
     * @return The type of encryption. Valid Values: `KMS`.
     * 
     */
    public Output<String> encryptionType() {
        return this.encryptionType;
    }

    /**
     * The full ARN of the encryption key. Be sure to provide the full ARN of the encryption key, not just the ID.
     * 
     */
    @Import(name="keyId", required=true)
    private Output<String> keyId;

    /**
     * @return The full ARN of the encryption key. Be sure to provide the full ARN of the encryption key, not just the ID.
     * 
     */
    public Output<String> keyId() {
        return this.keyId;
    }

    private InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs() {}

    private InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs(InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs $) {
        this.encryptionType = $.encryptionType;
        this.keyId = $.keyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs $;

        public Builder() {
            $ = new InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs();
        }

        public Builder(InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs defaults) {
            $ = new InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param encryptionType The type of encryption. Valid Values: `KMS`.
         * 
         * @return builder
         * 
         */
        public Builder encryptionType(Output<String> encryptionType) {
            $.encryptionType = encryptionType;
            return this;
        }

        /**
         * @param encryptionType The type of encryption. Valid Values: `KMS`.
         * 
         * @return builder
         * 
         */
        public Builder encryptionType(String encryptionType) {
            return encryptionType(Output.of(encryptionType));
        }

        /**
         * @param keyId The full ARN of the encryption key. Be sure to provide the full ARN of the encryption key, not just the ID.
         * 
         * @return builder
         * 
         */
        public Builder keyId(Output<String> keyId) {
            $.keyId = keyId;
            return this;
        }

        /**
         * @param keyId The full ARN of the encryption key. Be sure to provide the full ARN of the encryption key, not just the ID.
         * 
         * @return builder
         * 
         */
        public Builder keyId(String keyId) {
            return keyId(Output.of(keyId));
        }

        public InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs build() {
            if ($.encryptionType == null) {
                throw new MissingRequiredPropertyException("InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs", "encryptionType");
            }
            if ($.keyId == null) {
                throw new MissingRequiredPropertyException("InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs", "keyId");
            }
            return $;
        }
    }

}
