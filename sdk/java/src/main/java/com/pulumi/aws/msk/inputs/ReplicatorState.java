// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.msk.inputs;

import com.pulumi.aws.msk.inputs.ReplicatorKafkaClusterArgs;
import com.pulumi.aws.msk.inputs.ReplicatorReplicationInfoListArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ReplicatorState extends com.pulumi.resources.ResourceArgs {

    public static final ReplicatorState Empty = new ReplicatorState();

    /**
     * ARN of the Replicator. Do not begin the description with &#34;An&#34;, &#34;The&#34;, &#34;Defines&#34;, &#34;Indicates&#34;, or &#34;Specifies,&#34; as these are verbose. In other words, &#34;Indicates the amount of storage,&#34; can be rewritten as &#34;Amount of storage,&#34; without losing any information.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return ARN of the Replicator. Do not begin the description with &#34;An&#34;, &#34;The&#34;, &#34;Defines&#34;, &#34;Indicates&#34;, or &#34;Specifies,&#34; as these are verbose. In other words, &#34;Indicates the amount of storage,&#34; can be rewritten as &#34;Amount of storage,&#34; without losing any information.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="currentVersion")
    private @Nullable Output<String> currentVersion;

    public Optional<Output<String>> currentVersion() {
        return Optional.ofNullable(this.currentVersion);
    }

    /**
     * A summary description of the replicator.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A summary description of the replicator.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * A list of Kafka clusters which are targets of the replicator.
     * 
     */
    @Import(name="kafkaClusters")
    private @Nullable Output<List<ReplicatorKafkaClusterArgs>> kafkaClusters;

    /**
     * @return A list of Kafka clusters which are targets of the replicator.
     * 
     */
    public Optional<Output<List<ReplicatorKafkaClusterArgs>>> kafkaClusters() {
        return Optional.ofNullable(this.kafkaClusters);
    }

    /**
     * A list of replication configurations, where each configuration targets a given source cluster to target cluster replication flow.
     * 
     */
    @Import(name="replicationInfoList")
    private @Nullable Output<ReplicatorReplicationInfoListArgs> replicationInfoList;

    /**
     * @return A list of replication configurations, where each configuration targets a given source cluster to target cluster replication flow.
     * 
     */
    public Optional<Output<ReplicatorReplicationInfoListArgs>> replicationInfoList() {
        return Optional.ofNullable(this.replicationInfoList);
    }

    /**
     * The name of the replicator.
     * 
     */
    @Import(name="replicatorName")
    private @Nullable Output<String> replicatorName;

    /**
     * @return The name of the replicator.
     * 
     */
    public Optional<Output<String>> replicatorName() {
        return Optional.ofNullable(this.replicatorName);
    }

    /**
     * The ARN of the IAM role used by the replicator to access resources in the customer&#39;s account (e.g source and target clusters).
     * 
     */
    @Import(name="serviceExecutionRoleArn")
    private @Nullable Output<String> serviceExecutionRoleArn;

    /**
     * @return The ARN of the IAM role used by the replicator to access resources in the customer&#39;s account (e.g source and target clusters).
     * 
     */
    public Optional<Output<String>> serviceExecutionRoleArn() {
        return Optional.ofNullable(this.serviceExecutionRoleArn);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private ReplicatorState() {}

    private ReplicatorState(ReplicatorState $) {
        this.arn = $.arn;
        this.currentVersion = $.currentVersion;
        this.description = $.description;
        this.kafkaClusters = $.kafkaClusters;
        this.replicationInfoList = $.replicationInfoList;
        this.replicatorName = $.replicatorName;
        this.serviceExecutionRoleArn = $.serviceExecutionRoleArn;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReplicatorState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReplicatorState $;

        public Builder() {
            $ = new ReplicatorState();
        }

        public Builder(ReplicatorState defaults) {
            $ = new ReplicatorState(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn ARN of the Replicator. Do not begin the description with &#34;An&#34;, &#34;The&#34;, &#34;Defines&#34;, &#34;Indicates&#34;, or &#34;Specifies,&#34; as these are verbose. In other words, &#34;Indicates the amount of storage,&#34; can be rewritten as &#34;Amount of storage,&#34; without losing any information.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn ARN of the Replicator. Do not begin the description with &#34;An&#34;, &#34;The&#34;, &#34;Defines&#34;, &#34;Indicates&#34;, or &#34;Specifies,&#34; as these are verbose. In other words, &#34;Indicates the amount of storage,&#34; can be rewritten as &#34;Amount of storage,&#34; without losing any information.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder currentVersion(@Nullable Output<String> currentVersion) {
            $.currentVersion = currentVersion;
            return this;
        }

        public Builder currentVersion(String currentVersion) {
            return currentVersion(Output.of(currentVersion));
        }

        /**
         * @param description A summary description of the replicator.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A summary description of the replicator.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param kafkaClusters A list of Kafka clusters which are targets of the replicator.
         * 
         * @return builder
         * 
         */
        public Builder kafkaClusters(@Nullable Output<List<ReplicatorKafkaClusterArgs>> kafkaClusters) {
            $.kafkaClusters = kafkaClusters;
            return this;
        }

        /**
         * @param kafkaClusters A list of Kafka clusters which are targets of the replicator.
         * 
         * @return builder
         * 
         */
        public Builder kafkaClusters(List<ReplicatorKafkaClusterArgs> kafkaClusters) {
            return kafkaClusters(Output.of(kafkaClusters));
        }

        /**
         * @param kafkaClusters A list of Kafka clusters which are targets of the replicator.
         * 
         * @return builder
         * 
         */
        public Builder kafkaClusters(ReplicatorKafkaClusterArgs... kafkaClusters) {
            return kafkaClusters(List.of(kafkaClusters));
        }

        /**
         * @param replicationInfoList A list of replication configurations, where each configuration targets a given source cluster to target cluster replication flow.
         * 
         * @return builder
         * 
         */
        public Builder replicationInfoList(@Nullable Output<ReplicatorReplicationInfoListArgs> replicationInfoList) {
            $.replicationInfoList = replicationInfoList;
            return this;
        }

        /**
         * @param replicationInfoList A list of replication configurations, where each configuration targets a given source cluster to target cluster replication flow.
         * 
         * @return builder
         * 
         */
        public Builder replicationInfoList(ReplicatorReplicationInfoListArgs replicationInfoList) {
            return replicationInfoList(Output.of(replicationInfoList));
        }

        /**
         * @param replicatorName The name of the replicator.
         * 
         * @return builder
         * 
         */
        public Builder replicatorName(@Nullable Output<String> replicatorName) {
            $.replicatorName = replicatorName;
            return this;
        }

        /**
         * @param replicatorName The name of the replicator.
         * 
         * @return builder
         * 
         */
        public Builder replicatorName(String replicatorName) {
            return replicatorName(Output.of(replicatorName));
        }

        /**
         * @param serviceExecutionRoleArn The ARN of the IAM role used by the replicator to access resources in the customer&#39;s account (e.g source and target clusters).
         * 
         * @return builder
         * 
         */
        public Builder serviceExecutionRoleArn(@Nullable Output<String> serviceExecutionRoleArn) {
            $.serviceExecutionRoleArn = serviceExecutionRoleArn;
            return this;
        }

        /**
         * @param serviceExecutionRoleArn The ARN of the IAM role used by the replicator to access resources in the customer&#39;s account (e.g source and target clusters).
         * 
         * @return builder
         * 
         */
        public Builder serviceExecutionRoleArn(String serviceExecutionRoleArn) {
            return serviceExecutionRoleArn(Output.of(serviceExecutionRoleArn));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public ReplicatorState build() {
            return $;
        }
    }

}
