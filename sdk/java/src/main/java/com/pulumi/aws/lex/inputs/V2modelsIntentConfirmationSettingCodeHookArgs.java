// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lex.inputs;

import com.pulumi.aws.lex.inputs.V2modelsIntentConfirmationSettingCodeHookPostCodeHookSpecificationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class V2modelsIntentConfirmationSettingCodeHookArgs extends com.pulumi.resources.ResourceArgs {

    public static final V2modelsIntentConfirmationSettingCodeHookArgs Empty = new V2modelsIntentConfirmationSettingCodeHookArgs();

    /**
     * Whether a dialog code hook is used when the intent is activated.
     * 
     */
    @Import(name="active", required=true)
    private Output<Boolean> active;

    /**
     * @return Whether a dialog code hook is used when the intent is activated.
     * 
     */
    public Output<Boolean> active() {
        return this.active;
    }

    /**
     * Whether a Lambda function should be invoked for the dialog.
     * 
     */
    @Import(name="enableCodeHookInvocation", required=true)
    private Output<Boolean> enableCodeHookInvocation;

    /**
     * @return Whether a Lambda function should be invoked for the dialog.
     * 
     */
    public Output<Boolean> enableCodeHookInvocation() {
        return this.enableCodeHookInvocation;
    }

    /**
     * Label that indicates the dialog step from which the dialog code hook is happening.
     * 
     */
    @Import(name="invocationLabel")
    private @Nullable Output<String> invocationLabel;

    /**
     * @return Label that indicates the dialog step from which the dialog code hook is happening.
     * 
     */
    public Optional<Output<String>> invocationLabel() {
        return Optional.ofNullable(this.invocationLabel);
    }

    /**
     * Configuration block that contains the responses and actions that Amazon Lex takes after the Lambda function is complete. See `post_code_hook_specification`.
     * 
     */
    @Import(name="postCodeHookSpecification", required=true)
    private Output<V2modelsIntentConfirmationSettingCodeHookPostCodeHookSpecificationArgs> postCodeHookSpecification;

    /**
     * @return Configuration block that contains the responses and actions that Amazon Lex takes after the Lambda function is complete. See `post_code_hook_specification`.
     * 
     */
    public Output<V2modelsIntentConfirmationSettingCodeHookPostCodeHookSpecificationArgs> postCodeHookSpecification() {
        return this.postCodeHookSpecification;
    }

    private V2modelsIntentConfirmationSettingCodeHookArgs() {}

    private V2modelsIntentConfirmationSettingCodeHookArgs(V2modelsIntentConfirmationSettingCodeHookArgs $) {
        this.active = $.active;
        this.enableCodeHookInvocation = $.enableCodeHookInvocation;
        this.invocationLabel = $.invocationLabel;
        this.postCodeHookSpecification = $.postCodeHookSpecification;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(V2modelsIntentConfirmationSettingCodeHookArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private V2modelsIntentConfirmationSettingCodeHookArgs $;

        public Builder() {
            $ = new V2modelsIntentConfirmationSettingCodeHookArgs();
        }

        public Builder(V2modelsIntentConfirmationSettingCodeHookArgs defaults) {
            $ = new V2modelsIntentConfirmationSettingCodeHookArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param active Whether a dialog code hook is used when the intent is activated.
         * 
         * @return builder
         * 
         */
        public Builder active(Output<Boolean> active) {
            $.active = active;
            return this;
        }

        /**
         * @param active Whether a dialog code hook is used when the intent is activated.
         * 
         * @return builder
         * 
         */
        public Builder active(Boolean active) {
            return active(Output.of(active));
        }

        /**
         * @param enableCodeHookInvocation Whether a Lambda function should be invoked for the dialog.
         * 
         * @return builder
         * 
         */
        public Builder enableCodeHookInvocation(Output<Boolean> enableCodeHookInvocation) {
            $.enableCodeHookInvocation = enableCodeHookInvocation;
            return this;
        }

        /**
         * @param enableCodeHookInvocation Whether a Lambda function should be invoked for the dialog.
         * 
         * @return builder
         * 
         */
        public Builder enableCodeHookInvocation(Boolean enableCodeHookInvocation) {
            return enableCodeHookInvocation(Output.of(enableCodeHookInvocation));
        }

        /**
         * @param invocationLabel Label that indicates the dialog step from which the dialog code hook is happening.
         * 
         * @return builder
         * 
         */
        public Builder invocationLabel(@Nullable Output<String> invocationLabel) {
            $.invocationLabel = invocationLabel;
            return this;
        }

        /**
         * @param invocationLabel Label that indicates the dialog step from which the dialog code hook is happening.
         * 
         * @return builder
         * 
         */
        public Builder invocationLabel(String invocationLabel) {
            return invocationLabel(Output.of(invocationLabel));
        }

        /**
         * @param postCodeHookSpecification Configuration block that contains the responses and actions that Amazon Lex takes after the Lambda function is complete. See `post_code_hook_specification`.
         * 
         * @return builder
         * 
         */
        public Builder postCodeHookSpecification(Output<V2modelsIntentConfirmationSettingCodeHookPostCodeHookSpecificationArgs> postCodeHookSpecification) {
            $.postCodeHookSpecification = postCodeHookSpecification;
            return this;
        }

        /**
         * @param postCodeHookSpecification Configuration block that contains the responses and actions that Amazon Lex takes after the Lambda function is complete. See `post_code_hook_specification`.
         * 
         * @return builder
         * 
         */
        public Builder postCodeHookSpecification(V2modelsIntentConfirmationSettingCodeHookPostCodeHookSpecificationArgs postCodeHookSpecification) {
            return postCodeHookSpecification(Output.of(postCodeHookSpecification));
        }

        public V2modelsIntentConfirmationSettingCodeHookArgs build() {
            if ($.active == null) {
                throw new MissingRequiredPropertyException("V2modelsIntentConfirmationSettingCodeHookArgs", "active");
            }
            if ($.enableCodeHookInvocation == null) {
                throw new MissingRequiredPropertyException("V2modelsIntentConfirmationSettingCodeHookArgs", "enableCodeHookInvocation");
            }
            if ($.postCodeHookSpecification == null) {
                throw new MissingRequiredPropertyException("V2modelsIntentConfirmationSettingCodeHookArgs", "postCodeHookSpecification");
            }
            return $;
        }
    }

}
