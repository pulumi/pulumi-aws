// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apigateway.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.util.Objects;

@CustomType
public final class AccountThrottleSetting {
    /**
     * @return Absolute maximum number of times API Gateway allows the API to be called per second (RPS).
     * 
     */
    private Double burstLimit;
    /**
     * @return Number of times API Gateway allows the API to be called per second on average (RPS).
     * 
     */
    private Double rateLimit;

    private AccountThrottleSetting() {}
    /**
     * @return Absolute maximum number of times API Gateway allows the API to be called per second (RPS).
     * 
     */
    public Double burstLimit() {
        return this.burstLimit;
    }
    /**
     * @return Number of times API Gateway allows the API to be called per second on average (RPS).
     * 
     */
    public Double rateLimit() {
        return this.rateLimit;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccountThrottleSetting defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double burstLimit;
        private Double rateLimit;
        public Builder() {}
        public Builder(AccountThrottleSetting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.burstLimit = defaults.burstLimit;
    	      this.rateLimit = defaults.rateLimit;
        }

        @CustomType.Setter
        public Builder burstLimit(Double burstLimit) {
            if (burstLimit == null) {
              throw new MissingRequiredPropertyException("AccountThrottleSetting", "burstLimit");
            }
            this.burstLimit = burstLimit;
            return this;
        }
        @CustomType.Setter
        public Builder rateLimit(Double rateLimit) {
            if (rateLimit == null) {
              throw new MissingRequiredPropertyException("AccountThrottleSetting", "rateLimit");
            }
            this.rateLimit = rateLimit;
            return this;
        }
        public AccountThrottleSetting build() {
            final var _resultValue = new AccountThrottleSetting();
            _resultValue.burstLimit = burstLimit;
            _resultValue.rateLimit = rateLimit;
            return _resultValue;
        }
    }
}
