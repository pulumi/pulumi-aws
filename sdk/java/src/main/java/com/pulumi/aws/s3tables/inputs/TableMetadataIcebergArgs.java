// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3tables.inputs;

import com.pulumi.aws.s3tables.inputs.TableMetadataIcebergSchemaArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.Objects;


public final class TableMetadataIcebergArgs extends com.pulumi.resources.ResourceArgs {

    public static final TableMetadataIcebergArgs Empty = new TableMetadataIcebergArgs();

    /**
     * Schema configuration for the Iceberg table.
     * See `schema` below.
     * 
     */
    @Import(name="schema", required=true)
    private Output<TableMetadataIcebergSchemaArgs> schema;

    /**
     * @return Schema configuration for the Iceberg table.
     * See `schema` below.
     * 
     */
    public Output<TableMetadataIcebergSchemaArgs> schema() {
        return this.schema;
    }

    private TableMetadataIcebergArgs() {}

    private TableMetadataIcebergArgs(TableMetadataIcebergArgs $) {
        this.schema = $.schema;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TableMetadataIcebergArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TableMetadataIcebergArgs $;

        public Builder() {
            $ = new TableMetadataIcebergArgs();
        }

        public Builder(TableMetadataIcebergArgs defaults) {
            $ = new TableMetadataIcebergArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param schema Schema configuration for the Iceberg table.
         * See `schema` below.
         * 
         * @return builder
         * 
         */
        public Builder schema(Output<TableMetadataIcebergSchemaArgs> schema) {
            $.schema = schema;
            return this;
        }

        /**
         * @param schema Schema configuration for the Iceberg table.
         * See `schema` below.
         * 
         * @return builder
         * 
         */
        public Builder schema(TableMetadataIcebergSchemaArgs schema) {
            return schema(Output.of(schema));
        }

        public TableMetadataIcebergArgs build() {
            if ($.schema == null) {
                throw new MissingRequiredPropertyException("TableMetadataIcebergArgs", "schema");
            }
            return $;
        }
    }

}
