// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kendra.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetThesaurusArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetThesaurusArgs Empty = new GetThesaurusArgs();

    @Import(name="indexId", required=true)
    private Output<String> indexId;

    public Output<String> indexId() {
        return this.indexId;
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="thesaurusId", required=true)
    private Output<String> thesaurusId;

    public Output<String> thesaurusId() {
        return this.thesaurusId;
    }

    private GetThesaurusArgs() {}

    private GetThesaurusArgs(GetThesaurusArgs $) {
        this.indexId = $.indexId;
        this.tags = $.tags;
        this.thesaurusId = $.thesaurusId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetThesaurusArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetThesaurusArgs $;

        public Builder() {
            $ = new GetThesaurusArgs();
        }

        public Builder(GetThesaurusArgs defaults) {
            $ = new GetThesaurusArgs(Objects.requireNonNull(defaults));
        }

        public Builder indexId(Output<String> indexId) {
            $.indexId = indexId;
            return this;
        }

        public Builder indexId(String indexId) {
            return indexId(Output.of(indexId));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder thesaurusId(Output<String> thesaurusId) {
            $.thesaurusId = thesaurusId;
            return this;
        }

        public Builder thesaurusId(String thesaurusId) {
            return thesaurusId(Output.of(thesaurusId));
        }

        public GetThesaurusArgs build() {
            $.indexId = Objects.requireNonNull($.indexId, "expected parameter 'indexId' to be non-null");
            $.thesaurusId = Objects.requireNonNull($.thesaurusId, "expected parameter 'thesaurusId' to be non-null");
            return $;
        }
    }

}
