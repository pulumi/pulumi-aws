// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.Column;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DynamicValue {
    private Column defaultValueColumn;
    private @Nullable Column groupNameColumn;
    private @Nullable Column userNameColumn;

    private DynamicValue() {}
    public Column defaultValueColumn() {
        return this.defaultValueColumn;
    }
    public Optional<Column> groupNameColumn() {
        return Optional.ofNullable(this.groupNameColumn);
    }
    public Optional<Column> userNameColumn() {
        return Optional.ofNullable(this.userNameColumn);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DynamicValue defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Column defaultValueColumn;
        private @Nullable Column groupNameColumn;
        private @Nullable Column userNameColumn;
        public Builder() {}
        public Builder(DynamicValue defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultValueColumn = defaults.defaultValueColumn;
    	      this.groupNameColumn = defaults.groupNameColumn;
    	      this.userNameColumn = defaults.userNameColumn;
        }

        @CustomType.Setter
        public Builder defaultValueColumn(Column defaultValueColumn) {
            if (defaultValueColumn == null) {
              throw new MissingRequiredPropertyException("DynamicValue", "defaultValueColumn");
            }
            this.defaultValueColumn = defaultValueColumn;
            return this;
        }
        @CustomType.Setter
        public Builder groupNameColumn(@Nullable Column groupNameColumn) {

            this.groupNameColumn = groupNameColumn;
            return this;
        }
        @CustomType.Setter
        public Builder userNameColumn(@Nullable Column userNameColumn) {

            this.userNameColumn = userNameColumn;
            return this;
        }
        public DynamicValue build() {
            final var _resultValue = new DynamicValue();
            _resultValue.defaultValueColumn = defaultValueColumn;
            _resultValue.groupNameColumn = groupNameColumn;
            _resultValue.userNameColumn = userNameColumn;
            return _resultValue;
        }
    }
}
