// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudfront.outputs;

import com.pulumi.aws.cloudfront.outputs.VpcOriginVpcOriginEndpointConfigOriginSslProtocols;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VpcOriginVpcOriginEndpointConfig {
    /**
     * @return The VPC origin ARN.
     * 
     */
    private String arn;
    /**
     * @return The HTTP port for the CloudFront VPC origin endpoint configuration.
     * 
     */
    private Integer httpPort;
    /**
     * @return The HTTPS port for the CloudFront VPC origin endpoint configuration.
     * 
     */
    private Integer httpsPort;
    /**
     * @return The name of the CloudFront VPC origin endpoint configuration.
     * 
     */
    private String name;
    /**
     * @return The origin protocol policy for the CloudFront VPC origin endpoint configuration.
     * 
     */
    private String originProtocolPolicy;
    /**
     * @return A complex type that contains information about the SSL/TLS protocols that CloudFront can use when establishing an HTTPS connection with your origin.
     * 
     */
    private @Nullable VpcOriginVpcOriginEndpointConfigOriginSslProtocols originSslProtocols;

    private VpcOriginVpcOriginEndpointConfig() {}
    /**
     * @return The VPC origin ARN.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return The HTTP port for the CloudFront VPC origin endpoint configuration.
     * 
     */
    public Integer httpPort() {
        return this.httpPort;
    }
    /**
     * @return The HTTPS port for the CloudFront VPC origin endpoint configuration.
     * 
     */
    public Integer httpsPort() {
        return this.httpsPort;
    }
    /**
     * @return The name of the CloudFront VPC origin endpoint configuration.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The origin protocol policy for the CloudFront VPC origin endpoint configuration.
     * 
     */
    public String originProtocolPolicy() {
        return this.originProtocolPolicy;
    }
    /**
     * @return A complex type that contains information about the SSL/TLS protocols that CloudFront can use when establishing an HTTPS connection with your origin.
     * 
     */
    public Optional<VpcOriginVpcOriginEndpointConfigOriginSslProtocols> originSslProtocols() {
        return Optional.ofNullable(this.originSslProtocols);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VpcOriginVpcOriginEndpointConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private Integer httpPort;
        private Integer httpsPort;
        private String name;
        private String originProtocolPolicy;
        private @Nullable VpcOriginVpcOriginEndpointConfigOriginSslProtocols originSslProtocols;
        public Builder() {}
        public Builder(VpcOriginVpcOriginEndpointConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.httpPort = defaults.httpPort;
    	      this.httpsPort = defaults.httpsPort;
    	      this.name = defaults.name;
    	      this.originProtocolPolicy = defaults.originProtocolPolicy;
    	      this.originSslProtocols = defaults.originSslProtocols;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            if (arn == null) {
              throw new MissingRequiredPropertyException("VpcOriginVpcOriginEndpointConfig", "arn");
            }
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder httpPort(Integer httpPort) {
            if (httpPort == null) {
              throw new MissingRequiredPropertyException("VpcOriginVpcOriginEndpointConfig", "httpPort");
            }
            this.httpPort = httpPort;
            return this;
        }
        @CustomType.Setter
        public Builder httpsPort(Integer httpsPort) {
            if (httpsPort == null) {
              throw new MissingRequiredPropertyException("VpcOriginVpcOriginEndpointConfig", "httpsPort");
            }
            this.httpsPort = httpsPort;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("VpcOriginVpcOriginEndpointConfig", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder originProtocolPolicy(String originProtocolPolicy) {
            if (originProtocolPolicy == null) {
              throw new MissingRequiredPropertyException("VpcOriginVpcOriginEndpointConfig", "originProtocolPolicy");
            }
            this.originProtocolPolicy = originProtocolPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder originSslProtocols(@Nullable VpcOriginVpcOriginEndpointConfigOriginSslProtocols originSslProtocols) {

            this.originSslProtocols = originSslProtocols;
            return this;
        }
        public VpcOriginVpcOriginEndpointConfig build() {
            final var _resultValue = new VpcOriginVpcOriginEndpointConfig();
            _resultValue.arn = arn;
            _resultValue.httpPort = httpPort;
            _resultValue.httpsPort = httpsPort;
            _resultValue.name = name;
            _resultValue.originProtocolPolicy = originProtocolPolicy;
            _resultValue.originSslProtocols = originSslProtocols;
            return _resultValue;
        }
    }
}
