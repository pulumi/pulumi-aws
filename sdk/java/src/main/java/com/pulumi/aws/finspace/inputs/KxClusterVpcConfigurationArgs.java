// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.finspace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class KxClusterVpcConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final KxClusterVpcConfigurationArgs Empty = new KxClusterVpcConfigurationArgs();

    /**
     * IP address type for cluster network configuration parameters. The following type is available: IP_V4 - IP address version 4.
     * 
     */
    @Import(name="ipAddressType", required=true)
    private Output<String> ipAddressType;

    /**
     * @return IP address type for cluster network configuration parameters. The following type is available: IP_V4 - IP address version 4.
     * 
     */
    public Output<String> ipAddressType() {
        return this.ipAddressType;
    }

    /**
     * Unique identifier of the VPC security group applied to the VPC endpoint ENI for the cluster.
     * * ` subnet_ids  `- (Required) Identifier of the subnet that the Privatelink VPC endpoint uses to connect to the cluster.
     * 
     */
    @Import(name="securityGroupIds", required=true)
    private Output<List<String>> securityGroupIds;

    /**
     * @return Unique identifier of the VPC security group applied to the VPC endpoint ENI for the cluster.
     * * ` subnet_ids  `- (Required) Identifier of the subnet that the Privatelink VPC endpoint uses to connect to the cluster.
     * 
     */
    public Output<List<String>> securityGroupIds() {
        return this.securityGroupIds;
    }

    @Import(name="subnetIds", required=true)
    private Output<List<String>> subnetIds;

    public Output<List<String>> subnetIds() {
        return this.subnetIds;
    }

    /**
     * Identifier of the VPC endpoint
     * 
     */
    @Import(name="vpcId", required=true)
    private Output<String> vpcId;

    /**
     * @return Identifier of the VPC endpoint
     * 
     */
    public Output<String> vpcId() {
        return this.vpcId;
    }

    private KxClusterVpcConfigurationArgs() {}

    private KxClusterVpcConfigurationArgs(KxClusterVpcConfigurationArgs $) {
        this.ipAddressType = $.ipAddressType;
        this.securityGroupIds = $.securityGroupIds;
        this.subnetIds = $.subnetIds;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KxClusterVpcConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KxClusterVpcConfigurationArgs $;

        public Builder() {
            $ = new KxClusterVpcConfigurationArgs();
        }

        public Builder(KxClusterVpcConfigurationArgs defaults) {
            $ = new KxClusterVpcConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ipAddressType IP address type for cluster network configuration parameters. The following type is available: IP_V4 - IP address version 4.
         * 
         * @return builder
         * 
         */
        public Builder ipAddressType(Output<String> ipAddressType) {
            $.ipAddressType = ipAddressType;
            return this;
        }

        /**
         * @param ipAddressType IP address type for cluster network configuration parameters. The following type is available: IP_V4 - IP address version 4.
         * 
         * @return builder
         * 
         */
        public Builder ipAddressType(String ipAddressType) {
            return ipAddressType(Output.of(ipAddressType));
        }

        /**
         * @param securityGroupIds Unique identifier of the VPC security group applied to the VPC endpoint ENI for the cluster.
         * * ` subnet_ids  `- (Required) Identifier of the subnet that the Privatelink VPC endpoint uses to connect to the cluster.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(Output<List<String>> securityGroupIds) {
            $.securityGroupIds = securityGroupIds;
            return this;
        }

        /**
         * @param securityGroupIds Unique identifier of the VPC security group applied to the VPC endpoint ENI for the cluster.
         * * ` subnet_ids  `- (Required) Identifier of the subnet that the Privatelink VPC endpoint uses to connect to the cluster.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(List<String> securityGroupIds) {
            return securityGroupIds(Output.of(securityGroupIds));
        }

        /**
         * @param securityGroupIds Unique identifier of the VPC security group applied to the VPC endpoint ENI for the cluster.
         * * ` subnet_ids  `- (Required) Identifier of the subnet that the Privatelink VPC endpoint uses to connect to the cluster.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }

        public Builder subnetIds(Output<List<String>> subnetIds) {
            $.subnetIds = subnetIds;
            return this;
        }

        public Builder subnetIds(List<String> subnetIds) {
            return subnetIds(Output.of(subnetIds));
        }

        public Builder subnetIds(String... subnetIds) {
            return subnetIds(List.of(subnetIds));
        }

        /**
         * @param vpcId Identifier of the VPC endpoint
         * 
         * @return builder
         * 
         */
        public Builder vpcId(Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId Identifier of the VPC endpoint
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        public KxClusterVpcConfigurationArgs build() {
            $.ipAddressType = Objects.requireNonNull($.ipAddressType, "expected parameter 'ipAddressType' to be non-null");
            $.securityGroupIds = Objects.requireNonNull($.securityGroupIds, "expected parameter 'securityGroupIds' to be non-null");
            $.subnetIds = Objects.requireNonNull($.subnetIds, "expected parameter 'subnetIds' to be non-null");
            $.vpcId = Objects.requireNonNull($.vpcId, "expected parameter 'vpcId' to be non-null");
            return $;
        }
    }

}
