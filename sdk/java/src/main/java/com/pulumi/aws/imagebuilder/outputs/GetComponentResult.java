// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.imagebuilder.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetComponentResult {
    private String arn;
    /**
     * @return Change description of the component.
     * 
     */
    private String changeDescription;
    /**
     * @return Data of the component.
     * 
     */
    private String data;
    /**
     * @return Date the component was created.
     * 
     */
    private String dateCreated;
    /**
     * @return Description of the component.
     * 
     */
    private String description;
    /**
     * @return Encryption status of the component.
     * 
     */
    private Boolean encrypted;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return ARN of the Key Management Service (KMS) Key used to encrypt the component.
     * 
     */
    private String kmsKeyId;
    /**
     * @return Name of the component.
     * 
     */
    private String name;
    /**
     * @return Owner of the component.
     * 
     */
    private String owner;
    /**
     * @return Platform of the component.
     * 
     */
    private String platform;
    /**
     * @return Operating Systems (OSes) supported by the component.
     * 
     */
    private List<String> supportedOsVersions;
    /**
     * @return Key-value map of resource tags for the component.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return Type of the component.
     * 
     */
    private String type;
    /**
     * @return Version of the component.
     * 
     */
    private String version;

    private GetComponentResult() {}
    public String arn() {
        return this.arn;
    }
    /**
     * @return Change description of the component.
     * 
     */
    public String changeDescription() {
        return this.changeDescription;
    }
    /**
     * @return Data of the component.
     * 
     */
    public String data() {
        return this.data;
    }
    /**
     * @return Date the component was created.
     * 
     */
    public String dateCreated() {
        return this.dateCreated;
    }
    /**
     * @return Description of the component.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Encryption status of the component.
     * 
     */
    public Boolean encrypted() {
        return this.encrypted;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return ARN of the Key Management Service (KMS) Key used to encrypt the component.
     * 
     */
    public String kmsKeyId() {
        return this.kmsKeyId;
    }
    /**
     * @return Name of the component.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Owner of the component.
     * 
     */
    public String owner() {
        return this.owner;
    }
    /**
     * @return Platform of the component.
     * 
     */
    public String platform() {
        return this.platform;
    }
    /**
     * @return Operating Systems (OSes) supported by the component.
     * 
     */
    public List<String> supportedOsVersions() {
        return this.supportedOsVersions;
    }
    /**
     * @return Key-value map of resource tags for the component.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return Type of the component.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Version of the component.
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetComponentResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private String changeDescription;
        private String data;
        private String dateCreated;
        private String description;
        private Boolean encrypted;
        private String id;
        private String kmsKeyId;
        private String name;
        private String owner;
        private String platform;
        private List<String> supportedOsVersions;
        private Map<String,String> tags;
        private String type;
        private String version;
        public Builder() {}
        public Builder(GetComponentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.changeDescription = defaults.changeDescription;
    	      this.data = defaults.data;
    	      this.dateCreated = defaults.dateCreated;
    	      this.description = defaults.description;
    	      this.encrypted = defaults.encrypted;
    	      this.id = defaults.id;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.name = defaults.name;
    	      this.owner = defaults.owner;
    	      this.platform = defaults.platform;
    	      this.supportedOsVersions = defaults.supportedOsVersions;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder changeDescription(String changeDescription) {
            this.changeDescription = Objects.requireNonNull(changeDescription);
            return this;
        }
        @CustomType.Setter
        public Builder data(String data) {
            this.data = Objects.requireNonNull(data);
            return this;
        }
        @CustomType.Setter
        public Builder dateCreated(String dateCreated) {
            this.dateCreated = Objects.requireNonNull(dateCreated);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder encrypted(Boolean encrypted) {
            this.encrypted = Objects.requireNonNull(encrypted);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyId(String kmsKeyId) {
            this.kmsKeyId = Objects.requireNonNull(kmsKeyId);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder owner(String owner) {
            this.owner = Objects.requireNonNull(owner);
            return this;
        }
        @CustomType.Setter
        public Builder platform(String platform) {
            this.platform = Objects.requireNonNull(platform);
            return this;
        }
        @CustomType.Setter
        public Builder supportedOsVersions(List<String> supportedOsVersions) {
            this.supportedOsVersions = Objects.requireNonNull(supportedOsVersions);
            return this;
        }
        public Builder supportedOsVersions(String... supportedOsVersions) {
            return supportedOsVersions(List.of(supportedOsVersions));
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }
        public GetComponentResult build() {
            final var o = new GetComponentResult();
            o.arn = arn;
            o.changeDescription = changeDescription;
            o.data = data;
            o.dateCreated = dateCreated;
            o.description = description;
            o.encrypted = encrypted;
            o.id = id;
            o.kmsKeyId = kmsKeyId;
            o.name = name;
            o.owner = owner;
            o.platform = platform;
            o.supportedOsVersions = supportedOsVersions;
            o.tags = tags;
            o.type = type;
            o.version = version;
            return o;
        }
    }
}
