// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.datazone.inputs;

import com.pulumi.aws.datazone.inputs.AssetTypeFormsInputArgs;
import com.pulumi.aws.datazone.inputs.AssetTypeTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AssetTypeState extends com.pulumi.resources.ResourceArgs {

    public static final AssetTypeState Empty = new AssetTypeState();

    /**
     * The timestamp when the custom asset type was created.
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return The timestamp when the custom asset type was created.
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * The user who created the custom asset type.
     * 
     */
    @Import(name="createdBy")
    private @Nullable Output<String> createdBy;

    /**
     * @return The user who created the custom asset type.
     * 
     */
    public Optional<Output<String>> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }

    /**
     * The description of the custom asset type.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the custom asset type.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The unique identifier of the Amazon DataZone domain where the custom asset type is being created.
     * 
     */
    @Import(name="domainIdentifier")
    private @Nullable Output<String> domainIdentifier;

    /**
     * @return The unique identifier of the Amazon DataZone domain where the custom asset type is being created.
     * 
     */
    public Optional<Output<String>> domainIdentifier() {
        return Optional.ofNullable(this.domainIdentifier);
    }

    /**
     * The metadata forms that are to be attached to the custom asset type.
     * 
     */
    @Import(name="formsInputs")
    private @Nullable Output<List<AssetTypeFormsInputArgs>> formsInputs;

    /**
     * @return The metadata forms that are to be attached to the custom asset type.
     * 
     */
    public Optional<Output<List<AssetTypeFormsInputArgs>>> formsInputs() {
        return Optional.ofNullable(this.formsInputs);
    }

    /**
     * The name of the custom asset type.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the custom asset type.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The unique identifier of the Amazon DataZone project that owns the custom asset type.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="owningProjectIdentifier")
    private @Nullable Output<String> owningProjectIdentifier;

    /**
     * @return The unique identifier of the Amazon DataZone project that owns the custom asset type.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<String>> owningProjectIdentifier() {
        return Optional.ofNullable(this.owningProjectIdentifier);
    }

    /**
     * The revision of the asset type.
     * 
     */
    @Import(name="revision")
    private @Nullable Output<String> revision;

    /**
     * @return The revision of the asset type.
     * 
     */
    public Optional<Output<String>> revision() {
        return Optional.ofNullable(this.revision);
    }

    @Import(name="timeouts")
    private @Nullable Output<AssetTypeTimeoutsArgs> timeouts;

    public Optional<Output<AssetTypeTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private AssetTypeState() {}

    private AssetTypeState(AssetTypeState $) {
        this.createdAt = $.createdAt;
        this.createdBy = $.createdBy;
        this.description = $.description;
        this.domainIdentifier = $.domainIdentifier;
        this.formsInputs = $.formsInputs;
        this.name = $.name;
        this.owningProjectIdentifier = $.owningProjectIdentifier;
        this.revision = $.revision;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AssetTypeState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AssetTypeState $;

        public Builder() {
            $ = new AssetTypeState();
        }

        public Builder(AssetTypeState defaults) {
            $ = new AssetTypeState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createdAt The timestamp when the custom asset type was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt The timestamp when the custom asset type was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param createdBy The user who created the custom asset type.
         * 
         * @return builder
         * 
         */
        public Builder createdBy(@Nullable Output<String> createdBy) {
            $.createdBy = createdBy;
            return this;
        }

        /**
         * @param createdBy The user who created the custom asset type.
         * 
         * @return builder
         * 
         */
        public Builder createdBy(String createdBy) {
            return createdBy(Output.of(createdBy));
        }

        /**
         * @param description The description of the custom asset type.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the custom asset type.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param domainIdentifier The unique identifier of the Amazon DataZone domain where the custom asset type is being created.
         * 
         * @return builder
         * 
         */
        public Builder domainIdentifier(@Nullable Output<String> domainIdentifier) {
            $.domainIdentifier = domainIdentifier;
            return this;
        }

        /**
         * @param domainIdentifier The unique identifier of the Amazon DataZone domain where the custom asset type is being created.
         * 
         * @return builder
         * 
         */
        public Builder domainIdentifier(String domainIdentifier) {
            return domainIdentifier(Output.of(domainIdentifier));
        }

        /**
         * @param formsInputs The metadata forms that are to be attached to the custom asset type.
         * 
         * @return builder
         * 
         */
        public Builder formsInputs(@Nullable Output<List<AssetTypeFormsInputArgs>> formsInputs) {
            $.formsInputs = formsInputs;
            return this;
        }

        /**
         * @param formsInputs The metadata forms that are to be attached to the custom asset type.
         * 
         * @return builder
         * 
         */
        public Builder formsInputs(List<AssetTypeFormsInputArgs> formsInputs) {
            return formsInputs(Output.of(formsInputs));
        }

        /**
         * @param formsInputs The metadata forms that are to be attached to the custom asset type.
         * 
         * @return builder
         * 
         */
        public Builder formsInputs(AssetTypeFormsInputArgs... formsInputs) {
            return formsInputs(List.of(formsInputs));
        }

        /**
         * @param name The name of the custom asset type.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the custom asset type.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param owningProjectIdentifier The unique identifier of the Amazon DataZone project that owns the custom asset type.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder owningProjectIdentifier(@Nullable Output<String> owningProjectIdentifier) {
            $.owningProjectIdentifier = owningProjectIdentifier;
            return this;
        }

        /**
         * @param owningProjectIdentifier The unique identifier of the Amazon DataZone project that owns the custom asset type.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder owningProjectIdentifier(String owningProjectIdentifier) {
            return owningProjectIdentifier(Output.of(owningProjectIdentifier));
        }

        /**
         * @param revision The revision of the asset type.
         * 
         * @return builder
         * 
         */
        public Builder revision(@Nullable Output<String> revision) {
            $.revision = revision;
            return this;
        }

        /**
         * @param revision The revision of the asset type.
         * 
         * @return builder
         * 
         */
        public Builder revision(String revision) {
            return revision(Output.of(revision));
        }

        public Builder timeouts(@Nullable Output<AssetTypeTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(AssetTypeTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public AssetTypeState build() {
            return $;
        }
    }

}
