// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.inputs;

import com.pulumi.aws.inputs.GetAvailabilityZonesFilter;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAvailabilityZonesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAvailabilityZonesPlainArgs Empty = new GetAvailabilityZonesPlainArgs();

    @Import(name="allAvailabilityZones")
    private @Nullable Boolean allAvailabilityZones;

    public Optional<Boolean> allAvailabilityZones() {
        return Optional.ofNullable(this.allAvailabilityZones);
    }

    @Import(name="excludeNames")
    private @Nullable List<String> excludeNames;

    public Optional<List<String>> excludeNames() {
        return Optional.ofNullable(this.excludeNames);
    }

    @Import(name="excludeZoneIds")
    private @Nullable List<String> excludeZoneIds;

    public Optional<List<String>> excludeZoneIds() {
        return Optional.ofNullable(this.excludeZoneIds);
    }

    @Import(name="filters")
    private @Nullable List<GetAvailabilityZonesFilter> filters;

    public Optional<List<GetAvailabilityZonesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    @Import(name="state")
    private @Nullable String state;

    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    private GetAvailabilityZonesPlainArgs() {}

    private GetAvailabilityZonesPlainArgs(GetAvailabilityZonesPlainArgs $) {
        this.allAvailabilityZones = $.allAvailabilityZones;
        this.excludeNames = $.excludeNames;
        this.excludeZoneIds = $.excludeZoneIds;
        this.filters = $.filters;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAvailabilityZonesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAvailabilityZonesPlainArgs $;

        public Builder() {
            $ = new GetAvailabilityZonesPlainArgs();
        }

        public Builder(GetAvailabilityZonesPlainArgs defaults) {
            $ = new GetAvailabilityZonesPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder allAvailabilityZones(@Nullable Boolean allAvailabilityZones) {
            $.allAvailabilityZones = allAvailabilityZones;
            return this;
        }

        public Builder excludeNames(@Nullable List<String> excludeNames) {
            $.excludeNames = excludeNames;
            return this;
        }

        public Builder excludeNames(String... excludeNames) {
            return excludeNames(List.of(excludeNames));
        }

        public Builder excludeZoneIds(@Nullable List<String> excludeZoneIds) {
            $.excludeZoneIds = excludeZoneIds;
            return this;
        }

        public Builder excludeZoneIds(String... excludeZoneIds) {
            return excludeZoneIds(List.of(excludeZoneIds));
        }

        public Builder filters(@Nullable List<GetAvailabilityZonesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetAvailabilityZonesFilter... filters) {
            return filters(List.of(filters));
        }

        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        public GetAvailabilityZonesPlainArgs build() {
            return $;
        }
    }

}
