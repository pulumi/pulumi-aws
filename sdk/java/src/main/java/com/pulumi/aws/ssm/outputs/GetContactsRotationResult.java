// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ssm.outputs;

import com.pulumi.aws.ssm.outputs.GetContactsRotationRecurrence;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetContactsRotationResult {
    private String arn;
    /**
     * @return The Amazon Resource Names (ARNs) of the contacts to add to the rotation. The order in which you list the contacts is their shift order in the rotation schedule.
     * 
     */
    private List<String> contactIds;
    private String id;
    /**
     * @return The name for the rotation.
     * 
     */
    private String name;
    /**
     * @return Information about when an on-call rotation is in effect and how long the rotation period lasts.
     * 
     */
    private List<GetContactsRotationRecurrence> recurrences;
    /**
     * @return The date and time, in RFC 3339 format, that the rotation goes into effect.
     * 
     */
    private String startTime;
    /**
     * @return A map of tags to assign to the resource.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return The time zone to base the rotation’s activity on in Internet Assigned Numbers Authority (IANA) format.
     * 
     */
    private String timeZoneId;

    private GetContactsRotationResult() {}
    public String arn() {
        return this.arn;
    }
    /**
     * @return The Amazon Resource Names (ARNs) of the contacts to add to the rotation. The order in which you list the contacts is their shift order in the rotation schedule.
     * 
     */
    public List<String> contactIds() {
        return this.contactIds;
    }
    public String id() {
        return this.id;
    }
    /**
     * @return The name for the rotation.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Information about when an on-call rotation is in effect and how long the rotation period lasts.
     * 
     */
    public List<GetContactsRotationRecurrence> recurrences() {
        return this.recurrences;
    }
    /**
     * @return The date and time, in RFC 3339 format, that the rotation goes into effect.
     * 
     */
    public String startTime() {
        return this.startTime;
    }
    /**
     * @return A map of tags to assign to the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return The time zone to base the rotation’s activity on in Internet Assigned Numbers Authority (IANA) format.
     * 
     */
    public String timeZoneId() {
        return this.timeZoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetContactsRotationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private List<String> contactIds;
        private String id;
        private String name;
        private List<GetContactsRotationRecurrence> recurrences;
        private String startTime;
        private Map<String,String> tags;
        private String timeZoneId;
        public Builder() {}
        public Builder(GetContactsRotationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.contactIds = defaults.contactIds;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.recurrences = defaults.recurrences;
    	      this.startTime = defaults.startTime;
    	      this.tags = defaults.tags;
    	      this.timeZoneId = defaults.timeZoneId;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            if (arn == null) {
              throw new MissingRequiredPropertyException("GetContactsRotationResult", "arn");
            }
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder contactIds(List<String> contactIds) {
            if (contactIds == null) {
              throw new MissingRequiredPropertyException("GetContactsRotationResult", "contactIds");
            }
            this.contactIds = contactIds;
            return this;
        }
        public Builder contactIds(String... contactIds) {
            return contactIds(List.of(contactIds));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetContactsRotationResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetContactsRotationResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder recurrences(List<GetContactsRotationRecurrence> recurrences) {
            if (recurrences == null) {
              throw new MissingRequiredPropertyException("GetContactsRotationResult", "recurrences");
            }
            this.recurrences = recurrences;
            return this;
        }
        public Builder recurrences(GetContactsRotationRecurrence... recurrences) {
            return recurrences(List.of(recurrences));
        }
        @CustomType.Setter
        public Builder startTime(String startTime) {
            if (startTime == null) {
              throw new MissingRequiredPropertyException("GetContactsRotationResult", "startTime");
            }
            this.startTime = startTime;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetContactsRotationResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder timeZoneId(String timeZoneId) {
            if (timeZoneId == null) {
              throw new MissingRequiredPropertyException("GetContactsRotationResult", "timeZoneId");
            }
            this.timeZoneId = timeZoneId;
            return this;
        }
        public GetContactsRotationResult build() {
            final var _resultValue = new GetContactsRotationResult();
            _resultValue.arn = arn;
            _resultValue.contactIds = contactIds;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.recurrences = recurrences;
            _resultValue.startTime = startTime;
            _resultValue.tags = tags;
            _resultValue.timeZoneId = timeZoneId;
            return _resultValue;
        }
    }
}
