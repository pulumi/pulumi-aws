// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.opensearch.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class OutboundConnectionLocalDomainInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final OutboundConnectionLocalDomainInfoArgs Empty = new OutboundConnectionLocalDomainInfoArgs();

    /**
     * The name of the local domain.
     * 
     */
    @Import(name="domainName", required=true)
    private Output<String> domainName;

    /**
     * @return The name of the local domain.
     * 
     */
    public Output<String> domainName() {
        return this.domainName;
    }

    /**
     * The Account ID of the owner of the local domain.
     * 
     */
    @Import(name="ownerId", required=true)
    private Output<String> ownerId;

    /**
     * @return The Account ID of the owner of the local domain.
     * 
     */
    public Output<String> ownerId() {
        return this.ownerId;
    }

    /**
     * The region of the local domain.
     * 
     */
    @Import(name="region", required=true)
    private Output<String> region;

    /**
     * @return The region of the local domain.
     * 
     */
    public Output<String> region() {
        return this.region;
    }

    private OutboundConnectionLocalDomainInfoArgs() {}

    private OutboundConnectionLocalDomainInfoArgs(OutboundConnectionLocalDomainInfoArgs $) {
        this.domainName = $.domainName;
        this.ownerId = $.ownerId;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OutboundConnectionLocalDomainInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OutboundConnectionLocalDomainInfoArgs $;

        public Builder() {
            $ = new OutboundConnectionLocalDomainInfoArgs();
        }

        public Builder(OutboundConnectionLocalDomainInfoArgs defaults) {
            $ = new OutboundConnectionLocalDomainInfoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param domainName The name of the local domain.
         * 
         * @return builder
         * 
         */
        public Builder domainName(Output<String> domainName) {
            $.domainName = domainName;
            return this;
        }

        /**
         * @param domainName The name of the local domain.
         * 
         * @return builder
         * 
         */
        public Builder domainName(String domainName) {
            return domainName(Output.of(domainName));
        }

        /**
         * @param ownerId The Account ID of the owner of the local domain.
         * 
         * @return builder
         * 
         */
        public Builder ownerId(Output<String> ownerId) {
            $.ownerId = ownerId;
            return this;
        }

        /**
         * @param ownerId The Account ID of the owner of the local domain.
         * 
         * @return builder
         * 
         */
        public Builder ownerId(String ownerId) {
            return ownerId(Output.of(ownerId));
        }

        /**
         * @param region The region of the local domain.
         * 
         * @return builder
         * 
         */
        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region of the local domain.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public OutboundConnectionLocalDomainInfoArgs build() {
            if ($.domainName == null) {
                throw new MissingRequiredPropertyException("OutboundConnectionLocalDomainInfoArgs", "domainName");
            }
            if ($.ownerId == null) {
                throw new MissingRequiredPropertyException("OutboundConnectionLocalDomainInfoArgs", "ownerId");
            }
            if ($.region == null) {
                throw new MissingRequiredPropertyException("OutboundConnectionLocalDomainInfoArgs", "region");
            }
            return $;
        }
    }

}
