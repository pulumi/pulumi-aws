// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ssm.outputs;

import com.pulumi.aws.ssm.outputs.ContactsRotationRecurrenceShiftCoverageCoverageTime;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class ContactsRotationRecurrenceShiftCoverage {
    /**
     * @return (Required) Information about when an on-call shift begins and ends. See Coverage Times for more details.
     * 
     */
    private @Nullable List<ContactsRotationRecurrenceShiftCoverageCoverageTime> coverageTimes;
    private String mapBlockKey;

    private ContactsRotationRecurrenceShiftCoverage() {}
    /**
     * @return (Required) Information about when an on-call shift begins and ends. See Coverage Times for more details.
     * 
     */
    public List<ContactsRotationRecurrenceShiftCoverageCoverageTime> coverageTimes() {
        return this.coverageTimes == null ? List.of() : this.coverageTimes;
    }
    public String mapBlockKey() {
        return this.mapBlockKey;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContactsRotationRecurrenceShiftCoverage defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<ContactsRotationRecurrenceShiftCoverageCoverageTime> coverageTimes;
        private String mapBlockKey;
        public Builder() {}
        public Builder(ContactsRotationRecurrenceShiftCoverage defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.coverageTimes = defaults.coverageTimes;
    	      this.mapBlockKey = defaults.mapBlockKey;
        }

        @CustomType.Setter
        public Builder coverageTimes(@Nullable List<ContactsRotationRecurrenceShiftCoverageCoverageTime> coverageTimes) {

            this.coverageTimes = coverageTimes;
            return this;
        }
        public Builder coverageTimes(ContactsRotationRecurrenceShiftCoverageCoverageTime... coverageTimes) {
            return coverageTimes(List.of(coverageTimes));
        }
        @CustomType.Setter
        public Builder mapBlockKey(String mapBlockKey) {
            if (mapBlockKey == null) {
              throw new MissingRequiredPropertyException("ContactsRotationRecurrenceShiftCoverage", "mapBlockKey");
            }
            this.mapBlockKey = mapBlockKey;
            return this;
        }
        public ContactsRotationRecurrenceShiftCoverage build() {
            final var _resultValue = new ContactsRotationRecurrenceShiftCoverage();
            _resultValue.coverageTimes = coverageTimes;
            _resultValue.mapBlockKey = mapBlockKey;
            return _resultValue;
        }
    }
}
