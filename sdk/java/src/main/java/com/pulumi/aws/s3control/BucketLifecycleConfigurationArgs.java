// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3control;

import com.pulumi.aws.s3control.inputs.BucketLifecycleConfigurationRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class BucketLifecycleConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketLifecycleConfigurationArgs Empty = new BucketLifecycleConfigurationArgs();

    /**
     * Amazon Resource Name (ARN) of the bucket.
     * 
     */
    @Import(name="bucket", required=true)
    private Output<String> bucket;

    /**
     * @return Amazon Resource Name (ARN) of the bucket.
     * 
     */
    public Output<String> bucket() {
        return this.bucket;
    }

    /**
     * Configuration block(s) containing lifecycle rules for the bucket.
     * 
     */
    @Import(name="rules", required=true)
    private Output<List<BucketLifecycleConfigurationRuleArgs>> rules;

    /**
     * @return Configuration block(s) containing lifecycle rules for the bucket.
     * 
     */
    public Output<List<BucketLifecycleConfigurationRuleArgs>> rules() {
        return this.rules;
    }

    private BucketLifecycleConfigurationArgs() {}

    private BucketLifecycleConfigurationArgs(BucketLifecycleConfigurationArgs $) {
        this.bucket = $.bucket;
        this.rules = $.rules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketLifecycleConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketLifecycleConfigurationArgs $;

        public Builder() {
            $ = new BucketLifecycleConfigurationArgs();
        }

        public Builder(BucketLifecycleConfigurationArgs defaults) {
            $ = new BucketLifecycleConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucket Amazon Resource Name (ARN) of the bucket.
         * 
         * @return builder
         * 
         */
        public Builder bucket(Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param bucket Amazon Resource Name (ARN) of the bucket.
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        /**
         * @param rules Configuration block(s) containing lifecycle rules for the bucket.
         * 
         * @return builder
         * 
         */
        public Builder rules(Output<List<BucketLifecycleConfigurationRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules Configuration block(s) containing lifecycle rules for the bucket.
         * 
         * @return builder
         * 
         */
        public Builder rules(List<BucketLifecycleConfigurationRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules Configuration block(s) containing lifecycle rules for the bucket.
         * 
         * @return builder
         * 
         */
        public Builder rules(BucketLifecycleConfigurationRuleArgs... rules) {
            return rules(List.of(rules));
        }

        public BucketLifecycleConfigurationArgs build() {
            if ($.bucket == null) {
                throw new MissingRequiredPropertyException("BucketLifecycleConfigurationArgs", "bucket");
            }
            if ($.rules == null) {
                throw new MissingRequiredPropertyException("BucketLifecycleConfigurationArgs", "rules");
            }
            return $;
        }
    }

}
