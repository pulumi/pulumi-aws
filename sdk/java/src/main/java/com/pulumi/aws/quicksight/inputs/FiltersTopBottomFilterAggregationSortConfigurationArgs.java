// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.AggregationFunctionArgs;
import com.pulumi.aws.quicksight.inputs.ColumnArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class FiltersTopBottomFilterAggregationSortConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final FiltersTopBottomFilterAggregationSortConfigurationArgs Empty = new FiltersTopBottomFilterAggregationSortConfigurationArgs();

    @Import(name="aggregationFunction", required=true)
    private Output<AggregationFunctionArgs> aggregationFunction;

    public Output<AggregationFunctionArgs> aggregationFunction() {
        return this.aggregationFunction;
    }

    @Import(name="column", required=true)
    private Output<ColumnArgs> column;

    public Output<ColumnArgs> column() {
        return this.column;
    }

    @Import(name="sortDirection", required=true)
    private Output<String> sortDirection;

    public Output<String> sortDirection() {
        return this.sortDirection;
    }

    private FiltersTopBottomFilterAggregationSortConfigurationArgs() {}

    private FiltersTopBottomFilterAggregationSortConfigurationArgs(FiltersTopBottomFilterAggregationSortConfigurationArgs $) {
        this.aggregationFunction = $.aggregationFunction;
        this.column = $.column;
        this.sortDirection = $.sortDirection;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FiltersTopBottomFilterAggregationSortConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FiltersTopBottomFilterAggregationSortConfigurationArgs $;

        public Builder() {
            $ = new FiltersTopBottomFilterAggregationSortConfigurationArgs();
        }

        public Builder(FiltersTopBottomFilterAggregationSortConfigurationArgs defaults) {
            $ = new FiltersTopBottomFilterAggregationSortConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder aggregationFunction(Output<AggregationFunctionArgs> aggregationFunction) {
            $.aggregationFunction = aggregationFunction;
            return this;
        }

        public Builder aggregationFunction(AggregationFunctionArgs aggregationFunction) {
            return aggregationFunction(Output.of(aggregationFunction));
        }

        public Builder column(Output<ColumnArgs> column) {
            $.column = column;
            return this;
        }

        public Builder column(ColumnArgs column) {
            return column(Output.of(column));
        }

        public Builder sortDirection(Output<String> sortDirection) {
            $.sortDirection = sortDirection;
            return this;
        }

        public Builder sortDirection(String sortDirection) {
            return sortDirection(Output.of(sortDirection));
        }

        public FiltersTopBottomFilterAggregationSortConfigurationArgs build() {
            if ($.aggregationFunction == null) {
                throw new MissingRequiredPropertyException("FiltersTopBottomFilterAggregationSortConfigurationArgs", "aggregationFunction");
            }
            if ($.column == null) {
                throw new MissingRequiredPropertyException("FiltersTopBottomFilterAggregationSortConfigurationArgs", "column");
            }
            if ($.sortDirection == null) {
                throw new MissingRequiredPropertyException("FiltersTopBottomFilterAggregationSortConfigurationArgs", "sortDirection");
            }
            return $;
        }
    }

}
