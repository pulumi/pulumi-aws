// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.autoscaling.outputs;

import com.pulumi.aws.autoscaling.outputs.GetGroupLaunchTemplate;
import com.pulumi.aws.autoscaling.outputs.GetGroupMixedInstancesPolicy;
import com.pulumi.aws.autoscaling.outputs.GetGroupTag;
import com.pulumi.aws.autoscaling.outputs.GetGroupTrafficSource;
import com.pulumi.aws.autoscaling.outputs.GetGroupWarmPool;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetGroupResult {
    /**
     * @return ARN of the Auto Scaling group.
     * 
     */
    private @Nullable String arn;
    /**
     * @return One or more Availability Zones for the group.
     * 
     */
    private @Nullable List<String> availabilityZones;
    private @Nullable Integer defaultCooldown;
    /**
     * @return Desired size of the group.
     * 
     */
    private @Nullable Integer desiredCapacity;
    /**
     * @return The unit of measurement for the value returned for `desired_capacity`.
     * 
     */
    private @Nullable String desiredCapacityType;
    /**
     * @return List of metrics enabled for collection.
     * 
     */
    private @Nullable List<String> enabledMetrics;
    /**
     * @return The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance that has come into service.
     * 
     */
    private @Nullable Integer healthCheckGracePeriod;
    /**
     * @return Service to use for the health checks. The valid values are EC2 and ELB.
     * 
     */
    private @Nullable String healthCheckType;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return The name of the associated launch configuration.
     * 
     */
    private @Nullable String launchConfiguration;
    /**
     * @return List of launch templates along with the overrides.
     * 
     */
    private @Nullable List<GetGroupLaunchTemplate> launchTemplates;
    /**
     * @return One or more load balancers associated with the group.
     * 
     */
    private @Nullable List<String> loadBalancers;
    /**
     * @return Maximum amount of time, in seconds, that an instance can be in service.
     * 
     */
    private @Nullable Integer maxInstanceLifetime;
    /**
     * @return Maximum size of the group.
     * 
     */
    private @Nullable Integer maxSize;
    /**
     * @return Minimum number of instances to maintain in the warm pool.
     * 
     */
    private @Nullable Integer minSize;
    /**
     * @return List of mixed instances policy objects for the group.
     * 
     */
    private @Nullable List<GetGroupMixedInstancesPolicy> mixedInstancesPolicies;
    /**
     * @return Name of the Auto Scaling Group.
     * 
     */
    private String name;
    private @Nullable Boolean newInstancesProtectedFromScaleIn;
    /**
     * @return Name of the placement group into which to launch your instances, if any. For more information, see Placement Groups (http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html) in the Amazon Elastic Compute Cloud User Guide.
     * 
     */
    private @Nullable String placementGroup;
    /**
     * @return Predicted capacity of the group.
     * 
     */
    private @Nullable Integer predictedCapacity;
    /**
     * @return ARN of the service-linked role that the Auto Scaling group uses to call other AWS services on your behalf.
     * 
     */
    private @Nullable String serviceLinkedRoleArn;
    /**
     * @return Current state of the group when DeleteAutoScalingGroup is in progress.
     * 
     */
    private @Nullable String status;
    /**
     * @return List of processes suspended processes for the Auto Scaling Group.
     * 
     */
    private @Nullable List<String> suspendedProcesses;
    /**
     * @return List of tags for the group.
     * 
     */
    private @Nullable List<GetGroupTag> tags;
    /**
     * @return ARNs of the target groups for your load balancer.
     * 
     */
    private @Nullable List<String> targetGroupArns;
    /**
     * @return The termination policies for the group.
     * 
     */
    private @Nullable List<String> terminationPolicies;
    /**
     * @return Traffic sources.
     * 
     */
    private @Nullable List<GetGroupTrafficSource> trafficSources;
    /**
     * @return VPC ID for the group.
     * 
     */
    private @Nullable String vpcZoneIdentifier;
    /**
     * @return Current size of the warm pool.
     * 
     */
    private @Nullable Integer warmPoolSize;
    /**
     * @return List of warm pool configuration objects.
     * 
     */
    private @Nullable List<GetGroupWarmPool> warmPools;

    private GetGroupResult() {}
    /**
     * @return ARN of the Auto Scaling group.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return One or more Availability Zones for the group.
     * 
     */
    public List<String> availabilityZones() {
        return this.availabilityZones == null ? List.of() : this.availabilityZones;
    }
    public Optional<Integer> defaultCooldown() {
        return Optional.ofNullable(this.defaultCooldown);
    }
    /**
     * @return Desired size of the group.
     * 
     */
    public Optional<Integer> desiredCapacity() {
        return Optional.ofNullable(this.desiredCapacity);
    }
    /**
     * @return The unit of measurement for the value returned for `desired_capacity`.
     * 
     */
    public Optional<String> desiredCapacityType() {
        return Optional.ofNullable(this.desiredCapacityType);
    }
    /**
     * @return List of metrics enabled for collection.
     * 
     */
    public List<String> enabledMetrics() {
        return this.enabledMetrics == null ? List.of() : this.enabledMetrics;
    }
    /**
     * @return The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance that has come into service.
     * 
     */
    public Optional<Integer> healthCheckGracePeriod() {
        return Optional.ofNullable(this.healthCheckGracePeriod);
    }
    /**
     * @return Service to use for the health checks. The valid values are EC2 and ELB.
     * 
     */
    public Optional<String> healthCheckType() {
        return Optional.ofNullable(this.healthCheckType);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The name of the associated launch configuration.
     * 
     */
    public Optional<String> launchConfiguration() {
        return Optional.ofNullable(this.launchConfiguration);
    }
    /**
     * @return List of launch templates along with the overrides.
     * 
     */
    public List<GetGroupLaunchTemplate> launchTemplates() {
        return this.launchTemplates == null ? List.of() : this.launchTemplates;
    }
    /**
     * @return One or more load balancers associated with the group.
     * 
     */
    public List<String> loadBalancers() {
        return this.loadBalancers == null ? List.of() : this.loadBalancers;
    }
    /**
     * @return Maximum amount of time, in seconds, that an instance can be in service.
     * 
     */
    public Optional<Integer> maxInstanceLifetime() {
        return Optional.ofNullable(this.maxInstanceLifetime);
    }
    /**
     * @return Maximum size of the group.
     * 
     */
    public Optional<Integer> maxSize() {
        return Optional.ofNullable(this.maxSize);
    }
    /**
     * @return Minimum number of instances to maintain in the warm pool.
     * 
     */
    public Optional<Integer> minSize() {
        return Optional.ofNullable(this.minSize);
    }
    /**
     * @return List of mixed instances policy objects for the group.
     * 
     */
    public List<GetGroupMixedInstancesPolicy> mixedInstancesPolicies() {
        return this.mixedInstancesPolicies == null ? List.of() : this.mixedInstancesPolicies;
    }
    /**
     * @return Name of the Auto Scaling Group.
     * 
     */
    public String name() {
        return this.name;
    }
    public Optional<Boolean> newInstancesProtectedFromScaleIn() {
        return Optional.ofNullable(this.newInstancesProtectedFromScaleIn);
    }
    /**
     * @return Name of the placement group into which to launch your instances, if any. For more information, see Placement Groups (http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html) in the Amazon Elastic Compute Cloud User Guide.
     * 
     */
    public Optional<String> placementGroup() {
        return Optional.ofNullable(this.placementGroup);
    }
    /**
     * @return Predicted capacity of the group.
     * 
     */
    public Optional<Integer> predictedCapacity() {
        return Optional.ofNullable(this.predictedCapacity);
    }
    /**
     * @return ARN of the service-linked role that the Auto Scaling group uses to call other AWS services on your behalf.
     * 
     */
    public Optional<String> serviceLinkedRoleArn() {
        return Optional.ofNullable(this.serviceLinkedRoleArn);
    }
    /**
     * @return Current state of the group when DeleteAutoScalingGroup is in progress.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return List of processes suspended processes for the Auto Scaling Group.
     * 
     */
    public List<String> suspendedProcesses() {
        return this.suspendedProcesses == null ? List.of() : this.suspendedProcesses;
    }
    /**
     * @return List of tags for the group.
     * 
     */
    public List<GetGroupTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * @return ARNs of the target groups for your load balancer.
     * 
     */
    public List<String> targetGroupArns() {
        return this.targetGroupArns == null ? List.of() : this.targetGroupArns;
    }
    /**
     * @return The termination policies for the group.
     * 
     */
    public List<String> terminationPolicies() {
        return this.terminationPolicies == null ? List.of() : this.terminationPolicies;
    }
    /**
     * @return Traffic sources.
     * 
     */
    public List<GetGroupTrafficSource> trafficSources() {
        return this.trafficSources == null ? List.of() : this.trafficSources;
    }
    /**
     * @return VPC ID for the group.
     * 
     */
    public Optional<String> vpcZoneIdentifier() {
        return Optional.ofNullable(this.vpcZoneIdentifier);
    }
    /**
     * @return Current size of the warm pool.
     * 
     */
    public Optional<Integer> warmPoolSize() {
        return Optional.ofNullable(this.warmPoolSize);
    }
    /**
     * @return List of warm pool configuration objects.
     * 
     */
    public List<GetGroupWarmPool> warmPools() {
        return this.warmPools == null ? List.of() : this.warmPools;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGroupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable List<String> availabilityZones;
        private @Nullable Integer defaultCooldown;
        private @Nullable Integer desiredCapacity;
        private @Nullable String desiredCapacityType;
        private @Nullable List<String> enabledMetrics;
        private @Nullable Integer healthCheckGracePeriod;
        private @Nullable String healthCheckType;
        private @Nullable String id;
        private @Nullable String launchConfiguration;
        private @Nullable List<GetGroupLaunchTemplate> launchTemplates;
        private @Nullable List<String> loadBalancers;
        private @Nullable Integer maxInstanceLifetime;
        private @Nullable Integer maxSize;
        private @Nullable Integer minSize;
        private @Nullable List<GetGroupMixedInstancesPolicy> mixedInstancesPolicies;
        private String name;
        private @Nullable Boolean newInstancesProtectedFromScaleIn;
        private @Nullable String placementGroup;
        private @Nullable Integer predictedCapacity;
        private @Nullable String serviceLinkedRoleArn;
        private @Nullable String status;
        private @Nullable List<String> suspendedProcesses;
        private @Nullable List<GetGroupTag> tags;
        private @Nullable List<String> targetGroupArns;
        private @Nullable List<String> terminationPolicies;
        private @Nullable List<GetGroupTrafficSource> trafficSources;
        private @Nullable String vpcZoneIdentifier;
        private @Nullable Integer warmPoolSize;
        private @Nullable List<GetGroupWarmPool> warmPools;
        public Builder() {}
        public Builder(GetGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.availabilityZones = defaults.availabilityZones;
    	      this.defaultCooldown = defaults.defaultCooldown;
    	      this.desiredCapacity = defaults.desiredCapacity;
    	      this.desiredCapacityType = defaults.desiredCapacityType;
    	      this.enabledMetrics = defaults.enabledMetrics;
    	      this.healthCheckGracePeriod = defaults.healthCheckGracePeriod;
    	      this.healthCheckType = defaults.healthCheckType;
    	      this.id = defaults.id;
    	      this.launchConfiguration = defaults.launchConfiguration;
    	      this.launchTemplates = defaults.launchTemplates;
    	      this.loadBalancers = defaults.loadBalancers;
    	      this.maxInstanceLifetime = defaults.maxInstanceLifetime;
    	      this.maxSize = defaults.maxSize;
    	      this.minSize = defaults.minSize;
    	      this.mixedInstancesPolicies = defaults.mixedInstancesPolicies;
    	      this.name = defaults.name;
    	      this.newInstancesProtectedFromScaleIn = defaults.newInstancesProtectedFromScaleIn;
    	      this.placementGroup = defaults.placementGroup;
    	      this.predictedCapacity = defaults.predictedCapacity;
    	      this.serviceLinkedRoleArn = defaults.serviceLinkedRoleArn;
    	      this.status = defaults.status;
    	      this.suspendedProcesses = defaults.suspendedProcesses;
    	      this.tags = defaults.tags;
    	      this.targetGroupArns = defaults.targetGroupArns;
    	      this.terminationPolicies = defaults.terminationPolicies;
    	      this.trafficSources = defaults.trafficSources;
    	      this.vpcZoneIdentifier = defaults.vpcZoneIdentifier;
    	      this.warmPoolSize = defaults.warmPoolSize;
    	      this.warmPools = defaults.warmPools;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder availabilityZones(@Nullable List<String> availabilityZones) {
            this.availabilityZones = availabilityZones;
            return this;
        }
        public Builder availabilityZones(String... availabilityZones) {
            return availabilityZones(List.of(availabilityZones));
        }
        @CustomType.Setter
        public Builder defaultCooldown(@Nullable Integer defaultCooldown) {
            this.defaultCooldown = defaultCooldown;
            return this;
        }
        @CustomType.Setter
        public Builder desiredCapacity(@Nullable Integer desiredCapacity) {
            this.desiredCapacity = desiredCapacity;
            return this;
        }
        @CustomType.Setter
        public Builder desiredCapacityType(@Nullable String desiredCapacityType) {
            this.desiredCapacityType = desiredCapacityType;
            return this;
        }
        @CustomType.Setter
        public Builder enabledMetrics(@Nullable List<String> enabledMetrics) {
            this.enabledMetrics = enabledMetrics;
            return this;
        }
        public Builder enabledMetrics(String... enabledMetrics) {
            return enabledMetrics(List.of(enabledMetrics));
        }
        @CustomType.Setter
        public Builder healthCheckGracePeriod(@Nullable Integer healthCheckGracePeriod) {
            this.healthCheckGracePeriod = healthCheckGracePeriod;
            return this;
        }
        @CustomType.Setter
        public Builder healthCheckType(@Nullable String healthCheckType) {
            this.healthCheckType = healthCheckType;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder launchConfiguration(@Nullable String launchConfiguration) {
            this.launchConfiguration = launchConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder launchTemplates(@Nullable List<GetGroupLaunchTemplate> launchTemplates) {
            this.launchTemplates = launchTemplates;
            return this;
        }
        public Builder launchTemplates(GetGroupLaunchTemplate... launchTemplates) {
            return launchTemplates(List.of(launchTemplates));
        }
        @CustomType.Setter
        public Builder loadBalancers(@Nullable List<String> loadBalancers) {
            this.loadBalancers = loadBalancers;
            return this;
        }
        public Builder loadBalancers(String... loadBalancers) {
            return loadBalancers(List.of(loadBalancers));
        }
        @CustomType.Setter
        public Builder maxInstanceLifetime(@Nullable Integer maxInstanceLifetime) {
            this.maxInstanceLifetime = maxInstanceLifetime;
            return this;
        }
        @CustomType.Setter
        public Builder maxSize(@Nullable Integer maxSize) {
            this.maxSize = maxSize;
            return this;
        }
        @CustomType.Setter
        public Builder minSize(@Nullable Integer minSize) {
            this.minSize = minSize;
            return this;
        }
        @CustomType.Setter
        public Builder mixedInstancesPolicies(@Nullable List<GetGroupMixedInstancesPolicy> mixedInstancesPolicies) {
            this.mixedInstancesPolicies = mixedInstancesPolicies;
            return this;
        }
        public Builder mixedInstancesPolicies(GetGroupMixedInstancesPolicy... mixedInstancesPolicies) {
            return mixedInstancesPolicies(List.of(mixedInstancesPolicies));
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder newInstancesProtectedFromScaleIn(@Nullable Boolean newInstancesProtectedFromScaleIn) {
            this.newInstancesProtectedFromScaleIn = newInstancesProtectedFromScaleIn;
            return this;
        }
        @CustomType.Setter
        public Builder placementGroup(@Nullable String placementGroup) {
            this.placementGroup = placementGroup;
            return this;
        }
        @CustomType.Setter
        public Builder predictedCapacity(@Nullable Integer predictedCapacity) {
            this.predictedCapacity = predictedCapacity;
            return this;
        }
        @CustomType.Setter
        public Builder serviceLinkedRoleArn(@Nullable String serviceLinkedRoleArn) {
            this.serviceLinkedRoleArn = serviceLinkedRoleArn;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder suspendedProcesses(@Nullable List<String> suspendedProcesses) {
            this.suspendedProcesses = suspendedProcesses;
            return this;
        }
        public Builder suspendedProcesses(String... suspendedProcesses) {
            return suspendedProcesses(List.of(suspendedProcesses));
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<GetGroupTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(GetGroupTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder targetGroupArns(@Nullable List<String> targetGroupArns) {
            this.targetGroupArns = targetGroupArns;
            return this;
        }
        public Builder targetGroupArns(String... targetGroupArns) {
            return targetGroupArns(List.of(targetGroupArns));
        }
        @CustomType.Setter
        public Builder terminationPolicies(@Nullable List<String> terminationPolicies) {
            this.terminationPolicies = terminationPolicies;
            return this;
        }
        public Builder terminationPolicies(String... terminationPolicies) {
            return terminationPolicies(List.of(terminationPolicies));
        }
        @CustomType.Setter
        public Builder trafficSources(@Nullable List<GetGroupTrafficSource> trafficSources) {
            this.trafficSources = trafficSources;
            return this;
        }
        public Builder trafficSources(GetGroupTrafficSource... trafficSources) {
            return trafficSources(List.of(trafficSources));
        }
        @CustomType.Setter
        public Builder vpcZoneIdentifier(@Nullable String vpcZoneIdentifier) {
            this.vpcZoneIdentifier = vpcZoneIdentifier;
            return this;
        }
        @CustomType.Setter
        public Builder warmPoolSize(@Nullable Integer warmPoolSize) {
            this.warmPoolSize = warmPoolSize;
            return this;
        }
        @CustomType.Setter
        public Builder warmPools(@Nullable List<GetGroupWarmPool> warmPools) {
            this.warmPools = warmPools;
            return this;
        }
        public Builder warmPools(GetGroupWarmPool... warmPools) {
            return warmPools(List.of(warmPools));
        }
        public GetGroupResult build() {
            final var o = new GetGroupResult();
            o.arn = arn;
            o.availabilityZones = availabilityZones;
            o.defaultCooldown = defaultCooldown;
            o.desiredCapacity = desiredCapacity;
            o.desiredCapacityType = desiredCapacityType;
            o.enabledMetrics = enabledMetrics;
            o.healthCheckGracePeriod = healthCheckGracePeriod;
            o.healthCheckType = healthCheckType;
            o.id = id;
            o.launchConfiguration = launchConfiguration;
            o.launchTemplates = launchTemplates;
            o.loadBalancers = loadBalancers;
            o.maxInstanceLifetime = maxInstanceLifetime;
            o.maxSize = maxSize;
            o.minSize = minSize;
            o.mixedInstancesPolicies = mixedInstancesPolicies;
            o.name = name;
            o.newInstancesProtectedFromScaleIn = newInstancesProtectedFromScaleIn;
            o.placementGroup = placementGroup;
            o.predictedCapacity = predictedCapacity;
            o.serviceLinkedRoleArn = serviceLinkedRoleArn;
            o.status = status;
            o.suspendedProcesses = suspendedProcesses;
            o.tags = tags;
            o.targetGroupArns = targetGroupArns;
            o.terminationPolicies = terminationPolicies;
            o.trafficSources = trafficSources;
            o.vpcZoneIdentifier = vpcZoneIdentifier;
            o.warmPoolSize = warmPoolSize;
            o.warmPools = warmPools;
            return o;
        }
    }
}
