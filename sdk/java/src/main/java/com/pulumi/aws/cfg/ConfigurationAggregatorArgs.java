// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cfg;

import com.pulumi.aws.cfg.inputs.ConfigurationAggregatorAccountAggregationSourceArgs;
import com.pulumi.aws.cfg.inputs.ConfigurationAggregatorOrganizationAggregationSourceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConfigurationAggregatorArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConfigurationAggregatorArgs Empty = new ConfigurationAggregatorArgs();

    @Import(name="accountAggregationSource")
    private @Nullable Output<ConfigurationAggregatorAccountAggregationSourceArgs> accountAggregationSource;

    public Optional<Output<ConfigurationAggregatorAccountAggregationSourceArgs>> accountAggregationSource() {
        return Optional.ofNullable(this.accountAggregationSource);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="organizationAggregationSource")
    private @Nullable Output<ConfigurationAggregatorOrganizationAggregationSourceArgs> organizationAggregationSource;

    public Optional<Output<ConfigurationAggregatorOrganizationAggregationSourceArgs>> organizationAggregationSource() {
        return Optional.ofNullable(this.organizationAggregationSource);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ConfigurationAggregatorArgs() {}

    private ConfigurationAggregatorArgs(ConfigurationAggregatorArgs $) {
        this.accountAggregationSource = $.accountAggregationSource;
        this.name = $.name;
        this.organizationAggregationSource = $.organizationAggregationSource;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigurationAggregatorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigurationAggregatorArgs $;

        public Builder() {
            $ = new ConfigurationAggregatorArgs();
        }

        public Builder(ConfigurationAggregatorArgs defaults) {
            $ = new ConfigurationAggregatorArgs(Objects.requireNonNull(defaults));
        }

        public Builder accountAggregationSource(@Nullable Output<ConfigurationAggregatorAccountAggregationSourceArgs> accountAggregationSource) {
            $.accountAggregationSource = accountAggregationSource;
            return this;
        }

        public Builder accountAggregationSource(ConfigurationAggregatorAccountAggregationSourceArgs accountAggregationSource) {
            return accountAggregationSource(Output.of(accountAggregationSource));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder organizationAggregationSource(@Nullable Output<ConfigurationAggregatorOrganizationAggregationSourceArgs> organizationAggregationSource) {
            $.organizationAggregationSource = organizationAggregationSource;
            return this;
        }

        public Builder organizationAggregationSource(ConfigurationAggregatorOrganizationAggregationSourceArgs organizationAggregationSource) {
            return organizationAggregationSource(Output.of(organizationAggregationSource));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public ConfigurationAggregatorArgs build() {
            return $;
        }
    }

}
