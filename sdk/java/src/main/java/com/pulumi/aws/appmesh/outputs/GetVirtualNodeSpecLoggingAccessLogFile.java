// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.outputs;

import com.pulumi.aws.appmesh.outputs.GetVirtualNodeSpecLoggingAccessLogFileFormat;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetVirtualNodeSpecLoggingAccessLogFile {
    private List<GetVirtualNodeSpecLoggingAccessLogFileFormat> formats;
    private String path;

    private GetVirtualNodeSpecLoggingAccessLogFile() {}
    public List<GetVirtualNodeSpecLoggingAccessLogFileFormat> formats() {
        return this.formats;
    }
    public String path() {
        return this.path;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVirtualNodeSpecLoggingAccessLogFile defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetVirtualNodeSpecLoggingAccessLogFileFormat> formats;
        private String path;
        public Builder() {}
        public Builder(GetVirtualNodeSpecLoggingAccessLogFile defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.formats = defaults.formats;
    	      this.path = defaults.path;
        }

        @CustomType.Setter
        public Builder formats(List<GetVirtualNodeSpecLoggingAccessLogFileFormat> formats) {
            this.formats = Objects.requireNonNull(formats);
            return this;
        }
        public Builder formats(GetVirtualNodeSpecLoggingAccessLogFileFormat... formats) {
            return formats(List.of(formats));
        }
        @CustomType.Setter
        public Builder path(String path) {
            this.path = Objects.requireNonNull(path);
            return this;
        }
        public GetVirtualNodeSpecLoggingAccessLogFile build() {
            final var o = new GetVirtualNodeSpecLoggingAccessLogFile();
            o.formats = formats;
            o.path = path;
            return o;
        }
    }
}
