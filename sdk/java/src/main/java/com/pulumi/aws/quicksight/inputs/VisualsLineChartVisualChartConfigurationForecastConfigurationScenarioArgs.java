// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.VisualsLineChartVisualChartConfigurationForecastConfigurationScenarioWhatIfPointScenarioArgs;
import com.pulumi.aws.quicksight.inputs.VisualsLineChartVisualChartConfigurationForecastConfigurationScenarioWhatIfRangeScenarioArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VisualsLineChartVisualChartConfigurationForecastConfigurationScenarioArgs extends com.pulumi.resources.ResourceArgs {

    public static final VisualsLineChartVisualChartConfigurationForecastConfigurationScenarioArgs Empty = new VisualsLineChartVisualChartConfigurationForecastConfigurationScenarioArgs();

    @Import(name="whatIfPointScenario")
    private @Nullable Output<VisualsLineChartVisualChartConfigurationForecastConfigurationScenarioWhatIfPointScenarioArgs> whatIfPointScenario;

    public Optional<Output<VisualsLineChartVisualChartConfigurationForecastConfigurationScenarioWhatIfPointScenarioArgs>> whatIfPointScenario() {
        return Optional.ofNullable(this.whatIfPointScenario);
    }

    @Import(name="whatIfRangeScenario")
    private @Nullable Output<VisualsLineChartVisualChartConfigurationForecastConfigurationScenarioWhatIfRangeScenarioArgs> whatIfRangeScenario;

    public Optional<Output<VisualsLineChartVisualChartConfigurationForecastConfigurationScenarioWhatIfRangeScenarioArgs>> whatIfRangeScenario() {
        return Optional.ofNullable(this.whatIfRangeScenario);
    }

    private VisualsLineChartVisualChartConfigurationForecastConfigurationScenarioArgs() {}

    private VisualsLineChartVisualChartConfigurationForecastConfigurationScenarioArgs(VisualsLineChartVisualChartConfigurationForecastConfigurationScenarioArgs $) {
        this.whatIfPointScenario = $.whatIfPointScenario;
        this.whatIfRangeScenario = $.whatIfRangeScenario;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VisualsLineChartVisualChartConfigurationForecastConfigurationScenarioArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VisualsLineChartVisualChartConfigurationForecastConfigurationScenarioArgs $;

        public Builder() {
            $ = new VisualsLineChartVisualChartConfigurationForecastConfigurationScenarioArgs();
        }

        public Builder(VisualsLineChartVisualChartConfigurationForecastConfigurationScenarioArgs defaults) {
            $ = new VisualsLineChartVisualChartConfigurationForecastConfigurationScenarioArgs(Objects.requireNonNull(defaults));
        }

        public Builder whatIfPointScenario(@Nullable Output<VisualsLineChartVisualChartConfigurationForecastConfigurationScenarioWhatIfPointScenarioArgs> whatIfPointScenario) {
            $.whatIfPointScenario = whatIfPointScenario;
            return this;
        }

        public Builder whatIfPointScenario(VisualsLineChartVisualChartConfigurationForecastConfigurationScenarioWhatIfPointScenarioArgs whatIfPointScenario) {
            return whatIfPointScenario(Output.of(whatIfPointScenario));
        }

        public Builder whatIfRangeScenario(@Nullable Output<VisualsLineChartVisualChartConfigurationForecastConfigurationScenarioWhatIfRangeScenarioArgs> whatIfRangeScenario) {
            $.whatIfRangeScenario = whatIfRangeScenario;
            return this;
        }

        public Builder whatIfRangeScenario(VisualsLineChartVisualChartConfigurationForecastConfigurationScenarioWhatIfRangeScenarioArgs whatIfRangeScenario) {
            return whatIfRangeScenario(Output.of(whatIfRangeScenario));
        }

        public VisualsLineChartVisualChartConfigurationForecastConfigurationScenarioArgs build() {
            return $;
        }
    }

}
