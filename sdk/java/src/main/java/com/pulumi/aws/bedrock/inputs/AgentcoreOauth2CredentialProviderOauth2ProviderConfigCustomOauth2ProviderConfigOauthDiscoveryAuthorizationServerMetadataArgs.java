// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AgentcoreOauth2CredentialProviderOauth2ProviderConfigCustomOauth2ProviderConfigOauthDiscoveryAuthorizationServerMetadataArgs extends com.pulumi.resources.ResourceArgs {

    public static final AgentcoreOauth2CredentialProviderOauth2ProviderConfigCustomOauth2ProviderConfigOauthDiscoveryAuthorizationServerMetadataArgs Empty = new AgentcoreOauth2CredentialProviderOauth2ProviderConfigCustomOauth2ProviderConfigOauthDiscoveryAuthorizationServerMetadataArgs();

    /**
     * OAuth2 authorization endpoint URL.
     * 
     */
    @Import(name="authorizationEndpoint", required=true)
    private Output<String> authorizationEndpoint;

    /**
     * @return OAuth2 authorization endpoint URL.
     * 
     */
    public Output<String> authorizationEndpoint() {
        return this.authorizationEndpoint;
    }

    /**
     * OAuth2 authorization server issuer identifier.
     * 
     */
    @Import(name="issuer", required=true)
    private Output<String> issuer;

    /**
     * @return OAuth2 authorization server issuer identifier.
     * 
     */
    public Output<String> issuer() {
        return this.issuer;
    }

    /**
     * Set of OAuth2 response types supported by the authorization server.
     * 
     */
    @Import(name="responseTypes")
    private @Nullable Output<List<String>> responseTypes;

    /**
     * @return Set of OAuth2 response types supported by the authorization server.
     * 
     */
    public Optional<Output<List<String>>> responseTypes() {
        return Optional.ofNullable(this.responseTypes);
    }

    /**
     * OAuth2 token endpoint URL.
     * 
     */
    @Import(name="tokenEndpoint", required=true)
    private Output<String> tokenEndpoint;

    /**
     * @return OAuth2 token endpoint URL.
     * 
     */
    public Output<String> tokenEndpoint() {
        return this.tokenEndpoint;
    }

    private AgentcoreOauth2CredentialProviderOauth2ProviderConfigCustomOauth2ProviderConfigOauthDiscoveryAuthorizationServerMetadataArgs() {}

    private AgentcoreOauth2CredentialProviderOauth2ProviderConfigCustomOauth2ProviderConfigOauthDiscoveryAuthorizationServerMetadataArgs(AgentcoreOauth2CredentialProviderOauth2ProviderConfigCustomOauth2ProviderConfigOauthDiscoveryAuthorizationServerMetadataArgs $) {
        this.authorizationEndpoint = $.authorizationEndpoint;
        this.issuer = $.issuer;
        this.responseTypes = $.responseTypes;
        this.tokenEndpoint = $.tokenEndpoint;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentcoreOauth2CredentialProviderOauth2ProviderConfigCustomOauth2ProviderConfigOauthDiscoveryAuthorizationServerMetadataArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentcoreOauth2CredentialProviderOauth2ProviderConfigCustomOauth2ProviderConfigOauthDiscoveryAuthorizationServerMetadataArgs $;

        public Builder() {
            $ = new AgentcoreOauth2CredentialProviderOauth2ProviderConfigCustomOauth2ProviderConfigOauthDiscoveryAuthorizationServerMetadataArgs();
        }

        public Builder(AgentcoreOauth2CredentialProviderOauth2ProviderConfigCustomOauth2ProviderConfigOauthDiscoveryAuthorizationServerMetadataArgs defaults) {
            $ = new AgentcoreOauth2CredentialProviderOauth2ProviderConfigCustomOauth2ProviderConfigOauthDiscoveryAuthorizationServerMetadataArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authorizationEndpoint OAuth2 authorization endpoint URL.
         * 
         * @return builder
         * 
         */
        public Builder authorizationEndpoint(Output<String> authorizationEndpoint) {
            $.authorizationEndpoint = authorizationEndpoint;
            return this;
        }

        /**
         * @param authorizationEndpoint OAuth2 authorization endpoint URL.
         * 
         * @return builder
         * 
         */
        public Builder authorizationEndpoint(String authorizationEndpoint) {
            return authorizationEndpoint(Output.of(authorizationEndpoint));
        }

        /**
         * @param issuer OAuth2 authorization server issuer identifier.
         * 
         * @return builder
         * 
         */
        public Builder issuer(Output<String> issuer) {
            $.issuer = issuer;
            return this;
        }

        /**
         * @param issuer OAuth2 authorization server issuer identifier.
         * 
         * @return builder
         * 
         */
        public Builder issuer(String issuer) {
            return issuer(Output.of(issuer));
        }

        /**
         * @param responseTypes Set of OAuth2 response types supported by the authorization server.
         * 
         * @return builder
         * 
         */
        public Builder responseTypes(@Nullable Output<List<String>> responseTypes) {
            $.responseTypes = responseTypes;
            return this;
        }

        /**
         * @param responseTypes Set of OAuth2 response types supported by the authorization server.
         * 
         * @return builder
         * 
         */
        public Builder responseTypes(List<String> responseTypes) {
            return responseTypes(Output.of(responseTypes));
        }

        /**
         * @param responseTypes Set of OAuth2 response types supported by the authorization server.
         * 
         * @return builder
         * 
         */
        public Builder responseTypes(String... responseTypes) {
            return responseTypes(List.of(responseTypes));
        }

        /**
         * @param tokenEndpoint OAuth2 token endpoint URL.
         * 
         * @return builder
         * 
         */
        public Builder tokenEndpoint(Output<String> tokenEndpoint) {
            $.tokenEndpoint = tokenEndpoint;
            return this;
        }

        /**
         * @param tokenEndpoint OAuth2 token endpoint URL.
         * 
         * @return builder
         * 
         */
        public Builder tokenEndpoint(String tokenEndpoint) {
            return tokenEndpoint(Output.of(tokenEndpoint));
        }

        public AgentcoreOauth2CredentialProviderOauth2ProviderConfigCustomOauth2ProviderConfigOauthDiscoveryAuthorizationServerMetadataArgs build() {
            if ($.authorizationEndpoint == null) {
                throw new MissingRequiredPropertyException("AgentcoreOauth2CredentialProviderOauth2ProviderConfigCustomOauth2ProviderConfigOauthDiscoveryAuthorizationServerMetadataArgs", "authorizationEndpoint");
            }
            if ($.issuer == null) {
                throw new MissingRequiredPropertyException("AgentcoreOauth2CredentialProviderOauth2ProviderConfigCustomOauth2ProviderConfigOauthDiscoveryAuthorizationServerMetadataArgs", "issuer");
            }
            if ($.tokenEndpoint == null) {
                throw new MissingRequiredPropertyException("AgentcoreOauth2CredentialProviderOauth2ProviderConfigCustomOauth2ProviderConfigOauthDiscoveryAuthorizationServerMetadataArgs", "tokenEndpoint");
            }
            return $;
        }
    }

}
