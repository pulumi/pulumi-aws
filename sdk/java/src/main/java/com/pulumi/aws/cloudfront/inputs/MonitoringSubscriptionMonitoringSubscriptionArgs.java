// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudfront.inputs;

import com.pulumi.aws.cloudfront.inputs.MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.Objects;


public final class MonitoringSubscriptionMonitoringSubscriptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final MonitoringSubscriptionMonitoringSubscriptionArgs Empty = new MonitoringSubscriptionMonitoringSubscriptionArgs();

    /**
     * A subscription configuration for additional CloudWatch metrics. See below.
     * 
     */
    @Import(name="realtimeMetricsSubscriptionConfig", required=true)
    private Output<MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfigArgs> realtimeMetricsSubscriptionConfig;

    /**
     * @return A subscription configuration for additional CloudWatch metrics. See below.
     * 
     */
    public Output<MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfigArgs> realtimeMetricsSubscriptionConfig() {
        return this.realtimeMetricsSubscriptionConfig;
    }

    private MonitoringSubscriptionMonitoringSubscriptionArgs() {}

    private MonitoringSubscriptionMonitoringSubscriptionArgs(MonitoringSubscriptionMonitoringSubscriptionArgs $) {
        this.realtimeMetricsSubscriptionConfig = $.realtimeMetricsSubscriptionConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitoringSubscriptionMonitoringSubscriptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitoringSubscriptionMonitoringSubscriptionArgs $;

        public Builder() {
            $ = new MonitoringSubscriptionMonitoringSubscriptionArgs();
        }

        public Builder(MonitoringSubscriptionMonitoringSubscriptionArgs defaults) {
            $ = new MonitoringSubscriptionMonitoringSubscriptionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param realtimeMetricsSubscriptionConfig A subscription configuration for additional CloudWatch metrics. See below.
         * 
         * @return builder
         * 
         */
        public Builder realtimeMetricsSubscriptionConfig(Output<MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfigArgs> realtimeMetricsSubscriptionConfig) {
            $.realtimeMetricsSubscriptionConfig = realtimeMetricsSubscriptionConfig;
            return this;
        }

        /**
         * @param realtimeMetricsSubscriptionConfig A subscription configuration for additional CloudWatch metrics. See below.
         * 
         * @return builder
         * 
         */
        public Builder realtimeMetricsSubscriptionConfig(MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfigArgs realtimeMetricsSubscriptionConfig) {
            return realtimeMetricsSubscriptionConfig(Output.of(realtimeMetricsSubscriptionConfig));
        }

        public MonitoringSubscriptionMonitoringSubscriptionArgs build() {
            if ($.realtimeMetricsSubscriptionConfig == null) {
                throw new MissingRequiredPropertyException("MonitoringSubscriptionMonitoringSubscriptionArgs", "realtimeMetricsSubscriptionConfig");
            }
            return $;
        }
    }

}
