// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.transfer.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServerS3StorageOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServerS3StorageOptionsArgs Empty = new ServerS3StorageOptionsArgs();

    /**
     * Specifies whether or not performance for your Amazon S3 directories is optimized. Valid values are `DISABLED`, `ENABLED`.
     * 
     * By default, home directory mappings have a `TYPE` of `DIRECTORY`. If you enable this option, you would then need to explicitly set the `HomeDirectoryMapEntry` Type to `FILE` if you want a mapping to have a file target. See [Using logical directories to simplify your Transfer Family directory structures](https://docs.aws.amazon.com/transfer/latest/userguide/logical-dir-mappings.html) for details.
     * 
     */
    @Import(name="directoryListingOptimization")
    private @Nullable Output<String> directoryListingOptimization;

    /**
     * @return Specifies whether or not performance for your Amazon S3 directories is optimized. Valid values are `DISABLED`, `ENABLED`.
     * 
     * By default, home directory mappings have a `TYPE` of `DIRECTORY`. If you enable this option, you would then need to explicitly set the `HomeDirectoryMapEntry` Type to `FILE` if you want a mapping to have a file target. See [Using logical directories to simplify your Transfer Family directory structures](https://docs.aws.amazon.com/transfer/latest/userguide/logical-dir-mappings.html) for details.
     * 
     */
    public Optional<Output<String>> directoryListingOptimization() {
        return Optional.ofNullable(this.directoryListingOptimization);
    }

    private ServerS3StorageOptionsArgs() {}

    private ServerS3StorageOptionsArgs(ServerS3StorageOptionsArgs $) {
        this.directoryListingOptimization = $.directoryListingOptimization;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServerS3StorageOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServerS3StorageOptionsArgs $;

        public Builder() {
            $ = new ServerS3StorageOptionsArgs();
        }

        public Builder(ServerS3StorageOptionsArgs defaults) {
            $ = new ServerS3StorageOptionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param directoryListingOptimization Specifies whether or not performance for your Amazon S3 directories is optimized. Valid values are `DISABLED`, `ENABLED`.
         * 
         * By default, home directory mappings have a `TYPE` of `DIRECTORY`. If you enable this option, you would then need to explicitly set the `HomeDirectoryMapEntry` Type to `FILE` if you want a mapping to have a file target. See [Using logical directories to simplify your Transfer Family directory structures](https://docs.aws.amazon.com/transfer/latest/userguide/logical-dir-mappings.html) for details.
         * 
         * @return builder
         * 
         */
        public Builder directoryListingOptimization(@Nullable Output<String> directoryListingOptimization) {
            $.directoryListingOptimization = directoryListingOptimization;
            return this;
        }

        /**
         * @param directoryListingOptimization Specifies whether or not performance for your Amazon S3 directories is optimized. Valid values are `DISABLED`, `ENABLED`.
         * 
         * By default, home directory mappings have a `TYPE` of `DIRECTORY`. If you enable this option, you would then need to explicitly set the `HomeDirectoryMapEntry` Type to `FILE` if you want a mapping to have a file target. See [Using logical directories to simplify your Transfer Family directory structures](https://docs.aws.amazon.com/transfer/latest/userguide/logical-dir-mappings.html) for details.
         * 
         * @return builder
         * 
         */
        public Builder directoryListingOptimization(String directoryListingOptimization) {
            return directoryListingOptimization(Output.of(directoryListingOptimization));
        }

        public ServerS3StorageOptionsArgs build() {
            return $;
        }
    }

}
