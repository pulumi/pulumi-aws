// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appsync.inputs;

import com.pulumi.aws.appsync.inputs.ApiEventConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApiState extends com.pulumi.resources.ResourceArgs {

    public static final ApiState Empty = new ApiState();

    /**
     * ARN of the Event API.
     * 
     */
    @Import(name="apiArn")
    private @Nullable Output<String> apiArn;

    /**
     * @return ARN of the Event API.
     * 
     */
    public Optional<Output<String>> apiArn() {
        return Optional.ofNullable(this.apiArn);
    }

    /**
     * ID of the Event API.
     * 
     */
    @Import(name="apiId")
    private @Nullable Output<String> apiId;

    /**
     * @return ID of the Event API.
     * 
     */
    public Optional<Output<String>> apiId() {
        return Optional.ofNullable(this.apiId);
    }

    /**
     * DNS configuration for the Event API.
     * 
     */
    @Import(name="dns")
    private @Nullable Output<Map<String,String>> dns;

    /**
     * @return DNS configuration for the Event API.
     * 
     */
    public Optional<Output<Map<String,String>>> dns() {
        return Optional.ofNullable(this.dns);
    }

    /**
     * Configuration for the Event API. See Event Config below.
     * 
     */
    @Import(name="eventConfig")
    private @Nullable Output<ApiEventConfigArgs> eventConfig;

    /**
     * @return Configuration for the Event API. See Event Config below.
     * 
     */
    public Optional<Output<ApiEventConfigArgs>> eventConfig() {
        return Optional.ofNullable(this.eventConfig);
    }

    /**
     * Name of the Event API.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the Event API.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Contact information for the owner of the Event API.
     * 
     */
    @Import(name="ownerContact")
    private @Nullable Output<String> ownerContact;

    /**
     * @return Contact information for the owner of the Event API.
     * 
     */
    public Optional<Output<String>> ownerContact() {
        return Optional.ofNullable(this.ownerContact);
    }

    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @return Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    /**
     * ARN of the associated WAF web ACL.
     * 
     */
    @Import(name="wafWebAclArn")
    private @Nullable Output<String> wafWebAclArn;

    /**
     * @return ARN of the associated WAF web ACL.
     * 
     */
    public Optional<Output<String>> wafWebAclArn() {
        return Optional.ofNullable(this.wafWebAclArn);
    }

    @Import(name="xrayEnabled")
    private @Nullable Output<Boolean> xrayEnabled;

    public Optional<Output<Boolean>> xrayEnabled() {
        return Optional.ofNullable(this.xrayEnabled);
    }

    private ApiState() {}

    private ApiState(ApiState $) {
        this.apiArn = $.apiArn;
        this.apiId = $.apiId;
        this.dns = $.dns;
        this.eventConfig = $.eventConfig;
        this.name = $.name;
        this.ownerContact = $.ownerContact;
        this.region = $.region;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.wafWebAclArn = $.wafWebAclArn;
        this.xrayEnabled = $.xrayEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiState $;

        public Builder() {
            $ = new ApiState();
        }

        public Builder(ApiState defaults) {
            $ = new ApiState(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiArn ARN of the Event API.
         * 
         * @return builder
         * 
         */
        public Builder apiArn(@Nullable Output<String> apiArn) {
            $.apiArn = apiArn;
            return this;
        }

        /**
         * @param apiArn ARN of the Event API.
         * 
         * @return builder
         * 
         */
        public Builder apiArn(String apiArn) {
            return apiArn(Output.of(apiArn));
        }

        /**
         * @param apiId ID of the Event API.
         * 
         * @return builder
         * 
         */
        public Builder apiId(@Nullable Output<String> apiId) {
            $.apiId = apiId;
            return this;
        }

        /**
         * @param apiId ID of the Event API.
         * 
         * @return builder
         * 
         */
        public Builder apiId(String apiId) {
            return apiId(Output.of(apiId));
        }

        /**
         * @param dns DNS configuration for the Event API.
         * 
         * @return builder
         * 
         */
        public Builder dns(@Nullable Output<Map<String,String>> dns) {
            $.dns = dns;
            return this;
        }

        /**
         * @param dns DNS configuration for the Event API.
         * 
         * @return builder
         * 
         */
        public Builder dns(Map<String,String> dns) {
            return dns(Output.of(dns));
        }

        /**
         * @param eventConfig Configuration for the Event API. See Event Config below.
         * 
         * @return builder
         * 
         */
        public Builder eventConfig(@Nullable Output<ApiEventConfigArgs> eventConfig) {
            $.eventConfig = eventConfig;
            return this;
        }

        /**
         * @param eventConfig Configuration for the Event API. See Event Config below.
         * 
         * @return builder
         * 
         */
        public Builder eventConfig(ApiEventConfigArgs eventConfig) {
            return eventConfig(Output.of(eventConfig));
        }

        /**
         * @param name Name of the Event API.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the Event API.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param ownerContact Contact information for the owner of the Event API.
         * 
         * @return builder
         * 
         */
        public Builder ownerContact(@Nullable Output<String> ownerContact) {
            $.ownerContact = ownerContact;
            return this;
        }

        /**
         * @param ownerContact Contact information for the owner of the Event API.
         * 
         * @return builder
         * 
         */
        public Builder ownerContact(String ownerContact) {
            return ownerContact(Output.of(ownerContact));
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param tags Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tagsAll Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @param tagsAll Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        /**
         * @param wafWebAclArn ARN of the associated WAF web ACL.
         * 
         * @return builder
         * 
         */
        public Builder wafWebAclArn(@Nullable Output<String> wafWebAclArn) {
            $.wafWebAclArn = wafWebAclArn;
            return this;
        }

        /**
         * @param wafWebAclArn ARN of the associated WAF web ACL.
         * 
         * @return builder
         * 
         */
        public Builder wafWebAclArn(String wafWebAclArn) {
            return wafWebAclArn(Output.of(wafWebAclArn));
        }

        public Builder xrayEnabled(@Nullable Output<Boolean> xrayEnabled) {
            $.xrayEnabled = xrayEnabled;
            return this;
        }

        public Builder xrayEnabled(Boolean xrayEnabled) {
            return xrayEnabled(Output.of(xrayEnabled));
        }

        public ApiState build() {
            return $;
        }
    }

}
