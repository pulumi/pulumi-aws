// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lightsail;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LbCertificateAttachmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final LbCertificateAttachmentArgs Empty = new LbCertificateAttachmentArgs();

    /**
     * The name of your SSL/TLS certificate.
     * 
     */
    @Import(name="certificateName", required=true)
    private Output<String> certificateName;

    /**
     * @return The name of your SSL/TLS certificate.
     * 
     */
    public Output<String> certificateName() {
        return this.certificateName;
    }

    /**
     * The name of the load balancer to which you want to associate the SSL/TLS certificate.
     * 
     */
    @Import(name="lbName", required=true)
    private Output<String> lbName;

    /**
     * @return The name of the load balancer to which you want to associate the SSL/TLS certificate.
     * 
     */
    public Output<String> lbName() {
        return this.lbName;
    }

    /**
     * The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    private LbCertificateAttachmentArgs() {}

    private LbCertificateAttachmentArgs(LbCertificateAttachmentArgs $) {
        this.certificateName = $.certificateName;
        this.lbName = $.lbName;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LbCertificateAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LbCertificateAttachmentArgs $;

        public Builder() {
            $ = new LbCertificateAttachmentArgs();
        }

        public Builder(LbCertificateAttachmentArgs defaults) {
            $ = new LbCertificateAttachmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificateName The name of your SSL/TLS certificate.
         * 
         * @return builder
         * 
         */
        public Builder certificateName(Output<String> certificateName) {
            $.certificateName = certificateName;
            return this;
        }

        /**
         * @param certificateName The name of your SSL/TLS certificate.
         * 
         * @return builder
         * 
         */
        public Builder certificateName(String certificateName) {
            return certificateName(Output.of(certificateName));
        }

        /**
         * @param lbName The name of the load balancer to which you want to associate the SSL/TLS certificate.
         * 
         * @return builder
         * 
         */
        public Builder lbName(Output<String> lbName) {
            $.lbName = lbName;
            return this;
        }

        /**
         * @param lbName The name of the load balancer to which you want to associate the SSL/TLS certificate.
         * 
         * @return builder
         * 
         */
        public Builder lbName(String lbName) {
            return lbName(Output.of(lbName));
        }

        /**
         * @param region The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public LbCertificateAttachmentArgs build() {
            if ($.certificateName == null) {
                throw new MissingRequiredPropertyException("LbCertificateAttachmentArgs", "certificateName");
            }
            if ($.lbName == null) {
                throw new MissingRequiredPropertyException("LbCertificateAttachmentArgs", "lbName");
            }
            return $;
        }
    }

}
