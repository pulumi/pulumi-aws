// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.workspaces.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class DirectoryActiveDirectoryConfig {
    /**
     * @return Fully qualified domain name of the AWS Directory Service directory.
     * 
     */
    private String domainName;
    /**
     * @return ARN of the Secrets Manager secret that contains the credentials for the service account. For more information, see [Service Account Details](https://docs.aws.amazon.com/workspaces/latest/adminguide/pools-service-account-details.html).
     * 
     */
    private String serviceAccountSecretArn;

    private DirectoryActiveDirectoryConfig() {}
    /**
     * @return Fully qualified domain name of the AWS Directory Service directory.
     * 
     */
    public String domainName() {
        return this.domainName;
    }
    /**
     * @return ARN of the Secrets Manager secret that contains the credentials for the service account. For more information, see [Service Account Details](https://docs.aws.amazon.com/workspaces/latest/adminguide/pools-service-account-details.html).
     * 
     */
    public String serviceAccountSecretArn() {
        return this.serviceAccountSecretArn;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DirectoryActiveDirectoryConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String domainName;
        private String serviceAccountSecretArn;
        public Builder() {}
        public Builder(DirectoryActiveDirectoryConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domainName = defaults.domainName;
    	      this.serviceAccountSecretArn = defaults.serviceAccountSecretArn;
        }

        @CustomType.Setter
        public Builder domainName(String domainName) {
            if (domainName == null) {
              throw new MissingRequiredPropertyException("DirectoryActiveDirectoryConfig", "domainName");
            }
            this.domainName = domainName;
            return this;
        }
        @CustomType.Setter
        public Builder serviceAccountSecretArn(String serviceAccountSecretArn) {
            if (serviceAccountSecretArn == null) {
              throw new MissingRequiredPropertyException("DirectoryActiveDirectoryConfig", "serviceAccountSecretArn");
            }
            this.serviceAccountSecretArn = serviceAccountSecretArn;
            return this;
        }
        public DirectoryActiveDirectoryConfig build() {
            final var _resultValue = new DirectoryActiveDirectoryConfig();
            _resultValue.domainName = domainName;
            _resultValue.serviceAccountSecretArn = serviceAccountSecretArn;
            return _resultValue;
        }
    }
}
