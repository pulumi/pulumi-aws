// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.organizations.outputs;

import com.pulumi.aws.organizations.outputs.GetDelegatedServicesDelegatedService;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDelegatedServicesResult {
    private String accountId;
    /**
     * @return Services for which the account is a delegated administrator, which have the following attributes:
     * 
     */
    private @Nullable List<GetDelegatedServicesDelegatedService> delegatedServices;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;

    private GetDelegatedServicesResult() {}
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return Services for which the account is a delegated administrator, which have the following attributes:
     * 
     */
    public List<GetDelegatedServicesDelegatedService> delegatedServices() {
        return this.delegatedServices == null ? List.of() : this.delegatedServices;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDelegatedServicesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private @Nullable List<GetDelegatedServicesDelegatedService> delegatedServices;
        private @Nullable String id;
        public Builder() {}
        public Builder(GetDelegatedServicesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.delegatedServices = defaults.delegatedServices;
    	      this.id = defaults.id;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            this.accountId = Objects.requireNonNull(accountId);
            return this;
        }
        @CustomType.Setter
        public Builder delegatedServices(@Nullable List<GetDelegatedServicesDelegatedService> delegatedServices) {
            this.delegatedServices = delegatedServices;
            return this;
        }
        public Builder delegatedServices(GetDelegatedServicesDelegatedService... delegatedServices) {
            return delegatedServices(List.of(delegatedServices));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public GetDelegatedServicesResult build() {
            final var o = new GetDelegatedServicesResult();
            o.accountId = accountId;
            o.delegatedServices = delegatedServices;
            o.id = id;
            return o;
        }
    }
}
