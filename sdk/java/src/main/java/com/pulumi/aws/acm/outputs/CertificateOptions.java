// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.acm.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CertificateOptions {
    /**
     * @return Whether certificate details should be added to a certificate transparency log. Valid values are `ENABLED` or `DISABLED`. See https://docs.aws.amazon.com/acm/latest/userguide/acm-concepts.html#concept-transparency for more details.
     * 
     */
    private @Nullable String certificateTransparencyLoggingPreference;
    /**
     * @return Whether the certificate can be exported. Valid values are `ENABLED` or `DISABLED` (default). **Note** Issuing an exportable certificate is subject to additional charges. See [AWS Certificate Manager pricing](https://aws.amazon.com/certificate-manager/pricing/) for more details.
     * 
     */
    private @Nullable String export;

    private CertificateOptions() {}
    /**
     * @return Whether certificate details should be added to a certificate transparency log. Valid values are `ENABLED` or `DISABLED`. See https://docs.aws.amazon.com/acm/latest/userguide/acm-concepts.html#concept-transparency for more details.
     * 
     */
    public Optional<String> certificateTransparencyLoggingPreference() {
        return Optional.ofNullable(this.certificateTransparencyLoggingPreference);
    }
    /**
     * @return Whether the certificate can be exported. Valid values are `ENABLED` or `DISABLED` (default). **Note** Issuing an exportable certificate is subject to additional charges. See [AWS Certificate Manager pricing](https://aws.amazon.com/certificate-manager/pricing/) for more details.
     * 
     */
    public Optional<String> export() {
        return Optional.ofNullable(this.export);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CertificateOptions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String certificateTransparencyLoggingPreference;
        private @Nullable String export;
        public Builder() {}
        public Builder(CertificateOptions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateTransparencyLoggingPreference = defaults.certificateTransparencyLoggingPreference;
    	      this.export = defaults.export;
        }

        @CustomType.Setter
        public Builder certificateTransparencyLoggingPreference(@Nullable String certificateTransparencyLoggingPreference) {

            this.certificateTransparencyLoggingPreference = certificateTransparencyLoggingPreference;
            return this;
        }
        @CustomType.Setter
        public Builder export(@Nullable String export) {

            this.export = export;
            return this;
        }
        public CertificateOptions build() {
            final var _resultValue = new CertificateOptions();
            _resultValue.certificateTransparencyLoggingPreference = certificateTransparencyLoggingPreference;
            _resultValue.export = export;
            return _resultValue;
        }
    }
}
