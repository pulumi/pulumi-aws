// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.msk.inputs;

import com.pulumi.aws.msk.inputs.ClusterEncryptionInfoEncryptionInTransitArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterEncryptionInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterEncryptionInfoArgs Empty = new ClusterEncryptionInfoArgs();

    /**
     * You may specify a KMS key short ID or ARN (it will always output an ARN) to use for encrypting your data at rest.  If no key is specified, an AWS managed KMS (&#39;aws/msk&#39; managed service) key will be used for encrypting the data at rest.
     * 
     */
    @Import(name="encryptionAtRestKmsKeyArn")
    private @Nullable Output<String> encryptionAtRestKmsKeyArn;

    /**
     * @return You may specify a KMS key short ID or ARN (it will always output an ARN) to use for encrypting your data at rest.  If no key is specified, an AWS managed KMS (&#39;aws/msk&#39; managed service) key will be used for encrypting the data at rest.
     * 
     */
    public Optional<Output<String>> encryptionAtRestKmsKeyArn() {
        return Optional.ofNullable(this.encryptionAtRestKmsKeyArn);
    }

    /**
     * Configuration block to specify encryption in transit. See below.
     * 
     */
    @Import(name="encryptionInTransit")
    private @Nullable Output<ClusterEncryptionInfoEncryptionInTransitArgs> encryptionInTransit;

    /**
     * @return Configuration block to specify encryption in transit. See below.
     * 
     */
    public Optional<Output<ClusterEncryptionInfoEncryptionInTransitArgs>> encryptionInTransit() {
        return Optional.ofNullable(this.encryptionInTransit);
    }

    private ClusterEncryptionInfoArgs() {}

    private ClusterEncryptionInfoArgs(ClusterEncryptionInfoArgs $) {
        this.encryptionAtRestKmsKeyArn = $.encryptionAtRestKmsKeyArn;
        this.encryptionInTransit = $.encryptionInTransit;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterEncryptionInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterEncryptionInfoArgs $;

        public Builder() {
            $ = new ClusterEncryptionInfoArgs();
        }

        public Builder(ClusterEncryptionInfoArgs defaults) {
            $ = new ClusterEncryptionInfoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param encryptionAtRestKmsKeyArn You may specify a KMS key short ID or ARN (it will always output an ARN) to use for encrypting your data at rest.  If no key is specified, an AWS managed KMS (&#39;aws/msk&#39; managed service) key will be used for encrypting the data at rest.
         * 
         * @return builder
         * 
         */
        public Builder encryptionAtRestKmsKeyArn(@Nullable Output<String> encryptionAtRestKmsKeyArn) {
            $.encryptionAtRestKmsKeyArn = encryptionAtRestKmsKeyArn;
            return this;
        }

        /**
         * @param encryptionAtRestKmsKeyArn You may specify a KMS key short ID or ARN (it will always output an ARN) to use for encrypting your data at rest.  If no key is specified, an AWS managed KMS (&#39;aws/msk&#39; managed service) key will be used for encrypting the data at rest.
         * 
         * @return builder
         * 
         */
        public Builder encryptionAtRestKmsKeyArn(String encryptionAtRestKmsKeyArn) {
            return encryptionAtRestKmsKeyArn(Output.of(encryptionAtRestKmsKeyArn));
        }

        /**
         * @param encryptionInTransit Configuration block to specify encryption in transit. See below.
         * 
         * @return builder
         * 
         */
        public Builder encryptionInTransit(@Nullable Output<ClusterEncryptionInfoEncryptionInTransitArgs> encryptionInTransit) {
            $.encryptionInTransit = encryptionInTransit;
            return this;
        }

        /**
         * @param encryptionInTransit Configuration block to specify encryption in transit. See below.
         * 
         * @return builder
         * 
         */
        public Builder encryptionInTransit(ClusterEncryptionInfoEncryptionInTransitArgs encryptionInTransit) {
            return encryptionInTransit(Output.of(encryptionInTransit));
        }

        public ClusterEncryptionInfoArgs build() {
            return $;
        }
    }

}
