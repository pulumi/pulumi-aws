// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appsync.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs Empty = new DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs();

    /**
     * Signing Amazon Web Services Region for IAM authorization.
     * 
     */
    @Import(name="signingRegion")
    private @Nullable Output<String> signingRegion;

    /**
     * @return Signing Amazon Web Services Region for IAM authorization.
     * 
     */
    public Optional<Output<String>> signingRegion() {
        return Optional.ofNullable(this.signingRegion);
    }

    /**
     * Signing service name for IAM authorization.
     * 
     */
    @Import(name="signingServiceName")
    private @Nullable Output<String> signingServiceName;

    /**
     * @return Signing service name for IAM authorization.
     * 
     */
    public Optional<Output<String>> signingServiceName() {
        return Optional.ofNullable(this.signingServiceName);
    }

    private DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs() {}

    private DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs(DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs $) {
        this.signingRegion = $.signingRegion;
        this.signingServiceName = $.signingServiceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs $;

        public Builder() {
            $ = new DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs();
        }

        public Builder(DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs defaults) {
            $ = new DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param signingRegion Signing Amazon Web Services Region for IAM authorization.
         * 
         * @return builder
         * 
         */
        public Builder signingRegion(@Nullable Output<String> signingRegion) {
            $.signingRegion = signingRegion;
            return this;
        }

        /**
         * @param signingRegion Signing Amazon Web Services Region for IAM authorization.
         * 
         * @return builder
         * 
         */
        public Builder signingRegion(String signingRegion) {
            return signingRegion(Output.of(signingRegion));
        }

        /**
         * @param signingServiceName Signing service name for IAM authorization.
         * 
         * @return builder
         * 
         */
        public Builder signingServiceName(@Nullable Output<String> signingServiceName) {
            $.signingServiceName = signingServiceName;
            return this;
        }

        /**
         * @param signingServiceName Signing service name for IAM authorization.
         * 
         * @return builder
         * 
         */
        public Builder signingServiceName(String signingServiceName) {
            return signingServiceName(Output.of(signingServiceName));
        }

        public DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs build() {
            return $;
        }
    }

}
