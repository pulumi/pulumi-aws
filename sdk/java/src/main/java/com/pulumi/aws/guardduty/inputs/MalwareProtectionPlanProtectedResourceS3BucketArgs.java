// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.guardduty.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MalwareProtectionPlanProtectedResourceS3BucketArgs extends com.pulumi.resources.ResourceArgs {

    public static final MalwareProtectionPlanProtectedResourceS3BucketArgs Empty = new MalwareProtectionPlanProtectedResourceS3BucketArgs();

    /**
     * Name of the S3 bucket.
     * 
     */
    @Import(name="bucketName", required=true)
    private Output<String> bucketName;

    /**
     * @return Name of the S3 bucket.
     * 
     */
    public Output<String> bucketName() {
        return this.bucketName;
    }

    /**
     * The list of object prefixes that specify the S3 objects that will be scanned.
     * 
     */
    @Import(name="objectPrefixes")
    private @Nullable Output<List<String>> objectPrefixes;

    /**
     * @return The list of object prefixes that specify the S3 objects that will be scanned.
     * 
     */
    public Optional<Output<List<String>>> objectPrefixes() {
        return Optional.ofNullable(this.objectPrefixes);
    }

    private MalwareProtectionPlanProtectedResourceS3BucketArgs() {}

    private MalwareProtectionPlanProtectedResourceS3BucketArgs(MalwareProtectionPlanProtectedResourceS3BucketArgs $) {
        this.bucketName = $.bucketName;
        this.objectPrefixes = $.objectPrefixes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MalwareProtectionPlanProtectedResourceS3BucketArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MalwareProtectionPlanProtectedResourceS3BucketArgs $;

        public Builder() {
            $ = new MalwareProtectionPlanProtectedResourceS3BucketArgs();
        }

        public Builder(MalwareProtectionPlanProtectedResourceS3BucketArgs defaults) {
            $ = new MalwareProtectionPlanProtectedResourceS3BucketArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucketName Name of the S3 bucket.
         * 
         * @return builder
         * 
         */
        public Builder bucketName(Output<String> bucketName) {
            $.bucketName = bucketName;
            return this;
        }

        /**
         * @param bucketName Name of the S3 bucket.
         * 
         * @return builder
         * 
         */
        public Builder bucketName(String bucketName) {
            return bucketName(Output.of(bucketName));
        }

        /**
         * @param objectPrefixes The list of object prefixes that specify the S3 objects that will be scanned.
         * 
         * @return builder
         * 
         */
        public Builder objectPrefixes(@Nullable Output<List<String>> objectPrefixes) {
            $.objectPrefixes = objectPrefixes;
            return this;
        }

        /**
         * @param objectPrefixes The list of object prefixes that specify the S3 objects that will be scanned.
         * 
         * @return builder
         * 
         */
        public Builder objectPrefixes(List<String> objectPrefixes) {
            return objectPrefixes(Output.of(objectPrefixes));
        }

        /**
         * @param objectPrefixes The list of object prefixes that specify the S3 objects that will be scanned.
         * 
         * @return builder
         * 
         */
        public Builder objectPrefixes(String... objectPrefixes) {
            return objectPrefixes(List.of(objectPrefixes));
        }

        public MalwareProtectionPlanProtectedResourceS3BucketArgs build() {
            if ($.bucketName == null) {
                throw new MissingRequiredPropertyException("MalwareProtectionPlanProtectedResourceS3BucketArgs", "bucketName");
            }
            return $;
        }
    }

}
