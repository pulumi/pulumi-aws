// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.ConditionalFormattingColorGradientColorStopArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConditionalFormattingColorGradientColorArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConditionalFormattingColorGradientColorArgs Empty = new ConditionalFormattingColorGradientColorArgs();

    @Import(name="stops")
    private @Nullable Output<List<ConditionalFormattingColorGradientColorStopArgs>> stops;

    public Optional<Output<List<ConditionalFormattingColorGradientColorStopArgs>>> stops() {
        return Optional.ofNullable(this.stops);
    }

    private ConditionalFormattingColorGradientColorArgs() {}

    private ConditionalFormattingColorGradientColorArgs(ConditionalFormattingColorGradientColorArgs $) {
        this.stops = $.stops;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConditionalFormattingColorGradientColorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConditionalFormattingColorGradientColorArgs $;

        public Builder() {
            $ = new ConditionalFormattingColorGradientColorArgs();
        }

        public Builder(ConditionalFormattingColorGradientColorArgs defaults) {
            $ = new ConditionalFormattingColorGradientColorArgs(Objects.requireNonNull(defaults));
        }

        public Builder stops(@Nullable Output<List<ConditionalFormattingColorGradientColorStopArgs>> stops) {
            $.stops = stops;
            return this;
        }

        public Builder stops(List<ConditionalFormattingColorGradientColorStopArgs> stops) {
            return stops(Output.of(stops));
        }

        public Builder stops(ConditionalFormattingColorGradientColorStopArgs... stops) {
            return stops(List.of(stops));
        }

        public ConditionalFormattingColorGradientColorArgs build() {
            return $;
        }
    }

}
