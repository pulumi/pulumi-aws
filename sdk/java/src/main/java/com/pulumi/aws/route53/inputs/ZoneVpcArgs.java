// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.route53.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ZoneVpcArgs extends com.pulumi.resources.ResourceArgs {

    public static final ZoneVpcArgs Empty = new ZoneVpcArgs();

    /**
     * ID of the VPC to associate.
     * 
     */
    @Import(name="vpcId", required=true)
    private Output<String> vpcId;

    /**
     * @return ID of the VPC to associate.
     * 
     */
    public Output<String> vpcId() {
        return this.vpcId;
    }

    /**
     * Region of the VPC to associate. Defaults to AWS provider region.
     * 
     */
    @Import(name="vpcRegion")
    private @Nullable Output<String> vpcRegion;

    /**
     * @return Region of the VPC to associate. Defaults to AWS provider region.
     * 
     */
    public Optional<Output<String>> vpcRegion() {
        return Optional.ofNullable(this.vpcRegion);
    }

    private ZoneVpcArgs() {}

    private ZoneVpcArgs(ZoneVpcArgs $) {
        this.vpcId = $.vpcId;
        this.vpcRegion = $.vpcRegion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZoneVpcArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZoneVpcArgs $;

        public Builder() {
            $ = new ZoneVpcArgs();
        }

        public Builder(ZoneVpcArgs defaults) {
            $ = new ZoneVpcArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param vpcId ID of the VPC to associate.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId ID of the VPC to associate.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        /**
         * @param vpcRegion Region of the VPC to associate. Defaults to AWS provider region.
         * 
         * @return builder
         * 
         */
        public Builder vpcRegion(@Nullable Output<String> vpcRegion) {
            $.vpcRegion = vpcRegion;
            return this;
        }

        /**
         * @param vpcRegion Region of the VPC to associate. Defaults to AWS provider region.
         * 
         * @return builder
         * 
         */
        public Builder vpcRegion(String vpcRegion) {
            return vpcRegion(Output.of(vpcRegion));
        }

        public ZoneVpcArgs build() {
            if ($.vpcId == null) {
                throw new MissingRequiredPropertyException("ZoneVpcArgs", "vpcId");
            }
            return $;
        }
    }

}
