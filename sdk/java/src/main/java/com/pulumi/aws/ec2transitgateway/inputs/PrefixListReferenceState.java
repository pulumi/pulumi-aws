// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2transitgateway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PrefixListReferenceState extends com.pulumi.resources.ResourceArgs {

    public static final PrefixListReferenceState Empty = new PrefixListReferenceState();

    /**
     * Indicates whether to drop traffic that matches the Prefix List. Defaults to `false`.
     * 
     */
    @Import(name="blackhole")
    private @Nullable Output<Boolean> blackhole;

    /**
     * @return Indicates whether to drop traffic that matches the Prefix List. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> blackhole() {
        return Optional.ofNullable(this.blackhole);
    }

    /**
     * Identifier of EC2 Prefix List.
     * 
     */
    @Import(name="prefixListId")
    private @Nullable Output<String> prefixListId;

    /**
     * @return Identifier of EC2 Prefix List.
     * 
     */
    public Optional<Output<String>> prefixListId() {
        return Optional.ofNullable(this.prefixListId);
    }

    @Import(name="prefixListOwnerId")
    private @Nullable Output<String> prefixListOwnerId;

    public Optional<Output<String>> prefixListOwnerId() {
        return Optional.ofNullable(this.prefixListOwnerId);
    }

    /**
     * Identifier of EC2 Transit Gateway Attachment.
     * 
     */
    @Import(name="transitGatewayAttachmentId")
    private @Nullable Output<String> transitGatewayAttachmentId;

    /**
     * @return Identifier of EC2 Transit Gateway Attachment.
     * 
     */
    public Optional<Output<String>> transitGatewayAttachmentId() {
        return Optional.ofNullable(this.transitGatewayAttachmentId);
    }

    /**
     * Identifier of EC2 Transit Gateway Route Table.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="transitGatewayRouteTableId")
    private @Nullable Output<String> transitGatewayRouteTableId;

    /**
     * @return Identifier of EC2 Transit Gateway Route Table.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<String>> transitGatewayRouteTableId() {
        return Optional.ofNullable(this.transitGatewayRouteTableId);
    }

    private PrefixListReferenceState() {}

    private PrefixListReferenceState(PrefixListReferenceState $) {
        this.blackhole = $.blackhole;
        this.prefixListId = $.prefixListId;
        this.prefixListOwnerId = $.prefixListOwnerId;
        this.transitGatewayAttachmentId = $.transitGatewayAttachmentId;
        this.transitGatewayRouteTableId = $.transitGatewayRouteTableId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PrefixListReferenceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PrefixListReferenceState $;

        public Builder() {
            $ = new PrefixListReferenceState();
        }

        public Builder(PrefixListReferenceState defaults) {
            $ = new PrefixListReferenceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param blackhole Indicates whether to drop traffic that matches the Prefix List. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder blackhole(@Nullable Output<Boolean> blackhole) {
            $.blackhole = blackhole;
            return this;
        }

        /**
         * @param blackhole Indicates whether to drop traffic that matches the Prefix List. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder blackhole(Boolean blackhole) {
            return blackhole(Output.of(blackhole));
        }

        /**
         * @param prefixListId Identifier of EC2 Prefix List.
         * 
         * @return builder
         * 
         */
        public Builder prefixListId(@Nullable Output<String> prefixListId) {
            $.prefixListId = prefixListId;
            return this;
        }

        /**
         * @param prefixListId Identifier of EC2 Prefix List.
         * 
         * @return builder
         * 
         */
        public Builder prefixListId(String prefixListId) {
            return prefixListId(Output.of(prefixListId));
        }

        public Builder prefixListOwnerId(@Nullable Output<String> prefixListOwnerId) {
            $.prefixListOwnerId = prefixListOwnerId;
            return this;
        }

        public Builder prefixListOwnerId(String prefixListOwnerId) {
            return prefixListOwnerId(Output.of(prefixListOwnerId));
        }

        /**
         * @param transitGatewayAttachmentId Identifier of EC2 Transit Gateway Attachment.
         * 
         * @return builder
         * 
         */
        public Builder transitGatewayAttachmentId(@Nullable Output<String> transitGatewayAttachmentId) {
            $.transitGatewayAttachmentId = transitGatewayAttachmentId;
            return this;
        }

        /**
         * @param transitGatewayAttachmentId Identifier of EC2 Transit Gateway Attachment.
         * 
         * @return builder
         * 
         */
        public Builder transitGatewayAttachmentId(String transitGatewayAttachmentId) {
            return transitGatewayAttachmentId(Output.of(transitGatewayAttachmentId));
        }

        /**
         * @param transitGatewayRouteTableId Identifier of EC2 Transit Gateway Route Table.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder transitGatewayRouteTableId(@Nullable Output<String> transitGatewayRouteTableId) {
            $.transitGatewayRouteTableId = transitGatewayRouteTableId;
            return this;
        }

        /**
         * @param transitGatewayRouteTableId Identifier of EC2 Transit Gateway Route Table.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder transitGatewayRouteTableId(String transitGatewayRouteTableId) {
            return transitGatewayRouteTableId(Output.of(transitGatewayRouteTableId));
        }

        public PrefixListReferenceState build() {
            return $;
        }
    }

}
