// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.workspaces.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DirectoryWorkspaceAccessPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final DirectoryWorkspaceAccessPropertiesArgs Empty = new DirectoryWorkspaceAccessPropertiesArgs();

    @Import(name="deviceTypeAndroid")
    private @Nullable Output<String> deviceTypeAndroid;

    public Optional<Output<String>> deviceTypeAndroid() {
        return Optional.ofNullable(this.deviceTypeAndroid);
    }

    @Import(name="deviceTypeChromeos")
    private @Nullable Output<String> deviceTypeChromeos;

    public Optional<Output<String>> deviceTypeChromeos() {
        return Optional.ofNullable(this.deviceTypeChromeos);
    }

    @Import(name="deviceTypeIos")
    private @Nullable Output<String> deviceTypeIos;

    public Optional<Output<String>> deviceTypeIos() {
        return Optional.ofNullable(this.deviceTypeIos);
    }

    @Import(name="deviceTypeLinux")
    private @Nullable Output<String> deviceTypeLinux;

    public Optional<Output<String>> deviceTypeLinux() {
        return Optional.ofNullable(this.deviceTypeLinux);
    }

    @Import(name="deviceTypeOsx")
    private @Nullable Output<String> deviceTypeOsx;

    public Optional<Output<String>> deviceTypeOsx() {
        return Optional.ofNullable(this.deviceTypeOsx);
    }

    @Import(name="deviceTypeWeb")
    private @Nullable Output<String> deviceTypeWeb;

    public Optional<Output<String>> deviceTypeWeb() {
        return Optional.ofNullable(this.deviceTypeWeb);
    }

    @Import(name="deviceTypeWindows")
    private @Nullable Output<String> deviceTypeWindows;

    public Optional<Output<String>> deviceTypeWindows() {
        return Optional.ofNullable(this.deviceTypeWindows);
    }

    @Import(name="deviceTypeZeroclient")
    private @Nullable Output<String> deviceTypeZeroclient;

    public Optional<Output<String>> deviceTypeZeroclient() {
        return Optional.ofNullable(this.deviceTypeZeroclient);
    }

    private DirectoryWorkspaceAccessPropertiesArgs() {}

    private DirectoryWorkspaceAccessPropertiesArgs(DirectoryWorkspaceAccessPropertiesArgs $) {
        this.deviceTypeAndroid = $.deviceTypeAndroid;
        this.deviceTypeChromeos = $.deviceTypeChromeos;
        this.deviceTypeIos = $.deviceTypeIos;
        this.deviceTypeLinux = $.deviceTypeLinux;
        this.deviceTypeOsx = $.deviceTypeOsx;
        this.deviceTypeWeb = $.deviceTypeWeb;
        this.deviceTypeWindows = $.deviceTypeWindows;
        this.deviceTypeZeroclient = $.deviceTypeZeroclient;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DirectoryWorkspaceAccessPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DirectoryWorkspaceAccessPropertiesArgs $;

        public Builder() {
            $ = new DirectoryWorkspaceAccessPropertiesArgs();
        }

        public Builder(DirectoryWorkspaceAccessPropertiesArgs defaults) {
            $ = new DirectoryWorkspaceAccessPropertiesArgs(Objects.requireNonNull(defaults));
        }

        public Builder deviceTypeAndroid(@Nullable Output<String> deviceTypeAndroid) {
            $.deviceTypeAndroid = deviceTypeAndroid;
            return this;
        }

        public Builder deviceTypeAndroid(String deviceTypeAndroid) {
            return deviceTypeAndroid(Output.of(deviceTypeAndroid));
        }

        public Builder deviceTypeChromeos(@Nullable Output<String> deviceTypeChromeos) {
            $.deviceTypeChromeos = deviceTypeChromeos;
            return this;
        }

        public Builder deviceTypeChromeos(String deviceTypeChromeos) {
            return deviceTypeChromeos(Output.of(deviceTypeChromeos));
        }

        public Builder deviceTypeIos(@Nullable Output<String> deviceTypeIos) {
            $.deviceTypeIos = deviceTypeIos;
            return this;
        }

        public Builder deviceTypeIos(String deviceTypeIos) {
            return deviceTypeIos(Output.of(deviceTypeIos));
        }

        public Builder deviceTypeLinux(@Nullable Output<String> deviceTypeLinux) {
            $.deviceTypeLinux = deviceTypeLinux;
            return this;
        }

        public Builder deviceTypeLinux(String deviceTypeLinux) {
            return deviceTypeLinux(Output.of(deviceTypeLinux));
        }

        public Builder deviceTypeOsx(@Nullable Output<String> deviceTypeOsx) {
            $.deviceTypeOsx = deviceTypeOsx;
            return this;
        }

        public Builder deviceTypeOsx(String deviceTypeOsx) {
            return deviceTypeOsx(Output.of(deviceTypeOsx));
        }

        public Builder deviceTypeWeb(@Nullable Output<String> deviceTypeWeb) {
            $.deviceTypeWeb = deviceTypeWeb;
            return this;
        }

        public Builder deviceTypeWeb(String deviceTypeWeb) {
            return deviceTypeWeb(Output.of(deviceTypeWeb));
        }

        public Builder deviceTypeWindows(@Nullable Output<String> deviceTypeWindows) {
            $.deviceTypeWindows = deviceTypeWindows;
            return this;
        }

        public Builder deviceTypeWindows(String deviceTypeWindows) {
            return deviceTypeWindows(Output.of(deviceTypeWindows));
        }

        public Builder deviceTypeZeroclient(@Nullable Output<String> deviceTypeZeroclient) {
            $.deviceTypeZeroclient = deviceTypeZeroclient;
            return this;
        }

        public Builder deviceTypeZeroclient(String deviceTypeZeroclient) {
            return deviceTypeZeroclient(Output.of(deviceTypeZeroclient));
        }

        public DirectoryWorkspaceAccessPropertiesArgs build() {
            return $;
        }
    }

}
