// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.workspaces.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDirectorySamlProperty {
    private String relayStateParameterName;
    private String status;
    private String userAccessUrl;

    private GetDirectorySamlProperty() {}
    public String relayStateParameterName() {
        return this.relayStateParameterName;
    }
    public String status() {
        return this.status;
    }
    public String userAccessUrl() {
        return this.userAccessUrl;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDirectorySamlProperty defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String relayStateParameterName;
        private String status;
        private String userAccessUrl;
        public Builder() {}
        public Builder(GetDirectorySamlProperty defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.relayStateParameterName = defaults.relayStateParameterName;
    	      this.status = defaults.status;
    	      this.userAccessUrl = defaults.userAccessUrl;
        }

        @CustomType.Setter
        public Builder relayStateParameterName(String relayStateParameterName) {
            if (relayStateParameterName == null) {
              throw new MissingRequiredPropertyException("GetDirectorySamlProperty", "relayStateParameterName");
            }
            this.relayStateParameterName = relayStateParameterName;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetDirectorySamlProperty", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder userAccessUrl(String userAccessUrl) {
            if (userAccessUrl == null) {
              throw new MissingRequiredPropertyException("GetDirectorySamlProperty", "userAccessUrl");
            }
            this.userAccessUrl = userAccessUrl;
            return this;
        }
        public GetDirectorySamlProperty build() {
            final var _resultValue = new GetDirectorySamlProperty();
            _resultValue.relayStateParameterName = relayStateParameterName;
            _resultValue.status = status;
            _resultValue.userAccessUrl = userAccessUrl;
            return _resultValue;
        }
    }
}
