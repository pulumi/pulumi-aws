// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDataSetColumnLevelPermissionRule {
    private List<String> columnNames;
    private List<String> principals;

    private GetDataSetColumnLevelPermissionRule() {}
    public List<String> columnNames() {
        return this.columnNames;
    }
    public List<String> principals() {
        return this.principals;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDataSetColumnLevelPermissionRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> columnNames;
        private List<String> principals;
        public Builder() {}
        public Builder(GetDataSetColumnLevelPermissionRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.columnNames = defaults.columnNames;
    	      this.principals = defaults.principals;
        }

        @CustomType.Setter
        public Builder columnNames(List<String> columnNames) {
            if (columnNames == null) {
              throw new MissingRequiredPropertyException("GetDataSetColumnLevelPermissionRule", "columnNames");
            }
            this.columnNames = columnNames;
            return this;
        }
        public Builder columnNames(String... columnNames) {
            return columnNames(List.of(columnNames));
        }
        @CustomType.Setter
        public Builder principals(List<String> principals) {
            if (principals == null) {
              throw new MissingRequiredPropertyException("GetDataSetColumnLevelPermissionRule", "principals");
            }
            this.principals = principals;
            return this;
        }
        public Builder principals(String... principals) {
            return principals(List.of(principals));
        }
        public GetDataSetColumnLevelPermissionRule build() {
            final var _resultValue = new GetDataSetColumnLevelPermissionRule();
            _resultValue.columnNames = columnNames;
            _resultValue.principals = principals;
            return _resultValue;
        }
    }
}
