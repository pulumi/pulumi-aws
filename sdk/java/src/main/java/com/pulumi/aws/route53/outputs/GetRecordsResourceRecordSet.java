// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.route53.outputs;

import com.pulumi.aws.route53.outputs.GetRecordsResourceRecordSetAliasTarget;
import com.pulumi.aws.route53.outputs.GetRecordsResourceRecordSetCidrRoutingConfig;
import com.pulumi.aws.route53.outputs.GetRecordsResourceRecordSetGeolocation;
import com.pulumi.aws.route53.outputs.GetRecordsResourceRecordSetGeoproximityLocation;
import com.pulumi.aws.route53.outputs.GetRecordsResourceRecordSetResourceRecord;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRecordsResourceRecordSet {
    /**
     * @return Information about the AWS resource traffic is routed to.
     * 
     */
    private GetRecordsResourceRecordSetAliasTarget aliasTarget;
    /**
     * @return Information about the CIDR location traffic is routed to.
     * 
     */
    private GetRecordsResourceRecordSetCidrRoutingConfig cidrRoutingConfig;
    /**
     * @return `PRIMARY` or `SECONDARY`.
     * 
     */
    private String failover;
    /**
     * @return Information about how Amazon Route 53 responds to DNS queries based on the geographic origin of the query.
     * 
     */
    private GetRecordsResourceRecordSetGeolocation geolocation;
    /**
     * @return Information about how Amazon Route 53 responds to DNS queries based on the geographic origin of the query.
     * 
     */
    private GetRecordsResourceRecordSetGeoproximityLocation geoproximityLocation;
    /**
     * @return ID of any applicable health check.
     * 
     */
    private String healthCheckId;
    /**
     * @return Traffic is routed approximately randomly to multiple resources.
     * 
     */
    private Boolean multiValueAnswer;
    /**
     * @return The name of the record.
     * 
     */
    private String name;
    /**
     * @return The Amazon EC2 Region of the resource that this resource record set refers to.
     * 
     */
    private String region;
    /**
     * @return The resource records.
     * 
     */
    private List<GetRecordsResourceRecordSetResourceRecord> resourceRecords;
    /**
     * @return An identifier that differentiates among multiple resource record sets that have the same combination of name and type.
     * 
     */
    private String setIdentifier;
    /**
     * @return The ID of any traffic policy instance that Route 53 created this resource record set for.
     * 
     */
    private String trafficPolicyInstanceId;
    /**
     * @return The resource record cache time to live (TTL), in seconds.
     * 
     */
    private Integer ttl;
    /**
     * @return The DNS record type.
     * 
     */
    private String type;
    /**
     * @return Among resource record sets that have the same combination of DNS name and type, a value that determines the proportion of DNS queries that Amazon Route 53 responds to using the current resource record set.
     * 
     */
    private Integer weight;

    private GetRecordsResourceRecordSet() {}
    /**
     * @return Information about the AWS resource traffic is routed to.
     * 
     */
    public GetRecordsResourceRecordSetAliasTarget aliasTarget() {
        return this.aliasTarget;
    }
    /**
     * @return Information about the CIDR location traffic is routed to.
     * 
     */
    public GetRecordsResourceRecordSetCidrRoutingConfig cidrRoutingConfig() {
        return this.cidrRoutingConfig;
    }
    /**
     * @return `PRIMARY` or `SECONDARY`.
     * 
     */
    public String failover() {
        return this.failover;
    }
    /**
     * @return Information about how Amazon Route 53 responds to DNS queries based on the geographic origin of the query.
     * 
     */
    public GetRecordsResourceRecordSetGeolocation geolocation() {
        return this.geolocation;
    }
    /**
     * @return Information about how Amazon Route 53 responds to DNS queries based on the geographic origin of the query.
     * 
     */
    public GetRecordsResourceRecordSetGeoproximityLocation geoproximityLocation() {
        return this.geoproximityLocation;
    }
    /**
     * @return ID of any applicable health check.
     * 
     */
    public String healthCheckId() {
        return this.healthCheckId;
    }
    /**
     * @return Traffic is routed approximately randomly to multiple resources.
     * 
     */
    public Boolean multiValueAnswer() {
        return this.multiValueAnswer;
    }
    /**
     * @return The name of the record.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The Amazon EC2 Region of the resource that this resource record set refers to.
     * 
     */
    public String region() {
        return this.region;
    }
    /**
     * @return The resource records.
     * 
     */
    public List<GetRecordsResourceRecordSetResourceRecord> resourceRecords() {
        return this.resourceRecords;
    }
    /**
     * @return An identifier that differentiates among multiple resource record sets that have the same combination of name and type.
     * 
     */
    public String setIdentifier() {
        return this.setIdentifier;
    }
    /**
     * @return The ID of any traffic policy instance that Route 53 created this resource record set for.
     * 
     */
    public String trafficPolicyInstanceId() {
        return this.trafficPolicyInstanceId;
    }
    /**
     * @return The resource record cache time to live (TTL), in seconds.
     * 
     */
    public Integer ttl() {
        return this.ttl;
    }
    /**
     * @return The DNS record type.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Among resource record sets that have the same combination of DNS name and type, a value that determines the proportion of DNS queries that Amazon Route 53 responds to using the current resource record set.
     * 
     */
    public Integer weight() {
        return this.weight;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRecordsResourceRecordSet defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetRecordsResourceRecordSetAliasTarget aliasTarget;
        private GetRecordsResourceRecordSetCidrRoutingConfig cidrRoutingConfig;
        private String failover;
        private GetRecordsResourceRecordSetGeolocation geolocation;
        private GetRecordsResourceRecordSetGeoproximityLocation geoproximityLocation;
        private String healthCheckId;
        private Boolean multiValueAnswer;
        private String name;
        private String region;
        private List<GetRecordsResourceRecordSetResourceRecord> resourceRecords;
        private String setIdentifier;
        private String trafficPolicyInstanceId;
        private Integer ttl;
        private String type;
        private Integer weight;
        public Builder() {}
        public Builder(GetRecordsResourceRecordSet defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aliasTarget = defaults.aliasTarget;
    	      this.cidrRoutingConfig = defaults.cidrRoutingConfig;
    	      this.failover = defaults.failover;
    	      this.geolocation = defaults.geolocation;
    	      this.geoproximityLocation = defaults.geoproximityLocation;
    	      this.healthCheckId = defaults.healthCheckId;
    	      this.multiValueAnswer = defaults.multiValueAnswer;
    	      this.name = defaults.name;
    	      this.region = defaults.region;
    	      this.resourceRecords = defaults.resourceRecords;
    	      this.setIdentifier = defaults.setIdentifier;
    	      this.trafficPolicyInstanceId = defaults.trafficPolicyInstanceId;
    	      this.ttl = defaults.ttl;
    	      this.type = defaults.type;
    	      this.weight = defaults.weight;
        }

        @CustomType.Setter
        public Builder aliasTarget(GetRecordsResourceRecordSetAliasTarget aliasTarget) {
            if (aliasTarget == null) {
              throw new MissingRequiredPropertyException("GetRecordsResourceRecordSet", "aliasTarget");
            }
            this.aliasTarget = aliasTarget;
            return this;
        }
        @CustomType.Setter
        public Builder cidrRoutingConfig(GetRecordsResourceRecordSetCidrRoutingConfig cidrRoutingConfig) {
            if (cidrRoutingConfig == null) {
              throw new MissingRequiredPropertyException("GetRecordsResourceRecordSet", "cidrRoutingConfig");
            }
            this.cidrRoutingConfig = cidrRoutingConfig;
            return this;
        }
        @CustomType.Setter
        public Builder failover(String failover) {
            if (failover == null) {
              throw new MissingRequiredPropertyException("GetRecordsResourceRecordSet", "failover");
            }
            this.failover = failover;
            return this;
        }
        @CustomType.Setter
        public Builder geolocation(GetRecordsResourceRecordSetGeolocation geolocation) {
            if (geolocation == null) {
              throw new MissingRequiredPropertyException("GetRecordsResourceRecordSet", "geolocation");
            }
            this.geolocation = geolocation;
            return this;
        }
        @CustomType.Setter
        public Builder geoproximityLocation(GetRecordsResourceRecordSetGeoproximityLocation geoproximityLocation) {
            if (geoproximityLocation == null) {
              throw new MissingRequiredPropertyException("GetRecordsResourceRecordSet", "geoproximityLocation");
            }
            this.geoproximityLocation = geoproximityLocation;
            return this;
        }
        @CustomType.Setter
        public Builder healthCheckId(String healthCheckId) {
            if (healthCheckId == null) {
              throw new MissingRequiredPropertyException("GetRecordsResourceRecordSet", "healthCheckId");
            }
            this.healthCheckId = healthCheckId;
            return this;
        }
        @CustomType.Setter
        public Builder multiValueAnswer(Boolean multiValueAnswer) {
            if (multiValueAnswer == null) {
              throw new MissingRequiredPropertyException("GetRecordsResourceRecordSet", "multiValueAnswer");
            }
            this.multiValueAnswer = multiValueAnswer;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetRecordsResourceRecordSet", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetRecordsResourceRecordSet", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder resourceRecords(List<GetRecordsResourceRecordSetResourceRecord> resourceRecords) {
            if (resourceRecords == null) {
              throw new MissingRequiredPropertyException("GetRecordsResourceRecordSet", "resourceRecords");
            }
            this.resourceRecords = resourceRecords;
            return this;
        }
        public Builder resourceRecords(GetRecordsResourceRecordSetResourceRecord... resourceRecords) {
            return resourceRecords(List.of(resourceRecords));
        }
        @CustomType.Setter
        public Builder setIdentifier(String setIdentifier) {
            if (setIdentifier == null) {
              throw new MissingRequiredPropertyException("GetRecordsResourceRecordSet", "setIdentifier");
            }
            this.setIdentifier = setIdentifier;
            return this;
        }
        @CustomType.Setter
        public Builder trafficPolicyInstanceId(String trafficPolicyInstanceId) {
            if (trafficPolicyInstanceId == null) {
              throw new MissingRequiredPropertyException("GetRecordsResourceRecordSet", "trafficPolicyInstanceId");
            }
            this.trafficPolicyInstanceId = trafficPolicyInstanceId;
            return this;
        }
        @CustomType.Setter
        public Builder ttl(Integer ttl) {
            if (ttl == null) {
              throw new MissingRequiredPropertyException("GetRecordsResourceRecordSet", "ttl");
            }
            this.ttl = ttl;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetRecordsResourceRecordSet", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder weight(Integer weight) {
            if (weight == null) {
              throw new MissingRequiredPropertyException("GetRecordsResourceRecordSet", "weight");
            }
            this.weight = weight;
            return this;
        }
        public GetRecordsResourceRecordSet build() {
            final var _resultValue = new GetRecordsResourceRecordSet();
            _resultValue.aliasTarget = aliasTarget;
            _resultValue.cidrRoutingConfig = cidrRoutingConfig;
            _resultValue.failover = failover;
            _resultValue.geolocation = geolocation;
            _resultValue.geoproximityLocation = geoproximityLocation;
            _resultValue.healthCheckId = healthCheckId;
            _resultValue.multiValueAnswer = multiValueAnswer;
            _resultValue.name = name;
            _resultValue.region = region;
            _resultValue.resourceRecords = resourceRecords;
            _resultValue.setIdentifier = setIdentifier;
            _resultValue.trafficPolicyInstanceId = trafficPolicyInstanceId;
            _resultValue.ttl = ttl;
            _resultValue.type = type;
            _resultValue.weight = weight;
            return _resultValue;
        }
    }
}
