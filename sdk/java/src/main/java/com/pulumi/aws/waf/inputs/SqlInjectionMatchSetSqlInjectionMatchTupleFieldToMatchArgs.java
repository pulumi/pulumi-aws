// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.waf.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchArgs extends com.pulumi.resources.ResourceArgs {

    public static final SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchArgs Empty = new SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchArgs();

    @Import(name="data")
    private @Nullable Output<String> data;

    public Optional<Output<String>> data() {
        return Optional.ofNullable(this.data);
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    private SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchArgs() {}

    private SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchArgs(SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchArgs $) {
        this.data = $.data;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchArgs $;

        public Builder() {
            $ = new SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchArgs();
        }

        public Builder(SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchArgs defaults) {
            $ = new SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchArgs(Objects.requireNonNull(defaults));
        }

        public Builder data(@Nullable Output<String> data) {
            $.data = data;
            return this;
        }

        public Builder data(String data) {
            return data(Output.of(data));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchArgs", "type");
            }
            return $;
        }
    }

}
