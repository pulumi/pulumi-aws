// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appflow.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceArgs Empty = new ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceArgs();

    @Import(name="instanceUrl")
    private @Nullable Output<String> instanceUrl;

    public Optional<Output<String>> instanceUrl() {
        return Optional.ofNullable(this.instanceUrl);
    }

    /**
     * Indicates whether the connector profile applies to a sandbox or production environment.
     * 
     */
    @Import(name="isSandboxEnvironment")
    private @Nullable Output<Boolean> isSandboxEnvironment;

    /**
     * @return Indicates whether the connector profile applies to a sandbox or production environment.
     * 
     */
    public Optional<Output<Boolean>> isSandboxEnvironment() {
        return Optional.ofNullable(this.isSandboxEnvironment);
    }

    /**
     * Indicates whether Amazon AppFlow uses the private network to send metadata and authorization calls to Salesforce. Amazon AppFlow sends private calls through AWS PrivateLink. These calls travel through AWS infrastructure without being exposed to the public internet.
     * 
     */
    @Import(name="usePrivatelinkForMetadataAndAuthorization")
    private @Nullable Output<Boolean> usePrivatelinkForMetadataAndAuthorization;

    /**
     * @return Indicates whether Amazon AppFlow uses the private network to send metadata and authorization calls to Salesforce. Amazon AppFlow sends private calls through AWS PrivateLink. These calls travel through AWS infrastructure without being exposed to the public internet.
     * 
     */
    public Optional<Output<Boolean>> usePrivatelinkForMetadataAndAuthorization() {
        return Optional.ofNullable(this.usePrivatelinkForMetadataAndAuthorization);
    }

    private ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceArgs() {}

    private ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceArgs(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceArgs $) {
        this.instanceUrl = $.instanceUrl;
        this.isSandboxEnvironment = $.isSandboxEnvironment;
        this.usePrivatelinkForMetadataAndAuthorization = $.usePrivatelinkForMetadataAndAuthorization;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceArgs $;

        public Builder() {
            $ = new ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceArgs();
        }

        public Builder(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceArgs defaults) {
            $ = new ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceArgs(Objects.requireNonNull(defaults));
        }

        public Builder instanceUrl(@Nullable Output<String> instanceUrl) {
            $.instanceUrl = instanceUrl;
            return this;
        }

        public Builder instanceUrl(String instanceUrl) {
            return instanceUrl(Output.of(instanceUrl));
        }

        /**
         * @param isSandboxEnvironment Indicates whether the connector profile applies to a sandbox or production environment.
         * 
         * @return builder
         * 
         */
        public Builder isSandboxEnvironment(@Nullable Output<Boolean> isSandboxEnvironment) {
            $.isSandboxEnvironment = isSandboxEnvironment;
            return this;
        }

        /**
         * @param isSandboxEnvironment Indicates whether the connector profile applies to a sandbox or production environment.
         * 
         * @return builder
         * 
         */
        public Builder isSandboxEnvironment(Boolean isSandboxEnvironment) {
            return isSandboxEnvironment(Output.of(isSandboxEnvironment));
        }

        /**
         * @param usePrivatelinkForMetadataAndAuthorization Indicates whether Amazon AppFlow uses the private network to send metadata and authorization calls to Salesforce. Amazon AppFlow sends private calls through AWS PrivateLink. These calls travel through AWS infrastructure without being exposed to the public internet.
         * 
         * @return builder
         * 
         */
        public Builder usePrivatelinkForMetadataAndAuthorization(@Nullable Output<Boolean> usePrivatelinkForMetadataAndAuthorization) {
            $.usePrivatelinkForMetadataAndAuthorization = usePrivatelinkForMetadataAndAuthorization;
            return this;
        }

        /**
         * @param usePrivatelinkForMetadataAndAuthorization Indicates whether Amazon AppFlow uses the private network to send metadata and authorization calls to Salesforce. Amazon AppFlow sends private calls through AWS PrivateLink. These calls travel through AWS infrastructure without being exposed to the public internet.
         * 
         * @return builder
         * 
         */
        public Builder usePrivatelinkForMetadataAndAuthorization(Boolean usePrivatelinkForMetadataAndAuthorization) {
            return usePrivatelinkForMetadataAndAuthorization(Output.of(usePrivatelinkForMetadataAndAuthorization));
        }

        public ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceArgs build() {
            return $;
        }
    }

}
