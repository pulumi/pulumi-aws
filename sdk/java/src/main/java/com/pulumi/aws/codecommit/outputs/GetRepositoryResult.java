// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codecommit.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRepositoryResult {
    /**
     * @return ARN of the repository
     * 
     */
    private @Nullable String arn;
    /**
     * @return URL to use for cloning the repository over HTTPS.
     * 
     */
    private @Nullable String cloneUrlHttp;
    /**
     * @return URL to use for cloning the repository over SSH.
     * 
     */
    private @Nullable String cloneUrlSsh;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return ID of the repository
     * 
     */
    private @Nullable String repositoryId;
    private String repositoryName;

    private GetRepositoryResult() {}
    /**
     * @return ARN of the repository
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return URL to use for cloning the repository over HTTPS.
     * 
     */
    public Optional<String> cloneUrlHttp() {
        return Optional.ofNullable(this.cloneUrlHttp);
    }
    /**
     * @return URL to use for cloning the repository over SSH.
     * 
     */
    public Optional<String> cloneUrlSsh() {
        return Optional.ofNullable(this.cloneUrlSsh);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return ID of the repository
     * 
     */
    public Optional<String> repositoryId() {
        return Optional.ofNullable(this.repositoryId);
    }
    public String repositoryName() {
        return this.repositoryName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRepositoryResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String cloneUrlHttp;
        private @Nullable String cloneUrlSsh;
        private @Nullable String id;
        private @Nullable String repositoryId;
        private String repositoryName;
        public Builder() {}
        public Builder(GetRepositoryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.cloneUrlHttp = defaults.cloneUrlHttp;
    	      this.cloneUrlSsh = defaults.cloneUrlSsh;
    	      this.id = defaults.id;
    	      this.repositoryId = defaults.repositoryId;
    	      this.repositoryName = defaults.repositoryName;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder cloneUrlHttp(@Nullable String cloneUrlHttp) {
            this.cloneUrlHttp = cloneUrlHttp;
            return this;
        }
        @CustomType.Setter
        public Builder cloneUrlSsh(@Nullable String cloneUrlSsh) {
            this.cloneUrlSsh = cloneUrlSsh;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder repositoryId(@Nullable String repositoryId) {
            this.repositoryId = repositoryId;
            return this;
        }
        @CustomType.Setter
        public Builder repositoryName(String repositoryName) {
            this.repositoryName = Objects.requireNonNull(repositoryName);
            return this;
        }
        public GetRepositoryResult build() {
            final var o = new GetRepositoryResult();
            o.arn = arn;
            o.cloneUrlHttp = cloneUrlHttp;
            o.cloneUrlSsh = cloneUrlSsh;
            o.id = id;
            o.repositoryId = repositoryId;
            o.repositoryName = repositoryName;
            return o;
        }
    }
}
