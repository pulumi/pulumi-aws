// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloud9;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EnvironmentEC2Args extends com.pulumi.resources.ResourceArgs {

    public static final EnvironmentEC2Args Empty = new EnvironmentEC2Args();

    @Import(name="automaticStopTimeMinutes")
    private @Nullable Output<Integer> automaticStopTimeMinutes;

    public Optional<Output<Integer>> automaticStopTimeMinutes() {
        return Optional.ofNullable(this.automaticStopTimeMinutes);
    }

    @Import(name="connectionType")
    private @Nullable Output<String> connectionType;

    public Optional<Output<String>> connectionType() {
        return Optional.ofNullable(this.connectionType);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="imageId")
    private @Nullable Output<String> imageId;

    public Optional<Output<String>> imageId() {
        return Optional.ofNullable(this.imageId);
    }

    @Import(name="instanceType", required=true)
    private Output<String> instanceType;

    public Output<String> instanceType() {
        return this.instanceType;
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="ownerArn")
    private @Nullable Output<String> ownerArn;

    public Optional<Output<String>> ownerArn() {
        return Optional.ofNullable(this.ownerArn);
    }

    @Import(name="subnetId")
    private @Nullable Output<String> subnetId;

    public Optional<Output<String>> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private EnvironmentEC2Args() {}

    private EnvironmentEC2Args(EnvironmentEC2Args $) {
        this.automaticStopTimeMinutes = $.automaticStopTimeMinutes;
        this.connectionType = $.connectionType;
        this.description = $.description;
        this.imageId = $.imageId;
        this.instanceType = $.instanceType;
        this.name = $.name;
        this.ownerArn = $.ownerArn;
        this.subnetId = $.subnetId;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnvironmentEC2Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnvironmentEC2Args $;

        public Builder() {
            $ = new EnvironmentEC2Args();
        }

        public Builder(EnvironmentEC2Args defaults) {
            $ = new EnvironmentEC2Args(Objects.requireNonNull(defaults));
        }

        public Builder automaticStopTimeMinutes(@Nullable Output<Integer> automaticStopTimeMinutes) {
            $.automaticStopTimeMinutes = automaticStopTimeMinutes;
            return this;
        }

        public Builder automaticStopTimeMinutes(Integer automaticStopTimeMinutes) {
            return automaticStopTimeMinutes(Output.of(automaticStopTimeMinutes));
        }

        public Builder connectionType(@Nullable Output<String> connectionType) {
            $.connectionType = connectionType;
            return this;
        }

        public Builder connectionType(String connectionType) {
            return connectionType(Output.of(connectionType));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder imageId(@Nullable Output<String> imageId) {
            $.imageId = imageId;
            return this;
        }

        public Builder imageId(String imageId) {
            return imageId(Output.of(imageId));
        }

        public Builder instanceType(Output<String> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        public Builder instanceType(String instanceType) {
            return instanceType(Output.of(instanceType));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder ownerArn(@Nullable Output<String> ownerArn) {
            $.ownerArn = ownerArn;
            return this;
        }

        public Builder ownerArn(String ownerArn) {
            return ownerArn(Output.of(ownerArn));
        }

        public Builder subnetId(@Nullable Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public EnvironmentEC2Args build() {
            $.instanceType = Objects.requireNonNull($.instanceType, "expected parameter 'instanceType' to be non-null");
            return $;
        }
    }

}
