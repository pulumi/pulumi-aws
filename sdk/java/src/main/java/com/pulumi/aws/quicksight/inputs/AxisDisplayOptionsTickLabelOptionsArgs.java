// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.LabelOptionsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AxisDisplayOptionsTickLabelOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final AxisDisplayOptionsTickLabelOptionsArgs Empty = new AxisDisplayOptionsTickLabelOptionsArgs();

    @Import(name="labelOptions")
    private @Nullable Output<LabelOptionsArgs> labelOptions;

    public Optional<Output<LabelOptionsArgs>> labelOptions() {
        return Optional.ofNullable(this.labelOptions);
    }

    @Import(name="rotationAngle")
    private @Nullable Output<Double> rotationAngle;

    public Optional<Output<Double>> rotationAngle() {
        return Optional.ofNullable(this.rotationAngle);
    }

    private AxisDisplayOptionsTickLabelOptionsArgs() {}

    private AxisDisplayOptionsTickLabelOptionsArgs(AxisDisplayOptionsTickLabelOptionsArgs $) {
        this.labelOptions = $.labelOptions;
        this.rotationAngle = $.rotationAngle;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AxisDisplayOptionsTickLabelOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AxisDisplayOptionsTickLabelOptionsArgs $;

        public Builder() {
            $ = new AxisDisplayOptionsTickLabelOptionsArgs();
        }

        public Builder(AxisDisplayOptionsTickLabelOptionsArgs defaults) {
            $ = new AxisDisplayOptionsTickLabelOptionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder labelOptions(@Nullable Output<LabelOptionsArgs> labelOptions) {
            $.labelOptions = labelOptions;
            return this;
        }

        public Builder labelOptions(LabelOptionsArgs labelOptions) {
            return labelOptions(Output.of(labelOptions));
        }

        public Builder rotationAngle(@Nullable Output<Double> rotationAngle) {
            $.rotationAngle = rotationAngle;
            return this;
        }

        public Builder rotationAngle(Double rotationAngle) {
            return rotationAngle(Output.of(rotationAngle));
        }

        public AxisDisplayOptionsTickLabelOptionsArgs build() {
            return $;
        }
    }

}
