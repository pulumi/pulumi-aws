// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apigatewayv2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class StageRouteSetting {
    private @Nullable Boolean dataTraceEnabled;
    private @Nullable Boolean detailedMetricsEnabled;
    private @Nullable String loggingLevel;
    private String routeKey;
    private @Nullable Integer throttlingBurstLimit;
    private @Nullable Double throttlingRateLimit;

    private StageRouteSetting() {}
    public Optional<Boolean> dataTraceEnabled() {
        return Optional.ofNullable(this.dataTraceEnabled);
    }
    public Optional<Boolean> detailedMetricsEnabled() {
        return Optional.ofNullable(this.detailedMetricsEnabled);
    }
    public Optional<String> loggingLevel() {
        return Optional.ofNullable(this.loggingLevel);
    }
    public String routeKey() {
        return this.routeKey;
    }
    public Optional<Integer> throttlingBurstLimit() {
        return Optional.ofNullable(this.throttlingBurstLimit);
    }
    public Optional<Double> throttlingRateLimit() {
        return Optional.ofNullable(this.throttlingRateLimit);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StageRouteSetting defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean dataTraceEnabled;
        private @Nullable Boolean detailedMetricsEnabled;
        private @Nullable String loggingLevel;
        private String routeKey;
        private @Nullable Integer throttlingBurstLimit;
        private @Nullable Double throttlingRateLimit;
        public Builder() {}
        public Builder(StageRouteSetting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataTraceEnabled = defaults.dataTraceEnabled;
    	      this.detailedMetricsEnabled = defaults.detailedMetricsEnabled;
    	      this.loggingLevel = defaults.loggingLevel;
    	      this.routeKey = defaults.routeKey;
    	      this.throttlingBurstLimit = defaults.throttlingBurstLimit;
    	      this.throttlingRateLimit = defaults.throttlingRateLimit;
        }

        @CustomType.Setter
        public Builder dataTraceEnabled(@Nullable Boolean dataTraceEnabled) {
            this.dataTraceEnabled = dataTraceEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder detailedMetricsEnabled(@Nullable Boolean detailedMetricsEnabled) {
            this.detailedMetricsEnabled = detailedMetricsEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder loggingLevel(@Nullable String loggingLevel) {
            this.loggingLevel = loggingLevel;
            return this;
        }
        @CustomType.Setter
        public Builder routeKey(String routeKey) {
            this.routeKey = Objects.requireNonNull(routeKey);
            return this;
        }
        @CustomType.Setter
        public Builder throttlingBurstLimit(@Nullable Integer throttlingBurstLimit) {
            this.throttlingBurstLimit = throttlingBurstLimit;
            return this;
        }
        @CustomType.Setter
        public Builder throttlingRateLimit(@Nullable Double throttlingRateLimit) {
            this.throttlingRateLimit = throttlingRateLimit;
            return this;
        }
        public StageRouteSetting build() {
            final var o = new StageRouteSetting();
            o.dataTraceEnabled = dataTraceEnabled;
            o.detailedMetricsEnabled = detailedMetricsEnabled;
            o.loggingLevel = loggingLevel;
            o.routeKey = routeKey;
            o.throttlingBurstLimit = throttlingBurstLimit;
            o.throttlingRateLimit = throttlingRateLimit;
            return o;
        }
    }
}
