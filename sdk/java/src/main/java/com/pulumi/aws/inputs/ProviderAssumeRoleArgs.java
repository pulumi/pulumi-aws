// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProviderAssumeRoleArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProviderAssumeRoleArgs Empty = new ProviderAssumeRoleArgs();

    @Import(name="duration")
    private @Nullable Output<String> duration;

    public Optional<Output<String>> duration() {
        return Optional.ofNullable(this.duration);
    }

    @Import(name="externalId")
    private @Nullable Output<String> externalId;

    public Optional<Output<String>> externalId() {
        return Optional.ofNullable(this.externalId);
    }

    @Import(name="policy")
    private @Nullable Output<String> policy;

    public Optional<Output<String>> policy() {
        return Optional.ofNullable(this.policy);
    }

    @Import(name="policyArns")
    private @Nullable Output<List<String>> policyArns;

    public Optional<Output<List<String>>> policyArns() {
        return Optional.ofNullable(this.policyArns);
    }

    @Import(name="roleArn")
    private @Nullable Output<String> roleArn;

    public Optional<Output<String>> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }

    @Import(name="sessionName")
    private @Nullable Output<String> sessionName;

    public Optional<Output<String>> sessionName() {
        return Optional.ofNullable(this.sessionName);
    }

    @Import(name="sourceIdentity")
    private @Nullable Output<String> sourceIdentity;

    public Optional<Output<String>> sourceIdentity() {
        return Optional.ofNullable(this.sourceIdentity);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="transitiveTagKeys")
    private @Nullable Output<List<String>> transitiveTagKeys;

    public Optional<Output<List<String>>> transitiveTagKeys() {
        return Optional.ofNullable(this.transitiveTagKeys);
    }

    private ProviderAssumeRoleArgs() {}

    private ProviderAssumeRoleArgs(ProviderAssumeRoleArgs $) {
        this.duration = $.duration;
        this.externalId = $.externalId;
        this.policy = $.policy;
        this.policyArns = $.policyArns;
        this.roleArn = $.roleArn;
        this.sessionName = $.sessionName;
        this.sourceIdentity = $.sourceIdentity;
        this.tags = $.tags;
        this.transitiveTagKeys = $.transitiveTagKeys;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProviderAssumeRoleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProviderAssumeRoleArgs $;

        public Builder() {
            $ = new ProviderAssumeRoleArgs();
        }

        public Builder(ProviderAssumeRoleArgs defaults) {
            $ = new ProviderAssumeRoleArgs(Objects.requireNonNull(defaults));
        }

        public Builder duration(@Nullable Output<String> duration) {
            $.duration = duration;
            return this;
        }

        public Builder duration(String duration) {
            return duration(Output.of(duration));
        }

        public Builder externalId(@Nullable Output<String> externalId) {
            $.externalId = externalId;
            return this;
        }

        public Builder externalId(String externalId) {
            return externalId(Output.of(externalId));
        }

        public Builder policy(@Nullable Output<String> policy) {
            $.policy = policy;
            return this;
        }

        public Builder policy(String policy) {
            return policy(Output.of(policy));
        }

        public Builder policyArns(@Nullable Output<List<String>> policyArns) {
            $.policyArns = policyArns;
            return this;
        }

        public Builder policyArns(List<String> policyArns) {
            return policyArns(Output.of(policyArns));
        }

        public Builder policyArns(String... policyArns) {
            return policyArns(List.of(policyArns));
        }

        public Builder roleArn(@Nullable Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public Builder sessionName(@Nullable Output<String> sessionName) {
            $.sessionName = sessionName;
            return this;
        }

        public Builder sessionName(String sessionName) {
            return sessionName(Output.of(sessionName));
        }

        public Builder sourceIdentity(@Nullable Output<String> sourceIdentity) {
            $.sourceIdentity = sourceIdentity;
            return this;
        }

        public Builder sourceIdentity(String sourceIdentity) {
            return sourceIdentity(Output.of(sourceIdentity));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder transitiveTagKeys(@Nullable Output<List<String>> transitiveTagKeys) {
            $.transitiveTagKeys = transitiveTagKeys;
            return this;
        }

        public Builder transitiveTagKeys(List<String> transitiveTagKeys) {
            return transitiveTagKeys(Output.of(transitiveTagKeys));
        }

        public Builder transitiveTagKeys(String... transitiveTagKeys) {
            return transitiveTagKeys(List.of(transitiveTagKeys));
        }

        public ProviderAssumeRoleArgs build() {
            return $;
        }
    }

}
