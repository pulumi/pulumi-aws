// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class AgentcoreMemoryStrategyConfigurationConsolidationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AgentcoreMemoryStrategyConfigurationConsolidationArgs Empty = new AgentcoreMemoryStrategyConfigurationConsolidationArgs();

    /**
     * Additional text to append to the model prompt for consolidation processing.
     * 
     */
    @Import(name="appendToPrompt", required=true)
    private Output<String> appendToPrompt;

    /**
     * @return Additional text to append to the model prompt for consolidation processing.
     * 
     */
    public Output<String> appendToPrompt() {
        return this.appendToPrompt;
    }

    /**
     * ID of the foundation model to use for consolidation processing.
     * 
     */
    @Import(name="modelId", required=true)
    private Output<String> modelId;

    /**
     * @return ID of the foundation model to use for consolidation processing.
     * 
     */
    public Output<String> modelId() {
        return this.modelId;
    }

    private AgentcoreMemoryStrategyConfigurationConsolidationArgs() {}

    private AgentcoreMemoryStrategyConfigurationConsolidationArgs(AgentcoreMemoryStrategyConfigurationConsolidationArgs $) {
        this.appendToPrompt = $.appendToPrompt;
        this.modelId = $.modelId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentcoreMemoryStrategyConfigurationConsolidationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentcoreMemoryStrategyConfigurationConsolidationArgs $;

        public Builder() {
            $ = new AgentcoreMemoryStrategyConfigurationConsolidationArgs();
        }

        public Builder(AgentcoreMemoryStrategyConfigurationConsolidationArgs defaults) {
            $ = new AgentcoreMemoryStrategyConfigurationConsolidationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param appendToPrompt Additional text to append to the model prompt for consolidation processing.
         * 
         * @return builder
         * 
         */
        public Builder appendToPrompt(Output<String> appendToPrompt) {
            $.appendToPrompt = appendToPrompt;
            return this;
        }

        /**
         * @param appendToPrompt Additional text to append to the model prompt for consolidation processing.
         * 
         * @return builder
         * 
         */
        public Builder appendToPrompt(String appendToPrompt) {
            return appendToPrompt(Output.of(appendToPrompt));
        }

        /**
         * @param modelId ID of the foundation model to use for consolidation processing.
         * 
         * @return builder
         * 
         */
        public Builder modelId(Output<String> modelId) {
            $.modelId = modelId;
            return this;
        }

        /**
         * @param modelId ID of the foundation model to use for consolidation processing.
         * 
         * @return builder
         * 
         */
        public Builder modelId(String modelId) {
            return modelId(Output.of(modelId));
        }

        public AgentcoreMemoryStrategyConfigurationConsolidationArgs build() {
            if ($.appendToPrompt == null) {
                throw new MissingRequiredPropertyException("AgentcoreMemoryStrategyConfigurationConsolidationArgs", "appendToPrompt");
            }
            if ($.modelId == null) {
                throw new MissingRequiredPropertyException("AgentcoreMemoryStrategyConfigurationConsolidationArgs", "modelId");
            }
            return $;
        }
    }

}
