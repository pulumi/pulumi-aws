// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VisualsTableVisualChartConfigurationPaginatedReportOptions {
    private @Nullable String overflowColumnHeaderVisibility;
    private @Nullable String verticalOverflowVisibility;

    private VisualsTableVisualChartConfigurationPaginatedReportOptions() {}
    public Optional<String> overflowColumnHeaderVisibility() {
        return Optional.ofNullable(this.overflowColumnHeaderVisibility);
    }
    public Optional<String> verticalOverflowVisibility() {
        return Optional.ofNullable(this.verticalOverflowVisibility);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VisualsTableVisualChartConfigurationPaginatedReportOptions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String overflowColumnHeaderVisibility;
        private @Nullable String verticalOverflowVisibility;
        public Builder() {}
        public Builder(VisualsTableVisualChartConfigurationPaginatedReportOptions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.overflowColumnHeaderVisibility = defaults.overflowColumnHeaderVisibility;
    	      this.verticalOverflowVisibility = defaults.verticalOverflowVisibility;
        }

        @CustomType.Setter
        public Builder overflowColumnHeaderVisibility(@Nullable String overflowColumnHeaderVisibility) {

            this.overflowColumnHeaderVisibility = overflowColumnHeaderVisibility;
            return this;
        }
        @CustomType.Setter
        public Builder verticalOverflowVisibility(@Nullable String verticalOverflowVisibility) {

            this.verticalOverflowVisibility = verticalOverflowVisibility;
            return this;
        }
        public VisualsTableVisualChartConfigurationPaginatedReportOptions build() {
            final var _resultValue = new VisualsTableVisualChartConfigurationPaginatedReportOptions();
            _resultValue.overflowColumnHeaderVisibility = overflowColumnHeaderVisibility;
            _resultValue.verticalOverflowVisibility = verticalOverflowVisibility;
            return _resultValue;
        }
    }
}
