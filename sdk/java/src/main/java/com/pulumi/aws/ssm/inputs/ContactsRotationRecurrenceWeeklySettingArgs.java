// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ssm.inputs;

import com.pulumi.aws.ssm.inputs.ContactsRotationRecurrenceWeeklySettingHandOffTimeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ContactsRotationRecurrenceWeeklySettingArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContactsRotationRecurrenceWeeklySettingArgs Empty = new ContactsRotationRecurrenceWeeklySettingArgs();

    /**
     * (Required) The day of the week when the shift coverage occurs.
     * 
     */
    @Import(name="dayOfWeek", required=true)
    private Output<String> dayOfWeek;

    /**
     * @return (Required) The day of the week when the shift coverage occurs.
     * 
     */
    public Output<String> dayOfWeek() {
        return this.dayOfWeek;
    }

    /**
     * (Required) The hand off time. See Hand Off Time for more details.
     * 
     */
    @Import(name="handOffTime")
    private @Nullable Output<ContactsRotationRecurrenceWeeklySettingHandOffTimeArgs> handOffTime;

    /**
     * @return (Required) The hand off time. See Hand Off Time for more details.
     * 
     */
    public Optional<Output<ContactsRotationRecurrenceWeeklySettingHandOffTimeArgs>> handOffTime() {
        return Optional.ofNullable(this.handOffTime);
    }

    private ContactsRotationRecurrenceWeeklySettingArgs() {}

    private ContactsRotationRecurrenceWeeklySettingArgs(ContactsRotationRecurrenceWeeklySettingArgs $) {
        this.dayOfWeek = $.dayOfWeek;
        this.handOffTime = $.handOffTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContactsRotationRecurrenceWeeklySettingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContactsRotationRecurrenceWeeklySettingArgs $;

        public Builder() {
            $ = new ContactsRotationRecurrenceWeeklySettingArgs();
        }

        public Builder(ContactsRotationRecurrenceWeeklySettingArgs defaults) {
            $ = new ContactsRotationRecurrenceWeeklySettingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dayOfWeek (Required) The day of the week when the shift coverage occurs.
         * 
         * @return builder
         * 
         */
        public Builder dayOfWeek(Output<String> dayOfWeek) {
            $.dayOfWeek = dayOfWeek;
            return this;
        }

        /**
         * @param dayOfWeek (Required) The day of the week when the shift coverage occurs.
         * 
         * @return builder
         * 
         */
        public Builder dayOfWeek(String dayOfWeek) {
            return dayOfWeek(Output.of(dayOfWeek));
        }

        /**
         * @param handOffTime (Required) The hand off time. See Hand Off Time for more details.
         * 
         * @return builder
         * 
         */
        public Builder handOffTime(@Nullable Output<ContactsRotationRecurrenceWeeklySettingHandOffTimeArgs> handOffTime) {
            $.handOffTime = handOffTime;
            return this;
        }

        /**
         * @param handOffTime (Required) The hand off time. See Hand Off Time for more details.
         * 
         * @return builder
         * 
         */
        public Builder handOffTime(ContactsRotationRecurrenceWeeklySettingHandOffTimeArgs handOffTime) {
            return handOffTime(Output.of(handOffTime));
        }

        public ContactsRotationRecurrenceWeeklySettingArgs build() {
            if ($.dayOfWeek == null) {
                throw new MissingRequiredPropertyException("ContactsRotationRecurrenceWeeklySettingArgs", "dayOfWeek");
            }
            return $;
        }
    }

}
