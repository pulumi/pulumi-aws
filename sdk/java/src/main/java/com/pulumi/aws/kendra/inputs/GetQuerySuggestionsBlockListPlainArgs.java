// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kendra.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetQuerySuggestionsBlockListPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetQuerySuggestionsBlockListPlainArgs Empty = new GetQuerySuggestionsBlockListPlainArgs();

    /**
     * Identifier of the index that contains the block list.
     * 
     */
    @Import(name="indexId", required=true)
    private String indexId;

    /**
     * @return Identifier of the index that contains the block list.
     * 
     */
    public String indexId() {
        return this.indexId;
    }

    /**
     * Identifier of the block list.
     * 
     */
    @Import(name="querySuggestionsBlockListId", required=true)
    private String querySuggestionsBlockListId;

    /**
     * @return Identifier of the block list.
     * 
     */
    public String querySuggestionsBlockListId() {
        return this.querySuggestionsBlockListId;
    }

    /**
     * Metadata that helps organize the block list you create.
     * 
     */
    @Import(name="tags")
    private @Nullable Map<String,String> tags;

    /**
     * @return Metadata that helps organize the block list you create.
     * 
     */
    public Optional<Map<String,String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private GetQuerySuggestionsBlockListPlainArgs() {}

    private GetQuerySuggestionsBlockListPlainArgs(GetQuerySuggestionsBlockListPlainArgs $) {
        this.indexId = $.indexId;
        this.querySuggestionsBlockListId = $.querySuggestionsBlockListId;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetQuerySuggestionsBlockListPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetQuerySuggestionsBlockListPlainArgs $;

        public Builder() {
            $ = new GetQuerySuggestionsBlockListPlainArgs();
        }

        public Builder(GetQuerySuggestionsBlockListPlainArgs defaults) {
            $ = new GetQuerySuggestionsBlockListPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param indexId Identifier of the index that contains the block list.
         * 
         * @return builder
         * 
         */
        public Builder indexId(String indexId) {
            $.indexId = indexId;
            return this;
        }

        /**
         * @param querySuggestionsBlockListId Identifier of the block list.
         * 
         * @return builder
         * 
         */
        public Builder querySuggestionsBlockListId(String querySuggestionsBlockListId) {
            $.querySuggestionsBlockListId = querySuggestionsBlockListId;
            return this;
        }

        /**
         * @param tags Metadata that helps organize the block list you create.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Map<String,String> tags) {
            $.tags = tags;
            return this;
        }

        public GetQuerySuggestionsBlockListPlainArgs build() {
            $.indexId = Objects.requireNonNull($.indexId, "expected parameter 'indexId' to be non-null");
            $.querySuggestionsBlockListId = Objects.requireNonNull($.querySuggestionsBlockListId, "expected parameter 'querySuggestionsBlockListId' to be non-null");
            return $;
        }
    }

}
