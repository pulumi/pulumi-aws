// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TemplateDefinitionSheetTextBoxArgs extends com.pulumi.resources.ResourceArgs {

    public static final TemplateDefinitionSheetTextBoxArgs Empty = new TemplateDefinitionSheetTextBoxArgs();

    @Import(name="content")
    private @Nullable Output<String> content;

    public Optional<Output<String>> content() {
        return Optional.ofNullable(this.content);
    }

    @Import(name="sheetTextBoxId", required=true)
    private Output<String> sheetTextBoxId;

    public Output<String> sheetTextBoxId() {
        return this.sheetTextBoxId;
    }

    private TemplateDefinitionSheetTextBoxArgs() {}

    private TemplateDefinitionSheetTextBoxArgs(TemplateDefinitionSheetTextBoxArgs $) {
        this.content = $.content;
        this.sheetTextBoxId = $.sheetTextBoxId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TemplateDefinitionSheetTextBoxArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TemplateDefinitionSheetTextBoxArgs $;

        public Builder() {
            $ = new TemplateDefinitionSheetTextBoxArgs();
        }

        public Builder(TemplateDefinitionSheetTextBoxArgs defaults) {
            $ = new TemplateDefinitionSheetTextBoxArgs(Objects.requireNonNull(defaults));
        }

        public Builder content(@Nullable Output<String> content) {
            $.content = content;
            return this;
        }

        public Builder content(String content) {
            return content(Output.of(content));
        }

        public Builder sheetTextBoxId(Output<String> sheetTextBoxId) {
            $.sheetTextBoxId = sheetTextBoxId;
            return this;
        }

        public Builder sheetTextBoxId(String sheetTextBoxId) {
            return sheetTextBoxId(Output.of(sheetTextBoxId));
        }

        public TemplateDefinitionSheetTextBoxArgs build() {
            if ($.sheetTextBoxId == null) {
                throw new MissingRequiredPropertyException("TemplateDefinitionSheetTextBoxArgs", "sheetTextBoxId");
            }
            return $;
        }
    }

}
