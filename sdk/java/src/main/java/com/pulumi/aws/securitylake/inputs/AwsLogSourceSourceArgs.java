// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.securitylake.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AwsLogSourceSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final AwsLogSourceSourceArgs Empty = new AwsLogSourceSourceArgs();

    /**
     * Specify the AWS account information where you want to enable Security Lake.
     * 
     */
    @Import(name="accounts")
    private @Nullable Output<List<String>> accounts;

    /**
     * @return Specify the AWS account information where you want to enable Security Lake.
     * 
     */
    public Optional<Output<List<String>>> accounts() {
        return Optional.ofNullable(this.accounts);
    }

    /**
     * Specify the Regions where you want to enable Security Lake.
     * 
     */
    @Import(name="regions", required=true)
    private Output<List<String>> regions;

    /**
     * @return Specify the Regions where you want to enable Security Lake.
     * 
     */
    public Output<List<String>> regions() {
        return this.regions;
    }

    /**
     * The name for a AWS source. This must be a Regionally unique value. Valid values: `ROUTE53`, `VPC_FLOW`, `SH_FINDINGS`, `CLOUD_TRAIL_MGMT`, `LAMBDA_EXECUTION`, `S3_DATA`.
     * 
     */
    @Import(name="sourceName", required=true)
    private Output<String> sourceName;

    /**
     * @return The name for a AWS source. This must be a Regionally unique value. Valid values: `ROUTE53`, `VPC_FLOW`, `SH_FINDINGS`, `CLOUD_TRAIL_MGMT`, `LAMBDA_EXECUTION`, `S3_DATA`.
     * 
     */
    public Output<String> sourceName() {
        return this.sourceName;
    }

    /**
     * The version for a AWS source. This must be a Regionally unique value.
     * 
     */
    @Import(name="sourceVersion")
    private @Nullable Output<String> sourceVersion;

    /**
     * @return The version for a AWS source. This must be a Regionally unique value.
     * 
     */
    public Optional<Output<String>> sourceVersion() {
        return Optional.ofNullable(this.sourceVersion);
    }

    private AwsLogSourceSourceArgs() {}

    private AwsLogSourceSourceArgs(AwsLogSourceSourceArgs $) {
        this.accounts = $.accounts;
        this.regions = $.regions;
        this.sourceName = $.sourceName;
        this.sourceVersion = $.sourceVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AwsLogSourceSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AwsLogSourceSourceArgs $;

        public Builder() {
            $ = new AwsLogSourceSourceArgs();
        }

        public Builder(AwsLogSourceSourceArgs defaults) {
            $ = new AwsLogSourceSourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accounts Specify the AWS account information where you want to enable Security Lake.
         * 
         * @return builder
         * 
         */
        public Builder accounts(@Nullable Output<List<String>> accounts) {
            $.accounts = accounts;
            return this;
        }

        /**
         * @param accounts Specify the AWS account information where you want to enable Security Lake.
         * 
         * @return builder
         * 
         */
        public Builder accounts(List<String> accounts) {
            return accounts(Output.of(accounts));
        }

        /**
         * @param accounts Specify the AWS account information where you want to enable Security Lake.
         * 
         * @return builder
         * 
         */
        public Builder accounts(String... accounts) {
            return accounts(List.of(accounts));
        }

        /**
         * @param regions Specify the Regions where you want to enable Security Lake.
         * 
         * @return builder
         * 
         */
        public Builder regions(Output<List<String>> regions) {
            $.regions = regions;
            return this;
        }

        /**
         * @param regions Specify the Regions where you want to enable Security Lake.
         * 
         * @return builder
         * 
         */
        public Builder regions(List<String> regions) {
            return regions(Output.of(regions));
        }

        /**
         * @param regions Specify the Regions where you want to enable Security Lake.
         * 
         * @return builder
         * 
         */
        public Builder regions(String... regions) {
            return regions(List.of(regions));
        }

        /**
         * @param sourceName The name for a AWS source. This must be a Regionally unique value. Valid values: `ROUTE53`, `VPC_FLOW`, `SH_FINDINGS`, `CLOUD_TRAIL_MGMT`, `LAMBDA_EXECUTION`, `S3_DATA`.
         * 
         * @return builder
         * 
         */
        public Builder sourceName(Output<String> sourceName) {
            $.sourceName = sourceName;
            return this;
        }

        /**
         * @param sourceName The name for a AWS source. This must be a Regionally unique value. Valid values: `ROUTE53`, `VPC_FLOW`, `SH_FINDINGS`, `CLOUD_TRAIL_MGMT`, `LAMBDA_EXECUTION`, `S3_DATA`.
         * 
         * @return builder
         * 
         */
        public Builder sourceName(String sourceName) {
            return sourceName(Output.of(sourceName));
        }

        /**
         * @param sourceVersion The version for a AWS source. This must be a Regionally unique value.
         * 
         * @return builder
         * 
         */
        public Builder sourceVersion(@Nullable Output<String> sourceVersion) {
            $.sourceVersion = sourceVersion;
            return this;
        }

        /**
         * @param sourceVersion The version for a AWS source. This must be a Regionally unique value.
         * 
         * @return builder
         * 
         */
        public Builder sourceVersion(String sourceVersion) {
            return sourceVersion(Output.of(sourceVersion));
        }

        public AwsLogSourceSourceArgs build() {
            if ($.regions == null) {
                throw new MissingRequiredPropertyException("AwsLogSourceSourceArgs", "regions");
            }
            if ($.sourceName == null) {
                throw new MissingRequiredPropertyException("AwsLogSourceSourceArgs", "sourceName");
            }
            return $;
        }
    }

}
