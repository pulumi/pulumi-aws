// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3control.inputs;

import com.pulumi.aws.s3control.inputs.ObjectLambdaAccessPointConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ObjectLambdaAccessPointState extends com.pulumi.resources.ResourceArgs {

    public static final ObjectLambdaAccessPointState Empty = new ObjectLambdaAccessPointState();

    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="configuration")
    private @Nullable Output<ObjectLambdaAccessPointConfigurationArgs> configuration;

    public Optional<Output<ObjectLambdaAccessPointConfigurationArgs>> configuration() {
        return Optional.ofNullable(this.configuration);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private ObjectLambdaAccessPointState() {}

    private ObjectLambdaAccessPointState(ObjectLambdaAccessPointState $) {
        this.accountId = $.accountId;
        this.arn = $.arn;
        this.configuration = $.configuration;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ObjectLambdaAccessPointState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ObjectLambdaAccessPointState $;

        public Builder() {
            $ = new ObjectLambdaAccessPointState();
        }

        public Builder(ObjectLambdaAccessPointState defaults) {
            $ = new ObjectLambdaAccessPointState(Objects.requireNonNull(defaults));
        }

        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder configuration(@Nullable Output<ObjectLambdaAccessPointConfigurationArgs> configuration) {
            $.configuration = configuration;
            return this;
        }

        public Builder configuration(ObjectLambdaAccessPointConfigurationArgs configuration) {
            return configuration(Output.of(configuration));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public ObjectLambdaAccessPointState build() {
            return $;
        }
    }

}
