// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iam.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetPolicyDocumentStatementConditionArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetPolicyDocumentStatementConditionArgs Empty = new GetPolicyDocumentStatementConditionArgs();

    @Import(name="test", required=true)
    private Output<String> test;

    public Output<String> test() {
        return this.test;
    }

    @Import(name="values", required=true)
    private Output<List<String>> values;

    public Output<List<String>> values() {
        return this.values;
    }

    @Import(name="variable", required=true)
    private Output<String> variable;

    public Output<String> variable() {
        return this.variable;
    }

    private GetPolicyDocumentStatementConditionArgs() {}

    private GetPolicyDocumentStatementConditionArgs(GetPolicyDocumentStatementConditionArgs $) {
        this.test = $.test;
        this.values = $.values;
        this.variable = $.variable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPolicyDocumentStatementConditionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPolicyDocumentStatementConditionArgs $;

        public Builder() {
            $ = new GetPolicyDocumentStatementConditionArgs();
        }

        public Builder(GetPolicyDocumentStatementConditionArgs defaults) {
            $ = new GetPolicyDocumentStatementConditionArgs(Objects.requireNonNull(defaults));
        }

        public Builder test(Output<String> test) {
            $.test = test;
            return this;
        }

        public Builder test(String test) {
            return test(Output.of(test));
        }

        public Builder values(Output<List<String>> values) {
            $.values = values;
            return this;
        }

        public Builder values(List<String> values) {
            return values(Output.of(values));
        }

        public Builder values(String... values) {
            return values(List.of(values));
        }

        public Builder variable(Output<String> variable) {
            $.variable = variable;
            return this;
        }

        public Builder variable(String variable) {
            return variable(Output.of(variable));
        }

        public GetPolicyDocumentStatementConditionArgs build() {
            $.test = Objects.requireNonNull($.test, "expected parameter 'test' to be non-null");
            $.values = Objects.requireNonNull($.values, "expected parameter 'values' to be non-null");
            $.variable = Objects.requireNonNull($.variable, "expected parameter 'variable' to be non-null");
            return $;
        }
    }

}
