// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.servicecatalog.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPortfolioResult {
    private @Nullable String acceptLanguage;
    /**
     * @return Portfolio ARN.
     * 
     */
    private String arn;
    /**
     * @return Time the portfolio was created.
     * 
     */
    private String createdTime;
    /**
     * @return Description of the portfolio
     * 
     */
    private String description;
    private String id;
    /**
     * @return Portfolio name.
     * 
     */
    private String name;
    /**
     * @return Name of the person or organization who owns the portfolio.
     * 
     */
    private String providerName;
    /**
     * @return Tags applied to the portfolio.
     * 
     */
    private Map<String,String> tags;

    private GetPortfolioResult() {}
    public Optional<String> acceptLanguage() {
        return Optional.ofNullable(this.acceptLanguage);
    }
    /**
     * @return Portfolio ARN.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return Time the portfolio was created.
     * 
     */
    public String createdTime() {
        return this.createdTime;
    }
    /**
     * @return Description of the portfolio
     * 
     */
    public String description() {
        return this.description;
    }
    public String id() {
        return this.id;
    }
    /**
     * @return Portfolio name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Name of the person or organization who owns the portfolio.
     * 
     */
    public String providerName() {
        return this.providerName;
    }
    /**
     * @return Tags applied to the portfolio.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPortfolioResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String acceptLanguage;
        private String arn;
        private String createdTime;
        private String description;
        private String id;
        private String name;
        private String providerName;
        private Map<String,String> tags;
        public Builder() {}
        public Builder(GetPortfolioResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acceptLanguage = defaults.acceptLanguage;
    	      this.arn = defaults.arn;
    	      this.createdTime = defaults.createdTime;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.providerName = defaults.providerName;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder acceptLanguage(@Nullable String acceptLanguage) {
            this.acceptLanguage = acceptLanguage;
            return this;
        }
        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder createdTime(String createdTime) {
            this.createdTime = Objects.requireNonNull(createdTime);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder providerName(String providerName) {
            this.providerName = Objects.requireNonNull(providerName);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public GetPortfolioResult build() {
            final var _resultValue = new GetPortfolioResult();
            _resultValue.acceptLanguage = acceptLanguage;
            _resultValue.arn = arn;
            _resultValue.createdTime = createdTime;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.providerName = providerName;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
