// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.servicecatalog.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPortfolioResult {
    private @Nullable String acceptLanguage;
    /**
     * @return Portfolio ARN.
     * 
     */
    private @Nullable String arn;
    /**
     * @return Time the portfolio was created.
     * 
     */
    private @Nullable String createdTime;
    /**
     * @return Description of the portfolio
     * 
     */
    private @Nullable String description;
    private String id;
    /**
     * @return Portfolio name.
     * 
     */
    private @Nullable String name;
    /**
     * @return Name of the person or organization who owns the portfolio.
     * 
     */
    private @Nullable String providerName;
    /**
     * @return Tags applied to the portfolio.
     * 
     */
    private @Nullable Map<String,String> tags;

    private GetPortfolioResult() {}
    public Optional<String> acceptLanguage() {
        return Optional.ofNullable(this.acceptLanguage);
    }
    /**
     * @return Portfolio ARN.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return Time the portfolio was created.
     * 
     */
    public Optional<String> createdTime() {
        return Optional.ofNullable(this.createdTime);
    }
    /**
     * @return Description of the portfolio
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    public String id() {
        return this.id;
    }
    /**
     * @return Portfolio name.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Name of the person or organization who owns the portfolio.
     * 
     */
    public Optional<String> providerName() {
        return Optional.ofNullable(this.providerName);
    }
    /**
     * @return Tags applied to the portfolio.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPortfolioResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String acceptLanguage;
        private @Nullable String arn;
        private @Nullable String createdTime;
        private @Nullable String description;
        private String id;
        private @Nullable String name;
        private @Nullable String providerName;
        private @Nullable Map<String,String> tags;
        public Builder() {}
        public Builder(GetPortfolioResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acceptLanguage = defaults.acceptLanguage;
    	      this.arn = defaults.arn;
    	      this.createdTime = defaults.createdTime;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.providerName = defaults.providerName;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder acceptLanguage(@Nullable String acceptLanguage) {
            this.acceptLanguage = acceptLanguage;
            return this;
        }
        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder createdTime(@Nullable String createdTime) {
            this.createdTime = createdTime;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder providerName(@Nullable String providerName) {
            this.providerName = providerName;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public GetPortfolioResult build() {
            final var o = new GetPortfolioResult();
            o.acceptLanguage = acceptLanguage;
            o.arn = arn;
            o.createdTime = createdTime;
            o.description = description;
            o.id = id;
            o.name = name;
            o.providerName = providerName;
            o.tags = tags;
            return o;
        }
    }
}
