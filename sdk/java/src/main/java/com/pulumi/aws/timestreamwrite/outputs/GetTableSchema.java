// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.timestreamwrite.outputs;

import com.pulumi.aws.timestreamwrite.outputs.GetTableSchemaCompositePartitionKey;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetTableSchema {
    private List<GetTableSchemaCompositePartitionKey> compositePartitionKeys;

    private GetTableSchema() {}
    public List<GetTableSchemaCompositePartitionKey> compositePartitionKeys() {
        return this.compositePartitionKeys;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTableSchema defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetTableSchemaCompositePartitionKey> compositePartitionKeys;
        public Builder() {}
        public Builder(GetTableSchema defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compositePartitionKeys = defaults.compositePartitionKeys;
        }

        @CustomType.Setter
        public Builder compositePartitionKeys(List<GetTableSchemaCompositePartitionKey> compositePartitionKeys) {
            if (compositePartitionKeys == null) {
              throw new MissingRequiredPropertyException("GetTableSchema", "compositePartitionKeys");
            }
            this.compositePartitionKeys = compositePartitionKeys;
            return this;
        }
        public Builder compositePartitionKeys(GetTableSchemaCompositePartitionKey... compositePartitionKeys) {
            return compositePartitionKeys(List.of(compositePartitionKeys));
        }
        public GetTableSchema build() {
            final var _resultValue = new GetTableSchema();
            _resultValue.compositePartitionKeys = compositePartitionKeys;
            return _resultValue;
        }
    }
}
