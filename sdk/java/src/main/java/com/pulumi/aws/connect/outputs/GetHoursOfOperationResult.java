// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.connect.outputs;

import com.pulumi.aws.connect.outputs.GetHoursOfOperationConfig;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetHoursOfOperationResult {
    private String arn;
    private List<GetHoursOfOperationConfig> configs;
    private String description;
    /**
     * @deprecated
     * use &#39;arn&#39; attribute instead
     * 
     */
    @Deprecated /* use 'arn' attribute instead */
    private String hoursOfOperationArn;
    private String hoursOfOperationId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String instanceId;
    private String name;
    private Map<String,String> tags;
    private String timeZone;

    private GetHoursOfOperationResult() {}
    public String arn() {
        return this.arn;
    }
    public List<GetHoursOfOperationConfig> configs() {
        return this.configs;
    }
    public String description() {
        return this.description;
    }
    /**
     * @deprecated
     * use &#39;arn&#39; attribute instead
     * 
     */
    @Deprecated /* use 'arn' attribute instead */
    public String hoursOfOperationArn() {
        return this.hoursOfOperationArn;
    }
    public String hoursOfOperationId() {
        return this.hoursOfOperationId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String instanceId() {
        return this.instanceId;
    }
    public String name() {
        return this.name;
    }
    public Map<String,String> tags() {
        return this.tags;
    }
    public String timeZone() {
        return this.timeZone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHoursOfOperationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private List<GetHoursOfOperationConfig> configs;
        private String description;
        private String hoursOfOperationArn;
        private String hoursOfOperationId;
        private String id;
        private String instanceId;
        private String name;
        private Map<String,String> tags;
        private String timeZone;
        public Builder() {}
        public Builder(GetHoursOfOperationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.configs = defaults.configs;
    	      this.description = defaults.description;
    	      this.hoursOfOperationArn = defaults.hoursOfOperationArn;
    	      this.hoursOfOperationId = defaults.hoursOfOperationId;
    	      this.id = defaults.id;
    	      this.instanceId = defaults.instanceId;
    	      this.name = defaults.name;
    	      this.tags = defaults.tags;
    	      this.timeZone = defaults.timeZone;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder configs(List<GetHoursOfOperationConfig> configs) {
            this.configs = Objects.requireNonNull(configs);
            return this;
        }
        public Builder configs(GetHoursOfOperationConfig... configs) {
            return configs(List.of(configs));
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder hoursOfOperationArn(String hoursOfOperationArn) {
            this.hoursOfOperationArn = Objects.requireNonNull(hoursOfOperationArn);
            return this;
        }
        @CustomType.Setter
        public Builder hoursOfOperationId(String hoursOfOperationId) {
            this.hoursOfOperationId = Objects.requireNonNull(hoursOfOperationId);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            this.instanceId = Objects.requireNonNull(instanceId);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder timeZone(String timeZone) {
            this.timeZone = Objects.requireNonNull(timeZone);
            return this;
        }
        public GetHoursOfOperationResult build() {
            final var o = new GetHoursOfOperationResult();
            o.arn = arn;
            o.configs = configs;
            o.description = description;
            o.hoursOfOperationArn = hoursOfOperationArn;
            o.hoursOfOperationId = hoursOfOperationId;
            o.id = id;
            o.instanceId = instanceId;
            o.name = name;
            o.tags = tags;
            o.timeZone = timeZone;
            return o;
        }
    }
}
