// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class DataSetLogicalTableMapDataTransformProjectOperationArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataSetLogicalTableMapDataTransformProjectOperationArgs Empty = new DataSetLogicalTableMapDataTransformProjectOperationArgs();

    /**
     * Projected columns.
     * 
     */
    @Import(name="projectedColumns", required=true)
    private Output<List<String>> projectedColumns;

    /**
     * @return Projected columns.
     * 
     */
    public Output<List<String>> projectedColumns() {
        return this.projectedColumns;
    }

    private DataSetLogicalTableMapDataTransformProjectOperationArgs() {}

    private DataSetLogicalTableMapDataTransformProjectOperationArgs(DataSetLogicalTableMapDataTransformProjectOperationArgs $) {
        this.projectedColumns = $.projectedColumns;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataSetLogicalTableMapDataTransformProjectOperationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataSetLogicalTableMapDataTransformProjectOperationArgs $;

        public Builder() {
            $ = new DataSetLogicalTableMapDataTransformProjectOperationArgs();
        }

        public Builder(DataSetLogicalTableMapDataTransformProjectOperationArgs defaults) {
            $ = new DataSetLogicalTableMapDataTransformProjectOperationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param projectedColumns Projected columns.
         * 
         * @return builder
         * 
         */
        public Builder projectedColumns(Output<List<String>> projectedColumns) {
            $.projectedColumns = projectedColumns;
            return this;
        }

        /**
         * @param projectedColumns Projected columns.
         * 
         * @return builder
         * 
         */
        public Builder projectedColumns(List<String> projectedColumns) {
            return projectedColumns(Output.of(projectedColumns));
        }

        /**
         * @param projectedColumns Projected columns.
         * 
         * @return builder
         * 
         */
        public Builder projectedColumns(String... projectedColumns) {
            return projectedColumns(List.of(projectedColumns));
        }

        public DataSetLogicalTableMapDataTransformProjectOperationArgs build() {
            if ($.projectedColumns == null) {
                throw new MissingRequiredPropertyException("DataSetLogicalTableMapDataTransformProjectOperationArgs", "projectedColumns");
            }
            return $;
        }
    }

}
