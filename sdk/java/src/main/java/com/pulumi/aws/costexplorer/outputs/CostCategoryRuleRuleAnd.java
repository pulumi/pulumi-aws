// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.costexplorer.outputs;

import com.pulumi.aws.costexplorer.outputs.CostCategoryRuleRuleAndCostCategory;
import com.pulumi.aws.costexplorer.outputs.CostCategoryRuleRuleAndDimension;
import com.pulumi.aws.costexplorer.outputs.CostCategoryRuleRuleAndTags;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CostCategoryRuleRuleAnd {
    /**
     * @return Configuration block for the filter that&#39;s based on `CostCategory` values. See below.
     * 
     */
    private @Nullable CostCategoryRuleRuleAndCostCategory costCategory;
    /**
     * @return Configuration block for the specific `Dimension` to use for `Expression`. See below.
     * 
     */
    private @Nullable CostCategoryRuleRuleAndDimension dimension;
    /**
     * @return Configuration block for the specific `Tag` to use for `Expression`. See below.
     * 
     */
    private @Nullable CostCategoryRuleRuleAndTags tags;

    private CostCategoryRuleRuleAnd() {}
    /**
     * @return Configuration block for the filter that&#39;s based on `CostCategory` values. See below.
     * 
     */
    public Optional<CostCategoryRuleRuleAndCostCategory> costCategory() {
        return Optional.ofNullable(this.costCategory);
    }
    /**
     * @return Configuration block for the specific `Dimension` to use for `Expression`. See below.
     * 
     */
    public Optional<CostCategoryRuleRuleAndDimension> dimension() {
        return Optional.ofNullable(this.dimension);
    }
    /**
     * @return Configuration block for the specific `Tag` to use for `Expression`. See below.
     * 
     */
    public Optional<CostCategoryRuleRuleAndTags> tags() {
        return Optional.ofNullable(this.tags);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CostCategoryRuleRuleAnd defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable CostCategoryRuleRuleAndCostCategory costCategory;
        private @Nullable CostCategoryRuleRuleAndDimension dimension;
        private @Nullable CostCategoryRuleRuleAndTags tags;
        public Builder() {}
        public Builder(CostCategoryRuleRuleAnd defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.costCategory = defaults.costCategory;
    	      this.dimension = defaults.dimension;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder costCategory(@Nullable CostCategoryRuleRuleAndCostCategory costCategory) {
            this.costCategory = costCategory;
            return this;
        }
        @CustomType.Setter
        public Builder dimension(@Nullable CostCategoryRuleRuleAndDimension dimension) {
            this.dimension = dimension;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable CostCategoryRuleRuleAndTags tags) {
            this.tags = tags;
            return this;
        }
        public CostCategoryRuleRuleAnd build() {
            final var o = new CostCategoryRuleRuleAnd();
            o.costCategory = costCategory;
            o.dimension = dimension;
            o.tags = tags;
            return o;
        }
    }
}
