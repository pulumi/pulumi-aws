// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apigateway.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetSdkResult {
    /**
     * @return SDK as a string.
     * 
     */
    private String body;
    /**
     * @return Content-disposition header value in the HTTP response.
     * 
     */
    private String contentDisposition;
    /**
     * @return Content-type header value in the HTTP response.
     * 
     */
    private String contentType;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable Map<String,String> parameters;
    private String restApiId;
    private String sdkType;
    private String stageName;

    private GetSdkResult() {}
    /**
     * @return SDK as a string.
     * 
     */
    public String body() {
        return this.body;
    }
    /**
     * @return Content-disposition header value in the HTTP response.
     * 
     */
    public String contentDisposition() {
        return this.contentDisposition;
    }
    /**
     * @return Content-type header value in the HTTP response.
     * 
     */
    public String contentType() {
        return this.contentType;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Map<String,String> parameters() {
        return this.parameters == null ? Map.of() : this.parameters;
    }
    public String restApiId() {
        return this.restApiId;
    }
    public String sdkType() {
        return this.sdkType;
    }
    public String stageName() {
        return this.stageName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSdkResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String body;
        private String contentDisposition;
        private String contentType;
        private String id;
        private @Nullable Map<String,String> parameters;
        private String restApiId;
        private String sdkType;
        private String stageName;
        public Builder() {}
        public Builder(GetSdkResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.body = defaults.body;
    	      this.contentDisposition = defaults.contentDisposition;
    	      this.contentType = defaults.contentType;
    	      this.id = defaults.id;
    	      this.parameters = defaults.parameters;
    	      this.restApiId = defaults.restApiId;
    	      this.sdkType = defaults.sdkType;
    	      this.stageName = defaults.stageName;
        }

        @CustomType.Setter
        public Builder body(String body) {
            if (body == null) {
              throw new MissingRequiredPropertyException("GetSdkResult", "body");
            }
            this.body = body;
            return this;
        }
        @CustomType.Setter
        public Builder contentDisposition(String contentDisposition) {
            if (contentDisposition == null) {
              throw new MissingRequiredPropertyException("GetSdkResult", "contentDisposition");
            }
            this.contentDisposition = contentDisposition;
            return this;
        }
        @CustomType.Setter
        public Builder contentType(String contentType) {
            if (contentType == null) {
              throw new MissingRequiredPropertyException("GetSdkResult", "contentType");
            }
            this.contentType = contentType;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSdkResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder parameters(@Nullable Map<String,String> parameters) {

            this.parameters = parameters;
            return this;
        }
        @CustomType.Setter
        public Builder restApiId(String restApiId) {
            if (restApiId == null) {
              throw new MissingRequiredPropertyException("GetSdkResult", "restApiId");
            }
            this.restApiId = restApiId;
            return this;
        }
        @CustomType.Setter
        public Builder sdkType(String sdkType) {
            if (sdkType == null) {
              throw new MissingRequiredPropertyException("GetSdkResult", "sdkType");
            }
            this.sdkType = sdkType;
            return this;
        }
        @CustomType.Setter
        public Builder stageName(String stageName) {
            if (stageName == null) {
              throw new MissingRequiredPropertyException("GetSdkResult", "stageName");
            }
            this.stageName = stageName;
            return this;
        }
        public GetSdkResult build() {
            final var _resultValue = new GetSdkResult();
            _resultValue.body = body;
            _resultValue.contentDisposition = contentDisposition;
            _resultValue.contentType = contentType;
            _resultValue.id = id;
            _resultValue.parameters = parameters;
            _resultValue.restApiId = restApiId;
            _resultValue.sdkType = sdkType;
            _resultValue.stageName = stageName;
            return _resultValue;
        }
    }
}
