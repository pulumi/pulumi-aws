// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apigateway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UsagePlanKeyState extends com.pulumi.resources.ResourceArgs {

    public static final UsagePlanKeyState Empty = new UsagePlanKeyState();

    /**
     * Identifier of the API key resource.
     * 
     */
    @Import(name="keyId")
    private @Nullable Output<String> keyId;

    /**
     * @return Identifier of the API key resource.
     * 
     */
    public Optional<Output<String>> keyId() {
        return Optional.ofNullable(this.keyId);
    }

    /**
     * Type of the API key resource. Currently, the valid key type is API_KEY.
     * 
     */
    @Import(name="keyType")
    private @Nullable Output<String> keyType;

    /**
     * @return Type of the API key resource. Currently, the valid key type is API_KEY.
     * 
     */
    public Optional<Output<String>> keyType() {
        return Optional.ofNullable(this.keyType);
    }

    /**
     * Name of a usage plan key.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of a usage plan key.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Id of the usage plan resource representing to associate the key to.
     * 
     */
    @Import(name="usagePlanId")
    private @Nullable Output<String> usagePlanId;

    /**
     * @return Id of the usage plan resource representing to associate the key to.
     * 
     */
    public Optional<Output<String>> usagePlanId() {
        return Optional.ofNullable(this.usagePlanId);
    }

    /**
     * Value of a usage plan key.
     * 
     */
    @Import(name="value")
    private @Nullable Output<String> value;

    /**
     * @return Value of a usage plan key.
     * 
     */
    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    private UsagePlanKeyState() {}

    private UsagePlanKeyState(UsagePlanKeyState $) {
        this.keyId = $.keyId;
        this.keyType = $.keyType;
        this.name = $.name;
        this.usagePlanId = $.usagePlanId;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UsagePlanKeyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UsagePlanKeyState $;

        public Builder() {
            $ = new UsagePlanKeyState();
        }

        public Builder(UsagePlanKeyState defaults) {
            $ = new UsagePlanKeyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param keyId Identifier of the API key resource.
         * 
         * @return builder
         * 
         */
        public Builder keyId(@Nullable Output<String> keyId) {
            $.keyId = keyId;
            return this;
        }

        /**
         * @param keyId Identifier of the API key resource.
         * 
         * @return builder
         * 
         */
        public Builder keyId(String keyId) {
            return keyId(Output.of(keyId));
        }

        /**
         * @param keyType Type of the API key resource. Currently, the valid key type is API_KEY.
         * 
         * @return builder
         * 
         */
        public Builder keyType(@Nullable Output<String> keyType) {
            $.keyType = keyType;
            return this;
        }

        /**
         * @param keyType Type of the API key resource. Currently, the valid key type is API_KEY.
         * 
         * @return builder
         * 
         */
        public Builder keyType(String keyType) {
            return keyType(Output.of(keyType));
        }

        /**
         * @param name Name of a usage plan key.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of a usage plan key.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param usagePlanId Id of the usage plan resource representing to associate the key to.
         * 
         * @return builder
         * 
         */
        public Builder usagePlanId(@Nullable Output<String> usagePlanId) {
            $.usagePlanId = usagePlanId;
            return this;
        }

        /**
         * @param usagePlanId Id of the usage plan resource representing to associate the key to.
         * 
         * @return builder
         * 
         */
        public Builder usagePlanId(String usagePlanId) {
            return usagePlanId(Output.of(usagePlanId));
        }

        /**
         * @param value Value of a usage plan key.
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value Value of a usage plan key.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public UsagePlanKeyState build() {
            return $;
        }
    }

}
