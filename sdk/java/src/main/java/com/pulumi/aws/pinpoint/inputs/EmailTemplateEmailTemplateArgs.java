// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.pinpoint.inputs;

import com.pulumi.aws.pinpoint.inputs.EmailTemplateEmailTemplateHeaderArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EmailTemplateEmailTemplateArgs extends com.pulumi.resources.ResourceArgs {

    public static final EmailTemplateEmailTemplateArgs Empty = new EmailTemplateEmailTemplateArgs();

    /**
     * JSON object that specifies the default values to use for message variables in the message template. This object is a set of key-value pairs. Each key defines a message variable in the template. The corresponding value defines the default value for that variable. When you create a message that&#39;s based on the template, you can override these defaults with message-specific and address-specific variables and values.
     * 
     */
    @Import(name="defaultSubstitutions")
    private @Nullable Output<String> defaultSubstitutions;

    /**
     * @return JSON object that specifies the default values to use for message variables in the message template. This object is a set of key-value pairs. Each key defines a message variable in the template. The corresponding value defines the default value for that variable. When you create a message that&#39;s based on the template, you can override these defaults with message-specific and address-specific variables and values.
     * 
     */
    public Optional<Output<String>> defaultSubstitutions() {
        return Optional.ofNullable(this.defaultSubstitutions);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="headers")
    private @Nullable Output<List<EmailTemplateEmailTemplateHeaderArgs>> headers;

    public Optional<Output<List<EmailTemplateEmailTemplateHeaderArgs>>> headers() {
        return Optional.ofNullable(this.headers);
    }

    /**
     * The message body, in HTML format, to use in email messages that are based on the message template. We recommend using HTML format for email clients that render HTML content. You can include links, formatted text, and more in an HTML message.
     * 
     */
    @Import(name="htmlPart")
    private @Nullable Output<String> htmlPart;

    /**
     * @return The message body, in HTML format, to use in email messages that are based on the message template. We recommend using HTML format for email clients that render HTML content. You can include links, formatted text, and more in an HTML message.
     * 
     */
    public Optional<Output<String>> htmlPart() {
        return Optional.ofNullable(this.htmlPart);
    }

    /**
     * The unique identifier for the recommender model to use for the message template. Amazon Pinpoint uses this value to determine how to retrieve and process data from a recommender model when it sends messages that use the template, if the template contains message variables for recommendation data.
     * 
     */
    @Import(name="recommenderId")
    private @Nullable Output<String> recommenderId;

    /**
     * @return The unique identifier for the recommender model to use for the message template. Amazon Pinpoint uses this value to determine how to retrieve and process data from a recommender model when it sends messages that use the template, if the template contains message variables for recommendation data.
     * 
     */
    public Optional<Output<String>> recommenderId() {
        return Optional.ofNullable(this.recommenderId);
    }

    /**
     * Subject line, or title, to use in email messages that are based on the message template.
     * 
     */
    @Import(name="subject")
    private @Nullable Output<String> subject;

    /**
     * @return Subject line, or title, to use in email messages that are based on the message template.
     * 
     */
    public Optional<Output<String>> subject() {
        return Optional.ofNullable(this.subject);
    }

    /**
     * Message body, in plain text format, to use in email messages that are based on the message template. We recommend using plain text format for email clients that don&#39;t render HTML content and clients that are connected to high-latency networks, such as mobile devices.
     * 
     */
    @Import(name="textPart")
    private @Nullable Output<String> textPart;

    /**
     * @return Message body, in plain text format, to use in email messages that are based on the message template. We recommend using plain text format for email clients that don&#39;t render HTML content and clients that are connected to high-latency networks, such as mobile devices.
     * 
     */
    public Optional<Output<String>> textPart() {
        return Optional.ofNullable(this.textPart);
    }

    private EmailTemplateEmailTemplateArgs() {}

    private EmailTemplateEmailTemplateArgs(EmailTemplateEmailTemplateArgs $) {
        this.defaultSubstitutions = $.defaultSubstitutions;
        this.description = $.description;
        this.headers = $.headers;
        this.htmlPart = $.htmlPart;
        this.recommenderId = $.recommenderId;
        this.subject = $.subject;
        this.textPart = $.textPart;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EmailTemplateEmailTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EmailTemplateEmailTemplateArgs $;

        public Builder() {
            $ = new EmailTemplateEmailTemplateArgs();
        }

        public Builder(EmailTemplateEmailTemplateArgs defaults) {
            $ = new EmailTemplateEmailTemplateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param defaultSubstitutions JSON object that specifies the default values to use for message variables in the message template. This object is a set of key-value pairs. Each key defines a message variable in the template. The corresponding value defines the default value for that variable. When you create a message that&#39;s based on the template, you can override these defaults with message-specific and address-specific variables and values.
         * 
         * @return builder
         * 
         */
        public Builder defaultSubstitutions(@Nullable Output<String> defaultSubstitutions) {
            $.defaultSubstitutions = defaultSubstitutions;
            return this;
        }

        /**
         * @param defaultSubstitutions JSON object that specifies the default values to use for message variables in the message template. This object is a set of key-value pairs. Each key defines a message variable in the template. The corresponding value defines the default value for that variable. When you create a message that&#39;s based on the template, you can override these defaults with message-specific and address-specific variables and values.
         * 
         * @return builder
         * 
         */
        public Builder defaultSubstitutions(String defaultSubstitutions) {
            return defaultSubstitutions(Output.of(defaultSubstitutions));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder headers(@Nullable Output<List<EmailTemplateEmailTemplateHeaderArgs>> headers) {
            $.headers = headers;
            return this;
        }

        public Builder headers(List<EmailTemplateEmailTemplateHeaderArgs> headers) {
            return headers(Output.of(headers));
        }

        public Builder headers(EmailTemplateEmailTemplateHeaderArgs... headers) {
            return headers(List.of(headers));
        }

        /**
         * @param htmlPart The message body, in HTML format, to use in email messages that are based on the message template. We recommend using HTML format for email clients that render HTML content. You can include links, formatted text, and more in an HTML message.
         * 
         * @return builder
         * 
         */
        public Builder htmlPart(@Nullable Output<String> htmlPart) {
            $.htmlPart = htmlPart;
            return this;
        }

        /**
         * @param htmlPart The message body, in HTML format, to use in email messages that are based on the message template. We recommend using HTML format for email clients that render HTML content. You can include links, formatted text, and more in an HTML message.
         * 
         * @return builder
         * 
         */
        public Builder htmlPart(String htmlPart) {
            return htmlPart(Output.of(htmlPart));
        }

        /**
         * @param recommenderId The unique identifier for the recommender model to use for the message template. Amazon Pinpoint uses this value to determine how to retrieve and process data from a recommender model when it sends messages that use the template, if the template contains message variables for recommendation data.
         * 
         * @return builder
         * 
         */
        public Builder recommenderId(@Nullable Output<String> recommenderId) {
            $.recommenderId = recommenderId;
            return this;
        }

        /**
         * @param recommenderId The unique identifier for the recommender model to use for the message template. Amazon Pinpoint uses this value to determine how to retrieve and process data from a recommender model when it sends messages that use the template, if the template contains message variables for recommendation data.
         * 
         * @return builder
         * 
         */
        public Builder recommenderId(String recommenderId) {
            return recommenderId(Output.of(recommenderId));
        }

        /**
         * @param subject Subject line, or title, to use in email messages that are based on the message template.
         * 
         * @return builder
         * 
         */
        public Builder subject(@Nullable Output<String> subject) {
            $.subject = subject;
            return this;
        }

        /**
         * @param subject Subject line, or title, to use in email messages that are based on the message template.
         * 
         * @return builder
         * 
         */
        public Builder subject(String subject) {
            return subject(Output.of(subject));
        }

        /**
         * @param textPart Message body, in plain text format, to use in email messages that are based on the message template. We recommend using plain text format for email clients that don&#39;t render HTML content and clients that are connected to high-latency networks, such as mobile devices.
         * 
         * @return builder
         * 
         */
        public Builder textPart(@Nullable Output<String> textPart) {
            $.textPart = textPart;
            return this;
        }

        /**
         * @param textPart Message body, in plain text format, to use in email messages that are based on the message template. We recommend using plain text format for email clients that don&#39;t render HTML content and clients that are connected to high-latency networks, such as mobile devices.
         * 
         * @return builder
         * 
         */
        public Builder textPart(String textPart) {
            return textPart(Output.of(textPart));
        }

        public EmailTemplateEmailTemplateArgs build() {
            return $;
        }
    }

}
