// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.aws.ec2.inputs.FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs;
import com.pulumi.aws.ec2.inputs.FleetLaunchTemplateConfigOverrideArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FleetLaunchTemplateConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final FleetLaunchTemplateConfigArgs Empty = new FleetLaunchTemplateConfigArgs();

    @Import(name="launchTemplateSpecification", required=true)
    private Output<FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs> launchTemplateSpecification;

    public Output<FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs> launchTemplateSpecification() {
        return this.launchTemplateSpecification;
    }

    @Import(name="overrides")
    private @Nullable Output<List<FleetLaunchTemplateConfigOverrideArgs>> overrides;

    public Optional<Output<List<FleetLaunchTemplateConfigOverrideArgs>>> overrides() {
        return Optional.ofNullable(this.overrides);
    }

    private FleetLaunchTemplateConfigArgs() {}

    private FleetLaunchTemplateConfigArgs(FleetLaunchTemplateConfigArgs $) {
        this.launchTemplateSpecification = $.launchTemplateSpecification;
        this.overrides = $.overrides;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FleetLaunchTemplateConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FleetLaunchTemplateConfigArgs $;

        public Builder() {
            $ = new FleetLaunchTemplateConfigArgs();
        }

        public Builder(FleetLaunchTemplateConfigArgs defaults) {
            $ = new FleetLaunchTemplateConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder launchTemplateSpecification(Output<FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs> launchTemplateSpecification) {
            $.launchTemplateSpecification = launchTemplateSpecification;
            return this;
        }

        public Builder launchTemplateSpecification(FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs launchTemplateSpecification) {
            return launchTemplateSpecification(Output.of(launchTemplateSpecification));
        }

        public Builder overrides(@Nullable Output<List<FleetLaunchTemplateConfigOverrideArgs>> overrides) {
            $.overrides = overrides;
            return this;
        }

        public Builder overrides(List<FleetLaunchTemplateConfigOverrideArgs> overrides) {
            return overrides(Output.of(overrides));
        }

        public Builder overrides(FleetLaunchTemplateConfigOverrideArgs... overrides) {
            return overrides(List.of(overrides));
        }

        public FleetLaunchTemplateConfigArgs build() {
            $.launchTemplateSpecification = Objects.requireNonNull($.launchTemplateSpecification, "expected parameter 'launchTemplateSpecification' to be non-null");
            return $;
        }
    }

}
