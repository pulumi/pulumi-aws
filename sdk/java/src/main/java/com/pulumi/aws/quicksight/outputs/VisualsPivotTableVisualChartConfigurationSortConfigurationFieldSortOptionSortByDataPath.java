// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByDataPathSortPath;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByDataPath {
    private String direction;
    private List<VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByDataPathSortPath> sortPaths;

    private VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByDataPath() {}
    public String direction() {
        return this.direction;
    }
    public List<VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByDataPathSortPath> sortPaths() {
        return this.sortPaths;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByDataPath defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String direction;
        private List<VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByDataPathSortPath> sortPaths;
        public Builder() {}
        public Builder(VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByDataPath defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.direction = defaults.direction;
    	      this.sortPaths = defaults.sortPaths;
        }

        @CustomType.Setter
        public Builder direction(String direction) {
            if (direction == null) {
              throw new MissingRequiredPropertyException("VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByDataPath", "direction");
            }
            this.direction = direction;
            return this;
        }
        @CustomType.Setter
        public Builder sortPaths(List<VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByDataPathSortPath> sortPaths) {
            if (sortPaths == null) {
              throw new MissingRequiredPropertyException("VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByDataPath", "sortPaths");
            }
            this.sortPaths = sortPaths;
            return this;
        }
        public Builder sortPaths(VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByDataPathSortPath... sortPaths) {
            return sortPaths(List.of(sortPaths));
        }
        public VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByDataPath build() {
            final var _resultValue = new VisualsPivotTableVisualChartConfigurationSortConfigurationFieldSortOptionSortByDataPath();
            _resultValue.direction = direction;
            _resultValue.sortPaths = sortPaths;
            return _resultValue;
        }
    }
}
