// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class TaskDefinitionInferenceAcceleratorArgs extends com.pulumi.resources.ResourceArgs {

    public static final TaskDefinitionInferenceAcceleratorArgs Empty = new TaskDefinitionInferenceAcceleratorArgs();

    /**
     * Elastic Inference accelerator device name. The deviceName must also be referenced in a container definition as a ResourceRequirement.
     * 
     */
    @Import(name="deviceName", required=true)
    private Output<String> deviceName;

    /**
     * @return Elastic Inference accelerator device name. The deviceName must also be referenced in a container definition as a ResourceRequirement.
     * 
     */
    public Output<String> deviceName() {
        return this.deviceName;
    }

    /**
     * Elastic Inference accelerator type to use.
     * 
     */
    @Import(name="deviceType", required=true)
    private Output<String> deviceType;

    /**
     * @return Elastic Inference accelerator type to use.
     * 
     */
    public Output<String> deviceType() {
        return this.deviceType;
    }

    private TaskDefinitionInferenceAcceleratorArgs() {}

    private TaskDefinitionInferenceAcceleratorArgs(TaskDefinitionInferenceAcceleratorArgs $) {
        this.deviceName = $.deviceName;
        this.deviceType = $.deviceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TaskDefinitionInferenceAcceleratorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TaskDefinitionInferenceAcceleratorArgs $;

        public Builder() {
            $ = new TaskDefinitionInferenceAcceleratorArgs();
        }

        public Builder(TaskDefinitionInferenceAcceleratorArgs defaults) {
            $ = new TaskDefinitionInferenceAcceleratorArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deviceName Elastic Inference accelerator device name. The deviceName must also be referenced in a container definition as a ResourceRequirement.
         * 
         * @return builder
         * 
         */
        public Builder deviceName(Output<String> deviceName) {
            $.deviceName = deviceName;
            return this;
        }

        /**
         * @param deviceName Elastic Inference accelerator device name. The deviceName must also be referenced in a container definition as a ResourceRequirement.
         * 
         * @return builder
         * 
         */
        public Builder deviceName(String deviceName) {
            return deviceName(Output.of(deviceName));
        }

        /**
         * @param deviceType Elastic Inference accelerator type to use.
         * 
         * @return builder
         * 
         */
        public Builder deviceType(Output<String> deviceType) {
            $.deviceType = deviceType;
            return this;
        }

        /**
         * @param deviceType Elastic Inference accelerator type to use.
         * 
         * @return builder
         * 
         */
        public Builder deviceType(String deviceType) {
            return deviceType(Output.of(deviceType));
        }

        public TaskDefinitionInferenceAcceleratorArgs build() {
            if ($.deviceName == null) {
                throw new MissingRequiredPropertyException("TaskDefinitionInferenceAcceleratorArgs", "deviceName");
            }
            if ($.deviceType == null) {
                throw new MissingRequiredPropertyException("TaskDefinitionInferenceAcceleratorArgs", "deviceType");
            }
            return $;
        }
    }

}
