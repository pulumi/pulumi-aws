// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.route53.outputs;

import com.pulumi.aws.route53.outputs.GetRecordsResourceRecordSetGeoproximityLocationCoordinates;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetRecordsResourceRecordSetGeoproximityLocation {
    /**
     * @return The AWS Region the resource you are directing DNS traffic to, is in.
     * 
     */
    private String awsRegion;
    /**
     * @return The bias increases or decreases the size of the geographic region from which Route 53 routes traffic to a resource.
     * 
     */
    private Integer bias;
    /**
     * @return Contains the longitude and latitude for a geographic region.
     * 
     */
    private GetRecordsResourceRecordSetGeoproximityLocationCoordinates coordinates;
    /**
     * @return An AWS Local Zone Group.
     * 
     */
    private String localZoneGroup;

    private GetRecordsResourceRecordSetGeoproximityLocation() {}
    /**
     * @return The AWS Region the resource you are directing DNS traffic to, is in.
     * 
     */
    public String awsRegion() {
        return this.awsRegion;
    }
    /**
     * @return The bias increases or decreases the size of the geographic region from which Route 53 routes traffic to a resource.
     * 
     */
    public Integer bias() {
        return this.bias;
    }
    /**
     * @return Contains the longitude and latitude for a geographic region.
     * 
     */
    public GetRecordsResourceRecordSetGeoproximityLocationCoordinates coordinates() {
        return this.coordinates;
    }
    /**
     * @return An AWS Local Zone Group.
     * 
     */
    public String localZoneGroup() {
        return this.localZoneGroup;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRecordsResourceRecordSetGeoproximityLocation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String awsRegion;
        private Integer bias;
        private GetRecordsResourceRecordSetGeoproximityLocationCoordinates coordinates;
        private String localZoneGroup;
        public Builder() {}
        public Builder(GetRecordsResourceRecordSetGeoproximityLocation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.awsRegion = defaults.awsRegion;
    	      this.bias = defaults.bias;
    	      this.coordinates = defaults.coordinates;
    	      this.localZoneGroup = defaults.localZoneGroup;
        }

        @CustomType.Setter
        public Builder awsRegion(String awsRegion) {
            if (awsRegion == null) {
              throw new MissingRequiredPropertyException("GetRecordsResourceRecordSetGeoproximityLocation", "awsRegion");
            }
            this.awsRegion = awsRegion;
            return this;
        }
        @CustomType.Setter
        public Builder bias(Integer bias) {
            if (bias == null) {
              throw new MissingRequiredPropertyException("GetRecordsResourceRecordSetGeoproximityLocation", "bias");
            }
            this.bias = bias;
            return this;
        }
        @CustomType.Setter
        public Builder coordinates(GetRecordsResourceRecordSetGeoproximityLocationCoordinates coordinates) {
            if (coordinates == null) {
              throw new MissingRequiredPropertyException("GetRecordsResourceRecordSetGeoproximityLocation", "coordinates");
            }
            this.coordinates = coordinates;
            return this;
        }
        @CustomType.Setter
        public Builder localZoneGroup(String localZoneGroup) {
            if (localZoneGroup == null) {
              throw new MissingRequiredPropertyException("GetRecordsResourceRecordSetGeoproximityLocation", "localZoneGroup");
            }
            this.localZoneGroup = localZoneGroup;
            return this;
        }
        public GetRecordsResourceRecordSetGeoproximityLocation build() {
            final var _resultValue = new GetRecordsResourceRecordSetGeoproximityLocation();
            _resultValue.awsRegion = awsRegion;
            _resultValue.bias = bias;
            _resultValue.coordinates = coordinates;
            _resultValue.localZoneGroup = localZoneGroup;
            return _resultValue;
        }
    }
}
