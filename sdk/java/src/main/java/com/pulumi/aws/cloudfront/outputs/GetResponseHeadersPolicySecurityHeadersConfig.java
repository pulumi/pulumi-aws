// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudfront.outputs;

import com.pulumi.aws.cloudfront.outputs.GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy;
import com.pulumi.aws.cloudfront.outputs.GetResponseHeadersPolicySecurityHeadersConfigContentTypeOption;
import com.pulumi.aws.cloudfront.outputs.GetResponseHeadersPolicySecurityHeadersConfigFrameOption;
import com.pulumi.aws.cloudfront.outputs.GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicy;
import com.pulumi.aws.cloudfront.outputs.GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity;
import com.pulumi.aws.cloudfront.outputs.GetResponseHeadersPolicySecurityHeadersConfigXssProtection;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetResponseHeadersPolicySecurityHeadersConfig {
    /**
     * @return The policy directives and their values that CloudFront includes as values for the Content-Security-Policy HTTP response header.
     * 
     */
    private List<GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy> contentSecurityPolicies;
    /**
     * @return A setting that determines whether CloudFront includes the X-Content-Type-Options HTTP response header with its value set to nosniff. See Content Type Options for more information.
     * 
     */
    private List<GetResponseHeadersPolicySecurityHeadersConfigContentTypeOption> contentTypeOptions;
    /**
     * @return Setting that determines whether CloudFront includes the X-Frame-Options HTTP response header and the header’s value. See Frame Options for more information.
     * 
     */
    private List<GetResponseHeadersPolicySecurityHeadersConfigFrameOption> frameOptions;
    /**
     * @return Value of the Referrer-Policy HTTP response header. Valid Values: `no-referrer` | `no-referrer-when-downgrade` | `origin` | `origin-when-cross-origin` | `same-origin` | `strict-origin` | `strict-origin-when-cross-origin` | `unsafe-url`
     * 
     */
    private List<GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicy> referrerPolicies;
    /**
     * @return Settings that determine whether CloudFront includes the Strict-Transport-Security HTTP response header and the header’s value. See Strict Transport Security for more information.
     * 
     */
    private List<GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity> strictTransportSecurities;
    /**
     * @return Settings that determine whether CloudFront includes the X-XSS-Protection HTTP response header and the header’s value. See XSS Protection for more information.
     * 
     */
    private List<GetResponseHeadersPolicySecurityHeadersConfigXssProtection> xssProtections;

    private GetResponseHeadersPolicySecurityHeadersConfig() {}
    /**
     * @return The policy directives and their values that CloudFront includes as values for the Content-Security-Policy HTTP response header.
     * 
     */
    public List<GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy> contentSecurityPolicies() {
        return this.contentSecurityPolicies;
    }
    /**
     * @return A setting that determines whether CloudFront includes the X-Content-Type-Options HTTP response header with its value set to nosniff. See Content Type Options for more information.
     * 
     */
    public List<GetResponseHeadersPolicySecurityHeadersConfigContentTypeOption> contentTypeOptions() {
        return this.contentTypeOptions;
    }
    /**
     * @return Setting that determines whether CloudFront includes the X-Frame-Options HTTP response header and the header’s value. See Frame Options for more information.
     * 
     */
    public List<GetResponseHeadersPolicySecurityHeadersConfigFrameOption> frameOptions() {
        return this.frameOptions;
    }
    /**
     * @return Value of the Referrer-Policy HTTP response header. Valid Values: `no-referrer` | `no-referrer-when-downgrade` | `origin` | `origin-when-cross-origin` | `same-origin` | `strict-origin` | `strict-origin-when-cross-origin` | `unsafe-url`
     * 
     */
    public List<GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicy> referrerPolicies() {
        return this.referrerPolicies;
    }
    /**
     * @return Settings that determine whether CloudFront includes the Strict-Transport-Security HTTP response header and the header’s value. See Strict Transport Security for more information.
     * 
     */
    public List<GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity> strictTransportSecurities() {
        return this.strictTransportSecurities;
    }
    /**
     * @return Settings that determine whether CloudFront includes the X-XSS-Protection HTTP response header and the header’s value. See XSS Protection for more information.
     * 
     */
    public List<GetResponseHeadersPolicySecurityHeadersConfigXssProtection> xssProtections() {
        return this.xssProtections;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResponseHeadersPolicySecurityHeadersConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy> contentSecurityPolicies;
        private List<GetResponseHeadersPolicySecurityHeadersConfigContentTypeOption> contentTypeOptions;
        private List<GetResponseHeadersPolicySecurityHeadersConfigFrameOption> frameOptions;
        private List<GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicy> referrerPolicies;
        private List<GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity> strictTransportSecurities;
        private List<GetResponseHeadersPolicySecurityHeadersConfigXssProtection> xssProtections;
        public Builder() {}
        public Builder(GetResponseHeadersPolicySecurityHeadersConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contentSecurityPolicies = defaults.contentSecurityPolicies;
    	      this.contentTypeOptions = defaults.contentTypeOptions;
    	      this.frameOptions = defaults.frameOptions;
    	      this.referrerPolicies = defaults.referrerPolicies;
    	      this.strictTransportSecurities = defaults.strictTransportSecurities;
    	      this.xssProtections = defaults.xssProtections;
        }

        @CustomType.Setter
        public Builder contentSecurityPolicies(List<GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy> contentSecurityPolicies) {
            if (contentSecurityPolicies == null) {
              throw new MissingRequiredPropertyException("GetResponseHeadersPolicySecurityHeadersConfig", "contentSecurityPolicies");
            }
            this.contentSecurityPolicies = contentSecurityPolicies;
            return this;
        }
        public Builder contentSecurityPolicies(GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy... contentSecurityPolicies) {
            return contentSecurityPolicies(List.of(contentSecurityPolicies));
        }
        @CustomType.Setter
        public Builder contentTypeOptions(List<GetResponseHeadersPolicySecurityHeadersConfigContentTypeOption> contentTypeOptions) {
            if (contentTypeOptions == null) {
              throw new MissingRequiredPropertyException("GetResponseHeadersPolicySecurityHeadersConfig", "contentTypeOptions");
            }
            this.contentTypeOptions = contentTypeOptions;
            return this;
        }
        public Builder contentTypeOptions(GetResponseHeadersPolicySecurityHeadersConfigContentTypeOption... contentTypeOptions) {
            return contentTypeOptions(List.of(contentTypeOptions));
        }
        @CustomType.Setter
        public Builder frameOptions(List<GetResponseHeadersPolicySecurityHeadersConfigFrameOption> frameOptions) {
            if (frameOptions == null) {
              throw new MissingRequiredPropertyException("GetResponseHeadersPolicySecurityHeadersConfig", "frameOptions");
            }
            this.frameOptions = frameOptions;
            return this;
        }
        public Builder frameOptions(GetResponseHeadersPolicySecurityHeadersConfigFrameOption... frameOptions) {
            return frameOptions(List.of(frameOptions));
        }
        @CustomType.Setter
        public Builder referrerPolicies(List<GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicy> referrerPolicies) {
            if (referrerPolicies == null) {
              throw new MissingRequiredPropertyException("GetResponseHeadersPolicySecurityHeadersConfig", "referrerPolicies");
            }
            this.referrerPolicies = referrerPolicies;
            return this;
        }
        public Builder referrerPolicies(GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicy... referrerPolicies) {
            return referrerPolicies(List.of(referrerPolicies));
        }
        @CustomType.Setter
        public Builder strictTransportSecurities(List<GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity> strictTransportSecurities) {
            if (strictTransportSecurities == null) {
              throw new MissingRequiredPropertyException("GetResponseHeadersPolicySecurityHeadersConfig", "strictTransportSecurities");
            }
            this.strictTransportSecurities = strictTransportSecurities;
            return this;
        }
        public Builder strictTransportSecurities(GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity... strictTransportSecurities) {
            return strictTransportSecurities(List.of(strictTransportSecurities));
        }
        @CustomType.Setter
        public Builder xssProtections(List<GetResponseHeadersPolicySecurityHeadersConfigXssProtection> xssProtections) {
            if (xssProtections == null) {
              throw new MissingRequiredPropertyException("GetResponseHeadersPolicySecurityHeadersConfig", "xssProtections");
            }
            this.xssProtections = xssProtections;
            return this;
        }
        public Builder xssProtections(GetResponseHeadersPolicySecurityHeadersConfigXssProtection... xssProtections) {
            return xssProtections(List.of(xssProtections));
        }
        public GetResponseHeadersPolicySecurityHeadersConfig build() {
            final var _resultValue = new GetResponseHeadersPolicySecurityHeadersConfig();
            _resultValue.contentSecurityPolicies = contentSecurityPolicies;
            _resultValue.contentTypeOptions = contentTypeOptions;
            _resultValue.frameOptions = frameOptions;
            _resultValue.referrerPolicies = referrerPolicies;
            _resultValue.strictTransportSecurities = strictTransportSecurities;
            _resultValue.xssProtections = xssProtections;
            return _resultValue;
        }
    }
}
