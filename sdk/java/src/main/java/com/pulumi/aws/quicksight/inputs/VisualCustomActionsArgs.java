// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.VisualCustomActionsActionOperationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class VisualCustomActionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final VisualCustomActionsArgs Empty = new VisualCustomActionsArgs();

    @Import(name="actionOperations", required=true)
    private Output<List<VisualCustomActionsActionOperationArgs>> actionOperations;

    public Output<List<VisualCustomActionsActionOperationArgs>> actionOperations() {
        return this.actionOperations;
    }

    @Import(name="customActionId", required=true)
    private Output<String> customActionId;

    public Output<String> customActionId() {
        return this.customActionId;
    }

    /**
     * Display name for the dashboard.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Display name for the dashboard.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The dashboard creation status.
     * 
     */
    @Import(name="status", required=true)
    private Output<String> status;

    /**
     * @return The dashboard creation status.
     * 
     */
    public Output<String> status() {
        return this.status;
    }

    @Import(name="trigger", required=true)
    private Output<String> trigger;

    public Output<String> trigger() {
        return this.trigger;
    }

    private VisualCustomActionsArgs() {}

    private VisualCustomActionsArgs(VisualCustomActionsArgs $) {
        this.actionOperations = $.actionOperations;
        this.customActionId = $.customActionId;
        this.name = $.name;
        this.status = $.status;
        this.trigger = $.trigger;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VisualCustomActionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VisualCustomActionsArgs $;

        public Builder() {
            $ = new VisualCustomActionsArgs();
        }

        public Builder(VisualCustomActionsArgs defaults) {
            $ = new VisualCustomActionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder actionOperations(Output<List<VisualCustomActionsActionOperationArgs>> actionOperations) {
            $.actionOperations = actionOperations;
            return this;
        }

        public Builder actionOperations(List<VisualCustomActionsActionOperationArgs> actionOperations) {
            return actionOperations(Output.of(actionOperations));
        }

        public Builder actionOperations(VisualCustomActionsActionOperationArgs... actionOperations) {
            return actionOperations(List.of(actionOperations));
        }

        public Builder customActionId(Output<String> customActionId) {
            $.customActionId = customActionId;
            return this;
        }

        public Builder customActionId(String customActionId) {
            return customActionId(Output.of(customActionId));
        }

        /**
         * @param name Display name for the dashboard.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Display name for the dashboard.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param status The dashboard creation status.
         * 
         * @return builder
         * 
         */
        public Builder status(Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The dashboard creation status.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public Builder trigger(Output<String> trigger) {
            $.trigger = trigger;
            return this;
        }

        public Builder trigger(String trigger) {
            return trigger(Output.of(trigger));
        }

        public VisualCustomActionsArgs build() {
            if ($.actionOperations == null) {
                throw new MissingRequiredPropertyException("VisualCustomActionsArgs", "actionOperations");
            }
            if ($.customActionId == null) {
                throw new MissingRequiredPropertyException("VisualCustomActionsArgs", "customActionId");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("VisualCustomActionsArgs", "name");
            }
            if ($.status == null) {
                throw new MissingRequiredPropertyException("VisualCustomActionsArgs", "status");
            }
            if ($.trigger == null) {
                throw new MissingRequiredPropertyException("VisualCustomActionsArgs", "trigger");
            }
            return $;
        }
    }

}
