// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.amplify.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DomainAssociationSubDomain {
    /**
     * @return Branch name setting for the subdomain.
     * 
     */
    private String branchName;
    /**
     * @return DNS record for the subdomain.
     * 
     */
    private @Nullable String dnsRecord;
    /**
     * @return Prefix setting for the subdomain.
     * 
     */
    private String prefix;
    /**
     * @return Verified status of the subdomain.
     * 
     */
    private @Nullable Boolean verified;

    private DomainAssociationSubDomain() {}
    /**
     * @return Branch name setting for the subdomain.
     * 
     */
    public String branchName() {
        return this.branchName;
    }
    /**
     * @return DNS record for the subdomain.
     * 
     */
    public Optional<String> dnsRecord() {
        return Optional.ofNullable(this.dnsRecord);
    }
    /**
     * @return Prefix setting for the subdomain.
     * 
     */
    public String prefix() {
        return this.prefix;
    }
    /**
     * @return Verified status of the subdomain.
     * 
     */
    public Optional<Boolean> verified() {
        return Optional.ofNullable(this.verified);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainAssociationSubDomain defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String branchName;
        private @Nullable String dnsRecord;
        private String prefix;
        private @Nullable Boolean verified;
        public Builder() {}
        public Builder(DomainAssociationSubDomain defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.branchName = defaults.branchName;
    	      this.dnsRecord = defaults.dnsRecord;
    	      this.prefix = defaults.prefix;
    	      this.verified = defaults.verified;
        }

        @CustomType.Setter
        public Builder branchName(String branchName) {
            if (branchName == null) {
              throw new MissingRequiredPropertyException("DomainAssociationSubDomain", "branchName");
            }
            this.branchName = branchName;
            return this;
        }
        @CustomType.Setter
        public Builder dnsRecord(@Nullable String dnsRecord) {

            this.dnsRecord = dnsRecord;
            return this;
        }
        @CustomType.Setter
        public Builder prefix(String prefix) {
            if (prefix == null) {
              throw new MissingRequiredPropertyException("DomainAssociationSubDomain", "prefix");
            }
            this.prefix = prefix;
            return this;
        }
        @CustomType.Setter
        public Builder verified(@Nullable Boolean verified) {

            this.verified = verified;
            return this;
        }
        public DomainAssociationSubDomain build() {
            final var _resultValue = new DomainAssociationSubDomain();
            _resultValue.branchName = branchName;
            _resultValue.dnsRecord = dnsRecord;
            _resultValue.prefix = prefix;
            _resultValue.verified = verified;
            return _resultValue;
        }
    }
}
