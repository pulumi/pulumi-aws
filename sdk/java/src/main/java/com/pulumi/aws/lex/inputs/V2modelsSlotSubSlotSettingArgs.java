// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lex.inputs;

import com.pulumi.aws.lex.inputs.V2modelsSlotSubSlotSettingSlotSpecificationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class V2modelsSlotSubSlotSettingArgs extends com.pulumi.resources.ResourceArgs {

    public static final V2modelsSlotSubSlotSettingArgs Empty = new V2modelsSlotSubSlotSettingArgs();

    /**
     * Expression text for defining the constituent sub slots in the composite slot using logical `AND` and `OR` operators.
     * 
     */
    @Import(name="expression")
    private @Nullable Output<String> expression;

    /**
     * @return Expression text for defining the constituent sub slots in the composite slot using logical `AND` and `OR` operators.
     * 
     */
    public Optional<Output<String>> expression() {
        return Optional.ofNullable(this.expression);
    }

    /**
     * Specifications for the constituent sub slots of a composite slot.
     * See the `slot_specification` argument reference below.
     * 
     */
    @Import(name="slotSpecifications")
    private @Nullable Output<List<V2modelsSlotSubSlotSettingSlotSpecificationArgs>> slotSpecifications;

    /**
     * @return Specifications for the constituent sub slots of a composite slot.
     * See the `slot_specification` argument reference below.
     * 
     */
    public Optional<Output<List<V2modelsSlotSubSlotSettingSlotSpecificationArgs>>> slotSpecifications() {
        return Optional.ofNullable(this.slotSpecifications);
    }

    private V2modelsSlotSubSlotSettingArgs() {}

    private V2modelsSlotSubSlotSettingArgs(V2modelsSlotSubSlotSettingArgs $) {
        this.expression = $.expression;
        this.slotSpecifications = $.slotSpecifications;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(V2modelsSlotSubSlotSettingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private V2modelsSlotSubSlotSettingArgs $;

        public Builder() {
            $ = new V2modelsSlotSubSlotSettingArgs();
        }

        public Builder(V2modelsSlotSubSlotSettingArgs defaults) {
            $ = new V2modelsSlotSubSlotSettingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param expression Expression text for defining the constituent sub slots in the composite slot using logical `AND` and `OR` operators.
         * 
         * @return builder
         * 
         */
        public Builder expression(@Nullable Output<String> expression) {
            $.expression = expression;
            return this;
        }

        /**
         * @param expression Expression text for defining the constituent sub slots in the composite slot using logical `AND` and `OR` operators.
         * 
         * @return builder
         * 
         */
        public Builder expression(String expression) {
            return expression(Output.of(expression));
        }

        /**
         * @param slotSpecifications Specifications for the constituent sub slots of a composite slot.
         * See the `slot_specification` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder slotSpecifications(@Nullable Output<List<V2modelsSlotSubSlotSettingSlotSpecificationArgs>> slotSpecifications) {
            $.slotSpecifications = slotSpecifications;
            return this;
        }

        /**
         * @param slotSpecifications Specifications for the constituent sub slots of a composite slot.
         * See the `slot_specification` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder slotSpecifications(List<V2modelsSlotSubSlotSettingSlotSpecificationArgs> slotSpecifications) {
            return slotSpecifications(Output.of(slotSpecifications));
        }

        /**
         * @param slotSpecifications Specifications for the constituent sub slots of a composite slot.
         * See the `slot_specification` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder slotSpecifications(V2modelsSlotSubSlotSettingSlotSpecificationArgs... slotSpecifications) {
            return slotSpecifications(List.of(slotSpecifications));
        }

        public V2modelsSlotSubSlotSettingArgs build() {
            return $;
        }
    }

}
