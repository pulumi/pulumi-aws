// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kendra.outputs;

import com.pulumi.aws.kendra.outputs.DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationCondition;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfiguration {
    /**
     * @return A block that specifies the condition used for when a Lambda function should be invoked. For example, you can specify a condition that if there are empty date-time values, then Amazon Kendra should invoke a function that inserts the current date-time. See invocation_condition.
     * 
     */
    private @Nullable DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationCondition invocationCondition;
    /**
     * @return The Amazon Resource Name (ARN) of a Lambda Function that can manipulate your document metadata fields or attributes and content.
     * 
     */
    private String lambdaArn;
    /**
     * @return Stores the original, raw documents or the structured, parsed documents before and after altering them. For more information, see [Data contracts for Lambda functions](https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html#cde-data-contracts-lambda).
     * 
     */
    private String s3Bucket;

    private DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfiguration() {}
    /**
     * @return A block that specifies the condition used for when a Lambda function should be invoked. For example, you can specify a condition that if there are empty date-time values, then Amazon Kendra should invoke a function that inserts the current date-time. See invocation_condition.
     * 
     */
    public Optional<DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationCondition> invocationCondition() {
        return Optional.ofNullable(this.invocationCondition);
    }
    /**
     * @return The Amazon Resource Name (ARN) of a Lambda Function that can manipulate your document metadata fields or attributes and content.
     * 
     */
    public String lambdaArn() {
        return this.lambdaArn;
    }
    /**
     * @return Stores the original, raw documents or the structured, parsed documents before and after altering them. For more information, see [Data contracts for Lambda functions](https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html#cde-data-contracts-lambda).
     * 
     */
    public String s3Bucket() {
        return this.s3Bucket;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationCondition invocationCondition;
        private String lambdaArn;
        private String s3Bucket;
        public Builder() {}
        public Builder(DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.invocationCondition = defaults.invocationCondition;
    	      this.lambdaArn = defaults.lambdaArn;
    	      this.s3Bucket = defaults.s3Bucket;
        }

        @CustomType.Setter
        public Builder invocationCondition(@Nullable DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationCondition invocationCondition) {

            this.invocationCondition = invocationCondition;
            return this;
        }
        @CustomType.Setter
        public Builder lambdaArn(String lambdaArn) {
            if (lambdaArn == null) {
              throw new MissingRequiredPropertyException("DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfiguration", "lambdaArn");
            }
            this.lambdaArn = lambdaArn;
            return this;
        }
        @CustomType.Setter
        public Builder s3Bucket(String s3Bucket) {
            if (s3Bucket == null) {
              throw new MissingRequiredPropertyException("DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfiguration", "s3Bucket");
            }
            this.s3Bucket = s3Bucket;
            return this;
        }
        public DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfiguration build() {
            final var _resultValue = new DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfiguration();
            _resultValue.invocationCondition = invocationCondition;
            _resultValue.lambdaArn = lambdaArn;
            _resultValue.s3Bucket = s3Bucket;
            return _resultValue;
        }
    }
}
