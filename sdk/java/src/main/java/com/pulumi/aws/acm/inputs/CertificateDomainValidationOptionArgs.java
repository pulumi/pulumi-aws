// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.acm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CertificateDomainValidationOptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final CertificateDomainValidationOptionArgs Empty = new CertificateDomainValidationOptionArgs();

    /**
     * Fully qualified domain name (FQDN) in the certificate.
     * 
     */
    @Import(name="domainName")
    private @Nullable Output<String> domainName;

    /**
     * @return Fully qualified domain name (FQDN) in the certificate.
     * 
     */
    public Optional<Output<String>> domainName() {
        return Optional.ofNullable(this.domainName);
    }

    /**
     * The name of the DNS record to create to validate the certificate
     * 
     */
    @Import(name="resourceRecordName")
    private @Nullable Output<String> resourceRecordName;

    /**
     * @return The name of the DNS record to create to validate the certificate
     * 
     */
    public Optional<Output<String>> resourceRecordName() {
        return Optional.ofNullable(this.resourceRecordName);
    }

    /**
     * The type of DNS record to create
     * 
     */
    @Import(name="resourceRecordType")
    private @Nullable Output<String> resourceRecordType;

    /**
     * @return The type of DNS record to create
     * 
     */
    public Optional<Output<String>> resourceRecordType() {
        return Optional.ofNullable(this.resourceRecordType);
    }

    /**
     * The value the DNS record needs to have
     * 
     */
    @Import(name="resourceRecordValue")
    private @Nullable Output<String> resourceRecordValue;

    /**
     * @return The value the DNS record needs to have
     * 
     */
    public Optional<Output<String>> resourceRecordValue() {
        return Optional.ofNullable(this.resourceRecordValue);
    }

    private CertificateDomainValidationOptionArgs() {}

    private CertificateDomainValidationOptionArgs(CertificateDomainValidationOptionArgs $) {
        this.domainName = $.domainName;
        this.resourceRecordName = $.resourceRecordName;
        this.resourceRecordType = $.resourceRecordType;
        this.resourceRecordValue = $.resourceRecordValue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CertificateDomainValidationOptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CertificateDomainValidationOptionArgs $;

        public Builder() {
            $ = new CertificateDomainValidationOptionArgs();
        }

        public Builder(CertificateDomainValidationOptionArgs defaults) {
            $ = new CertificateDomainValidationOptionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param domainName Fully qualified domain name (FQDN) in the certificate.
         * 
         * @return builder
         * 
         */
        public Builder domainName(@Nullable Output<String> domainName) {
            $.domainName = domainName;
            return this;
        }

        /**
         * @param domainName Fully qualified domain name (FQDN) in the certificate.
         * 
         * @return builder
         * 
         */
        public Builder domainName(String domainName) {
            return domainName(Output.of(domainName));
        }

        /**
         * @param resourceRecordName The name of the DNS record to create to validate the certificate
         * 
         * @return builder
         * 
         */
        public Builder resourceRecordName(@Nullable Output<String> resourceRecordName) {
            $.resourceRecordName = resourceRecordName;
            return this;
        }

        /**
         * @param resourceRecordName The name of the DNS record to create to validate the certificate
         * 
         * @return builder
         * 
         */
        public Builder resourceRecordName(String resourceRecordName) {
            return resourceRecordName(Output.of(resourceRecordName));
        }

        /**
         * @param resourceRecordType The type of DNS record to create
         * 
         * @return builder
         * 
         */
        public Builder resourceRecordType(@Nullable Output<String> resourceRecordType) {
            $.resourceRecordType = resourceRecordType;
            return this;
        }

        /**
         * @param resourceRecordType The type of DNS record to create
         * 
         * @return builder
         * 
         */
        public Builder resourceRecordType(String resourceRecordType) {
            return resourceRecordType(Output.of(resourceRecordType));
        }

        /**
         * @param resourceRecordValue The value the DNS record needs to have
         * 
         * @return builder
         * 
         */
        public Builder resourceRecordValue(@Nullable Output<String> resourceRecordValue) {
            $.resourceRecordValue = resourceRecordValue;
            return this;
        }

        /**
         * @param resourceRecordValue The value the DNS record needs to have
         * 
         * @return builder
         * 
         */
        public Builder resourceRecordValue(String resourceRecordValue) {
            return resourceRecordValue(Output.of(resourceRecordValue));
        }

        public CertificateDomainValidationOptionArgs build() {
            return $;
        }
    }

}
