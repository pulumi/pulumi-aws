// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.datasync;

import com.pulumi.aws.datasync.inputs.LocationAzureBlobSasConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LocationAzureBlobArgs extends com.pulumi.resources.ResourceArgs {

    public static final LocationAzureBlobArgs Empty = new LocationAzureBlobArgs();

    /**
     * The access tier that you want your objects or files transferred into. Valid values: `HOT`, `COOL` and `ARCHIVE`. Default: `HOT`.
     * 
     */
    @Import(name="accessTier")
    private @Nullable Output<String> accessTier;

    /**
     * @return The access tier that you want your objects or files transferred into. Valid values: `HOT`, `COOL` and `ARCHIVE`. Default: `HOT`.
     * 
     */
    public Optional<Output<String>> accessTier() {
        return Optional.ofNullable(this.accessTier);
    }

    /**
     * A list of DataSync Agent ARNs with which this location will be associated.
     * 
     */
    @Import(name="agentArns", required=true)
    private Output<List<String>> agentArns;

    /**
     * @return A list of DataSync Agent ARNs with which this location will be associated.
     * 
     */
    public Output<List<String>> agentArns() {
        return this.agentArns;
    }

    /**
     * The authentication method DataSync uses to access your Azure Blob Storage. Valid values: `SAS`.
     * 
     */
    @Import(name="authenticationType", required=true)
    private Output<String> authenticationType;

    /**
     * @return The authentication method DataSync uses to access your Azure Blob Storage. Valid values: `SAS`.
     * 
     */
    public Output<String> authenticationType() {
        return this.authenticationType;
    }

    /**
     * The type of blob that you want your objects or files to be when transferring them into Azure Blob Storage. Valid values: `BLOB`. Default: `BLOB`.
     * 
     */
    @Import(name="blobType")
    private @Nullable Output<String> blobType;

    /**
     * @return The type of blob that you want your objects or files to be when transferring them into Azure Blob Storage. Valid values: `BLOB`. Default: `BLOB`.
     * 
     */
    public Optional<Output<String>> blobType() {
        return Optional.ofNullable(this.blobType);
    }

    /**
     * The URL of the Azure Blob Storage container involved in your transfer.
     * 
     */
    @Import(name="containerUrl", required=true)
    private Output<String> containerUrl;

    /**
     * @return The URL of the Azure Blob Storage container involved in your transfer.
     * 
     */
    public Output<String> containerUrl() {
        return this.containerUrl;
    }

    /**
     * The SAS configuration that allows DataSync to access your Azure Blob Storage. See configuration below.
     * 
     */
    @Import(name="sasConfiguration")
    private @Nullable Output<LocationAzureBlobSasConfigurationArgs> sasConfiguration;

    /**
     * @return The SAS configuration that allows DataSync to access your Azure Blob Storage. See configuration below.
     * 
     */
    public Optional<Output<LocationAzureBlobSasConfigurationArgs>> sasConfiguration() {
        return Optional.ofNullable(this.sasConfiguration);
    }

    /**
     * Path segments if you want to limit your transfer to a virtual directory in the container.
     * 
     */
    @Import(name="subdirectory")
    private @Nullable Output<String> subdirectory;

    /**
     * @return Path segments if you want to limit your transfer to a virtual directory in the container.
     * 
     */
    public Optional<Output<String>> subdirectory() {
        return Optional.ofNullable(this.subdirectory);
    }

    /**
     * Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private LocationAzureBlobArgs() {}

    private LocationAzureBlobArgs(LocationAzureBlobArgs $) {
        this.accessTier = $.accessTier;
        this.agentArns = $.agentArns;
        this.authenticationType = $.authenticationType;
        this.blobType = $.blobType;
        this.containerUrl = $.containerUrl;
        this.sasConfiguration = $.sasConfiguration;
        this.subdirectory = $.subdirectory;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LocationAzureBlobArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LocationAzureBlobArgs $;

        public Builder() {
            $ = new LocationAzureBlobArgs();
        }

        public Builder(LocationAzureBlobArgs defaults) {
            $ = new LocationAzureBlobArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessTier The access tier that you want your objects or files transferred into. Valid values: `HOT`, `COOL` and `ARCHIVE`. Default: `HOT`.
         * 
         * @return builder
         * 
         */
        public Builder accessTier(@Nullable Output<String> accessTier) {
            $.accessTier = accessTier;
            return this;
        }

        /**
         * @param accessTier The access tier that you want your objects or files transferred into. Valid values: `HOT`, `COOL` and `ARCHIVE`. Default: `HOT`.
         * 
         * @return builder
         * 
         */
        public Builder accessTier(String accessTier) {
            return accessTier(Output.of(accessTier));
        }

        /**
         * @param agentArns A list of DataSync Agent ARNs with which this location will be associated.
         * 
         * @return builder
         * 
         */
        public Builder agentArns(Output<List<String>> agentArns) {
            $.agentArns = agentArns;
            return this;
        }

        /**
         * @param agentArns A list of DataSync Agent ARNs with which this location will be associated.
         * 
         * @return builder
         * 
         */
        public Builder agentArns(List<String> agentArns) {
            return agentArns(Output.of(agentArns));
        }

        /**
         * @param agentArns A list of DataSync Agent ARNs with which this location will be associated.
         * 
         * @return builder
         * 
         */
        public Builder agentArns(String... agentArns) {
            return agentArns(List.of(agentArns));
        }

        /**
         * @param authenticationType The authentication method DataSync uses to access your Azure Blob Storage. Valid values: `SAS`.
         * 
         * @return builder
         * 
         */
        public Builder authenticationType(Output<String> authenticationType) {
            $.authenticationType = authenticationType;
            return this;
        }

        /**
         * @param authenticationType The authentication method DataSync uses to access your Azure Blob Storage. Valid values: `SAS`.
         * 
         * @return builder
         * 
         */
        public Builder authenticationType(String authenticationType) {
            return authenticationType(Output.of(authenticationType));
        }

        /**
         * @param blobType The type of blob that you want your objects or files to be when transferring them into Azure Blob Storage. Valid values: `BLOB`. Default: `BLOB`.
         * 
         * @return builder
         * 
         */
        public Builder blobType(@Nullable Output<String> blobType) {
            $.blobType = blobType;
            return this;
        }

        /**
         * @param blobType The type of blob that you want your objects or files to be when transferring them into Azure Blob Storage. Valid values: `BLOB`. Default: `BLOB`.
         * 
         * @return builder
         * 
         */
        public Builder blobType(String blobType) {
            return blobType(Output.of(blobType));
        }

        /**
         * @param containerUrl The URL of the Azure Blob Storage container involved in your transfer.
         * 
         * @return builder
         * 
         */
        public Builder containerUrl(Output<String> containerUrl) {
            $.containerUrl = containerUrl;
            return this;
        }

        /**
         * @param containerUrl The URL of the Azure Blob Storage container involved in your transfer.
         * 
         * @return builder
         * 
         */
        public Builder containerUrl(String containerUrl) {
            return containerUrl(Output.of(containerUrl));
        }

        /**
         * @param sasConfiguration The SAS configuration that allows DataSync to access your Azure Blob Storage. See configuration below.
         * 
         * @return builder
         * 
         */
        public Builder sasConfiguration(@Nullable Output<LocationAzureBlobSasConfigurationArgs> sasConfiguration) {
            $.sasConfiguration = sasConfiguration;
            return this;
        }

        /**
         * @param sasConfiguration The SAS configuration that allows DataSync to access your Azure Blob Storage. See configuration below.
         * 
         * @return builder
         * 
         */
        public Builder sasConfiguration(LocationAzureBlobSasConfigurationArgs sasConfiguration) {
            return sasConfiguration(Output.of(sasConfiguration));
        }

        /**
         * @param subdirectory Path segments if you want to limit your transfer to a virtual directory in the container.
         * 
         * @return builder
         * 
         */
        public Builder subdirectory(@Nullable Output<String> subdirectory) {
            $.subdirectory = subdirectory;
            return this;
        }

        /**
         * @param subdirectory Path segments if you want to limit your transfer to a virtual directory in the container.
         * 
         * @return builder
         * 
         */
        public Builder subdirectory(String subdirectory) {
            return subdirectory(Output.of(subdirectory));
        }

        /**
         * @param tags Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public LocationAzureBlobArgs build() {
            if ($.agentArns == null) {
                throw new MissingRequiredPropertyException("LocationAzureBlobArgs", "agentArns");
            }
            if ($.authenticationType == null) {
                throw new MissingRequiredPropertyException("LocationAzureBlobArgs", "authenticationType");
            }
            if ($.containerUrl == null) {
                throw new MissingRequiredPropertyException("LocationAzureBlobArgs", "containerUrl");
            }
            return $;
        }
    }

}
