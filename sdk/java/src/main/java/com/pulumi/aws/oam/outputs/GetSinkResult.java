// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.oam.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSinkResult {
    /**
     * @return ARN of the sink.
     * 
     */
    private @Nullable String arn;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return Name of the sink.
     * 
     */
    private @Nullable String name;
    /**
     * @return Random ID string that AWS generated as part of the sink ARN.
     * 
     */
    private @Nullable String sinkId;
    private String sinkIdentifier;
    /**
     * @return Tags assigned to the sink.
     * 
     */
    private @Nullable Map<String,String> tags;

    private GetSinkResult() {}
    /**
     * @return ARN of the sink.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Name of the sink.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Random ID string that AWS generated as part of the sink ARN.
     * 
     */
    public Optional<String> sinkId() {
        return Optional.ofNullable(this.sinkId);
    }
    public String sinkIdentifier() {
        return this.sinkIdentifier;
    }
    /**
     * @return Tags assigned to the sink.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSinkResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String id;
        private @Nullable String name;
        private @Nullable String sinkId;
        private String sinkIdentifier;
        private @Nullable Map<String,String> tags;
        public Builder() {}
        public Builder(GetSinkResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.sinkId = defaults.sinkId;
    	      this.sinkIdentifier = defaults.sinkIdentifier;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder sinkId(@Nullable String sinkId) {
            this.sinkId = sinkId;
            return this;
        }
        @CustomType.Setter
        public Builder sinkIdentifier(String sinkIdentifier) {
            this.sinkIdentifier = Objects.requireNonNull(sinkIdentifier);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public GetSinkResult build() {
            final var o = new GetSinkResult();
            o.arn = arn;
            o.id = id;
            o.name = name;
            o.sinkId = sinkId;
            o.sinkIdentifier = sinkIdentifier;
            o.tags = tags;
            return o;
        }
    }
}
