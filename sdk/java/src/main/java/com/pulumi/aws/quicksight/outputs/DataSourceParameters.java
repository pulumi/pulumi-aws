// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.DataSourceParametersAmazonElasticsearch;
import com.pulumi.aws.quicksight.outputs.DataSourceParametersAthena;
import com.pulumi.aws.quicksight.outputs.DataSourceParametersAurora;
import com.pulumi.aws.quicksight.outputs.DataSourceParametersAuroraPostgresql;
import com.pulumi.aws.quicksight.outputs.DataSourceParametersAwsIotAnalytics;
import com.pulumi.aws.quicksight.outputs.DataSourceParametersJira;
import com.pulumi.aws.quicksight.outputs.DataSourceParametersMariaDb;
import com.pulumi.aws.quicksight.outputs.DataSourceParametersMysql;
import com.pulumi.aws.quicksight.outputs.DataSourceParametersOracle;
import com.pulumi.aws.quicksight.outputs.DataSourceParametersPostgresql;
import com.pulumi.aws.quicksight.outputs.DataSourceParametersPresto;
import com.pulumi.aws.quicksight.outputs.DataSourceParametersRds;
import com.pulumi.aws.quicksight.outputs.DataSourceParametersRedshift;
import com.pulumi.aws.quicksight.outputs.DataSourceParametersS3;
import com.pulumi.aws.quicksight.outputs.DataSourceParametersServiceNow;
import com.pulumi.aws.quicksight.outputs.DataSourceParametersSnowflake;
import com.pulumi.aws.quicksight.outputs.DataSourceParametersSpark;
import com.pulumi.aws.quicksight.outputs.DataSourceParametersSqlServer;
import com.pulumi.aws.quicksight.outputs.DataSourceParametersTeradata;
import com.pulumi.aws.quicksight.outputs.DataSourceParametersTwitter;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DataSourceParameters {
    /**
     * @return Parameters for connecting to Amazon Elasticsearch.
     * 
     */
    private @Nullable DataSourceParametersAmazonElasticsearch amazonElasticsearch;
    /**
     * @return Parameters for connecting to Athena.
     * 
     */
    private @Nullable DataSourceParametersAthena athena;
    /**
     * @return Parameters for connecting to Aurora MySQL.
     * 
     */
    private @Nullable DataSourceParametersAurora aurora;
    /**
     * @return Parameters for connecting to Aurora Postgresql.
     * 
     */
    private @Nullable DataSourceParametersAuroraPostgresql auroraPostgresql;
    /**
     * @return Parameters for connecting to AWS IOT Analytics.
     * 
     */
    private @Nullable DataSourceParametersAwsIotAnalytics awsIotAnalytics;
    /**
     * @return Parameters for connecting to Jira.
     * 
     */
    private @Nullable DataSourceParametersJira jira;
    /**
     * @return Parameters for connecting to MariaDB.
     * 
     */
    private @Nullable DataSourceParametersMariaDb mariaDb;
    /**
     * @return Parameters for connecting to MySQL.
     * 
     */
    private @Nullable DataSourceParametersMysql mysql;
    /**
     * @return Parameters for connecting to Oracle.
     * 
     */
    private @Nullable DataSourceParametersOracle oracle;
    /**
     * @return Parameters for connecting to Postgresql.
     * 
     */
    private @Nullable DataSourceParametersPostgresql postgresql;
    /**
     * @return Parameters for connecting to Presto.
     * 
     */
    private @Nullable DataSourceParametersPresto presto;
    /**
     * @return Parameters for connecting to RDS.
     * 
     */
    private @Nullable DataSourceParametersRds rds;
    /**
     * @return Parameters for connecting to Redshift.
     * 
     */
    private @Nullable DataSourceParametersRedshift redshift;
    /**
     * @return Parameters for connecting to S3.
     * 
     */
    private @Nullable DataSourceParametersS3 s3;
    /**
     * @return Parameters for connecting to ServiceNow.
     * 
     */
    private @Nullable DataSourceParametersServiceNow serviceNow;
    /**
     * @return Parameters for connecting to Snowflake.
     * 
     */
    private @Nullable DataSourceParametersSnowflake snowflake;
    /**
     * @return Parameters for connecting to Spark.
     * 
     */
    private @Nullable DataSourceParametersSpark spark;
    /**
     * @return Parameters for connecting to SQL Server.
     * 
     */
    private @Nullable DataSourceParametersSqlServer sqlServer;
    /**
     * @return Parameters for connecting to Teradata.
     * 
     */
    private @Nullable DataSourceParametersTeradata teradata;
    /**
     * @return Parameters for connecting to Twitter.
     * 
     */
    private @Nullable DataSourceParametersTwitter twitter;

    private DataSourceParameters() {}
    /**
     * @return Parameters for connecting to Amazon Elasticsearch.
     * 
     */
    public Optional<DataSourceParametersAmazonElasticsearch> amazonElasticsearch() {
        return Optional.ofNullable(this.amazonElasticsearch);
    }
    /**
     * @return Parameters for connecting to Athena.
     * 
     */
    public Optional<DataSourceParametersAthena> athena() {
        return Optional.ofNullable(this.athena);
    }
    /**
     * @return Parameters for connecting to Aurora MySQL.
     * 
     */
    public Optional<DataSourceParametersAurora> aurora() {
        return Optional.ofNullable(this.aurora);
    }
    /**
     * @return Parameters for connecting to Aurora Postgresql.
     * 
     */
    public Optional<DataSourceParametersAuroraPostgresql> auroraPostgresql() {
        return Optional.ofNullable(this.auroraPostgresql);
    }
    /**
     * @return Parameters for connecting to AWS IOT Analytics.
     * 
     */
    public Optional<DataSourceParametersAwsIotAnalytics> awsIotAnalytics() {
        return Optional.ofNullable(this.awsIotAnalytics);
    }
    /**
     * @return Parameters for connecting to Jira.
     * 
     */
    public Optional<DataSourceParametersJira> jira() {
        return Optional.ofNullable(this.jira);
    }
    /**
     * @return Parameters for connecting to MariaDB.
     * 
     */
    public Optional<DataSourceParametersMariaDb> mariaDb() {
        return Optional.ofNullable(this.mariaDb);
    }
    /**
     * @return Parameters for connecting to MySQL.
     * 
     */
    public Optional<DataSourceParametersMysql> mysql() {
        return Optional.ofNullable(this.mysql);
    }
    /**
     * @return Parameters for connecting to Oracle.
     * 
     */
    public Optional<DataSourceParametersOracle> oracle() {
        return Optional.ofNullable(this.oracle);
    }
    /**
     * @return Parameters for connecting to Postgresql.
     * 
     */
    public Optional<DataSourceParametersPostgresql> postgresql() {
        return Optional.ofNullable(this.postgresql);
    }
    /**
     * @return Parameters for connecting to Presto.
     * 
     */
    public Optional<DataSourceParametersPresto> presto() {
        return Optional.ofNullable(this.presto);
    }
    /**
     * @return Parameters for connecting to RDS.
     * 
     */
    public Optional<DataSourceParametersRds> rds() {
        return Optional.ofNullable(this.rds);
    }
    /**
     * @return Parameters for connecting to Redshift.
     * 
     */
    public Optional<DataSourceParametersRedshift> redshift() {
        return Optional.ofNullable(this.redshift);
    }
    /**
     * @return Parameters for connecting to S3.
     * 
     */
    public Optional<DataSourceParametersS3> s3() {
        return Optional.ofNullable(this.s3);
    }
    /**
     * @return Parameters for connecting to ServiceNow.
     * 
     */
    public Optional<DataSourceParametersServiceNow> serviceNow() {
        return Optional.ofNullable(this.serviceNow);
    }
    /**
     * @return Parameters for connecting to Snowflake.
     * 
     */
    public Optional<DataSourceParametersSnowflake> snowflake() {
        return Optional.ofNullable(this.snowflake);
    }
    /**
     * @return Parameters for connecting to Spark.
     * 
     */
    public Optional<DataSourceParametersSpark> spark() {
        return Optional.ofNullable(this.spark);
    }
    /**
     * @return Parameters for connecting to SQL Server.
     * 
     */
    public Optional<DataSourceParametersSqlServer> sqlServer() {
        return Optional.ofNullable(this.sqlServer);
    }
    /**
     * @return Parameters for connecting to Teradata.
     * 
     */
    public Optional<DataSourceParametersTeradata> teradata() {
        return Optional.ofNullable(this.teradata);
    }
    /**
     * @return Parameters for connecting to Twitter.
     * 
     */
    public Optional<DataSourceParametersTwitter> twitter() {
        return Optional.ofNullable(this.twitter);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataSourceParameters defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable DataSourceParametersAmazonElasticsearch amazonElasticsearch;
        private @Nullable DataSourceParametersAthena athena;
        private @Nullable DataSourceParametersAurora aurora;
        private @Nullable DataSourceParametersAuroraPostgresql auroraPostgresql;
        private @Nullable DataSourceParametersAwsIotAnalytics awsIotAnalytics;
        private @Nullable DataSourceParametersJira jira;
        private @Nullable DataSourceParametersMariaDb mariaDb;
        private @Nullable DataSourceParametersMysql mysql;
        private @Nullable DataSourceParametersOracle oracle;
        private @Nullable DataSourceParametersPostgresql postgresql;
        private @Nullable DataSourceParametersPresto presto;
        private @Nullable DataSourceParametersRds rds;
        private @Nullable DataSourceParametersRedshift redshift;
        private @Nullable DataSourceParametersS3 s3;
        private @Nullable DataSourceParametersServiceNow serviceNow;
        private @Nullable DataSourceParametersSnowflake snowflake;
        private @Nullable DataSourceParametersSpark spark;
        private @Nullable DataSourceParametersSqlServer sqlServer;
        private @Nullable DataSourceParametersTeradata teradata;
        private @Nullable DataSourceParametersTwitter twitter;
        public Builder() {}
        public Builder(DataSourceParameters defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.amazonElasticsearch = defaults.amazonElasticsearch;
    	      this.athena = defaults.athena;
    	      this.aurora = defaults.aurora;
    	      this.auroraPostgresql = defaults.auroraPostgresql;
    	      this.awsIotAnalytics = defaults.awsIotAnalytics;
    	      this.jira = defaults.jira;
    	      this.mariaDb = defaults.mariaDb;
    	      this.mysql = defaults.mysql;
    	      this.oracle = defaults.oracle;
    	      this.postgresql = defaults.postgresql;
    	      this.presto = defaults.presto;
    	      this.rds = defaults.rds;
    	      this.redshift = defaults.redshift;
    	      this.s3 = defaults.s3;
    	      this.serviceNow = defaults.serviceNow;
    	      this.snowflake = defaults.snowflake;
    	      this.spark = defaults.spark;
    	      this.sqlServer = defaults.sqlServer;
    	      this.teradata = defaults.teradata;
    	      this.twitter = defaults.twitter;
        }

        @CustomType.Setter
        public Builder amazonElasticsearch(@Nullable DataSourceParametersAmazonElasticsearch amazonElasticsearch) {
            this.amazonElasticsearch = amazonElasticsearch;
            return this;
        }
        @CustomType.Setter
        public Builder athena(@Nullable DataSourceParametersAthena athena) {
            this.athena = athena;
            return this;
        }
        @CustomType.Setter
        public Builder aurora(@Nullable DataSourceParametersAurora aurora) {
            this.aurora = aurora;
            return this;
        }
        @CustomType.Setter
        public Builder auroraPostgresql(@Nullable DataSourceParametersAuroraPostgresql auroraPostgresql) {
            this.auroraPostgresql = auroraPostgresql;
            return this;
        }
        @CustomType.Setter
        public Builder awsIotAnalytics(@Nullable DataSourceParametersAwsIotAnalytics awsIotAnalytics) {
            this.awsIotAnalytics = awsIotAnalytics;
            return this;
        }
        @CustomType.Setter
        public Builder jira(@Nullable DataSourceParametersJira jira) {
            this.jira = jira;
            return this;
        }
        @CustomType.Setter
        public Builder mariaDb(@Nullable DataSourceParametersMariaDb mariaDb) {
            this.mariaDb = mariaDb;
            return this;
        }
        @CustomType.Setter
        public Builder mysql(@Nullable DataSourceParametersMysql mysql) {
            this.mysql = mysql;
            return this;
        }
        @CustomType.Setter
        public Builder oracle(@Nullable DataSourceParametersOracle oracle) {
            this.oracle = oracle;
            return this;
        }
        @CustomType.Setter
        public Builder postgresql(@Nullable DataSourceParametersPostgresql postgresql) {
            this.postgresql = postgresql;
            return this;
        }
        @CustomType.Setter
        public Builder presto(@Nullable DataSourceParametersPresto presto) {
            this.presto = presto;
            return this;
        }
        @CustomType.Setter
        public Builder rds(@Nullable DataSourceParametersRds rds) {
            this.rds = rds;
            return this;
        }
        @CustomType.Setter
        public Builder redshift(@Nullable DataSourceParametersRedshift redshift) {
            this.redshift = redshift;
            return this;
        }
        @CustomType.Setter
        public Builder s3(@Nullable DataSourceParametersS3 s3) {
            this.s3 = s3;
            return this;
        }
        @CustomType.Setter
        public Builder serviceNow(@Nullable DataSourceParametersServiceNow serviceNow) {
            this.serviceNow = serviceNow;
            return this;
        }
        @CustomType.Setter
        public Builder snowflake(@Nullable DataSourceParametersSnowflake snowflake) {
            this.snowflake = snowflake;
            return this;
        }
        @CustomType.Setter
        public Builder spark(@Nullable DataSourceParametersSpark spark) {
            this.spark = spark;
            return this;
        }
        @CustomType.Setter
        public Builder sqlServer(@Nullable DataSourceParametersSqlServer sqlServer) {
            this.sqlServer = sqlServer;
            return this;
        }
        @CustomType.Setter
        public Builder teradata(@Nullable DataSourceParametersTeradata teradata) {
            this.teradata = teradata;
            return this;
        }
        @CustomType.Setter
        public Builder twitter(@Nullable DataSourceParametersTwitter twitter) {
            this.twitter = twitter;
            return this;
        }
        public DataSourceParameters build() {
            final var _resultValue = new DataSourceParameters();
            _resultValue.amazonElasticsearch = amazonElasticsearch;
            _resultValue.athena = athena;
            _resultValue.aurora = aurora;
            _resultValue.auroraPostgresql = auroraPostgresql;
            _resultValue.awsIotAnalytics = awsIotAnalytics;
            _resultValue.jira = jira;
            _resultValue.mariaDb = mariaDb;
            _resultValue.mysql = mysql;
            _resultValue.oracle = oracle;
            _resultValue.postgresql = postgresql;
            _resultValue.presto = presto;
            _resultValue.rds = rds;
            _resultValue.redshift = redshift;
            _resultValue.s3 = s3;
            _resultValue.serviceNow = serviceNow;
            _resultValue.snowflake = snowflake;
            _resultValue.spark = spark;
            _resultValue.sqlServer = sqlServer;
            _resultValue.teradata = teradata;
            _resultValue.twitter = twitter;
            return _resultValue;
        }
    }
}
