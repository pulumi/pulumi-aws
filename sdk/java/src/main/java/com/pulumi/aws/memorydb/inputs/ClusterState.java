// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.memorydb.inputs;

import com.pulumi.aws.memorydb.inputs.ClusterClusterEndpointArgs;
import com.pulumi.aws.memorydb.inputs.ClusterShardArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterState extends com.pulumi.resources.ResourceArgs {

    public static final ClusterState Empty = new ClusterState();

    @Import(name="aclName")
    private @Nullable Output<String> aclName;

    public Optional<Output<String>> aclName() {
        return Optional.ofNullable(this.aclName);
    }

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="autoMinorVersionUpgrade")
    private @Nullable Output<Boolean> autoMinorVersionUpgrade;

    public Optional<Output<Boolean>> autoMinorVersionUpgrade() {
        return Optional.ofNullable(this.autoMinorVersionUpgrade);
    }

    @Import(name="clusterEndpoints")
    private @Nullable Output<List<ClusterClusterEndpointArgs>> clusterEndpoints;

    public Optional<Output<List<ClusterClusterEndpointArgs>>> clusterEndpoints() {
        return Optional.ofNullable(this.clusterEndpoints);
    }

    @Import(name="dataTiering")
    private @Nullable Output<Boolean> dataTiering;

    public Optional<Output<Boolean>> dataTiering() {
        return Optional.ofNullable(this.dataTiering);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="enginePatchVersion")
    private @Nullable Output<String> enginePatchVersion;

    public Optional<Output<String>> enginePatchVersion() {
        return Optional.ofNullable(this.enginePatchVersion);
    }

    @Import(name="engineVersion")
    private @Nullable Output<String> engineVersion;

    public Optional<Output<String>> engineVersion() {
        return Optional.ofNullable(this.engineVersion);
    }

    @Import(name="finalSnapshotName")
    private @Nullable Output<String> finalSnapshotName;

    public Optional<Output<String>> finalSnapshotName() {
        return Optional.ofNullable(this.finalSnapshotName);
    }

    @Import(name="kmsKeyArn")
    private @Nullable Output<String> kmsKeyArn;

    public Optional<Output<String>> kmsKeyArn() {
        return Optional.ofNullable(this.kmsKeyArn);
    }

    @Import(name="maintenanceWindow")
    private @Nullable Output<String> maintenanceWindow;

    public Optional<Output<String>> maintenanceWindow() {
        return Optional.ofNullable(this.maintenanceWindow);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="namePrefix")
    private @Nullable Output<String> namePrefix;

    public Optional<Output<String>> namePrefix() {
        return Optional.ofNullable(this.namePrefix);
    }

    @Import(name="nodeType")
    private @Nullable Output<String> nodeType;

    public Optional<Output<String>> nodeType() {
        return Optional.ofNullable(this.nodeType);
    }

    @Import(name="numReplicasPerShard")
    private @Nullable Output<Integer> numReplicasPerShard;

    public Optional<Output<Integer>> numReplicasPerShard() {
        return Optional.ofNullable(this.numReplicasPerShard);
    }

    @Import(name="numShards")
    private @Nullable Output<Integer> numShards;

    public Optional<Output<Integer>> numShards() {
        return Optional.ofNullable(this.numShards);
    }

    @Import(name="parameterGroupName")
    private @Nullable Output<String> parameterGroupName;

    public Optional<Output<String>> parameterGroupName() {
        return Optional.ofNullable(this.parameterGroupName);
    }

    @Import(name="port")
    private @Nullable Output<Integer> port;

    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    @Import(name="securityGroupIds")
    private @Nullable Output<List<String>> securityGroupIds;

    public Optional<Output<List<String>>> securityGroupIds() {
        return Optional.ofNullable(this.securityGroupIds);
    }

    @Import(name="shards")
    private @Nullable Output<List<ClusterShardArgs>> shards;

    public Optional<Output<List<ClusterShardArgs>>> shards() {
        return Optional.ofNullable(this.shards);
    }

    @Import(name="snapshotArns")
    private @Nullable Output<List<String>> snapshotArns;

    public Optional<Output<List<String>>> snapshotArns() {
        return Optional.ofNullable(this.snapshotArns);
    }

    @Import(name="snapshotName")
    private @Nullable Output<String> snapshotName;

    public Optional<Output<String>> snapshotName() {
        return Optional.ofNullable(this.snapshotName);
    }

    @Import(name="snapshotRetentionLimit")
    private @Nullable Output<Integer> snapshotRetentionLimit;

    public Optional<Output<Integer>> snapshotRetentionLimit() {
        return Optional.ofNullable(this.snapshotRetentionLimit);
    }

    @Import(name="snapshotWindow")
    private @Nullable Output<String> snapshotWindow;

    public Optional<Output<String>> snapshotWindow() {
        return Optional.ofNullable(this.snapshotWindow);
    }

    @Import(name="snsTopicArn")
    private @Nullable Output<String> snsTopicArn;

    public Optional<Output<String>> snsTopicArn() {
        return Optional.ofNullable(this.snsTopicArn);
    }

    @Import(name="subnetGroupName")
    private @Nullable Output<String> subnetGroupName;

    public Optional<Output<String>> subnetGroupName() {
        return Optional.ofNullable(this.subnetGroupName);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="tlsEnabled")
    private @Nullable Output<Boolean> tlsEnabled;

    public Optional<Output<Boolean>> tlsEnabled() {
        return Optional.ofNullable(this.tlsEnabled);
    }

    private ClusterState() {}

    private ClusterState(ClusterState $) {
        this.aclName = $.aclName;
        this.arn = $.arn;
        this.autoMinorVersionUpgrade = $.autoMinorVersionUpgrade;
        this.clusterEndpoints = $.clusterEndpoints;
        this.dataTiering = $.dataTiering;
        this.description = $.description;
        this.enginePatchVersion = $.enginePatchVersion;
        this.engineVersion = $.engineVersion;
        this.finalSnapshotName = $.finalSnapshotName;
        this.kmsKeyArn = $.kmsKeyArn;
        this.maintenanceWindow = $.maintenanceWindow;
        this.name = $.name;
        this.namePrefix = $.namePrefix;
        this.nodeType = $.nodeType;
        this.numReplicasPerShard = $.numReplicasPerShard;
        this.numShards = $.numShards;
        this.parameterGroupName = $.parameterGroupName;
        this.port = $.port;
        this.securityGroupIds = $.securityGroupIds;
        this.shards = $.shards;
        this.snapshotArns = $.snapshotArns;
        this.snapshotName = $.snapshotName;
        this.snapshotRetentionLimit = $.snapshotRetentionLimit;
        this.snapshotWindow = $.snapshotWindow;
        this.snsTopicArn = $.snsTopicArn;
        this.subnetGroupName = $.subnetGroupName;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.tlsEnabled = $.tlsEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterState $;

        public Builder() {
            $ = new ClusterState();
        }

        public Builder(ClusterState defaults) {
            $ = new ClusterState(Objects.requireNonNull(defaults));
        }

        public Builder aclName(@Nullable Output<String> aclName) {
            $.aclName = aclName;
            return this;
        }

        public Builder aclName(String aclName) {
            return aclName(Output.of(aclName));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder autoMinorVersionUpgrade(@Nullable Output<Boolean> autoMinorVersionUpgrade) {
            $.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
            return this;
        }

        public Builder autoMinorVersionUpgrade(Boolean autoMinorVersionUpgrade) {
            return autoMinorVersionUpgrade(Output.of(autoMinorVersionUpgrade));
        }

        public Builder clusterEndpoints(@Nullable Output<List<ClusterClusterEndpointArgs>> clusterEndpoints) {
            $.clusterEndpoints = clusterEndpoints;
            return this;
        }

        public Builder clusterEndpoints(List<ClusterClusterEndpointArgs> clusterEndpoints) {
            return clusterEndpoints(Output.of(clusterEndpoints));
        }

        public Builder clusterEndpoints(ClusterClusterEndpointArgs... clusterEndpoints) {
            return clusterEndpoints(List.of(clusterEndpoints));
        }

        public Builder dataTiering(@Nullable Output<Boolean> dataTiering) {
            $.dataTiering = dataTiering;
            return this;
        }

        public Builder dataTiering(Boolean dataTiering) {
            return dataTiering(Output.of(dataTiering));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder enginePatchVersion(@Nullable Output<String> enginePatchVersion) {
            $.enginePatchVersion = enginePatchVersion;
            return this;
        }

        public Builder enginePatchVersion(String enginePatchVersion) {
            return enginePatchVersion(Output.of(enginePatchVersion));
        }

        public Builder engineVersion(@Nullable Output<String> engineVersion) {
            $.engineVersion = engineVersion;
            return this;
        }

        public Builder engineVersion(String engineVersion) {
            return engineVersion(Output.of(engineVersion));
        }

        public Builder finalSnapshotName(@Nullable Output<String> finalSnapshotName) {
            $.finalSnapshotName = finalSnapshotName;
            return this;
        }

        public Builder finalSnapshotName(String finalSnapshotName) {
            return finalSnapshotName(Output.of(finalSnapshotName));
        }

        public Builder kmsKeyArn(@Nullable Output<String> kmsKeyArn) {
            $.kmsKeyArn = kmsKeyArn;
            return this;
        }

        public Builder kmsKeyArn(String kmsKeyArn) {
            return kmsKeyArn(Output.of(kmsKeyArn));
        }

        public Builder maintenanceWindow(@Nullable Output<String> maintenanceWindow) {
            $.maintenanceWindow = maintenanceWindow;
            return this;
        }

        public Builder maintenanceWindow(String maintenanceWindow) {
            return maintenanceWindow(Output.of(maintenanceWindow));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder namePrefix(@Nullable Output<String> namePrefix) {
            $.namePrefix = namePrefix;
            return this;
        }

        public Builder namePrefix(String namePrefix) {
            return namePrefix(Output.of(namePrefix));
        }

        public Builder nodeType(@Nullable Output<String> nodeType) {
            $.nodeType = nodeType;
            return this;
        }

        public Builder nodeType(String nodeType) {
            return nodeType(Output.of(nodeType));
        }

        public Builder numReplicasPerShard(@Nullable Output<Integer> numReplicasPerShard) {
            $.numReplicasPerShard = numReplicasPerShard;
            return this;
        }

        public Builder numReplicasPerShard(Integer numReplicasPerShard) {
            return numReplicasPerShard(Output.of(numReplicasPerShard));
        }

        public Builder numShards(@Nullable Output<Integer> numShards) {
            $.numShards = numShards;
            return this;
        }

        public Builder numShards(Integer numShards) {
            return numShards(Output.of(numShards));
        }

        public Builder parameterGroupName(@Nullable Output<String> parameterGroupName) {
            $.parameterGroupName = parameterGroupName;
            return this;
        }

        public Builder parameterGroupName(String parameterGroupName) {
            return parameterGroupName(Output.of(parameterGroupName));
        }

        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        public Builder securityGroupIds(@Nullable Output<List<String>> securityGroupIds) {
            $.securityGroupIds = securityGroupIds;
            return this;
        }

        public Builder securityGroupIds(List<String> securityGroupIds) {
            return securityGroupIds(Output.of(securityGroupIds));
        }

        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }

        public Builder shards(@Nullable Output<List<ClusterShardArgs>> shards) {
            $.shards = shards;
            return this;
        }

        public Builder shards(List<ClusterShardArgs> shards) {
            return shards(Output.of(shards));
        }

        public Builder shards(ClusterShardArgs... shards) {
            return shards(List.of(shards));
        }

        public Builder snapshotArns(@Nullable Output<List<String>> snapshotArns) {
            $.snapshotArns = snapshotArns;
            return this;
        }

        public Builder snapshotArns(List<String> snapshotArns) {
            return snapshotArns(Output.of(snapshotArns));
        }

        public Builder snapshotArns(String... snapshotArns) {
            return snapshotArns(List.of(snapshotArns));
        }

        public Builder snapshotName(@Nullable Output<String> snapshotName) {
            $.snapshotName = snapshotName;
            return this;
        }

        public Builder snapshotName(String snapshotName) {
            return snapshotName(Output.of(snapshotName));
        }

        public Builder snapshotRetentionLimit(@Nullable Output<Integer> snapshotRetentionLimit) {
            $.snapshotRetentionLimit = snapshotRetentionLimit;
            return this;
        }

        public Builder snapshotRetentionLimit(Integer snapshotRetentionLimit) {
            return snapshotRetentionLimit(Output.of(snapshotRetentionLimit));
        }

        public Builder snapshotWindow(@Nullable Output<String> snapshotWindow) {
            $.snapshotWindow = snapshotWindow;
            return this;
        }

        public Builder snapshotWindow(String snapshotWindow) {
            return snapshotWindow(Output.of(snapshotWindow));
        }

        public Builder snsTopicArn(@Nullable Output<String> snsTopicArn) {
            $.snsTopicArn = snsTopicArn;
            return this;
        }

        public Builder snsTopicArn(String snsTopicArn) {
            return snsTopicArn(Output.of(snsTopicArn));
        }

        public Builder subnetGroupName(@Nullable Output<String> subnetGroupName) {
            $.subnetGroupName = subnetGroupName;
            return this;
        }

        public Builder subnetGroupName(String subnetGroupName) {
            return subnetGroupName(Output.of(subnetGroupName));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder tlsEnabled(@Nullable Output<Boolean> tlsEnabled) {
            $.tlsEnabled = tlsEnabled;
            return this;
        }

        public Builder tlsEnabled(Boolean tlsEnabled) {
            return tlsEnabled(Output.of(tlsEnabled));
        }

        public ClusterState build() {
            return $;
        }
    }

}
