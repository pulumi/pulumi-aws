// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iot.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ThingPrincipalAttachmentState extends com.pulumi.resources.ResourceArgs {

    public static final ThingPrincipalAttachmentState Empty = new ThingPrincipalAttachmentState();

    @Import(name="principal")
    private @Nullable Output<String> principal;

    public Optional<Output<String>> principal() {
        return Optional.ofNullable(this.principal);
    }

    @Import(name="thing")
    private @Nullable Output<String> thing;

    public Optional<Output<String>> thing() {
        return Optional.ofNullable(this.thing);
    }

    private ThingPrincipalAttachmentState() {}

    private ThingPrincipalAttachmentState(ThingPrincipalAttachmentState $) {
        this.principal = $.principal;
        this.thing = $.thing;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ThingPrincipalAttachmentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ThingPrincipalAttachmentState $;

        public Builder() {
            $ = new ThingPrincipalAttachmentState();
        }

        public Builder(ThingPrincipalAttachmentState defaults) {
            $ = new ThingPrincipalAttachmentState(Objects.requireNonNull(defaults));
        }

        public Builder principal(@Nullable Output<String> principal) {
            $.principal = principal;
            return this;
        }

        public Builder principal(String principal) {
            return principal(Output.of(principal));
        }

        public Builder thing(@Nullable Output<String> thing) {
            $.thing = thing;
            return this;
        }

        public Builder thing(String thing) {
            return thing(Output.of(thing));
        }

        public ThingPrincipalAttachmentState build() {
            return $;
        }
    }

}
