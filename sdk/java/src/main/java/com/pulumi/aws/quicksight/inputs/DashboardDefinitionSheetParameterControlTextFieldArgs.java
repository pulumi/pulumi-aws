// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.TextAreaControlDisplayOptionsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DashboardDefinitionSheetParameterControlTextFieldArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardDefinitionSheetParameterControlTextFieldArgs Empty = new DashboardDefinitionSheetParameterControlTextFieldArgs();

    @Import(name="displayOptions")
    private @Nullable Output<TextAreaControlDisplayOptionsArgs> displayOptions;

    public Optional<Output<TextAreaControlDisplayOptionsArgs>> displayOptions() {
        return Optional.ofNullable(this.displayOptions);
    }

    @Import(name="parameterControlId", required=true)
    private Output<String> parameterControlId;

    public Output<String> parameterControlId() {
        return this.parameterControlId;
    }

    @Import(name="sourceParameterName", required=true)
    private Output<String> sourceParameterName;

    public Output<String> sourceParameterName() {
        return this.sourceParameterName;
    }

    @Import(name="title", required=true)
    private Output<String> title;

    public Output<String> title() {
        return this.title;
    }

    private DashboardDefinitionSheetParameterControlTextFieldArgs() {}

    private DashboardDefinitionSheetParameterControlTextFieldArgs(DashboardDefinitionSheetParameterControlTextFieldArgs $) {
        this.displayOptions = $.displayOptions;
        this.parameterControlId = $.parameterControlId;
        this.sourceParameterName = $.sourceParameterName;
        this.title = $.title;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardDefinitionSheetParameterControlTextFieldArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardDefinitionSheetParameterControlTextFieldArgs $;

        public Builder() {
            $ = new DashboardDefinitionSheetParameterControlTextFieldArgs();
        }

        public Builder(DashboardDefinitionSheetParameterControlTextFieldArgs defaults) {
            $ = new DashboardDefinitionSheetParameterControlTextFieldArgs(Objects.requireNonNull(defaults));
        }

        public Builder displayOptions(@Nullable Output<TextAreaControlDisplayOptionsArgs> displayOptions) {
            $.displayOptions = displayOptions;
            return this;
        }

        public Builder displayOptions(TextAreaControlDisplayOptionsArgs displayOptions) {
            return displayOptions(Output.of(displayOptions));
        }

        public Builder parameterControlId(Output<String> parameterControlId) {
            $.parameterControlId = parameterControlId;
            return this;
        }

        public Builder parameterControlId(String parameterControlId) {
            return parameterControlId(Output.of(parameterControlId));
        }

        public Builder sourceParameterName(Output<String> sourceParameterName) {
            $.sourceParameterName = sourceParameterName;
            return this;
        }

        public Builder sourceParameterName(String sourceParameterName) {
            return sourceParameterName(Output.of(sourceParameterName));
        }

        public Builder title(Output<String> title) {
            $.title = title;
            return this;
        }

        public Builder title(String title) {
            return title(Output.of(title));
        }

        public DashboardDefinitionSheetParameterControlTextFieldArgs build() {
            if ($.parameterControlId == null) {
                throw new MissingRequiredPropertyException("DashboardDefinitionSheetParameterControlTextFieldArgs", "parameterControlId");
            }
            if ($.sourceParameterName == null) {
                throw new MissingRequiredPropertyException("DashboardDefinitionSheetParameterControlTextFieldArgs", "sourceParameterName");
            }
            if ($.title == null) {
                throw new MissingRequiredPropertyException("DashboardDefinitionSheetParameterControlTextFieldArgs", "title");
            }
            return $;
        }
    }

}
