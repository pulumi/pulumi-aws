// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StudioLifecycleConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final StudioLifecycleConfigArgs Empty = new StudioLifecycleConfigArgs();

    /**
     * The App type that the Lifecycle Configuration is attached to. Valid values are `JupyterServer` and `KernelGateway`.
     * 
     */
    @Import(name="studioLifecycleConfigAppType", required=true)
    private Output<String> studioLifecycleConfigAppType;

    /**
     * @return The App type that the Lifecycle Configuration is attached to. Valid values are `JupyterServer` and `KernelGateway`.
     * 
     */
    public Output<String> studioLifecycleConfigAppType() {
        return this.studioLifecycleConfigAppType;
    }

    /**
     * The content of your Studio Lifecycle Configuration script. This content must be base64 encoded.
     * 
     */
    @Import(name="studioLifecycleConfigContent", required=true)
    private Output<String> studioLifecycleConfigContent;

    /**
     * @return The content of your Studio Lifecycle Configuration script. This content must be base64 encoded.
     * 
     */
    public Output<String> studioLifecycleConfigContent() {
        return this.studioLifecycleConfigContent;
    }

    /**
     * The name of the Studio Lifecycle Configuration to create.
     * 
     */
    @Import(name="studioLifecycleConfigName", required=true)
    private Output<String> studioLifecycleConfigName;

    /**
     * @return The name of the Studio Lifecycle Configuration to create.
     * 
     */
    public Output<String> studioLifecycleConfigName() {
        return this.studioLifecycleConfigName;
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private StudioLifecycleConfigArgs() {}

    private StudioLifecycleConfigArgs(StudioLifecycleConfigArgs $) {
        this.studioLifecycleConfigAppType = $.studioLifecycleConfigAppType;
        this.studioLifecycleConfigContent = $.studioLifecycleConfigContent;
        this.studioLifecycleConfigName = $.studioLifecycleConfigName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StudioLifecycleConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StudioLifecycleConfigArgs $;

        public Builder() {
            $ = new StudioLifecycleConfigArgs();
        }

        public Builder(StudioLifecycleConfigArgs defaults) {
            $ = new StudioLifecycleConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param studioLifecycleConfigAppType The App type that the Lifecycle Configuration is attached to. Valid values are `JupyterServer` and `KernelGateway`.
         * 
         * @return builder
         * 
         */
        public Builder studioLifecycleConfigAppType(Output<String> studioLifecycleConfigAppType) {
            $.studioLifecycleConfigAppType = studioLifecycleConfigAppType;
            return this;
        }

        /**
         * @param studioLifecycleConfigAppType The App type that the Lifecycle Configuration is attached to. Valid values are `JupyterServer` and `KernelGateway`.
         * 
         * @return builder
         * 
         */
        public Builder studioLifecycleConfigAppType(String studioLifecycleConfigAppType) {
            return studioLifecycleConfigAppType(Output.of(studioLifecycleConfigAppType));
        }

        /**
         * @param studioLifecycleConfigContent The content of your Studio Lifecycle Configuration script. This content must be base64 encoded.
         * 
         * @return builder
         * 
         */
        public Builder studioLifecycleConfigContent(Output<String> studioLifecycleConfigContent) {
            $.studioLifecycleConfigContent = studioLifecycleConfigContent;
            return this;
        }

        /**
         * @param studioLifecycleConfigContent The content of your Studio Lifecycle Configuration script. This content must be base64 encoded.
         * 
         * @return builder
         * 
         */
        public Builder studioLifecycleConfigContent(String studioLifecycleConfigContent) {
            return studioLifecycleConfigContent(Output.of(studioLifecycleConfigContent));
        }

        /**
         * @param studioLifecycleConfigName The name of the Studio Lifecycle Configuration to create.
         * 
         * @return builder
         * 
         */
        public Builder studioLifecycleConfigName(Output<String> studioLifecycleConfigName) {
            $.studioLifecycleConfigName = studioLifecycleConfigName;
            return this;
        }

        /**
         * @param studioLifecycleConfigName The name of the Studio Lifecycle Configuration to create.
         * 
         * @return builder
         * 
         */
        public Builder studioLifecycleConfigName(String studioLifecycleConfigName) {
            return studioLifecycleConfigName(Output.of(studioLifecycleConfigName));
        }

        /**
         * @param tags A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public StudioLifecycleConfigArgs build() {
            $.studioLifecycleConfigAppType = Objects.requireNonNull($.studioLifecycleConfigAppType, "expected parameter 'studioLifecycleConfigAppType' to be non-null");
            $.studioLifecycleConfigContent = Objects.requireNonNull($.studioLifecycleConfigContent, "expected parameter 'studioLifecycleConfigContent' to be non-null");
            $.studioLifecycleConfigName = Objects.requireNonNull($.studioLifecycleConfigName, "expected parameter 'studioLifecycleConfigName' to be non-null");
            return $;
        }
    }

}
