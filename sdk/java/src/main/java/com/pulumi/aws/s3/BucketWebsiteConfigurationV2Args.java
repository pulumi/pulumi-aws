// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3;

import com.pulumi.aws.s3.inputs.BucketWebsiteConfigurationV2ErrorDocumentArgs;
import com.pulumi.aws.s3.inputs.BucketWebsiteConfigurationV2IndexDocumentArgs;
import com.pulumi.aws.s3.inputs.BucketWebsiteConfigurationV2RedirectAllRequestsToArgs;
import com.pulumi.aws.s3.inputs.BucketWebsiteConfigurationV2RoutingRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketWebsiteConfigurationV2Args extends com.pulumi.resources.ResourceArgs {

    public static final BucketWebsiteConfigurationV2Args Empty = new BucketWebsiteConfigurationV2Args();

    @Import(name="bucket", required=true)
    private Output<String> bucket;

    public Output<String> bucket() {
        return this.bucket;
    }

    @Import(name="errorDocument")
    private @Nullable Output<BucketWebsiteConfigurationV2ErrorDocumentArgs> errorDocument;

    public Optional<Output<BucketWebsiteConfigurationV2ErrorDocumentArgs>> errorDocument() {
        return Optional.ofNullable(this.errorDocument);
    }

    @Import(name="expectedBucketOwner")
    private @Nullable Output<String> expectedBucketOwner;

    public Optional<Output<String>> expectedBucketOwner() {
        return Optional.ofNullable(this.expectedBucketOwner);
    }

    @Import(name="indexDocument")
    private @Nullable Output<BucketWebsiteConfigurationV2IndexDocumentArgs> indexDocument;

    public Optional<Output<BucketWebsiteConfigurationV2IndexDocumentArgs>> indexDocument() {
        return Optional.ofNullable(this.indexDocument);
    }

    @Import(name="redirectAllRequestsTo")
    private @Nullable Output<BucketWebsiteConfigurationV2RedirectAllRequestsToArgs> redirectAllRequestsTo;

    public Optional<Output<BucketWebsiteConfigurationV2RedirectAllRequestsToArgs>> redirectAllRequestsTo() {
        return Optional.ofNullable(this.redirectAllRequestsTo);
    }

    @Import(name="routingRuleDetails")
    private @Nullable Output<String> routingRuleDetails;

    public Optional<Output<String>> routingRuleDetails() {
        return Optional.ofNullable(this.routingRuleDetails);
    }

    @Import(name="routingRules")
    private @Nullable Output<List<BucketWebsiteConfigurationV2RoutingRuleArgs>> routingRules;

    public Optional<Output<List<BucketWebsiteConfigurationV2RoutingRuleArgs>>> routingRules() {
        return Optional.ofNullable(this.routingRules);
    }

    private BucketWebsiteConfigurationV2Args() {}

    private BucketWebsiteConfigurationV2Args(BucketWebsiteConfigurationV2Args $) {
        this.bucket = $.bucket;
        this.errorDocument = $.errorDocument;
        this.expectedBucketOwner = $.expectedBucketOwner;
        this.indexDocument = $.indexDocument;
        this.redirectAllRequestsTo = $.redirectAllRequestsTo;
        this.routingRuleDetails = $.routingRuleDetails;
        this.routingRules = $.routingRules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketWebsiteConfigurationV2Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketWebsiteConfigurationV2Args $;

        public Builder() {
            $ = new BucketWebsiteConfigurationV2Args();
        }

        public Builder(BucketWebsiteConfigurationV2Args defaults) {
            $ = new BucketWebsiteConfigurationV2Args(Objects.requireNonNull(defaults));
        }

        public Builder bucket(Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        public Builder errorDocument(@Nullable Output<BucketWebsiteConfigurationV2ErrorDocumentArgs> errorDocument) {
            $.errorDocument = errorDocument;
            return this;
        }

        public Builder errorDocument(BucketWebsiteConfigurationV2ErrorDocumentArgs errorDocument) {
            return errorDocument(Output.of(errorDocument));
        }

        public Builder expectedBucketOwner(@Nullable Output<String> expectedBucketOwner) {
            $.expectedBucketOwner = expectedBucketOwner;
            return this;
        }

        public Builder expectedBucketOwner(String expectedBucketOwner) {
            return expectedBucketOwner(Output.of(expectedBucketOwner));
        }

        public Builder indexDocument(@Nullable Output<BucketWebsiteConfigurationV2IndexDocumentArgs> indexDocument) {
            $.indexDocument = indexDocument;
            return this;
        }

        public Builder indexDocument(BucketWebsiteConfigurationV2IndexDocumentArgs indexDocument) {
            return indexDocument(Output.of(indexDocument));
        }

        public Builder redirectAllRequestsTo(@Nullable Output<BucketWebsiteConfigurationV2RedirectAllRequestsToArgs> redirectAllRequestsTo) {
            $.redirectAllRequestsTo = redirectAllRequestsTo;
            return this;
        }

        public Builder redirectAllRequestsTo(BucketWebsiteConfigurationV2RedirectAllRequestsToArgs redirectAllRequestsTo) {
            return redirectAllRequestsTo(Output.of(redirectAllRequestsTo));
        }

        public Builder routingRuleDetails(@Nullable Output<String> routingRuleDetails) {
            $.routingRuleDetails = routingRuleDetails;
            return this;
        }

        public Builder routingRuleDetails(String routingRuleDetails) {
            return routingRuleDetails(Output.of(routingRuleDetails));
        }

        public Builder routingRules(@Nullable Output<List<BucketWebsiteConfigurationV2RoutingRuleArgs>> routingRules) {
            $.routingRules = routingRules;
            return this;
        }

        public Builder routingRules(List<BucketWebsiteConfigurationV2RoutingRuleArgs> routingRules) {
            return routingRules(Output.of(routingRules));
        }

        public Builder routingRules(BucketWebsiteConfigurationV2RoutingRuleArgs... routingRules) {
            return routingRules(List.of(routingRules));
        }

        public BucketWebsiteConfigurationV2Args build() {
            $.bucket = Objects.requireNonNull($.bucket, "expected parameter 'bucket' to be non-null");
            return $;
        }
    }

}
