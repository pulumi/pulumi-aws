// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.medialive.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class InputSource {
    /**
     * @return The key used to extract the password from EC2 Parameter store.
     * 
     */
    private String passwordParam;
    /**
     * @return The URL where the stream is pulled from.
     * 
     */
    private String url;
    /**
     * @return The username for the input source.
     * 
     */
    private String username;

    private InputSource() {}
    /**
     * @return The key used to extract the password from EC2 Parameter store.
     * 
     */
    public String passwordParam() {
        return this.passwordParam;
    }
    /**
     * @return The URL where the stream is pulled from.
     * 
     */
    public String url() {
        return this.url;
    }
    /**
     * @return The username for the input source.
     * 
     */
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InputSource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String passwordParam;
        private String url;
        private String username;
        public Builder() {}
        public Builder(InputSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.passwordParam = defaults.passwordParam;
    	      this.url = defaults.url;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder passwordParam(String passwordParam) {
            this.passwordParam = Objects.requireNonNull(passwordParam);
            return this;
        }
        @CustomType.Setter
        public Builder url(String url) {
            this.url = Objects.requireNonNull(url);
            return this;
        }
        @CustomType.Setter
        public Builder username(String username) {
            this.username = Objects.requireNonNull(username);
            return this;
        }
        public InputSource build() {
            final var _resultValue = new InputSource();
            _resultValue.passwordParam = passwordParam;
            _resultValue.url = url;
            _resultValue.username = username;
            return _resultValue;
        }
    }
}
