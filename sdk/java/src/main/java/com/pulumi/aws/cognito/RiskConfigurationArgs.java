// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cognito;

import com.pulumi.aws.cognito.inputs.RiskConfigurationAccountTakeoverRiskConfigurationArgs;
import com.pulumi.aws.cognito.inputs.RiskConfigurationCompromisedCredentialsRiskConfigurationArgs;
import com.pulumi.aws.cognito.inputs.RiskConfigurationRiskExceptionConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RiskConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final RiskConfigurationArgs Empty = new RiskConfigurationArgs();

    @Import(name="accountTakeoverRiskConfiguration")
    private @Nullable Output<RiskConfigurationAccountTakeoverRiskConfigurationArgs> accountTakeoverRiskConfiguration;

    public Optional<Output<RiskConfigurationAccountTakeoverRiskConfigurationArgs>> accountTakeoverRiskConfiguration() {
        return Optional.ofNullable(this.accountTakeoverRiskConfiguration);
    }

    @Import(name="clientId")
    private @Nullable Output<String> clientId;

    public Optional<Output<String>> clientId() {
        return Optional.ofNullable(this.clientId);
    }

    @Import(name="compromisedCredentialsRiskConfiguration")
    private @Nullable Output<RiskConfigurationCompromisedCredentialsRiskConfigurationArgs> compromisedCredentialsRiskConfiguration;

    public Optional<Output<RiskConfigurationCompromisedCredentialsRiskConfigurationArgs>> compromisedCredentialsRiskConfiguration() {
        return Optional.ofNullable(this.compromisedCredentialsRiskConfiguration);
    }

    @Import(name="riskExceptionConfiguration")
    private @Nullable Output<RiskConfigurationRiskExceptionConfigurationArgs> riskExceptionConfiguration;

    public Optional<Output<RiskConfigurationRiskExceptionConfigurationArgs>> riskExceptionConfiguration() {
        return Optional.ofNullable(this.riskExceptionConfiguration);
    }

    @Import(name="userPoolId", required=true)
    private Output<String> userPoolId;

    public Output<String> userPoolId() {
        return this.userPoolId;
    }

    private RiskConfigurationArgs() {}

    private RiskConfigurationArgs(RiskConfigurationArgs $) {
        this.accountTakeoverRiskConfiguration = $.accountTakeoverRiskConfiguration;
        this.clientId = $.clientId;
        this.compromisedCredentialsRiskConfiguration = $.compromisedCredentialsRiskConfiguration;
        this.riskExceptionConfiguration = $.riskExceptionConfiguration;
        this.userPoolId = $.userPoolId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RiskConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RiskConfigurationArgs $;

        public Builder() {
            $ = new RiskConfigurationArgs();
        }

        public Builder(RiskConfigurationArgs defaults) {
            $ = new RiskConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder accountTakeoverRiskConfiguration(@Nullable Output<RiskConfigurationAccountTakeoverRiskConfigurationArgs> accountTakeoverRiskConfiguration) {
            $.accountTakeoverRiskConfiguration = accountTakeoverRiskConfiguration;
            return this;
        }

        public Builder accountTakeoverRiskConfiguration(RiskConfigurationAccountTakeoverRiskConfigurationArgs accountTakeoverRiskConfiguration) {
            return accountTakeoverRiskConfiguration(Output.of(accountTakeoverRiskConfiguration));
        }

        public Builder clientId(@Nullable Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        public Builder compromisedCredentialsRiskConfiguration(@Nullable Output<RiskConfigurationCompromisedCredentialsRiskConfigurationArgs> compromisedCredentialsRiskConfiguration) {
            $.compromisedCredentialsRiskConfiguration = compromisedCredentialsRiskConfiguration;
            return this;
        }

        public Builder compromisedCredentialsRiskConfiguration(RiskConfigurationCompromisedCredentialsRiskConfigurationArgs compromisedCredentialsRiskConfiguration) {
            return compromisedCredentialsRiskConfiguration(Output.of(compromisedCredentialsRiskConfiguration));
        }

        public Builder riskExceptionConfiguration(@Nullable Output<RiskConfigurationRiskExceptionConfigurationArgs> riskExceptionConfiguration) {
            $.riskExceptionConfiguration = riskExceptionConfiguration;
            return this;
        }

        public Builder riskExceptionConfiguration(RiskConfigurationRiskExceptionConfigurationArgs riskExceptionConfiguration) {
            return riskExceptionConfiguration(Output.of(riskExceptionConfiguration));
        }

        public Builder userPoolId(Output<String> userPoolId) {
            $.userPoolId = userPoolId;
            return this;
        }

        public Builder userPoolId(String userPoolId) {
            return userPoolId(Output.of(userPoolId));
        }

        public RiskConfigurationArgs build() {
            $.userPoolId = Objects.requireNonNull($.userPoolId, "expected parameter 'userPoolId' to be non-null");
            return $;
        }
    }

}
