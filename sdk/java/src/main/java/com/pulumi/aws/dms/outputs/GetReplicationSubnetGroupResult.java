// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dms.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetReplicationSubnetGroupResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String replicationSubnetGroupArn;
    /**
     * @return Description for the subnet group.
     * 
     */
    private String replicationSubnetGroupDescription;
    private String replicationSubnetGroupId;
    private String subnetGroupStatus;
    /**
     * @return List of at least 2 EC2 subnet IDs for the subnet group. The subnets must cover at least 2 availability zones.
     * 
     */
    private List<String> subnetIds;
    private Map<String,String> tags;
    /**
     * @return The ID of the VPC the subnet group is in.
     * 
     */
    private String vpcId;

    private GetReplicationSubnetGroupResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String replicationSubnetGroupArn() {
        return this.replicationSubnetGroupArn;
    }
    /**
     * @return Description for the subnet group.
     * 
     */
    public String replicationSubnetGroupDescription() {
        return this.replicationSubnetGroupDescription;
    }
    public String replicationSubnetGroupId() {
        return this.replicationSubnetGroupId;
    }
    public String subnetGroupStatus() {
        return this.subnetGroupStatus;
    }
    /**
     * @return List of at least 2 EC2 subnet IDs for the subnet group. The subnets must cover at least 2 availability zones.
     * 
     */
    public List<String> subnetIds() {
        return this.subnetIds;
    }
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return The ID of the VPC the subnet group is in.
     * 
     */
    public String vpcId() {
        return this.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetReplicationSubnetGroupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String replicationSubnetGroupArn;
        private String replicationSubnetGroupDescription;
        private String replicationSubnetGroupId;
        private String subnetGroupStatus;
        private List<String> subnetIds;
        private Map<String,String> tags;
        private String vpcId;
        public Builder() {}
        public Builder(GetReplicationSubnetGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.replicationSubnetGroupArn = defaults.replicationSubnetGroupArn;
    	      this.replicationSubnetGroupDescription = defaults.replicationSubnetGroupDescription;
    	      this.replicationSubnetGroupId = defaults.replicationSubnetGroupId;
    	      this.subnetGroupStatus = defaults.subnetGroupStatus;
    	      this.subnetIds = defaults.subnetIds;
    	      this.tags = defaults.tags;
    	      this.vpcId = defaults.vpcId;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder replicationSubnetGroupArn(String replicationSubnetGroupArn) {
            this.replicationSubnetGroupArn = Objects.requireNonNull(replicationSubnetGroupArn);
            return this;
        }
        @CustomType.Setter
        public Builder replicationSubnetGroupDescription(String replicationSubnetGroupDescription) {
            this.replicationSubnetGroupDescription = Objects.requireNonNull(replicationSubnetGroupDescription);
            return this;
        }
        @CustomType.Setter
        public Builder replicationSubnetGroupId(String replicationSubnetGroupId) {
            this.replicationSubnetGroupId = Objects.requireNonNull(replicationSubnetGroupId);
            return this;
        }
        @CustomType.Setter
        public Builder subnetGroupStatus(String subnetGroupStatus) {
            this.subnetGroupStatus = Objects.requireNonNull(subnetGroupStatus);
            return this;
        }
        @CustomType.Setter
        public Builder subnetIds(List<String> subnetIds) {
            this.subnetIds = Objects.requireNonNull(subnetIds);
            return this;
        }
        public Builder subnetIds(String... subnetIds) {
            return subnetIds(List.of(subnetIds));
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder vpcId(String vpcId) {
            this.vpcId = Objects.requireNonNull(vpcId);
            return this;
        }
        public GetReplicationSubnetGroupResult build() {
            final var o = new GetReplicationSubnetGroupResult();
            o.id = id;
            o.replicationSubnetGroupArn = replicationSubnetGroupArn;
            o.replicationSubnetGroupDescription = replicationSubnetGroupDescription;
            o.replicationSubnetGroupId = replicationSubnetGroupId;
            o.subnetGroupStatus = subnetGroupStatus;
            o.subnetIds = subnetIds;
            o.tags = tags;
            o.vpcId = vpcId;
            return o;
        }
    }
}
