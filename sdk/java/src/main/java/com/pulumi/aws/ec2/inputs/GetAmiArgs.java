// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.aws.ec2.inputs.GetAmiFilterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAmiArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAmiArgs Empty = new GetAmiArgs();

    @Import(name="executableUsers")
    private @Nullable Output<List<String>> executableUsers;

    public Optional<Output<List<String>>> executableUsers() {
        return Optional.ofNullable(this.executableUsers);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetAmiFilterArgs>> filters;

    public Optional<Output<List<GetAmiFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    @Import(name="includeDeprecated")
    private @Nullable Output<Boolean> includeDeprecated;

    public Optional<Output<Boolean>> includeDeprecated() {
        return Optional.ofNullable(this.includeDeprecated);
    }

    @Import(name="mostRecent")
    private @Nullable Output<Boolean> mostRecent;

    public Optional<Output<Boolean>> mostRecent() {
        return Optional.ofNullable(this.mostRecent);
    }

    @Import(name="nameRegex")
    private @Nullable Output<String> nameRegex;

    public Optional<Output<String>> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    @Import(name="owners")
    private @Nullable Output<List<String>> owners;

    public Optional<Output<List<String>>> owners() {
        return Optional.ofNullable(this.owners);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private GetAmiArgs() {}

    private GetAmiArgs(GetAmiArgs $) {
        this.executableUsers = $.executableUsers;
        this.filters = $.filters;
        this.includeDeprecated = $.includeDeprecated;
        this.mostRecent = $.mostRecent;
        this.nameRegex = $.nameRegex;
        this.owners = $.owners;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAmiArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAmiArgs $;

        public Builder() {
            $ = new GetAmiArgs();
        }

        public Builder(GetAmiArgs defaults) {
            $ = new GetAmiArgs(Objects.requireNonNull(defaults));
        }

        public Builder executableUsers(@Nullable Output<List<String>> executableUsers) {
            $.executableUsers = executableUsers;
            return this;
        }

        public Builder executableUsers(List<String> executableUsers) {
            return executableUsers(Output.of(executableUsers));
        }

        public Builder executableUsers(String... executableUsers) {
            return executableUsers(List.of(executableUsers));
        }

        public Builder filters(@Nullable Output<List<GetAmiFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetAmiFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetAmiFilterArgs... filters) {
            return filters(List.of(filters));
        }

        public Builder includeDeprecated(@Nullable Output<Boolean> includeDeprecated) {
            $.includeDeprecated = includeDeprecated;
            return this;
        }

        public Builder includeDeprecated(Boolean includeDeprecated) {
            return includeDeprecated(Output.of(includeDeprecated));
        }

        public Builder mostRecent(@Nullable Output<Boolean> mostRecent) {
            $.mostRecent = mostRecent;
            return this;
        }

        public Builder mostRecent(Boolean mostRecent) {
            return mostRecent(Output.of(mostRecent));
        }

        public Builder nameRegex(@Nullable Output<String> nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        public Builder nameRegex(String nameRegex) {
            return nameRegex(Output.of(nameRegex));
        }

        public Builder owners(@Nullable Output<List<String>> owners) {
            $.owners = owners;
            return this;
        }

        public Builder owners(List<String> owners) {
            return owners(Output.of(owners));
        }

        public Builder owners(String... owners) {
            return owners(List.of(owners));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public GetAmiArgs build() {
            return $;
        }
    }

}
