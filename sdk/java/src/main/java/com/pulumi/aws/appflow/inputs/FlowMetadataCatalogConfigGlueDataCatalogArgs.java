// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appflow.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class FlowMetadataCatalogConfigGlueDataCatalogArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlowMetadataCatalogConfigGlueDataCatalogArgs Empty = new FlowMetadataCatalogConfigGlueDataCatalogArgs();

    /**
     * The name of an existing Glue database to store the metadata tables that Amazon AppFlow creates.
     * 
     */
    @Import(name="databaseName", required=true)
    private Output<String> databaseName;

    /**
     * @return The name of an existing Glue database to store the metadata tables that Amazon AppFlow creates.
     * 
     */
    public Output<String> databaseName() {
        return this.databaseName;
    }

    /**
     * The ARN of an IAM role that grants AppFlow the permissions it needs to create Data Catalog tables, databases, and partitions.
     * 
     */
    @Import(name="roleArn", required=true)
    private Output<String> roleArn;

    /**
     * @return The ARN of an IAM role that grants AppFlow the permissions it needs to create Data Catalog tables, databases, and partitions.
     * 
     */
    public Output<String> roleArn() {
        return this.roleArn;
    }

    /**
     * A naming prefix for each Data Catalog table that Amazon AppFlow creates
     * 
     */
    @Import(name="tablePrefix", required=true)
    private Output<String> tablePrefix;

    /**
     * @return A naming prefix for each Data Catalog table that Amazon AppFlow creates
     * 
     */
    public Output<String> tablePrefix() {
        return this.tablePrefix;
    }

    private FlowMetadataCatalogConfigGlueDataCatalogArgs() {}

    private FlowMetadataCatalogConfigGlueDataCatalogArgs(FlowMetadataCatalogConfigGlueDataCatalogArgs $) {
        this.databaseName = $.databaseName;
        this.roleArn = $.roleArn;
        this.tablePrefix = $.tablePrefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlowMetadataCatalogConfigGlueDataCatalogArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlowMetadataCatalogConfigGlueDataCatalogArgs $;

        public Builder() {
            $ = new FlowMetadataCatalogConfigGlueDataCatalogArgs();
        }

        public Builder(FlowMetadataCatalogConfigGlueDataCatalogArgs defaults) {
            $ = new FlowMetadataCatalogConfigGlueDataCatalogArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param databaseName The name of an existing Glue database to store the metadata tables that Amazon AppFlow creates.
         * 
         * @return builder
         * 
         */
        public Builder databaseName(Output<String> databaseName) {
            $.databaseName = databaseName;
            return this;
        }

        /**
         * @param databaseName The name of an existing Glue database to store the metadata tables that Amazon AppFlow creates.
         * 
         * @return builder
         * 
         */
        public Builder databaseName(String databaseName) {
            return databaseName(Output.of(databaseName));
        }

        /**
         * @param roleArn The ARN of an IAM role that grants AppFlow the permissions it needs to create Data Catalog tables, databases, and partitions.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn The ARN of an IAM role that grants AppFlow the permissions it needs to create Data Catalog tables, databases, and partitions.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        /**
         * @param tablePrefix A naming prefix for each Data Catalog table that Amazon AppFlow creates
         * 
         * @return builder
         * 
         */
        public Builder tablePrefix(Output<String> tablePrefix) {
            $.tablePrefix = tablePrefix;
            return this;
        }

        /**
         * @param tablePrefix A naming prefix for each Data Catalog table that Amazon AppFlow creates
         * 
         * @return builder
         * 
         */
        public Builder tablePrefix(String tablePrefix) {
            return tablePrefix(Output.of(tablePrefix));
        }

        public FlowMetadataCatalogConfigGlueDataCatalogArgs build() {
            if ($.databaseName == null) {
                throw new MissingRequiredPropertyException("FlowMetadataCatalogConfigGlueDataCatalogArgs", "databaseName");
            }
            if ($.roleArn == null) {
                throw new MissingRequiredPropertyException("FlowMetadataCatalogConfigGlueDataCatalogArgs", "roleArn");
            }
            if ($.tablePrefix == null) {
                throw new MissingRequiredPropertyException("FlowMetadataCatalogConfigGlueDataCatalogArgs", "tablePrefix");
            }
            return $;
        }
    }

}
