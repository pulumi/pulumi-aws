// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ssm;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.ssm.DocumentArgs;
import com.pulumi.aws.ssm.inputs.DocumentState;
import com.pulumi.aws.ssm.outputs.DocumentAttachmentsSource;
import com.pulumi.aws.ssm.outputs.DocumentParameter;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="aws:ssm/document:Document")
public class Document extends com.pulumi.resources.CustomResource {
    @Export(name="arn", refs={String.class}, tree="[0]")
    private Output<String> arn;

    public Output<String> arn() {
        return this.arn;
    }
    @Export(name="attachmentsSources", refs={List.class,DocumentAttachmentsSource.class}, tree="[0,1]")
    private Output</* @Nullable */ List<DocumentAttachmentsSource>> attachmentsSources;

    public Output<Optional<List<DocumentAttachmentsSource>>> attachmentsSources() {
        return Codegen.optional(this.attachmentsSources);
    }
    @Export(name="content", refs={String.class}, tree="[0]")
    private Output<String> content;

    public Output<String> content() {
        return this.content;
    }
    @Export(name="createdDate", refs={String.class}, tree="[0]")
    private Output<String> createdDate;

    public Output<String> createdDate() {
        return this.createdDate;
    }
    @Export(name="defaultVersion", refs={String.class}, tree="[0]")
    private Output<String> defaultVersion;

    public Output<String> defaultVersion() {
        return this.defaultVersion;
    }
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    public Output<String> description() {
        return this.description;
    }
    @Export(name="documentFormat", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> documentFormat;

    public Output<Optional<String>> documentFormat() {
        return Codegen.optional(this.documentFormat);
    }
    @Export(name="documentType", refs={String.class}, tree="[0]")
    private Output<String> documentType;

    public Output<String> documentType() {
        return this.documentType;
    }
    @Export(name="documentVersion", refs={String.class}, tree="[0]")
    private Output<String> documentVersion;

    public Output<String> documentVersion() {
        return this.documentVersion;
    }
    @Export(name="hash", refs={String.class}, tree="[0]")
    private Output<String> hash;

    public Output<String> hash() {
        return this.hash;
    }
    @Export(name="hashType", refs={String.class}, tree="[0]")
    private Output<String> hashType;

    public Output<String> hashType() {
        return this.hashType;
    }
    @Export(name="latestVersion", refs={String.class}, tree="[0]")
    private Output<String> latestVersion;

    public Output<String> latestVersion() {
        return this.latestVersion;
    }
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }
    @Export(name="owner", refs={String.class}, tree="[0]")
    private Output<String> owner;

    public Output<String> owner() {
        return this.owner;
    }
    @Export(name="parameters", refs={List.class,DocumentParameter.class}, tree="[0,1]")
    private Output<List<DocumentParameter>> parameters;

    public Output<List<DocumentParameter>> parameters() {
        return this.parameters;
    }
    @Export(name="permissions", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> permissions;

    public Output<Optional<Map<String,String>>> permissions() {
        return Codegen.optional(this.permissions);
    }
    @Export(name="platformTypes", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> platformTypes;

    public Output<List<String>> platformTypes() {
        return this.platformTypes;
    }
    @Export(name="schemaVersion", refs={String.class}, tree="[0]")
    private Output<String> schemaVersion;

    public Output<String> schemaVersion() {
        return this.schemaVersion;
    }
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    public Output<String> status() {
        return this.status;
    }
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    @Export(name="tagsAll", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll;
    }
    @Export(name="targetType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> targetType;

    public Output<Optional<String>> targetType() {
        return Codegen.optional(this.targetType);
    }
    @Export(name="versionName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> versionName;

    public Output<Optional<String>> versionName() {
        return Codegen.optional(this.versionName);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Document(String name) {
        this(name, DocumentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Document(String name, DocumentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Document(String name, DocumentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:ssm/document:Document", name, args == null ? DocumentArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Document(String name, Output<String> id, @Nullable DocumentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:ssm/document:Document", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Document get(String name, Output<String> id, @Nullable DocumentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Document(name, id, state, options);
    }
}
