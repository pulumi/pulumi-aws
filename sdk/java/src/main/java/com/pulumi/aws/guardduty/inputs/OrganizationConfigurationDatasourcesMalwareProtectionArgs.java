// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.guardduty.inputs;

import com.pulumi.aws.guardduty.inputs.OrganizationConfigurationDatasourcesMalwareProtectionScanEc2InstanceWithFindingsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;


public final class OrganizationConfigurationDatasourcesMalwareProtectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final OrganizationConfigurationDatasourcesMalwareProtectionArgs Empty = new OrganizationConfigurationDatasourcesMalwareProtectionArgs();

    /**
     * Configure whether [Malware Protection](https://docs.aws.amazon.com/guardduty/latest/ug/malware-protection.html) for EC2 instances with findings should be auto-enabled for new members joining the organization.
     * See Scan EC2 instance with findings below for more details.
     * 
     */
    @Import(name="scanEc2InstanceWithFindings", required=true)
    private Output<OrganizationConfigurationDatasourcesMalwareProtectionScanEc2InstanceWithFindingsArgs> scanEc2InstanceWithFindings;

    /**
     * @return Configure whether [Malware Protection](https://docs.aws.amazon.com/guardduty/latest/ug/malware-protection.html) for EC2 instances with findings should be auto-enabled for new members joining the organization.
     * See Scan EC2 instance with findings below for more details.
     * 
     */
    public Output<OrganizationConfigurationDatasourcesMalwareProtectionScanEc2InstanceWithFindingsArgs> scanEc2InstanceWithFindings() {
        return this.scanEc2InstanceWithFindings;
    }

    private OrganizationConfigurationDatasourcesMalwareProtectionArgs() {}

    private OrganizationConfigurationDatasourcesMalwareProtectionArgs(OrganizationConfigurationDatasourcesMalwareProtectionArgs $) {
        this.scanEc2InstanceWithFindings = $.scanEc2InstanceWithFindings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrganizationConfigurationDatasourcesMalwareProtectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrganizationConfigurationDatasourcesMalwareProtectionArgs $;

        public Builder() {
            $ = new OrganizationConfigurationDatasourcesMalwareProtectionArgs();
        }

        public Builder(OrganizationConfigurationDatasourcesMalwareProtectionArgs defaults) {
            $ = new OrganizationConfigurationDatasourcesMalwareProtectionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param scanEc2InstanceWithFindings Configure whether [Malware Protection](https://docs.aws.amazon.com/guardduty/latest/ug/malware-protection.html) for EC2 instances with findings should be auto-enabled for new members joining the organization.
         * See Scan EC2 instance with findings below for more details.
         * 
         * @return builder
         * 
         */
        public Builder scanEc2InstanceWithFindings(Output<OrganizationConfigurationDatasourcesMalwareProtectionScanEc2InstanceWithFindingsArgs> scanEc2InstanceWithFindings) {
            $.scanEc2InstanceWithFindings = scanEc2InstanceWithFindings;
            return this;
        }

        /**
         * @param scanEc2InstanceWithFindings Configure whether [Malware Protection](https://docs.aws.amazon.com/guardduty/latest/ug/malware-protection.html) for EC2 instances with findings should be auto-enabled for new members joining the organization.
         * See Scan EC2 instance with findings below for more details.
         * 
         * @return builder
         * 
         */
        public Builder scanEc2InstanceWithFindings(OrganizationConfigurationDatasourcesMalwareProtectionScanEc2InstanceWithFindingsArgs scanEc2InstanceWithFindings) {
            return scanEc2InstanceWithFindings(Output.of(scanEc2InstanceWithFindings));
        }

        public OrganizationConfigurationDatasourcesMalwareProtectionArgs build() {
            $.scanEc2InstanceWithFindings = Objects.requireNonNull($.scanEc2InstanceWithFindings, "expected parameter 'scanEc2InstanceWithFindings' to be non-null");
            return $;
        }
    }

}
