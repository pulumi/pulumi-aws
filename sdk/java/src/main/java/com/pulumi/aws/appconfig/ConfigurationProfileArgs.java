// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appconfig;

import com.pulumi.aws.appconfig.inputs.ConfigurationProfileValidatorArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConfigurationProfileArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConfigurationProfileArgs Empty = new ConfigurationProfileArgs();

    @Import(name="applicationId", required=true)
    private Output<String> applicationId;

    public Output<String> applicationId() {
        return this.applicationId;
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="locationUri", required=true)
    private Output<String> locationUri;

    public Output<String> locationUri() {
        return this.locationUri;
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="retrievalRoleArn")
    private @Nullable Output<String> retrievalRoleArn;

    public Optional<Output<String>> retrievalRoleArn() {
        return Optional.ofNullable(this.retrievalRoleArn);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    @Import(name="validators")
    private @Nullable Output<List<ConfigurationProfileValidatorArgs>> validators;

    public Optional<Output<List<ConfigurationProfileValidatorArgs>>> validators() {
        return Optional.ofNullable(this.validators);
    }

    private ConfigurationProfileArgs() {}

    private ConfigurationProfileArgs(ConfigurationProfileArgs $) {
        this.applicationId = $.applicationId;
        this.description = $.description;
        this.locationUri = $.locationUri;
        this.name = $.name;
        this.retrievalRoleArn = $.retrievalRoleArn;
        this.tags = $.tags;
        this.type = $.type;
        this.validators = $.validators;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigurationProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigurationProfileArgs $;

        public Builder() {
            $ = new ConfigurationProfileArgs();
        }

        public Builder(ConfigurationProfileArgs defaults) {
            $ = new ConfigurationProfileArgs(Objects.requireNonNull(defaults));
        }

        public Builder applicationId(Output<String> applicationId) {
            $.applicationId = applicationId;
            return this;
        }

        public Builder applicationId(String applicationId) {
            return applicationId(Output.of(applicationId));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder locationUri(Output<String> locationUri) {
            $.locationUri = locationUri;
            return this;
        }

        public Builder locationUri(String locationUri) {
            return locationUri(Output.of(locationUri));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder retrievalRoleArn(@Nullable Output<String> retrievalRoleArn) {
            $.retrievalRoleArn = retrievalRoleArn;
            return this;
        }

        public Builder retrievalRoleArn(String retrievalRoleArn) {
            return retrievalRoleArn(Output.of(retrievalRoleArn));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder validators(@Nullable Output<List<ConfigurationProfileValidatorArgs>> validators) {
            $.validators = validators;
            return this;
        }

        public Builder validators(List<ConfigurationProfileValidatorArgs> validators) {
            return validators(Output.of(validators));
        }

        public Builder validators(ConfigurationProfileValidatorArgs... validators) {
            return validators(List.of(validators));
        }

        public ConfigurationProfileArgs build() {
            $.applicationId = Objects.requireNonNull($.applicationId, "expected parameter 'applicationId' to be non-null");
            $.locationUri = Objects.requireNonNull($.locationUri, "expected parameter 'locationUri' to be non-null");
            return $;
        }
    }

}
