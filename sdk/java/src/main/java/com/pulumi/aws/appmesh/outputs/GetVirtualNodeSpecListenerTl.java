// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.outputs;

import com.pulumi.aws.appmesh.outputs.GetVirtualNodeSpecListenerTlCertificate;
import com.pulumi.aws.appmesh.outputs.GetVirtualNodeSpecListenerTlValidation;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetVirtualNodeSpecListenerTl {
    private List<GetVirtualNodeSpecListenerTlCertificate> certificates;
    private String mode;
    private List<GetVirtualNodeSpecListenerTlValidation> validations;

    private GetVirtualNodeSpecListenerTl() {}
    public List<GetVirtualNodeSpecListenerTlCertificate> certificates() {
        return this.certificates;
    }
    public String mode() {
        return this.mode;
    }
    public List<GetVirtualNodeSpecListenerTlValidation> validations() {
        return this.validations;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVirtualNodeSpecListenerTl defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetVirtualNodeSpecListenerTlCertificate> certificates;
        private String mode;
        private List<GetVirtualNodeSpecListenerTlValidation> validations;
        public Builder() {}
        public Builder(GetVirtualNodeSpecListenerTl defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificates = defaults.certificates;
    	      this.mode = defaults.mode;
    	      this.validations = defaults.validations;
        }

        @CustomType.Setter
        public Builder certificates(List<GetVirtualNodeSpecListenerTlCertificate> certificates) {
            if (certificates == null) {
              throw new MissingRequiredPropertyException("GetVirtualNodeSpecListenerTl", "certificates");
            }
            this.certificates = certificates;
            return this;
        }
        public Builder certificates(GetVirtualNodeSpecListenerTlCertificate... certificates) {
            return certificates(List.of(certificates));
        }
        @CustomType.Setter
        public Builder mode(String mode) {
            if (mode == null) {
              throw new MissingRequiredPropertyException("GetVirtualNodeSpecListenerTl", "mode");
            }
            this.mode = mode;
            return this;
        }
        @CustomType.Setter
        public Builder validations(List<GetVirtualNodeSpecListenerTlValidation> validations) {
            if (validations == null) {
              throw new MissingRequiredPropertyException("GetVirtualNodeSpecListenerTl", "validations");
            }
            this.validations = validations;
            return this;
        }
        public Builder validations(GetVirtualNodeSpecListenerTlValidation... validations) {
            return validations(List.of(validations));
        }
        public GetVirtualNodeSpecListenerTl build() {
            final var _resultValue = new GetVirtualNodeSpecListenerTl();
            _resultValue.certificates = certificates;
            _resultValue.mode = mode;
            _resultValue.validations = validations;
            return _resultValue;
        }
    }
}
