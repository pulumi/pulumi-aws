// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.securityhub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class OrganizationConfigurationOrganizationConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final OrganizationConfigurationOrganizationConfigurationArgs Empty = new OrganizationConfigurationOrganizationConfigurationArgs();

    /**
     * Indicates whether the organization uses local or central configuration. If using central configuration, `auto_enable` must be set to `false` and `auto_enable_standards` set to `NONE`. More information can be found in the [documentation for central configuration](https://docs.aws.amazon.com/securityhub/latest/userguide/central-configuration-intro.html). Valid values: `LOCAL`, `CENTRAL`.
     * 
     */
    @Import(name="configurationType", required=true)
    private Output<String> configurationType;

    /**
     * @return Indicates whether the organization uses local or central configuration. If using central configuration, `auto_enable` must be set to `false` and `auto_enable_standards` set to `NONE`. More information can be found in the [documentation for central configuration](https://docs.aws.amazon.com/securityhub/latest/userguide/central-configuration-intro.html). Valid values: `LOCAL`, `CENTRAL`.
     * 
     */
    public Output<String> configurationType() {
        return this.configurationType;
    }

    private OrganizationConfigurationOrganizationConfigurationArgs() {}

    private OrganizationConfigurationOrganizationConfigurationArgs(OrganizationConfigurationOrganizationConfigurationArgs $) {
        this.configurationType = $.configurationType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrganizationConfigurationOrganizationConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrganizationConfigurationOrganizationConfigurationArgs $;

        public Builder() {
            $ = new OrganizationConfigurationOrganizationConfigurationArgs();
        }

        public Builder(OrganizationConfigurationOrganizationConfigurationArgs defaults) {
            $ = new OrganizationConfigurationOrganizationConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configurationType Indicates whether the organization uses local or central configuration. If using central configuration, `auto_enable` must be set to `false` and `auto_enable_standards` set to `NONE`. More information can be found in the [documentation for central configuration](https://docs.aws.amazon.com/securityhub/latest/userguide/central-configuration-intro.html). Valid values: `LOCAL`, `CENTRAL`.
         * 
         * @return builder
         * 
         */
        public Builder configurationType(Output<String> configurationType) {
            $.configurationType = configurationType;
            return this;
        }

        /**
         * @param configurationType Indicates whether the organization uses local or central configuration. If using central configuration, `auto_enable` must be set to `false` and `auto_enable_standards` set to `NONE`. More information can be found in the [documentation for central configuration](https://docs.aws.amazon.com/securityhub/latest/userguide/central-configuration-intro.html). Valid values: `LOCAL`, `CENTRAL`.
         * 
         * @return builder
         * 
         */
        public Builder configurationType(String configurationType) {
            return configurationType(Output.of(configurationType));
        }

        public OrganizationConfigurationOrganizationConfigurationArgs build() {
            if ($.configurationType == null) {
                throw new MissingRequiredPropertyException("OrganizationConfigurationOrganizationConfigurationArgs", "configurationType");
            }
            return $;
        }
    }

}
