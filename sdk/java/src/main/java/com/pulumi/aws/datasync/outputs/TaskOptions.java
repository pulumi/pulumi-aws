// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.datasync.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TaskOptions {
    private @Nullable String atime;
    private @Nullable Integer bytesPerSecond;
    private @Nullable String gid;
    private @Nullable String logLevel;
    private @Nullable String mtime;
    private @Nullable String overwriteMode;
    private @Nullable String posixPermissions;
    private @Nullable String preserveDeletedFiles;
    private @Nullable String preserveDevices;
    private @Nullable String securityDescriptorCopyFlags;
    private @Nullable String taskQueueing;
    private @Nullable String transferMode;
    private @Nullable String uid;
    private @Nullable String verifyMode;

    private TaskOptions() {}
    public Optional<String> atime() {
        return Optional.ofNullable(this.atime);
    }
    public Optional<Integer> bytesPerSecond() {
        return Optional.ofNullable(this.bytesPerSecond);
    }
    public Optional<String> gid() {
        return Optional.ofNullable(this.gid);
    }
    public Optional<String> logLevel() {
        return Optional.ofNullable(this.logLevel);
    }
    public Optional<String> mtime() {
        return Optional.ofNullable(this.mtime);
    }
    public Optional<String> overwriteMode() {
        return Optional.ofNullable(this.overwriteMode);
    }
    public Optional<String> posixPermissions() {
        return Optional.ofNullable(this.posixPermissions);
    }
    public Optional<String> preserveDeletedFiles() {
        return Optional.ofNullable(this.preserveDeletedFiles);
    }
    public Optional<String> preserveDevices() {
        return Optional.ofNullable(this.preserveDevices);
    }
    public Optional<String> securityDescriptorCopyFlags() {
        return Optional.ofNullable(this.securityDescriptorCopyFlags);
    }
    public Optional<String> taskQueueing() {
        return Optional.ofNullable(this.taskQueueing);
    }
    public Optional<String> transferMode() {
        return Optional.ofNullable(this.transferMode);
    }
    public Optional<String> uid() {
        return Optional.ofNullable(this.uid);
    }
    public Optional<String> verifyMode() {
        return Optional.ofNullable(this.verifyMode);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TaskOptions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String atime;
        private @Nullable Integer bytesPerSecond;
        private @Nullable String gid;
        private @Nullable String logLevel;
        private @Nullable String mtime;
        private @Nullable String overwriteMode;
        private @Nullable String posixPermissions;
        private @Nullable String preserveDeletedFiles;
        private @Nullable String preserveDevices;
        private @Nullable String securityDescriptorCopyFlags;
        private @Nullable String taskQueueing;
        private @Nullable String transferMode;
        private @Nullable String uid;
        private @Nullable String verifyMode;
        public Builder() {}
        public Builder(TaskOptions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.atime = defaults.atime;
    	      this.bytesPerSecond = defaults.bytesPerSecond;
    	      this.gid = defaults.gid;
    	      this.logLevel = defaults.logLevel;
    	      this.mtime = defaults.mtime;
    	      this.overwriteMode = defaults.overwriteMode;
    	      this.posixPermissions = defaults.posixPermissions;
    	      this.preserveDeletedFiles = defaults.preserveDeletedFiles;
    	      this.preserveDevices = defaults.preserveDevices;
    	      this.securityDescriptorCopyFlags = defaults.securityDescriptorCopyFlags;
    	      this.taskQueueing = defaults.taskQueueing;
    	      this.transferMode = defaults.transferMode;
    	      this.uid = defaults.uid;
    	      this.verifyMode = defaults.verifyMode;
        }

        @CustomType.Setter
        public Builder atime(@Nullable String atime) {
            this.atime = atime;
            return this;
        }
        @CustomType.Setter
        public Builder bytesPerSecond(@Nullable Integer bytesPerSecond) {
            this.bytesPerSecond = bytesPerSecond;
            return this;
        }
        @CustomType.Setter
        public Builder gid(@Nullable String gid) {
            this.gid = gid;
            return this;
        }
        @CustomType.Setter
        public Builder logLevel(@Nullable String logLevel) {
            this.logLevel = logLevel;
            return this;
        }
        @CustomType.Setter
        public Builder mtime(@Nullable String mtime) {
            this.mtime = mtime;
            return this;
        }
        @CustomType.Setter
        public Builder overwriteMode(@Nullable String overwriteMode) {
            this.overwriteMode = overwriteMode;
            return this;
        }
        @CustomType.Setter
        public Builder posixPermissions(@Nullable String posixPermissions) {
            this.posixPermissions = posixPermissions;
            return this;
        }
        @CustomType.Setter
        public Builder preserveDeletedFiles(@Nullable String preserveDeletedFiles) {
            this.preserveDeletedFiles = preserveDeletedFiles;
            return this;
        }
        @CustomType.Setter
        public Builder preserveDevices(@Nullable String preserveDevices) {
            this.preserveDevices = preserveDevices;
            return this;
        }
        @CustomType.Setter
        public Builder securityDescriptorCopyFlags(@Nullable String securityDescriptorCopyFlags) {
            this.securityDescriptorCopyFlags = securityDescriptorCopyFlags;
            return this;
        }
        @CustomType.Setter
        public Builder taskQueueing(@Nullable String taskQueueing) {
            this.taskQueueing = taskQueueing;
            return this;
        }
        @CustomType.Setter
        public Builder transferMode(@Nullable String transferMode) {
            this.transferMode = transferMode;
            return this;
        }
        @CustomType.Setter
        public Builder uid(@Nullable String uid) {
            this.uid = uid;
            return this;
        }
        @CustomType.Setter
        public Builder verifyMode(@Nullable String verifyMode) {
            this.verifyMode = verifyMode;
            return this;
        }
        public TaskOptions build() {
            final var o = new TaskOptions();
            o.atime = atime;
            o.bytesPerSecond = bytesPerSecond;
            o.gid = gid;
            o.logLevel = logLevel;
            o.mtime = mtime;
            o.overwriteMode = overwriteMode;
            o.posixPermissions = posixPermissions;
            o.preserveDeletedFiles = preserveDeletedFiles;
            o.preserveDevices = preserveDevices;
            o.securityDescriptorCopyFlags = securityDescriptorCopyFlags;
            o.taskQueueing = taskQueueing;
            o.transferMode = transferMode;
            o.uid = uid;
            o.verifyMode = verifyMode;
            return o;
        }
    }
}
