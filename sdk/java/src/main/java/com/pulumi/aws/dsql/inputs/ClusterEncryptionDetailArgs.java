// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dsql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ClusterEncryptionDetailArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterEncryptionDetailArgs Empty = new ClusterEncryptionDetailArgs();

    /**
     * The status of encryption for the DSQL Cluster.
     * 
     */
    @Import(name="encryptionStatus", required=true)
    private Output<String> encryptionStatus;

    /**
     * @return The status of encryption for the DSQL Cluster.
     * 
     */
    public Output<String> encryptionStatus() {
        return this.encryptionStatus;
    }

    /**
     * The type of encryption that protects the data on the DSQL Cluster.
     * 
     */
    @Import(name="encryptionType", required=true)
    private Output<String> encryptionType;

    /**
     * @return The type of encryption that protects the data on the DSQL Cluster.
     * 
     */
    public Output<String> encryptionType() {
        return this.encryptionType;
    }

    private ClusterEncryptionDetailArgs() {}

    private ClusterEncryptionDetailArgs(ClusterEncryptionDetailArgs $) {
        this.encryptionStatus = $.encryptionStatus;
        this.encryptionType = $.encryptionType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterEncryptionDetailArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterEncryptionDetailArgs $;

        public Builder() {
            $ = new ClusterEncryptionDetailArgs();
        }

        public Builder(ClusterEncryptionDetailArgs defaults) {
            $ = new ClusterEncryptionDetailArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param encryptionStatus The status of encryption for the DSQL Cluster.
         * 
         * @return builder
         * 
         */
        public Builder encryptionStatus(Output<String> encryptionStatus) {
            $.encryptionStatus = encryptionStatus;
            return this;
        }

        /**
         * @param encryptionStatus The status of encryption for the DSQL Cluster.
         * 
         * @return builder
         * 
         */
        public Builder encryptionStatus(String encryptionStatus) {
            return encryptionStatus(Output.of(encryptionStatus));
        }

        /**
         * @param encryptionType The type of encryption that protects the data on the DSQL Cluster.
         * 
         * @return builder
         * 
         */
        public Builder encryptionType(Output<String> encryptionType) {
            $.encryptionType = encryptionType;
            return this;
        }

        /**
         * @param encryptionType The type of encryption that protects the data on the DSQL Cluster.
         * 
         * @return builder
         * 
         */
        public Builder encryptionType(String encryptionType) {
            return encryptionType(Output.of(encryptionType));
        }

        public ClusterEncryptionDetailArgs build() {
            if ($.encryptionStatus == null) {
                throw new MissingRequiredPropertyException("ClusterEncryptionDetailArgs", "encryptionStatus");
            }
            if ($.encryptionType == null) {
                throw new MissingRequiredPropertyException("ClusterEncryptionDetailArgs", "encryptionType");
            }
            return $;
        }
    }

}
