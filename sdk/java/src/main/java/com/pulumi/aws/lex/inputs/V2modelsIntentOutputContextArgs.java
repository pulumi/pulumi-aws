// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lex.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class V2modelsIntentOutputContextArgs extends com.pulumi.resources.ResourceArgs {

    public static final V2modelsIntentOutputContextArgs Empty = new V2modelsIntentOutputContextArgs();

    /**
     * Name of the output context.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of the output context.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Amount of time, in seconds, that the output context should remain active. The time is figured from the first time the context is sent to the user.
     * 
     */
    @Import(name="timeToLiveInSeconds", required=true)
    private Output<Integer> timeToLiveInSeconds;

    /**
     * @return Amount of time, in seconds, that the output context should remain active. The time is figured from the first time the context is sent to the user.
     * 
     */
    public Output<Integer> timeToLiveInSeconds() {
        return this.timeToLiveInSeconds;
    }

    /**
     * Number of conversation turns that the output context should remain active. The number of turns is counted from the first time that the context is sent to the user.
     * 
     */
    @Import(name="turnsToLive", required=true)
    private Output<Integer> turnsToLive;

    /**
     * @return Number of conversation turns that the output context should remain active. The number of turns is counted from the first time that the context is sent to the user.
     * 
     */
    public Output<Integer> turnsToLive() {
        return this.turnsToLive;
    }

    private V2modelsIntentOutputContextArgs() {}

    private V2modelsIntentOutputContextArgs(V2modelsIntentOutputContextArgs $) {
        this.name = $.name;
        this.timeToLiveInSeconds = $.timeToLiveInSeconds;
        this.turnsToLive = $.turnsToLive;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(V2modelsIntentOutputContextArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private V2modelsIntentOutputContextArgs $;

        public Builder() {
            $ = new V2modelsIntentOutputContextArgs();
        }

        public Builder(V2modelsIntentOutputContextArgs defaults) {
            $ = new V2modelsIntentOutputContextArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Name of the output context.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the output context.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param timeToLiveInSeconds Amount of time, in seconds, that the output context should remain active. The time is figured from the first time the context is sent to the user.
         * 
         * @return builder
         * 
         */
        public Builder timeToLiveInSeconds(Output<Integer> timeToLiveInSeconds) {
            $.timeToLiveInSeconds = timeToLiveInSeconds;
            return this;
        }

        /**
         * @param timeToLiveInSeconds Amount of time, in seconds, that the output context should remain active. The time is figured from the first time the context is sent to the user.
         * 
         * @return builder
         * 
         */
        public Builder timeToLiveInSeconds(Integer timeToLiveInSeconds) {
            return timeToLiveInSeconds(Output.of(timeToLiveInSeconds));
        }

        /**
         * @param turnsToLive Number of conversation turns that the output context should remain active. The number of turns is counted from the first time that the context is sent to the user.
         * 
         * @return builder
         * 
         */
        public Builder turnsToLive(Output<Integer> turnsToLive) {
            $.turnsToLive = turnsToLive;
            return this;
        }

        /**
         * @param turnsToLive Number of conversation turns that the output context should remain active. The number of turns is counted from the first time that the context is sent to the user.
         * 
         * @return builder
         * 
         */
        public Builder turnsToLive(Integer turnsToLive) {
            return turnsToLive(Output.of(turnsToLive));
        }

        public V2modelsIntentOutputContextArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("V2modelsIntentOutputContextArgs", "name");
            }
            if ($.timeToLiveInSeconds == null) {
                throw new MissingRequiredPropertyException("V2modelsIntentOutputContextArgs", "timeToLiveInSeconds");
            }
            if ($.turnsToLive == null) {
                throw new MissingRequiredPropertyException("V2modelsIntentOutputContextArgs", "turnsToLive");
            }
            return $;
        }
    }

}
