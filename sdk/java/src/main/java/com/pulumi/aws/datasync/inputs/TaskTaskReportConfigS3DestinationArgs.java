// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.datasync.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TaskTaskReportConfigS3DestinationArgs extends com.pulumi.resources.ResourceArgs {

    public static final TaskTaskReportConfigS3DestinationArgs Empty = new TaskTaskReportConfigS3DestinationArgs();

    /**
     * Specifies the Amazon Resource Name (ARN) of the IAM policy that allows DataSync to upload a task report to your S3 bucket.
     * 
     */
    @Import(name="bucketAccessRoleArn", required=true)
    private Output<String> bucketAccessRoleArn;

    /**
     * @return Specifies the Amazon Resource Name (ARN) of the IAM policy that allows DataSync to upload a task report to your S3 bucket.
     * 
     */
    public Output<String> bucketAccessRoleArn() {
        return this.bucketAccessRoleArn;
    }

    /**
     * Specifies the ARN of the S3 bucket where DataSync uploads your report.
     * 
     */
    @Import(name="s3BucketArn", required=true)
    private Output<String> s3BucketArn;

    /**
     * @return Specifies the ARN of the S3 bucket where DataSync uploads your report.
     * 
     */
    public Output<String> s3BucketArn() {
        return this.s3BucketArn;
    }

    /**
     * Specifies a bucket prefix for your report.
     * 
     */
    @Import(name="subdirectory")
    private @Nullable Output<String> subdirectory;

    /**
     * @return Specifies a bucket prefix for your report.
     * 
     */
    public Optional<Output<String>> subdirectory() {
        return Optional.ofNullable(this.subdirectory);
    }

    private TaskTaskReportConfigS3DestinationArgs() {}

    private TaskTaskReportConfigS3DestinationArgs(TaskTaskReportConfigS3DestinationArgs $) {
        this.bucketAccessRoleArn = $.bucketAccessRoleArn;
        this.s3BucketArn = $.s3BucketArn;
        this.subdirectory = $.subdirectory;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TaskTaskReportConfigS3DestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TaskTaskReportConfigS3DestinationArgs $;

        public Builder() {
            $ = new TaskTaskReportConfigS3DestinationArgs();
        }

        public Builder(TaskTaskReportConfigS3DestinationArgs defaults) {
            $ = new TaskTaskReportConfigS3DestinationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucketAccessRoleArn Specifies the Amazon Resource Name (ARN) of the IAM policy that allows DataSync to upload a task report to your S3 bucket.
         * 
         * @return builder
         * 
         */
        public Builder bucketAccessRoleArn(Output<String> bucketAccessRoleArn) {
            $.bucketAccessRoleArn = bucketAccessRoleArn;
            return this;
        }

        /**
         * @param bucketAccessRoleArn Specifies the Amazon Resource Name (ARN) of the IAM policy that allows DataSync to upload a task report to your S3 bucket.
         * 
         * @return builder
         * 
         */
        public Builder bucketAccessRoleArn(String bucketAccessRoleArn) {
            return bucketAccessRoleArn(Output.of(bucketAccessRoleArn));
        }

        /**
         * @param s3BucketArn Specifies the ARN of the S3 bucket where DataSync uploads your report.
         * 
         * @return builder
         * 
         */
        public Builder s3BucketArn(Output<String> s3BucketArn) {
            $.s3BucketArn = s3BucketArn;
            return this;
        }

        /**
         * @param s3BucketArn Specifies the ARN of the S3 bucket where DataSync uploads your report.
         * 
         * @return builder
         * 
         */
        public Builder s3BucketArn(String s3BucketArn) {
            return s3BucketArn(Output.of(s3BucketArn));
        }

        /**
         * @param subdirectory Specifies a bucket prefix for your report.
         * 
         * @return builder
         * 
         */
        public Builder subdirectory(@Nullable Output<String> subdirectory) {
            $.subdirectory = subdirectory;
            return this;
        }

        /**
         * @param subdirectory Specifies a bucket prefix for your report.
         * 
         * @return builder
         * 
         */
        public Builder subdirectory(String subdirectory) {
            return subdirectory(Output.of(subdirectory));
        }

        public TaskTaskReportConfigS3DestinationArgs build() {
            if ($.bucketAccessRoleArn == null) {
                throw new MissingRequiredPropertyException("TaskTaskReportConfigS3DestinationArgs", "bucketAccessRoleArn");
            }
            if ($.s3BucketArn == null) {
                throw new MissingRequiredPropertyException("TaskTaskReportConfigS3DestinationArgs", "s3BucketArn");
            }
            return $;
        }
    }

}
