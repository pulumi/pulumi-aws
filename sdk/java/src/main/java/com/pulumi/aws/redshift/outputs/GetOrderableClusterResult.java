// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.redshift.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetOrderableClusterResult {
    /**
     * @return List of Availability Zone names where the Redshift Cluster is available.
     * 
     */
    private @Nullable List<String> availabilityZones;
    private @Nullable String clusterType;
    private @Nullable String clusterVersion;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private @Nullable String nodeType;
    private @Nullable List<String> preferredNodeTypes;

    private GetOrderableClusterResult() {}
    /**
     * @return List of Availability Zone names where the Redshift Cluster is available.
     * 
     */
    public List<String> availabilityZones() {
        return this.availabilityZones == null ? List.of() : this.availabilityZones;
    }
    public Optional<String> clusterType() {
        return Optional.ofNullable(this.clusterType);
    }
    public Optional<String> clusterVersion() {
        return Optional.ofNullable(this.clusterVersion);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<String> nodeType() {
        return Optional.ofNullable(this.nodeType);
    }
    public List<String> preferredNodeTypes() {
        return this.preferredNodeTypes == null ? List.of() : this.preferredNodeTypes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOrderableClusterResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> availabilityZones;
        private @Nullable String clusterType;
        private @Nullable String clusterVersion;
        private @Nullable String id;
        private @Nullable String nodeType;
        private @Nullable List<String> preferredNodeTypes;
        public Builder() {}
        public Builder(GetOrderableClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityZones = defaults.availabilityZones;
    	      this.clusterType = defaults.clusterType;
    	      this.clusterVersion = defaults.clusterVersion;
    	      this.id = defaults.id;
    	      this.nodeType = defaults.nodeType;
    	      this.preferredNodeTypes = defaults.preferredNodeTypes;
        }

        @CustomType.Setter
        public Builder availabilityZones(@Nullable List<String> availabilityZones) {
            this.availabilityZones = availabilityZones;
            return this;
        }
        public Builder availabilityZones(String... availabilityZones) {
            return availabilityZones(List.of(availabilityZones));
        }
        @CustomType.Setter
        public Builder clusterType(@Nullable String clusterType) {
            this.clusterType = clusterType;
            return this;
        }
        @CustomType.Setter
        public Builder clusterVersion(@Nullable String clusterVersion) {
            this.clusterVersion = clusterVersion;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder nodeType(@Nullable String nodeType) {
            this.nodeType = nodeType;
            return this;
        }
        @CustomType.Setter
        public Builder preferredNodeTypes(@Nullable List<String> preferredNodeTypes) {
            this.preferredNodeTypes = preferredNodeTypes;
            return this;
        }
        public Builder preferredNodeTypes(String... preferredNodeTypes) {
            return preferredNodeTypes(List.of(preferredNodeTypes));
        }
        public GetOrderableClusterResult build() {
            final var o = new GetOrderableClusterResult();
            o.availabilityZones = availabilityZones;
            o.clusterType = clusterType;
            o.clusterVersion = clusterVersion;
            o.id = id;
            o.nodeType = nodeType;
            o.preferredNodeTypes = preferredNodeTypes;
            return o;
        }
    }
}
