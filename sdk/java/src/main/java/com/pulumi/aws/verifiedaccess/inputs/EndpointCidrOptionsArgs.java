// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.verifiedaccess.inputs;

import com.pulumi.aws.verifiedaccess.inputs.EndpointCidrOptionsPortRangeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EndpointCidrOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final EndpointCidrOptionsArgs Empty = new EndpointCidrOptionsArgs();

    @Import(name="cidr", required=true)
    private Output<String> cidr;

    public Output<String> cidr() {
        return this.cidr;
    }

    @Import(name="portRanges", required=true)
    private Output<List<EndpointCidrOptionsPortRangeArgs>> portRanges;

    public Output<List<EndpointCidrOptionsPortRangeArgs>> portRanges() {
        return this.portRanges;
    }

    @Import(name="protocol")
    private @Nullable Output<String> protocol;

    public Optional<Output<String>> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    @Import(name="subnetIds")
    private @Nullable Output<List<String>> subnetIds;

    public Optional<Output<List<String>>> subnetIds() {
        return Optional.ofNullable(this.subnetIds);
    }

    private EndpointCidrOptionsArgs() {}

    private EndpointCidrOptionsArgs(EndpointCidrOptionsArgs $) {
        this.cidr = $.cidr;
        this.portRanges = $.portRanges;
        this.protocol = $.protocol;
        this.subnetIds = $.subnetIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EndpointCidrOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EndpointCidrOptionsArgs $;

        public Builder() {
            $ = new EndpointCidrOptionsArgs();
        }

        public Builder(EndpointCidrOptionsArgs defaults) {
            $ = new EndpointCidrOptionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder cidr(Output<String> cidr) {
            $.cidr = cidr;
            return this;
        }

        public Builder cidr(String cidr) {
            return cidr(Output.of(cidr));
        }

        public Builder portRanges(Output<List<EndpointCidrOptionsPortRangeArgs>> portRanges) {
            $.portRanges = portRanges;
            return this;
        }

        public Builder portRanges(List<EndpointCidrOptionsPortRangeArgs> portRanges) {
            return portRanges(Output.of(portRanges));
        }

        public Builder portRanges(EndpointCidrOptionsPortRangeArgs... portRanges) {
            return portRanges(List.of(portRanges));
        }

        public Builder protocol(@Nullable Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        public Builder subnetIds(@Nullable Output<List<String>> subnetIds) {
            $.subnetIds = subnetIds;
            return this;
        }

        public Builder subnetIds(List<String> subnetIds) {
            return subnetIds(Output.of(subnetIds));
        }

        public Builder subnetIds(String... subnetIds) {
            return subnetIds(List.of(subnetIds));
        }

        public EndpointCidrOptionsArgs build() {
            if ($.cidr == null) {
                throw new MissingRequiredPropertyException("EndpointCidrOptionsArgs", "cidr");
            }
            if ($.portRanges == null) {
                throw new MissingRequiredPropertyException("EndpointCidrOptionsArgs", "portRanges");
            }
            return $;
        }
    }

}
