// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.acm.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCertificatePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCertificatePlainArgs Empty = new GetCertificatePlainArgs();

    @Import(name="domain", required=true)
    private String domain;

    public String domain() {
        return this.domain;
    }

    @Import(name="keyTypes")
    private @Nullable List<String> keyTypes;

    public Optional<List<String>> keyTypes() {
        return Optional.ofNullable(this.keyTypes);
    }

    @Import(name="mostRecent")
    private @Nullable Boolean mostRecent;

    public Optional<Boolean> mostRecent() {
        return Optional.ofNullable(this.mostRecent);
    }

    @Import(name="statuses")
    private @Nullable List<String> statuses;

    public Optional<List<String>> statuses() {
        return Optional.ofNullable(this.statuses);
    }

    @Import(name="tags")
    private @Nullable Map<String,String> tags;

    public Optional<Map<String,String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="types")
    private @Nullable List<String> types;

    public Optional<List<String>> types() {
        return Optional.ofNullable(this.types);
    }

    private GetCertificatePlainArgs() {}

    private GetCertificatePlainArgs(GetCertificatePlainArgs $) {
        this.domain = $.domain;
        this.keyTypes = $.keyTypes;
        this.mostRecent = $.mostRecent;
        this.statuses = $.statuses;
        this.tags = $.tags;
        this.types = $.types;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCertificatePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCertificatePlainArgs $;

        public Builder() {
            $ = new GetCertificatePlainArgs();
        }

        public Builder(GetCertificatePlainArgs defaults) {
            $ = new GetCertificatePlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder domain(String domain) {
            $.domain = domain;
            return this;
        }

        public Builder keyTypes(@Nullable List<String> keyTypes) {
            $.keyTypes = keyTypes;
            return this;
        }

        public Builder keyTypes(String... keyTypes) {
            return keyTypes(List.of(keyTypes));
        }

        public Builder mostRecent(@Nullable Boolean mostRecent) {
            $.mostRecent = mostRecent;
            return this;
        }

        public Builder statuses(@Nullable List<String> statuses) {
            $.statuses = statuses;
            return this;
        }

        public Builder statuses(String... statuses) {
            return statuses(List.of(statuses));
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            $.tags = tags;
            return this;
        }

        public Builder types(@Nullable List<String> types) {
            $.types = types;
            return this;
        }

        public Builder types(String... types) {
            return types(List.of(types));
        }

        public GetCertificatePlainArgs build() {
            $.domain = Objects.requireNonNull($.domain, "expected parameter 'domain' to be non-null");
            return $;
        }
    }

}
