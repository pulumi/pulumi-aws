// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ssoadmin;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class ApplicationAssignmentConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationAssignmentConfigurationArgs Empty = new ApplicationAssignmentConfigurationArgs();

    /**
     * ARN of the application.
     * 
     */
    @Import(name="applicationArn", required=true)
    private Output<String> applicationArn;

    /**
     * @return ARN of the application.
     * 
     */
    public Output<String> applicationArn() {
        return this.applicationArn;
    }

    /**
     * Indicates whether users must have an explicit assignment to access the application. If `false`, all users have access to the application.
     * 
     */
    @Import(name="assignmentRequired", required=true)
    private Output<Boolean> assignmentRequired;

    /**
     * @return Indicates whether users must have an explicit assignment to access the application. If `false`, all users have access to the application.
     * 
     */
    public Output<Boolean> assignmentRequired() {
        return this.assignmentRequired;
    }

    private ApplicationAssignmentConfigurationArgs() {}

    private ApplicationAssignmentConfigurationArgs(ApplicationAssignmentConfigurationArgs $) {
        this.applicationArn = $.applicationArn;
        this.assignmentRequired = $.assignmentRequired;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationAssignmentConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationAssignmentConfigurationArgs $;

        public Builder() {
            $ = new ApplicationAssignmentConfigurationArgs();
        }

        public Builder(ApplicationAssignmentConfigurationArgs defaults) {
            $ = new ApplicationAssignmentConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationArn ARN of the application.
         * 
         * @return builder
         * 
         */
        public Builder applicationArn(Output<String> applicationArn) {
            $.applicationArn = applicationArn;
            return this;
        }

        /**
         * @param applicationArn ARN of the application.
         * 
         * @return builder
         * 
         */
        public Builder applicationArn(String applicationArn) {
            return applicationArn(Output.of(applicationArn));
        }

        /**
         * @param assignmentRequired Indicates whether users must have an explicit assignment to access the application. If `false`, all users have access to the application.
         * 
         * @return builder
         * 
         */
        public Builder assignmentRequired(Output<Boolean> assignmentRequired) {
            $.assignmentRequired = assignmentRequired;
            return this;
        }

        /**
         * @param assignmentRequired Indicates whether users must have an explicit assignment to access the application. If `false`, all users have access to the application.
         * 
         * @return builder
         * 
         */
        public Builder assignmentRequired(Boolean assignmentRequired) {
            return assignmentRequired(Output.of(assignmentRequired));
        }

        public ApplicationAssignmentConfigurationArgs build() {
            $.applicationArn = Objects.requireNonNull($.applicationArn, "expected parameter 'applicationArn' to be non-null");
            $.assignmentRequired = Objects.requireNonNull($.assignmentRequired, "expected parameter 'assignmentRequired' to be non-null");
            return $;
        }
    }

}
