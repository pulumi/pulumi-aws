// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetBucketObjectPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetBucketObjectPlainArgs Empty = new GetBucketObjectPlainArgs();

    /**
     * @deprecated
     * Use the aws_s3_object data source instead
     * 
     */
    @Deprecated /* Use the aws_s3_object data source instead */
    @Import(name="bucket", required=true)
    private String bucket;

    /**
     * @deprecated
     * Use the aws_s3_object data source instead
     * 
     */
    @Deprecated /* Use the aws_s3_object data source instead */
    public String bucket() {
        return this.bucket;
    }

    @Import(name="key", required=true)
    private String key;

    public String key() {
        return this.key;
    }

    @Import(name="range")
    private @Nullable String range;

    public Optional<String> range() {
        return Optional.ofNullable(this.range);
    }

    @Import(name="tags")
    private @Nullable Map<String,String> tags;

    public Optional<Map<String,String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="versionId")
    private @Nullable String versionId;

    public Optional<String> versionId() {
        return Optional.ofNullable(this.versionId);
    }

    private GetBucketObjectPlainArgs() {}

    private GetBucketObjectPlainArgs(GetBucketObjectPlainArgs $) {
        this.bucket = $.bucket;
        this.key = $.key;
        this.range = $.range;
        this.tags = $.tags;
        this.versionId = $.versionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetBucketObjectPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetBucketObjectPlainArgs $;

        public Builder() {
            $ = new GetBucketObjectPlainArgs();
        }

        public Builder(GetBucketObjectPlainArgs defaults) {
            $ = new GetBucketObjectPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use the aws_s3_object data source instead
         * 
         */
        @Deprecated /* Use the aws_s3_object data source instead */
        public Builder bucket(String bucket) {
            $.bucket = bucket;
            return this;
        }

        public Builder key(String key) {
            $.key = key;
            return this;
        }

        public Builder range(@Nullable String range) {
            $.range = range;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            $.tags = tags;
            return this;
        }

        public Builder versionId(@Nullable String versionId) {
            $.versionId = versionId;
            return this;
        }

        public GetBucketObjectPlainArgs build() {
            $.bucket = Objects.requireNonNull($.bucket, "expected parameter 'bucket' to be non-null");
            $.key = Objects.requireNonNull($.key, "expected parameter 'key' to be non-null");
            return $;
        }
    }

}
