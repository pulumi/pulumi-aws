// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetBucketObjectPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetBucketObjectPlainArgs Empty = new GetBucketObjectPlainArgs();

    /**
     * Name of the bucket to read the object from. Alternatively, an [S3 access point](https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html) ARN can be specified
     * 
     * @deprecated
     * Use the aws_s3_object data source instead
     * 
     */
    @Deprecated /* Use the aws_s3_object data source instead */
    @Import(name="bucket", required=true)
    private String bucket;

    /**
     * @return Name of the bucket to read the object from. Alternatively, an [S3 access point](https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html) ARN can be specified
     * 
     * @deprecated
     * Use the aws_s3_object data source instead
     * 
     */
    @Deprecated /* Use the aws_s3_object data source instead */
    public String bucket() {
        return this.bucket;
    }

    /**
     * Full path to the object inside the bucket
     * 
     */
    @Import(name="key", required=true)
    private String key;

    /**
     * @return Full path to the object inside the bucket
     * 
     */
    public String key() {
        return this.key;
    }

    @Import(name="range")
    private @Nullable String range;

    public Optional<String> range() {
        return Optional.ofNullable(this.range);
    }

    /**
     * Map of tags assigned to the object.
     * 
     */
    @Import(name="tags")
    private @Nullable Map<String,String> tags;

    /**
     * @return Map of tags assigned to the object.
     * 
     */
    public Optional<Map<String,String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Specific version ID of the object returned (defaults to latest version)
     * 
     */
    @Import(name="versionId")
    private @Nullable String versionId;

    /**
     * @return Specific version ID of the object returned (defaults to latest version)
     * 
     */
    public Optional<String> versionId() {
        return Optional.ofNullable(this.versionId);
    }

    private GetBucketObjectPlainArgs() {}

    private GetBucketObjectPlainArgs(GetBucketObjectPlainArgs $) {
        this.bucket = $.bucket;
        this.key = $.key;
        this.range = $.range;
        this.tags = $.tags;
        this.versionId = $.versionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetBucketObjectPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetBucketObjectPlainArgs $;

        public Builder() {
            $ = new GetBucketObjectPlainArgs();
        }

        public Builder(GetBucketObjectPlainArgs defaults) {
            $ = new GetBucketObjectPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucket Name of the bucket to read the object from. Alternatively, an [S3 access point](https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html) ARN can be specified
         * 
         * @return builder
         * 
         * @deprecated
         * Use the aws_s3_object data source instead
         * 
         */
        @Deprecated /* Use the aws_s3_object data source instead */
        public Builder bucket(String bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param key Full path to the object inside the bucket
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            $.key = key;
            return this;
        }

        public Builder range(@Nullable String range) {
            $.range = range;
            return this;
        }

        /**
         * @param tags Map of tags assigned to the object.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Map<String,String> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param versionId Specific version ID of the object returned (defaults to latest version)
         * 
         * @return builder
         * 
         */
        public Builder versionId(@Nullable String versionId) {
            $.versionId = versionId;
            return this;
        }

        public GetBucketObjectPlainArgs build() {
            if ($.bucket == null) {
                throw new MissingRequiredPropertyException("GetBucketObjectPlainArgs", "bucket");
            }
            if ($.key == null) {
                throw new MissingRequiredPropertyException("GetBucketObjectPlainArgs", "key");
            }
            return $;
        }
    }

}
