// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.medialive.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ChannelEncoderSettingsAudioDescriptionCodecSettingsEac3AtmosSettings {
    /**
     * @return Average bitrate in bits/second.
     * 
     */
    private @Nullable Double bitrate;
    /**
     * @return Mono, Stereo, or 5.1 channel layout.
     * 
     */
    private @Nullable String codingMode;
    /**
     * @return Sets the dialnorm of the output.
     * 
     */
    private @Nullable Double dialnorm;
    /**
     * @return Sets the Dolby dynamic range compression profile.
     * 
     */
    private @Nullable String drcLine;
    /**
     * @return Sets the profile for heavy Dolby dynamic range compression.
     * 
     */
    private @Nullable String drcRf;
    /**
     * @return Height dimensional trim.
     * 
     */
    private @Nullable Double heightTrim;
    /**
     * @return Surround dimensional trim.
     * 
     */
    private @Nullable Double surroundTrim;

    private ChannelEncoderSettingsAudioDescriptionCodecSettingsEac3AtmosSettings() {}
    /**
     * @return Average bitrate in bits/second.
     * 
     */
    public Optional<Double> bitrate() {
        return Optional.ofNullable(this.bitrate);
    }
    /**
     * @return Mono, Stereo, or 5.1 channel layout.
     * 
     */
    public Optional<String> codingMode() {
        return Optional.ofNullable(this.codingMode);
    }
    /**
     * @return Sets the dialnorm of the output.
     * 
     */
    public Optional<Double> dialnorm() {
        return Optional.ofNullable(this.dialnorm);
    }
    /**
     * @return Sets the Dolby dynamic range compression profile.
     * 
     */
    public Optional<String> drcLine() {
        return Optional.ofNullable(this.drcLine);
    }
    /**
     * @return Sets the profile for heavy Dolby dynamic range compression.
     * 
     */
    public Optional<String> drcRf() {
        return Optional.ofNullable(this.drcRf);
    }
    /**
     * @return Height dimensional trim.
     * 
     */
    public Optional<Double> heightTrim() {
        return Optional.ofNullable(this.heightTrim);
    }
    /**
     * @return Surround dimensional trim.
     * 
     */
    public Optional<Double> surroundTrim() {
        return Optional.ofNullable(this.surroundTrim);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ChannelEncoderSettingsAudioDescriptionCodecSettingsEac3AtmosSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Double bitrate;
        private @Nullable String codingMode;
        private @Nullable Double dialnorm;
        private @Nullable String drcLine;
        private @Nullable String drcRf;
        private @Nullable Double heightTrim;
        private @Nullable Double surroundTrim;
        public Builder() {}
        public Builder(ChannelEncoderSettingsAudioDescriptionCodecSettingsEac3AtmosSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bitrate = defaults.bitrate;
    	      this.codingMode = defaults.codingMode;
    	      this.dialnorm = defaults.dialnorm;
    	      this.drcLine = defaults.drcLine;
    	      this.drcRf = defaults.drcRf;
    	      this.heightTrim = defaults.heightTrim;
    	      this.surroundTrim = defaults.surroundTrim;
        }

        @CustomType.Setter
        public Builder bitrate(@Nullable Double bitrate) {
            this.bitrate = bitrate;
            return this;
        }
        @CustomType.Setter
        public Builder codingMode(@Nullable String codingMode) {
            this.codingMode = codingMode;
            return this;
        }
        @CustomType.Setter
        public Builder dialnorm(@Nullable Double dialnorm) {
            this.dialnorm = dialnorm;
            return this;
        }
        @CustomType.Setter
        public Builder drcLine(@Nullable String drcLine) {
            this.drcLine = drcLine;
            return this;
        }
        @CustomType.Setter
        public Builder drcRf(@Nullable String drcRf) {
            this.drcRf = drcRf;
            return this;
        }
        @CustomType.Setter
        public Builder heightTrim(@Nullable Double heightTrim) {
            this.heightTrim = heightTrim;
            return this;
        }
        @CustomType.Setter
        public Builder surroundTrim(@Nullable Double surroundTrim) {
            this.surroundTrim = surroundTrim;
            return this;
        }
        public ChannelEncoderSettingsAudioDescriptionCodecSettingsEac3AtmosSettings build() {
            final var o = new ChannelEncoderSettingsAudioDescriptionCodecSettingsEac3AtmosSettings();
            o.bitrate = bitrate;
            o.codingMode = codingMode;
            o.dialnorm = dialnorm;
            o.drcLine = drcLine;
            o.drcRf = drcRf;
            o.heightTrim = heightTrim;
            o.surroundTrim = surroundTrim;
            return o;
        }
    }
}
