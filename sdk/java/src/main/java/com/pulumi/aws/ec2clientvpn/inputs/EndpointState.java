// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2clientvpn.inputs;

import com.pulumi.aws.ec2clientvpn.inputs.EndpointAuthenticationOptionArgs;
import com.pulumi.aws.ec2clientvpn.inputs.EndpointClientConnectOptionsArgs;
import com.pulumi.aws.ec2clientvpn.inputs.EndpointClientLoginBannerOptionsArgs;
import com.pulumi.aws.ec2clientvpn.inputs.EndpointConnectionLogOptionsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EndpointState extends com.pulumi.resources.ResourceArgs {

    public static final EndpointState Empty = new EndpointState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="authenticationOptions")
    private @Nullable Output<List<EndpointAuthenticationOptionArgs>> authenticationOptions;

    public Optional<Output<List<EndpointAuthenticationOptionArgs>>> authenticationOptions() {
        return Optional.ofNullable(this.authenticationOptions);
    }

    @Import(name="clientCidrBlock")
    private @Nullable Output<String> clientCidrBlock;

    public Optional<Output<String>> clientCidrBlock() {
        return Optional.ofNullable(this.clientCidrBlock);
    }

    @Import(name="clientConnectOptions")
    private @Nullable Output<EndpointClientConnectOptionsArgs> clientConnectOptions;

    public Optional<Output<EndpointClientConnectOptionsArgs>> clientConnectOptions() {
        return Optional.ofNullable(this.clientConnectOptions);
    }

    @Import(name="clientLoginBannerOptions")
    private @Nullable Output<EndpointClientLoginBannerOptionsArgs> clientLoginBannerOptions;

    public Optional<Output<EndpointClientLoginBannerOptionsArgs>> clientLoginBannerOptions() {
        return Optional.ofNullable(this.clientLoginBannerOptions);
    }

    @Import(name="connectionLogOptions")
    private @Nullable Output<EndpointConnectionLogOptionsArgs> connectionLogOptions;

    public Optional<Output<EndpointConnectionLogOptionsArgs>> connectionLogOptions() {
        return Optional.ofNullable(this.connectionLogOptions);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="dnsName")
    private @Nullable Output<String> dnsName;

    public Optional<Output<String>> dnsName() {
        return Optional.ofNullable(this.dnsName);
    }

    @Import(name="dnsServers")
    private @Nullable Output<List<String>> dnsServers;

    public Optional<Output<List<String>>> dnsServers() {
        return Optional.ofNullable(this.dnsServers);
    }

    @Import(name="securityGroupIds")
    private @Nullable Output<List<String>> securityGroupIds;

    public Optional<Output<List<String>>> securityGroupIds() {
        return Optional.ofNullable(this.securityGroupIds);
    }

    @Import(name="selfServicePortal")
    private @Nullable Output<String> selfServicePortal;

    public Optional<Output<String>> selfServicePortal() {
        return Optional.ofNullable(this.selfServicePortal);
    }

    @Import(name="serverCertificateArn")
    private @Nullable Output<String> serverCertificateArn;

    public Optional<Output<String>> serverCertificateArn() {
        return Optional.ofNullable(this.serverCertificateArn);
    }

    @Import(name="sessionTimeoutHours")
    private @Nullable Output<Integer> sessionTimeoutHours;

    public Optional<Output<Integer>> sessionTimeoutHours() {
        return Optional.ofNullable(this.sessionTimeoutHours);
    }

    @Import(name="splitTunnel")
    private @Nullable Output<Boolean> splitTunnel;

    public Optional<Output<Boolean>> splitTunnel() {
        return Optional.ofNullable(this.splitTunnel);
    }

    /**
     * @deprecated
     * This attribute has been deprecated.
     * 
     */
    @Deprecated /* This attribute has been deprecated. */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @deprecated
     * This attribute has been deprecated.
     * 
     */
    @Deprecated /* This attribute has been deprecated. */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="transportProtocol")
    private @Nullable Output<String> transportProtocol;

    public Optional<Output<String>> transportProtocol() {
        return Optional.ofNullable(this.transportProtocol);
    }

    @Import(name="vpcId")
    private @Nullable Output<String> vpcId;

    public Optional<Output<String>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    @Import(name="vpnPort")
    private @Nullable Output<Integer> vpnPort;

    public Optional<Output<Integer>> vpnPort() {
        return Optional.ofNullable(this.vpnPort);
    }

    private EndpointState() {}

    private EndpointState(EndpointState $) {
        this.arn = $.arn;
        this.authenticationOptions = $.authenticationOptions;
        this.clientCidrBlock = $.clientCidrBlock;
        this.clientConnectOptions = $.clientConnectOptions;
        this.clientLoginBannerOptions = $.clientLoginBannerOptions;
        this.connectionLogOptions = $.connectionLogOptions;
        this.description = $.description;
        this.dnsName = $.dnsName;
        this.dnsServers = $.dnsServers;
        this.securityGroupIds = $.securityGroupIds;
        this.selfServicePortal = $.selfServicePortal;
        this.serverCertificateArn = $.serverCertificateArn;
        this.sessionTimeoutHours = $.sessionTimeoutHours;
        this.splitTunnel = $.splitTunnel;
        this.status = $.status;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.transportProtocol = $.transportProtocol;
        this.vpcId = $.vpcId;
        this.vpnPort = $.vpnPort;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EndpointState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EndpointState $;

        public Builder() {
            $ = new EndpointState();
        }

        public Builder(EndpointState defaults) {
            $ = new EndpointState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder authenticationOptions(@Nullable Output<List<EndpointAuthenticationOptionArgs>> authenticationOptions) {
            $.authenticationOptions = authenticationOptions;
            return this;
        }

        public Builder authenticationOptions(List<EndpointAuthenticationOptionArgs> authenticationOptions) {
            return authenticationOptions(Output.of(authenticationOptions));
        }

        public Builder authenticationOptions(EndpointAuthenticationOptionArgs... authenticationOptions) {
            return authenticationOptions(List.of(authenticationOptions));
        }

        public Builder clientCidrBlock(@Nullable Output<String> clientCidrBlock) {
            $.clientCidrBlock = clientCidrBlock;
            return this;
        }

        public Builder clientCidrBlock(String clientCidrBlock) {
            return clientCidrBlock(Output.of(clientCidrBlock));
        }

        public Builder clientConnectOptions(@Nullable Output<EndpointClientConnectOptionsArgs> clientConnectOptions) {
            $.clientConnectOptions = clientConnectOptions;
            return this;
        }

        public Builder clientConnectOptions(EndpointClientConnectOptionsArgs clientConnectOptions) {
            return clientConnectOptions(Output.of(clientConnectOptions));
        }

        public Builder clientLoginBannerOptions(@Nullable Output<EndpointClientLoginBannerOptionsArgs> clientLoginBannerOptions) {
            $.clientLoginBannerOptions = clientLoginBannerOptions;
            return this;
        }

        public Builder clientLoginBannerOptions(EndpointClientLoginBannerOptionsArgs clientLoginBannerOptions) {
            return clientLoginBannerOptions(Output.of(clientLoginBannerOptions));
        }

        public Builder connectionLogOptions(@Nullable Output<EndpointConnectionLogOptionsArgs> connectionLogOptions) {
            $.connectionLogOptions = connectionLogOptions;
            return this;
        }

        public Builder connectionLogOptions(EndpointConnectionLogOptionsArgs connectionLogOptions) {
            return connectionLogOptions(Output.of(connectionLogOptions));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder dnsName(@Nullable Output<String> dnsName) {
            $.dnsName = dnsName;
            return this;
        }

        public Builder dnsName(String dnsName) {
            return dnsName(Output.of(dnsName));
        }

        public Builder dnsServers(@Nullable Output<List<String>> dnsServers) {
            $.dnsServers = dnsServers;
            return this;
        }

        public Builder dnsServers(List<String> dnsServers) {
            return dnsServers(Output.of(dnsServers));
        }

        public Builder dnsServers(String... dnsServers) {
            return dnsServers(List.of(dnsServers));
        }

        public Builder securityGroupIds(@Nullable Output<List<String>> securityGroupIds) {
            $.securityGroupIds = securityGroupIds;
            return this;
        }

        public Builder securityGroupIds(List<String> securityGroupIds) {
            return securityGroupIds(Output.of(securityGroupIds));
        }

        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }

        public Builder selfServicePortal(@Nullable Output<String> selfServicePortal) {
            $.selfServicePortal = selfServicePortal;
            return this;
        }

        public Builder selfServicePortal(String selfServicePortal) {
            return selfServicePortal(Output.of(selfServicePortal));
        }

        public Builder serverCertificateArn(@Nullable Output<String> serverCertificateArn) {
            $.serverCertificateArn = serverCertificateArn;
            return this;
        }

        public Builder serverCertificateArn(String serverCertificateArn) {
            return serverCertificateArn(Output.of(serverCertificateArn));
        }

        public Builder sessionTimeoutHours(@Nullable Output<Integer> sessionTimeoutHours) {
            $.sessionTimeoutHours = sessionTimeoutHours;
            return this;
        }

        public Builder sessionTimeoutHours(Integer sessionTimeoutHours) {
            return sessionTimeoutHours(Output.of(sessionTimeoutHours));
        }

        public Builder splitTunnel(@Nullable Output<Boolean> splitTunnel) {
            $.splitTunnel = splitTunnel;
            return this;
        }

        public Builder splitTunnel(Boolean splitTunnel) {
            return splitTunnel(Output.of(splitTunnel));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * This attribute has been deprecated.
         * 
         */
        @Deprecated /* This attribute has been deprecated. */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * This attribute has been deprecated.
         * 
         */
        @Deprecated /* This attribute has been deprecated. */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder transportProtocol(@Nullable Output<String> transportProtocol) {
            $.transportProtocol = transportProtocol;
            return this;
        }

        public Builder transportProtocol(String transportProtocol) {
            return transportProtocol(Output.of(transportProtocol));
        }

        public Builder vpcId(@Nullable Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        public Builder vpnPort(@Nullable Output<Integer> vpnPort) {
            $.vpnPort = vpnPort;
            return this;
        }

        public Builder vpnPort(Integer vpnPort) {
            return vpnPort(Output.of(vpnPort));
        }

        public EndpointState build() {
            return $;
        }
    }

}
