// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class MeasureFieldSchema2CalculatedMeasureFieldArgs extends com.pulumi.resources.ResourceArgs {

    public static final MeasureFieldSchema2CalculatedMeasureFieldArgs Empty = new MeasureFieldSchema2CalculatedMeasureFieldArgs();

    @Import(name="expression", required=true)
    private Output<String> expression;

    public Output<String> expression() {
        return this.expression;
    }

    @Import(name="fieldId", required=true)
    private Output<String> fieldId;

    public Output<String> fieldId() {
        return this.fieldId;
    }

    private MeasureFieldSchema2CalculatedMeasureFieldArgs() {}

    private MeasureFieldSchema2CalculatedMeasureFieldArgs(MeasureFieldSchema2CalculatedMeasureFieldArgs $) {
        this.expression = $.expression;
        this.fieldId = $.fieldId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MeasureFieldSchema2CalculatedMeasureFieldArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MeasureFieldSchema2CalculatedMeasureFieldArgs $;

        public Builder() {
            $ = new MeasureFieldSchema2CalculatedMeasureFieldArgs();
        }

        public Builder(MeasureFieldSchema2CalculatedMeasureFieldArgs defaults) {
            $ = new MeasureFieldSchema2CalculatedMeasureFieldArgs(Objects.requireNonNull(defaults));
        }

        public Builder expression(Output<String> expression) {
            $.expression = expression;
            return this;
        }

        public Builder expression(String expression) {
            return expression(Output.of(expression));
        }

        public Builder fieldId(Output<String> fieldId) {
            $.fieldId = fieldId;
            return this;
        }

        public Builder fieldId(String fieldId) {
            return fieldId(Output.of(fieldId));
        }

        public MeasureFieldSchema2CalculatedMeasureFieldArgs build() {
            if ($.expression == null) {
                throw new MissingRequiredPropertyException("MeasureFieldSchema2CalculatedMeasureFieldArgs", "expression");
            }
            if ($.fieldId == null) {
                throw new MissingRequiredPropertyException("MeasureFieldSchema2CalculatedMeasureFieldArgs", "fieldId");
            }
            return $;
        }
    }

}
