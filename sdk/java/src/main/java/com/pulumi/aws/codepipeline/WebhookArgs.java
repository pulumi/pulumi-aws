// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codepipeline;

import com.pulumi.aws.codepipeline.inputs.WebhookAuthenticationConfigurationArgs;
import com.pulumi.aws.codepipeline.inputs.WebhookFilterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WebhookArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebhookArgs Empty = new WebhookArgs();

    @Import(name="authentication", required=true)
    private Output<String> authentication;

    public Output<String> authentication() {
        return this.authentication;
    }

    @Import(name="authenticationConfiguration")
    private @Nullable Output<WebhookAuthenticationConfigurationArgs> authenticationConfiguration;

    public Optional<Output<WebhookAuthenticationConfigurationArgs>> authenticationConfiguration() {
        return Optional.ofNullable(this.authenticationConfiguration);
    }

    @Import(name="filters", required=true)
    private Output<List<WebhookFilterArgs>> filters;

    public Output<List<WebhookFilterArgs>> filters() {
        return this.filters;
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="targetAction", required=true)
    private Output<String> targetAction;

    public Output<String> targetAction() {
        return this.targetAction;
    }

    @Import(name="targetPipeline", required=true)
    private Output<String> targetPipeline;

    public Output<String> targetPipeline() {
        return this.targetPipeline;
    }

    private WebhookArgs() {}

    private WebhookArgs(WebhookArgs $) {
        this.authentication = $.authentication;
        this.authenticationConfiguration = $.authenticationConfiguration;
        this.filters = $.filters;
        this.name = $.name;
        this.tags = $.tags;
        this.targetAction = $.targetAction;
        this.targetPipeline = $.targetPipeline;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebhookArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebhookArgs $;

        public Builder() {
            $ = new WebhookArgs();
        }

        public Builder(WebhookArgs defaults) {
            $ = new WebhookArgs(Objects.requireNonNull(defaults));
        }

        public Builder authentication(Output<String> authentication) {
            $.authentication = authentication;
            return this;
        }

        public Builder authentication(String authentication) {
            return authentication(Output.of(authentication));
        }

        public Builder authenticationConfiguration(@Nullable Output<WebhookAuthenticationConfigurationArgs> authenticationConfiguration) {
            $.authenticationConfiguration = authenticationConfiguration;
            return this;
        }

        public Builder authenticationConfiguration(WebhookAuthenticationConfigurationArgs authenticationConfiguration) {
            return authenticationConfiguration(Output.of(authenticationConfiguration));
        }

        public Builder filters(Output<List<WebhookFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<WebhookFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(WebhookFilterArgs... filters) {
            return filters(List.of(filters));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder targetAction(Output<String> targetAction) {
            $.targetAction = targetAction;
            return this;
        }

        public Builder targetAction(String targetAction) {
            return targetAction(Output.of(targetAction));
        }

        public Builder targetPipeline(Output<String> targetPipeline) {
            $.targetPipeline = targetPipeline;
            return this;
        }

        public Builder targetPipeline(String targetPipeline) {
            return targetPipeline(Output.of(targetPipeline));
        }

        public WebhookArgs build() {
            $.authentication = Objects.requireNonNull($.authentication, "expected parameter 'authentication' to be non-null");
            $.filters = Objects.requireNonNull($.filters, "expected parameter 'filters' to be non-null");
            $.targetAction = Objects.requireNonNull($.targetAction, "expected parameter 'targetAction' to be non-null");
            $.targetPipeline = Objects.requireNonNull($.targetPipeline, "expected parameter 'targetPipeline' to be non-null");
            return $;
        }
    }

}
