// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2;

import com.pulumi.aws.ec2.inputs.AmiFromInstanceEbsBlockDeviceArgs;
import com.pulumi.aws.ec2.inputs.AmiFromInstanceEphemeralBlockDeviceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AmiFromInstanceArgs extends com.pulumi.resources.ResourceArgs {

    public static final AmiFromInstanceArgs Empty = new AmiFromInstanceArgs();

    @Import(name="deprecationTime")
    private @Nullable Output<String> deprecationTime;

    public Optional<Output<String>> deprecationTime() {
        return Optional.ofNullable(this.deprecationTime);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="ebsBlockDevices")
    private @Nullable Output<List<AmiFromInstanceEbsBlockDeviceArgs>> ebsBlockDevices;

    public Optional<Output<List<AmiFromInstanceEbsBlockDeviceArgs>>> ebsBlockDevices() {
        return Optional.ofNullable(this.ebsBlockDevices);
    }

    @Import(name="ephemeralBlockDevices")
    private @Nullable Output<List<AmiFromInstanceEphemeralBlockDeviceArgs>> ephemeralBlockDevices;

    public Optional<Output<List<AmiFromInstanceEphemeralBlockDeviceArgs>>> ephemeralBlockDevices() {
        return Optional.ofNullable(this.ephemeralBlockDevices);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="snapshotWithoutReboot")
    private @Nullable Output<Boolean> snapshotWithoutReboot;

    public Optional<Output<Boolean>> snapshotWithoutReboot() {
        return Optional.ofNullable(this.snapshotWithoutReboot);
    }

    @Import(name="sourceInstanceId", required=true)
    private Output<String> sourceInstanceId;

    public Output<String> sourceInstanceId() {
        return this.sourceInstanceId;
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private AmiFromInstanceArgs() {}

    private AmiFromInstanceArgs(AmiFromInstanceArgs $) {
        this.deprecationTime = $.deprecationTime;
        this.description = $.description;
        this.ebsBlockDevices = $.ebsBlockDevices;
        this.ephemeralBlockDevices = $.ephemeralBlockDevices;
        this.name = $.name;
        this.snapshotWithoutReboot = $.snapshotWithoutReboot;
        this.sourceInstanceId = $.sourceInstanceId;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AmiFromInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AmiFromInstanceArgs $;

        public Builder() {
            $ = new AmiFromInstanceArgs();
        }

        public Builder(AmiFromInstanceArgs defaults) {
            $ = new AmiFromInstanceArgs(Objects.requireNonNull(defaults));
        }

        public Builder deprecationTime(@Nullable Output<String> deprecationTime) {
            $.deprecationTime = deprecationTime;
            return this;
        }

        public Builder deprecationTime(String deprecationTime) {
            return deprecationTime(Output.of(deprecationTime));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder ebsBlockDevices(@Nullable Output<List<AmiFromInstanceEbsBlockDeviceArgs>> ebsBlockDevices) {
            $.ebsBlockDevices = ebsBlockDevices;
            return this;
        }

        public Builder ebsBlockDevices(List<AmiFromInstanceEbsBlockDeviceArgs> ebsBlockDevices) {
            return ebsBlockDevices(Output.of(ebsBlockDevices));
        }

        public Builder ebsBlockDevices(AmiFromInstanceEbsBlockDeviceArgs... ebsBlockDevices) {
            return ebsBlockDevices(List.of(ebsBlockDevices));
        }

        public Builder ephemeralBlockDevices(@Nullable Output<List<AmiFromInstanceEphemeralBlockDeviceArgs>> ephemeralBlockDevices) {
            $.ephemeralBlockDevices = ephemeralBlockDevices;
            return this;
        }

        public Builder ephemeralBlockDevices(List<AmiFromInstanceEphemeralBlockDeviceArgs> ephemeralBlockDevices) {
            return ephemeralBlockDevices(Output.of(ephemeralBlockDevices));
        }

        public Builder ephemeralBlockDevices(AmiFromInstanceEphemeralBlockDeviceArgs... ephemeralBlockDevices) {
            return ephemeralBlockDevices(List.of(ephemeralBlockDevices));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder snapshotWithoutReboot(@Nullable Output<Boolean> snapshotWithoutReboot) {
            $.snapshotWithoutReboot = snapshotWithoutReboot;
            return this;
        }

        public Builder snapshotWithoutReboot(Boolean snapshotWithoutReboot) {
            return snapshotWithoutReboot(Output.of(snapshotWithoutReboot));
        }

        public Builder sourceInstanceId(Output<String> sourceInstanceId) {
            $.sourceInstanceId = sourceInstanceId;
            return this;
        }

        public Builder sourceInstanceId(String sourceInstanceId) {
            return sourceInstanceId(Output.of(sourceInstanceId));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public AmiFromInstanceArgs build() {
            $.sourceInstanceId = Objects.requireNonNull($.sourceInstanceId, "expected parameter 'sourceInstanceId' to be non-null");
            return $;
        }
    }

}
