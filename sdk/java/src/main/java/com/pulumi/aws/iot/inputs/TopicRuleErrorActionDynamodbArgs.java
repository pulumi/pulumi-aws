// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iot.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TopicRuleErrorActionDynamodbArgs extends com.pulumi.resources.ResourceArgs {

    public static final TopicRuleErrorActionDynamodbArgs Empty = new TopicRuleErrorActionDynamodbArgs();

    /**
     * The hash key name.
     * 
     */
    @Import(name="hashKeyField", required=true)
    private Output<String> hashKeyField;

    /**
     * @return The hash key name.
     * 
     */
    public Output<String> hashKeyField() {
        return this.hashKeyField;
    }

    /**
     * The hash key type. Valid values are &#34;STRING&#34; or &#34;NUMBER&#34;.
     * 
     */
    @Import(name="hashKeyType")
    private @Nullable Output<String> hashKeyType;

    /**
     * @return The hash key type. Valid values are &#34;STRING&#34; or &#34;NUMBER&#34;.
     * 
     */
    public Optional<Output<String>> hashKeyType() {
        return Optional.ofNullable(this.hashKeyType);
    }

    /**
     * The hash key value.
     * 
     */
    @Import(name="hashKeyValue", required=true)
    private Output<String> hashKeyValue;

    /**
     * @return The hash key value.
     * 
     */
    public Output<String> hashKeyValue() {
        return this.hashKeyValue;
    }

    /**
     * The operation. Valid values are &#34;INSERT&#34;, &#34;UPDATE&#34;, or &#34;DELETE&#34;.
     * 
     */
    @Import(name="operation")
    private @Nullable Output<String> operation;

    /**
     * @return The operation. Valid values are &#34;INSERT&#34;, &#34;UPDATE&#34;, or &#34;DELETE&#34;.
     * 
     */
    public Optional<Output<String>> operation() {
        return Optional.ofNullable(this.operation);
    }

    /**
     * The action payload.
     * 
     */
    @Import(name="payloadField")
    private @Nullable Output<String> payloadField;

    /**
     * @return The action payload.
     * 
     */
    public Optional<Output<String>> payloadField() {
        return Optional.ofNullable(this.payloadField);
    }

    /**
     * The range key name.
     * 
     */
    @Import(name="rangeKeyField")
    private @Nullable Output<String> rangeKeyField;

    /**
     * @return The range key name.
     * 
     */
    public Optional<Output<String>> rangeKeyField() {
        return Optional.ofNullable(this.rangeKeyField);
    }

    /**
     * The range key type. Valid values are &#34;STRING&#34; or &#34;NUMBER&#34;.
     * 
     */
    @Import(name="rangeKeyType")
    private @Nullable Output<String> rangeKeyType;

    /**
     * @return The range key type. Valid values are &#34;STRING&#34; or &#34;NUMBER&#34;.
     * 
     */
    public Optional<Output<String>> rangeKeyType() {
        return Optional.ofNullable(this.rangeKeyType);
    }

    /**
     * The range key value.
     * 
     */
    @Import(name="rangeKeyValue")
    private @Nullable Output<String> rangeKeyValue;

    /**
     * @return The range key value.
     * 
     */
    public Optional<Output<String>> rangeKeyValue() {
        return Optional.ofNullable(this.rangeKeyValue);
    }

    /**
     * The ARN of the IAM role that grants access to the DynamoDB table.
     * 
     */
    @Import(name="roleArn", required=true)
    private Output<String> roleArn;

    /**
     * @return The ARN of the IAM role that grants access to the DynamoDB table.
     * 
     */
    public Output<String> roleArn() {
        return this.roleArn;
    }

    /**
     * The name of the DynamoDB table.
     * 
     */
    @Import(name="tableName", required=true)
    private Output<String> tableName;

    /**
     * @return The name of the DynamoDB table.
     * 
     */
    public Output<String> tableName() {
        return this.tableName;
    }

    private TopicRuleErrorActionDynamodbArgs() {}

    private TopicRuleErrorActionDynamodbArgs(TopicRuleErrorActionDynamodbArgs $) {
        this.hashKeyField = $.hashKeyField;
        this.hashKeyType = $.hashKeyType;
        this.hashKeyValue = $.hashKeyValue;
        this.operation = $.operation;
        this.payloadField = $.payloadField;
        this.rangeKeyField = $.rangeKeyField;
        this.rangeKeyType = $.rangeKeyType;
        this.rangeKeyValue = $.rangeKeyValue;
        this.roleArn = $.roleArn;
        this.tableName = $.tableName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TopicRuleErrorActionDynamodbArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TopicRuleErrorActionDynamodbArgs $;

        public Builder() {
            $ = new TopicRuleErrorActionDynamodbArgs();
        }

        public Builder(TopicRuleErrorActionDynamodbArgs defaults) {
            $ = new TopicRuleErrorActionDynamodbArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param hashKeyField The hash key name.
         * 
         * @return builder
         * 
         */
        public Builder hashKeyField(Output<String> hashKeyField) {
            $.hashKeyField = hashKeyField;
            return this;
        }

        /**
         * @param hashKeyField The hash key name.
         * 
         * @return builder
         * 
         */
        public Builder hashKeyField(String hashKeyField) {
            return hashKeyField(Output.of(hashKeyField));
        }

        /**
         * @param hashKeyType The hash key type. Valid values are &#34;STRING&#34; or &#34;NUMBER&#34;.
         * 
         * @return builder
         * 
         */
        public Builder hashKeyType(@Nullable Output<String> hashKeyType) {
            $.hashKeyType = hashKeyType;
            return this;
        }

        /**
         * @param hashKeyType The hash key type. Valid values are &#34;STRING&#34; or &#34;NUMBER&#34;.
         * 
         * @return builder
         * 
         */
        public Builder hashKeyType(String hashKeyType) {
            return hashKeyType(Output.of(hashKeyType));
        }

        /**
         * @param hashKeyValue The hash key value.
         * 
         * @return builder
         * 
         */
        public Builder hashKeyValue(Output<String> hashKeyValue) {
            $.hashKeyValue = hashKeyValue;
            return this;
        }

        /**
         * @param hashKeyValue The hash key value.
         * 
         * @return builder
         * 
         */
        public Builder hashKeyValue(String hashKeyValue) {
            return hashKeyValue(Output.of(hashKeyValue));
        }

        /**
         * @param operation The operation. Valid values are &#34;INSERT&#34;, &#34;UPDATE&#34;, or &#34;DELETE&#34;.
         * 
         * @return builder
         * 
         */
        public Builder operation(@Nullable Output<String> operation) {
            $.operation = operation;
            return this;
        }

        /**
         * @param operation The operation. Valid values are &#34;INSERT&#34;, &#34;UPDATE&#34;, or &#34;DELETE&#34;.
         * 
         * @return builder
         * 
         */
        public Builder operation(String operation) {
            return operation(Output.of(operation));
        }

        /**
         * @param payloadField The action payload.
         * 
         * @return builder
         * 
         */
        public Builder payloadField(@Nullable Output<String> payloadField) {
            $.payloadField = payloadField;
            return this;
        }

        /**
         * @param payloadField The action payload.
         * 
         * @return builder
         * 
         */
        public Builder payloadField(String payloadField) {
            return payloadField(Output.of(payloadField));
        }

        /**
         * @param rangeKeyField The range key name.
         * 
         * @return builder
         * 
         */
        public Builder rangeKeyField(@Nullable Output<String> rangeKeyField) {
            $.rangeKeyField = rangeKeyField;
            return this;
        }

        /**
         * @param rangeKeyField The range key name.
         * 
         * @return builder
         * 
         */
        public Builder rangeKeyField(String rangeKeyField) {
            return rangeKeyField(Output.of(rangeKeyField));
        }

        /**
         * @param rangeKeyType The range key type. Valid values are &#34;STRING&#34; or &#34;NUMBER&#34;.
         * 
         * @return builder
         * 
         */
        public Builder rangeKeyType(@Nullable Output<String> rangeKeyType) {
            $.rangeKeyType = rangeKeyType;
            return this;
        }

        /**
         * @param rangeKeyType The range key type. Valid values are &#34;STRING&#34; or &#34;NUMBER&#34;.
         * 
         * @return builder
         * 
         */
        public Builder rangeKeyType(String rangeKeyType) {
            return rangeKeyType(Output.of(rangeKeyType));
        }

        /**
         * @param rangeKeyValue The range key value.
         * 
         * @return builder
         * 
         */
        public Builder rangeKeyValue(@Nullable Output<String> rangeKeyValue) {
            $.rangeKeyValue = rangeKeyValue;
            return this;
        }

        /**
         * @param rangeKeyValue The range key value.
         * 
         * @return builder
         * 
         */
        public Builder rangeKeyValue(String rangeKeyValue) {
            return rangeKeyValue(Output.of(rangeKeyValue));
        }

        /**
         * @param roleArn The ARN of the IAM role that grants access to the DynamoDB table.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn The ARN of the IAM role that grants access to the DynamoDB table.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        /**
         * @param tableName The name of the DynamoDB table.
         * 
         * @return builder
         * 
         */
        public Builder tableName(Output<String> tableName) {
            $.tableName = tableName;
            return this;
        }

        /**
         * @param tableName The name of the DynamoDB table.
         * 
         * @return builder
         * 
         */
        public Builder tableName(String tableName) {
            return tableName(Output.of(tableName));
        }

        public TopicRuleErrorActionDynamodbArgs build() {
            if ($.hashKeyField == null) {
                throw new MissingRequiredPropertyException("TopicRuleErrorActionDynamodbArgs", "hashKeyField");
            }
            if ($.hashKeyValue == null) {
                throw new MissingRequiredPropertyException("TopicRuleErrorActionDynamodbArgs", "hashKeyValue");
            }
            if ($.roleArn == null) {
                throw new MissingRequiredPropertyException("TopicRuleErrorActionDynamodbArgs", "roleArn");
            }
            if ($.tableName == null) {
                throw new MissingRequiredPropertyException("TopicRuleErrorActionDynamodbArgs", "tableName");
            }
            return $;
        }
    }

}
