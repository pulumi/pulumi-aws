// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetServiceResult {
    private String dnsName;
    private String id;
    private String partition;
    private String region;
    private String reverseDnsName;
    private String reverseDnsPrefix;
    private String serviceId;
    /**
     * @return Whether the service is supported in the region&#39;s partition. New services may not be listed immediately as supported.
     * 
     */
    private Boolean supported;

    private GetServiceResult() {}
    public String dnsName() {
        return this.dnsName;
    }
    public String id() {
        return this.id;
    }
    public String partition() {
        return this.partition;
    }
    public String region() {
        return this.region;
    }
    public String reverseDnsName() {
        return this.reverseDnsName;
    }
    public String reverseDnsPrefix() {
        return this.reverseDnsPrefix;
    }
    public String serviceId() {
        return this.serviceId;
    }
    /**
     * @return Whether the service is supported in the region&#39;s partition. New services may not be listed immediately as supported.
     * 
     */
    public Boolean supported() {
        return this.supported;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String dnsName;
        private String id;
        private String partition;
        private String region;
        private String reverseDnsName;
        private String reverseDnsPrefix;
        private String serviceId;
        private Boolean supported;
        public Builder() {}
        public Builder(GetServiceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dnsName = defaults.dnsName;
    	      this.id = defaults.id;
    	      this.partition = defaults.partition;
    	      this.region = defaults.region;
    	      this.reverseDnsName = defaults.reverseDnsName;
    	      this.reverseDnsPrefix = defaults.reverseDnsPrefix;
    	      this.serviceId = defaults.serviceId;
    	      this.supported = defaults.supported;
        }

        @CustomType.Setter
        public Builder dnsName(String dnsName) {
            if (dnsName == null) {
              throw new MissingRequiredPropertyException("GetServiceResult", "dnsName");
            }
            this.dnsName = dnsName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetServiceResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder partition(String partition) {
            if (partition == null) {
              throw new MissingRequiredPropertyException("GetServiceResult", "partition");
            }
            this.partition = partition;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetServiceResult", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder reverseDnsName(String reverseDnsName) {
            if (reverseDnsName == null) {
              throw new MissingRequiredPropertyException("GetServiceResult", "reverseDnsName");
            }
            this.reverseDnsName = reverseDnsName;
            return this;
        }
        @CustomType.Setter
        public Builder reverseDnsPrefix(String reverseDnsPrefix) {
            if (reverseDnsPrefix == null) {
              throw new MissingRequiredPropertyException("GetServiceResult", "reverseDnsPrefix");
            }
            this.reverseDnsPrefix = reverseDnsPrefix;
            return this;
        }
        @CustomType.Setter
        public Builder serviceId(String serviceId) {
            if (serviceId == null) {
              throw new MissingRequiredPropertyException("GetServiceResult", "serviceId");
            }
            this.serviceId = serviceId;
            return this;
        }
        @CustomType.Setter
        public Builder supported(Boolean supported) {
            if (supported == null) {
              throw new MissingRequiredPropertyException("GetServiceResult", "supported");
            }
            this.supported = supported;
            return this;
        }
        public GetServiceResult build() {
            final var _resultValue = new GetServiceResult();
            _resultValue.dnsName = dnsName;
            _resultValue.id = id;
            _resultValue.partition = partition;
            _resultValue.region = region;
            _resultValue.reverseDnsName = reverseDnsName;
            _resultValue.reverseDnsPrefix = reverseDnsPrefix;
            _resultValue.serviceId = serviceId;
            _resultValue.supported = supported;
            return _resultValue;
        }
    }
}
