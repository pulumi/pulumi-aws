// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kendra.outputs;

import com.pulumi.aws.kendra.outputs.DataSourceCustomDocumentEnrichmentConfigurationInlineConfiguration;
import com.pulumi.aws.kendra.outputs.DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfiguration;
import com.pulumi.aws.kendra.outputs.DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DataSourceCustomDocumentEnrichmentConfiguration {
    /**
     * @return Configuration information to alter document attributes or metadata fields and content when ingesting documents into Amazon Kendra. Minimum number of `0` items. Maximum number of `100` items. Detailed below.
     * 
     */
    private @Nullable List<DataSourceCustomDocumentEnrichmentConfigurationInlineConfiguration> inlineConfigurations;
    /**
     * @return A block that specifies the configuration information for invoking a Lambda function in AWS Lambda on the structured documents with their metadata and text extracted. You can use a Lambda function to apply advanced logic for creating, modifying, or deleting document metadata and content. For more information, see [Advanced data manipulation](https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html#advanced-data-manipulation). Detailed below.
     * 
     */
    private @Nullable DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfiguration postExtractionHookConfiguration;
    /**
     * @return Configuration information for invoking a Lambda function in AWS Lambda on the original or raw documents before extracting their metadata and text. You can use a Lambda function to apply advanced logic for creating, modifying, or deleting document metadata and content. For more information, see [Advanced data manipulation](https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html#advanced-data-manipulation). Detailed below.
     * 
     */
    private @Nullable DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfiguration preExtractionHookConfiguration;
    /**
     * @return The Amazon Resource Name (ARN) of a role with permission to run `pre_extraction_hook_configuration` and `post_extraction_hook_configuration` for altering document metadata and content during the document ingestion process. For more information, see [IAM roles for Amazon Kendra](https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html).
     * 
     */
    private @Nullable String roleArn;

    private DataSourceCustomDocumentEnrichmentConfiguration() {}
    /**
     * @return Configuration information to alter document attributes or metadata fields and content when ingesting documents into Amazon Kendra. Minimum number of `0` items. Maximum number of `100` items. Detailed below.
     * 
     */
    public List<DataSourceCustomDocumentEnrichmentConfigurationInlineConfiguration> inlineConfigurations() {
        return this.inlineConfigurations == null ? List.of() : this.inlineConfigurations;
    }
    /**
     * @return A block that specifies the configuration information for invoking a Lambda function in AWS Lambda on the structured documents with their metadata and text extracted. You can use a Lambda function to apply advanced logic for creating, modifying, or deleting document metadata and content. For more information, see [Advanced data manipulation](https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html#advanced-data-manipulation). Detailed below.
     * 
     */
    public Optional<DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfiguration> postExtractionHookConfiguration() {
        return Optional.ofNullable(this.postExtractionHookConfiguration);
    }
    /**
     * @return Configuration information for invoking a Lambda function in AWS Lambda on the original or raw documents before extracting their metadata and text. You can use a Lambda function to apply advanced logic for creating, modifying, or deleting document metadata and content. For more information, see [Advanced data manipulation](https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html#advanced-data-manipulation). Detailed below.
     * 
     */
    public Optional<DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfiguration> preExtractionHookConfiguration() {
        return Optional.ofNullable(this.preExtractionHookConfiguration);
    }
    /**
     * @return The Amazon Resource Name (ARN) of a role with permission to run `pre_extraction_hook_configuration` and `post_extraction_hook_configuration` for altering document metadata and content during the document ingestion process. For more information, see [IAM roles for Amazon Kendra](https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html).
     * 
     */
    public Optional<String> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataSourceCustomDocumentEnrichmentConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<DataSourceCustomDocumentEnrichmentConfigurationInlineConfiguration> inlineConfigurations;
        private @Nullable DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfiguration postExtractionHookConfiguration;
        private @Nullable DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfiguration preExtractionHookConfiguration;
        private @Nullable String roleArn;
        public Builder() {}
        public Builder(DataSourceCustomDocumentEnrichmentConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.inlineConfigurations = defaults.inlineConfigurations;
    	      this.postExtractionHookConfiguration = defaults.postExtractionHookConfiguration;
    	      this.preExtractionHookConfiguration = defaults.preExtractionHookConfiguration;
    	      this.roleArn = defaults.roleArn;
        }

        @CustomType.Setter
        public Builder inlineConfigurations(@Nullable List<DataSourceCustomDocumentEnrichmentConfigurationInlineConfiguration> inlineConfigurations) {
            this.inlineConfigurations = inlineConfigurations;
            return this;
        }
        public Builder inlineConfigurations(DataSourceCustomDocumentEnrichmentConfigurationInlineConfiguration... inlineConfigurations) {
            return inlineConfigurations(List.of(inlineConfigurations));
        }
        @CustomType.Setter
        public Builder postExtractionHookConfiguration(@Nullable DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfiguration postExtractionHookConfiguration) {
            this.postExtractionHookConfiguration = postExtractionHookConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder preExtractionHookConfiguration(@Nullable DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfiguration preExtractionHookConfiguration) {
            this.preExtractionHookConfiguration = preExtractionHookConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder roleArn(@Nullable String roleArn) {
            this.roleArn = roleArn;
            return this;
        }
        public DataSourceCustomDocumentEnrichmentConfiguration build() {
            final var o = new DataSourceCustomDocumentEnrichmentConfiguration();
            o.inlineConfigurations = inlineConfigurations;
            o.postExtractionHookConfiguration = postExtractionHookConfiguration;
            o.preExtractionHookConfiguration = preExtractionHookConfiguration;
            o.roleArn = roleArn;
            return o;
        }
    }
}
