// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UserArgs extends com.pulumi.resources.ResourceArgs {

    public static final UserArgs Empty = new UserArgs();

    @Import(name="awsAccountId")
    private @Nullable Output<String> awsAccountId;

    public Optional<Output<String>> awsAccountId() {
        return Optional.ofNullable(this.awsAccountId);
    }

    @Import(name="email", required=true)
    private Output<String> email;

    public Output<String> email() {
        return this.email;
    }

    @Import(name="iamArn")
    private @Nullable Output<String> iamArn;

    public Optional<Output<String>> iamArn() {
        return Optional.ofNullable(this.iamArn);
    }

    @Import(name="identityType", required=true)
    private Output<String> identityType;

    public Output<String> identityType() {
        return this.identityType;
    }

    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    @Import(name="sessionName")
    private @Nullable Output<String> sessionName;

    public Optional<Output<String>> sessionName() {
        return Optional.ofNullable(this.sessionName);
    }

    @Import(name="userName")
    private @Nullable Output<String> userName;

    public Optional<Output<String>> userName() {
        return Optional.ofNullable(this.userName);
    }

    @Import(name="userRole", required=true)
    private Output<String> userRole;

    public Output<String> userRole() {
        return this.userRole;
    }

    private UserArgs() {}

    private UserArgs(UserArgs $) {
        this.awsAccountId = $.awsAccountId;
        this.email = $.email;
        this.iamArn = $.iamArn;
        this.identityType = $.identityType;
        this.namespace = $.namespace;
        this.sessionName = $.sessionName;
        this.userName = $.userName;
        this.userRole = $.userRole;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserArgs $;

        public Builder() {
            $ = new UserArgs();
        }

        public Builder(UserArgs defaults) {
            $ = new UserArgs(Objects.requireNonNull(defaults));
        }

        public Builder awsAccountId(@Nullable Output<String> awsAccountId) {
            $.awsAccountId = awsAccountId;
            return this;
        }

        public Builder awsAccountId(String awsAccountId) {
            return awsAccountId(Output.of(awsAccountId));
        }

        public Builder email(Output<String> email) {
            $.email = email;
            return this;
        }

        public Builder email(String email) {
            return email(Output.of(email));
        }

        public Builder iamArn(@Nullable Output<String> iamArn) {
            $.iamArn = iamArn;
            return this;
        }

        public Builder iamArn(String iamArn) {
            return iamArn(Output.of(iamArn));
        }

        public Builder identityType(Output<String> identityType) {
            $.identityType = identityType;
            return this;
        }

        public Builder identityType(String identityType) {
            return identityType(Output.of(identityType));
        }

        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        public Builder sessionName(@Nullable Output<String> sessionName) {
            $.sessionName = sessionName;
            return this;
        }

        public Builder sessionName(String sessionName) {
            return sessionName(Output.of(sessionName));
        }

        public Builder userName(@Nullable Output<String> userName) {
            $.userName = userName;
            return this;
        }

        public Builder userName(String userName) {
            return userName(Output.of(userName));
        }

        public Builder userRole(Output<String> userRole) {
            $.userRole = userRole;
            return this;
        }

        public Builder userRole(String userRole) {
            return userRole(Output.of(userRole));
        }

        public UserArgs build() {
            $.email = Objects.requireNonNull($.email, "expected parameter 'email' to be non-null");
            $.identityType = Objects.requireNonNull($.identityType, "expected parameter 'identityType' to be non-null");
            $.userRole = Objects.requireNonNull($.userRole, "expected parameter 'userRole' to be non-null");
            return $;
        }
    }

}
