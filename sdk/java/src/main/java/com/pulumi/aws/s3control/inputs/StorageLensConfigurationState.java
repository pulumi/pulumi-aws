// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3control.inputs;

import com.pulumi.aws.s3control.inputs.StorageLensConfigurationStorageLensConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StorageLensConfigurationState extends com.pulumi.resources.ResourceArgs {

    public static final StorageLensConfigurationState Empty = new StorageLensConfigurationState();

    /**
     * The account ID of the owner of the S3 Storage Lens metrics export bucket.
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return The account ID of the owner of the S3 Storage Lens metrics export bucket.
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * The Amazon Resource Name (ARN) of the bucket.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return The Amazon Resource Name (ARN) of the bucket.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * The ID of the S3 Storage Lens configuration.
     * 
     */
    @Import(name="configId")
    private @Nullable Output<String> configId;

    /**
     * @return The ID of the S3 Storage Lens configuration.
     * 
     */
    public Optional<Output<String>> configId() {
        return Optional.ofNullable(this.configId);
    }

    /**
     * The S3 Storage Lens configuration. See Storage Lens Configuration below for more details.
     * 
     */
    @Import(name="storageLensConfiguration")
    private @Nullable Output<StorageLensConfigurationStorageLensConfigurationArgs> storageLensConfiguration;

    /**
     * @return The S3 Storage Lens configuration. See Storage Lens Configuration below for more details.
     * 
     */
    public Optional<Output<StorageLensConfigurationStorageLensConfigurationArgs>> storageLensConfiguration() {
        return Optional.ofNullable(this.storageLensConfiguration);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private StorageLensConfigurationState() {}

    private StorageLensConfigurationState(StorageLensConfigurationState $) {
        this.accountId = $.accountId;
        this.arn = $.arn;
        this.configId = $.configId;
        this.storageLensConfiguration = $.storageLensConfiguration;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StorageLensConfigurationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StorageLensConfigurationState $;

        public Builder() {
            $ = new StorageLensConfigurationState();
        }

        public Builder(StorageLensConfigurationState defaults) {
            $ = new StorageLensConfigurationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId The account ID of the owner of the S3 Storage Lens metrics export bucket.
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId The account ID of the owner of the S3 Storage Lens metrics export bucket.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param arn The Amazon Resource Name (ARN) of the bucket.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn The Amazon Resource Name (ARN) of the bucket.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param configId The ID of the S3 Storage Lens configuration.
         * 
         * @return builder
         * 
         */
        public Builder configId(@Nullable Output<String> configId) {
            $.configId = configId;
            return this;
        }

        /**
         * @param configId The ID of the S3 Storage Lens configuration.
         * 
         * @return builder
         * 
         */
        public Builder configId(String configId) {
            return configId(Output.of(configId));
        }

        /**
         * @param storageLensConfiguration The S3 Storage Lens configuration. See Storage Lens Configuration below for more details.
         * 
         * @return builder
         * 
         */
        public Builder storageLensConfiguration(@Nullable Output<StorageLensConfigurationStorageLensConfigurationArgs> storageLensConfiguration) {
            $.storageLensConfiguration = storageLensConfiguration;
            return this;
        }

        /**
         * @param storageLensConfiguration The S3 Storage Lens configuration. See Storage Lens Configuration below for more details.
         * 
         * @return builder
         * 
         */
        public Builder storageLensConfiguration(StorageLensConfigurationStorageLensConfigurationArgs storageLensConfiguration) {
            return storageLensConfiguration(Output.of(storageLensConfiguration));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public StorageLensConfigurationState build() {
            return $;
        }
    }

}
