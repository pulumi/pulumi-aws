// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2transitgateway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectPeerArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectPeerArgs Empty = new ConnectPeerArgs();

    @Import(name="bgpAsn")
    private @Nullable Output<String> bgpAsn;

    public Optional<Output<String>> bgpAsn() {
        return Optional.ofNullable(this.bgpAsn);
    }

    @Import(name="insideCidrBlocks", required=true)
    private Output<List<String>> insideCidrBlocks;

    public Output<List<String>> insideCidrBlocks() {
        return this.insideCidrBlocks;
    }

    @Import(name="peerAddress", required=true)
    private Output<String> peerAddress;

    public Output<String> peerAddress() {
        return this.peerAddress;
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="transitGatewayAddress")
    private @Nullable Output<String> transitGatewayAddress;

    public Optional<Output<String>> transitGatewayAddress() {
        return Optional.ofNullable(this.transitGatewayAddress);
    }

    @Import(name="transitGatewayAttachmentId", required=true)
    private Output<String> transitGatewayAttachmentId;

    public Output<String> transitGatewayAttachmentId() {
        return this.transitGatewayAttachmentId;
    }

    private ConnectPeerArgs() {}

    private ConnectPeerArgs(ConnectPeerArgs $) {
        this.bgpAsn = $.bgpAsn;
        this.insideCidrBlocks = $.insideCidrBlocks;
        this.peerAddress = $.peerAddress;
        this.tags = $.tags;
        this.transitGatewayAddress = $.transitGatewayAddress;
        this.transitGatewayAttachmentId = $.transitGatewayAttachmentId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectPeerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectPeerArgs $;

        public Builder() {
            $ = new ConnectPeerArgs();
        }

        public Builder(ConnectPeerArgs defaults) {
            $ = new ConnectPeerArgs(Objects.requireNonNull(defaults));
        }

        public Builder bgpAsn(@Nullable Output<String> bgpAsn) {
            $.bgpAsn = bgpAsn;
            return this;
        }

        public Builder bgpAsn(String bgpAsn) {
            return bgpAsn(Output.of(bgpAsn));
        }

        public Builder insideCidrBlocks(Output<List<String>> insideCidrBlocks) {
            $.insideCidrBlocks = insideCidrBlocks;
            return this;
        }

        public Builder insideCidrBlocks(List<String> insideCidrBlocks) {
            return insideCidrBlocks(Output.of(insideCidrBlocks));
        }

        public Builder insideCidrBlocks(String... insideCidrBlocks) {
            return insideCidrBlocks(List.of(insideCidrBlocks));
        }

        public Builder peerAddress(Output<String> peerAddress) {
            $.peerAddress = peerAddress;
            return this;
        }

        public Builder peerAddress(String peerAddress) {
            return peerAddress(Output.of(peerAddress));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder transitGatewayAddress(@Nullable Output<String> transitGatewayAddress) {
            $.transitGatewayAddress = transitGatewayAddress;
            return this;
        }

        public Builder transitGatewayAddress(String transitGatewayAddress) {
            return transitGatewayAddress(Output.of(transitGatewayAddress));
        }

        public Builder transitGatewayAttachmentId(Output<String> transitGatewayAttachmentId) {
            $.transitGatewayAttachmentId = transitGatewayAttachmentId;
            return this;
        }

        public Builder transitGatewayAttachmentId(String transitGatewayAttachmentId) {
            return transitGatewayAttachmentId(Output.of(transitGatewayAttachmentId));
        }

        public ConnectPeerArgs build() {
            $.insideCidrBlocks = Objects.requireNonNull($.insideCidrBlocks, "expected parameter 'insideCidrBlocks' to be non-null");
            $.peerAddress = Objects.requireNonNull($.peerAddress, "expected parameter 'peerAddress' to be non-null");
            $.transitGatewayAttachmentId = Objects.requireNonNull($.transitGatewayAttachmentId, "expected parameter 'transitGatewayAttachmentId' to be non-null");
            return $;
        }
    }

}
