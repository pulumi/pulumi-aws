// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apigateway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResponseState extends com.pulumi.resources.ResourceArgs {

    public static final ResponseState Empty = new ResponseState();

    @Import(name="responseParameters")
    private @Nullable Output<Map<String,String>> responseParameters;

    public Optional<Output<Map<String,String>>> responseParameters() {
        return Optional.ofNullable(this.responseParameters);
    }

    @Import(name="responseTemplates")
    private @Nullable Output<Map<String,String>> responseTemplates;

    public Optional<Output<Map<String,String>>> responseTemplates() {
        return Optional.ofNullable(this.responseTemplates);
    }

    @Import(name="responseType")
    private @Nullable Output<String> responseType;

    public Optional<Output<String>> responseType() {
        return Optional.ofNullable(this.responseType);
    }

    @Import(name="restApiId")
    private @Nullable Output<String> restApiId;

    public Optional<Output<String>> restApiId() {
        return Optional.ofNullable(this.restApiId);
    }

    @Import(name="statusCode")
    private @Nullable Output<String> statusCode;

    public Optional<Output<String>> statusCode() {
        return Optional.ofNullable(this.statusCode);
    }

    private ResponseState() {}

    private ResponseState(ResponseState $) {
        this.responseParameters = $.responseParameters;
        this.responseTemplates = $.responseTemplates;
        this.responseType = $.responseType;
        this.restApiId = $.restApiId;
        this.statusCode = $.statusCode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResponseState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResponseState $;

        public Builder() {
            $ = new ResponseState();
        }

        public Builder(ResponseState defaults) {
            $ = new ResponseState(Objects.requireNonNull(defaults));
        }

        public Builder responseParameters(@Nullable Output<Map<String,String>> responseParameters) {
            $.responseParameters = responseParameters;
            return this;
        }

        public Builder responseParameters(Map<String,String> responseParameters) {
            return responseParameters(Output.of(responseParameters));
        }

        public Builder responseTemplates(@Nullable Output<Map<String,String>> responseTemplates) {
            $.responseTemplates = responseTemplates;
            return this;
        }

        public Builder responseTemplates(Map<String,String> responseTemplates) {
            return responseTemplates(Output.of(responseTemplates));
        }

        public Builder responseType(@Nullable Output<String> responseType) {
            $.responseType = responseType;
            return this;
        }

        public Builder responseType(String responseType) {
            return responseType(Output.of(responseType));
        }

        public Builder restApiId(@Nullable Output<String> restApiId) {
            $.restApiId = restApiId;
            return this;
        }

        public Builder restApiId(String restApiId) {
            return restApiId(Output.of(restApiId));
        }

        public Builder statusCode(@Nullable Output<String> statusCode) {
            $.statusCode = statusCode;
            return this;
        }

        public Builder statusCode(String statusCode) {
            return statusCode(Output.of(statusCode));
        }

        public ResponseState build() {
            return $;
        }
    }

}
