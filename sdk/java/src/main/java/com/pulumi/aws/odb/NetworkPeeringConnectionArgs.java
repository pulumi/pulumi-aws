// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.odb;

import com.pulumi.aws.odb.inputs.NetworkPeeringConnectionTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkPeeringConnectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkPeeringConnectionArgs Empty = new NetworkPeeringConnectionArgs();

    @Import(name="displayName", required=true)
    private Output<String> displayName;

    public Output<String> displayName() {
        return this.displayName;
    }

    @Import(name="odbNetworkId", required=true)
    private Output<String> odbNetworkId;

    public Output<String> odbNetworkId() {
        return this.odbNetworkId;
    }

    @Import(name="peerNetworkId", required=true)
    private Output<String> peerNetworkId;

    public Output<String> peerNetworkId() {
        return this.peerNetworkId;
    }

    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="timeouts")
    private @Nullable Output<NetworkPeeringConnectionTimeoutsArgs> timeouts;

    public Optional<Output<NetworkPeeringConnectionTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private NetworkPeeringConnectionArgs() {}

    private NetworkPeeringConnectionArgs(NetworkPeeringConnectionArgs $) {
        this.displayName = $.displayName;
        this.odbNetworkId = $.odbNetworkId;
        this.peerNetworkId = $.peerNetworkId;
        this.region = $.region;
        this.tags = $.tags;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkPeeringConnectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkPeeringConnectionArgs $;

        public Builder() {
            $ = new NetworkPeeringConnectionArgs();
        }

        public Builder(NetworkPeeringConnectionArgs defaults) {
            $ = new NetworkPeeringConnectionArgs(Objects.requireNonNull(defaults));
        }

        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder odbNetworkId(Output<String> odbNetworkId) {
            $.odbNetworkId = odbNetworkId;
            return this;
        }

        public Builder odbNetworkId(String odbNetworkId) {
            return odbNetworkId(Output.of(odbNetworkId));
        }

        public Builder peerNetworkId(Output<String> peerNetworkId) {
            $.peerNetworkId = peerNetworkId;
            return this;
        }

        public Builder peerNetworkId(String peerNetworkId) {
            return peerNetworkId(Output.of(peerNetworkId));
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param tags A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder timeouts(@Nullable Output<NetworkPeeringConnectionTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(NetworkPeeringConnectionTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public NetworkPeeringConnectionArgs build() {
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("NetworkPeeringConnectionArgs", "displayName");
            }
            if ($.odbNetworkId == null) {
                throw new MissingRequiredPropertyException("NetworkPeeringConnectionArgs", "odbNetworkId");
            }
            if ($.peerNetworkId == null) {
                throw new MissingRequiredPropertyException("NetworkPeeringConnectionArgs", "peerNetworkId");
            }
            return $;
        }
    }

}
