// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.acmpca.inputs;

import com.pulumi.aws.acmpca.inputs.CertificateAuthorityCertificateAuthorityConfigurationArgs;
import com.pulumi.aws.acmpca.inputs.CertificateAuthorityRevocationConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CertificateAuthorityState extends com.pulumi.resources.ResourceArgs {

    public static final CertificateAuthorityState Empty = new CertificateAuthorityState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="certificate")
    private @Nullable Output<String> certificate;

    public Optional<Output<String>> certificate() {
        return Optional.ofNullable(this.certificate);
    }

    @Import(name="certificateAuthorityConfiguration")
    private @Nullable Output<CertificateAuthorityCertificateAuthorityConfigurationArgs> certificateAuthorityConfiguration;

    public Optional<Output<CertificateAuthorityCertificateAuthorityConfigurationArgs>> certificateAuthorityConfiguration() {
        return Optional.ofNullable(this.certificateAuthorityConfiguration);
    }

    @Import(name="certificateChain")
    private @Nullable Output<String> certificateChain;

    public Optional<Output<String>> certificateChain() {
        return Optional.ofNullable(this.certificateChain);
    }

    @Import(name="certificateSigningRequest")
    private @Nullable Output<String> certificateSigningRequest;

    public Optional<Output<String>> certificateSigningRequest() {
        return Optional.ofNullable(this.certificateSigningRequest);
    }

    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    @Import(name="notAfter")
    private @Nullable Output<String> notAfter;

    public Optional<Output<String>> notAfter() {
        return Optional.ofNullable(this.notAfter);
    }

    @Import(name="notBefore")
    private @Nullable Output<String> notBefore;

    public Optional<Output<String>> notBefore() {
        return Optional.ofNullable(this.notBefore);
    }

    @Import(name="permanentDeletionTimeInDays")
    private @Nullable Output<Integer> permanentDeletionTimeInDays;

    public Optional<Output<Integer>> permanentDeletionTimeInDays() {
        return Optional.ofNullable(this.permanentDeletionTimeInDays);
    }

    @Import(name="revocationConfiguration")
    private @Nullable Output<CertificateAuthorityRevocationConfigurationArgs> revocationConfiguration;

    public Optional<Output<CertificateAuthorityRevocationConfigurationArgs>> revocationConfiguration() {
        return Optional.ofNullable(this.revocationConfiguration);
    }

    @Import(name="serial")
    private @Nullable Output<String> serial;

    public Optional<Output<String>> serial() {
        return Optional.ofNullable(this.serial);
    }

    /**
     * @deprecated
     * The reported value of the &#34;status&#34; attribute is often inaccurate. Use the resource&#39;s &#34;enabled&#34; attribute to explicitly set status.
     * 
     */
    @Deprecated /* The reported value of the ""status"" attribute is often inaccurate. Use the resource's ""enabled"" attribute to explicitly set status. */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @deprecated
     * The reported value of the &#34;status&#34; attribute is often inaccurate. Use the resource&#39;s &#34;enabled&#34; attribute to explicitly set status.
     * 
     */
    @Deprecated /* The reported value of the ""status"" attribute is often inaccurate. Use the resource's ""enabled"" attribute to explicitly set status. */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    @Import(name="usageMode")
    private @Nullable Output<String> usageMode;

    public Optional<Output<String>> usageMode() {
        return Optional.ofNullable(this.usageMode);
    }

    private CertificateAuthorityState() {}

    private CertificateAuthorityState(CertificateAuthorityState $) {
        this.arn = $.arn;
        this.certificate = $.certificate;
        this.certificateAuthorityConfiguration = $.certificateAuthorityConfiguration;
        this.certificateChain = $.certificateChain;
        this.certificateSigningRequest = $.certificateSigningRequest;
        this.enabled = $.enabled;
        this.notAfter = $.notAfter;
        this.notBefore = $.notBefore;
        this.permanentDeletionTimeInDays = $.permanentDeletionTimeInDays;
        this.revocationConfiguration = $.revocationConfiguration;
        this.serial = $.serial;
        this.status = $.status;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.type = $.type;
        this.usageMode = $.usageMode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CertificateAuthorityState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CertificateAuthorityState $;

        public Builder() {
            $ = new CertificateAuthorityState();
        }

        public Builder(CertificateAuthorityState defaults) {
            $ = new CertificateAuthorityState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder certificate(@Nullable Output<String> certificate) {
            $.certificate = certificate;
            return this;
        }

        public Builder certificate(String certificate) {
            return certificate(Output.of(certificate));
        }

        public Builder certificateAuthorityConfiguration(@Nullable Output<CertificateAuthorityCertificateAuthorityConfigurationArgs> certificateAuthorityConfiguration) {
            $.certificateAuthorityConfiguration = certificateAuthorityConfiguration;
            return this;
        }

        public Builder certificateAuthorityConfiguration(CertificateAuthorityCertificateAuthorityConfigurationArgs certificateAuthorityConfiguration) {
            return certificateAuthorityConfiguration(Output.of(certificateAuthorityConfiguration));
        }

        public Builder certificateChain(@Nullable Output<String> certificateChain) {
            $.certificateChain = certificateChain;
            return this;
        }

        public Builder certificateChain(String certificateChain) {
            return certificateChain(Output.of(certificateChain));
        }

        public Builder certificateSigningRequest(@Nullable Output<String> certificateSigningRequest) {
            $.certificateSigningRequest = certificateSigningRequest;
            return this;
        }

        public Builder certificateSigningRequest(String certificateSigningRequest) {
            return certificateSigningRequest(Output.of(certificateSigningRequest));
        }

        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder notAfter(@Nullable Output<String> notAfter) {
            $.notAfter = notAfter;
            return this;
        }

        public Builder notAfter(String notAfter) {
            return notAfter(Output.of(notAfter));
        }

        public Builder notBefore(@Nullable Output<String> notBefore) {
            $.notBefore = notBefore;
            return this;
        }

        public Builder notBefore(String notBefore) {
            return notBefore(Output.of(notBefore));
        }

        public Builder permanentDeletionTimeInDays(@Nullable Output<Integer> permanentDeletionTimeInDays) {
            $.permanentDeletionTimeInDays = permanentDeletionTimeInDays;
            return this;
        }

        public Builder permanentDeletionTimeInDays(Integer permanentDeletionTimeInDays) {
            return permanentDeletionTimeInDays(Output.of(permanentDeletionTimeInDays));
        }

        public Builder revocationConfiguration(@Nullable Output<CertificateAuthorityRevocationConfigurationArgs> revocationConfiguration) {
            $.revocationConfiguration = revocationConfiguration;
            return this;
        }

        public Builder revocationConfiguration(CertificateAuthorityRevocationConfigurationArgs revocationConfiguration) {
            return revocationConfiguration(Output.of(revocationConfiguration));
        }

        public Builder serial(@Nullable Output<String> serial) {
            $.serial = serial;
            return this;
        }

        public Builder serial(String serial) {
            return serial(Output.of(serial));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * The reported value of the &#34;status&#34; attribute is often inaccurate. Use the resource&#39;s &#34;enabled&#34; attribute to explicitly set status.
         * 
         */
        @Deprecated /* The reported value of the ""status"" attribute is often inaccurate. Use the resource's ""enabled"" attribute to explicitly set status. */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * The reported value of the &#34;status&#34; attribute is often inaccurate. Use the resource&#39;s &#34;enabled&#34; attribute to explicitly set status.
         * 
         */
        @Deprecated /* The reported value of the ""status"" attribute is often inaccurate. Use the resource's ""enabled"" attribute to explicitly set status. */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder usageMode(@Nullable Output<String> usageMode) {
            $.usageMode = usageMode;
            return this;
        }

        public Builder usageMode(String usageMode) {
            return usageMode(Output.of(usageMode));
        }

        public CertificateAuthorityState build() {
            return $;
        }
    }

}
