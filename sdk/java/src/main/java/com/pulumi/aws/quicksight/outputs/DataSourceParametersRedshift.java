// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DataSourceParametersRedshift {
    /**
     * @return The ID of the cluster to which to connect.
     * 
     */
    private @Nullable String clusterId;
    /**
     * @return The database to which to connect.
     * 
     */
    private String database;
    /**
     * @return The host to which to connect.
     * 
     */
    private @Nullable String host;
    /**
     * @return The port to which to connect.
     * 
     */
    private @Nullable Integer port;

    private DataSourceParametersRedshift() {}
    /**
     * @return The ID of the cluster to which to connect.
     * 
     */
    public Optional<String> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }
    /**
     * @return The database to which to connect.
     * 
     */
    public String database() {
        return this.database;
    }
    /**
     * @return The host to which to connect.
     * 
     */
    public Optional<String> host() {
        return Optional.ofNullable(this.host);
    }
    /**
     * @return The port to which to connect.
     * 
     */
    public Optional<Integer> port() {
        return Optional.ofNullable(this.port);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataSourceParametersRedshift defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String clusterId;
        private String database;
        private @Nullable String host;
        private @Nullable Integer port;
        public Builder() {}
        public Builder(DataSourceParametersRedshift defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterId = defaults.clusterId;
    	      this.database = defaults.database;
    	      this.host = defaults.host;
    	      this.port = defaults.port;
        }

        @CustomType.Setter
        public Builder clusterId(@Nullable String clusterId) {
            this.clusterId = clusterId;
            return this;
        }
        @CustomType.Setter
        public Builder database(String database) {
            this.database = Objects.requireNonNull(database);
            return this;
        }
        @CustomType.Setter
        public Builder host(@Nullable String host) {
            this.host = host;
            return this;
        }
        @CustomType.Setter
        public Builder port(@Nullable Integer port) {
            this.port = port;
            return this;
        }
        public DataSourceParametersRedshift build() {
            final var _resultValue = new DataSourceParametersRedshift();
            _resultValue.clusterId = clusterId;
            _resultValue.database = database;
            _resultValue.host = host;
            _resultValue.port = port;
            return _resultValue;
        }
    }
}
