// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lambda.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetFunctionLoggingConfig {
    /**
     * @return Detail level of the logs your application sends to CloudWatch when using supported logging libraries.
     * 
     */
    private String applicationLogLevel;
    /**
     * @return Format for your function&#39;s logs. Valid values: `Text`, `JSON`.
     * 
     */
    private String logFormat;
    /**
     * @return CloudWatch log group your function sends logs to.
     * 
     */
    private String logGroup;
    /**
     * @return Detail level of the Lambda platform event logs sent to CloudWatch.
     * 
     */
    private String systemLogLevel;

    private GetFunctionLoggingConfig() {}
    /**
     * @return Detail level of the logs your application sends to CloudWatch when using supported logging libraries.
     * 
     */
    public String applicationLogLevel() {
        return this.applicationLogLevel;
    }
    /**
     * @return Format for your function&#39;s logs. Valid values: `Text`, `JSON`.
     * 
     */
    public String logFormat() {
        return this.logFormat;
    }
    /**
     * @return CloudWatch log group your function sends logs to.
     * 
     */
    public String logGroup() {
        return this.logGroup;
    }
    /**
     * @return Detail level of the Lambda platform event logs sent to CloudWatch.
     * 
     */
    public String systemLogLevel() {
        return this.systemLogLevel;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFunctionLoggingConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String applicationLogLevel;
        private String logFormat;
        private String logGroup;
        private String systemLogLevel;
        public Builder() {}
        public Builder(GetFunctionLoggingConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationLogLevel = defaults.applicationLogLevel;
    	      this.logFormat = defaults.logFormat;
    	      this.logGroup = defaults.logGroup;
    	      this.systemLogLevel = defaults.systemLogLevel;
        }

        @CustomType.Setter
        public Builder applicationLogLevel(String applicationLogLevel) {
            if (applicationLogLevel == null) {
              throw new MissingRequiredPropertyException("GetFunctionLoggingConfig", "applicationLogLevel");
            }
            this.applicationLogLevel = applicationLogLevel;
            return this;
        }
        @CustomType.Setter
        public Builder logFormat(String logFormat) {
            if (logFormat == null) {
              throw new MissingRequiredPropertyException("GetFunctionLoggingConfig", "logFormat");
            }
            this.logFormat = logFormat;
            return this;
        }
        @CustomType.Setter
        public Builder logGroup(String logGroup) {
            if (logGroup == null) {
              throw new MissingRequiredPropertyException("GetFunctionLoggingConfig", "logGroup");
            }
            this.logGroup = logGroup;
            return this;
        }
        @CustomType.Setter
        public Builder systemLogLevel(String systemLogLevel) {
            if (systemLogLevel == null) {
              throw new MissingRequiredPropertyException("GetFunctionLoggingConfig", "systemLogLevel");
            }
            this.systemLogLevel = systemLogLevel;
            return this;
        }
        public GetFunctionLoggingConfig build() {
            final var _resultValue = new GetFunctionLoggingConfig();
            _resultValue.applicationLogLevel = applicationLogLevel;
            _resultValue.logFormat = logFormat;
            _resultValue.logGroup = logGroup;
            _resultValue.systemLogLevel = systemLogLevel;
            return _resultValue;
        }
    }
}
