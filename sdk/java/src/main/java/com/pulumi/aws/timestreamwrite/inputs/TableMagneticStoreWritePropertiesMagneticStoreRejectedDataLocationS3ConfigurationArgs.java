// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.timestreamwrite.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TableMagneticStoreWritePropertiesMagneticStoreRejectedDataLocationS3ConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final TableMagneticStoreWritePropertiesMagneticStoreRejectedDataLocationS3ConfigurationArgs Empty = new TableMagneticStoreWritePropertiesMagneticStoreRejectedDataLocationS3ConfigurationArgs();

    @Import(name="bucketName")
    private @Nullable Output<String> bucketName;

    public Optional<Output<String>> bucketName() {
        return Optional.ofNullable(this.bucketName);
    }

    @Import(name="encryptionOption")
    private @Nullable Output<String> encryptionOption;

    public Optional<Output<String>> encryptionOption() {
        return Optional.ofNullable(this.encryptionOption);
    }

    @Import(name="kmsKeyId")
    private @Nullable Output<String> kmsKeyId;

    public Optional<Output<String>> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }

    @Import(name="objectKeyPrefix")
    private @Nullable Output<String> objectKeyPrefix;

    public Optional<Output<String>> objectKeyPrefix() {
        return Optional.ofNullable(this.objectKeyPrefix);
    }

    private TableMagneticStoreWritePropertiesMagneticStoreRejectedDataLocationS3ConfigurationArgs() {}

    private TableMagneticStoreWritePropertiesMagneticStoreRejectedDataLocationS3ConfigurationArgs(TableMagneticStoreWritePropertiesMagneticStoreRejectedDataLocationS3ConfigurationArgs $) {
        this.bucketName = $.bucketName;
        this.encryptionOption = $.encryptionOption;
        this.kmsKeyId = $.kmsKeyId;
        this.objectKeyPrefix = $.objectKeyPrefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TableMagneticStoreWritePropertiesMagneticStoreRejectedDataLocationS3ConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TableMagneticStoreWritePropertiesMagneticStoreRejectedDataLocationS3ConfigurationArgs $;

        public Builder() {
            $ = new TableMagneticStoreWritePropertiesMagneticStoreRejectedDataLocationS3ConfigurationArgs();
        }

        public Builder(TableMagneticStoreWritePropertiesMagneticStoreRejectedDataLocationS3ConfigurationArgs defaults) {
            $ = new TableMagneticStoreWritePropertiesMagneticStoreRejectedDataLocationS3ConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder bucketName(@Nullable Output<String> bucketName) {
            $.bucketName = bucketName;
            return this;
        }

        public Builder bucketName(String bucketName) {
            return bucketName(Output.of(bucketName));
        }

        public Builder encryptionOption(@Nullable Output<String> encryptionOption) {
            $.encryptionOption = encryptionOption;
            return this;
        }

        public Builder encryptionOption(String encryptionOption) {
            return encryptionOption(Output.of(encryptionOption));
        }

        public Builder kmsKeyId(@Nullable Output<String> kmsKeyId) {
            $.kmsKeyId = kmsKeyId;
            return this;
        }

        public Builder kmsKeyId(String kmsKeyId) {
            return kmsKeyId(Output.of(kmsKeyId));
        }

        public Builder objectKeyPrefix(@Nullable Output<String> objectKeyPrefix) {
            $.objectKeyPrefix = objectKeyPrefix;
            return this;
        }

        public Builder objectKeyPrefix(String objectKeyPrefix) {
            return objectKeyPrefix(Output.of(objectKeyPrefix));
        }

        public TableMagneticStoreWritePropertiesMagneticStoreRejectedDataLocationS3ConfigurationArgs build() {
            return $;
        }
    }

}
