// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.datasync.inputs;

import com.pulumi.aws.datasync.inputs.LocationFsxOntapFileSystemProtocolSmbMountOptionsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LocationFsxOntapFileSystemProtocolSmbArgs extends com.pulumi.resources.ResourceArgs {

    public static final LocationFsxOntapFileSystemProtocolSmbArgs Empty = new LocationFsxOntapFileSystemProtocolSmbArgs();

    /**
     * Fully qualified domain name of the Microsoft Active Directory (AD) that your storage virtual machine belongs to.
     * 
     */
    @Import(name="domain")
    private @Nullable Output<String> domain;

    /**
     * @return Fully qualified domain name of the Microsoft Active Directory (AD) that your storage virtual machine belongs to.
     * 
     */
    public Optional<Output<String>> domain() {
        return Optional.ofNullable(this.domain);
    }

    /**
     * Mount options that are available for DataSync to access an SMB location. See SMB Mount Options below.
     * 
     */
    @Import(name="mountOptions", required=true)
    private Output<LocationFsxOntapFileSystemProtocolSmbMountOptionsArgs> mountOptions;

    /**
     * @return Mount options that are available for DataSync to access an SMB location. See SMB Mount Options below.
     * 
     */
    public Output<LocationFsxOntapFileSystemProtocolSmbMountOptionsArgs> mountOptions() {
        return this.mountOptions;
    }

    /**
     * Password of a user who has permission to access your SVM.
     * 
     */
    @Import(name="password", required=true)
    private Output<String> password;

    /**
     * @return Password of a user who has permission to access your SVM.
     * 
     */
    public Output<String> password() {
        return this.password;
    }

    /**
     * Username that can mount the location and access the files, folders, and metadata that you need in the SVM.
     * 
     */
    @Import(name="user", required=true)
    private Output<String> user;

    /**
     * @return Username that can mount the location and access the files, folders, and metadata that you need in the SVM.
     * 
     */
    public Output<String> user() {
        return this.user;
    }

    private LocationFsxOntapFileSystemProtocolSmbArgs() {}

    private LocationFsxOntapFileSystemProtocolSmbArgs(LocationFsxOntapFileSystemProtocolSmbArgs $) {
        this.domain = $.domain;
        this.mountOptions = $.mountOptions;
        this.password = $.password;
        this.user = $.user;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LocationFsxOntapFileSystemProtocolSmbArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LocationFsxOntapFileSystemProtocolSmbArgs $;

        public Builder() {
            $ = new LocationFsxOntapFileSystemProtocolSmbArgs();
        }

        public Builder(LocationFsxOntapFileSystemProtocolSmbArgs defaults) {
            $ = new LocationFsxOntapFileSystemProtocolSmbArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param domain Fully qualified domain name of the Microsoft Active Directory (AD) that your storage virtual machine belongs to.
         * 
         * @return builder
         * 
         */
        public Builder domain(@Nullable Output<String> domain) {
            $.domain = domain;
            return this;
        }

        /**
         * @param domain Fully qualified domain name of the Microsoft Active Directory (AD) that your storage virtual machine belongs to.
         * 
         * @return builder
         * 
         */
        public Builder domain(String domain) {
            return domain(Output.of(domain));
        }

        /**
         * @param mountOptions Mount options that are available for DataSync to access an SMB location. See SMB Mount Options below.
         * 
         * @return builder
         * 
         */
        public Builder mountOptions(Output<LocationFsxOntapFileSystemProtocolSmbMountOptionsArgs> mountOptions) {
            $.mountOptions = mountOptions;
            return this;
        }

        /**
         * @param mountOptions Mount options that are available for DataSync to access an SMB location. See SMB Mount Options below.
         * 
         * @return builder
         * 
         */
        public Builder mountOptions(LocationFsxOntapFileSystemProtocolSmbMountOptionsArgs mountOptions) {
            return mountOptions(Output.of(mountOptions));
        }

        /**
         * @param password Password of a user who has permission to access your SVM.
         * 
         * @return builder
         * 
         */
        public Builder password(Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password Password of a user who has permission to access your SVM.
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param user Username that can mount the location and access the files, folders, and metadata that you need in the SVM.
         * 
         * @return builder
         * 
         */
        public Builder user(Output<String> user) {
            $.user = user;
            return this;
        }

        /**
         * @param user Username that can mount the location and access the files, folders, and metadata that you need in the SVM.
         * 
         * @return builder
         * 
         */
        public Builder user(String user) {
            return user(Output.of(user));
        }

        public LocationFsxOntapFileSystemProtocolSmbArgs build() {
            if ($.mountOptions == null) {
                throw new MissingRequiredPropertyException("LocationFsxOntapFileSystemProtocolSmbArgs", "mountOptions");
            }
            if ($.password == null) {
                throw new MissingRequiredPropertyException("LocationFsxOntapFileSystemProtocolSmbArgs", "password");
            }
            if ($.user == null) {
                throw new MissingRequiredPropertyException("LocationFsxOntapFileSystemProtocolSmbArgs", "user");
            }
            return $;
        }
    }

}
