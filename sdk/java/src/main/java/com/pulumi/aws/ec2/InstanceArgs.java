// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2;

import com.pulumi.aws.ec2.enums.InstanceType;
import com.pulumi.aws.ec2.enums.Tenancy;
import com.pulumi.aws.ec2.inputs.InstanceCapacityReservationSpecificationArgs;
import com.pulumi.aws.ec2.inputs.InstanceCreditSpecificationArgs;
import com.pulumi.aws.ec2.inputs.InstanceEbsBlockDeviceArgs;
import com.pulumi.aws.ec2.inputs.InstanceEnclaveOptionsArgs;
import com.pulumi.aws.ec2.inputs.InstanceEphemeralBlockDeviceArgs;
import com.pulumi.aws.ec2.inputs.InstanceLaunchTemplateArgs;
import com.pulumi.aws.ec2.inputs.InstanceMaintenanceOptionsArgs;
import com.pulumi.aws.ec2.inputs.InstanceMetadataOptionsArgs;
import com.pulumi.aws.ec2.inputs.InstanceNetworkInterfaceArgs;
import com.pulumi.aws.ec2.inputs.InstancePrivateDnsNameOptionsArgs;
import com.pulumi.aws.ec2.inputs.InstanceRootBlockDeviceArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceArgs Empty = new InstanceArgs();

    @Import(name="ami")
    private @Nullable Output<String> ami;

    public Optional<Output<String>> ami() {
        return Optional.ofNullable(this.ami);
    }

    @Import(name="associatePublicIpAddress")
    private @Nullable Output<Boolean> associatePublicIpAddress;

    public Optional<Output<Boolean>> associatePublicIpAddress() {
        return Optional.ofNullable(this.associatePublicIpAddress);
    }

    @Import(name="availabilityZone")
    private @Nullable Output<String> availabilityZone;

    public Optional<Output<String>> availabilityZone() {
        return Optional.ofNullable(this.availabilityZone);
    }

    @Import(name="capacityReservationSpecification")
    private @Nullable Output<InstanceCapacityReservationSpecificationArgs> capacityReservationSpecification;

    public Optional<Output<InstanceCapacityReservationSpecificationArgs>> capacityReservationSpecification() {
        return Optional.ofNullable(this.capacityReservationSpecification);
    }

    @Import(name="cpuCoreCount")
    private @Nullable Output<Integer> cpuCoreCount;

    public Optional<Output<Integer>> cpuCoreCount() {
        return Optional.ofNullable(this.cpuCoreCount);
    }

    @Import(name="cpuThreadsPerCore")
    private @Nullable Output<Integer> cpuThreadsPerCore;

    public Optional<Output<Integer>> cpuThreadsPerCore() {
        return Optional.ofNullable(this.cpuThreadsPerCore);
    }

    @Import(name="creditSpecification")
    private @Nullable Output<InstanceCreditSpecificationArgs> creditSpecification;

    public Optional<Output<InstanceCreditSpecificationArgs>> creditSpecification() {
        return Optional.ofNullable(this.creditSpecification);
    }

    @Import(name="disableApiStop")
    private @Nullable Output<Boolean> disableApiStop;

    public Optional<Output<Boolean>> disableApiStop() {
        return Optional.ofNullable(this.disableApiStop);
    }

    @Import(name="disableApiTermination")
    private @Nullable Output<Boolean> disableApiTermination;

    public Optional<Output<Boolean>> disableApiTermination() {
        return Optional.ofNullable(this.disableApiTermination);
    }

    @Import(name="ebsBlockDevices")
    private @Nullable Output<List<InstanceEbsBlockDeviceArgs>> ebsBlockDevices;

    public Optional<Output<List<InstanceEbsBlockDeviceArgs>>> ebsBlockDevices() {
        return Optional.ofNullable(this.ebsBlockDevices);
    }

    @Import(name="ebsOptimized")
    private @Nullable Output<Boolean> ebsOptimized;

    public Optional<Output<Boolean>> ebsOptimized() {
        return Optional.ofNullable(this.ebsOptimized);
    }

    @Import(name="enclaveOptions")
    private @Nullable Output<InstanceEnclaveOptionsArgs> enclaveOptions;

    public Optional<Output<InstanceEnclaveOptionsArgs>> enclaveOptions() {
        return Optional.ofNullable(this.enclaveOptions);
    }

    @Import(name="ephemeralBlockDevices")
    private @Nullable Output<List<InstanceEphemeralBlockDeviceArgs>> ephemeralBlockDevices;

    public Optional<Output<List<InstanceEphemeralBlockDeviceArgs>>> ephemeralBlockDevices() {
        return Optional.ofNullable(this.ephemeralBlockDevices);
    }

    @Import(name="getPasswordData")
    private @Nullable Output<Boolean> getPasswordData;

    public Optional<Output<Boolean>> getPasswordData() {
        return Optional.ofNullable(this.getPasswordData);
    }

    @Import(name="hibernation")
    private @Nullable Output<Boolean> hibernation;

    public Optional<Output<Boolean>> hibernation() {
        return Optional.ofNullable(this.hibernation);
    }

    @Import(name="hostId")
    private @Nullable Output<String> hostId;

    public Optional<Output<String>> hostId() {
        return Optional.ofNullable(this.hostId);
    }

    @Import(name="hostResourceGroupArn")
    private @Nullable Output<String> hostResourceGroupArn;

    public Optional<Output<String>> hostResourceGroupArn() {
        return Optional.ofNullable(this.hostResourceGroupArn);
    }

    @Import(name="iamInstanceProfile")
    private @Nullable Output<String> iamInstanceProfile;

    public Optional<Output<String>> iamInstanceProfile() {
        return Optional.ofNullable(this.iamInstanceProfile);
    }

    @Import(name="instanceInitiatedShutdownBehavior")
    private @Nullable Output<String> instanceInitiatedShutdownBehavior;

    public Optional<Output<String>> instanceInitiatedShutdownBehavior() {
        return Optional.ofNullable(this.instanceInitiatedShutdownBehavior);
    }

    @Import(name="instanceType")
    private @Nullable Output<Either<String,InstanceType>> instanceType;

    public Optional<Output<Either<String,InstanceType>>> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    @Import(name="ipv6AddressCount")
    private @Nullable Output<Integer> ipv6AddressCount;

    public Optional<Output<Integer>> ipv6AddressCount() {
        return Optional.ofNullable(this.ipv6AddressCount);
    }

    @Import(name="ipv6Addresses")
    private @Nullable Output<List<String>> ipv6Addresses;

    public Optional<Output<List<String>>> ipv6Addresses() {
        return Optional.ofNullable(this.ipv6Addresses);
    }

    @Import(name="keyName")
    private @Nullable Output<String> keyName;

    public Optional<Output<String>> keyName() {
        return Optional.ofNullable(this.keyName);
    }

    @Import(name="launchTemplate")
    private @Nullable Output<InstanceLaunchTemplateArgs> launchTemplate;

    public Optional<Output<InstanceLaunchTemplateArgs>> launchTemplate() {
        return Optional.ofNullable(this.launchTemplate);
    }

    @Import(name="maintenanceOptions")
    private @Nullable Output<InstanceMaintenanceOptionsArgs> maintenanceOptions;

    public Optional<Output<InstanceMaintenanceOptionsArgs>> maintenanceOptions() {
        return Optional.ofNullable(this.maintenanceOptions);
    }

    @Import(name="metadataOptions")
    private @Nullable Output<InstanceMetadataOptionsArgs> metadataOptions;

    public Optional<Output<InstanceMetadataOptionsArgs>> metadataOptions() {
        return Optional.ofNullable(this.metadataOptions);
    }

    @Import(name="monitoring")
    private @Nullable Output<Boolean> monitoring;

    public Optional<Output<Boolean>> monitoring() {
        return Optional.ofNullable(this.monitoring);
    }

    @Import(name="networkInterfaces")
    private @Nullable Output<List<InstanceNetworkInterfaceArgs>> networkInterfaces;

    public Optional<Output<List<InstanceNetworkInterfaceArgs>>> networkInterfaces() {
        return Optional.ofNullable(this.networkInterfaces);
    }

    @Import(name="placementGroup")
    private @Nullable Output<String> placementGroup;

    public Optional<Output<String>> placementGroup() {
        return Optional.ofNullable(this.placementGroup);
    }

    @Import(name="placementPartitionNumber")
    private @Nullable Output<Integer> placementPartitionNumber;

    public Optional<Output<Integer>> placementPartitionNumber() {
        return Optional.ofNullable(this.placementPartitionNumber);
    }

    @Import(name="privateDnsNameOptions")
    private @Nullable Output<InstancePrivateDnsNameOptionsArgs> privateDnsNameOptions;

    public Optional<Output<InstancePrivateDnsNameOptionsArgs>> privateDnsNameOptions() {
        return Optional.ofNullable(this.privateDnsNameOptions);
    }

    @Import(name="privateIp")
    private @Nullable Output<String> privateIp;

    public Optional<Output<String>> privateIp() {
        return Optional.ofNullable(this.privateIp);
    }

    @Import(name="rootBlockDevice")
    private @Nullable Output<InstanceRootBlockDeviceArgs> rootBlockDevice;

    public Optional<Output<InstanceRootBlockDeviceArgs>> rootBlockDevice() {
        return Optional.ofNullable(this.rootBlockDevice);
    }

    @Import(name="secondaryPrivateIps")
    private @Nullable Output<List<String>> secondaryPrivateIps;

    public Optional<Output<List<String>>> secondaryPrivateIps() {
        return Optional.ofNullable(this.secondaryPrivateIps);
    }

    /**
     * @deprecated
     * Use of `securityGroups` is discouraged as it does not allow for changes and will force your instance to be replaced if changes are made. To avoid this, use `vpcSecurityGroupIds` which allows for updates.
     * 
     */
    @Deprecated /* Use of `securityGroups` is discouraged as it does not allow for changes and will force your instance to be replaced if changes are made. To avoid this, use `vpcSecurityGroupIds` which allows for updates. */
    @Import(name="securityGroups")
    private @Nullable Output<List<String>> securityGroups;

    /**
     * @deprecated
     * Use of `securityGroups` is discouraged as it does not allow for changes and will force your instance to be replaced if changes are made. To avoid this, use `vpcSecurityGroupIds` which allows for updates.
     * 
     */
    @Deprecated /* Use of `securityGroups` is discouraged as it does not allow for changes and will force your instance to be replaced if changes are made. To avoid this, use `vpcSecurityGroupIds` which allows for updates. */
    public Optional<Output<List<String>>> securityGroups() {
        return Optional.ofNullable(this.securityGroups);
    }

    @Import(name="sourceDestCheck")
    private @Nullable Output<Boolean> sourceDestCheck;

    public Optional<Output<Boolean>> sourceDestCheck() {
        return Optional.ofNullable(this.sourceDestCheck);
    }

    @Import(name="subnetId")
    private @Nullable Output<String> subnetId;

    public Optional<Output<String>> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tenancy")
    private @Nullable Output<Either<String,Tenancy>> tenancy;

    public Optional<Output<Either<String,Tenancy>>> tenancy() {
        return Optional.ofNullable(this.tenancy);
    }

    @Import(name="userData")
    private @Nullable Output<String> userData;

    public Optional<Output<String>> userData() {
        return Optional.ofNullable(this.userData);
    }

    @Import(name="userDataBase64")
    private @Nullable Output<String> userDataBase64;

    public Optional<Output<String>> userDataBase64() {
        return Optional.ofNullable(this.userDataBase64);
    }

    @Import(name="userDataReplaceOnChange")
    private @Nullable Output<Boolean> userDataReplaceOnChange;

    public Optional<Output<Boolean>> userDataReplaceOnChange() {
        return Optional.ofNullable(this.userDataReplaceOnChange);
    }

    @Import(name="volumeTags")
    private @Nullable Output<Map<String,String>> volumeTags;

    public Optional<Output<Map<String,String>>> volumeTags() {
        return Optional.ofNullable(this.volumeTags);
    }

    @Import(name="vpcSecurityGroupIds")
    private @Nullable Output<List<String>> vpcSecurityGroupIds;

    public Optional<Output<List<String>>> vpcSecurityGroupIds() {
        return Optional.ofNullable(this.vpcSecurityGroupIds);
    }

    private InstanceArgs() {}

    private InstanceArgs(InstanceArgs $) {
        this.ami = $.ami;
        this.associatePublicIpAddress = $.associatePublicIpAddress;
        this.availabilityZone = $.availabilityZone;
        this.capacityReservationSpecification = $.capacityReservationSpecification;
        this.cpuCoreCount = $.cpuCoreCount;
        this.cpuThreadsPerCore = $.cpuThreadsPerCore;
        this.creditSpecification = $.creditSpecification;
        this.disableApiStop = $.disableApiStop;
        this.disableApiTermination = $.disableApiTermination;
        this.ebsBlockDevices = $.ebsBlockDevices;
        this.ebsOptimized = $.ebsOptimized;
        this.enclaveOptions = $.enclaveOptions;
        this.ephemeralBlockDevices = $.ephemeralBlockDevices;
        this.getPasswordData = $.getPasswordData;
        this.hibernation = $.hibernation;
        this.hostId = $.hostId;
        this.hostResourceGroupArn = $.hostResourceGroupArn;
        this.iamInstanceProfile = $.iamInstanceProfile;
        this.instanceInitiatedShutdownBehavior = $.instanceInitiatedShutdownBehavior;
        this.instanceType = $.instanceType;
        this.ipv6AddressCount = $.ipv6AddressCount;
        this.ipv6Addresses = $.ipv6Addresses;
        this.keyName = $.keyName;
        this.launchTemplate = $.launchTemplate;
        this.maintenanceOptions = $.maintenanceOptions;
        this.metadataOptions = $.metadataOptions;
        this.monitoring = $.monitoring;
        this.networkInterfaces = $.networkInterfaces;
        this.placementGroup = $.placementGroup;
        this.placementPartitionNumber = $.placementPartitionNumber;
        this.privateDnsNameOptions = $.privateDnsNameOptions;
        this.privateIp = $.privateIp;
        this.rootBlockDevice = $.rootBlockDevice;
        this.secondaryPrivateIps = $.secondaryPrivateIps;
        this.securityGroups = $.securityGroups;
        this.sourceDestCheck = $.sourceDestCheck;
        this.subnetId = $.subnetId;
        this.tags = $.tags;
        this.tenancy = $.tenancy;
        this.userData = $.userData;
        this.userDataBase64 = $.userDataBase64;
        this.userDataReplaceOnChange = $.userDataReplaceOnChange;
        this.volumeTags = $.volumeTags;
        this.vpcSecurityGroupIds = $.vpcSecurityGroupIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceArgs $;

        public Builder() {
            $ = new InstanceArgs();
        }

        public Builder(InstanceArgs defaults) {
            $ = new InstanceArgs(Objects.requireNonNull(defaults));
        }

        public Builder ami(@Nullable Output<String> ami) {
            $.ami = ami;
            return this;
        }

        public Builder ami(String ami) {
            return ami(Output.of(ami));
        }

        public Builder associatePublicIpAddress(@Nullable Output<Boolean> associatePublicIpAddress) {
            $.associatePublicIpAddress = associatePublicIpAddress;
            return this;
        }

        public Builder associatePublicIpAddress(Boolean associatePublicIpAddress) {
            return associatePublicIpAddress(Output.of(associatePublicIpAddress));
        }

        public Builder availabilityZone(@Nullable Output<String> availabilityZone) {
            $.availabilityZone = availabilityZone;
            return this;
        }

        public Builder availabilityZone(String availabilityZone) {
            return availabilityZone(Output.of(availabilityZone));
        }

        public Builder capacityReservationSpecification(@Nullable Output<InstanceCapacityReservationSpecificationArgs> capacityReservationSpecification) {
            $.capacityReservationSpecification = capacityReservationSpecification;
            return this;
        }

        public Builder capacityReservationSpecification(InstanceCapacityReservationSpecificationArgs capacityReservationSpecification) {
            return capacityReservationSpecification(Output.of(capacityReservationSpecification));
        }

        public Builder cpuCoreCount(@Nullable Output<Integer> cpuCoreCount) {
            $.cpuCoreCount = cpuCoreCount;
            return this;
        }

        public Builder cpuCoreCount(Integer cpuCoreCount) {
            return cpuCoreCount(Output.of(cpuCoreCount));
        }

        public Builder cpuThreadsPerCore(@Nullable Output<Integer> cpuThreadsPerCore) {
            $.cpuThreadsPerCore = cpuThreadsPerCore;
            return this;
        }

        public Builder cpuThreadsPerCore(Integer cpuThreadsPerCore) {
            return cpuThreadsPerCore(Output.of(cpuThreadsPerCore));
        }

        public Builder creditSpecification(@Nullable Output<InstanceCreditSpecificationArgs> creditSpecification) {
            $.creditSpecification = creditSpecification;
            return this;
        }

        public Builder creditSpecification(InstanceCreditSpecificationArgs creditSpecification) {
            return creditSpecification(Output.of(creditSpecification));
        }

        public Builder disableApiStop(@Nullable Output<Boolean> disableApiStop) {
            $.disableApiStop = disableApiStop;
            return this;
        }

        public Builder disableApiStop(Boolean disableApiStop) {
            return disableApiStop(Output.of(disableApiStop));
        }

        public Builder disableApiTermination(@Nullable Output<Boolean> disableApiTermination) {
            $.disableApiTermination = disableApiTermination;
            return this;
        }

        public Builder disableApiTermination(Boolean disableApiTermination) {
            return disableApiTermination(Output.of(disableApiTermination));
        }

        public Builder ebsBlockDevices(@Nullable Output<List<InstanceEbsBlockDeviceArgs>> ebsBlockDevices) {
            $.ebsBlockDevices = ebsBlockDevices;
            return this;
        }

        public Builder ebsBlockDevices(List<InstanceEbsBlockDeviceArgs> ebsBlockDevices) {
            return ebsBlockDevices(Output.of(ebsBlockDevices));
        }

        public Builder ebsBlockDevices(InstanceEbsBlockDeviceArgs... ebsBlockDevices) {
            return ebsBlockDevices(List.of(ebsBlockDevices));
        }

        public Builder ebsOptimized(@Nullable Output<Boolean> ebsOptimized) {
            $.ebsOptimized = ebsOptimized;
            return this;
        }

        public Builder ebsOptimized(Boolean ebsOptimized) {
            return ebsOptimized(Output.of(ebsOptimized));
        }

        public Builder enclaveOptions(@Nullable Output<InstanceEnclaveOptionsArgs> enclaveOptions) {
            $.enclaveOptions = enclaveOptions;
            return this;
        }

        public Builder enclaveOptions(InstanceEnclaveOptionsArgs enclaveOptions) {
            return enclaveOptions(Output.of(enclaveOptions));
        }

        public Builder ephemeralBlockDevices(@Nullable Output<List<InstanceEphemeralBlockDeviceArgs>> ephemeralBlockDevices) {
            $.ephemeralBlockDevices = ephemeralBlockDevices;
            return this;
        }

        public Builder ephemeralBlockDevices(List<InstanceEphemeralBlockDeviceArgs> ephemeralBlockDevices) {
            return ephemeralBlockDevices(Output.of(ephemeralBlockDevices));
        }

        public Builder ephemeralBlockDevices(InstanceEphemeralBlockDeviceArgs... ephemeralBlockDevices) {
            return ephemeralBlockDevices(List.of(ephemeralBlockDevices));
        }

        public Builder getPasswordData(@Nullable Output<Boolean> getPasswordData) {
            $.getPasswordData = getPasswordData;
            return this;
        }

        public Builder getPasswordData(Boolean getPasswordData) {
            return getPasswordData(Output.of(getPasswordData));
        }

        public Builder hibernation(@Nullable Output<Boolean> hibernation) {
            $.hibernation = hibernation;
            return this;
        }

        public Builder hibernation(Boolean hibernation) {
            return hibernation(Output.of(hibernation));
        }

        public Builder hostId(@Nullable Output<String> hostId) {
            $.hostId = hostId;
            return this;
        }

        public Builder hostId(String hostId) {
            return hostId(Output.of(hostId));
        }

        public Builder hostResourceGroupArn(@Nullable Output<String> hostResourceGroupArn) {
            $.hostResourceGroupArn = hostResourceGroupArn;
            return this;
        }

        public Builder hostResourceGroupArn(String hostResourceGroupArn) {
            return hostResourceGroupArn(Output.of(hostResourceGroupArn));
        }

        public Builder iamInstanceProfile(@Nullable Output<String> iamInstanceProfile) {
            $.iamInstanceProfile = iamInstanceProfile;
            return this;
        }

        public Builder iamInstanceProfile(String iamInstanceProfile) {
            return iamInstanceProfile(Output.of(iamInstanceProfile));
        }

        public Builder instanceInitiatedShutdownBehavior(@Nullable Output<String> instanceInitiatedShutdownBehavior) {
            $.instanceInitiatedShutdownBehavior = instanceInitiatedShutdownBehavior;
            return this;
        }

        public Builder instanceInitiatedShutdownBehavior(String instanceInitiatedShutdownBehavior) {
            return instanceInitiatedShutdownBehavior(Output.of(instanceInitiatedShutdownBehavior));
        }

        public Builder instanceType(@Nullable Output<Either<String,InstanceType>> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        public Builder instanceType(Either<String,InstanceType> instanceType) {
            return instanceType(Output.of(instanceType));
        }

        public Builder instanceType(String instanceType) {
            return instanceType(Either.ofLeft(instanceType));
        }

        public Builder instanceType(InstanceType instanceType) {
            return instanceType(Either.ofRight(instanceType));
        }

        public Builder ipv6AddressCount(@Nullable Output<Integer> ipv6AddressCount) {
            $.ipv6AddressCount = ipv6AddressCount;
            return this;
        }

        public Builder ipv6AddressCount(Integer ipv6AddressCount) {
            return ipv6AddressCount(Output.of(ipv6AddressCount));
        }

        public Builder ipv6Addresses(@Nullable Output<List<String>> ipv6Addresses) {
            $.ipv6Addresses = ipv6Addresses;
            return this;
        }

        public Builder ipv6Addresses(List<String> ipv6Addresses) {
            return ipv6Addresses(Output.of(ipv6Addresses));
        }

        public Builder ipv6Addresses(String... ipv6Addresses) {
            return ipv6Addresses(List.of(ipv6Addresses));
        }

        public Builder keyName(@Nullable Output<String> keyName) {
            $.keyName = keyName;
            return this;
        }

        public Builder keyName(String keyName) {
            return keyName(Output.of(keyName));
        }

        public Builder launchTemplate(@Nullable Output<InstanceLaunchTemplateArgs> launchTemplate) {
            $.launchTemplate = launchTemplate;
            return this;
        }

        public Builder launchTemplate(InstanceLaunchTemplateArgs launchTemplate) {
            return launchTemplate(Output.of(launchTemplate));
        }

        public Builder maintenanceOptions(@Nullable Output<InstanceMaintenanceOptionsArgs> maintenanceOptions) {
            $.maintenanceOptions = maintenanceOptions;
            return this;
        }

        public Builder maintenanceOptions(InstanceMaintenanceOptionsArgs maintenanceOptions) {
            return maintenanceOptions(Output.of(maintenanceOptions));
        }

        public Builder metadataOptions(@Nullable Output<InstanceMetadataOptionsArgs> metadataOptions) {
            $.metadataOptions = metadataOptions;
            return this;
        }

        public Builder metadataOptions(InstanceMetadataOptionsArgs metadataOptions) {
            return metadataOptions(Output.of(metadataOptions));
        }

        public Builder monitoring(@Nullable Output<Boolean> monitoring) {
            $.monitoring = monitoring;
            return this;
        }

        public Builder monitoring(Boolean monitoring) {
            return monitoring(Output.of(monitoring));
        }

        public Builder networkInterfaces(@Nullable Output<List<InstanceNetworkInterfaceArgs>> networkInterfaces) {
            $.networkInterfaces = networkInterfaces;
            return this;
        }

        public Builder networkInterfaces(List<InstanceNetworkInterfaceArgs> networkInterfaces) {
            return networkInterfaces(Output.of(networkInterfaces));
        }

        public Builder networkInterfaces(InstanceNetworkInterfaceArgs... networkInterfaces) {
            return networkInterfaces(List.of(networkInterfaces));
        }

        public Builder placementGroup(@Nullable Output<String> placementGroup) {
            $.placementGroup = placementGroup;
            return this;
        }

        public Builder placementGroup(String placementGroup) {
            return placementGroup(Output.of(placementGroup));
        }

        public Builder placementPartitionNumber(@Nullable Output<Integer> placementPartitionNumber) {
            $.placementPartitionNumber = placementPartitionNumber;
            return this;
        }

        public Builder placementPartitionNumber(Integer placementPartitionNumber) {
            return placementPartitionNumber(Output.of(placementPartitionNumber));
        }

        public Builder privateDnsNameOptions(@Nullable Output<InstancePrivateDnsNameOptionsArgs> privateDnsNameOptions) {
            $.privateDnsNameOptions = privateDnsNameOptions;
            return this;
        }

        public Builder privateDnsNameOptions(InstancePrivateDnsNameOptionsArgs privateDnsNameOptions) {
            return privateDnsNameOptions(Output.of(privateDnsNameOptions));
        }

        public Builder privateIp(@Nullable Output<String> privateIp) {
            $.privateIp = privateIp;
            return this;
        }

        public Builder privateIp(String privateIp) {
            return privateIp(Output.of(privateIp));
        }

        public Builder rootBlockDevice(@Nullable Output<InstanceRootBlockDeviceArgs> rootBlockDevice) {
            $.rootBlockDevice = rootBlockDevice;
            return this;
        }

        public Builder rootBlockDevice(InstanceRootBlockDeviceArgs rootBlockDevice) {
            return rootBlockDevice(Output.of(rootBlockDevice));
        }

        public Builder secondaryPrivateIps(@Nullable Output<List<String>> secondaryPrivateIps) {
            $.secondaryPrivateIps = secondaryPrivateIps;
            return this;
        }

        public Builder secondaryPrivateIps(List<String> secondaryPrivateIps) {
            return secondaryPrivateIps(Output.of(secondaryPrivateIps));
        }

        public Builder secondaryPrivateIps(String... secondaryPrivateIps) {
            return secondaryPrivateIps(List.of(secondaryPrivateIps));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use of `securityGroups` is discouraged as it does not allow for changes and will force your instance to be replaced if changes are made. To avoid this, use `vpcSecurityGroupIds` which allows for updates.
         * 
         */
        @Deprecated /* Use of `securityGroups` is discouraged as it does not allow for changes and will force your instance to be replaced if changes are made. To avoid this, use `vpcSecurityGroupIds` which allows for updates. */
        public Builder securityGroups(@Nullable Output<List<String>> securityGroups) {
            $.securityGroups = securityGroups;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use of `securityGroups` is discouraged as it does not allow for changes and will force your instance to be replaced if changes are made. To avoid this, use `vpcSecurityGroupIds` which allows for updates.
         * 
         */
        @Deprecated /* Use of `securityGroups` is discouraged as it does not allow for changes and will force your instance to be replaced if changes are made. To avoid this, use `vpcSecurityGroupIds` which allows for updates. */
        public Builder securityGroups(List<String> securityGroups) {
            return securityGroups(Output.of(securityGroups));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use of `securityGroups` is discouraged as it does not allow for changes and will force your instance to be replaced if changes are made. To avoid this, use `vpcSecurityGroupIds` which allows for updates.
         * 
         */
        @Deprecated /* Use of `securityGroups` is discouraged as it does not allow for changes and will force your instance to be replaced if changes are made. To avoid this, use `vpcSecurityGroupIds` which allows for updates. */
        public Builder securityGroups(String... securityGroups) {
            return securityGroups(List.of(securityGroups));
        }

        public Builder sourceDestCheck(@Nullable Output<Boolean> sourceDestCheck) {
            $.sourceDestCheck = sourceDestCheck;
            return this;
        }

        public Builder sourceDestCheck(Boolean sourceDestCheck) {
            return sourceDestCheck(Output.of(sourceDestCheck));
        }

        public Builder subnetId(@Nullable Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tenancy(@Nullable Output<Either<String,Tenancy>> tenancy) {
            $.tenancy = tenancy;
            return this;
        }

        public Builder tenancy(Either<String,Tenancy> tenancy) {
            return tenancy(Output.of(tenancy));
        }

        public Builder tenancy(String tenancy) {
            return tenancy(Either.ofLeft(tenancy));
        }

        public Builder tenancy(Tenancy tenancy) {
            return tenancy(Either.ofRight(tenancy));
        }

        public Builder userData(@Nullable Output<String> userData) {
            $.userData = userData;
            return this;
        }

        public Builder userData(String userData) {
            return userData(Output.of(userData));
        }

        public Builder userDataBase64(@Nullable Output<String> userDataBase64) {
            $.userDataBase64 = userDataBase64;
            return this;
        }

        public Builder userDataBase64(String userDataBase64) {
            return userDataBase64(Output.of(userDataBase64));
        }

        public Builder userDataReplaceOnChange(@Nullable Output<Boolean> userDataReplaceOnChange) {
            $.userDataReplaceOnChange = userDataReplaceOnChange;
            return this;
        }

        public Builder userDataReplaceOnChange(Boolean userDataReplaceOnChange) {
            return userDataReplaceOnChange(Output.of(userDataReplaceOnChange));
        }

        public Builder volumeTags(@Nullable Output<Map<String,String>> volumeTags) {
            $.volumeTags = volumeTags;
            return this;
        }

        public Builder volumeTags(Map<String,String> volumeTags) {
            return volumeTags(Output.of(volumeTags));
        }

        public Builder vpcSecurityGroupIds(@Nullable Output<List<String>> vpcSecurityGroupIds) {
            $.vpcSecurityGroupIds = vpcSecurityGroupIds;
            return this;
        }

        public Builder vpcSecurityGroupIds(List<String> vpcSecurityGroupIds) {
            return vpcSecurityGroupIds(Output.of(vpcSecurityGroupIds));
        }

        public Builder vpcSecurityGroupIds(String... vpcSecurityGroupIds) {
            return vpcSecurityGroupIds(List.of(vpcSecurityGroupIds));
        }

        public InstanceArgs build() {
            return $;
        }
    }

}
