// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.networkmanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCoreNetworkPolicyDocumentAttachmentPolicyActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetCoreNetworkPolicyDocumentAttachmentPolicyActionArgs Empty = new GetCoreNetworkPolicyDocumentAttachmentPolicyActionArgs();

    @Import(name="associationMethod", required=true)
    private Output<String> associationMethod;

    public Output<String> associationMethod() {
        return this.associationMethod;
    }

    @Import(name="requireAcceptance")
    private @Nullable Output<Boolean> requireAcceptance;

    public Optional<Output<Boolean>> requireAcceptance() {
        return Optional.ofNullable(this.requireAcceptance);
    }

    @Import(name="segment")
    private @Nullable Output<String> segment;

    public Optional<Output<String>> segment() {
        return Optional.ofNullable(this.segment);
    }

    @Import(name="tagValueOfKey")
    private @Nullable Output<String> tagValueOfKey;

    public Optional<Output<String>> tagValueOfKey() {
        return Optional.ofNullable(this.tagValueOfKey);
    }

    private GetCoreNetworkPolicyDocumentAttachmentPolicyActionArgs() {}

    private GetCoreNetworkPolicyDocumentAttachmentPolicyActionArgs(GetCoreNetworkPolicyDocumentAttachmentPolicyActionArgs $) {
        this.associationMethod = $.associationMethod;
        this.requireAcceptance = $.requireAcceptance;
        this.segment = $.segment;
        this.tagValueOfKey = $.tagValueOfKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCoreNetworkPolicyDocumentAttachmentPolicyActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCoreNetworkPolicyDocumentAttachmentPolicyActionArgs $;

        public Builder() {
            $ = new GetCoreNetworkPolicyDocumentAttachmentPolicyActionArgs();
        }

        public Builder(GetCoreNetworkPolicyDocumentAttachmentPolicyActionArgs defaults) {
            $ = new GetCoreNetworkPolicyDocumentAttachmentPolicyActionArgs(Objects.requireNonNull(defaults));
        }

        public Builder associationMethod(Output<String> associationMethod) {
            $.associationMethod = associationMethod;
            return this;
        }

        public Builder associationMethod(String associationMethod) {
            return associationMethod(Output.of(associationMethod));
        }

        public Builder requireAcceptance(@Nullable Output<Boolean> requireAcceptance) {
            $.requireAcceptance = requireAcceptance;
            return this;
        }

        public Builder requireAcceptance(Boolean requireAcceptance) {
            return requireAcceptance(Output.of(requireAcceptance));
        }

        public Builder segment(@Nullable Output<String> segment) {
            $.segment = segment;
            return this;
        }

        public Builder segment(String segment) {
            return segment(Output.of(segment));
        }

        public Builder tagValueOfKey(@Nullable Output<String> tagValueOfKey) {
            $.tagValueOfKey = tagValueOfKey;
            return this;
        }

        public Builder tagValueOfKey(String tagValueOfKey) {
            return tagValueOfKey(Output.of(tagValueOfKey));
        }

        public GetCoreNetworkPolicyDocumentAttachmentPolicyActionArgs build() {
            $.associationMethod = Objects.requireNonNull($.associationMethod, "expected parameter 'associationMethod' to be non-null");
            return $;
        }
    }

}
