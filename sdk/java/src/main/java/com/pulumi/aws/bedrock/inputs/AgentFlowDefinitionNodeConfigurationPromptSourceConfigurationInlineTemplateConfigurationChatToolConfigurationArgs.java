// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.inputs;

import com.pulumi.aws.bedrock.inputs.AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineTemplateConfigurationChatToolConfigurationToolArgs;
import com.pulumi.aws.bedrock.inputs.AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineTemplateConfigurationChatToolConfigurationToolChoiceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineTemplateConfigurationChatToolConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineTemplateConfigurationChatToolConfigurationArgs Empty = new AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineTemplateConfigurationChatToolConfigurationArgs();

    /**
     * Defines which tools the model should request when invoked. See Tool Choice for more information.
     * 
     */
    @Import(name="toolChoice")
    private @Nullable Output<AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineTemplateConfigurationChatToolConfigurationToolChoiceArgs> toolChoice;

    /**
     * @return Defines which tools the model should request when invoked. See Tool Choice for more information.
     * 
     */
    public Optional<Output<AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineTemplateConfigurationChatToolConfigurationToolChoiceArgs>> toolChoice() {
        return Optional.ofNullable(this.toolChoice);
    }

    /**
     * A list of tools to pass to a model. See Tool for more information.
     * 
     */
    @Import(name="tools")
    private @Nullable Output<List<AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineTemplateConfigurationChatToolConfigurationToolArgs>> tools;

    /**
     * @return A list of tools to pass to a model. See Tool for more information.
     * 
     */
    public Optional<Output<List<AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineTemplateConfigurationChatToolConfigurationToolArgs>>> tools() {
        return Optional.ofNullable(this.tools);
    }

    private AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineTemplateConfigurationChatToolConfigurationArgs() {}

    private AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineTemplateConfigurationChatToolConfigurationArgs(AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineTemplateConfigurationChatToolConfigurationArgs $) {
        this.toolChoice = $.toolChoice;
        this.tools = $.tools;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineTemplateConfigurationChatToolConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineTemplateConfigurationChatToolConfigurationArgs $;

        public Builder() {
            $ = new AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineTemplateConfigurationChatToolConfigurationArgs();
        }

        public Builder(AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineTemplateConfigurationChatToolConfigurationArgs defaults) {
            $ = new AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineTemplateConfigurationChatToolConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param toolChoice Defines which tools the model should request when invoked. See Tool Choice for more information.
         * 
         * @return builder
         * 
         */
        public Builder toolChoice(@Nullable Output<AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineTemplateConfigurationChatToolConfigurationToolChoiceArgs> toolChoice) {
            $.toolChoice = toolChoice;
            return this;
        }

        /**
         * @param toolChoice Defines which tools the model should request when invoked. See Tool Choice for more information.
         * 
         * @return builder
         * 
         */
        public Builder toolChoice(AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineTemplateConfigurationChatToolConfigurationToolChoiceArgs toolChoice) {
            return toolChoice(Output.of(toolChoice));
        }

        /**
         * @param tools A list of tools to pass to a model. See Tool for more information.
         * 
         * @return builder
         * 
         */
        public Builder tools(@Nullable Output<List<AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineTemplateConfigurationChatToolConfigurationToolArgs>> tools) {
            $.tools = tools;
            return this;
        }

        /**
         * @param tools A list of tools to pass to a model. See Tool for more information.
         * 
         * @return builder
         * 
         */
        public Builder tools(List<AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineTemplateConfigurationChatToolConfigurationToolArgs> tools) {
            return tools(Output.of(tools));
        }

        /**
         * @param tools A list of tools to pass to a model. See Tool for more information.
         * 
         * @return builder
         * 
         */
        public Builder tools(AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineTemplateConfigurationChatToolConfigurationToolArgs... tools) {
            return tools(List.of(tools));
        }

        public AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineTemplateConfigurationChatToolConfigurationArgs build() {
            return $;
        }
    }

}
