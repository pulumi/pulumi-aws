// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataSetLogicalTableMapDataTransformTagColumnOperationTagColumnDescriptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataSetLogicalTableMapDataTransformTagColumnOperationTagColumnDescriptionArgs Empty = new DataSetLogicalTableMapDataTransformTagColumnOperationTagColumnDescriptionArgs();

    /**
     * The text of a description for a column.
     * 
     */
    @Import(name="text")
    private @Nullable Output<String> text;

    /**
     * @return The text of a description for a column.
     * 
     */
    public Optional<Output<String>> text() {
        return Optional.ofNullable(this.text);
    }

    private DataSetLogicalTableMapDataTransformTagColumnOperationTagColumnDescriptionArgs() {}

    private DataSetLogicalTableMapDataTransformTagColumnOperationTagColumnDescriptionArgs(DataSetLogicalTableMapDataTransformTagColumnOperationTagColumnDescriptionArgs $) {
        this.text = $.text;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataSetLogicalTableMapDataTransformTagColumnOperationTagColumnDescriptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataSetLogicalTableMapDataTransformTagColumnOperationTagColumnDescriptionArgs $;

        public Builder() {
            $ = new DataSetLogicalTableMapDataTransformTagColumnOperationTagColumnDescriptionArgs();
        }

        public Builder(DataSetLogicalTableMapDataTransformTagColumnOperationTagColumnDescriptionArgs defaults) {
            $ = new DataSetLogicalTableMapDataTransformTagColumnOperationTagColumnDescriptionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param text The text of a description for a column.
         * 
         * @return builder
         * 
         */
        public Builder text(@Nullable Output<String> text) {
            $.text = text;
            return this;
        }

        /**
         * @param text The text of a description for a column.
         * 
         * @return builder
         * 
         */
        public Builder text(String text) {
            return text(Output.of(text));
        }

        public DataSetLogicalTableMapDataTransformTagColumnOperationTagColumnDescriptionArgs build() {
            return $;
        }
    }

}
