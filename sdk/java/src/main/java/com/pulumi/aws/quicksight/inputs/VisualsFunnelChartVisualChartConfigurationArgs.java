// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.ChartAxisLabelOptionsArgs;
import com.pulumi.aws.quicksight.inputs.TooltipOptionsArgs;
import com.pulumi.aws.quicksight.inputs.VisualPaletteArgs;
import com.pulumi.aws.quicksight.inputs.VisualsFunnelChartVisualChartConfigurationDataLabelOptionsArgs;
import com.pulumi.aws.quicksight.inputs.VisualsFunnelChartVisualChartConfigurationFieldWellsArgs;
import com.pulumi.aws.quicksight.inputs.VisualsFunnelChartVisualChartConfigurationSortConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VisualsFunnelChartVisualChartConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final VisualsFunnelChartVisualChartConfigurationArgs Empty = new VisualsFunnelChartVisualChartConfigurationArgs();

    @Import(name="categoryLabelOptions")
    private @Nullable Output<ChartAxisLabelOptionsArgs> categoryLabelOptions;

    public Optional<Output<ChartAxisLabelOptionsArgs>> categoryLabelOptions() {
        return Optional.ofNullable(this.categoryLabelOptions);
    }

    @Import(name="dataLabelOptions")
    private @Nullable Output<VisualsFunnelChartVisualChartConfigurationDataLabelOptionsArgs> dataLabelOptions;

    public Optional<Output<VisualsFunnelChartVisualChartConfigurationDataLabelOptionsArgs>> dataLabelOptions() {
        return Optional.ofNullable(this.dataLabelOptions);
    }

    @Import(name="fieldWells")
    private @Nullable Output<VisualsFunnelChartVisualChartConfigurationFieldWellsArgs> fieldWells;

    public Optional<Output<VisualsFunnelChartVisualChartConfigurationFieldWellsArgs>> fieldWells() {
        return Optional.ofNullable(this.fieldWells);
    }

    @Import(name="sortConfiguration")
    private @Nullable Output<VisualsFunnelChartVisualChartConfigurationSortConfigurationArgs> sortConfiguration;

    public Optional<Output<VisualsFunnelChartVisualChartConfigurationSortConfigurationArgs>> sortConfiguration() {
        return Optional.ofNullable(this.sortConfiguration);
    }

    @Import(name="tooltip")
    private @Nullable Output<TooltipOptionsArgs> tooltip;

    public Optional<Output<TooltipOptionsArgs>> tooltip() {
        return Optional.ofNullable(this.tooltip);
    }

    @Import(name="valueLabelOptions")
    private @Nullable Output<ChartAxisLabelOptionsArgs> valueLabelOptions;

    public Optional<Output<ChartAxisLabelOptionsArgs>> valueLabelOptions() {
        return Optional.ofNullable(this.valueLabelOptions);
    }

    @Import(name="visualPalette")
    private @Nullable Output<VisualPaletteArgs> visualPalette;

    public Optional<Output<VisualPaletteArgs>> visualPalette() {
        return Optional.ofNullable(this.visualPalette);
    }

    private VisualsFunnelChartVisualChartConfigurationArgs() {}

    private VisualsFunnelChartVisualChartConfigurationArgs(VisualsFunnelChartVisualChartConfigurationArgs $) {
        this.categoryLabelOptions = $.categoryLabelOptions;
        this.dataLabelOptions = $.dataLabelOptions;
        this.fieldWells = $.fieldWells;
        this.sortConfiguration = $.sortConfiguration;
        this.tooltip = $.tooltip;
        this.valueLabelOptions = $.valueLabelOptions;
        this.visualPalette = $.visualPalette;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VisualsFunnelChartVisualChartConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VisualsFunnelChartVisualChartConfigurationArgs $;

        public Builder() {
            $ = new VisualsFunnelChartVisualChartConfigurationArgs();
        }

        public Builder(VisualsFunnelChartVisualChartConfigurationArgs defaults) {
            $ = new VisualsFunnelChartVisualChartConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder categoryLabelOptions(@Nullable Output<ChartAxisLabelOptionsArgs> categoryLabelOptions) {
            $.categoryLabelOptions = categoryLabelOptions;
            return this;
        }

        public Builder categoryLabelOptions(ChartAxisLabelOptionsArgs categoryLabelOptions) {
            return categoryLabelOptions(Output.of(categoryLabelOptions));
        }

        public Builder dataLabelOptions(@Nullable Output<VisualsFunnelChartVisualChartConfigurationDataLabelOptionsArgs> dataLabelOptions) {
            $.dataLabelOptions = dataLabelOptions;
            return this;
        }

        public Builder dataLabelOptions(VisualsFunnelChartVisualChartConfigurationDataLabelOptionsArgs dataLabelOptions) {
            return dataLabelOptions(Output.of(dataLabelOptions));
        }

        public Builder fieldWells(@Nullable Output<VisualsFunnelChartVisualChartConfigurationFieldWellsArgs> fieldWells) {
            $.fieldWells = fieldWells;
            return this;
        }

        public Builder fieldWells(VisualsFunnelChartVisualChartConfigurationFieldWellsArgs fieldWells) {
            return fieldWells(Output.of(fieldWells));
        }

        public Builder sortConfiguration(@Nullable Output<VisualsFunnelChartVisualChartConfigurationSortConfigurationArgs> sortConfiguration) {
            $.sortConfiguration = sortConfiguration;
            return this;
        }

        public Builder sortConfiguration(VisualsFunnelChartVisualChartConfigurationSortConfigurationArgs sortConfiguration) {
            return sortConfiguration(Output.of(sortConfiguration));
        }

        public Builder tooltip(@Nullable Output<TooltipOptionsArgs> tooltip) {
            $.tooltip = tooltip;
            return this;
        }

        public Builder tooltip(TooltipOptionsArgs tooltip) {
            return tooltip(Output.of(tooltip));
        }

        public Builder valueLabelOptions(@Nullable Output<ChartAxisLabelOptionsArgs> valueLabelOptions) {
            $.valueLabelOptions = valueLabelOptions;
            return this;
        }

        public Builder valueLabelOptions(ChartAxisLabelOptionsArgs valueLabelOptions) {
            return valueLabelOptions(Output.of(valueLabelOptions));
        }

        public Builder visualPalette(@Nullable Output<VisualPaletteArgs> visualPalette) {
            $.visualPalette = visualPalette;
            return this;
        }

        public Builder visualPalette(VisualPaletteArgs visualPalette) {
            return visualPalette(Output.of(visualPalette));
        }

        public VisualsFunnelChartVisualChartConfigurationArgs build() {
            return $;
        }
    }

}
