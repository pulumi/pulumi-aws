// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.redshiftserverless;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class CustomDomainAssociationArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomDomainAssociationArgs Empty = new CustomDomainAssociationArgs();

    /**
     * ARN of the certificate for the custom domain association.
     * 
     */
    @Import(name="customDomainCertificateArn", required=true)
    private Output<String> customDomainCertificateArn;

    /**
     * @return ARN of the certificate for the custom domain association.
     * 
     */
    public Output<String> customDomainCertificateArn() {
        return this.customDomainCertificateArn;
    }

    /**
     * Custom domain to associate with the workgroup.
     * 
     */
    @Import(name="customDomainName", required=true)
    private Output<String> customDomainName;

    /**
     * @return Custom domain to associate with the workgroup.
     * 
     */
    public Output<String> customDomainName() {
        return this.customDomainName;
    }

    /**
     * Name of the workgroup.
     * 
     */
    @Import(name="workgroupName", required=true)
    private Output<String> workgroupName;

    /**
     * @return Name of the workgroup.
     * 
     */
    public Output<String> workgroupName() {
        return this.workgroupName;
    }

    private CustomDomainAssociationArgs() {}

    private CustomDomainAssociationArgs(CustomDomainAssociationArgs $) {
        this.customDomainCertificateArn = $.customDomainCertificateArn;
        this.customDomainName = $.customDomainName;
        this.workgroupName = $.workgroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomDomainAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomDomainAssociationArgs $;

        public Builder() {
            $ = new CustomDomainAssociationArgs();
        }

        public Builder(CustomDomainAssociationArgs defaults) {
            $ = new CustomDomainAssociationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customDomainCertificateArn ARN of the certificate for the custom domain association.
         * 
         * @return builder
         * 
         */
        public Builder customDomainCertificateArn(Output<String> customDomainCertificateArn) {
            $.customDomainCertificateArn = customDomainCertificateArn;
            return this;
        }

        /**
         * @param customDomainCertificateArn ARN of the certificate for the custom domain association.
         * 
         * @return builder
         * 
         */
        public Builder customDomainCertificateArn(String customDomainCertificateArn) {
            return customDomainCertificateArn(Output.of(customDomainCertificateArn));
        }

        /**
         * @param customDomainName Custom domain to associate with the workgroup.
         * 
         * @return builder
         * 
         */
        public Builder customDomainName(Output<String> customDomainName) {
            $.customDomainName = customDomainName;
            return this;
        }

        /**
         * @param customDomainName Custom domain to associate with the workgroup.
         * 
         * @return builder
         * 
         */
        public Builder customDomainName(String customDomainName) {
            return customDomainName(Output.of(customDomainName));
        }

        /**
         * @param workgroupName Name of the workgroup.
         * 
         * @return builder
         * 
         */
        public Builder workgroupName(Output<String> workgroupName) {
            $.workgroupName = workgroupName;
            return this;
        }

        /**
         * @param workgroupName Name of the workgroup.
         * 
         * @return builder
         * 
         */
        public Builder workgroupName(String workgroupName) {
            return workgroupName(Output.of(workgroupName));
        }

        public CustomDomainAssociationArgs build() {
            if ($.customDomainCertificateArn == null) {
                throw new MissingRequiredPropertyException("CustomDomainAssociationArgs", "customDomainCertificateArn");
            }
            if ($.customDomainName == null) {
                throw new MissingRequiredPropertyException("CustomDomainAssociationArgs", "customDomainName");
            }
            if ($.workgroupName == null) {
                throw new MissingRequiredPropertyException("CustomDomainAssociationArgs", "workgroupName");
            }
            return $;
        }
    }

}
