// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codebuild.inputs;

import com.pulumi.aws.codebuild.inputs.ProjectSourceAuthArgs;
import com.pulumi.aws.codebuild.inputs.ProjectSourceBuildStatusConfigArgs;
import com.pulumi.aws.codebuild.inputs.ProjectSourceGitSubmodulesConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProjectSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProjectSourceArgs Empty = new ProjectSourceArgs();

    /**
     * @deprecated
     * Use the aws_codebuild_source_credential resource instead
     * 
     */
    @Deprecated /* Use the aws_codebuild_source_credential resource instead */
    @Import(name="auth")
    private @Nullable Output<ProjectSourceAuthArgs> auth;

    /**
     * @deprecated
     * Use the aws_codebuild_source_credential resource instead
     * 
     */
    @Deprecated /* Use the aws_codebuild_source_credential resource instead */
    public Optional<Output<ProjectSourceAuthArgs>> auth() {
        return Optional.ofNullable(this.auth);
    }

    @Import(name="buildStatusConfig")
    private @Nullable Output<ProjectSourceBuildStatusConfigArgs> buildStatusConfig;

    public Optional<Output<ProjectSourceBuildStatusConfigArgs>> buildStatusConfig() {
        return Optional.ofNullable(this.buildStatusConfig);
    }

    @Import(name="buildspec")
    private @Nullable Output<String> buildspec;

    public Optional<Output<String>> buildspec() {
        return Optional.ofNullable(this.buildspec);
    }

    @Import(name="gitCloneDepth")
    private @Nullable Output<Integer> gitCloneDepth;

    public Optional<Output<Integer>> gitCloneDepth() {
        return Optional.ofNullable(this.gitCloneDepth);
    }

    @Import(name="gitSubmodulesConfig")
    private @Nullable Output<ProjectSourceGitSubmodulesConfigArgs> gitSubmodulesConfig;

    public Optional<Output<ProjectSourceGitSubmodulesConfigArgs>> gitSubmodulesConfig() {
        return Optional.ofNullable(this.gitSubmodulesConfig);
    }

    @Import(name="insecureSsl")
    private @Nullable Output<Boolean> insecureSsl;

    public Optional<Output<Boolean>> insecureSsl() {
        return Optional.ofNullable(this.insecureSsl);
    }

    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    @Import(name="reportBuildStatus")
    private @Nullable Output<Boolean> reportBuildStatus;

    public Optional<Output<Boolean>> reportBuildStatus() {
        return Optional.ofNullable(this.reportBuildStatus);
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    private ProjectSourceArgs() {}

    private ProjectSourceArgs(ProjectSourceArgs $) {
        this.auth = $.auth;
        this.buildStatusConfig = $.buildStatusConfig;
        this.buildspec = $.buildspec;
        this.gitCloneDepth = $.gitCloneDepth;
        this.gitSubmodulesConfig = $.gitSubmodulesConfig;
        this.insecureSsl = $.insecureSsl;
        this.location = $.location;
        this.reportBuildStatus = $.reportBuildStatus;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectSourceArgs $;

        public Builder() {
            $ = new ProjectSourceArgs();
        }

        public Builder(ProjectSourceArgs defaults) {
            $ = new ProjectSourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use the aws_codebuild_source_credential resource instead
         * 
         */
        @Deprecated /* Use the aws_codebuild_source_credential resource instead */
        public Builder auth(@Nullable Output<ProjectSourceAuthArgs> auth) {
            $.auth = auth;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use the aws_codebuild_source_credential resource instead
         * 
         */
        @Deprecated /* Use the aws_codebuild_source_credential resource instead */
        public Builder auth(ProjectSourceAuthArgs auth) {
            return auth(Output.of(auth));
        }

        public Builder buildStatusConfig(@Nullable Output<ProjectSourceBuildStatusConfigArgs> buildStatusConfig) {
            $.buildStatusConfig = buildStatusConfig;
            return this;
        }

        public Builder buildStatusConfig(ProjectSourceBuildStatusConfigArgs buildStatusConfig) {
            return buildStatusConfig(Output.of(buildStatusConfig));
        }

        public Builder buildspec(@Nullable Output<String> buildspec) {
            $.buildspec = buildspec;
            return this;
        }

        public Builder buildspec(String buildspec) {
            return buildspec(Output.of(buildspec));
        }

        public Builder gitCloneDepth(@Nullable Output<Integer> gitCloneDepth) {
            $.gitCloneDepth = gitCloneDepth;
            return this;
        }

        public Builder gitCloneDepth(Integer gitCloneDepth) {
            return gitCloneDepth(Output.of(gitCloneDepth));
        }

        public Builder gitSubmodulesConfig(@Nullable Output<ProjectSourceGitSubmodulesConfigArgs> gitSubmodulesConfig) {
            $.gitSubmodulesConfig = gitSubmodulesConfig;
            return this;
        }

        public Builder gitSubmodulesConfig(ProjectSourceGitSubmodulesConfigArgs gitSubmodulesConfig) {
            return gitSubmodulesConfig(Output.of(gitSubmodulesConfig));
        }

        public Builder insecureSsl(@Nullable Output<Boolean> insecureSsl) {
            $.insecureSsl = insecureSsl;
            return this;
        }

        public Builder insecureSsl(Boolean insecureSsl) {
            return insecureSsl(Output.of(insecureSsl));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder reportBuildStatus(@Nullable Output<Boolean> reportBuildStatus) {
            $.reportBuildStatus = reportBuildStatus;
            return this;
        }

        public Builder reportBuildStatus(Boolean reportBuildStatus) {
            return reportBuildStatus(Output.of(reportBuildStatus));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public ProjectSourceArgs build() {
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
