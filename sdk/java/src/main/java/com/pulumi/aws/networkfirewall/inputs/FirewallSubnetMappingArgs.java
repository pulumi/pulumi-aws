// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.networkfirewall.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class FirewallSubnetMappingArgs extends com.pulumi.resources.ResourceArgs {

    public static final FirewallSubnetMappingArgs Empty = new FirewallSubnetMappingArgs();

    /**
     * The unique identifier for the subnet.
     * 
     */
    @Import(name="subnetId", required=true)
    private Output<String> subnetId;

    /**
     * @return The unique identifier for the subnet.
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }

    private FirewallSubnetMappingArgs() {}

    private FirewallSubnetMappingArgs(FirewallSubnetMappingArgs $) {
        this.subnetId = $.subnetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirewallSubnetMappingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirewallSubnetMappingArgs $;

        public Builder() {
            $ = new FirewallSubnetMappingArgs();
        }

        public Builder(FirewallSubnetMappingArgs defaults) {
            $ = new FirewallSubnetMappingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param subnetId The unique identifier for the subnet.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId The unique identifier for the subnet.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        public FirewallSubnetMappingArgs build() {
            $.subnetId = Objects.requireNonNull($.subnetId, "expected parameter 'subnetId' to be non-null");
            return $;
        }
    }

}
