// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.budgets.outputs;

import com.pulumi.aws.budgets.outputs.BudgetActionDefinitionIamActionDefinition;
import com.pulumi.aws.budgets.outputs.BudgetActionDefinitionScpActionDefinition;
import com.pulumi.aws.budgets.outputs.BudgetActionDefinitionSsmActionDefinition;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BudgetActionDefinition {
    /**
     * @return The AWS Identity and Access Management (IAM) action definition details. See IAM Action Definition.
     * 
     */
    private @Nullable BudgetActionDefinitionIamActionDefinition iamActionDefinition;
    /**
     * @return The service control policies (SCPs) action definition details. See SCP Action Definition.
     * 
     */
    private @Nullable BudgetActionDefinitionScpActionDefinition scpActionDefinition;
    /**
     * @return The AWS Systems Manager (SSM) action definition details. See SSM Action Definition.
     * 
     */
    private @Nullable BudgetActionDefinitionSsmActionDefinition ssmActionDefinition;

    private BudgetActionDefinition() {}
    /**
     * @return The AWS Identity and Access Management (IAM) action definition details. See IAM Action Definition.
     * 
     */
    public Optional<BudgetActionDefinitionIamActionDefinition> iamActionDefinition() {
        return Optional.ofNullable(this.iamActionDefinition);
    }
    /**
     * @return The service control policies (SCPs) action definition details. See SCP Action Definition.
     * 
     */
    public Optional<BudgetActionDefinitionScpActionDefinition> scpActionDefinition() {
        return Optional.ofNullable(this.scpActionDefinition);
    }
    /**
     * @return The AWS Systems Manager (SSM) action definition details. See SSM Action Definition.
     * 
     */
    public Optional<BudgetActionDefinitionSsmActionDefinition> ssmActionDefinition() {
        return Optional.ofNullable(this.ssmActionDefinition);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BudgetActionDefinition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable BudgetActionDefinitionIamActionDefinition iamActionDefinition;
        private @Nullable BudgetActionDefinitionScpActionDefinition scpActionDefinition;
        private @Nullable BudgetActionDefinitionSsmActionDefinition ssmActionDefinition;
        public Builder() {}
        public Builder(BudgetActionDefinition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.iamActionDefinition = defaults.iamActionDefinition;
    	      this.scpActionDefinition = defaults.scpActionDefinition;
    	      this.ssmActionDefinition = defaults.ssmActionDefinition;
        }

        @CustomType.Setter
        public Builder iamActionDefinition(@Nullable BudgetActionDefinitionIamActionDefinition iamActionDefinition) {
            this.iamActionDefinition = iamActionDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder scpActionDefinition(@Nullable BudgetActionDefinitionScpActionDefinition scpActionDefinition) {
            this.scpActionDefinition = scpActionDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder ssmActionDefinition(@Nullable BudgetActionDefinitionSsmActionDefinition ssmActionDefinition) {
            this.ssmActionDefinition = ssmActionDefinition;
            return this;
        }
        public BudgetActionDefinition build() {
            final var _resultValue = new BudgetActionDefinition();
            _resultValue.iamActionDefinition = iamActionDefinition;
            _resultValue.scpActionDefinition = scpActionDefinition;
            _resultValue.ssmActionDefinition = ssmActionDefinition;
            return _resultValue;
        }
    }
}
