// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.oam.inputs;

import com.pulumi.aws.oam.inputs.LinkLinkConfigurationLogGroupConfigurationArgs;
import com.pulumi.aws.oam.inputs.LinkLinkConfigurationMetricConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LinkLinkConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final LinkLinkConfigurationArgs Empty = new LinkLinkConfigurationArgs();

    /**
     * Configuration for filtering which log groups are to send log events from the source account to the monitoring account. See `log_group_configuration` Block for details.
     * 
     */
    @Import(name="logGroupConfiguration")
    private @Nullable Output<LinkLinkConfigurationLogGroupConfigurationArgs> logGroupConfiguration;

    /**
     * @return Configuration for filtering which log groups are to send log events from the source account to the monitoring account. See `log_group_configuration` Block for details.
     * 
     */
    public Optional<Output<LinkLinkConfigurationLogGroupConfigurationArgs>> logGroupConfiguration() {
        return Optional.ofNullable(this.logGroupConfiguration);
    }

    /**
     * Configuration for filtering which metric namespaces are to be shared from the source account to the monitoring account. See `metric_configuration` Block for details.
     * 
     */
    @Import(name="metricConfiguration")
    private @Nullable Output<LinkLinkConfigurationMetricConfigurationArgs> metricConfiguration;

    /**
     * @return Configuration for filtering which metric namespaces are to be shared from the source account to the monitoring account. See `metric_configuration` Block for details.
     * 
     */
    public Optional<Output<LinkLinkConfigurationMetricConfigurationArgs>> metricConfiguration() {
        return Optional.ofNullable(this.metricConfiguration);
    }

    private LinkLinkConfigurationArgs() {}

    private LinkLinkConfigurationArgs(LinkLinkConfigurationArgs $) {
        this.logGroupConfiguration = $.logGroupConfiguration;
        this.metricConfiguration = $.metricConfiguration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LinkLinkConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LinkLinkConfigurationArgs $;

        public Builder() {
            $ = new LinkLinkConfigurationArgs();
        }

        public Builder(LinkLinkConfigurationArgs defaults) {
            $ = new LinkLinkConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param logGroupConfiguration Configuration for filtering which log groups are to send log events from the source account to the monitoring account. See `log_group_configuration` Block for details.
         * 
         * @return builder
         * 
         */
        public Builder logGroupConfiguration(@Nullable Output<LinkLinkConfigurationLogGroupConfigurationArgs> logGroupConfiguration) {
            $.logGroupConfiguration = logGroupConfiguration;
            return this;
        }

        /**
         * @param logGroupConfiguration Configuration for filtering which log groups are to send log events from the source account to the monitoring account. See `log_group_configuration` Block for details.
         * 
         * @return builder
         * 
         */
        public Builder logGroupConfiguration(LinkLinkConfigurationLogGroupConfigurationArgs logGroupConfiguration) {
            return logGroupConfiguration(Output.of(logGroupConfiguration));
        }

        /**
         * @param metricConfiguration Configuration for filtering which metric namespaces are to be shared from the source account to the monitoring account. See `metric_configuration` Block for details.
         * 
         * @return builder
         * 
         */
        public Builder metricConfiguration(@Nullable Output<LinkLinkConfigurationMetricConfigurationArgs> metricConfiguration) {
            $.metricConfiguration = metricConfiguration;
            return this;
        }

        /**
         * @param metricConfiguration Configuration for filtering which metric namespaces are to be shared from the source account to the monitoring account. See `metric_configuration` Block for details.
         * 
         * @return builder
         * 
         */
        public Builder metricConfiguration(LinkLinkConfigurationMetricConfigurationArgs metricConfiguration) {
            return metricConfiguration(Output.of(metricConfiguration));
        }

        public LinkLinkConfigurationArgs build() {
            return $;
        }
    }

}
