// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.msk.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ReplicatorReplicationInfoListConsumerGroupReplication {
    /**
     * @return List of regular expression patterns indicating the consumer groups that should not be replicated.
     * 
     */
    private @Nullable List<String> consumerGroupsToExcludes;
    /**
     * @return List of regular expression patterns indicating the consumer groups to copy.
     * 
     */
    private List<String> consumerGroupsToReplicates;
    /**
     * @return Whether to periodically check for new consumer groups.
     * 
     */
    private @Nullable Boolean detectAndCopyNewConsumerGroups;
    /**
     * @return Whether to periodically write the translated offsets to __consumer_offsets topic in target cluster.
     * 
     */
    private @Nullable Boolean synchroniseConsumerGroupOffsets;

    private ReplicatorReplicationInfoListConsumerGroupReplication() {}
    /**
     * @return List of regular expression patterns indicating the consumer groups that should not be replicated.
     * 
     */
    public List<String> consumerGroupsToExcludes() {
        return this.consumerGroupsToExcludes == null ? List.of() : this.consumerGroupsToExcludes;
    }
    /**
     * @return List of regular expression patterns indicating the consumer groups to copy.
     * 
     */
    public List<String> consumerGroupsToReplicates() {
        return this.consumerGroupsToReplicates;
    }
    /**
     * @return Whether to periodically check for new consumer groups.
     * 
     */
    public Optional<Boolean> detectAndCopyNewConsumerGroups() {
        return Optional.ofNullable(this.detectAndCopyNewConsumerGroups);
    }
    /**
     * @return Whether to periodically write the translated offsets to __consumer_offsets topic in target cluster.
     * 
     */
    public Optional<Boolean> synchroniseConsumerGroupOffsets() {
        return Optional.ofNullable(this.synchroniseConsumerGroupOffsets);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ReplicatorReplicationInfoListConsumerGroupReplication defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> consumerGroupsToExcludes;
        private List<String> consumerGroupsToReplicates;
        private @Nullable Boolean detectAndCopyNewConsumerGroups;
        private @Nullable Boolean synchroniseConsumerGroupOffsets;
        public Builder() {}
        public Builder(ReplicatorReplicationInfoListConsumerGroupReplication defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.consumerGroupsToExcludes = defaults.consumerGroupsToExcludes;
    	      this.consumerGroupsToReplicates = defaults.consumerGroupsToReplicates;
    	      this.detectAndCopyNewConsumerGroups = defaults.detectAndCopyNewConsumerGroups;
    	      this.synchroniseConsumerGroupOffsets = defaults.synchroniseConsumerGroupOffsets;
        }

        @CustomType.Setter
        public Builder consumerGroupsToExcludes(@Nullable List<String> consumerGroupsToExcludes) {
            this.consumerGroupsToExcludes = consumerGroupsToExcludes;
            return this;
        }
        public Builder consumerGroupsToExcludes(String... consumerGroupsToExcludes) {
            return consumerGroupsToExcludes(List.of(consumerGroupsToExcludes));
        }
        @CustomType.Setter
        public Builder consumerGroupsToReplicates(List<String> consumerGroupsToReplicates) {
            this.consumerGroupsToReplicates = Objects.requireNonNull(consumerGroupsToReplicates);
            return this;
        }
        public Builder consumerGroupsToReplicates(String... consumerGroupsToReplicates) {
            return consumerGroupsToReplicates(List.of(consumerGroupsToReplicates));
        }
        @CustomType.Setter
        public Builder detectAndCopyNewConsumerGroups(@Nullable Boolean detectAndCopyNewConsumerGroups) {
            this.detectAndCopyNewConsumerGroups = detectAndCopyNewConsumerGroups;
            return this;
        }
        @CustomType.Setter
        public Builder synchroniseConsumerGroupOffsets(@Nullable Boolean synchroniseConsumerGroupOffsets) {
            this.synchroniseConsumerGroupOffsets = synchroniseConsumerGroupOffsets;
            return this;
        }
        public ReplicatorReplicationInfoListConsumerGroupReplication build() {
            final var _resultValue = new ReplicatorReplicationInfoListConsumerGroupReplication();
            _resultValue.consumerGroupsToExcludes = consumerGroupsToExcludes;
            _resultValue.consumerGroupsToReplicates = consumerGroupsToReplicates;
            _resultValue.detectAndCopyNewConsumerGroups = detectAndCopyNewConsumerGroups;
            _resultValue.synchroniseConsumerGroupOffsets = synchroniseConsumerGroupOffsets;
            return _resultValue;
        }
    }
}
