// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.AxisDisplayOptions;
import com.pulumi.aws.quicksight.outputs.ChartAxisLabelOptions;
import com.pulumi.aws.quicksight.outputs.DataLabelsOptions;
import com.pulumi.aws.quicksight.outputs.LegendOptions;
import com.pulumi.aws.quicksight.outputs.VisualPalette;
import com.pulumi.aws.quicksight.outputs.VisualsWaterfallVisualChartConfigurationFieldWells;
import com.pulumi.aws.quicksight.outputs.VisualsWaterfallVisualChartConfigurationSortConfiguration;
import com.pulumi.aws.quicksight.outputs.VisualsWaterfallVisualChartConfigurationWaterfallChartOptions;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VisualsWaterfallVisualChartConfiguration {
    private @Nullable AxisDisplayOptions categoryAxisDisplayOptions;
    private @Nullable ChartAxisLabelOptions categoryAxisLabelOptions;
    private @Nullable DataLabelsOptions dataLabels;
    private @Nullable VisualsWaterfallVisualChartConfigurationFieldWells fieldWells;
    private @Nullable LegendOptions legend;
    private @Nullable AxisDisplayOptions primaryYAxisDisplayOptions;
    private @Nullable ChartAxisLabelOptions primaryYAxisLabelOptions;
    private @Nullable VisualsWaterfallVisualChartConfigurationSortConfiguration sortConfiguration;
    private @Nullable VisualPalette visualPalette;
    private @Nullable VisualsWaterfallVisualChartConfigurationWaterfallChartOptions waterfallChartOptions;

    private VisualsWaterfallVisualChartConfiguration() {}
    public Optional<AxisDisplayOptions> categoryAxisDisplayOptions() {
        return Optional.ofNullable(this.categoryAxisDisplayOptions);
    }
    public Optional<ChartAxisLabelOptions> categoryAxisLabelOptions() {
        return Optional.ofNullable(this.categoryAxisLabelOptions);
    }
    public Optional<DataLabelsOptions> dataLabels() {
        return Optional.ofNullable(this.dataLabels);
    }
    public Optional<VisualsWaterfallVisualChartConfigurationFieldWells> fieldWells() {
        return Optional.ofNullable(this.fieldWells);
    }
    public Optional<LegendOptions> legend() {
        return Optional.ofNullable(this.legend);
    }
    public Optional<AxisDisplayOptions> primaryYAxisDisplayOptions() {
        return Optional.ofNullable(this.primaryYAxisDisplayOptions);
    }
    public Optional<ChartAxisLabelOptions> primaryYAxisLabelOptions() {
        return Optional.ofNullable(this.primaryYAxisLabelOptions);
    }
    public Optional<VisualsWaterfallVisualChartConfigurationSortConfiguration> sortConfiguration() {
        return Optional.ofNullable(this.sortConfiguration);
    }
    public Optional<VisualPalette> visualPalette() {
        return Optional.ofNullable(this.visualPalette);
    }
    public Optional<VisualsWaterfallVisualChartConfigurationWaterfallChartOptions> waterfallChartOptions() {
        return Optional.ofNullable(this.waterfallChartOptions);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VisualsWaterfallVisualChartConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable AxisDisplayOptions categoryAxisDisplayOptions;
        private @Nullable ChartAxisLabelOptions categoryAxisLabelOptions;
        private @Nullable DataLabelsOptions dataLabels;
        private @Nullable VisualsWaterfallVisualChartConfigurationFieldWells fieldWells;
        private @Nullable LegendOptions legend;
        private @Nullable AxisDisplayOptions primaryYAxisDisplayOptions;
        private @Nullable ChartAxisLabelOptions primaryYAxisLabelOptions;
        private @Nullable VisualsWaterfallVisualChartConfigurationSortConfiguration sortConfiguration;
        private @Nullable VisualPalette visualPalette;
        private @Nullable VisualsWaterfallVisualChartConfigurationWaterfallChartOptions waterfallChartOptions;
        public Builder() {}
        public Builder(VisualsWaterfallVisualChartConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.categoryAxisDisplayOptions = defaults.categoryAxisDisplayOptions;
    	      this.categoryAxisLabelOptions = defaults.categoryAxisLabelOptions;
    	      this.dataLabels = defaults.dataLabels;
    	      this.fieldWells = defaults.fieldWells;
    	      this.legend = defaults.legend;
    	      this.primaryYAxisDisplayOptions = defaults.primaryYAxisDisplayOptions;
    	      this.primaryYAxisLabelOptions = defaults.primaryYAxisLabelOptions;
    	      this.sortConfiguration = defaults.sortConfiguration;
    	      this.visualPalette = defaults.visualPalette;
    	      this.waterfallChartOptions = defaults.waterfallChartOptions;
        }

        @CustomType.Setter
        public Builder categoryAxisDisplayOptions(@Nullable AxisDisplayOptions categoryAxisDisplayOptions) {

            this.categoryAxisDisplayOptions = categoryAxisDisplayOptions;
            return this;
        }
        @CustomType.Setter
        public Builder categoryAxisLabelOptions(@Nullable ChartAxisLabelOptions categoryAxisLabelOptions) {

            this.categoryAxisLabelOptions = categoryAxisLabelOptions;
            return this;
        }
        @CustomType.Setter
        public Builder dataLabels(@Nullable DataLabelsOptions dataLabels) {

            this.dataLabels = dataLabels;
            return this;
        }
        @CustomType.Setter
        public Builder fieldWells(@Nullable VisualsWaterfallVisualChartConfigurationFieldWells fieldWells) {

            this.fieldWells = fieldWells;
            return this;
        }
        @CustomType.Setter
        public Builder legend(@Nullable LegendOptions legend) {

            this.legend = legend;
            return this;
        }
        @CustomType.Setter
        public Builder primaryYAxisDisplayOptions(@Nullable AxisDisplayOptions primaryYAxisDisplayOptions) {

            this.primaryYAxisDisplayOptions = primaryYAxisDisplayOptions;
            return this;
        }
        @CustomType.Setter
        public Builder primaryYAxisLabelOptions(@Nullable ChartAxisLabelOptions primaryYAxisLabelOptions) {

            this.primaryYAxisLabelOptions = primaryYAxisLabelOptions;
            return this;
        }
        @CustomType.Setter
        public Builder sortConfiguration(@Nullable VisualsWaterfallVisualChartConfigurationSortConfiguration sortConfiguration) {

            this.sortConfiguration = sortConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder visualPalette(@Nullable VisualPalette visualPalette) {

            this.visualPalette = visualPalette;
            return this;
        }
        @CustomType.Setter
        public Builder waterfallChartOptions(@Nullable VisualsWaterfallVisualChartConfigurationWaterfallChartOptions waterfallChartOptions) {

            this.waterfallChartOptions = waterfallChartOptions;
            return this;
        }
        public VisualsWaterfallVisualChartConfiguration build() {
            final var _resultValue = new VisualsWaterfallVisualChartConfiguration();
            _resultValue.categoryAxisDisplayOptions = categoryAxisDisplayOptions;
            _resultValue.categoryAxisLabelOptions = categoryAxisLabelOptions;
            _resultValue.dataLabels = dataLabels;
            _resultValue.fieldWells = fieldWells;
            _resultValue.legend = legend;
            _resultValue.primaryYAxisDisplayOptions = primaryYAxisDisplayOptions;
            _resultValue.primaryYAxisLabelOptions = primaryYAxisLabelOptions;
            _resultValue.sortConfiguration = sortConfiguration;
            _resultValue.visualPalette = visualPalette;
            _resultValue.waterfallChartOptions = waterfallChartOptions;
            return _resultValue;
        }
    }
}
