// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appsync.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApiEventConfigAuthProviderLambdaAuthorizerConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApiEventConfigAuthProviderLambdaAuthorizerConfigArgs Empty = new ApiEventConfigAuthProviderLambdaAuthorizerConfigArgs();

    /**
     * TTL in seconds for the authorization result cache.
     * 
     */
    @Import(name="authorizerResultTtlInSeconds")
    private @Nullable Output<Integer> authorizerResultTtlInSeconds;

    /**
     * @return TTL in seconds for the authorization result cache.
     * 
     */
    public Optional<Output<Integer>> authorizerResultTtlInSeconds() {
        return Optional.ofNullable(this.authorizerResultTtlInSeconds);
    }

    /**
     * URI of the Lambda function for authorization.
     * 
     */
    @Import(name="authorizerUri", required=true)
    private Output<String> authorizerUri;

    /**
     * @return URI of the Lambda function for authorization.
     * 
     */
    public Output<String> authorizerUri() {
        return this.authorizerUri;
    }

    /**
     * Regular expression for identity validation.
     * 
     */
    @Import(name="identityValidationExpression")
    private @Nullable Output<String> identityValidationExpression;

    /**
     * @return Regular expression for identity validation.
     * 
     */
    public Optional<Output<String>> identityValidationExpression() {
        return Optional.ofNullable(this.identityValidationExpression);
    }

    private ApiEventConfigAuthProviderLambdaAuthorizerConfigArgs() {}

    private ApiEventConfigAuthProviderLambdaAuthorizerConfigArgs(ApiEventConfigAuthProviderLambdaAuthorizerConfigArgs $) {
        this.authorizerResultTtlInSeconds = $.authorizerResultTtlInSeconds;
        this.authorizerUri = $.authorizerUri;
        this.identityValidationExpression = $.identityValidationExpression;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiEventConfigAuthProviderLambdaAuthorizerConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiEventConfigAuthProviderLambdaAuthorizerConfigArgs $;

        public Builder() {
            $ = new ApiEventConfigAuthProviderLambdaAuthorizerConfigArgs();
        }

        public Builder(ApiEventConfigAuthProviderLambdaAuthorizerConfigArgs defaults) {
            $ = new ApiEventConfigAuthProviderLambdaAuthorizerConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authorizerResultTtlInSeconds TTL in seconds for the authorization result cache.
         * 
         * @return builder
         * 
         */
        public Builder authorizerResultTtlInSeconds(@Nullable Output<Integer> authorizerResultTtlInSeconds) {
            $.authorizerResultTtlInSeconds = authorizerResultTtlInSeconds;
            return this;
        }

        /**
         * @param authorizerResultTtlInSeconds TTL in seconds for the authorization result cache.
         * 
         * @return builder
         * 
         */
        public Builder authorizerResultTtlInSeconds(Integer authorizerResultTtlInSeconds) {
            return authorizerResultTtlInSeconds(Output.of(authorizerResultTtlInSeconds));
        }

        /**
         * @param authorizerUri URI of the Lambda function for authorization.
         * 
         * @return builder
         * 
         */
        public Builder authorizerUri(Output<String> authorizerUri) {
            $.authorizerUri = authorizerUri;
            return this;
        }

        /**
         * @param authorizerUri URI of the Lambda function for authorization.
         * 
         * @return builder
         * 
         */
        public Builder authorizerUri(String authorizerUri) {
            return authorizerUri(Output.of(authorizerUri));
        }

        /**
         * @param identityValidationExpression Regular expression for identity validation.
         * 
         * @return builder
         * 
         */
        public Builder identityValidationExpression(@Nullable Output<String> identityValidationExpression) {
            $.identityValidationExpression = identityValidationExpression;
            return this;
        }

        /**
         * @param identityValidationExpression Regular expression for identity validation.
         * 
         * @return builder
         * 
         */
        public Builder identityValidationExpression(String identityValidationExpression) {
            return identityValidationExpression(Output.of(identityValidationExpression));
        }

        public ApiEventConfigAuthProviderLambdaAuthorizerConfigArgs build() {
            if ($.authorizerUri == null) {
                throw new MissingRequiredPropertyException("ApiEventConfigAuthProviderLambdaAuthorizerConfigArgs", "authorizerUri");
            }
            return $;
        }
    }

}
