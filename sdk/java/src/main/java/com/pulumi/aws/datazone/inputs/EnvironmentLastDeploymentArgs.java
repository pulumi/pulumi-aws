// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.datazone.inputs;

import com.pulumi.aws.datazone.inputs.EnvironmentLastDeploymentFailureReasonArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class EnvironmentLastDeploymentArgs extends com.pulumi.resources.ResourceArgs {

    public static final EnvironmentLastDeploymentArgs Empty = new EnvironmentLastDeploymentArgs();

    @Import(name="deploymentId", required=true)
    private Output<String> deploymentId;

    public Output<String> deploymentId() {
        return this.deploymentId;
    }

    @Import(name="deploymentStatus", required=true)
    private Output<String> deploymentStatus;

    public Output<String> deploymentStatus() {
        return this.deploymentStatus;
    }

    @Import(name="deploymentType", required=true)
    private Output<String> deploymentType;

    public Output<String> deploymentType() {
        return this.deploymentType;
    }

    @Import(name="failureReasons", required=true)
    private Output<List<EnvironmentLastDeploymentFailureReasonArgs>> failureReasons;

    public Output<List<EnvironmentLastDeploymentFailureReasonArgs>> failureReasons() {
        return this.failureReasons;
    }

    @Import(name="isDeploymentComplete", required=true)
    private Output<Boolean> isDeploymentComplete;

    public Output<Boolean> isDeploymentComplete() {
        return this.isDeploymentComplete;
    }

    @Import(name="messages", required=true)
    private Output<List<String>> messages;

    public Output<List<String>> messages() {
        return this.messages;
    }

    private EnvironmentLastDeploymentArgs() {}

    private EnvironmentLastDeploymentArgs(EnvironmentLastDeploymentArgs $) {
        this.deploymentId = $.deploymentId;
        this.deploymentStatus = $.deploymentStatus;
        this.deploymentType = $.deploymentType;
        this.failureReasons = $.failureReasons;
        this.isDeploymentComplete = $.isDeploymentComplete;
        this.messages = $.messages;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnvironmentLastDeploymentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnvironmentLastDeploymentArgs $;

        public Builder() {
            $ = new EnvironmentLastDeploymentArgs();
        }

        public Builder(EnvironmentLastDeploymentArgs defaults) {
            $ = new EnvironmentLastDeploymentArgs(Objects.requireNonNull(defaults));
        }

        public Builder deploymentId(Output<String> deploymentId) {
            $.deploymentId = deploymentId;
            return this;
        }

        public Builder deploymentId(String deploymentId) {
            return deploymentId(Output.of(deploymentId));
        }

        public Builder deploymentStatus(Output<String> deploymentStatus) {
            $.deploymentStatus = deploymentStatus;
            return this;
        }

        public Builder deploymentStatus(String deploymentStatus) {
            return deploymentStatus(Output.of(deploymentStatus));
        }

        public Builder deploymentType(Output<String> deploymentType) {
            $.deploymentType = deploymentType;
            return this;
        }

        public Builder deploymentType(String deploymentType) {
            return deploymentType(Output.of(deploymentType));
        }

        public Builder failureReasons(Output<List<EnvironmentLastDeploymentFailureReasonArgs>> failureReasons) {
            $.failureReasons = failureReasons;
            return this;
        }

        public Builder failureReasons(List<EnvironmentLastDeploymentFailureReasonArgs> failureReasons) {
            return failureReasons(Output.of(failureReasons));
        }

        public Builder failureReasons(EnvironmentLastDeploymentFailureReasonArgs... failureReasons) {
            return failureReasons(List.of(failureReasons));
        }

        public Builder isDeploymentComplete(Output<Boolean> isDeploymentComplete) {
            $.isDeploymentComplete = isDeploymentComplete;
            return this;
        }

        public Builder isDeploymentComplete(Boolean isDeploymentComplete) {
            return isDeploymentComplete(Output.of(isDeploymentComplete));
        }

        public Builder messages(Output<List<String>> messages) {
            $.messages = messages;
            return this;
        }

        public Builder messages(List<String> messages) {
            return messages(Output.of(messages));
        }

        public Builder messages(String... messages) {
            return messages(List.of(messages));
        }

        public EnvironmentLastDeploymentArgs build() {
            if ($.deploymentId == null) {
                throw new MissingRequiredPropertyException("EnvironmentLastDeploymentArgs", "deploymentId");
            }
            if ($.deploymentStatus == null) {
                throw new MissingRequiredPropertyException("EnvironmentLastDeploymentArgs", "deploymentStatus");
            }
            if ($.deploymentType == null) {
                throw new MissingRequiredPropertyException("EnvironmentLastDeploymentArgs", "deploymentType");
            }
            if ($.failureReasons == null) {
                throw new MissingRequiredPropertyException("EnvironmentLastDeploymentArgs", "failureReasons");
            }
            if ($.isDeploymentComplete == null) {
                throw new MissingRequiredPropertyException("EnvironmentLastDeploymentArgs", "isDeploymentComplete");
            }
            if ($.messages == null) {
                throw new MissingRequiredPropertyException("EnvironmentLastDeploymentArgs", "messages");
            }
            return $;
        }
    }

}
