// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.fsx;

import com.pulumi.aws.fsx.inputs.OpenZfsVolumeNfsExportsArgs;
import com.pulumi.aws.fsx.inputs.OpenZfsVolumeOriginSnapshotArgs;
import com.pulumi.aws.fsx.inputs.OpenZfsVolumeUserAndGroupQuotaArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OpenZfsVolumeArgs extends com.pulumi.resources.ResourceArgs {

    public static final OpenZfsVolumeArgs Empty = new OpenZfsVolumeArgs();

    @Import(name="copyTagsToSnapshots")
    private @Nullable Output<Boolean> copyTagsToSnapshots;

    public Optional<Output<Boolean>> copyTagsToSnapshots() {
        return Optional.ofNullable(this.copyTagsToSnapshots);
    }

    @Import(name="dataCompressionType")
    private @Nullable Output<String> dataCompressionType;

    public Optional<Output<String>> dataCompressionType() {
        return Optional.ofNullable(this.dataCompressionType);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="nfsExports")
    private @Nullable Output<OpenZfsVolumeNfsExportsArgs> nfsExports;

    public Optional<Output<OpenZfsVolumeNfsExportsArgs>> nfsExports() {
        return Optional.ofNullable(this.nfsExports);
    }

    @Import(name="originSnapshot")
    private @Nullable Output<OpenZfsVolumeOriginSnapshotArgs> originSnapshot;

    public Optional<Output<OpenZfsVolumeOriginSnapshotArgs>> originSnapshot() {
        return Optional.ofNullable(this.originSnapshot);
    }

    @Import(name="parentVolumeId", required=true)
    private Output<String> parentVolumeId;

    public Output<String> parentVolumeId() {
        return this.parentVolumeId;
    }

    @Import(name="readOnly")
    private @Nullable Output<Boolean> readOnly;

    public Optional<Output<Boolean>> readOnly() {
        return Optional.ofNullable(this.readOnly);
    }

    @Import(name="recordSizeKib")
    private @Nullable Output<Integer> recordSizeKib;

    public Optional<Output<Integer>> recordSizeKib() {
        return Optional.ofNullable(this.recordSizeKib);
    }

    @Import(name="storageCapacityQuotaGib")
    private @Nullable Output<Integer> storageCapacityQuotaGib;

    public Optional<Output<Integer>> storageCapacityQuotaGib() {
        return Optional.ofNullable(this.storageCapacityQuotaGib);
    }

    @Import(name="storageCapacityReservationGib")
    private @Nullable Output<Integer> storageCapacityReservationGib;

    public Optional<Output<Integer>> storageCapacityReservationGib() {
        return Optional.ofNullable(this.storageCapacityReservationGib);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="userAndGroupQuotas")
    private @Nullable Output<List<OpenZfsVolumeUserAndGroupQuotaArgs>> userAndGroupQuotas;

    public Optional<Output<List<OpenZfsVolumeUserAndGroupQuotaArgs>>> userAndGroupQuotas() {
        return Optional.ofNullable(this.userAndGroupQuotas);
    }

    @Import(name="volumeType")
    private @Nullable Output<String> volumeType;

    public Optional<Output<String>> volumeType() {
        return Optional.ofNullable(this.volumeType);
    }

    private OpenZfsVolumeArgs() {}

    private OpenZfsVolumeArgs(OpenZfsVolumeArgs $) {
        this.copyTagsToSnapshots = $.copyTagsToSnapshots;
        this.dataCompressionType = $.dataCompressionType;
        this.name = $.name;
        this.nfsExports = $.nfsExports;
        this.originSnapshot = $.originSnapshot;
        this.parentVolumeId = $.parentVolumeId;
        this.readOnly = $.readOnly;
        this.recordSizeKib = $.recordSizeKib;
        this.storageCapacityQuotaGib = $.storageCapacityQuotaGib;
        this.storageCapacityReservationGib = $.storageCapacityReservationGib;
        this.tags = $.tags;
        this.userAndGroupQuotas = $.userAndGroupQuotas;
        this.volumeType = $.volumeType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OpenZfsVolumeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OpenZfsVolumeArgs $;

        public Builder() {
            $ = new OpenZfsVolumeArgs();
        }

        public Builder(OpenZfsVolumeArgs defaults) {
            $ = new OpenZfsVolumeArgs(Objects.requireNonNull(defaults));
        }

        public Builder copyTagsToSnapshots(@Nullable Output<Boolean> copyTagsToSnapshots) {
            $.copyTagsToSnapshots = copyTagsToSnapshots;
            return this;
        }

        public Builder copyTagsToSnapshots(Boolean copyTagsToSnapshots) {
            return copyTagsToSnapshots(Output.of(copyTagsToSnapshots));
        }

        public Builder dataCompressionType(@Nullable Output<String> dataCompressionType) {
            $.dataCompressionType = dataCompressionType;
            return this;
        }

        public Builder dataCompressionType(String dataCompressionType) {
            return dataCompressionType(Output.of(dataCompressionType));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder nfsExports(@Nullable Output<OpenZfsVolumeNfsExportsArgs> nfsExports) {
            $.nfsExports = nfsExports;
            return this;
        }

        public Builder nfsExports(OpenZfsVolumeNfsExportsArgs nfsExports) {
            return nfsExports(Output.of(nfsExports));
        }

        public Builder originSnapshot(@Nullable Output<OpenZfsVolumeOriginSnapshotArgs> originSnapshot) {
            $.originSnapshot = originSnapshot;
            return this;
        }

        public Builder originSnapshot(OpenZfsVolumeOriginSnapshotArgs originSnapshot) {
            return originSnapshot(Output.of(originSnapshot));
        }

        public Builder parentVolumeId(Output<String> parentVolumeId) {
            $.parentVolumeId = parentVolumeId;
            return this;
        }

        public Builder parentVolumeId(String parentVolumeId) {
            return parentVolumeId(Output.of(parentVolumeId));
        }

        public Builder readOnly(@Nullable Output<Boolean> readOnly) {
            $.readOnly = readOnly;
            return this;
        }

        public Builder readOnly(Boolean readOnly) {
            return readOnly(Output.of(readOnly));
        }

        public Builder recordSizeKib(@Nullable Output<Integer> recordSizeKib) {
            $.recordSizeKib = recordSizeKib;
            return this;
        }

        public Builder recordSizeKib(Integer recordSizeKib) {
            return recordSizeKib(Output.of(recordSizeKib));
        }

        public Builder storageCapacityQuotaGib(@Nullable Output<Integer> storageCapacityQuotaGib) {
            $.storageCapacityQuotaGib = storageCapacityQuotaGib;
            return this;
        }

        public Builder storageCapacityQuotaGib(Integer storageCapacityQuotaGib) {
            return storageCapacityQuotaGib(Output.of(storageCapacityQuotaGib));
        }

        public Builder storageCapacityReservationGib(@Nullable Output<Integer> storageCapacityReservationGib) {
            $.storageCapacityReservationGib = storageCapacityReservationGib;
            return this;
        }

        public Builder storageCapacityReservationGib(Integer storageCapacityReservationGib) {
            return storageCapacityReservationGib(Output.of(storageCapacityReservationGib));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder userAndGroupQuotas(@Nullable Output<List<OpenZfsVolumeUserAndGroupQuotaArgs>> userAndGroupQuotas) {
            $.userAndGroupQuotas = userAndGroupQuotas;
            return this;
        }

        public Builder userAndGroupQuotas(List<OpenZfsVolumeUserAndGroupQuotaArgs> userAndGroupQuotas) {
            return userAndGroupQuotas(Output.of(userAndGroupQuotas));
        }

        public Builder userAndGroupQuotas(OpenZfsVolumeUserAndGroupQuotaArgs... userAndGroupQuotas) {
            return userAndGroupQuotas(List.of(userAndGroupQuotas));
        }

        public Builder volumeType(@Nullable Output<String> volumeType) {
            $.volumeType = volumeType;
            return this;
        }

        public Builder volumeType(String volumeType) {
            return volumeType(Output.of(volumeType));
        }

        public OpenZfsVolumeArgs build() {
            $.parentVolumeId = Objects.requireNonNull($.parentVolumeId, "expected parameter 'parentVolumeId' to be non-null");
            return $;
        }
    }

}
