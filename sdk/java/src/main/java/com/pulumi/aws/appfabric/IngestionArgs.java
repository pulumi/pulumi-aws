// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appfabric;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IngestionArgs extends com.pulumi.resources.ResourceArgs {

    public static final IngestionArgs Empty = new IngestionArgs();

    /**
     * Name of the application.
     * Refer to the AWS Documentation for the [list of valid values](https://docs.aws.amazon.com/appfabric/latest/api/API_CreateIngestion.html#appfabric-CreateIngestion-request-app)
     * 
     */
    @Import(name="app", required=true)
    private Output<String> app;

    /**
     * @return Name of the application.
     * Refer to the AWS Documentation for the [list of valid values](https://docs.aws.amazon.com/appfabric/latest/api/API_CreateIngestion.html#appfabric-CreateIngestion-request-app)
     * 
     */
    public Output<String> app() {
        return this.app;
    }

    /**
     * Amazon Resource Name (ARN) of the app bundle to use for the request.
     * 
     */
    @Import(name="appBundleArn", required=true)
    private Output<String> appBundleArn;

    /**
     * @return Amazon Resource Name (ARN) of the app bundle to use for the request.
     * 
     */
    public Output<String> appBundleArn() {
        return this.appBundleArn;
    }

    /**
     * Ingestion type. Valid values are `auditLog`.
     * 
     */
    @Import(name="ingestionType", required=true)
    private Output<String> ingestionType;

    /**
     * @return Ingestion type. Valid values are `auditLog`.
     * 
     */
    public Output<String> ingestionType() {
        return this.ingestionType;
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * ID of the application tenant.
     * 
     */
    @Import(name="tenantId", required=true)
    private Output<String> tenantId;

    /**
     * @return ID of the application tenant.
     * 
     */
    public Output<String> tenantId() {
        return this.tenantId;
    }

    private IngestionArgs() {}

    private IngestionArgs(IngestionArgs $) {
        this.app = $.app;
        this.appBundleArn = $.appBundleArn;
        this.ingestionType = $.ingestionType;
        this.tags = $.tags;
        this.tenantId = $.tenantId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IngestionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IngestionArgs $;

        public Builder() {
            $ = new IngestionArgs();
        }

        public Builder(IngestionArgs defaults) {
            $ = new IngestionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param app Name of the application.
         * Refer to the AWS Documentation for the [list of valid values](https://docs.aws.amazon.com/appfabric/latest/api/API_CreateIngestion.html#appfabric-CreateIngestion-request-app)
         * 
         * @return builder
         * 
         */
        public Builder app(Output<String> app) {
            $.app = app;
            return this;
        }

        /**
         * @param app Name of the application.
         * Refer to the AWS Documentation for the [list of valid values](https://docs.aws.amazon.com/appfabric/latest/api/API_CreateIngestion.html#appfabric-CreateIngestion-request-app)
         * 
         * @return builder
         * 
         */
        public Builder app(String app) {
            return app(Output.of(app));
        }

        /**
         * @param appBundleArn Amazon Resource Name (ARN) of the app bundle to use for the request.
         * 
         * @return builder
         * 
         */
        public Builder appBundleArn(Output<String> appBundleArn) {
            $.appBundleArn = appBundleArn;
            return this;
        }

        /**
         * @param appBundleArn Amazon Resource Name (ARN) of the app bundle to use for the request.
         * 
         * @return builder
         * 
         */
        public Builder appBundleArn(String appBundleArn) {
            return appBundleArn(Output.of(appBundleArn));
        }

        /**
         * @param ingestionType Ingestion type. Valid values are `auditLog`.
         * 
         * @return builder
         * 
         */
        public Builder ingestionType(Output<String> ingestionType) {
            $.ingestionType = ingestionType;
            return this;
        }

        /**
         * @param ingestionType Ingestion type. Valid values are `auditLog`.
         * 
         * @return builder
         * 
         */
        public Builder ingestionType(String ingestionType) {
            return ingestionType(Output.of(ingestionType));
        }

        /**
         * @param tags Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tenantId ID of the application tenant.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(Output<String> tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        /**
         * @param tenantId ID of the application tenant.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(String tenantId) {
            return tenantId(Output.of(tenantId));
        }

        public IngestionArgs build() {
            if ($.app == null) {
                throw new MissingRequiredPropertyException("IngestionArgs", "app");
            }
            if ($.appBundleArn == null) {
                throw new MissingRequiredPropertyException("IngestionArgs", "appBundleArn");
            }
            if ($.ingestionType == null) {
                throw new MissingRequiredPropertyException("IngestionArgs", "ingestionType");
            }
            if ($.tenantId == null) {
                throw new MissingRequiredPropertyException("IngestionArgs", "tenantId");
            }
            return $;
        }
    }

}
