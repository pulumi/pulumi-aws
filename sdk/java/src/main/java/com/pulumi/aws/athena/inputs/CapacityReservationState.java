// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.athena.inputs;

import com.pulumi.aws.athena.inputs.CapacityReservationTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CapacityReservationState extends com.pulumi.resources.ResourceArgs {

    public static final CapacityReservationState Empty = new CapacityReservationState();

    /**
     * Number of data processing units currently allocated.
     * 
     */
    @Import(name="allocatedDpus")
    private @Nullable Output<Integer> allocatedDpus;

    /**
     * @return Number of data processing units currently allocated.
     * 
     */
    public Optional<Output<Integer>> allocatedDpus() {
        return Optional.ofNullable(this.allocatedDpus);
    }

    /**
     * ARN of the Capacity Reservation.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return ARN of the Capacity Reservation.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * Name of the capacity reservation.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the capacity reservation.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Status of the capacity reservation.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Status of the capacity reservation.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @return Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    /**
     * Number of data processing units requested. Must be at least `24` units.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="targetDpus")
    private @Nullable Output<Integer> targetDpus;

    /**
     * @return Number of data processing units requested. Must be at least `24` units.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<Integer>> targetDpus() {
        return Optional.ofNullable(this.targetDpus);
    }

    @Import(name="timeouts")
    private @Nullable Output<CapacityReservationTimeoutsArgs> timeouts;

    public Optional<Output<CapacityReservationTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private CapacityReservationState() {}

    private CapacityReservationState(CapacityReservationState $) {
        this.allocatedDpus = $.allocatedDpus;
        this.arn = $.arn;
        this.name = $.name;
        this.status = $.status;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.targetDpus = $.targetDpus;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CapacityReservationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CapacityReservationState $;

        public Builder() {
            $ = new CapacityReservationState();
        }

        public Builder(CapacityReservationState defaults) {
            $ = new CapacityReservationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param allocatedDpus Number of data processing units currently allocated.
         * 
         * @return builder
         * 
         */
        public Builder allocatedDpus(@Nullable Output<Integer> allocatedDpus) {
            $.allocatedDpus = allocatedDpus;
            return this;
        }

        /**
         * @param allocatedDpus Number of data processing units currently allocated.
         * 
         * @return builder
         * 
         */
        public Builder allocatedDpus(Integer allocatedDpus) {
            return allocatedDpus(Output.of(allocatedDpus));
        }

        /**
         * @param arn ARN of the Capacity Reservation.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn ARN of the Capacity Reservation.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param name Name of the capacity reservation.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the capacity reservation.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param status Status of the capacity reservation.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Status of the capacity reservation.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param tags Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tagsAll Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @param tagsAll Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        /**
         * @param targetDpus Number of data processing units requested. Must be at least `24` units.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder targetDpus(@Nullable Output<Integer> targetDpus) {
            $.targetDpus = targetDpus;
            return this;
        }

        /**
         * @param targetDpus Number of data processing units requested. Must be at least `24` units.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder targetDpus(Integer targetDpus) {
            return targetDpus(Output.of(targetDpus));
        }

        public Builder timeouts(@Nullable Output<CapacityReservationTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(CapacityReservationTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public CapacityReservationState build() {
            return $;
        }
    }

}
