// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.mq.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BrokerLdapServerMetadataArgs extends com.pulumi.resources.ResourceArgs {

    public static final BrokerLdapServerMetadataArgs Empty = new BrokerLdapServerMetadataArgs();

    @Import(name="hosts")
    private @Nullable Output<List<String>> hosts;

    public Optional<Output<List<String>>> hosts() {
        return Optional.ofNullable(this.hosts);
    }

    @Import(name="roleBase")
    private @Nullable Output<String> roleBase;

    public Optional<Output<String>> roleBase() {
        return Optional.ofNullable(this.roleBase);
    }

    @Import(name="roleName")
    private @Nullable Output<String> roleName;

    public Optional<Output<String>> roleName() {
        return Optional.ofNullable(this.roleName);
    }

    @Import(name="roleSearchMatching")
    private @Nullable Output<String> roleSearchMatching;

    public Optional<Output<String>> roleSearchMatching() {
        return Optional.ofNullable(this.roleSearchMatching);
    }

    @Import(name="roleSearchSubtree")
    private @Nullable Output<Boolean> roleSearchSubtree;

    public Optional<Output<Boolean>> roleSearchSubtree() {
        return Optional.ofNullable(this.roleSearchSubtree);
    }

    @Import(name="serviceAccountPassword")
    private @Nullable Output<String> serviceAccountPassword;

    public Optional<Output<String>> serviceAccountPassword() {
        return Optional.ofNullable(this.serviceAccountPassword);
    }

    @Import(name="serviceAccountUsername")
    private @Nullable Output<String> serviceAccountUsername;

    public Optional<Output<String>> serviceAccountUsername() {
        return Optional.ofNullable(this.serviceAccountUsername);
    }

    @Import(name="userBase")
    private @Nullable Output<String> userBase;

    public Optional<Output<String>> userBase() {
        return Optional.ofNullable(this.userBase);
    }

    @Import(name="userRoleName")
    private @Nullable Output<String> userRoleName;

    public Optional<Output<String>> userRoleName() {
        return Optional.ofNullable(this.userRoleName);
    }

    @Import(name="userSearchMatching")
    private @Nullable Output<String> userSearchMatching;

    public Optional<Output<String>> userSearchMatching() {
        return Optional.ofNullable(this.userSearchMatching);
    }

    @Import(name="userSearchSubtree")
    private @Nullable Output<Boolean> userSearchSubtree;

    public Optional<Output<Boolean>> userSearchSubtree() {
        return Optional.ofNullable(this.userSearchSubtree);
    }

    private BrokerLdapServerMetadataArgs() {}

    private BrokerLdapServerMetadataArgs(BrokerLdapServerMetadataArgs $) {
        this.hosts = $.hosts;
        this.roleBase = $.roleBase;
        this.roleName = $.roleName;
        this.roleSearchMatching = $.roleSearchMatching;
        this.roleSearchSubtree = $.roleSearchSubtree;
        this.serviceAccountPassword = $.serviceAccountPassword;
        this.serviceAccountUsername = $.serviceAccountUsername;
        this.userBase = $.userBase;
        this.userRoleName = $.userRoleName;
        this.userSearchMatching = $.userSearchMatching;
        this.userSearchSubtree = $.userSearchSubtree;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BrokerLdapServerMetadataArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BrokerLdapServerMetadataArgs $;

        public Builder() {
            $ = new BrokerLdapServerMetadataArgs();
        }

        public Builder(BrokerLdapServerMetadataArgs defaults) {
            $ = new BrokerLdapServerMetadataArgs(Objects.requireNonNull(defaults));
        }

        public Builder hosts(@Nullable Output<List<String>> hosts) {
            $.hosts = hosts;
            return this;
        }

        public Builder hosts(List<String> hosts) {
            return hosts(Output.of(hosts));
        }

        public Builder hosts(String... hosts) {
            return hosts(List.of(hosts));
        }

        public Builder roleBase(@Nullable Output<String> roleBase) {
            $.roleBase = roleBase;
            return this;
        }

        public Builder roleBase(String roleBase) {
            return roleBase(Output.of(roleBase));
        }

        public Builder roleName(@Nullable Output<String> roleName) {
            $.roleName = roleName;
            return this;
        }

        public Builder roleName(String roleName) {
            return roleName(Output.of(roleName));
        }

        public Builder roleSearchMatching(@Nullable Output<String> roleSearchMatching) {
            $.roleSearchMatching = roleSearchMatching;
            return this;
        }

        public Builder roleSearchMatching(String roleSearchMatching) {
            return roleSearchMatching(Output.of(roleSearchMatching));
        }

        public Builder roleSearchSubtree(@Nullable Output<Boolean> roleSearchSubtree) {
            $.roleSearchSubtree = roleSearchSubtree;
            return this;
        }

        public Builder roleSearchSubtree(Boolean roleSearchSubtree) {
            return roleSearchSubtree(Output.of(roleSearchSubtree));
        }

        public Builder serviceAccountPassword(@Nullable Output<String> serviceAccountPassword) {
            $.serviceAccountPassword = serviceAccountPassword;
            return this;
        }

        public Builder serviceAccountPassword(String serviceAccountPassword) {
            return serviceAccountPassword(Output.of(serviceAccountPassword));
        }

        public Builder serviceAccountUsername(@Nullable Output<String> serviceAccountUsername) {
            $.serviceAccountUsername = serviceAccountUsername;
            return this;
        }

        public Builder serviceAccountUsername(String serviceAccountUsername) {
            return serviceAccountUsername(Output.of(serviceAccountUsername));
        }

        public Builder userBase(@Nullable Output<String> userBase) {
            $.userBase = userBase;
            return this;
        }

        public Builder userBase(String userBase) {
            return userBase(Output.of(userBase));
        }

        public Builder userRoleName(@Nullable Output<String> userRoleName) {
            $.userRoleName = userRoleName;
            return this;
        }

        public Builder userRoleName(String userRoleName) {
            return userRoleName(Output.of(userRoleName));
        }

        public Builder userSearchMatching(@Nullable Output<String> userSearchMatching) {
            $.userSearchMatching = userSearchMatching;
            return this;
        }

        public Builder userSearchMatching(String userSearchMatching) {
            return userSearchMatching(Output.of(userSearchMatching));
        }

        public Builder userSearchSubtree(@Nullable Output<Boolean> userSearchSubtree) {
            $.userSearchSubtree = userSearchSubtree;
            return this;
        }

        public Builder userSearchSubtree(Boolean userSearchSubtree) {
            return userSearchSubtree(Output.of(userSearchSubtree));
        }

        public BrokerLdapServerMetadataArgs build() {
            return $;
        }
    }

}
