// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.location.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetRouteCalculatorResult {
    /**
     * @return ARN for the Route calculator resource. Use the ARN when you specify a resource across AWS.
     * 
     */
    private String calculatorArn;
    private String calculatorName;
    /**
     * @return Timestamp for when the route calculator resource was created in ISO 8601 format.
     * 
     */
    private String createTime;
    /**
     * @return Data provider of traffic and road network data.
     * 
     */
    private String dataSource;
    /**
     * @return Optional description of the route calculator resource.
     * 
     */
    private String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Key-value map of resource tags for the route calculator.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return Timestamp for when the route calculator resource was last updated in ISO 8601 format.
     * 
     */
    private String updateTime;

    private GetRouteCalculatorResult() {}
    /**
     * @return ARN for the Route calculator resource. Use the ARN when you specify a resource across AWS.
     * 
     */
    public String calculatorArn() {
        return this.calculatorArn;
    }
    public String calculatorName() {
        return this.calculatorName;
    }
    /**
     * @return Timestamp for when the route calculator resource was created in ISO 8601 format.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return Data provider of traffic and road network data.
     * 
     */
    public String dataSource() {
        return this.dataSource;
    }
    /**
     * @return Optional description of the route calculator resource.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Key-value map of resource tags for the route calculator.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return Timestamp for when the route calculator resource was last updated in ISO 8601 format.
     * 
     */
    public String updateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRouteCalculatorResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String calculatorArn;
        private String calculatorName;
        private String createTime;
        private String dataSource;
        private String description;
        private String id;
        private Map<String,String> tags;
        private String updateTime;
        public Builder() {}
        public Builder(GetRouteCalculatorResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.calculatorArn = defaults.calculatorArn;
    	      this.calculatorName = defaults.calculatorName;
    	      this.createTime = defaults.createTime;
    	      this.dataSource = defaults.dataSource;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.tags = defaults.tags;
    	      this.updateTime = defaults.updateTime;
        }

        @CustomType.Setter
        public Builder calculatorArn(String calculatorArn) {
            this.calculatorArn = Objects.requireNonNull(calculatorArn);
            return this;
        }
        @CustomType.Setter
        public Builder calculatorName(String calculatorName) {
            this.calculatorName = Objects.requireNonNull(calculatorName);
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        @CustomType.Setter
        public Builder dataSource(String dataSource) {
            this.dataSource = Objects.requireNonNull(dataSource);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder updateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }
        public GetRouteCalculatorResult build() {
            final var o = new GetRouteCalculatorResult();
            o.calculatorArn = calculatorArn;
            o.calculatorName = calculatorName;
            o.createTime = createTime;
            o.dataSource = dataSource;
            o.description = description;
            o.id = id;
            o.tags = tags;
            o.updateTime = updateTime;
            return o;
        }
    }
}
