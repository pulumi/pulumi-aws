// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.location.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRouteCalculatorResult {
    /**
     * @return ARN for the Route calculator resource. Use the ARN when you specify a resource across AWS.
     * 
     */
    private @Nullable String calculatorArn;
    private String calculatorName;
    /**
     * @return Timestamp for when the route calculator resource was created in ISO 8601 format.
     * 
     */
    private @Nullable String createTime;
    /**
     * @return Data provider of traffic and road network data.
     * 
     */
    private @Nullable String dataSource;
    /**
     * @return Optional description of the route calculator resource.
     * 
     */
    private @Nullable String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return Key-value map of resource tags for the route calculator.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Timestamp for when the route calculator resource was last updated in ISO 8601 format.
     * 
     */
    private @Nullable String updateTime;

    private GetRouteCalculatorResult() {}
    /**
     * @return ARN for the Route calculator resource. Use the ARN when you specify a resource across AWS.
     * 
     */
    public Optional<String> calculatorArn() {
        return Optional.ofNullable(this.calculatorArn);
    }
    public String calculatorName() {
        return this.calculatorName;
    }
    /**
     * @return Timestamp for when the route calculator resource was created in ISO 8601 format.
     * 
     */
    public Optional<String> createTime() {
        return Optional.ofNullable(this.createTime);
    }
    /**
     * @return Data provider of traffic and road network data.
     * 
     */
    public Optional<String> dataSource() {
        return Optional.ofNullable(this.dataSource);
    }
    /**
     * @return Optional description of the route calculator resource.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Key-value map of resource tags for the route calculator.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Timestamp for when the route calculator resource was last updated in ISO 8601 format.
     * 
     */
    public Optional<String> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRouteCalculatorResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String calculatorArn;
        private String calculatorName;
        private @Nullable String createTime;
        private @Nullable String dataSource;
        private @Nullable String description;
        private @Nullable String id;
        private @Nullable Map<String,String> tags;
        private @Nullable String updateTime;
        public Builder() {}
        public Builder(GetRouteCalculatorResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.calculatorArn = defaults.calculatorArn;
    	      this.calculatorName = defaults.calculatorName;
    	      this.createTime = defaults.createTime;
    	      this.dataSource = defaults.dataSource;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.tags = defaults.tags;
    	      this.updateTime = defaults.updateTime;
        }

        @CustomType.Setter
        public Builder calculatorArn(@Nullable String calculatorArn) {
            this.calculatorArn = calculatorArn;
            return this;
        }
        @CustomType.Setter
        public Builder calculatorName(String calculatorName) {
            this.calculatorName = Objects.requireNonNull(calculatorName);
            return this;
        }
        @CustomType.Setter
        public Builder createTime(@Nullable String createTime) {
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder dataSource(@Nullable String dataSource) {
            this.dataSource = dataSource;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder updateTime(@Nullable String updateTime) {
            this.updateTime = updateTime;
            return this;
        }
        public GetRouteCalculatorResult build() {
            final var o = new GetRouteCalculatorResult();
            o.calculatorArn = calculatorArn;
            o.calculatorName = calculatorName;
            o.createTime = createTime;
            o.dataSource = dataSource;
            o.description = description;
            o.id = id;
            o.tags = tags;
            o.updateTime = updateTime;
            return o;
        }
    }
}
