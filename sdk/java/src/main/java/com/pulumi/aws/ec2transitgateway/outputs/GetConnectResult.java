// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2transitgateway.outputs;

import com.pulumi.aws.ec2transitgateway.outputs.GetConnectFilter;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetConnectResult {
    private @Nullable List<GetConnectFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Tunnel protocol
     * 
     */
    private String protocol;
    /**
     * @return Key-value tags for the EC2 Transit Gateway Connect
     * 
     */
    private Map<String,String> tags;
    private String transitGatewayConnectId;
    /**
     * @return EC2 Transit Gateway identifier
     * 
     */
    private String transitGatewayId;
    /**
     * @return The underlaying VPC attachment
     * 
     */
    private String transportAttachmentId;

    private GetConnectResult() {}
    public List<GetConnectFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Tunnel protocol
     * 
     */
    public String protocol() {
        return this.protocol;
    }
    /**
     * @return Key-value tags for the EC2 Transit Gateway Connect
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    public String transitGatewayConnectId() {
        return this.transitGatewayConnectId;
    }
    /**
     * @return EC2 Transit Gateway identifier
     * 
     */
    public String transitGatewayId() {
        return this.transitGatewayId;
    }
    /**
     * @return The underlaying VPC attachment
     * 
     */
    public String transportAttachmentId() {
        return this.transportAttachmentId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConnectResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetConnectFilter> filters;
        private String id;
        private String protocol;
        private Map<String,String> tags;
        private String transitGatewayConnectId;
        private String transitGatewayId;
        private String transportAttachmentId;
        public Builder() {}
        public Builder(GetConnectResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.protocol = defaults.protocol;
    	      this.tags = defaults.tags;
    	      this.transitGatewayConnectId = defaults.transitGatewayConnectId;
    	      this.transitGatewayId = defaults.transitGatewayId;
    	      this.transportAttachmentId = defaults.transportAttachmentId;
        }

        @CustomType.Setter
        public Builder filters(@Nullable List<GetConnectFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetConnectFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder protocol(String protocol) {
            this.protocol = Objects.requireNonNull(protocol);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder transitGatewayConnectId(String transitGatewayConnectId) {
            this.transitGatewayConnectId = Objects.requireNonNull(transitGatewayConnectId);
            return this;
        }
        @CustomType.Setter
        public Builder transitGatewayId(String transitGatewayId) {
            this.transitGatewayId = Objects.requireNonNull(transitGatewayId);
            return this;
        }
        @CustomType.Setter
        public Builder transportAttachmentId(String transportAttachmentId) {
            this.transportAttachmentId = Objects.requireNonNull(transportAttachmentId);
            return this;
        }
        public GetConnectResult build() {
            final var _resultValue = new GetConnectResult();
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.protocol = protocol;
            _resultValue.tags = tags;
            _resultValue.transitGatewayConnectId = transitGatewayConnectId;
            _resultValue.transitGatewayId = transitGatewayId;
            _resultValue.transportAttachmentId = transportAttachmentId;
            return _resultValue;
        }
    }
}
