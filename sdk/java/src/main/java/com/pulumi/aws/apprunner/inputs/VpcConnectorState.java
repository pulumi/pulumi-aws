// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apprunner.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpcConnectorState extends com.pulumi.resources.ResourceArgs {

    public static final VpcConnectorState Empty = new VpcConnectorState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="securityGroups")
    private @Nullable Output<List<String>> securityGroups;

    public Optional<Output<List<String>>> securityGroups() {
        return Optional.ofNullable(this.securityGroups);
    }

    @Import(name="status")
    private @Nullable Output<String> status;

    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    @Import(name="subnets")
    private @Nullable Output<List<String>> subnets;

    public Optional<Output<List<String>>> subnets() {
        return Optional.ofNullable(this.subnets);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="vpcConnectorName")
    private @Nullable Output<String> vpcConnectorName;

    public Optional<Output<String>> vpcConnectorName() {
        return Optional.ofNullable(this.vpcConnectorName);
    }

    @Import(name="vpcConnectorRevision")
    private @Nullable Output<Integer> vpcConnectorRevision;

    public Optional<Output<Integer>> vpcConnectorRevision() {
        return Optional.ofNullable(this.vpcConnectorRevision);
    }

    private VpcConnectorState() {}

    private VpcConnectorState(VpcConnectorState $) {
        this.arn = $.arn;
        this.securityGroups = $.securityGroups;
        this.status = $.status;
        this.subnets = $.subnets;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.vpcConnectorName = $.vpcConnectorName;
        this.vpcConnectorRevision = $.vpcConnectorRevision;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpcConnectorState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpcConnectorState $;

        public Builder() {
            $ = new VpcConnectorState();
        }

        public Builder(VpcConnectorState defaults) {
            $ = new VpcConnectorState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder securityGroups(@Nullable Output<List<String>> securityGroups) {
            $.securityGroups = securityGroups;
            return this;
        }

        public Builder securityGroups(List<String> securityGroups) {
            return securityGroups(Output.of(securityGroups));
        }

        public Builder securityGroups(String... securityGroups) {
            return securityGroups(List.of(securityGroups));
        }

        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        public Builder status(String status) {
            return status(Output.of(status));
        }

        public Builder subnets(@Nullable Output<List<String>> subnets) {
            $.subnets = subnets;
            return this;
        }

        public Builder subnets(List<String> subnets) {
            return subnets(Output.of(subnets));
        }

        public Builder subnets(String... subnets) {
            return subnets(List.of(subnets));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder vpcConnectorName(@Nullable Output<String> vpcConnectorName) {
            $.vpcConnectorName = vpcConnectorName;
            return this;
        }

        public Builder vpcConnectorName(String vpcConnectorName) {
            return vpcConnectorName(Output.of(vpcConnectorName));
        }

        public Builder vpcConnectorRevision(@Nullable Output<Integer> vpcConnectorRevision) {
            $.vpcConnectorRevision = vpcConnectorRevision;
            return this;
        }

        public Builder vpcConnectorRevision(Integer vpcConnectorRevision) {
            return vpcConnectorRevision(Output.of(vpcConnectorRevision));
        }

        public VpcConnectorState build() {
            return $;
        }
    }

}
