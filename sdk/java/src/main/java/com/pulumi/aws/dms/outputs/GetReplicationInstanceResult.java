// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dms.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetReplicationInstanceResult {
    /**
     * @return (Default: 50, Min: 5, Max: 6144) The amount of storage (in gigabytes) to be initially allocated for the replication instance.
     * 
     */
    private Integer allocatedStorage;
    /**
     * @return (Default: false) Indicates that major version upgrades are allowed.
     * 
     */
    private Boolean allowMajorVersionUpgrade;
    /**
     * @return (Default: false) Indicates whether the changes should be applied immediately or during the next maintenance window. Only used when updating an existing resource.
     * 
     */
    private Boolean applyImmediately;
    /**
     * @return (Default: false) Indicates that minor engine upgrades will be applied automatically to the replication instance during the maintenance window.
     * 
     */
    private Boolean autoMinorVersionUpgrade;
    /**
     * @return The EC2 Availability Zone that the replication instance will be created in.
     * 
     */
    private String availabilityZone;
    /**
     * @return The engine version number of the replication instance.
     * 
     */
    private String engineVersion;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The Amazon Resource Name (ARN) for the KMS key that will be used to encrypt the connection parameters. If you do not specify a value for `kms_key_arn`, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.
     * 
     */
    private String kmsKeyArn;
    /**
     * @return Specifies if the replication instance is a multi-az deployment. You cannot set the `availability_zone` parameter if the `multi_az` parameter is set to `true`.
     * 
     */
    private Boolean multiAz;
    /**
     * @return The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
     * 
     */
    private String preferredMaintenanceWindow;
    /**
     * @return (Default: false) Specifies the accessibility options for the replication instance. A value of true represents an instance with a public IP address. A value of false represents an instance with a private IP address.
     * 
     */
    private Boolean publiclyAccessible;
    /**
     * @return The Amazon Resource Name (ARN) of the replication instance.
     * 
     */
    private String replicationInstanceArn;
    /**
     * @return The compute and memory capacity of the replication instance as specified by the replication instance class. See [AWS DMS User Guide](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.Types.html) for available instance sizes and advice on which one to choose.
     * 
     */
    private String replicationInstanceClass;
    private String replicationInstanceId;
    /**
     * @return A list of the private IP addresses of the replication instance.
     * 
     */
    private List<String> replicationInstancePrivateIps;
    /**
     * @return A list of the public IP addresses of the replication instance.
     * 
     */
    private List<String> replicationInstancePublicIps;
    /**
     * @return (Optional) A subnet group to associate with the replication instance.
     * 
     */
    private String replicationSubnetGroupId;
    private Map<String,String> tags;
    /**
     * @return (Optional) A list of VPC security group IDs to be used with the replication instance. The VPC security groups must work with the VPC containing the replication instance.
     * 
     */
    private List<String> vpcSecurityGroupIds;

    private GetReplicationInstanceResult() {}
    /**
     * @return (Default: 50, Min: 5, Max: 6144) The amount of storage (in gigabytes) to be initially allocated for the replication instance.
     * 
     */
    public Integer allocatedStorage() {
        return this.allocatedStorage;
    }
    /**
     * @return (Default: false) Indicates that major version upgrades are allowed.
     * 
     */
    public Boolean allowMajorVersionUpgrade() {
        return this.allowMajorVersionUpgrade;
    }
    /**
     * @return (Default: false) Indicates whether the changes should be applied immediately or during the next maintenance window. Only used when updating an existing resource.
     * 
     */
    public Boolean applyImmediately() {
        return this.applyImmediately;
    }
    /**
     * @return (Default: false) Indicates that minor engine upgrades will be applied automatically to the replication instance during the maintenance window.
     * 
     */
    public Boolean autoMinorVersionUpgrade() {
        return this.autoMinorVersionUpgrade;
    }
    /**
     * @return The EC2 Availability Zone that the replication instance will be created in.
     * 
     */
    public String availabilityZone() {
        return this.availabilityZone;
    }
    /**
     * @return The engine version number of the replication instance.
     * 
     */
    public String engineVersion() {
        return this.engineVersion;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Amazon Resource Name (ARN) for the KMS key that will be used to encrypt the connection parameters. If you do not specify a value for `kms_key_arn`, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.
     * 
     */
    public String kmsKeyArn() {
        return this.kmsKeyArn;
    }
    /**
     * @return Specifies if the replication instance is a multi-az deployment. You cannot set the `availability_zone` parameter if the `multi_az` parameter is set to `true`.
     * 
     */
    public Boolean multiAz() {
        return this.multiAz;
    }
    /**
     * @return The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
     * 
     */
    public String preferredMaintenanceWindow() {
        return this.preferredMaintenanceWindow;
    }
    /**
     * @return (Default: false) Specifies the accessibility options for the replication instance. A value of true represents an instance with a public IP address. A value of false represents an instance with a private IP address.
     * 
     */
    public Boolean publiclyAccessible() {
        return this.publiclyAccessible;
    }
    /**
     * @return The Amazon Resource Name (ARN) of the replication instance.
     * 
     */
    public String replicationInstanceArn() {
        return this.replicationInstanceArn;
    }
    /**
     * @return The compute and memory capacity of the replication instance as specified by the replication instance class. See [AWS DMS User Guide](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.Types.html) for available instance sizes and advice on which one to choose.
     * 
     */
    public String replicationInstanceClass() {
        return this.replicationInstanceClass;
    }
    public String replicationInstanceId() {
        return this.replicationInstanceId;
    }
    /**
     * @return A list of the private IP addresses of the replication instance.
     * 
     */
    public List<String> replicationInstancePrivateIps() {
        return this.replicationInstancePrivateIps;
    }
    /**
     * @return A list of the public IP addresses of the replication instance.
     * 
     */
    public List<String> replicationInstancePublicIps() {
        return this.replicationInstancePublicIps;
    }
    /**
     * @return (Optional) A subnet group to associate with the replication instance.
     * 
     */
    public String replicationSubnetGroupId() {
        return this.replicationSubnetGroupId;
    }
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return (Optional) A list of VPC security group IDs to be used with the replication instance. The VPC security groups must work with the VPC containing the replication instance.
     * 
     */
    public List<String> vpcSecurityGroupIds() {
        return this.vpcSecurityGroupIds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetReplicationInstanceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer allocatedStorage;
        private Boolean allowMajorVersionUpgrade;
        private Boolean applyImmediately;
        private Boolean autoMinorVersionUpgrade;
        private String availabilityZone;
        private String engineVersion;
        private String id;
        private String kmsKeyArn;
        private Boolean multiAz;
        private String preferredMaintenanceWindow;
        private Boolean publiclyAccessible;
        private String replicationInstanceArn;
        private String replicationInstanceClass;
        private String replicationInstanceId;
        private List<String> replicationInstancePrivateIps;
        private List<String> replicationInstancePublicIps;
        private String replicationSubnetGroupId;
        private Map<String,String> tags;
        private List<String> vpcSecurityGroupIds;
        public Builder() {}
        public Builder(GetReplicationInstanceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allocatedStorage = defaults.allocatedStorage;
    	      this.allowMajorVersionUpgrade = defaults.allowMajorVersionUpgrade;
    	      this.applyImmediately = defaults.applyImmediately;
    	      this.autoMinorVersionUpgrade = defaults.autoMinorVersionUpgrade;
    	      this.availabilityZone = defaults.availabilityZone;
    	      this.engineVersion = defaults.engineVersion;
    	      this.id = defaults.id;
    	      this.kmsKeyArn = defaults.kmsKeyArn;
    	      this.multiAz = defaults.multiAz;
    	      this.preferredMaintenanceWindow = defaults.preferredMaintenanceWindow;
    	      this.publiclyAccessible = defaults.publiclyAccessible;
    	      this.replicationInstanceArn = defaults.replicationInstanceArn;
    	      this.replicationInstanceClass = defaults.replicationInstanceClass;
    	      this.replicationInstanceId = defaults.replicationInstanceId;
    	      this.replicationInstancePrivateIps = defaults.replicationInstancePrivateIps;
    	      this.replicationInstancePublicIps = defaults.replicationInstancePublicIps;
    	      this.replicationSubnetGroupId = defaults.replicationSubnetGroupId;
    	      this.tags = defaults.tags;
    	      this.vpcSecurityGroupIds = defaults.vpcSecurityGroupIds;
        }

        @CustomType.Setter
        public Builder allocatedStorage(Integer allocatedStorage) {
            this.allocatedStorage = Objects.requireNonNull(allocatedStorage);
            return this;
        }
        @CustomType.Setter
        public Builder allowMajorVersionUpgrade(Boolean allowMajorVersionUpgrade) {
            this.allowMajorVersionUpgrade = Objects.requireNonNull(allowMajorVersionUpgrade);
            return this;
        }
        @CustomType.Setter
        public Builder applyImmediately(Boolean applyImmediately) {
            this.applyImmediately = Objects.requireNonNull(applyImmediately);
            return this;
        }
        @CustomType.Setter
        public Builder autoMinorVersionUpgrade(Boolean autoMinorVersionUpgrade) {
            this.autoMinorVersionUpgrade = Objects.requireNonNull(autoMinorVersionUpgrade);
            return this;
        }
        @CustomType.Setter
        public Builder availabilityZone(String availabilityZone) {
            this.availabilityZone = Objects.requireNonNull(availabilityZone);
            return this;
        }
        @CustomType.Setter
        public Builder engineVersion(String engineVersion) {
            this.engineVersion = Objects.requireNonNull(engineVersion);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyArn(String kmsKeyArn) {
            this.kmsKeyArn = Objects.requireNonNull(kmsKeyArn);
            return this;
        }
        @CustomType.Setter
        public Builder multiAz(Boolean multiAz) {
            this.multiAz = Objects.requireNonNull(multiAz);
            return this;
        }
        @CustomType.Setter
        public Builder preferredMaintenanceWindow(String preferredMaintenanceWindow) {
            this.preferredMaintenanceWindow = Objects.requireNonNull(preferredMaintenanceWindow);
            return this;
        }
        @CustomType.Setter
        public Builder publiclyAccessible(Boolean publiclyAccessible) {
            this.publiclyAccessible = Objects.requireNonNull(publiclyAccessible);
            return this;
        }
        @CustomType.Setter
        public Builder replicationInstanceArn(String replicationInstanceArn) {
            this.replicationInstanceArn = Objects.requireNonNull(replicationInstanceArn);
            return this;
        }
        @CustomType.Setter
        public Builder replicationInstanceClass(String replicationInstanceClass) {
            this.replicationInstanceClass = Objects.requireNonNull(replicationInstanceClass);
            return this;
        }
        @CustomType.Setter
        public Builder replicationInstanceId(String replicationInstanceId) {
            this.replicationInstanceId = Objects.requireNonNull(replicationInstanceId);
            return this;
        }
        @CustomType.Setter
        public Builder replicationInstancePrivateIps(List<String> replicationInstancePrivateIps) {
            this.replicationInstancePrivateIps = Objects.requireNonNull(replicationInstancePrivateIps);
            return this;
        }
        public Builder replicationInstancePrivateIps(String... replicationInstancePrivateIps) {
            return replicationInstancePrivateIps(List.of(replicationInstancePrivateIps));
        }
        @CustomType.Setter
        public Builder replicationInstancePublicIps(List<String> replicationInstancePublicIps) {
            this.replicationInstancePublicIps = Objects.requireNonNull(replicationInstancePublicIps);
            return this;
        }
        public Builder replicationInstancePublicIps(String... replicationInstancePublicIps) {
            return replicationInstancePublicIps(List.of(replicationInstancePublicIps));
        }
        @CustomType.Setter
        public Builder replicationSubnetGroupId(String replicationSubnetGroupId) {
            this.replicationSubnetGroupId = Objects.requireNonNull(replicationSubnetGroupId);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder vpcSecurityGroupIds(List<String> vpcSecurityGroupIds) {
            this.vpcSecurityGroupIds = Objects.requireNonNull(vpcSecurityGroupIds);
            return this;
        }
        public Builder vpcSecurityGroupIds(String... vpcSecurityGroupIds) {
            return vpcSecurityGroupIds(List.of(vpcSecurityGroupIds));
        }
        public GetReplicationInstanceResult build() {
            final var o = new GetReplicationInstanceResult();
            o.allocatedStorage = allocatedStorage;
            o.allowMajorVersionUpgrade = allowMajorVersionUpgrade;
            o.applyImmediately = applyImmediately;
            o.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
            o.availabilityZone = availabilityZone;
            o.engineVersion = engineVersion;
            o.id = id;
            o.kmsKeyArn = kmsKeyArn;
            o.multiAz = multiAz;
            o.preferredMaintenanceWindow = preferredMaintenanceWindow;
            o.publiclyAccessible = publiclyAccessible;
            o.replicationInstanceArn = replicationInstanceArn;
            o.replicationInstanceClass = replicationInstanceClass;
            o.replicationInstanceId = replicationInstanceId;
            o.replicationInstancePrivateIps = replicationInstancePrivateIps;
            o.replicationInstancePublicIps = replicationInstancePublicIps;
            o.replicationSubnetGroupId = replicationSubnetGroupId;
            o.tags = tags;
            o.vpcSecurityGroupIds = vpcSecurityGroupIds;
            return o;
        }
    }
}
