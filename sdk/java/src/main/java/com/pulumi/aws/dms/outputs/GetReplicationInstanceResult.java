// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dms.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetReplicationInstanceResult {
    /**
     * @return The amount of storage (in gigabytes) to be initially allocated for the replication instance.
     * 
     */
    private @Nullable Integer allocatedStorage;
    /**
     * @return Indicates that minor engine upgrades will be applied automatically to the replication instance during the maintenance window.
     * 
     */
    private @Nullable Boolean autoMinorVersionUpgrade;
    /**
     * @return The EC2 Availability Zone that the replication instance will be created in.
     * 
     */
    private @Nullable String availabilityZone;
    /**
     * @return The engine version number of the replication instance.
     * 
     */
    private @Nullable String engineVersion;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return The Amazon Resource Name (ARN) for the KMS key used to encrypt the connection parameters.
     * 
     */
    private @Nullable String kmsKeyArn;
    /**
     * @return Specifies if the replication instance is a multi-az deployment.
     * 
     */
    private @Nullable Boolean multiAz;
    /**
     * @return The type of IP address protocol used by the replication instance.
     * 
     */
    private @Nullable String networkType;
    /**
     * @return The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
     * 
     */
    private @Nullable String preferredMaintenanceWindow;
    /**
     * @return Specifies the accessibility options for the replication instance. A value of true represents an instance with a public IP address. A value of false represents an instance with a private IP address.
     * 
     */
    private @Nullable Boolean publiclyAccessible;
    /**
     * @return The Amazon Resource Name (ARN) of the replication instance.
     * 
     */
    private @Nullable String replicationInstanceArn;
    /**
     * @return The compute and memory capacity of the replication instance as specified by the replication instance class. See [AWS DMS User Guide](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.Types.html) for information on instance classes.
     * 
     */
    private @Nullable String replicationInstanceClass;
    private String replicationInstanceId;
    /**
     * @return A list of the private IP addresses of the replication instance.
     * 
     */
    private @Nullable List<String> replicationInstancePrivateIps;
    /**
     * @return A list of the public IP addresses of the replication instance.
     * 
     */
    private @Nullable List<String> replicationInstancePublicIps;
    /**
     * @return A subnet group to associate with the replication instance.
     * 
     */
    private @Nullable String replicationSubnetGroupId;
    private @Nullable Map<String,String> tags;
    /**
     * @return A set of VPC security group IDs that are used with the replication instance.
     * 
     */
    private @Nullable List<String> vpcSecurityGroupIds;

    private GetReplicationInstanceResult() {}
    /**
     * @return The amount of storage (in gigabytes) to be initially allocated for the replication instance.
     * 
     */
    public Optional<Integer> allocatedStorage() {
        return Optional.ofNullable(this.allocatedStorage);
    }
    /**
     * @return Indicates that minor engine upgrades will be applied automatically to the replication instance during the maintenance window.
     * 
     */
    public Optional<Boolean> autoMinorVersionUpgrade() {
        return Optional.ofNullable(this.autoMinorVersionUpgrade);
    }
    /**
     * @return The EC2 Availability Zone that the replication instance will be created in.
     * 
     */
    public Optional<String> availabilityZone() {
        return Optional.ofNullable(this.availabilityZone);
    }
    /**
     * @return The engine version number of the replication instance.
     * 
     */
    public Optional<String> engineVersion() {
        return Optional.ofNullable(this.engineVersion);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The Amazon Resource Name (ARN) for the KMS key used to encrypt the connection parameters.
     * 
     */
    public Optional<String> kmsKeyArn() {
        return Optional.ofNullable(this.kmsKeyArn);
    }
    /**
     * @return Specifies if the replication instance is a multi-az deployment.
     * 
     */
    public Optional<Boolean> multiAz() {
        return Optional.ofNullable(this.multiAz);
    }
    /**
     * @return The type of IP address protocol used by the replication instance.
     * 
     */
    public Optional<String> networkType() {
        return Optional.ofNullable(this.networkType);
    }
    /**
     * @return The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
     * 
     */
    public Optional<String> preferredMaintenanceWindow() {
        return Optional.ofNullable(this.preferredMaintenanceWindow);
    }
    /**
     * @return Specifies the accessibility options for the replication instance. A value of true represents an instance with a public IP address. A value of false represents an instance with a private IP address.
     * 
     */
    public Optional<Boolean> publiclyAccessible() {
        return Optional.ofNullable(this.publiclyAccessible);
    }
    /**
     * @return The Amazon Resource Name (ARN) of the replication instance.
     * 
     */
    public Optional<String> replicationInstanceArn() {
        return Optional.ofNullable(this.replicationInstanceArn);
    }
    /**
     * @return The compute and memory capacity of the replication instance as specified by the replication instance class. See [AWS DMS User Guide](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.Types.html) for information on instance classes.
     * 
     */
    public Optional<String> replicationInstanceClass() {
        return Optional.ofNullable(this.replicationInstanceClass);
    }
    public String replicationInstanceId() {
        return this.replicationInstanceId;
    }
    /**
     * @return A list of the private IP addresses of the replication instance.
     * 
     */
    public List<String> replicationInstancePrivateIps() {
        return this.replicationInstancePrivateIps == null ? List.of() : this.replicationInstancePrivateIps;
    }
    /**
     * @return A list of the public IP addresses of the replication instance.
     * 
     */
    public List<String> replicationInstancePublicIps() {
        return this.replicationInstancePublicIps == null ? List.of() : this.replicationInstancePublicIps;
    }
    /**
     * @return A subnet group to associate with the replication instance.
     * 
     */
    public Optional<String> replicationSubnetGroupId() {
        return Optional.ofNullable(this.replicationSubnetGroupId);
    }
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return A set of VPC security group IDs that are used with the replication instance.
     * 
     */
    public List<String> vpcSecurityGroupIds() {
        return this.vpcSecurityGroupIds == null ? List.of() : this.vpcSecurityGroupIds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetReplicationInstanceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer allocatedStorage;
        private @Nullable Boolean autoMinorVersionUpgrade;
        private @Nullable String availabilityZone;
        private @Nullable String engineVersion;
        private @Nullable String id;
        private @Nullable String kmsKeyArn;
        private @Nullable Boolean multiAz;
        private @Nullable String networkType;
        private @Nullable String preferredMaintenanceWindow;
        private @Nullable Boolean publiclyAccessible;
        private @Nullable String replicationInstanceArn;
        private @Nullable String replicationInstanceClass;
        private String replicationInstanceId;
        private @Nullable List<String> replicationInstancePrivateIps;
        private @Nullable List<String> replicationInstancePublicIps;
        private @Nullable String replicationSubnetGroupId;
        private @Nullable Map<String,String> tags;
        private @Nullable List<String> vpcSecurityGroupIds;
        public Builder() {}
        public Builder(GetReplicationInstanceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allocatedStorage = defaults.allocatedStorage;
    	      this.autoMinorVersionUpgrade = defaults.autoMinorVersionUpgrade;
    	      this.availabilityZone = defaults.availabilityZone;
    	      this.engineVersion = defaults.engineVersion;
    	      this.id = defaults.id;
    	      this.kmsKeyArn = defaults.kmsKeyArn;
    	      this.multiAz = defaults.multiAz;
    	      this.networkType = defaults.networkType;
    	      this.preferredMaintenanceWindow = defaults.preferredMaintenanceWindow;
    	      this.publiclyAccessible = defaults.publiclyAccessible;
    	      this.replicationInstanceArn = defaults.replicationInstanceArn;
    	      this.replicationInstanceClass = defaults.replicationInstanceClass;
    	      this.replicationInstanceId = defaults.replicationInstanceId;
    	      this.replicationInstancePrivateIps = defaults.replicationInstancePrivateIps;
    	      this.replicationInstancePublicIps = defaults.replicationInstancePublicIps;
    	      this.replicationSubnetGroupId = defaults.replicationSubnetGroupId;
    	      this.tags = defaults.tags;
    	      this.vpcSecurityGroupIds = defaults.vpcSecurityGroupIds;
        }

        @CustomType.Setter
        public Builder allocatedStorage(@Nullable Integer allocatedStorage) {
            this.allocatedStorage = allocatedStorage;
            return this;
        }
        @CustomType.Setter
        public Builder autoMinorVersionUpgrade(@Nullable Boolean autoMinorVersionUpgrade) {
            this.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
            return this;
        }
        @CustomType.Setter
        public Builder availabilityZone(@Nullable String availabilityZone) {
            this.availabilityZone = availabilityZone;
            return this;
        }
        @CustomType.Setter
        public Builder engineVersion(@Nullable String engineVersion) {
            this.engineVersion = engineVersion;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyArn(@Nullable String kmsKeyArn) {
            this.kmsKeyArn = kmsKeyArn;
            return this;
        }
        @CustomType.Setter
        public Builder multiAz(@Nullable Boolean multiAz) {
            this.multiAz = multiAz;
            return this;
        }
        @CustomType.Setter
        public Builder networkType(@Nullable String networkType) {
            this.networkType = networkType;
            return this;
        }
        @CustomType.Setter
        public Builder preferredMaintenanceWindow(@Nullable String preferredMaintenanceWindow) {
            this.preferredMaintenanceWindow = preferredMaintenanceWindow;
            return this;
        }
        @CustomType.Setter
        public Builder publiclyAccessible(@Nullable Boolean publiclyAccessible) {
            this.publiclyAccessible = publiclyAccessible;
            return this;
        }
        @CustomType.Setter
        public Builder replicationInstanceArn(@Nullable String replicationInstanceArn) {
            this.replicationInstanceArn = replicationInstanceArn;
            return this;
        }
        @CustomType.Setter
        public Builder replicationInstanceClass(@Nullable String replicationInstanceClass) {
            this.replicationInstanceClass = replicationInstanceClass;
            return this;
        }
        @CustomType.Setter
        public Builder replicationInstanceId(String replicationInstanceId) {
            this.replicationInstanceId = Objects.requireNonNull(replicationInstanceId);
            return this;
        }
        @CustomType.Setter
        public Builder replicationInstancePrivateIps(@Nullable List<String> replicationInstancePrivateIps) {
            this.replicationInstancePrivateIps = replicationInstancePrivateIps;
            return this;
        }
        public Builder replicationInstancePrivateIps(String... replicationInstancePrivateIps) {
            return replicationInstancePrivateIps(List.of(replicationInstancePrivateIps));
        }
        @CustomType.Setter
        public Builder replicationInstancePublicIps(@Nullable List<String> replicationInstancePublicIps) {
            this.replicationInstancePublicIps = replicationInstancePublicIps;
            return this;
        }
        public Builder replicationInstancePublicIps(String... replicationInstancePublicIps) {
            return replicationInstancePublicIps(List.of(replicationInstancePublicIps));
        }
        @CustomType.Setter
        public Builder replicationSubnetGroupId(@Nullable String replicationSubnetGroupId) {
            this.replicationSubnetGroupId = replicationSubnetGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder vpcSecurityGroupIds(@Nullable List<String> vpcSecurityGroupIds) {
            this.vpcSecurityGroupIds = vpcSecurityGroupIds;
            return this;
        }
        public Builder vpcSecurityGroupIds(String... vpcSecurityGroupIds) {
            return vpcSecurityGroupIds(List.of(vpcSecurityGroupIds));
        }
        public GetReplicationInstanceResult build() {
            final var o = new GetReplicationInstanceResult();
            o.allocatedStorage = allocatedStorage;
            o.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
            o.availabilityZone = availabilityZone;
            o.engineVersion = engineVersion;
            o.id = id;
            o.kmsKeyArn = kmsKeyArn;
            o.multiAz = multiAz;
            o.networkType = networkType;
            o.preferredMaintenanceWindow = preferredMaintenanceWindow;
            o.publiclyAccessible = publiclyAccessible;
            o.replicationInstanceArn = replicationInstanceArn;
            o.replicationInstanceClass = replicationInstanceClass;
            o.replicationInstanceId = replicationInstanceId;
            o.replicationInstancePrivateIps = replicationInstancePrivateIps;
            o.replicationInstancePublicIps = replicationInstancePublicIps;
            o.replicationSubnetGroupId = replicationSubnetGroupId;
            o.tags = tags;
            o.vpcSecurityGroupIds = vpcSecurityGroupIds;
            return o;
        }
    }
}
