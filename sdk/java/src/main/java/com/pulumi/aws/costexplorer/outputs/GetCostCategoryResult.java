// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.costexplorer.outputs;

import com.pulumi.aws.costexplorer.outputs.GetCostCategoryRule;
import com.pulumi.aws.costexplorer.outputs.GetCostCategorySplitChargeRule;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetCostCategoryResult {
    private String costCategoryArn;
    /**
     * @return Default value for the cost category.
     * 
     */
    private String defaultValue;
    /**
     * @return Effective end data of your Cost Category.
     * 
     */
    private String effectiveEnd;
    /**
     * @return Effective state data of your Cost Category.
     * 
     */
    private String effectiveStart;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String name;
    /**
     * @return Rule schema version in this particular Cost Category.
     * 
     */
    private String ruleVersion;
    /**
     * @return Configuration block for the `Expression` object used to categorize costs. See below.
     * 
     */
    private List<GetCostCategoryRule> rules;
    /**
     * @return Configuration block for the split charge rules used to allocate your charges between your Cost Category values. See below.
     * 
     */
    private List<GetCostCategorySplitChargeRule> splitChargeRules;
    /**
     * @return Configuration block for the specific `Tag` to use for `Expression`. See below.
     * 
     */
    private Map<String,String> tags;

    private GetCostCategoryResult() {}
    public String costCategoryArn() {
        return this.costCategoryArn;
    }
    /**
     * @return Default value for the cost category.
     * 
     */
    public String defaultValue() {
        return this.defaultValue;
    }
    /**
     * @return Effective end data of your Cost Category.
     * 
     */
    public String effectiveEnd() {
        return this.effectiveEnd;
    }
    /**
     * @return Effective state data of your Cost Category.
     * 
     */
    public String effectiveStart() {
        return this.effectiveStart;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return Rule schema version in this particular Cost Category.
     * 
     */
    public String ruleVersion() {
        return this.ruleVersion;
    }
    /**
     * @return Configuration block for the `Expression` object used to categorize costs. See below.
     * 
     */
    public List<GetCostCategoryRule> rules() {
        return this.rules;
    }
    /**
     * @return Configuration block for the split charge rules used to allocate your charges between your Cost Category values. See below.
     * 
     */
    public List<GetCostCategorySplitChargeRule> splitChargeRules() {
        return this.splitChargeRules;
    }
    /**
     * @return Configuration block for the specific `Tag` to use for `Expression`. See below.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCostCategoryResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String costCategoryArn;
        private String defaultValue;
        private String effectiveEnd;
        private String effectiveStart;
        private String id;
        private String name;
        private String ruleVersion;
        private List<GetCostCategoryRule> rules;
        private List<GetCostCategorySplitChargeRule> splitChargeRules;
        private Map<String,String> tags;
        public Builder() {}
        public Builder(GetCostCategoryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.costCategoryArn = defaults.costCategoryArn;
    	      this.defaultValue = defaults.defaultValue;
    	      this.effectiveEnd = defaults.effectiveEnd;
    	      this.effectiveStart = defaults.effectiveStart;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.ruleVersion = defaults.ruleVersion;
    	      this.rules = defaults.rules;
    	      this.splitChargeRules = defaults.splitChargeRules;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder costCategoryArn(String costCategoryArn) {
            if (costCategoryArn == null) {
              throw new MissingRequiredPropertyException("GetCostCategoryResult", "costCategoryArn");
            }
            this.costCategoryArn = costCategoryArn;
            return this;
        }
        @CustomType.Setter
        public Builder defaultValue(String defaultValue) {
            if (defaultValue == null) {
              throw new MissingRequiredPropertyException("GetCostCategoryResult", "defaultValue");
            }
            this.defaultValue = defaultValue;
            return this;
        }
        @CustomType.Setter
        public Builder effectiveEnd(String effectiveEnd) {
            if (effectiveEnd == null) {
              throw new MissingRequiredPropertyException("GetCostCategoryResult", "effectiveEnd");
            }
            this.effectiveEnd = effectiveEnd;
            return this;
        }
        @CustomType.Setter
        public Builder effectiveStart(String effectiveStart) {
            if (effectiveStart == null) {
              throw new MissingRequiredPropertyException("GetCostCategoryResult", "effectiveStart");
            }
            this.effectiveStart = effectiveStart;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCostCategoryResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetCostCategoryResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder ruleVersion(String ruleVersion) {
            if (ruleVersion == null) {
              throw new MissingRequiredPropertyException("GetCostCategoryResult", "ruleVersion");
            }
            this.ruleVersion = ruleVersion;
            return this;
        }
        @CustomType.Setter
        public Builder rules(List<GetCostCategoryRule> rules) {
            if (rules == null) {
              throw new MissingRequiredPropertyException("GetCostCategoryResult", "rules");
            }
            this.rules = rules;
            return this;
        }
        public Builder rules(GetCostCategoryRule... rules) {
            return rules(List.of(rules));
        }
        @CustomType.Setter
        public Builder splitChargeRules(List<GetCostCategorySplitChargeRule> splitChargeRules) {
            if (splitChargeRules == null) {
              throw new MissingRequiredPropertyException("GetCostCategoryResult", "splitChargeRules");
            }
            this.splitChargeRules = splitChargeRules;
            return this;
        }
        public Builder splitChargeRules(GetCostCategorySplitChargeRule... splitChargeRules) {
            return splitChargeRules(List.of(splitChargeRules));
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetCostCategoryResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        public GetCostCategoryResult build() {
            final var _resultValue = new GetCostCategoryResult();
            _resultValue.costCategoryArn = costCategoryArn;
            _resultValue.defaultValue = defaultValue;
            _resultValue.effectiveEnd = effectiveEnd;
            _resultValue.effectiveStart = effectiveStart;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.ruleVersion = ruleVersion;
            _resultValue.rules = rules;
            _resultValue.splitChargeRules = splitChargeRules;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
