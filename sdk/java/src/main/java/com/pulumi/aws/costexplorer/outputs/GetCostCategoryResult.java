// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.costexplorer.outputs;

import com.pulumi.aws.costexplorer.outputs.GetCostCategoryRule;
import com.pulumi.aws.costexplorer.outputs.GetCostCategorySplitChargeRule;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCostCategoryResult {
    private String costCategoryArn;
    /**
     * @return Default value for the cost category.
     * 
     */
    private @Nullable String defaultValue;
    /**
     * @return Effective end data of your Cost Category.
     * 
     */
    private @Nullable String effectiveEnd;
    /**
     * @return Effective state data of your Cost Category.
     * 
     */
    private @Nullable String effectiveStart;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private @Nullable String name;
    /**
     * @return Rule schema version in this particular Cost Category.
     * 
     */
    private @Nullable String ruleVersion;
    /**
     * @return Configuration block for the `Expression` object used to categorize costs. See below.
     * 
     */
    private @Nullable List<GetCostCategoryRule> rules;
    /**
     * @return Configuration block for the split charge rules used to allocate your charges between your Cost Category values. See below.
     * 
     */
    private @Nullable List<GetCostCategorySplitChargeRule> splitChargeRules;
    /**
     * @return Configuration block for the specific `Tag` to use for `Expression`. See below.
     * 
     */
    private @Nullable Map<String,String> tags;

    private GetCostCategoryResult() {}
    public String costCategoryArn() {
        return this.costCategoryArn;
    }
    /**
     * @return Default value for the cost category.
     * 
     */
    public Optional<String> defaultValue() {
        return Optional.ofNullable(this.defaultValue);
    }
    /**
     * @return Effective end data of your Cost Category.
     * 
     */
    public Optional<String> effectiveEnd() {
        return Optional.ofNullable(this.effectiveEnd);
    }
    /**
     * @return Effective state data of your Cost Category.
     * 
     */
    public Optional<String> effectiveStart() {
        return Optional.ofNullable(this.effectiveStart);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Rule schema version in this particular Cost Category.
     * 
     */
    public Optional<String> ruleVersion() {
        return Optional.ofNullable(this.ruleVersion);
    }
    /**
     * @return Configuration block for the `Expression` object used to categorize costs. See below.
     * 
     */
    public List<GetCostCategoryRule> rules() {
        return this.rules == null ? List.of() : this.rules;
    }
    /**
     * @return Configuration block for the split charge rules used to allocate your charges between your Cost Category values. See below.
     * 
     */
    public List<GetCostCategorySplitChargeRule> splitChargeRules() {
        return this.splitChargeRules == null ? List.of() : this.splitChargeRules;
    }
    /**
     * @return Configuration block for the specific `Tag` to use for `Expression`. See below.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCostCategoryResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String costCategoryArn;
        private @Nullable String defaultValue;
        private @Nullable String effectiveEnd;
        private @Nullable String effectiveStart;
        private @Nullable String id;
        private @Nullable String name;
        private @Nullable String ruleVersion;
        private @Nullable List<GetCostCategoryRule> rules;
        private @Nullable List<GetCostCategorySplitChargeRule> splitChargeRules;
        private @Nullable Map<String,String> tags;
        public Builder() {}
        public Builder(GetCostCategoryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.costCategoryArn = defaults.costCategoryArn;
    	      this.defaultValue = defaults.defaultValue;
    	      this.effectiveEnd = defaults.effectiveEnd;
    	      this.effectiveStart = defaults.effectiveStart;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.ruleVersion = defaults.ruleVersion;
    	      this.rules = defaults.rules;
    	      this.splitChargeRules = defaults.splitChargeRules;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder costCategoryArn(String costCategoryArn) {
            this.costCategoryArn = Objects.requireNonNull(costCategoryArn);
            return this;
        }
        @CustomType.Setter
        public Builder defaultValue(@Nullable String defaultValue) {
            this.defaultValue = defaultValue;
            return this;
        }
        @CustomType.Setter
        public Builder effectiveEnd(@Nullable String effectiveEnd) {
            this.effectiveEnd = effectiveEnd;
            return this;
        }
        @CustomType.Setter
        public Builder effectiveStart(@Nullable String effectiveStart) {
            this.effectiveStart = effectiveStart;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder ruleVersion(@Nullable String ruleVersion) {
            this.ruleVersion = ruleVersion;
            return this;
        }
        @CustomType.Setter
        public Builder rules(@Nullable List<GetCostCategoryRule> rules) {
            this.rules = rules;
            return this;
        }
        public Builder rules(GetCostCategoryRule... rules) {
            return rules(List.of(rules));
        }
        @CustomType.Setter
        public Builder splitChargeRules(@Nullable List<GetCostCategorySplitChargeRule> splitChargeRules) {
            this.splitChargeRules = splitChargeRules;
            return this;
        }
        public Builder splitChargeRules(GetCostCategorySplitChargeRule... splitChargeRules) {
            return splitChargeRules(List.of(splitChargeRules));
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public GetCostCategoryResult build() {
            final var o = new GetCostCategoryResult();
            o.costCategoryArn = costCategoryArn;
            o.defaultValue = defaultValue;
            o.effectiveEnd = effectiveEnd;
            o.effectiveStart = effectiveStart;
            o.id = id;
            o.name = name;
            o.ruleVersion = ruleVersion;
            o.rules = rules;
            o.splitChargeRules = splitChargeRules;
            o.tags = tags;
            return o;
        }
    }
}
