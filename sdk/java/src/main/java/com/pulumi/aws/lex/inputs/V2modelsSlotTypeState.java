// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lex.inputs;

import com.pulumi.aws.lex.inputs.V2modelsSlotTypeCompositeSlotTypeSettingArgs;
import com.pulumi.aws.lex.inputs.V2modelsSlotTypeExternalSourceSettingArgs;
import com.pulumi.aws.lex.inputs.V2modelsSlotTypeSlotTypeValueArgs;
import com.pulumi.aws.lex.inputs.V2modelsSlotTypeTimeoutsArgs;
import com.pulumi.aws.lex.inputs.V2modelsSlotTypeValueSelectionSettingArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class V2modelsSlotTypeState extends com.pulumi.resources.ResourceArgs {

    public static final V2modelsSlotTypeState Empty = new V2modelsSlotTypeState();

    /**
     * Identifier of the bot associated with this slot type.
     * 
     */
    @Import(name="botId")
    private @Nullable Output<String> botId;

    /**
     * @return Identifier of the bot associated with this slot type.
     * 
     */
    public Optional<Output<String>> botId() {
        return Optional.ofNullable(this.botId);
    }

    /**
     * Version of the bot associated with this slot type.
     * 
     */
    @Import(name="botVersion")
    private @Nullable Output<String> botVersion;

    /**
     * @return Version of the bot associated with this slot type.
     * 
     */
    public Optional<Output<String>> botVersion() {
        return Optional.ofNullable(this.botVersion);
    }

    /**
     * Specifications for a composite slot type.
     * See `composite_slot_type_setting` argument reference below.
     * 
     */
    @Import(name="compositeSlotTypeSettings")
    private @Nullable Output<List<V2modelsSlotTypeCompositeSlotTypeSettingArgs>> compositeSlotTypeSettings;

    /**
     * @return Specifications for a composite slot type.
     * See `composite_slot_type_setting` argument reference below.
     * 
     */
    public Optional<Output<List<V2modelsSlotTypeCompositeSlotTypeSettingArgs>>> compositeSlotTypeSettings() {
        return Optional.ofNullable(this.compositeSlotTypeSettings);
    }

    /**
     * Description of the slot type.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the slot type.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Type of external information used to create the slot type.
     * See `external_source_setting` argument reference below.
     * 
     */
    @Import(name="externalSourceSettings")
    private @Nullable Output<List<V2modelsSlotTypeExternalSourceSettingArgs>> externalSourceSettings;

    /**
     * @return Type of external information used to create the slot type.
     * See `external_source_setting` argument reference below.
     * 
     */
    public Optional<Output<List<V2modelsSlotTypeExternalSourceSettingArgs>>> externalSourceSettings() {
        return Optional.ofNullable(this.externalSourceSettings);
    }

    /**
     * Identifier of the language and locale where this slot type is used.
     * All of the bots, slot types, and slots used by the intent must have the same locale.
     * 
     */
    @Import(name="localeId")
    private @Nullable Output<String> localeId;

    /**
     * @return Identifier of the language and locale where this slot type is used.
     * All of the bots, slot types, and slots used by the intent must have the same locale.
     * 
     */
    public Optional<Output<String>> localeId() {
        return Optional.ofNullable(this.localeId);
    }

    /**
     * Name of the slot type.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the slot type.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Built-in slot type used as a parent of this slot type.
     * When you define a parent slot type, the new slot type has the configuration of the parent slot type.
     * Only `AMAZON.AlphaNumeric` is supported.
     * 
     */
    @Import(name="parentSlotTypeSignature")
    private @Nullable Output<String> parentSlotTypeSignature;

    /**
     * @return Built-in slot type used as a parent of this slot type.
     * When you define a parent slot type, the new slot type has the configuration of the parent slot type.
     * Only `AMAZON.AlphaNumeric` is supported.
     * 
     */
    public Optional<Output<String>> parentSlotTypeSignature() {
        return Optional.ofNullable(this.parentSlotTypeSignature);
    }

    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Unique identifier for the slot type.
     * 
     */
    @Import(name="slotTypeId")
    private @Nullable Output<String> slotTypeId;

    /**
     * @return Unique identifier for the slot type.
     * 
     */
    public Optional<Output<String>> slotTypeId() {
        return Optional.ofNullable(this.slotTypeId);
    }

    /**
     * List of SlotTypeValue objects that defines the values that the slot type can take.
     * Each value can have a list of synonyms, additional values that help train the machine learning model about the values that it resolves for a slot.
     * See `slot_type_values` argument reference below.
     * 
     */
    @Import(name="slotTypeValues")
    private @Nullable Output<List<V2modelsSlotTypeSlotTypeValueArgs>> slotTypeValues;

    /**
     * @return List of SlotTypeValue objects that defines the values that the slot type can take.
     * Each value can have a list of synonyms, additional values that help train the machine learning model about the values that it resolves for a slot.
     * See `slot_type_values` argument reference below.
     * 
     */
    public Optional<Output<List<V2modelsSlotTypeSlotTypeValueArgs>>> slotTypeValues() {
        return Optional.ofNullable(this.slotTypeValues);
    }

    @Import(name="timeouts")
    private @Nullable Output<V2modelsSlotTypeTimeoutsArgs> timeouts;

    public Optional<Output<V2modelsSlotTypeTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    /**
     * Determines the strategy that Amazon Lex uses to select a value from the list of possible values.
     * See `value_selection_setting` argument reference below.
     * 
     */
    @Import(name="valueSelectionSetting")
    private @Nullable Output<V2modelsSlotTypeValueSelectionSettingArgs> valueSelectionSetting;

    /**
     * @return Determines the strategy that Amazon Lex uses to select a value from the list of possible values.
     * See `value_selection_setting` argument reference below.
     * 
     */
    public Optional<Output<V2modelsSlotTypeValueSelectionSettingArgs>> valueSelectionSetting() {
        return Optional.ofNullable(this.valueSelectionSetting);
    }

    private V2modelsSlotTypeState() {}

    private V2modelsSlotTypeState(V2modelsSlotTypeState $) {
        this.botId = $.botId;
        this.botVersion = $.botVersion;
        this.compositeSlotTypeSettings = $.compositeSlotTypeSettings;
        this.description = $.description;
        this.externalSourceSettings = $.externalSourceSettings;
        this.localeId = $.localeId;
        this.name = $.name;
        this.parentSlotTypeSignature = $.parentSlotTypeSignature;
        this.region = $.region;
        this.slotTypeId = $.slotTypeId;
        this.slotTypeValues = $.slotTypeValues;
        this.timeouts = $.timeouts;
        this.valueSelectionSetting = $.valueSelectionSetting;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(V2modelsSlotTypeState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private V2modelsSlotTypeState $;

        public Builder() {
            $ = new V2modelsSlotTypeState();
        }

        public Builder(V2modelsSlotTypeState defaults) {
            $ = new V2modelsSlotTypeState(Objects.requireNonNull(defaults));
        }

        /**
         * @param botId Identifier of the bot associated with this slot type.
         * 
         * @return builder
         * 
         */
        public Builder botId(@Nullable Output<String> botId) {
            $.botId = botId;
            return this;
        }

        /**
         * @param botId Identifier of the bot associated with this slot type.
         * 
         * @return builder
         * 
         */
        public Builder botId(String botId) {
            return botId(Output.of(botId));
        }

        /**
         * @param botVersion Version of the bot associated with this slot type.
         * 
         * @return builder
         * 
         */
        public Builder botVersion(@Nullable Output<String> botVersion) {
            $.botVersion = botVersion;
            return this;
        }

        /**
         * @param botVersion Version of the bot associated with this slot type.
         * 
         * @return builder
         * 
         */
        public Builder botVersion(String botVersion) {
            return botVersion(Output.of(botVersion));
        }

        /**
         * @param compositeSlotTypeSettings Specifications for a composite slot type.
         * See `composite_slot_type_setting` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder compositeSlotTypeSettings(@Nullable Output<List<V2modelsSlotTypeCompositeSlotTypeSettingArgs>> compositeSlotTypeSettings) {
            $.compositeSlotTypeSettings = compositeSlotTypeSettings;
            return this;
        }

        /**
         * @param compositeSlotTypeSettings Specifications for a composite slot type.
         * See `composite_slot_type_setting` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder compositeSlotTypeSettings(List<V2modelsSlotTypeCompositeSlotTypeSettingArgs> compositeSlotTypeSettings) {
            return compositeSlotTypeSettings(Output.of(compositeSlotTypeSettings));
        }

        /**
         * @param compositeSlotTypeSettings Specifications for a composite slot type.
         * See `composite_slot_type_setting` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder compositeSlotTypeSettings(V2modelsSlotTypeCompositeSlotTypeSettingArgs... compositeSlotTypeSettings) {
            return compositeSlotTypeSettings(List.of(compositeSlotTypeSettings));
        }

        /**
         * @param description Description of the slot type.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the slot type.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param externalSourceSettings Type of external information used to create the slot type.
         * See `external_source_setting` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder externalSourceSettings(@Nullable Output<List<V2modelsSlotTypeExternalSourceSettingArgs>> externalSourceSettings) {
            $.externalSourceSettings = externalSourceSettings;
            return this;
        }

        /**
         * @param externalSourceSettings Type of external information used to create the slot type.
         * See `external_source_setting` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder externalSourceSettings(List<V2modelsSlotTypeExternalSourceSettingArgs> externalSourceSettings) {
            return externalSourceSettings(Output.of(externalSourceSettings));
        }

        /**
         * @param externalSourceSettings Type of external information used to create the slot type.
         * See `external_source_setting` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder externalSourceSettings(V2modelsSlotTypeExternalSourceSettingArgs... externalSourceSettings) {
            return externalSourceSettings(List.of(externalSourceSettings));
        }

        /**
         * @param localeId Identifier of the language and locale where this slot type is used.
         * All of the bots, slot types, and slots used by the intent must have the same locale.
         * 
         * @return builder
         * 
         */
        public Builder localeId(@Nullable Output<String> localeId) {
            $.localeId = localeId;
            return this;
        }

        /**
         * @param localeId Identifier of the language and locale where this slot type is used.
         * All of the bots, slot types, and slots used by the intent must have the same locale.
         * 
         * @return builder
         * 
         */
        public Builder localeId(String localeId) {
            return localeId(Output.of(localeId));
        }

        /**
         * @param name Name of the slot type.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the slot type.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param parentSlotTypeSignature Built-in slot type used as a parent of this slot type.
         * When you define a parent slot type, the new slot type has the configuration of the parent slot type.
         * Only `AMAZON.AlphaNumeric` is supported.
         * 
         * @return builder
         * 
         */
        public Builder parentSlotTypeSignature(@Nullable Output<String> parentSlotTypeSignature) {
            $.parentSlotTypeSignature = parentSlotTypeSignature;
            return this;
        }

        /**
         * @param parentSlotTypeSignature Built-in slot type used as a parent of this slot type.
         * When you define a parent slot type, the new slot type has the configuration of the parent slot type.
         * Only `AMAZON.AlphaNumeric` is supported.
         * 
         * @return builder
         * 
         */
        public Builder parentSlotTypeSignature(String parentSlotTypeSignature) {
            return parentSlotTypeSignature(Output.of(parentSlotTypeSignature));
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param slotTypeId Unique identifier for the slot type.
         * 
         * @return builder
         * 
         */
        public Builder slotTypeId(@Nullable Output<String> slotTypeId) {
            $.slotTypeId = slotTypeId;
            return this;
        }

        /**
         * @param slotTypeId Unique identifier for the slot type.
         * 
         * @return builder
         * 
         */
        public Builder slotTypeId(String slotTypeId) {
            return slotTypeId(Output.of(slotTypeId));
        }

        /**
         * @param slotTypeValues List of SlotTypeValue objects that defines the values that the slot type can take.
         * Each value can have a list of synonyms, additional values that help train the machine learning model about the values that it resolves for a slot.
         * See `slot_type_values` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder slotTypeValues(@Nullable Output<List<V2modelsSlotTypeSlotTypeValueArgs>> slotTypeValues) {
            $.slotTypeValues = slotTypeValues;
            return this;
        }

        /**
         * @param slotTypeValues List of SlotTypeValue objects that defines the values that the slot type can take.
         * Each value can have a list of synonyms, additional values that help train the machine learning model about the values that it resolves for a slot.
         * See `slot_type_values` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder slotTypeValues(List<V2modelsSlotTypeSlotTypeValueArgs> slotTypeValues) {
            return slotTypeValues(Output.of(slotTypeValues));
        }

        /**
         * @param slotTypeValues List of SlotTypeValue objects that defines the values that the slot type can take.
         * Each value can have a list of synonyms, additional values that help train the machine learning model about the values that it resolves for a slot.
         * See `slot_type_values` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder slotTypeValues(V2modelsSlotTypeSlotTypeValueArgs... slotTypeValues) {
            return slotTypeValues(List.of(slotTypeValues));
        }

        public Builder timeouts(@Nullable Output<V2modelsSlotTypeTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(V2modelsSlotTypeTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        /**
         * @param valueSelectionSetting Determines the strategy that Amazon Lex uses to select a value from the list of possible values.
         * See `value_selection_setting` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder valueSelectionSetting(@Nullable Output<V2modelsSlotTypeValueSelectionSettingArgs> valueSelectionSetting) {
            $.valueSelectionSetting = valueSelectionSetting;
            return this;
        }

        /**
         * @param valueSelectionSetting Determines the strategy that Amazon Lex uses to select a value from the list of possible values.
         * See `value_selection_setting` argument reference below.
         * 
         * @return builder
         * 
         */
        public Builder valueSelectionSetting(V2modelsSlotTypeValueSelectionSettingArgs valueSelectionSetting) {
            return valueSelectionSetting(Output.of(valueSelectionSetting));
        }

        public V2modelsSlotTypeState build() {
            return $;
        }
    }

}
