// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.verifiedaccess.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TrustProviderOidcOptions {
    private @Nullable String authorizationEndpoint;
    private @Nullable String clientId;
    private String clientSecret;
    private @Nullable String issuer;
    private @Nullable String scope;
    private @Nullable String tokenEndpoint;
    private @Nullable String userInfoEndpoint;

    private TrustProviderOidcOptions() {}
    public Optional<String> authorizationEndpoint() {
        return Optional.ofNullable(this.authorizationEndpoint);
    }
    public Optional<String> clientId() {
        return Optional.ofNullable(this.clientId);
    }
    public String clientSecret() {
        return this.clientSecret;
    }
    public Optional<String> issuer() {
        return Optional.ofNullable(this.issuer);
    }
    public Optional<String> scope() {
        return Optional.ofNullable(this.scope);
    }
    public Optional<String> tokenEndpoint() {
        return Optional.ofNullable(this.tokenEndpoint);
    }
    public Optional<String> userInfoEndpoint() {
        return Optional.ofNullable(this.userInfoEndpoint);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TrustProviderOidcOptions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String authorizationEndpoint;
        private @Nullable String clientId;
        private String clientSecret;
        private @Nullable String issuer;
        private @Nullable String scope;
        private @Nullable String tokenEndpoint;
        private @Nullable String userInfoEndpoint;
        public Builder() {}
        public Builder(TrustProviderOidcOptions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizationEndpoint = defaults.authorizationEndpoint;
    	      this.clientId = defaults.clientId;
    	      this.clientSecret = defaults.clientSecret;
    	      this.issuer = defaults.issuer;
    	      this.scope = defaults.scope;
    	      this.tokenEndpoint = defaults.tokenEndpoint;
    	      this.userInfoEndpoint = defaults.userInfoEndpoint;
        }

        @CustomType.Setter
        public Builder authorizationEndpoint(@Nullable String authorizationEndpoint) {
            this.authorizationEndpoint = authorizationEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder clientId(@Nullable String clientId) {
            this.clientId = clientId;
            return this;
        }
        @CustomType.Setter
        public Builder clientSecret(String clientSecret) {
            this.clientSecret = Objects.requireNonNull(clientSecret);
            return this;
        }
        @CustomType.Setter
        public Builder issuer(@Nullable String issuer) {
            this.issuer = issuer;
            return this;
        }
        @CustomType.Setter
        public Builder scope(@Nullable String scope) {
            this.scope = scope;
            return this;
        }
        @CustomType.Setter
        public Builder tokenEndpoint(@Nullable String tokenEndpoint) {
            this.tokenEndpoint = tokenEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder userInfoEndpoint(@Nullable String userInfoEndpoint) {
            this.userInfoEndpoint = userInfoEndpoint;
            return this;
        }
        public TrustProviderOidcOptions build() {
            final var _resultValue = new TrustProviderOidcOptions();
            _resultValue.authorizationEndpoint = authorizationEndpoint;
            _resultValue.clientId = clientId;
            _resultValue.clientSecret = clientSecret;
            _resultValue.issuer = issuer;
            _resultValue.scope = scope;
            _resultValue.tokenEndpoint = tokenEndpoint;
            _resultValue.userInfoEndpoint = userInfoEndpoint;
            return _resultValue;
        }
    }
}
