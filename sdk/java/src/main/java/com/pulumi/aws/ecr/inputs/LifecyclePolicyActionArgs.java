// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecr.inputs;

import com.pulumi.aws.ecr.enums.LifecyclePolicyActionType;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.Objects;


public final class LifecyclePolicyActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final LifecyclePolicyActionArgs Empty = new LifecyclePolicyActionArgs();

    /**
     * The type of action to take. Currently only &#39;expire&#39; is supported.
     * 
     */
    @Import(name="type", required=true)
    private Output<LifecyclePolicyActionType> type;

    /**
     * @return The type of action to take. Currently only &#39;expire&#39; is supported.
     * 
     */
    public Output<LifecyclePolicyActionType> type() {
        return this.type;
    }

    private LifecyclePolicyActionArgs() {}

    private LifecyclePolicyActionArgs(LifecyclePolicyActionArgs $) {
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LifecyclePolicyActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LifecyclePolicyActionArgs $;

        public Builder() {
            $ = new LifecyclePolicyActionArgs();
        }

        public Builder(LifecyclePolicyActionArgs defaults) {
            $ = new LifecyclePolicyActionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param type The type of action to take. Currently only &#39;expire&#39; is supported.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<LifecyclePolicyActionType> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of action to take. Currently only &#39;expire&#39; is supported.
         * 
         * @return builder
         * 
         */
        public Builder type(LifecyclePolicyActionType type) {
            return type(Output.of(type));
        }

        public LifecyclePolicyActionArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("LifecyclePolicyActionArgs", "type");
            }
            return $;
        }
    }

}
