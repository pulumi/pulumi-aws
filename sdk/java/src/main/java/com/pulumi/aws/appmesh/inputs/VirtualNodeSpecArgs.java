// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.inputs;

import com.pulumi.aws.appmesh.inputs.VirtualNodeSpecBackendArgs;
import com.pulumi.aws.appmesh.inputs.VirtualNodeSpecBackendDefaultsArgs;
import com.pulumi.aws.appmesh.inputs.VirtualNodeSpecListenerArgs;
import com.pulumi.aws.appmesh.inputs.VirtualNodeSpecLoggingArgs;
import com.pulumi.aws.appmesh.inputs.VirtualNodeSpecServiceDiscoveryArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VirtualNodeSpecArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualNodeSpecArgs Empty = new VirtualNodeSpecArgs();

    @Import(name="backendDefaults")
    private @Nullable Output<VirtualNodeSpecBackendDefaultsArgs> backendDefaults;

    public Optional<Output<VirtualNodeSpecBackendDefaultsArgs>> backendDefaults() {
        return Optional.ofNullable(this.backendDefaults);
    }

    @Import(name="backends")
    private @Nullable Output<List<VirtualNodeSpecBackendArgs>> backends;

    public Optional<Output<List<VirtualNodeSpecBackendArgs>>> backends() {
        return Optional.ofNullable(this.backends);
    }

    @Import(name="listener")
    private @Nullable Output<VirtualNodeSpecListenerArgs> listener;

    public Optional<Output<VirtualNodeSpecListenerArgs>> listener() {
        return Optional.ofNullable(this.listener);
    }

    @Import(name="logging")
    private @Nullable Output<VirtualNodeSpecLoggingArgs> logging;

    public Optional<Output<VirtualNodeSpecLoggingArgs>> logging() {
        return Optional.ofNullable(this.logging);
    }

    @Import(name="serviceDiscovery")
    private @Nullable Output<VirtualNodeSpecServiceDiscoveryArgs> serviceDiscovery;

    public Optional<Output<VirtualNodeSpecServiceDiscoveryArgs>> serviceDiscovery() {
        return Optional.ofNullable(this.serviceDiscovery);
    }

    private VirtualNodeSpecArgs() {}

    private VirtualNodeSpecArgs(VirtualNodeSpecArgs $) {
        this.backendDefaults = $.backendDefaults;
        this.backends = $.backends;
        this.listener = $.listener;
        this.logging = $.logging;
        this.serviceDiscovery = $.serviceDiscovery;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualNodeSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualNodeSpecArgs $;

        public Builder() {
            $ = new VirtualNodeSpecArgs();
        }

        public Builder(VirtualNodeSpecArgs defaults) {
            $ = new VirtualNodeSpecArgs(Objects.requireNonNull(defaults));
        }

        public Builder backendDefaults(@Nullable Output<VirtualNodeSpecBackendDefaultsArgs> backendDefaults) {
            $.backendDefaults = backendDefaults;
            return this;
        }

        public Builder backendDefaults(VirtualNodeSpecBackendDefaultsArgs backendDefaults) {
            return backendDefaults(Output.of(backendDefaults));
        }

        public Builder backends(@Nullable Output<List<VirtualNodeSpecBackendArgs>> backends) {
            $.backends = backends;
            return this;
        }

        public Builder backends(List<VirtualNodeSpecBackendArgs> backends) {
            return backends(Output.of(backends));
        }

        public Builder backends(VirtualNodeSpecBackendArgs... backends) {
            return backends(List.of(backends));
        }

        public Builder listener(@Nullable Output<VirtualNodeSpecListenerArgs> listener) {
            $.listener = listener;
            return this;
        }

        public Builder listener(VirtualNodeSpecListenerArgs listener) {
            return listener(Output.of(listener));
        }

        public Builder logging(@Nullable Output<VirtualNodeSpecLoggingArgs> logging) {
            $.logging = logging;
            return this;
        }

        public Builder logging(VirtualNodeSpecLoggingArgs logging) {
            return logging(Output.of(logging));
        }

        public Builder serviceDiscovery(@Nullable Output<VirtualNodeSpecServiceDiscoveryArgs> serviceDiscovery) {
            $.serviceDiscovery = serviceDiscovery;
            return this;
        }

        public Builder serviceDiscovery(VirtualNodeSpecServiceDiscoveryArgs serviceDiscovery) {
            return serviceDiscovery(Output.of(serviceDiscovery));
        }

        public VirtualNodeSpecArgs build() {
            return $;
        }
    }

}
