// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.directoryservice;

import com.pulumi.aws.directoryservice.inputs.SharedDirectoryTargetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SharedDirectoryArgs extends com.pulumi.resources.ResourceArgs {

    public static final SharedDirectoryArgs Empty = new SharedDirectoryArgs();

    @Import(name="directoryId", required=true)
    private Output<String> directoryId;

    public Output<String> directoryId() {
        return this.directoryId;
    }

    @Import(name="method")
    private @Nullable Output<String> method;

    public Optional<Output<String>> method() {
        return Optional.ofNullable(this.method);
    }

    @Import(name="notes")
    private @Nullable Output<String> notes;

    public Optional<Output<String>> notes() {
        return Optional.ofNullable(this.notes);
    }

    @Import(name="target", required=true)
    private Output<SharedDirectoryTargetArgs> target;

    public Output<SharedDirectoryTargetArgs> target() {
        return this.target;
    }

    private SharedDirectoryArgs() {}

    private SharedDirectoryArgs(SharedDirectoryArgs $) {
        this.directoryId = $.directoryId;
        this.method = $.method;
        this.notes = $.notes;
        this.target = $.target;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SharedDirectoryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SharedDirectoryArgs $;

        public Builder() {
            $ = new SharedDirectoryArgs();
        }

        public Builder(SharedDirectoryArgs defaults) {
            $ = new SharedDirectoryArgs(Objects.requireNonNull(defaults));
        }

        public Builder directoryId(Output<String> directoryId) {
            $.directoryId = directoryId;
            return this;
        }

        public Builder directoryId(String directoryId) {
            return directoryId(Output.of(directoryId));
        }

        public Builder method(@Nullable Output<String> method) {
            $.method = method;
            return this;
        }

        public Builder method(String method) {
            return method(Output.of(method));
        }

        public Builder notes(@Nullable Output<String> notes) {
            $.notes = notes;
            return this;
        }

        public Builder notes(String notes) {
            return notes(Output.of(notes));
        }

        public Builder target(Output<SharedDirectoryTargetArgs> target) {
            $.target = target;
            return this;
        }

        public Builder target(SharedDirectoryTargetArgs target) {
            return target(Output.of(target));
        }

        public SharedDirectoryArgs build() {
            $.directoryId = Objects.requireNonNull($.directoryId, "expected parameter 'directoryId' to be non-null");
            $.target = Objects.requireNonNull($.target, "expected parameter 'target' to be non-null");
            return $;
        }
    }

}
