// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.outputs;

import com.pulumi.aws.ec2.outputs.GetKeyPairFilter;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetKeyPairResult {
    /**
     * @return ARN of the Key Pair.
     * 
     */
    private @Nullable String arn;
    /**
     * @return Timestamp for when the key pair was created in ISO 8601 format.
     * 
     */
    private @Nullable String createTime;
    private @Nullable List<GetKeyPairFilter> filters;
    /**
     * @return SHA-1 digest of the DER encoded private key.
     * 
     */
    private @Nullable String fingerprint;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private @Nullable Boolean includePublicKey;
    private @Nullable String keyName;
    private @Nullable String keyPairId;
    /**
     * @return Type of key pair.
     * 
     */
    private @Nullable String keyType;
    /**
     * @return Public key material.
     * 
     */
    private @Nullable String publicKey;
    /**
     * @return Any tags assigned to the Key Pair.
     * 
     */
    private @Nullable Map<String,String> tags;

    private GetKeyPairResult() {}
    /**
     * @return ARN of the Key Pair.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return Timestamp for when the key pair was created in ISO 8601 format.
     * 
     */
    public Optional<String> createTime() {
        return Optional.ofNullable(this.createTime);
    }
    public List<GetKeyPairFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return SHA-1 digest of the DER encoded private key.
     * 
     */
    public Optional<String> fingerprint() {
        return Optional.ofNullable(this.fingerprint);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<Boolean> includePublicKey() {
        return Optional.ofNullable(this.includePublicKey);
    }
    public Optional<String> keyName() {
        return Optional.ofNullable(this.keyName);
    }
    public Optional<String> keyPairId() {
        return Optional.ofNullable(this.keyPairId);
    }
    /**
     * @return Type of key pair.
     * 
     */
    public Optional<String> keyType() {
        return Optional.ofNullable(this.keyType);
    }
    /**
     * @return Public key material.
     * 
     */
    public Optional<String> publicKey() {
        return Optional.ofNullable(this.publicKey);
    }
    /**
     * @return Any tags assigned to the Key Pair.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKeyPairResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String createTime;
        private @Nullable List<GetKeyPairFilter> filters;
        private @Nullable String fingerprint;
        private @Nullable String id;
        private @Nullable Boolean includePublicKey;
        private @Nullable String keyName;
        private @Nullable String keyPairId;
        private @Nullable String keyType;
        private @Nullable String publicKey;
        private @Nullable Map<String,String> tags;
        public Builder() {}
        public Builder(GetKeyPairResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.createTime = defaults.createTime;
    	      this.filters = defaults.filters;
    	      this.fingerprint = defaults.fingerprint;
    	      this.id = defaults.id;
    	      this.includePublicKey = defaults.includePublicKey;
    	      this.keyName = defaults.keyName;
    	      this.keyPairId = defaults.keyPairId;
    	      this.keyType = defaults.keyType;
    	      this.publicKey = defaults.publicKey;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder createTime(@Nullable String createTime) {
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetKeyPairFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetKeyPairFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder fingerprint(@Nullable String fingerprint) {
            this.fingerprint = fingerprint;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder includePublicKey(@Nullable Boolean includePublicKey) {
            this.includePublicKey = includePublicKey;
            return this;
        }
        @CustomType.Setter
        public Builder keyName(@Nullable String keyName) {
            this.keyName = keyName;
            return this;
        }
        @CustomType.Setter
        public Builder keyPairId(@Nullable String keyPairId) {
            this.keyPairId = keyPairId;
            return this;
        }
        @CustomType.Setter
        public Builder keyType(@Nullable String keyType) {
            this.keyType = keyType;
            return this;
        }
        @CustomType.Setter
        public Builder publicKey(@Nullable String publicKey) {
            this.publicKey = publicKey;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public GetKeyPairResult build() {
            final var o = new GetKeyPairResult();
            o.arn = arn;
            o.createTime = createTime;
            o.filters = filters;
            o.fingerprint = fingerprint;
            o.id = id;
            o.includePublicKey = includePublicKey;
            o.keyName = keyName;
            o.keyPairId = keyPairId;
            o.keyType = keyType;
            o.publicKey = publicKey;
            o.tags = tags;
            return o;
        }
    }
}
