// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codedeploy.inputs;

import com.pulumi.aws.codedeploy.inputs.DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteArgs;
import com.pulumi.aws.codedeploy.inputs.DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArgs;
import com.pulumi.aws.codedeploy.inputs.DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeploymentGroupLoadBalancerInfoTargetGroupPairInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentGroupLoadBalancerInfoTargetGroupPairInfoArgs Empty = new DeploymentGroupLoadBalancerInfoTargetGroupPairInfoArgs();

    /**
     * Configuration block for the production traffic route (documented below).
     * 
     */
    @Import(name="prodTrafficRoute", required=true)
    private Output<DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteArgs> prodTrafficRoute;

    /**
     * @return Configuration block for the production traffic route (documented below).
     * 
     */
    public Output<DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteArgs> prodTrafficRoute() {
        return this.prodTrafficRoute;
    }

    /**
     * Configuration blocks for a target group within a target group pair (documented below).
     * 
     */
    @Import(name="targetGroups", required=true)
    private Output<List<DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArgs>> targetGroups;

    /**
     * @return Configuration blocks for a target group within a target group pair (documented below).
     * 
     */
    public Output<List<DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArgs>> targetGroups() {
        return this.targetGroups;
    }

    /**
     * Configuration block for the test traffic route (documented below).
     * 
     */
    @Import(name="testTrafficRoute")
    private @Nullable Output<DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteArgs> testTrafficRoute;

    /**
     * @return Configuration block for the test traffic route (documented below).
     * 
     */
    public Optional<Output<DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteArgs>> testTrafficRoute() {
        return Optional.ofNullable(this.testTrafficRoute);
    }

    private DeploymentGroupLoadBalancerInfoTargetGroupPairInfoArgs() {}

    private DeploymentGroupLoadBalancerInfoTargetGroupPairInfoArgs(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoArgs $) {
        this.prodTrafficRoute = $.prodTrafficRoute;
        this.targetGroups = $.targetGroups;
        this.testTrafficRoute = $.testTrafficRoute;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentGroupLoadBalancerInfoTargetGroupPairInfoArgs $;

        public Builder() {
            $ = new DeploymentGroupLoadBalancerInfoTargetGroupPairInfoArgs();
        }

        public Builder(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoArgs defaults) {
            $ = new DeploymentGroupLoadBalancerInfoTargetGroupPairInfoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param prodTrafficRoute Configuration block for the production traffic route (documented below).
         * 
         * @return builder
         * 
         */
        public Builder prodTrafficRoute(Output<DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteArgs> prodTrafficRoute) {
            $.prodTrafficRoute = prodTrafficRoute;
            return this;
        }

        /**
         * @param prodTrafficRoute Configuration block for the production traffic route (documented below).
         * 
         * @return builder
         * 
         */
        public Builder prodTrafficRoute(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteArgs prodTrafficRoute) {
            return prodTrafficRoute(Output.of(prodTrafficRoute));
        }

        /**
         * @param targetGroups Configuration blocks for a target group within a target group pair (documented below).
         * 
         * @return builder
         * 
         */
        public Builder targetGroups(Output<List<DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArgs>> targetGroups) {
            $.targetGroups = targetGroups;
            return this;
        }

        /**
         * @param targetGroups Configuration blocks for a target group within a target group pair (documented below).
         * 
         * @return builder
         * 
         */
        public Builder targetGroups(List<DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArgs> targetGroups) {
            return targetGroups(Output.of(targetGroups));
        }

        /**
         * @param targetGroups Configuration blocks for a target group within a target group pair (documented below).
         * 
         * @return builder
         * 
         */
        public Builder targetGroups(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArgs... targetGroups) {
            return targetGroups(List.of(targetGroups));
        }

        /**
         * @param testTrafficRoute Configuration block for the test traffic route (documented below).
         * 
         * @return builder
         * 
         */
        public Builder testTrafficRoute(@Nullable Output<DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteArgs> testTrafficRoute) {
            $.testTrafficRoute = testTrafficRoute;
            return this;
        }

        /**
         * @param testTrafficRoute Configuration block for the test traffic route (documented below).
         * 
         * @return builder
         * 
         */
        public Builder testTrafficRoute(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteArgs testTrafficRoute) {
            return testTrafficRoute(Output.of(testTrafficRoute));
        }

        public DeploymentGroupLoadBalancerInfoTargetGroupPairInfoArgs build() {
            if ($.prodTrafficRoute == null) {
                throw new MissingRequiredPropertyException("DeploymentGroupLoadBalancerInfoTargetGroupPairInfoArgs", "prodTrafficRoute");
            }
            if ($.targetGroups == null) {
                throw new MissingRequiredPropertyException("DeploymentGroupLoadBalancerInfoTargetGroupPairInfoArgs", "targetGroups");
            }
            return $;
        }
    }

}
