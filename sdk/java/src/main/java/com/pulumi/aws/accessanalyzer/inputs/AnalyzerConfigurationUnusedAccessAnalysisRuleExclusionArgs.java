// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.accessanalyzer.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AnalyzerConfigurationUnusedAccessAnalysisRuleExclusionArgs extends com.pulumi.resources.ResourceArgs {

    public static final AnalyzerConfigurationUnusedAccessAnalysisRuleExclusionArgs Empty = new AnalyzerConfigurationUnusedAccessAnalysisRuleExclusionArgs();

    /**
     * A list of account IDs to exclude from the analysis.
     * 
     */
    @Import(name="accountIds")
    private @Nullable Output<List<String>> accountIds;

    /**
     * @return A list of account IDs to exclude from the analysis.
     * 
     */
    public Optional<Output<List<String>>> accountIds() {
        return Optional.ofNullable(this.accountIds);
    }

    /**
     * A list of key-value pairs for resource tags to exclude from the analysis.
     * 
     */
    @Import(name="resourceTags")
    private @Nullable Output<List<Map<String,String>>> resourceTags;

    /**
     * @return A list of key-value pairs for resource tags to exclude from the analysis.
     * 
     */
    public Optional<Output<List<Map<String,String>>>> resourceTags() {
        return Optional.ofNullable(this.resourceTags);
    }

    private AnalyzerConfigurationUnusedAccessAnalysisRuleExclusionArgs() {}

    private AnalyzerConfigurationUnusedAccessAnalysisRuleExclusionArgs(AnalyzerConfigurationUnusedAccessAnalysisRuleExclusionArgs $) {
        this.accountIds = $.accountIds;
        this.resourceTags = $.resourceTags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AnalyzerConfigurationUnusedAccessAnalysisRuleExclusionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AnalyzerConfigurationUnusedAccessAnalysisRuleExclusionArgs $;

        public Builder() {
            $ = new AnalyzerConfigurationUnusedAccessAnalysisRuleExclusionArgs();
        }

        public Builder(AnalyzerConfigurationUnusedAccessAnalysisRuleExclusionArgs defaults) {
            $ = new AnalyzerConfigurationUnusedAccessAnalysisRuleExclusionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountIds A list of account IDs to exclude from the analysis.
         * 
         * @return builder
         * 
         */
        public Builder accountIds(@Nullable Output<List<String>> accountIds) {
            $.accountIds = accountIds;
            return this;
        }

        /**
         * @param accountIds A list of account IDs to exclude from the analysis.
         * 
         * @return builder
         * 
         */
        public Builder accountIds(List<String> accountIds) {
            return accountIds(Output.of(accountIds));
        }

        /**
         * @param accountIds A list of account IDs to exclude from the analysis.
         * 
         * @return builder
         * 
         */
        public Builder accountIds(String... accountIds) {
            return accountIds(List.of(accountIds));
        }

        /**
         * @param resourceTags A list of key-value pairs for resource tags to exclude from the analysis.
         * 
         * @return builder
         * 
         */
        public Builder resourceTags(@Nullable Output<List<Map<String,String>>> resourceTags) {
            $.resourceTags = resourceTags;
            return this;
        }

        /**
         * @param resourceTags A list of key-value pairs for resource tags to exclude from the analysis.
         * 
         * @return builder
         * 
         */
        public Builder resourceTags(List<Map<String,String>> resourceTags) {
            return resourceTags(Output.of(resourceTags));
        }

        /**
         * @param resourceTags A list of key-value pairs for resource tags to exclude from the analysis.
         * 
         * @return builder
         * 
         */
        public Builder resourceTags(Map<String,String>... resourceTags) {
            return resourceTags(List.of(resourceTags));
        }

        public AnalyzerConfigurationUnusedAccessAnalysisRuleExclusionArgs build() {
            return $;
        }
    }

}
