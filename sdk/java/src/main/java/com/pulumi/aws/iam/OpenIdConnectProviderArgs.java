// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iam;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OpenIdConnectProviderArgs extends com.pulumi.resources.ResourceArgs {

    public static final OpenIdConnectProviderArgs Empty = new OpenIdConnectProviderArgs();

    @Import(name="clientIdLists", required=true)
    private Output<List<String>> clientIdLists;

    public Output<List<String>> clientIdLists() {
        return this.clientIdLists;
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="thumbprintLists", required=true)
    private Output<List<String>> thumbprintLists;

    public Output<List<String>> thumbprintLists() {
        return this.thumbprintLists;
    }

    @Import(name="url", required=true)
    private Output<String> url;

    public Output<String> url() {
        return this.url;
    }

    private OpenIdConnectProviderArgs() {}

    private OpenIdConnectProviderArgs(OpenIdConnectProviderArgs $) {
        this.clientIdLists = $.clientIdLists;
        this.tags = $.tags;
        this.thumbprintLists = $.thumbprintLists;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OpenIdConnectProviderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OpenIdConnectProviderArgs $;

        public Builder() {
            $ = new OpenIdConnectProviderArgs();
        }

        public Builder(OpenIdConnectProviderArgs defaults) {
            $ = new OpenIdConnectProviderArgs(Objects.requireNonNull(defaults));
        }

        public Builder clientIdLists(Output<List<String>> clientIdLists) {
            $.clientIdLists = clientIdLists;
            return this;
        }

        public Builder clientIdLists(List<String> clientIdLists) {
            return clientIdLists(Output.of(clientIdLists));
        }

        public Builder clientIdLists(String... clientIdLists) {
            return clientIdLists(List.of(clientIdLists));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder thumbprintLists(Output<List<String>> thumbprintLists) {
            $.thumbprintLists = thumbprintLists;
            return this;
        }

        public Builder thumbprintLists(List<String> thumbprintLists) {
            return thumbprintLists(Output.of(thumbprintLists));
        }

        public Builder thumbprintLists(String... thumbprintLists) {
            return thumbprintLists(List.of(thumbprintLists));
        }

        public Builder url(Output<String> url) {
            $.url = url;
            return this;
        }

        public Builder url(String url) {
            return url(Output.of(url));
        }

        public OpenIdConnectProviderArgs build() {
            $.clientIdLists = Objects.requireNonNull($.clientIdLists, "expected parameter 'clientIdLists' to be non-null");
            $.thumbprintLists = Objects.requireNonNull($.thumbprintLists, "expected parameter 'thumbprintLists' to be non-null");
            $.url = Objects.requireNonNull($.url, "expected parameter 'url' to be non-null");
            return $;
        }
    }

}
