// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cognito.inputs;

import com.pulumi.aws.cognito.inputs.ResourceServerScopeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResourceServerState extends com.pulumi.resources.ResourceArgs {

    public static final ResourceServerState Empty = new ResourceServerState();

    @Import(name="identifier")
    private @Nullable Output<String> identifier;

    public Optional<Output<String>> identifier() {
        return Optional.ofNullable(this.identifier);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="scopeIdentifiers")
    private @Nullable Output<List<String>> scopeIdentifiers;

    public Optional<Output<List<String>>> scopeIdentifiers() {
        return Optional.ofNullable(this.scopeIdentifiers);
    }

    @Import(name="scopes")
    private @Nullable Output<List<ResourceServerScopeArgs>> scopes;

    public Optional<Output<List<ResourceServerScopeArgs>>> scopes() {
        return Optional.ofNullable(this.scopes);
    }

    @Import(name="userPoolId")
    private @Nullable Output<String> userPoolId;

    public Optional<Output<String>> userPoolId() {
        return Optional.ofNullable(this.userPoolId);
    }

    private ResourceServerState() {}

    private ResourceServerState(ResourceServerState $) {
        this.identifier = $.identifier;
        this.name = $.name;
        this.scopeIdentifiers = $.scopeIdentifiers;
        this.scopes = $.scopes;
        this.userPoolId = $.userPoolId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourceServerState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourceServerState $;

        public Builder() {
            $ = new ResourceServerState();
        }

        public Builder(ResourceServerState defaults) {
            $ = new ResourceServerState(Objects.requireNonNull(defaults));
        }

        public Builder identifier(@Nullable Output<String> identifier) {
            $.identifier = identifier;
            return this;
        }

        public Builder identifier(String identifier) {
            return identifier(Output.of(identifier));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder scopeIdentifiers(@Nullable Output<List<String>> scopeIdentifiers) {
            $.scopeIdentifiers = scopeIdentifiers;
            return this;
        }

        public Builder scopeIdentifiers(List<String> scopeIdentifiers) {
            return scopeIdentifiers(Output.of(scopeIdentifiers));
        }

        public Builder scopeIdentifiers(String... scopeIdentifiers) {
            return scopeIdentifiers(List.of(scopeIdentifiers));
        }

        public Builder scopes(@Nullable Output<List<ResourceServerScopeArgs>> scopes) {
            $.scopes = scopes;
            return this;
        }

        public Builder scopes(List<ResourceServerScopeArgs> scopes) {
            return scopes(Output.of(scopes));
        }

        public Builder scopes(ResourceServerScopeArgs... scopes) {
            return scopes(List.of(scopes));
        }

        public Builder userPoolId(@Nullable Output<String> userPoolId) {
            $.userPoolId = userPoolId;
            return this;
        }

        public Builder userPoolId(String userPoolId) {
            return userPoolId(Output.of(userPoolId));
        }

        public ResourceServerState build() {
            return $;
        }
    }

}
