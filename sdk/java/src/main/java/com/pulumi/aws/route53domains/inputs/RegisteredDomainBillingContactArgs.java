// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.route53domains.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RegisteredDomainBillingContactArgs extends com.pulumi.resources.ResourceArgs {

    public static final RegisteredDomainBillingContactArgs Empty = new RegisteredDomainBillingContactArgs();

    @Import(name="addressLine1")
    private @Nullable Output<String> addressLine1;

    public Optional<Output<String>> addressLine1() {
        return Optional.ofNullable(this.addressLine1);
    }

    @Import(name="addressLine2")
    private @Nullable Output<String> addressLine2;

    public Optional<Output<String>> addressLine2() {
        return Optional.ofNullable(this.addressLine2);
    }

    @Import(name="city")
    private @Nullable Output<String> city;

    public Optional<Output<String>> city() {
        return Optional.ofNullable(this.city);
    }

    @Import(name="contactType")
    private @Nullable Output<String> contactType;

    public Optional<Output<String>> contactType() {
        return Optional.ofNullable(this.contactType);
    }

    @Import(name="countryCode")
    private @Nullable Output<String> countryCode;

    public Optional<Output<String>> countryCode() {
        return Optional.ofNullable(this.countryCode);
    }

    @Import(name="email")
    private @Nullable Output<String> email;

    public Optional<Output<String>> email() {
        return Optional.ofNullable(this.email);
    }

    @Import(name="extraParams")
    private @Nullable Output<Map<String,String>> extraParams;

    public Optional<Output<Map<String,String>>> extraParams() {
        return Optional.ofNullable(this.extraParams);
    }

    @Import(name="fax")
    private @Nullable Output<String> fax;

    public Optional<Output<String>> fax() {
        return Optional.ofNullable(this.fax);
    }

    @Import(name="firstName")
    private @Nullable Output<String> firstName;

    public Optional<Output<String>> firstName() {
        return Optional.ofNullable(this.firstName);
    }

    @Import(name="lastName")
    private @Nullable Output<String> lastName;

    public Optional<Output<String>> lastName() {
        return Optional.ofNullable(this.lastName);
    }

    @Import(name="organizationName")
    private @Nullable Output<String> organizationName;

    public Optional<Output<String>> organizationName() {
        return Optional.ofNullable(this.organizationName);
    }

    @Import(name="phoneNumber")
    private @Nullable Output<String> phoneNumber;

    public Optional<Output<String>> phoneNumber() {
        return Optional.ofNullable(this.phoneNumber);
    }

    @Import(name="state")
    private @Nullable Output<String> state;

    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    @Import(name="zipCode")
    private @Nullable Output<String> zipCode;

    public Optional<Output<String>> zipCode() {
        return Optional.ofNullable(this.zipCode);
    }

    private RegisteredDomainBillingContactArgs() {}

    private RegisteredDomainBillingContactArgs(RegisteredDomainBillingContactArgs $) {
        this.addressLine1 = $.addressLine1;
        this.addressLine2 = $.addressLine2;
        this.city = $.city;
        this.contactType = $.contactType;
        this.countryCode = $.countryCode;
        this.email = $.email;
        this.extraParams = $.extraParams;
        this.fax = $.fax;
        this.firstName = $.firstName;
        this.lastName = $.lastName;
        this.organizationName = $.organizationName;
        this.phoneNumber = $.phoneNumber;
        this.state = $.state;
        this.zipCode = $.zipCode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RegisteredDomainBillingContactArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RegisteredDomainBillingContactArgs $;

        public Builder() {
            $ = new RegisteredDomainBillingContactArgs();
        }

        public Builder(RegisteredDomainBillingContactArgs defaults) {
            $ = new RegisteredDomainBillingContactArgs(Objects.requireNonNull(defaults));
        }

        public Builder addressLine1(@Nullable Output<String> addressLine1) {
            $.addressLine1 = addressLine1;
            return this;
        }

        public Builder addressLine1(String addressLine1) {
            return addressLine1(Output.of(addressLine1));
        }

        public Builder addressLine2(@Nullable Output<String> addressLine2) {
            $.addressLine2 = addressLine2;
            return this;
        }

        public Builder addressLine2(String addressLine2) {
            return addressLine2(Output.of(addressLine2));
        }

        public Builder city(@Nullable Output<String> city) {
            $.city = city;
            return this;
        }

        public Builder city(String city) {
            return city(Output.of(city));
        }

        public Builder contactType(@Nullable Output<String> contactType) {
            $.contactType = contactType;
            return this;
        }

        public Builder contactType(String contactType) {
            return contactType(Output.of(contactType));
        }

        public Builder countryCode(@Nullable Output<String> countryCode) {
            $.countryCode = countryCode;
            return this;
        }

        public Builder countryCode(String countryCode) {
            return countryCode(Output.of(countryCode));
        }

        public Builder email(@Nullable Output<String> email) {
            $.email = email;
            return this;
        }

        public Builder email(String email) {
            return email(Output.of(email));
        }

        public Builder extraParams(@Nullable Output<Map<String,String>> extraParams) {
            $.extraParams = extraParams;
            return this;
        }

        public Builder extraParams(Map<String,String> extraParams) {
            return extraParams(Output.of(extraParams));
        }

        public Builder fax(@Nullable Output<String> fax) {
            $.fax = fax;
            return this;
        }

        public Builder fax(String fax) {
            return fax(Output.of(fax));
        }

        public Builder firstName(@Nullable Output<String> firstName) {
            $.firstName = firstName;
            return this;
        }

        public Builder firstName(String firstName) {
            return firstName(Output.of(firstName));
        }

        public Builder lastName(@Nullable Output<String> lastName) {
            $.lastName = lastName;
            return this;
        }

        public Builder lastName(String lastName) {
            return lastName(Output.of(lastName));
        }

        public Builder organizationName(@Nullable Output<String> organizationName) {
            $.organizationName = organizationName;
            return this;
        }

        public Builder organizationName(String organizationName) {
            return organizationName(Output.of(organizationName));
        }

        public Builder phoneNumber(@Nullable Output<String> phoneNumber) {
            $.phoneNumber = phoneNumber;
            return this;
        }

        public Builder phoneNumber(String phoneNumber) {
            return phoneNumber(Output.of(phoneNumber));
        }

        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        public Builder state(String state) {
            return state(Output.of(state));
        }

        public Builder zipCode(@Nullable Output<String> zipCode) {
            $.zipCode = zipCode;
            return this;
        }

        public Builder zipCode(String zipCode) {
            return zipCode(Output.of(zipCode));
        }

        public RegisteredDomainBillingContactArgs build() {
            return $;
        }
    }

}
