// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apigatewayv2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainNameDomainNameConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainNameDomainNameConfigurationArgs Empty = new DomainNameDomainNameConfigurationArgs();

    @Import(name="certificateArn", required=true)
    private Output<String> certificateArn;

    public Output<String> certificateArn() {
        return this.certificateArn;
    }

    @Import(name="endpointType", required=true)
    private Output<String> endpointType;

    public Output<String> endpointType() {
        return this.endpointType;
    }

    @Import(name="hostedZoneId")
    private @Nullable Output<String> hostedZoneId;

    public Optional<Output<String>> hostedZoneId() {
        return Optional.ofNullable(this.hostedZoneId);
    }

    @Import(name="ownershipVerificationCertificateArn")
    private @Nullable Output<String> ownershipVerificationCertificateArn;

    public Optional<Output<String>> ownershipVerificationCertificateArn() {
        return Optional.ofNullable(this.ownershipVerificationCertificateArn);
    }

    @Import(name="securityPolicy", required=true)
    private Output<String> securityPolicy;

    public Output<String> securityPolicy() {
        return this.securityPolicy;
    }

    @Import(name="targetDomainName")
    private @Nullable Output<String> targetDomainName;

    public Optional<Output<String>> targetDomainName() {
        return Optional.ofNullable(this.targetDomainName);
    }

    private DomainNameDomainNameConfigurationArgs() {}

    private DomainNameDomainNameConfigurationArgs(DomainNameDomainNameConfigurationArgs $) {
        this.certificateArn = $.certificateArn;
        this.endpointType = $.endpointType;
        this.hostedZoneId = $.hostedZoneId;
        this.ownershipVerificationCertificateArn = $.ownershipVerificationCertificateArn;
        this.securityPolicy = $.securityPolicy;
        this.targetDomainName = $.targetDomainName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainNameDomainNameConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainNameDomainNameConfigurationArgs $;

        public Builder() {
            $ = new DomainNameDomainNameConfigurationArgs();
        }

        public Builder(DomainNameDomainNameConfigurationArgs defaults) {
            $ = new DomainNameDomainNameConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder certificateArn(Output<String> certificateArn) {
            $.certificateArn = certificateArn;
            return this;
        }

        public Builder certificateArn(String certificateArn) {
            return certificateArn(Output.of(certificateArn));
        }

        public Builder endpointType(Output<String> endpointType) {
            $.endpointType = endpointType;
            return this;
        }

        public Builder endpointType(String endpointType) {
            return endpointType(Output.of(endpointType));
        }

        public Builder hostedZoneId(@Nullable Output<String> hostedZoneId) {
            $.hostedZoneId = hostedZoneId;
            return this;
        }

        public Builder hostedZoneId(String hostedZoneId) {
            return hostedZoneId(Output.of(hostedZoneId));
        }

        public Builder ownershipVerificationCertificateArn(@Nullable Output<String> ownershipVerificationCertificateArn) {
            $.ownershipVerificationCertificateArn = ownershipVerificationCertificateArn;
            return this;
        }

        public Builder ownershipVerificationCertificateArn(String ownershipVerificationCertificateArn) {
            return ownershipVerificationCertificateArn(Output.of(ownershipVerificationCertificateArn));
        }

        public Builder securityPolicy(Output<String> securityPolicy) {
            $.securityPolicy = securityPolicy;
            return this;
        }

        public Builder securityPolicy(String securityPolicy) {
            return securityPolicy(Output.of(securityPolicy));
        }

        public Builder targetDomainName(@Nullable Output<String> targetDomainName) {
            $.targetDomainName = targetDomainName;
            return this;
        }

        public Builder targetDomainName(String targetDomainName) {
            return targetDomainName(Output.of(targetDomainName));
        }

        public DomainNameDomainNameConfigurationArgs build() {
            $.certificateArn = Objects.requireNonNull($.certificateArn, "expected parameter 'certificateArn' to be non-null");
            $.endpointType = Objects.requireNonNull($.endpointType, "expected parameter 'endpointType' to be non-null");
            $.securityPolicy = Objects.requireNonNull($.securityPolicy, "expected parameter 'securityPolicy' to be non-null");
            return $;
        }
    }

}
