// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2;

import com.pulumi.aws.ec2.inputs.VpcIpamOperatingRegionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpcIpamArgs extends com.pulumi.resources.ResourceArgs {

    public static final VpcIpamArgs Empty = new VpcIpamArgs();

    @Import(name="cascade")
    private @Nullable Output<Boolean> cascade;

    public Optional<Output<Boolean>> cascade() {
        return Optional.ofNullable(this.cascade);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="operatingRegions", required=true)
    private Output<List<VpcIpamOperatingRegionArgs>> operatingRegions;

    public Output<List<VpcIpamOperatingRegionArgs>> operatingRegions() {
        return this.operatingRegions;
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private VpcIpamArgs() {}

    private VpcIpamArgs(VpcIpamArgs $) {
        this.cascade = $.cascade;
        this.description = $.description;
        this.operatingRegions = $.operatingRegions;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpcIpamArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpcIpamArgs $;

        public Builder() {
            $ = new VpcIpamArgs();
        }

        public Builder(VpcIpamArgs defaults) {
            $ = new VpcIpamArgs(Objects.requireNonNull(defaults));
        }

        public Builder cascade(@Nullable Output<Boolean> cascade) {
            $.cascade = cascade;
            return this;
        }

        public Builder cascade(Boolean cascade) {
            return cascade(Output.of(cascade));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder operatingRegions(Output<List<VpcIpamOperatingRegionArgs>> operatingRegions) {
            $.operatingRegions = operatingRegions;
            return this;
        }

        public Builder operatingRegions(List<VpcIpamOperatingRegionArgs> operatingRegions) {
            return operatingRegions(Output.of(operatingRegions));
        }

        public Builder operatingRegions(VpcIpamOperatingRegionArgs... operatingRegions) {
            return operatingRegions(List.of(operatingRegions));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public VpcIpamArgs build() {
            $.operatingRegions = Objects.requireNonNull($.operatingRegions, "expected parameter 'operatingRegions' to be non-null");
            return $;
        }
    }

}
