// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dynamodb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KinesisStreamingDestinationState extends com.pulumi.resources.ResourceArgs {

    public static final KinesisStreamingDestinationState Empty = new KinesisStreamingDestinationState();

    /**
     * The ARN for a Kinesis data stream. This must exist in the same account and region as the DynamoDB table.
     * 
     */
    @Import(name="streamArn")
    private @Nullable Output<String> streamArn;

    /**
     * @return The ARN for a Kinesis data stream. This must exist in the same account and region as the DynamoDB table.
     * 
     */
    public Optional<Output<String>> streamArn() {
        return Optional.ofNullable(this.streamArn);
    }

    /**
     * The name of the DynamoDB table. There
     * can only be one Kinesis streaming destination for a given DynamoDB table.
     * 
     */
    @Import(name="tableName")
    private @Nullable Output<String> tableName;

    /**
     * @return The name of the DynamoDB table. There
     * can only be one Kinesis streaming destination for a given DynamoDB table.
     * 
     */
    public Optional<Output<String>> tableName() {
        return Optional.ofNullable(this.tableName);
    }

    private KinesisStreamingDestinationState() {}

    private KinesisStreamingDestinationState(KinesisStreamingDestinationState $) {
        this.streamArn = $.streamArn;
        this.tableName = $.tableName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KinesisStreamingDestinationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KinesisStreamingDestinationState $;

        public Builder() {
            $ = new KinesisStreamingDestinationState();
        }

        public Builder(KinesisStreamingDestinationState defaults) {
            $ = new KinesisStreamingDestinationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param streamArn The ARN for a Kinesis data stream. This must exist in the same account and region as the DynamoDB table.
         * 
         * @return builder
         * 
         */
        public Builder streamArn(@Nullable Output<String> streamArn) {
            $.streamArn = streamArn;
            return this;
        }

        /**
         * @param streamArn The ARN for a Kinesis data stream. This must exist in the same account and region as the DynamoDB table.
         * 
         * @return builder
         * 
         */
        public Builder streamArn(String streamArn) {
            return streamArn(Output.of(streamArn));
        }

        /**
         * @param tableName The name of the DynamoDB table. There
         * can only be one Kinesis streaming destination for a given DynamoDB table.
         * 
         * @return builder
         * 
         */
        public Builder tableName(@Nullable Output<String> tableName) {
            $.tableName = tableName;
            return this;
        }

        /**
         * @param tableName The name of the DynamoDB table. There
         * can only be one Kinesis streaming destination for a given DynamoDB table.
         * 
         * @return builder
         * 
         */
        public Builder tableName(String tableName) {
            return tableName(Output.of(tableName));
        }

        public KinesisStreamingDestinationState build() {
            return $;
        }
    }

}
