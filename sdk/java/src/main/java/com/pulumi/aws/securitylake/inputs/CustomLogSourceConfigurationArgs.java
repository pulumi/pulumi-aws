// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.securitylake.inputs;

import com.pulumi.aws.securitylake.inputs.CustomLogSourceConfigurationCrawlerConfigurationArgs;
import com.pulumi.aws.securitylake.inputs.CustomLogSourceConfigurationProviderIdentityArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CustomLogSourceConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomLogSourceConfigurationArgs Empty = new CustomLogSourceConfigurationArgs();

    /**
     * The configuration for the Glue Crawler for the third-party custom source.
     * 
     */
    @Import(name="crawlerConfiguration")
    private @Nullable Output<CustomLogSourceConfigurationCrawlerConfigurationArgs> crawlerConfiguration;

    /**
     * @return The configuration for the Glue Crawler for the third-party custom source.
     * 
     */
    public Optional<Output<CustomLogSourceConfigurationCrawlerConfigurationArgs>> crawlerConfiguration() {
        return Optional.ofNullable(this.crawlerConfiguration);
    }

    /**
     * The identity of the log provider for the third-party custom source.
     * 
     */
    @Import(name="providerIdentity")
    private @Nullable Output<CustomLogSourceConfigurationProviderIdentityArgs> providerIdentity;

    /**
     * @return The identity of the log provider for the third-party custom source.
     * 
     */
    public Optional<Output<CustomLogSourceConfigurationProviderIdentityArgs>> providerIdentity() {
        return Optional.ofNullable(this.providerIdentity);
    }

    private CustomLogSourceConfigurationArgs() {}

    private CustomLogSourceConfigurationArgs(CustomLogSourceConfigurationArgs $) {
        this.crawlerConfiguration = $.crawlerConfiguration;
        this.providerIdentity = $.providerIdentity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomLogSourceConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomLogSourceConfigurationArgs $;

        public Builder() {
            $ = new CustomLogSourceConfigurationArgs();
        }

        public Builder(CustomLogSourceConfigurationArgs defaults) {
            $ = new CustomLogSourceConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param crawlerConfiguration The configuration for the Glue Crawler for the third-party custom source.
         * 
         * @return builder
         * 
         */
        public Builder crawlerConfiguration(@Nullable Output<CustomLogSourceConfigurationCrawlerConfigurationArgs> crawlerConfiguration) {
            $.crawlerConfiguration = crawlerConfiguration;
            return this;
        }

        /**
         * @param crawlerConfiguration The configuration for the Glue Crawler for the third-party custom source.
         * 
         * @return builder
         * 
         */
        public Builder crawlerConfiguration(CustomLogSourceConfigurationCrawlerConfigurationArgs crawlerConfiguration) {
            return crawlerConfiguration(Output.of(crawlerConfiguration));
        }

        /**
         * @param providerIdentity The identity of the log provider for the third-party custom source.
         * 
         * @return builder
         * 
         */
        public Builder providerIdentity(@Nullable Output<CustomLogSourceConfigurationProviderIdentityArgs> providerIdentity) {
            $.providerIdentity = providerIdentity;
            return this;
        }

        /**
         * @param providerIdentity The identity of the log provider for the third-party custom source.
         * 
         * @return builder
         * 
         */
        public Builder providerIdentity(CustomLogSourceConfigurationProviderIdentityArgs providerIdentity) {
            return providerIdentity(Output.of(providerIdentity));
        }

        public CustomLogSourceConfigurationArgs build() {
            return $;
        }
    }

}
