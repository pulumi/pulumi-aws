// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GuardrailTopicPolicyConfigTopicsConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final GuardrailTopicPolicyConfigTopicsConfigArgs Empty = new GuardrailTopicPolicyConfigTopicsConfigArgs();

    /**
     * Definition of topic in topic policy.
     * 
     */
    @Import(name="definition", required=true)
    private Output<String> definition;

    /**
     * @return Definition of topic in topic policy.
     * 
     */
    public Output<String> definition() {
        return this.definition;
    }

    /**
     * List of text examples.
     * 
     */
    @Import(name="examples")
    private @Nullable Output<List<String>> examples;

    /**
     * @return List of text examples.
     * 
     */
    public Optional<Output<List<String>>> examples() {
        return Optional.ofNullable(this.examples);
    }

    /**
     * Name of topic in topic policy.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of topic in topic policy.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Type of topic in a policy.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Type of topic in a policy.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private GuardrailTopicPolicyConfigTopicsConfigArgs() {}

    private GuardrailTopicPolicyConfigTopicsConfigArgs(GuardrailTopicPolicyConfigTopicsConfigArgs $) {
        this.definition = $.definition;
        this.examples = $.examples;
        this.name = $.name;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GuardrailTopicPolicyConfigTopicsConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GuardrailTopicPolicyConfigTopicsConfigArgs $;

        public Builder() {
            $ = new GuardrailTopicPolicyConfigTopicsConfigArgs();
        }

        public Builder(GuardrailTopicPolicyConfigTopicsConfigArgs defaults) {
            $ = new GuardrailTopicPolicyConfigTopicsConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param definition Definition of topic in topic policy.
         * 
         * @return builder
         * 
         */
        public Builder definition(Output<String> definition) {
            $.definition = definition;
            return this;
        }

        /**
         * @param definition Definition of topic in topic policy.
         * 
         * @return builder
         * 
         */
        public Builder definition(String definition) {
            return definition(Output.of(definition));
        }

        /**
         * @param examples List of text examples.
         * 
         * @return builder
         * 
         */
        public Builder examples(@Nullable Output<List<String>> examples) {
            $.examples = examples;
            return this;
        }

        /**
         * @param examples List of text examples.
         * 
         * @return builder
         * 
         */
        public Builder examples(List<String> examples) {
            return examples(Output.of(examples));
        }

        /**
         * @param examples List of text examples.
         * 
         * @return builder
         * 
         */
        public Builder examples(String... examples) {
            return examples(List.of(examples));
        }

        /**
         * @param name Name of topic in topic policy.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of topic in topic policy.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param type Type of topic in a policy.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of topic in a policy.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public GuardrailTopicPolicyConfigTopicsConfigArgs build() {
            if ($.definition == null) {
                throw new MissingRequiredPropertyException("GuardrailTopicPolicyConfigTopicsConfigArgs", "definition");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GuardrailTopicPolicyConfigTopicsConfigArgs", "name");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("GuardrailTopicPolicyConfigTopicsConfigArgs", "type");
            }
            return $;
        }
    }

}
