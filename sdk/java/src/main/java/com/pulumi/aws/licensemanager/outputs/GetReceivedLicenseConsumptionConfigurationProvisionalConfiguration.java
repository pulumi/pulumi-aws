// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.licensemanager.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetReceivedLicenseConsumptionConfigurationProvisionalConfiguration {
    /**
     * @return Maximum time for the provisional configuration, in minutes.
     * 
     */
    private Integer maxTimeToLiveInMinutes;

    private GetReceivedLicenseConsumptionConfigurationProvisionalConfiguration() {}
    /**
     * @return Maximum time for the provisional configuration, in minutes.
     * 
     */
    public Integer maxTimeToLiveInMinutes() {
        return this.maxTimeToLiveInMinutes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetReceivedLicenseConsumptionConfigurationProvisionalConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer maxTimeToLiveInMinutes;
        public Builder() {}
        public Builder(GetReceivedLicenseConsumptionConfigurationProvisionalConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxTimeToLiveInMinutes = defaults.maxTimeToLiveInMinutes;
        }

        @CustomType.Setter
        public Builder maxTimeToLiveInMinutes(Integer maxTimeToLiveInMinutes) {
            if (maxTimeToLiveInMinutes == null) {
              throw new MissingRequiredPropertyException("GetReceivedLicenseConsumptionConfigurationProvisionalConfiguration", "maxTimeToLiveInMinutes");
            }
            this.maxTimeToLiveInMinutes = maxTimeToLiveInMinutes;
            return this;
        }
        public GetReceivedLicenseConsumptionConfigurationProvisionalConfiguration build() {
            final var _resultValue = new GetReceivedLicenseConsumptionConfigurationProvisionalConfiguration();
            _resultValue.maxTimeToLiveInMinutes = maxTimeToLiveInMinutes;
            return _resultValue;
        }
    }
}
