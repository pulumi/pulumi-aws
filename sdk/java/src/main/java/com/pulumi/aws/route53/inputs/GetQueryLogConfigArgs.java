// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.route53.inputs;

import com.pulumi.aws.route53.inputs.GetQueryLogConfigFilterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetQueryLogConfigArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetQueryLogConfigArgs Empty = new GetQueryLogConfigArgs();

    /**
     * One or more name/value pairs to use as filters. There are
     * several valid keys, for a full reference, check out
     * [Route53resolver Filter value in the AWS API reference][1].
     * 
     * In addition to all arguments above, the following attributes are exported:
     * 
     */
    @Import(name="filters")
    private @Nullable Output<List<GetQueryLogConfigFilterArgs>> filters;

    /**
     * @return One or more name/value pairs to use as filters. There are
     * several valid keys, for a full reference, check out
     * [Route53resolver Filter value in the AWS API reference][1].
     * 
     * In addition to all arguments above, the following attributes are exported:
     * 
     */
    public Optional<Output<List<GetQueryLogConfigFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The name of the query logging configuration.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the query logging configuration.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * ID of the Route53 Resolver Query Logging Configuration.
     * 
     */
    @Import(name="resolverQueryLogConfigId")
    private @Nullable Output<String> resolverQueryLogConfigId;

    /**
     * @return ID of the Route53 Resolver Query Logging Configuration.
     * 
     */
    public Optional<Output<String>> resolverQueryLogConfigId() {
        return Optional.ofNullable(this.resolverQueryLogConfigId);
    }

    /**
     * Map of tags to assign to the service.
     * 
     * [1]: https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_Filter.html
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Map of tags to assign to the service.
     * 
     * [1]: https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_Filter.html
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private GetQueryLogConfigArgs() {}

    private GetQueryLogConfigArgs(GetQueryLogConfigArgs $) {
        this.filters = $.filters;
        this.name = $.name;
        this.resolverQueryLogConfigId = $.resolverQueryLogConfigId;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetQueryLogConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetQueryLogConfigArgs $;

        public Builder() {
            $ = new GetQueryLogConfigArgs();
        }

        public Builder(GetQueryLogConfigArgs defaults) {
            $ = new GetQueryLogConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filters One or more name/value pairs to use as filters. There are
         * several valid keys, for a full reference, check out
         * [Route53resolver Filter value in the AWS API reference][1].
         * 
         * In addition to all arguments above, the following attributes are exported:
         * 
         * @return builder
         * 
         */
        public Builder filters(@Nullable Output<List<GetQueryLogConfigFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        /**
         * @param filters One or more name/value pairs to use as filters. There are
         * several valid keys, for a full reference, check out
         * [Route53resolver Filter value in the AWS API reference][1].
         * 
         * In addition to all arguments above, the following attributes are exported:
         * 
         * @return builder
         * 
         */
        public Builder filters(List<GetQueryLogConfigFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        /**
         * @param filters One or more name/value pairs to use as filters. There are
         * several valid keys, for a full reference, check out
         * [Route53resolver Filter value in the AWS API reference][1].
         * 
         * In addition to all arguments above, the following attributes are exported:
         * 
         * @return builder
         * 
         */
        public Builder filters(GetQueryLogConfigFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param name The name of the query logging configuration.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the query logging configuration.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resolverQueryLogConfigId ID of the Route53 Resolver Query Logging Configuration.
         * 
         * @return builder
         * 
         */
        public Builder resolverQueryLogConfigId(@Nullable Output<String> resolverQueryLogConfigId) {
            $.resolverQueryLogConfigId = resolverQueryLogConfigId;
            return this;
        }

        /**
         * @param resolverQueryLogConfigId ID of the Route53 Resolver Query Logging Configuration.
         * 
         * @return builder
         * 
         */
        public Builder resolverQueryLogConfigId(String resolverQueryLogConfigId) {
            return resolverQueryLogConfigId(Output.of(resolverQueryLogConfigId));
        }

        /**
         * @param tags Map of tags to assign to the service.
         * 
         * [1]: https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_Filter.html
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Map of tags to assign to the service.
         * 
         * [1]: https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_Filter.html
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public GetQueryLogConfigArgs build() {
            return $;
        }
    }

}
