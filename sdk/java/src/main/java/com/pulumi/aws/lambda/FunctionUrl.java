// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lambda;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.lambda.FunctionUrlArgs;
import com.pulumi.aws.lambda.inputs.FunctionUrlState;
import com.pulumi.aws.lambda.outputs.FunctionUrlCors;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Lambda function URL. Creates a dedicated HTTP(S) endpoint for a Lambda function to enable direct invocation via HTTP requests.
 * 
 * ## Example Usage
 * 
 * ### Basic Function URL with No Authentication
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.lambda.FunctionUrl;
 * import com.pulumi.aws.lambda.FunctionUrlArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new FunctionUrl("example", FunctionUrlArgs.builder()
 *             .functionName(exampleAwsLambdaFunction.functionName())
 *             .authorizationType("NONE")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Function URL with IAM Authentication and CORS Configuration
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.lambda.FunctionUrl;
 * import com.pulumi.aws.lambda.FunctionUrlArgs;
 * import com.pulumi.aws.lambda.inputs.FunctionUrlCorsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new FunctionUrl("example", FunctionUrlArgs.builder()
 *             .functionName(exampleAwsLambdaFunction.functionName())
 *             .qualifier("my_alias")
 *             .authorizationType("AWS_IAM")
 *             .invokeMode("RESPONSE_STREAM")
 *             .cors(FunctionUrlCorsArgs.builder()
 *                 .allowCredentials(true)
 *                 .allowOrigins("https://example.com")
 *                 .allowMethods(                
 *                     "GET",
 *                     "POST")
 *                 .allowHeaders(                
 *                     "date",
 *                     "keep-alive")
 *                 .exposeHeaders(                
 *                     "keep-alive",
 *                     "date")
 *                 .maxAge(86400)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Using `pulumi import`, import Lambda function URLs using the `function_name` or `function_name/qualifier`. For example:
 * 
 * ```sh
 * $ pulumi import aws:lambda/functionUrl:FunctionUrl example example
 * ```
 * 
 */
@ResourceType(type="aws:lambda/functionUrl:FunctionUrl")
public class FunctionUrl extends com.pulumi.resources.CustomResource {
    /**
     * Type of authentication that the function URL uses. Valid values are `AWS_IAM` and `NONE`.
     * 
     */
    @Export(name="authorizationType", refs={String.class}, tree="[0]")
    private Output<String> authorizationType;

    /**
     * @return Type of authentication that the function URL uses. Valid values are `AWS_IAM` and `NONE`.
     * 
     */
    public Output<String> authorizationType() {
        return this.authorizationType;
    }
    /**
     * Cross-origin resource sharing (CORS) settings for the function URL. See below.
     * 
     */
    @Export(name="cors", refs={FunctionUrlCors.class}, tree="[0]")
    private Output</* @Nullable */ FunctionUrlCors> cors;

    /**
     * @return Cross-origin resource sharing (CORS) settings for the function URL. See below.
     * 
     */
    public Output<Optional<FunctionUrlCors>> cors() {
        return Codegen.optional(this.cors);
    }
    /**
     * ARN of the Lambda function.
     * 
     */
    @Export(name="functionArn", refs={String.class}, tree="[0]")
    private Output<String> functionArn;

    /**
     * @return ARN of the Lambda function.
     * 
     */
    public Output<String> functionArn() {
        return this.functionArn;
    }
    /**
     * Name or ARN of the Lambda function.
     * 
     * The following arguments are optional:
     * 
     */
    @Export(name="functionName", refs={String.class}, tree="[0]")
    private Output<String> functionName;

    /**
     * @return Name or ARN of the Lambda function.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<String> functionName() {
        return this.functionName;
    }
    /**
     * HTTP URL endpoint for the function in the format `https://&lt;url_id&gt;.lambda-url.&lt;region&gt;.on.aws/`.
     * 
     */
    @Export(name="functionUrl", refs={String.class}, tree="[0]")
    private Output<String> functionUrl;

    /**
     * @return HTTP URL endpoint for the function in the format `https://&lt;url_id&gt;.lambda-url.&lt;region&gt;.on.aws/`.
     * 
     */
    public Output<String> functionUrl() {
        return this.functionUrl;
    }
    /**
     * How the Lambda function responds to an invocation. Valid values are `BUFFERED` (default) and `RESPONSE_STREAM`.
     * 
     */
    @Export(name="invokeMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> invokeMode;

    /**
     * @return How the Lambda function responds to an invocation. Valid values are `BUFFERED` (default) and `RESPONSE_STREAM`.
     * 
     */
    public Output<Optional<String>> invokeMode() {
        return Codegen.optional(this.invokeMode);
    }
    /**
     * Alias name or `$LATEST`.
     * 
     */
    @Export(name="qualifier", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> qualifier;

    /**
     * @return Alias name or `$LATEST`.
     * 
     */
    public Output<Optional<String>> qualifier() {
        return Codegen.optional(this.qualifier);
    }
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * Generated ID for the endpoint.
     * 
     */
    @Export(name="urlId", refs={String.class}, tree="[0]")
    private Output<String> urlId;

    /**
     * @return Generated ID for the endpoint.
     * 
     */
    public Output<String> urlId() {
        return this.urlId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FunctionUrl(java.lang.String name) {
        this(name, FunctionUrlArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FunctionUrl(java.lang.String name, FunctionUrlArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FunctionUrl(java.lang.String name, FunctionUrlArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:lambda/functionUrl:FunctionUrl", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private FunctionUrl(java.lang.String name, Output<java.lang.String> id, @Nullable FunctionUrlState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:lambda/functionUrl:FunctionUrl", name, state, makeResourceOptions(options, id), false);
    }

    private static FunctionUrlArgs makeArgs(FunctionUrlArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? FunctionUrlArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FunctionUrl get(java.lang.String name, Output<java.lang.String> id, @Nullable FunctionUrlState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new FunctionUrl(name, id, state, options);
    }
}
