// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.datazone.inputs;

import com.pulumi.aws.datazone.inputs.UserProfileDetailArgs;
import com.pulumi.aws.datazone.inputs.UserProfileTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UserProfileState extends com.pulumi.resources.ResourceArgs {

    public static final UserProfileState Empty = new UserProfileState();

    /**
     * Details about the user profile.
     * 
     */
    @Import(name="details")
    private @Nullable Output<List<UserProfileDetailArgs>> details;

    /**
     * @return Details about the user profile.
     * 
     */
    public Optional<Output<List<UserProfileDetailArgs>>> details() {
        return Optional.ofNullable(this.details);
    }

    /**
     * The domain identifier.
     * 
     */
    @Import(name="domainIdentifier")
    private @Nullable Output<String> domainIdentifier;

    /**
     * @return The domain identifier.
     * 
     */
    public Optional<Output<String>> domainIdentifier() {
        return Optional.ofNullable(this.domainIdentifier);
    }

    /**
     * The user profile status.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The user profile status.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    @Import(name="timeouts")
    private @Nullable Output<UserProfileTimeoutsArgs> timeouts;

    public Optional<Output<UserProfileTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    /**
     * The user profile type.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The user profile type.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * The user identifier.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="userIdentifier")
    private @Nullable Output<String> userIdentifier;

    /**
     * @return The user identifier.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<String>> userIdentifier() {
        return Optional.ofNullable(this.userIdentifier);
    }

    /**
     * The user type.
     * 
     */
    @Import(name="userType")
    private @Nullable Output<String> userType;

    /**
     * @return The user type.
     * 
     */
    public Optional<Output<String>> userType() {
        return Optional.ofNullable(this.userType);
    }

    private UserProfileState() {}

    private UserProfileState(UserProfileState $) {
        this.details = $.details;
        this.domainIdentifier = $.domainIdentifier;
        this.status = $.status;
        this.timeouts = $.timeouts;
        this.type = $.type;
        this.userIdentifier = $.userIdentifier;
        this.userType = $.userType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserProfileState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserProfileState $;

        public Builder() {
            $ = new UserProfileState();
        }

        public Builder(UserProfileState defaults) {
            $ = new UserProfileState(Objects.requireNonNull(defaults));
        }

        /**
         * @param details Details about the user profile.
         * 
         * @return builder
         * 
         */
        public Builder details(@Nullable Output<List<UserProfileDetailArgs>> details) {
            $.details = details;
            return this;
        }

        /**
         * @param details Details about the user profile.
         * 
         * @return builder
         * 
         */
        public Builder details(List<UserProfileDetailArgs> details) {
            return details(Output.of(details));
        }

        /**
         * @param details Details about the user profile.
         * 
         * @return builder
         * 
         */
        public Builder details(UserProfileDetailArgs... details) {
            return details(List.of(details));
        }

        /**
         * @param domainIdentifier The domain identifier.
         * 
         * @return builder
         * 
         */
        public Builder domainIdentifier(@Nullable Output<String> domainIdentifier) {
            $.domainIdentifier = domainIdentifier;
            return this;
        }

        /**
         * @param domainIdentifier The domain identifier.
         * 
         * @return builder
         * 
         */
        public Builder domainIdentifier(String domainIdentifier) {
            return domainIdentifier(Output.of(domainIdentifier));
        }

        /**
         * @param status The user profile status.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The user profile status.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public Builder timeouts(@Nullable Output<UserProfileTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(UserProfileTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        /**
         * @param type The user profile type.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The user profile type.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param userIdentifier The user identifier.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder userIdentifier(@Nullable Output<String> userIdentifier) {
            $.userIdentifier = userIdentifier;
            return this;
        }

        /**
         * @param userIdentifier The user identifier.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder userIdentifier(String userIdentifier) {
            return userIdentifier(Output.of(userIdentifier));
        }

        /**
         * @param userType The user type.
         * 
         * @return builder
         * 
         */
        public Builder userType(@Nullable Output<String> userType) {
            $.userType = userType;
            return this;
        }

        /**
         * @param userType The user type.
         * 
         * @return builder
         * 
         */
        public Builder userType(String userType) {
            return userType(Output.of(userType));
        }

        public UserProfileState build() {
            return $;
        }
    }

}
