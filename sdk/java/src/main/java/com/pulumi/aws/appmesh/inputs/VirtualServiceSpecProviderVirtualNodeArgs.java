// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class VirtualServiceSpecProviderVirtualNodeArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualServiceSpecProviderVirtualNodeArgs Empty = new VirtualServiceSpecProviderVirtualNodeArgs();

    /**
     * Name of the virtual node that is acting as a service provider. Must be between 1 and 255 characters in length.
     * 
     */
    @Import(name="virtualNodeName", required=true)
    private Output<String> virtualNodeName;

    /**
     * @return Name of the virtual node that is acting as a service provider. Must be between 1 and 255 characters in length.
     * 
     */
    public Output<String> virtualNodeName() {
        return this.virtualNodeName;
    }

    private VirtualServiceSpecProviderVirtualNodeArgs() {}

    private VirtualServiceSpecProviderVirtualNodeArgs(VirtualServiceSpecProviderVirtualNodeArgs $) {
        this.virtualNodeName = $.virtualNodeName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualServiceSpecProviderVirtualNodeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualServiceSpecProviderVirtualNodeArgs $;

        public Builder() {
            $ = new VirtualServiceSpecProviderVirtualNodeArgs();
        }

        public Builder(VirtualServiceSpecProviderVirtualNodeArgs defaults) {
            $ = new VirtualServiceSpecProviderVirtualNodeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param virtualNodeName Name of the virtual node that is acting as a service provider. Must be between 1 and 255 characters in length.
         * 
         * @return builder
         * 
         */
        public Builder virtualNodeName(Output<String> virtualNodeName) {
            $.virtualNodeName = virtualNodeName;
            return this;
        }

        /**
         * @param virtualNodeName Name of the virtual node that is acting as a service provider. Must be between 1 and 255 characters in length.
         * 
         * @return builder
         * 
         */
        public Builder virtualNodeName(String virtualNodeName) {
            return virtualNodeName(Output.of(virtualNodeName));
        }

        public VirtualServiceSpecProviderVirtualNodeArgs build() {
            $.virtualNodeName = Objects.requireNonNull($.virtualNodeName, "expected parameter 'virtualNodeName' to be non-null");
            return $;
        }
    }

}
