// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudfront.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DistributionCustomErrorResponseArgs extends com.pulumi.resources.ResourceArgs {

    public static final DistributionCustomErrorResponseArgs Empty = new DistributionCustomErrorResponseArgs();

    /**
     * Minimum amount of time you want HTTP error codes to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.
     * 
     */
    @Import(name="errorCachingMinTtl")
    private @Nullable Output<Integer> errorCachingMinTtl;

    /**
     * @return Minimum amount of time you want HTTP error codes to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.
     * 
     */
    public Optional<Output<Integer>> errorCachingMinTtl() {
        return Optional.ofNullable(this.errorCachingMinTtl);
    }

    /**
     * 4xx or 5xx HTTP status code that you want to customize.
     * 
     */
    @Import(name="errorCode", required=true)
    private Output<Integer> errorCode;

    /**
     * @return 4xx or 5xx HTTP status code that you want to customize.
     * 
     */
    public Output<Integer> errorCode() {
        return this.errorCode;
    }

    /**
     * HTTP status code that you want CloudFront to return with the custom error page to the viewer.
     * 
     */
    @Import(name="responseCode")
    private @Nullable Output<Integer> responseCode;

    /**
     * @return HTTP status code that you want CloudFront to return with the custom error page to the viewer.
     * 
     */
    public Optional<Output<Integer>> responseCode() {
        return Optional.ofNullable(this.responseCode);
    }

    /**
     * Path of the custom error page (for example, `/custom_404.html`).
     * 
     */
    @Import(name="responsePagePath")
    private @Nullable Output<String> responsePagePath;

    /**
     * @return Path of the custom error page (for example, `/custom_404.html`).
     * 
     */
    public Optional<Output<String>> responsePagePath() {
        return Optional.ofNullable(this.responsePagePath);
    }

    private DistributionCustomErrorResponseArgs() {}

    private DistributionCustomErrorResponseArgs(DistributionCustomErrorResponseArgs $) {
        this.errorCachingMinTtl = $.errorCachingMinTtl;
        this.errorCode = $.errorCode;
        this.responseCode = $.responseCode;
        this.responsePagePath = $.responsePagePath;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DistributionCustomErrorResponseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DistributionCustomErrorResponseArgs $;

        public Builder() {
            $ = new DistributionCustomErrorResponseArgs();
        }

        public Builder(DistributionCustomErrorResponseArgs defaults) {
            $ = new DistributionCustomErrorResponseArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param errorCachingMinTtl Minimum amount of time you want HTTP error codes to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.
         * 
         * @return builder
         * 
         */
        public Builder errorCachingMinTtl(@Nullable Output<Integer> errorCachingMinTtl) {
            $.errorCachingMinTtl = errorCachingMinTtl;
            return this;
        }

        /**
         * @param errorCachingMinTtl Minimum amount of time you want HTTP error codes to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.
         * 
         * @return builder
         * 
         */
        public Builder errorCachingMinTtl(Integer errorCachingMinTtl) {
            return errorCachingMinTtl(Output.of(errorCachingMinTtl));
        }

        /**
         * @param errorCode 4xx or 5xx HTTP status code that you want to customize.
         * 
         * @return builder
         * 
         */
        public Builder errorCode(Output<Integer> errorCode) {
            $.errorCode = errorCode;
            return this;
        }

        /**
         * @param errorCode 4xx or 5xx HTTP status code that you want to customize.
         * 
         * @return builder
         * 
         */
        public Builder errorCode(Integer errorCode) {
            return errorCode(Output.of(errorCode));
        }

        /**
         * @param responseCode HTTP status code that you want CloudFront to return with the custom error page to the viewer.
         * 
         * @return builder
         * 
         */
        public Builder responseCode(@Nullable Output<Integer> responseCode) {
            $.responseCode = responseCode;
            return this;
        }

        /**
         * @param responseCode HTTP status code that you want CloudFront to return with the custom error page to the viewer.
         * 
         * @return builder
         * 
         */
        public Builder responseCode(Integer responseCode) {
            return responseCode(Output.of(responseCode));
        }

        /**
         * @param responsePagePath Path of the custom error page (for example, `/custom_404.html`).
         * 
         * @return builder
         * 
         */
        public Builder responsePagePath(@Nullable Output<String> responsePagePath) {
            $.responsePagePath = responsePagePath;
            return this;
        }

        /**
         * @param responsePagePath Path of the custom error page (for example, `/custom_404.html`).
         * 
         * @return builder
         * 
         */
        public Builder responsePagePath(String responsePagePath) {
            return responsePagePath(Output.of(responsePagePath));
        }

        public DistributionCustomErrorResponseArgs build() {
            $.errorCode = Objects.requireNonNull($.errorCode, "expected parameter 'errorCode' to be non-null");
            return $;
        }
    }

}
