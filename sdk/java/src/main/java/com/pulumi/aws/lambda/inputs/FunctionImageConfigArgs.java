// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lambda.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FunctionImageConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final FunctionImageConfigArgs Empty = new FunctionImageConfigArgs();

    @Import(name="commands")
    private @Nullable Output<List<String>> commands;

    public Optional<Output<List<String>>> commands() {
        return Optional.ofNullable(this.commands);
    }

    @Import(name="entryPoints")
    private @Nullable Output<List<String>> entryPoints;

    public Optional<Output<List<String>>> entryPoints() {
        return Optional.ofNullable(this.entryPoints);
    }

    @Import(name="workingDirectory")
    private @Nullable Output<String> workingDirectory;

    public Optional<Output<String>> workingDirectory() {
        return Optional.ofNullable(this.workingDirectory);
    }

    private FunctionImageConfigArgs() {}

    private FunctionImageConfigArgs(FunctionImageConfigArgs $) {
        this.commands = $.commands;
        this.entryPoints = $.entryPoints;
        this.workingDirectory = $.workingDirectory;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FunctionImageConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FunctionImageConfigArgs $;

        public Builder() {
            $ = new FunctionImageConfigArgs();
        }

        public Builder(FunctionImageConfigArgs defaults) {
            $ = new FunctionImageConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder commands(@Nullable Output<List<String>> commands) {
            $.commands = commands;
            return this;
        }

        public Builder commands(List<String> commands) {
            return commands(Output.of(commands));
        }

        public Builder commands(String... commands) {
            return commands(List.of(commands));
        }

        public Builder entryPoints(@Nullable Output<List<String>> entryPoints) {
            $.entryPoints = entryPoints;
            return this;
        }

        public Builder entryPoints(List<String> entryPoints) {
            return entryPoints(Output.of(entryPoints));
        }

        public Builder entryPoints(String... entryPoints) {
            return entryPoints(List.of(entryPoints));
        }

        public Builder workingDirectory(@Nullable Output<String> workingDirectory) {
            $.workingDirectory = workingDirectory;
            return this;
        }

        public Builder workingDirectory(String workingDirectory) {
            return workingDirectory(Output.of(workingDirectory));
        }

        public FunctionImageConfigArgs build() {
            return $;
        }
    }

}
