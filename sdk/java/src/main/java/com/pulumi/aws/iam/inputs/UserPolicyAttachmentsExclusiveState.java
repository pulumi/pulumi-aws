// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iam.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UserPolicyAttachmentsExclusiveState extends com.pulumi.resources.ResourceArgs {

    public static final UserPolicyAttachmentsExclusiveState Empty = new UserPolicyAttachmentsExclusiveState();

    /**
     * A list of managed IAM policy ARNs to be attached to the user. Policies attached to this user but not configured in this argument will be removed.
     * 
     */
    @Import(name="policyArns")
    private @Nullable Output<List<String>> policyArns;

    /**
     * @return A list of managed IAM policy ARNs to be attached to the user. Policies attached to this user but not configured in this argument will be removed.
     * 
     */
    public Optional<Output<List<String>>> policyArns() {
        return Optional.ofNullable(this.policyArns);
    }

    /**
     * IAM user name.
     * 
     */
    @Import(name="userName")
    private @Nullable Output<String> userName;

    /**
     * @return IAM user name.
     * 
     */
    public Optional<Output<String>> userName() {
        return Optional.ofNullable(this.userName);
    }

    private UserPolicyAttachmentsExclusiveState() {}

    private UserPolicyAttachmentsExclusiveState(UserPolicyAttachmentsExclusiveState $) {
        this.policyArns = $.policyArns;
        this.userName = $.userName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserPolicyAttachmentsExclusiveState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserPolicyAttachmentsExclusiveState $;

        public Builder() {
            $ = new UserPolicyAttachmentsExclusiveState();
        }

        public Builder(UserPolicyAttachmentsExclusiveState defaults) {
            $ = new UserPolicyAttachmentsExclusiveState(Objects.requireNonNull(defaults));
        }

        /**
         * @param policyArns A list of managed IAM policy ARNs to be attached to the user. Policies attached to this user but not configured in this argument will be removed.
         * 
         * @return builder
         * 
         */
        public Builder policyArns(@Nullable Output<List<String>> policyArns) {
            $.policyArns = policyArns;
            return this;
        }

        /**
         * @param policyArns A list of managed IAM policy ARNs to be attached to the user. Policies attached to this user but not configured in this argument will be removed.
         * 
         * @return builder
         * 
         */
        public Builder policyArns(List<String> policyArns) {
            return policyArns(Output.of(policyArns));
        }

        /**
         * @param policyArns A list of managed IAM policy ARNs to be attached to the user. Policies attached to this user but not configured in this argument will be removed.
         * 
         * @return builder
         * 
         */
        public Builder policyArns(String... policyArns) {
            return policyArns(List.of(policyArns));
        }

        /**
         * @param userName IAM user name.
         * 
         * @return builder
         * 
         */
        public Builder userName(@Nullable Output<String> userName) {
            $.userName = userName;
            return this;
        }

        /**
         * @param userName IAM user name.
         * 
         * @return builder
         * 
         */
        public Builder userName(String userName) {
            return userName(Output.of(userName));
        }

        public UserPolicyAttachmentsExclusiveState build() {
            return $;
        }
    }

}
