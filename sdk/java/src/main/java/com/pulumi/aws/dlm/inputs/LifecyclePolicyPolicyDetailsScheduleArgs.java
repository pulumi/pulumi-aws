// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dlm.inputs;

import com.pulumi.aws.dlm.inputs.LifecyclePolicyPolicyDetailsScheduleCreateRuleArgs;
import com.pulumi.aws.dlm.inputs.LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleArgs;
import com.pulumi.aws.dlm.inputs.LifecyclePolicyPolicyDetailsScheduleDeprecateRuleArgs;
import com.pulumi.aws.dlm.inputs.LifecyclePolicyPolicyDetailsScheduleFastRestoreRuleArgs;
import com.pulumi.aws.dlm.inputs.LifecyclePolicyPolicyDetailsScheduleRetainRuleArgs;
import com.pulumi.aws.dlm.inputs.LifecyclePolicyPolicyDetailsScheduleShareRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LifecyclePolicyPolicyDetailsScheduleArgs extends com.pulumi.resources.ResourceArgs {

    public static final LifecyclePolicyPolicyDetailsScheduleArgs Empty = new LifecyclePolicyPolicyDetailsScheduleArgs();

    @Import(name="copyTags")
    private @Nullable Output<Boolean> copyTags;

    public Optional<Output<Boolean>> copyTags() {
        return Optional.ofNullable(this.copyTags);
    }

    @Import(name="createRule", required=true)
    private Output<LifecyclePolicyPolicyDetailsScheduleCreateRuleArgs> createRule;

    public Output<LifecyclePolicyPolicyDetailsScheduleCreateRuleArgs> createRule() {
        return this.createRule;
    }

    @Import(name="crossRegionCopyRules")
    private @Nullable Output<List<LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleArgs>> crossRegionCopyRules;

    public Optional<Output<List<LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleArgs>>> crossRegionCopyRules() {
        return Optional.ofNullable(this.crossRegionCopyRules);
    }

    @Import(name="deprecateRule")
    private @Nullable Output<LifecyclePolicyPolicyDetailsScheduleDeprecateRuleArgs> deprecateRule;

    public Optional<Output<LifecyclePolicyPolicyDetailsScheduleDeprecateRuleArgs>> deprecateRule() {
        return Optional.ofNullable(this.deprecateRule);
    }

    @Import(name="fastRestoreRule")
    private @Nullable Output<LifecyclePolicyPolicyDetailsScheduleFastRestoreRuleArgs> fastRestoreRule;

    public Optional<Output<LifecyclePolicyPolicyDetailsScheduleFastRestoreRuleArgs>> fastRestoreRule() {
        return Optional.ofNullable(this.fastRestoreRule);
    }

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="retainRule", required=true)
    private Output<LifecyclePolicyPolicyDetailsScheduleRetainRuleArgs> retainRule;

    public Output<LifecyclePolicyPolicyDetailsScheduleRetainRuleArgs> retainRule() {
        return this.retainRule;
    }

    @Import(name="shareRule")
    private @Nullable Output<LifecyclePolicyPolicyDetailsScheduleShareRuleArgs> shareRule;

    public Optional<Output<LifecyclePolicyPolicyDetailsScheduleShareRuleArgs>> shareRule() {
        return Optional.ofNullable(this.shareRule);
    }

    @Import(name="tagsToAdd")
    private @Nullable Output<Map<String,String>> tagsToAdd;

    public Optional<Output<Map<String,String>>> tagsToAdd() {
        return Optional.ofNullable(this.tagsToAdd);
    }

    @Import(name="variableTags")
    private @Nullable Output<Map<String,String>> variableTags;

    public Optional<Output<Map<String,String>>> variableTags() {
        return Optional.ofNullable(this.variableTags);
    }

    private LifecyclePolicyPolicyDetailsScheduleArgs() {}

    private LifecyclePolicyPolicyDetailsScheduleArgs(LifecyclePolicyPolicyDetailsScheduleArgs $) {
        this.copyTags = $.copyTags;
        this.createRule = $.createRule;
        this.crossRegionCopyRules = $.crossRegionCopyRules;
        this.deprecateRule = $.deprecateRule;
        this.fastRestoreRule = $.fastRestoreRule;
        this.name = $.name;
        this.retainRule = $.retainRule;
        this.shareRule = $.shareRule;
        this.tagsToAdd = $.tagsToAdd;
        this.variableTags = $.variableTags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LifecyclePolicyPolicyDetailsScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LifecyclePolicyPolicyDetailsScheduleArgs $;

        public Builder() {
            $ = new LifecyclePolicyPolicyDetailsScheduleArgs();
        }

        public Builder(LifecyclePolicyPolicyDetailsScheduleArgs defaults) {
            $ = new LifecyclePolicyPolicyDetailsScheduleArgs(Objects.requireNonNull(defaults));
        }

        public Builder copyTags(@Nullable Output<Boolean> copyTags) {
            $.copyTags = copyTags;
            return this;
        }

        public Builder copyTags(Boolean copyTags) {
            return copyTags(Output.of(copyTags));
        }

        public Builder createRule(Output<LifecyclePolicyPolicyDetailsScheduleCreateRuleArgs> createRule) {
            $.createRule = createRule;
            return this;
        }

        public Builder createRule(LifecyclePolicyPolicyDetailsScheduleCreateRuleArgs createRule) {
            return createRule(Output.of(createRule));
        }

        public Builder crossRegionCopyRules(@Nullable Output<List<LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleArgs>> crossRegionCopyRules) {
            $.crossRegionCopyRules = crossRegionCopyRules;
            return this;
        }

        public Builder crossRegionCopyRules(List<LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleArgs> crossRegionCopyRules) {
            return crossRegionCopyRules(Output.of(crossRegionCopyRules));
        }

        public Builder crossRegionCopyRules(LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleArgs... crossRegionCopyRules) {
            return crossRegionCopyRules(List.of(crossRegionCopyRules));
        }

        public Builder deprecateRule(@Nullable Output<LifecyclePolicyPolicyDetailsScheduleDeprecateRuleArgs> deprecateRule) {
            $.deprecateRule = deprecateRule;
            return this;
        }

        public Builder deprecateRule(LifecyclePolicyPolicyDetailsScheduleDeprecateRuleArgs deprecateRule) {
            return deprecateRule(Output.of(deprecateRule));
        }

        public Builder fastRestoreRule(@Nullable Output<LifecyclePolicyPolicyDetailsScheduleFastRestoreRuleArgs> fastRestoreRule) {
            $.fastRestoreRule = fastRestoreRule;
            return this;
        }

        public Builder fastRestoreRule(LifecyclePolicyPolicyDetailsScheduleFastRestoreRuleArgs fastRestoreRule) {
            return fastRestoreRule(Output.of(fastRestoreRule));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder retainRule(Output<LifecyclePolicyPolicyDetailsScheduleRetainRuleArgs> retainRule) {
            $.retainRule = retainRule;
            return this;
        }

        public Builder retainRule(LifecyclePolicyPolicyDetailsScheduleRetainRuleArgs retainRule) {
            return retainRule(Output.of(retainRule));
        }

        public Builder shareRule(@Nullable Output<LifecyclePolicyPolicyDetailsScheduleShareRuleArgs> shareRule) {
            $.shareRule = shareRule;
            return this;
        }

        public Builder shareRule(LifecyclePolicyPolicyDetailsScheduleShareRuleArgs shareRule) {
            return shareRule(Output.of(shareRule));
        }

        public Builder tagsToAdd(@Nullable Output<Map<String,String>> tagsToAdd) {
            $.tagsToAdd = tagsToAdd;
            return this;
        }

        public Builder tagsToAdd(Map<String,String> tagsToAdd) {
            return tagsToAdd(Output.of(tagsToAdd));
        }

        public Builder variableTags(@Nullable Output<Map<String,String>> variableTags) {
            $.variableTags = variableTags;
            return this;
        }

        public Builder variableTags(Map<String,String> variableTags) {
            return variableTags(Output.of(variableTags));
        }

        public LifecyclePolicyPolicyDetailsScheduleArgs build() {
            if ($.createRule == null) {
                throw new MissingRequiredPropertyException("LifecyclePolicyPolicyDetailsScheduleArgs", "createRule");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("LifecyclePolicyPolicyDetailsScheduleArgs", "name");
            }
            if ($.retainRule == null) {
                throw new MissingRequiredPropertyException("LifecyclePolicyPolicyDetailsScheduleArgs", "retainRule");
            }
            return $;
        }
    }

}
