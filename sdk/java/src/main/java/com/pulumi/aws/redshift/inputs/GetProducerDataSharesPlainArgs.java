// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.redshift.inputs;

import com.pulumi.aws.redshift.inputs.GetProducerDataSharesDataShare;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetProducerDataSharesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetProducerDataSharesPlainArgs Empty = new GetProducerDataSharesPlainArgs();

    /**
     * An array of all data shares in the producer. See `data_shares` below.
     * 
     */
    @Import(name="dataShares")
    private @Nullable List<GetProducerDataSharesDataShare> dataShares;

    /**
     * @return An array of all data shares in the producer. See `data_shares` below.
     * 
     */
    public Optional<List<GetProducerDataSharesDataShare>> dataShares() {
        return Optional.ofNullable(this.dataShares);
    }

    /**
     * Amazon Resource Name (ARN) of the producer namespace that returns in the list of datashares.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="producerArn", required=true)
    private String producerArn;

    /**
     * @return Amazon Resource Name (ARN) of the producer namespace that returns in the list of datashares.
     * 
     * The following arguments are optional:
     * 
     */
    public String producerArn() {
        return this.producerArn;
    }

    /**
     * Status of a datashare in the producer. Valid values are `ACTIVE`, `AUTHORIZED`, `PENDING_AUTHORIZATION`, `DEAUTHORIZED`, and `REJECTED`. Omit this argument to return all statuses.
     * 
     */
    @Import(name="status")
    private @Nullable String status;

    /**
     * @return Status of a datashare in the producer. Valid values are `ACTIVE`, `AUTHORIZED`, `PENDING_AUTHORIZATION`, `DEAUTHORIZED`, and `REJECTED`. Omit this argument to return all statuses.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    private GetProducerDataSharesPlainArgs() {}

    private GetProducerDataSharesPlainArgs(GetProducerDataSharesPlainArgs $) {
        this.dataShares = $.dataShares;
        this.producerArn = $.producerArn;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetProducerDataSharesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetProducerDataSharesPlainArgs $;

        public Builder() {
            $ = new GetProducerDataSharesPlainArgs();
        }

        public Builder(GetProducerDataSharesPlainArgs defaults) {
            $ = new GetProducerDataSharesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataShares An array of all data shares in the producer. See `data_shares` below.
         * 
         * @return builder
         * 
         */
        public Builder dataShares(@Nullable List<GetProducerDataSharesDataShare> dataShares) {
            $.dataShares = dataShares;
            return this;
        }

        /**
         * @param dataShares An array of all data shares in the producer. See `data_shares` below.
         * 
         * @return builder
         * 
         */
        public Builder dataShares(GetProducerDataSharesDataShare... dataShares) {
            return dataShares(List.of(dataShares));
        }

        /**
         * @param producerArn Amazon Resource Name (ARN) of the producer namespace that returns in the list of datashares.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder producerArn(String producerArn) {
            $.producerArn = producerArn;
            return this;
        }

        /**
         * @param status Status of a datashare in the producer. Valid values are `ACTIVE`, `AUTHORIZED`, `PENDING_AUTHORIZATION`, `DEAUTHORIZED`, and `REJECTED`. Omit this argument to return all statuses.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        public GetProducerDataSharesPlainArgs build() {
            if ($.producerArn == null) {
                throw new MissingRequiredPropertyException("GetProducerDataSharesPlainArgs", "producerArn");
            }
            return $;
        }
    }

}
