// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecs.inputs;

import com.pulumi.aws.ecs.inputs.CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsAcceleratorCountArgs;
import com.pulumi.aws.ecs.inputs.CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMibArgs;
import com.pulumi.aws.ecs.inputs.CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbpsArgs;
import com.pulumi.aws.ecs.inputs.CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsMemoryGibPerVcpuArgs;
import com.pulumi.aws.ecs.inputs.CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsMemoryMibArgs;
import com.pulumi.aws.ecs.inputs.CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsNetworkBandwidthGbpsArgs;
import com.pulumi.aws.ecs.inputs.CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsNetworkInterfaceCountArgs;
import com.pulumi.aws.ecs.inputs.CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsTotalLocalStorageGbArgs;
import com.pulumi.aws.ecs.inputs.CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsVcpuCountArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsArgs extends com.pulumi.resources.ResourceArgs {

    public static final CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsArgs Empty = new CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsArgs();

    /**
     * The minimum and maximum number of accelerators for the instance types. This is used when you need instances with specific numbers of GPUs or other accelerators.
     * 
     */
    @Import(name="acceleratorCount")
    private @Nullable Output<CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsAcceleratorCountArgs> acceleratorCount;

    /**
     * @return The minimum and maximum number of accelerators for the instance types. This is used when you need instances with specific numbers of GPUs or other accelerators.
     * 
     */
    public Optional<Output<CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsAcceleratorCountArgs>> acceleratorCount() {
        return Optional.ofNullable(this.acceleratorCount);
    }

    /**
     * The accelerator manufacturers to include. You can specify `nvidia`, `amd`, `amazon-web-services`, `xilinx`, or `habana` depending on your accelerator requirements. Valid values are `amazon-web-services`, `amd`, `nvidia`, `xilinx`, `habana`.
     * 
     */
    @Import(name="acceleratorManufacturers")
    private @Nullable Output<List<String>> acceleratorManufacturers;

    /**
     * @return The accelerator manufacturers to include. You can specify `nvidia`, `amd`, `amazon-web-services`, `xilinx`, or `habana` depending on your accelerator requirements. Valid values are `amazon-web-services`, `amd`, `nvidia`, `xilinx`, `habana`.
     * 
     */
    public Optional<Output<List<String>>> acceleratorManufacturers() {
        return Optional.ofNullable(this.acceleratorManufacturers);
    }

    /**
     * The specific accelerator names to include. For example, you can specify `a100`, `v100`, `k80`, or other specific accelerator models. Valid values are `a100`, `inferentia`, `k520`, `k80`, `m60`, `radeon-pro-v520`, `t4`, `vu9p`, `v100`, `a10g`, `h100`, `t4g`.
     * 
     */
    @Import(name="acceleratorNames")
    private @Nullable Output<List<String>> acceleratorNames;

    /**
     * @return The specific accelerator names to include. For example, you can specify `a100`, `v100`, `k80`, or other specific accelerator models. Valid values are `a100`, `inferentia`, `k520`, `k80`, `m60`, `radeon-pro-v520`, `t4`, `vu9p`, `v100`, `a10g`, `h100`, `t4g`.
     * 
     */
    public Optional<Output<List<String>>> acceleratorNames() {
        return Optional.ofNullable(this.acceleratorNames);
    }

    /**
     * The minimum and maximum total accelerator memory in mebibytes (MiB). This is important for GPU workloads that require specific amounts of video memory.
     * 
     */
    @Import(name="acceleratorTotalMemoryMib")
    private @Nullable Output<CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMibArgs> acceleratorTotalMemoryMib;

    /**
     * @return The minimum and maximum total accelerator memory in mebibytes (MiB). This is important for GPU workloads that require specific amounts of video memory.
     * 
     */
    public Optional<Output<CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMibArgs>> acceleratorTotalMemoryMib() {
        return Optional.ofNullable(this.acceleratorTotalMemoryMib);
    }

    /**
     * The accelerator types to include. You can specify `gpu` for graphics processing units, `fpga` for field programmable gate arrays, or `inference` for machine learning inference accelerators. Valid values are `gpu`, `fpga`, `inference`.
     * 
     */
    @Import(name="acceleratorTypes")
    private @Nullable Output<List<String>> acceleratorTypes;

    /**
     * @return The accelerator types to include. You can specify `gpu` for graphics processing units, `fpga` for field programmable gate arrays, or `inference` for machine learning inference accelerators. Valid values are `gpu`, `fpga`, `inference`.
     * 
     */
    public Optional<Output<List<String>>> acceleratorTypes() {
        return Optional.ofNullable(this.acceleratorTypes);
    }

    /**
     * The instance types to include in the selection. When specified, Amazon ECS only considers these instance types, subject to the other requirements specified. Maximum of 400 instance types. You can specify instance type patterns using wildcards (e.g., `m5.*`).
     * 
     */
    @Import(name="allowedInstanceTypes")
    private @Nullable Output<List<String>> allowedInstanceTypes;

    /**
     * @return The instance types to include in the selection. When specified, Amazon ECS only considers these instance types, subject to the other requirements specified. Maximum of 400 instance types. You can specify instance type patterns using wildcards (e.g., `m5.*`).
     * 
     */
    public Optional<Output<List<String>>> allowedInstanceTypes() {
        return Optional.ofNullable(this.allowedInstanceTypes);
    }

    /**
     * Indicates whether to include bare metal instance types. Set to `included` to allow bare metal instances, `excluded` to exclude them, or `required` to use only bare metal instances. Valid values are `included`, `excluded`, `required`.
     * 
     */
    @Import(name="bareMetal")
    private @Nullable Output<String> bareMetal;

    /**
     * @return Indicates whether to include bare metal instance types. Set to `included` to allow bare metal instances, `excluded` to exclude them, or `required` to use only bare metal instances. Valid values are `included`, `excluded`, `required`.
     * 
     */
    public Optional<Output<String>> bareMetal() {
        return Optional.ofNullable(this.bareMetal);
    }

    /**
     * The minimum and maximum baseline Amazon EBS bandwidth in megabits per second (Mbps). This is important for workloads with high storage I/O requirements.
     * 
     */
    @Import(name="baselineEbsBandwidthMbps")
    private @Nullable Output<CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbpsArgs> baselineEbsBandwidthMbps;

    /**
     * @return The minimum and maximum baseline Amazon EBS bandwidth in megabits per second (Mbps). This is important for workloads with high storage I/O requirements.
     * 
     */
    public Optional<Output<CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbpsArgs>> baselineEbsBandwidthMbps() {
        return Optional.ofNullable(this.baselineEbsBandwidthMbps);
    }

    /**
     * Indicates whether to include burstable performance instance types (T2, T3, T3a, T4g). Set to `included` to allow burstable instances, `excluded` to exclude them, or `required` to use only burstable instances. Valid values are `included`, `excluded`, `required`.
     * 
     */
    @Import(name="burstablePerformance")
    private @Nullable Output<String> burstablePerformance;

    /**
     * @return Indicates whether to include burstable performance instance types (T2, T3, T3a, T4g). Set to `included` to allow burstable instances, `excluded` to exclude them, or `required` to use only burstable instances. Valid values are `included`, `excluded`, `required`.
     * 
     */
    public Optional<Output<String>> burstablePerformance() {
        return Optional.ofNullable(this.burstablePerformance);
    }

    /**
     * The CPU manufacturers to include or exclude. You can specify `intel`, `amd`, or `amazon-web-services` to control which CPU types are used for your workloads. Valid values are `intel`, `amd`, `amazon-web-services`.
     * 
     */
    @Import(name="cpuManufacturers")
    private @Nullable Output<List<String>> cpuManufacturers;

    /**
     * @return The CPU manufacturers to include or exclude. You can specify `intel`, `amd`, or `amazon-web-services` to control which CPU types are used for your workloads. Valid values are `intel`, `amd`, `amazon-web-services`.
     * 
     */
    public Optional<Output<List<String>>> cpuManufacturers() {
        return Optional.ofNullable(this.cpuManufacturers);
    }

    /**
     * The instance types to exclude from selection. Use this to prevent Amazon ECS from selecting specific instance types that may not be suitable for your workloads. Maximum of 400 instance types.
     * 
     */
    @Import(name="excludedInstanceTypes")
    private @Nullable Output<List<String>> excludedInstanceTypes;

    /**
     * @return The instance types to exclude from selection. Use this to prevent Amazon ECS from selecting specific instance types that may not be suitable for your workloads. Maximum of 400 instance types.
     * 
     */
    public Optional<Output<List<String>>> excludedInstanceTypes() {
        return Optional.ofNullable(this.excludedInstanceTypes);
    }

    /**
     * The instance generations to include. You can specify `current` to use the latest generation instances, or `previous` to include previous generation instances for cost optimization. Valid values are `current`, `previous`.
     * 
     */
    @Import(name="instanceGenerations")
    private @Nullable Output<List<String>> instanceGenerations;

    /**
     * @return The instance generations to include. You can specify `current` to use the latest generation instances, or `previous` to include previous generation instances for cost optimization. Valid values are `current`, `previous`.
     * 
     */
    public Optional<Output<List<String>>> instanceGenerations() {
        return Optional.ofNullable(this.instanceGenerations);
    }

    /**
     * Indicates whether to include instance types with local storage. Set to `included` to allow local storage, `excluded` to exclude it, or `required` to use only instances with local storage. Valid values are `included`, `excluded`, `required`.
     * 
     */
    @Import(name="localStorage")
    private @Nullable Output<String> localStorage;

    /**
     * @return Indicates whether to include instance types with local storage. Set to `included` to allow local storage, `excluded` to exclude it, or `required` to use only instances with local storage. Valid values are `included`, `excluded`, `required`.
     * 
     */
    public Optional<Output<String>> localStorage() {
        return Optional.ofNullable(this.localStorage);
    }

    /**
     * The local storage types to include. You can specify `hdd` for hard disk drives, `ssd` for solid state drives, or both. Valid values are `hdd`, `ssd`.
     * 
     */
    @Import(name="localStorageTypes")
    private @Nullable Output<List<String>> localStorageTypes;

    /**
     * @return The local storage types to include. You can specify `hdd` for hard disk drives, `ssd` for solid state drives, or both. Valid values are `hdd`, `ssd`.
     * 
     */
    public Optional<Output<List<String>>> localStorageTypes() {
        return Optional.ofNullable(this.localStorageTypes);
    }

    /**
     * The maximum price for Spot instances as a percentage of the optimal On-Demand price. This provides more precise cost control for Spot instance selection.
     * 
     */
    @Import(name="maxSpotPriceAsPercentageOfOptimalOnDemandPrice")
    private @Nullable Output<Integer> maxSpotPriceAsPercentageOfOptimalOnDemandPrice;

    /**
     * @return The maximum price for Spot instances as a percentage of the optimal On-Demand price. This provides more precise cost control for Spot instance selection.
     * 
     */
    public Optional<Output<Integer>> maxSpotPriceAsPercentageOfOptimalOnDemandPrice() {
        return Optional.ofNullable(this.maxSpotPriceAsPercentageOfOptimalOnDemandPrice);
    }

    /**
     * The minimum and maximum amount of memory per vCPU in gibibytes (GiB). This helps ensure that instance types have the appropriate memory-to-CPU ratio for your workloads.
     * 
     */
    @Import(name="memoryGibPerVcpu")
    private @Nullable Output<CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsMemoryGibPerVcpuArgs> memoryGibPerVcpu;

    /**
     * @return The minimum and maximum amount of memory per vCPU in gibibytes (GiB). This helps ensure that instance types have the appropriate memory-to-CPU ratio for your workloads.
     * 
     */
    public Optional<Output<CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsMemoryGibPerVcpuArgs>> memoryGibPerVcpu() {
        return Optional.ofNullable(this.memoryGibPerVcpu);
    }

    /**
     * The minimum and maximum amount of memory in mebibytes (MiB) for the instance types. Amazon ECS selects instance types that have memory within this range.
     * 
     */
    @Import(name="memoryMib", required=true)
    private Output<CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsMemoryMibArgs> memoryMib;

    /**
     * @return The minimum and maximum amount of memory in mebibytes (MiB) for the instance types. Amazon ECS selects instance types that have memory within this range.
     * 
     */
    public Output<CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsMemoryMibArgs> memoryMib() {
        return this.memoryMib;
    }

    /**
     * The minimum and maximum network bandwidth in gigabits per second (Gbps). This is crucial for network-intensive workloads that require high throughput.
     * 
     */
    @Import(name="networkBandwidthGbps")
    private @Nullable Output<CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsNetworkBandwidthGbpsArgs> networkBandwidthGbps;

    /**
     * @return The minimum and maximum network bandwidth in gigabits per second (Gbps). This is crucial for network-intensive workloads that require high throughput.
     * 
     */
    public Optional<Output<CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsNetworkBandwidthGbpsArgs>> networkBandwidthGbps() {
        return Optional.ofNullable(this.networkBandwidthGbps);
    }

    /**
     * The minimum and maximum number of network interfaces for the instance types. This is useful for workloads that require multiple network interfaces.
     * 
     */
    @Import(name="networkInterfaceCount")
    private @Nullable Output<CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsNetworkInterfaceCountArgs> networkInterfaceCount;

    /**
     * @return The minimum and maximum number of network interfaces for the instance types. This is useful for workloads that require multiple network interfaces.
     * 
     */
    public Optional<Output<CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsNetworkInterfaceCountArgs>> networkInterfaceCount() {
        return Optional.ofNullable(this.networkInterfaceCount);
    }

    /**
     * The price protection threshold for On-Demand Instances, as a percentage higher than an identified On-Demand price. The identified On-Demand price is the price of the lowest priced current generation C, M, or R instance type with your specified attributes. When Amazon ECS selects instance types with your attributes, it will exclude instance types whose price exceeds your specified threshold.
     * 
     */
    @Import(name="onDemandMaxPricePercentageOverLowestPrice")
    private @Nullable Output<Integer> onDemandMaxPricePercentageOverLowestPrice;

    /**
     * @return The price protection threshold for On-Demand Instances, as a percentage higher than an identified On-Demand price. The identified On-Demand price is the price of the lowest priced current generation C, M, or R instance type with your specified attributes. When Amazon ECS selects instance types with your attributes, it will exclude instance types whose price exceeds your specified threshold.
     * 
     */
    public Optional<Output<Integer>> onDemandMaxPricePercentageOverLowestPrice() {
        return Optional.ofNullable(this.onDemandMaxPricePercentageOverLowestPrice);
    }

    /**
     * Indicates whether the instance types must support hibernation. When set to `true`, only instance types that support hibernation are selected.
     * 
     */
    @Import(name="requireHibernateSupport")
    private @Nullable Output<Boolean> requireHibernateSupport;

    /**
     * @return Indicates whether the instance types must support hibernation. When set to `true`, only instance types that support hibernation are selected.
     * 
     */
    public Optional<Output<Boolean>> requireHibernateSupport() {
        return Optional.ofNullable(this.requireHibernateSupport);
    }

    /**
     * The maximum price for Spot instances as a percentage over the lowest priced On-Demand instance. This helps control Spot instance costs while maintaining access to capacity.
     * 
     */
    @Import(name="spotMaxPricePercentageOverLowestPrice")
    private @Nullable Output<Integer> spotMaxPricePercentageOverLowestPrice;

    /**
     * @return The maximum price for Spot instances as a percentage over the lowest priced On-Demand instance. This helps control Spot instance costs while maintaining access to capacity.
     * 
     */
    public Optional<Output<Integer>> spotMaxPricePercentageOverLowestPrice() {
        return Optional.ofNullable(this.spotMaxPricePercentageOverLowestPrice);
    }

    /**
     * The minimum and maximum total local storage in gigabytes (GB) for instance types with local storage.
     * 
     */
    @Import(name="totalLocalStorageGb")
    private @Nullable Output<CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsTotalLocalStorageGbArgs> totalLocalStorageGb;

    /**
     * @return The minimum and maximum total local storage in gigabytes (GB) for instance types with local storage.
     * 
     */
    public Optional<Output<CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsTotalLocalStorageGbArgs>> totalLocalStorageGb() {
        return Optional.ofNullable(this.totalLocalStorageGb);
    }

    /**
     * The minimum and maximum number of vCPUs for the instance types. Amazon ECS selects instance types that have vCPU counts within this range.
     * 
     */
    @Import(name="vcpuCount", required=true)
    private Output<CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsVcpuCountArgs> vcpuCount;

    /**
     * @return The minimum and maximum number of vCPUs for the instance types. Amazon ECS selects instance types that have vCPU counts within this range.
     * 
     */
    public Output<CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsVcpuCountArgs> vcpuCount() {
        return this.vcpuCount;
    }

    private CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsArgs() {}

    private CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsArgs(CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsArgs $) {
        this.acceleratorCount = $.acceleratorCount;
        this.acceleratorManufacturers = $.acceleratorManufacturers;
        this.acceleratorNames = $.acceleratorNames;
        this.acceleratorTotalMemoryMib = $.acceleratorTotalMemoryMib;
        this.acceleratorTypes = $.acceleratorTypes;
        this.allowedInstanceTypes = $.allowedInstanceTypes;
        this.bareMetal = $.bareMetal;
        this.baselineEbsBandwidthMbps = $.baselineEbsBandwidthMbps;
        this.burstablePerformance = $.burstablePerformance;
        this.cpuManufacturers = $.cpuManufacturers;
        this.excludedInstanceTypes = $.excludedInstanceTypes;
        this.instanceGenerations = $.instanceGenerations;
        this.localStorage = $.localStorage;
        this.localStorageTypes = $.localStorageTypes;
        this.maxSpotPriceAsPercentageOfOptimalOnDemandPrice = $.maxSpotPriceAsPercentageOfOptimalOnDemandPrice;
        this.memoryGibPerVcpu = $.memoryGibPerVcpu;
        this.memoryMib = $.memoryMib;
        this.networkBandwidthGbps = $.networkBandwidthGbps;
        this.networkInterfaceCount = $.networkInterfaceCount;
        this.onDemandMaxPricePercentageOverLowestPrice = $.onDemandMaxPricePercentageOverLowestPrice;
        this.requireHibernateSupport = $.requireHibernateSupport;
        this.spotMaxPricePercentageOverLowestPrice = $.spotMaxPricePercentageOverLowestPrice;
        this.totalLocalStorageGb = $.totalLocalStorageGb;
        this.vcpuCount = $.vcpuCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsArgs $;

        public Builder() {
            $ = new CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsArgs();
        }

        public Builder(CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsArgs defaults) {
            $ = new CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param acceleratorCount The minimum and maximum number of accelerators for the instance types. This is used when you need instances with specific numbers of GPUs or other accelerators.
         * 
         * @return builder
         * 
         */
        public Builder acceleratorCount(@Nullable Output<CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsAcceleratorCountArgs> acceleratorCount) {
            $.acceleratorCount = acceleratorCount;
            return this;
        }

        /**
         * @param acceleratorCount The minimum and maximum number of accelerators for the instance types. This is used when you need instances with specific numbers of GPUs or other accelerators.
         * 
         * @return builder
         * 
         */
        public Builder acceleratorCount(CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsAcceleratorCountArgs acceleratorCount) {
            return acceleratorCount(Output.of(acceleratorCount));
        }

        /**
         * @param acceleratorManufacturers The accelerator manufacturers to include. You can specify `nvidia`, `amd`, `amazon-web-services`, `xilinx`, or `habana` depending on your accelerator requirements. Valid values are `amazon-web-services`, `amd`, `nvidia`, `xilinx`, `habana`.
         * 
         * @return builder
         * 
         */
        public Builder acceleratorManufacturers(@Nullable Output<List<String>> acceleratorManufacturers) {
            $.acceleratorManufacturers = acceleratorManufacturers;
            return this;
        }

        /**
         * @param acceleratorManufacturers The accelerator manufacturers to include. You can specify `nvidia`, `amd`, `amazon-web-services`, `xilinx`, or `habana` depending on your accelerator requirements. Valid values are `amazon-web-services`, `amd`, `nvidia`, `xilinx`, `habana`.
         * 
         * @return builder
         * 
         */
        public Builder acceleratorManufacturers(List<String> acceleratorManufacturers) {
            return acceleratorManufacturers(Output.of(acceleratorManufacturers));
        }

        /**
         * @param acceleratorManufacturers The accelerator manufacturers to include. You can specify `nvidia`, `amd`, `amazon-web-services`, `xilinx`, or `habana` depending on your accelerator requirements. Valid values are `amazon-web-services`, `amd`, `nvidia`, `xilinx`, `habana`.
         * 
         * @return builder
         * 
         */
        public Builder acceleratorManufacturers(String... acceleratorManufacturers) {
            return acceleratorManufacturers(List.of(acceleratorManufacturers));
        }

        /**
         * @param acceleratorNames The specific accelerator names to include. For example, you can specify `a100`, `v100`, `k80`, or other specific accelerator models. Valid values are `a100`, `inferentia`, `k520`, `k80`, `m60`, `radeon-pro-v520`, `t4`, `vu9p`, `v100`, `a10g`, `h100`, `t4g`.
         * 
         * @return builder
         * 
         */
        public Builder acceleratorNames(@Nullable Output<List<String>> acceleratorNames) {
            $.acceleratorNames = acceleratorNames;
            return this;
        }

        /**
         * @param acceleratorNames The specific accelerator names to include. For example, you can specify `a100`, `v100`, `k80`, or other specific accelerator models. Valid values are `a100`, `inferentia`, `k520`, `k80`, `m60`, `radeon-pro-v520`, `t4`, `vu9p`, `v100`, `a10g`, `h100`, `t4g`.
         * 
         * @return builder
         * 
         */
        public Builder acceleratorNames(List<String> acceleratorNames) {
            return acceleratorNames(Output.of(acceleratorNames));
        }

        /**
         * @param acceleratorNames The specific accelerator names to include. For example, you can specify `a100`, `v100`, `k80`, or other specific accelerator models. Valid values are `a100`, `inferentia`, `k520`, `k80`, `m60`, `radeon-pro-v520`, `t4`, `vu9p`, `v100`, `a10g`, `h100`, `t4g`.
         * 
         * @return builder
         * 
         */
        public Builder acceleratorNames(String... acceleratorNames) {
            return acceleratorNames(List.of(acceleratorNames));
        }

        /**
         * @param acceleratorTotalMemoryMib The minimum and maximum total accelerator memory in mebibytes (MiB). This is important for GPU workloads that require specific amounts of video memory.
         * 
         * @return builder
         * 
         */
        public Builder acceleratorTotalMemoryMib(@Nullable Output<CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMibArgs> acceleratorTotalMemoryMib) {
            $.acceleratorTotalMemoryMib = acceleratorTotalMemoryMib;
            return this;
        }

        /**
         * @param acceleratorTotalMemoryMib The minimum and maximum total accelerator memory in mebibytes (MiB). This is important for GPU workloads that require specific amounts of video memory.
         * 
         * @return builder
         * 
         */
        public Builder acceleratorTotalMemoryMib(CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMibArgs acceleratorTotalMemoryMib) {
            return acceleratorTotalMemoryMib(Output.of(acceleratorTotalMemoryMib));
        }

        /**
         * @param acceleratorTypes The accelerator types to include. You can specify `gpu` for graphics processing units, `fpga` for field programmable gate arrays, or `inference` for machine learning inference accelerators. Valid values are `gpu`, `fpga`, `inference`.
         * 
         * @return builder
         * 
         */
        public Builder acceleratorTypes(@Nullable Output<List<String>> acceleratorTypes) {
            $.acceleratorTypes = acceleratorTypes;
            return this;
        }

        /**
         * @param acceleratorTypes The accelerator types to include. You can specify `gpu` for graphics processing units, `fpga` for field programmable gate arrays, or `inference` for machine learning inference accelerators. Valid values are `gpu`, `fpga`, `inference`.
         * 
         * @return builder
         * 
         */
        public Builder acceleratorTypes(List<String> acceleratorTypes) {
            return acceleratorTypes(Output.of(acceleratorTypes));
        }

        /**
         * @param acceleratorTypes The accelerator types to include. You can specify `gpu` for graphics processing units, `fpga` for field programmable gate arrays, or `inference` for machine learning inference accelerators. Valid values are `gpu`, `fpga`, `inference`.
         * 
         * @return builder
         * 
         */
        public Builder acceleratorTypes(String... acceleratorTypes) {
            return acceleratorTypes(List.of(acceleratorTypes));
        }

        /**
         * @param allowedInstanceTypes The instance types to include in the selection. When specified, Amazon ECS only considers these instance types, subject to the other requirements specified. Maximum of 400 instance types. You can specify instance type patterns using wildcards (e.g., `m5.*`).
         * 
         * @return builder
         * 
         */
        public Builder allowedInstanceTypes(@Nullable Output<List<String>> allowedInstanceTypes) {
            $.allowedInstanceTypes = allowedInstanceTypes;
            return this;
        }

        /**
         * @param allowedInstanceTypes The instance types to include in the selection. When specified, Amazon ECS only considers these instance types, subject to the other requirements specified. Maximum of 400 instance types. You can specify instance type patterns using wildcards (e.g., `m5.*`).
         * 
         * @return builder
         * 
         */
        public Builder allowedInstanceTypes(List<String> allowedInstanceTypes) {
            return allowedInstanceTypes(Output.of(allowedInstanceTypes));
        }

        /**
         * @param allowedInstanceTypes The instance types to include in the selection. When specified, Amazon ECS only considers these instance types, subject to the other requirements specified. Maximum of 400 instance types. You can specify instance type patterns using wildcards (e.g., `m5.*`).
         * 
         * @return builder
         * 
         */
        public Builder allowedInstanceTypes(String... allowedInstanceTypes) {
            return allowedInstanceTypes(List.of(allowedInstanceTypes));
        }

        /**
         * @param bareMetal Indicates whether to include bare metal instance types. Set to `included` to allow bare metal instances, `excluded` to exclude them, or `required` to use only bare metal instances. Valid values are `included`, `excluded`, `required`.
         * 
         * @return builder
         * 
         */
        public Builder bareMetal(@Nullable Output<String> bareMetal) {
            $.bareMetal = bareMetal;
            return this;
        }

        /**
         * @param bareMetal Indicates whether to include bare metal instance types. Set to `included` to allow bare metal instances, `excluded` to exclude them, or `required` to use only bare metal instances. Valid values are `included`, `excluded`, `required`.
         * 
         * @return builder
         * 
         */
        public Builder bareMetal(String bareMetal) {
            return bareMetal(Output.of(bareMetal));
        }

        /**
         * @param baselineEbsBandwidthMbps The minimum and maximum baseline Amazon EBS bandwidth in megabits per second (Mbps). This is important for workloads with high storage I/O requirements.
         * 
         * @return builder
         * 
         */
        public Builder baselineEbsBandwidthMbps(@Nullable Output<CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbpsArgs> baselineEbsBandwidthMbps) {
            $.baselineEbsBandwidthMbps = baselineEbsBandwidthMbps;
            return this;
        }

        /**
         * @param baselineEbsBandwidthMbps The minimum and maximum baseline Amazon EBS bandwidth in megabits per second (Mbps). This is important for workloads with high storage I/O requirements.
         * 
         * @return builder
         * 
         */
        public Builder baselineEbsBandwidthMbps(CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbpsArgs baselineEbsBandwidthMbps) {
            return baselineEbsBandwidthMbps(Output.of(baselineEbsBandwidthMbps));
        }

        /**
         * @param burstablePerformance Indicates whether to include burstable performance instance types (T2, T3, T3a, T4g). Set to `included` to allow burstable instances, `excluded` to exclude them, or `required` to use only burstable instances. Valid values are `included`, `excluded`, `required`.
         * 
         * @return builder
         * 
         */
        public Builder burstablePerformance(@Nullable Output<String> burstablePerformance) {
            $.burstablePerformance = burstablePerformance;
            return this;
        }

        /**
         * @param burstablePerformance Indicates whether to include burstable performance instance types (T2, T3, T3a, T4g). Set to `included` to allow burstable instances, `excluded` to exclude them, or `required` to use only burstable instances. Valid values are `included`, `excluded`, `required`.
         * 
         * @return builder
         * 
         */
        public Builder burstablePerformance(String burstablePerformance) {
            return burstablePerformance(Output.of(burstablePerformance));
        }

        /**
         * @param cpuManufacturers The CPU manufacturers to include or exclude. You can specify `intel`, `amd`, or `amazon-web-services` to control which CPU types are used for your workloads. Valid values are `intel`, `amd`, `amazon-web-services`.
         * 
         * @return builder
         * 
         */
        public Builder cpuManufacturers(@Nullable Output<List<String>> cpuManufacturers) {
            $.cpuManufacturers = cpuManufacturers;
            return this;
        }

        /**
         * @param cpuManufacturers The CPU manufacturers to include or exclude. You can specify `intel`, `amd`, or `amazon-web-services` to control which CPU types are used for your workloads. Valid values are `intel`, `amd`, `amazon-web-services`.
         * 
         * @return builder
         * 
         */
        public Builder cpuManufacturers(List<String> cpuManufacturers) {
            return cpuManufacturers(Output.of(cpuManufacturers));
        }

        /**
         * @param cpuManufacturers The CPU manufacturers to include or exclude. You can specify `intel`, `amd`, or `amazon-web-services` to control which CPU types are used for your workloads. Valid values are `intel`, `amd`, `amazon-web-services`.
         * 
         * @return builder
         * 
         */
        public Builder cpuManufacturers(String... cpuManufacturers) {
            return cpuManufacturers(List.of(cpuManufacturers));
        }

        /**
         * @param excludedInstanceTypes The instance types to exclude from selection. Use this to prevent Amazon ECS from selecting specific instance types that may not be suitable for your workloads. Maximum of 400 instance types.
         * 
         * @return builder
         * 
         */
        public Builder excludedInstanceTypes(@Nullable Output<List<String>> excludedInstanceTypes) {
            $.excludedInstanceTypes = excludedInstanceTypes;
            return this;
        }

        /**
         * @param excludedInstanceTypes The instance types to exclude from selection. Use this to prevent Amazon ECS from selecting specific instance types that may not be suitable for your workloads. Maximum of 400 instance types.
         * 
         * @return builder
         * 
         */
        public Builder excludedInstanceTypes(List<String> excludedInstanceTypes) {
            return excludedInstanceTypes(Output.of(excludedInstanceTypes));
        }

        /**
         * @param excludedInstanceTypes The instance types to exclude from selection. Use this to prevent Amazon ECS from selecting specific instance types that may not be suitable for your workloads. Maximum of 400 instance types.
         * 
         * @return builder
         * 
         */
        public Builder excludedInstanceTypes(String... excludedInstanceTypes) {
            return excludedInstanceTypes(List.of(excludedInstanceTypes));
        }

        /**
         * @param instanceGenerations The instance generations to include. You can specify `current` to use the latest generation instances, or `previous` to include previous generation instances for cost optimization. Valid values are `current`, `previous`.
         * 
         * @return builder
         * 
         */
        public Builder instanceGenerations(@Nullable Output<List<String>> instanceGenerations) {
            $.instanceGenerations = instanceGenerations;
            return this;
        }

        /**
         * @param instanceGenerations The instance generations to include. You can specify `current` to use the latest generation instances, or `previous` to include previous generation instances for cost optimization. Valid values are `current`, `previous`.
         * 
         * @return builder
         * 
         */
        public Builder instanceGenerations(List<String> instanceGenerations) {
            return instanceGenerations(Output.of(instanceGenerations));
        }

        /**
         * @param instanceGenerations The instance generations to include. You can specify `current` to use the latest generation instances, or `previous` to include previous generation instances for cost optimization. Valid values are `current`, `previous`.
         * 
         * @return builder
         * 
         */
        public Builder instanceGenerations(String... instanceGenerations) {
            return instanceGenerations(List.of(instanceGenerations));
        }

        /**
         * @param localStorage Indicates whether to include instance types with local storage. Set to `included` to allow local storage, `excluded` to exclude it, or `required` to use only instances with local storage. Valid values are `included`, `excluded`, `required`.
         * 
         * @return builder
         * 
         */
        public Builder localStorage(@Nullable Output<String> localStorage) {
            $.localStorage = localStorage;
            return this;
        }

        /**
         * @param localStorage Indicates whether to include instance types with local storage. Set to `included` to allow local storage, `excluded` to exclude it, or `required` to use only instances with local storage. Valid values are `included`, `excluded`, `required`.
         * 
         * @return builder
         * 
         */
        public Builder localStorage(String localStorage) {
            return localStorage(Output.of(localStorage));
        }

        /**
         * @param localStorageTypes The local storage types to include. You can specify `hdd` for hard disk drives, `ssd` for solid state drives, or both. Valid values are `hdd`, `ssd`.
         * 
         * @return builder
         * 
         */
        public Builder localStorageTypes(@Nullable Output<List<String>> localStorageTypes) {
            $.localStorageTypes = localStorageTypes;
            return this;
        }

        /**
         * @param localStorageTypes The local storage types to include. You can specify `hdd` for hard disk drives, `ssd` for solid state drives, or both. Valid values are `hdd`, `ssd`.
         * 
         * @return builder
         * 
         */
        public Builder localStorageTypes(List<String> localStorageTypes) {
            return localStorageTypes(Output.of(localStorageTypes));
        }

        /**
         * @param localStorageTypes The local storage types to include. You can specify `hdd` for hard disk drives, `ssd` for solid state drives, or both. Valid values are `hdd`, `ssd`.
         * 
         * @return builder
         * 
         */
        public Builder localStorageTypes(String... localStorageTypes) {
            return localStorageTypes(List.of(localStorageTypes));
        }

        /**
         * @param maxSpotPriceAsPercentageOfOptimalOnDemandPrice The maximum price for Spot instances as a percentage of the optimal On-Demand price. This provides more precise cost control for Spot instance selection.
         * 
         * @return builder
         * 
         */
        public Builder maxSpotPriceAsPercentageOfOptimalOnDemandPrice(@Nullable Output<Integer> maxSpotPriceAsPercentageOfOptimalOnDemandPrice) {
            $.maxSpotPriceAsPercentageOfOptimalOnDemandPrice = maxSpotPriceAsPercentageOfOptimalOnDemandPrice;
            return this;
        }

        /**
         * @param maxSpotPriceAsPercentageOfOptimalOnDemandPrice The maximum price for Spot instances as a percentage of the optimal On-Demand price. This provides more precise cost control for Spot instance selection.
         * 
         * @return builder
         * 
         */
        public Builder maxSpotPriceAsPercentageOfOptimalOnDemandPrice(Integer maxSpotPriceAsPercentageOfOptimalOnDemandPrice) {
            return maxSpotPriceAsPercentageOfOptimalOnDemandPrice(Output.of(maxSpotPriceAsPercentageOfOptimalOnDemandPrice));
        }

        /**
         * @param memoryGibPerVcpu The minimum and maximum amount of memory per vCPU in gibibytes (GiB). This helps ensure that instance types have the appropriate memory-to-CPU ratio for your workloads.
         * 
         * @return builder
         * 
         */
        public Builder memoryGibPerVcpu(@Nullable Output<CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsMemoryGibPerVcpuArgs> memoryGibPerVcpu) {
            $.memoryGibPerVcpu = memoryGibPerVcpu;
            return this;
        }

        /**
         * @param memoryGibPerVcpu The minimum and maximum amount of memory per vCPU in gibibytes (GiB). This helps ensure that instance types have the appropriate memory-to-CPU ratio for your workloads.
         * 
         * @return builder
         * 
         */
        public Builder memoryGibPerVcpu(CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsMemoryGibPerVcpuArgs memoryGibPerVcpu) {
            return memoryGibPerVcpu(Output.of(memoryGibPerVcpu));
        }

        /**
         * @param memoryMib The minimum and maximum amount of memory in mebibytes (MiB) for the instance types. Amazon ECS selects instance types that have memory within this range.
         * 
         * @return builder
         * 
         */
        public Builder memoryMib(Output<CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsMemoryMibArgs> memoryMib) {
            $.memoryMib = memoryMib;
            return this;
        }

        /**
         * @param memoryMib The minimum and maximum amount of memory in mebibytes (MiB) for the instance types. Amazon ECS selects instance types that have memory within this range.
         * 
         * @return builder
         * 
         */
        public Builder memoryMib(CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsMemoryMibArgs memoryMib) {
            return memoryMib(Output.of(memoryMib));
        }

        /**
         * @param networkBandwidthGbps The minimum and maximum network bandwidth in gigabits per second (Gbps). This is crucial for network-intensive workloads that require high throughput.
         * 
         * @return builder
         * 
         */
        public Builder networkBandwidthGbps(@Nullable Output<CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsNetworkBandwidthGbpsArgs> networkBandwidthGbps) {
            $.networkBandwidthGbps = networkBandwidthGbps;
            return this;
        }

        /**
         * @param networkBandwidthGbps The minimum and maximum network bandwidth in gigabits per second (Gbps). This is crucial for network-intensive workloads that require high throughput.
         * 
         * @return builder
         * 
         */
        public Builder networkBandwidthGbps(CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsNetworkBandwidthGbpsArgs networkBandwidthGbps) {
            return networkBandwidthGbps(Output.of(networkBandwidthGbps));
        }

        /**
         * @param networkInterfaceCount The minimum and maximum number of network interfaces for the instance types. This is useful for workloads that require multiple network interfaces.
         * 
         * @return builder
         * 
         */
        public Builder networkInterfaceCount(@Nullable Output<CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsNetworkInterfaceCountArgs> networkInterfaceCount) {
            $.networkInterfaceCount = networkInterfaceCount;
            return this;
        }

        /**
         * @param networkInterfaceCount The minimum and maximum number of network interfaces for the instance types. This is useful for workloads that require multiple network interfaces.
         * 
         * @return builder
         * 
         */
        public Builder networkInterfaceCount(CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsNetworkInterfaceCountArgs networkInterfaceCount) {
            return networkInterfaceCount(Output.of(networkInterfaceCount));
        }

        /**
         * @param onDemandMaxPricePercentageOverLowestPrice The price protection threshold for On-Demand Instances, as a percentage higher than an identified On-Demand price. The identified On-Demand price is the price of the lowest priced current generation C, M, or R instance type with your specified attributes. When Amazon ECS selects instance types with your attributes, it will exclude instance types whose price exceeds your specified threshold.
         * 
         * @return builder
         * 
         */
        public Builder onDemandMaxPricePercentageOverLowestPrice(@Nullable Output<Integer> onDemandMaxPricePercentageOverLowestPrice) {
            $.onDemandMaxPricePercentageOverLowestPrice = onDemandMaxPricePercentageOverLowestPrice;
            return this;
        }

        /**
         * @param onDemandMaxPricePercentageOverLowestPrice The price protection threshold for On-Demand Instances, as a percentage higher than an identified On-Demand price. The identified On-Demand price is the price of the lowest priced current generation C, M, or R instance type with your specified attributes. When Amazon ECS selects instance types with your attributes, it will exclude instance types whose price exceeds your specified threshold.
         * 
         * @return builder
         * 
         */
        public Builder onDemandMaxPricePercentageOverLowestPrice(Integer onDemandMaxPricePercentageOverLowestPrice) {
            return onDemandMaxPricePercentageOverLowestPrice(Output.of(onDemandMaxPricePercentageOverLowestPrice));
        }

        /**
         * @param requireHibernateSupport Indicates whether the instance types must support hibernation. When set to `true`, only instance types that support hibernation are selected.
         * 
         * @return builder
         * 
         */
        public Builder requireHibernateSupport(@Nullable Output<Boolean> requireHibernateSupport) {
            $.requireHibernateSupport = requireHibernateSupport;
            return this;
        }

        /**
         * @param requireHibernateSupport Indicates whether the instance types must support hibernation. When set to `true`, only instance types that support hibernation are selected.
         * 
         * @return builder
         * 
         */
        public Builder requireHibernateSupport(Boolean requireHibernateSupport) {
            return requireHibernateSupport(Output.of(requireHibernateSupport));
        }

        /**
         * @param spotMaxPricePercentageOverLowestPrice The maximum price for Spot instances as a percentage over the lowest priced On-Demand instance. This helps control Spot instance costs while maintaining access to capacity.
         * 
         * @return builder
         * 
         */
        public Builder spotMaxPricePercentageOverLowestPrice(@Nullable Output<Integer> spotMaxPricePercentageOverLowestPrice) {
            $.spotMaxPricePercentageOverLowestPrice = spotMaxPricePercentageOverLowestPrice;
            return this;
        }

        /**
         * @param spotMaxPricePercentageOverLowestPrice The maximum price for Spot instances as a percentage over the lowest priced On-Demand instance. This helps control Spot instance costs while maintaining access to capacity.
         * 
         * @return builder
         * 
         */
        public Builder spotMaxPricePercentageOverLowestPrice(Integer spotMaxPricePercentageOverLowestPrice) {
            return spotMaxPricePercentageOverLowestPrice(Output.of(spotMaxPricePercentageOverLowestPrice));
        }

        /**
         * @param totalLocalStorageGb The minimum and maximum total local storage in gigabytes (GB) for instance types with local storage.
         * 
         * @return builder
         * 
         */
        public Builder totalLocalStorageGb(@Nullable Output<CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsTotalLocalStorageGbArgs> totalLocalStorageGb) {
            $.totalLocalStorageGb = totalLocalStorageGb;
            return this;
        }

        /**
         * @param totalLocalStorageGb The minimum and maximum total local storage in gigabytes (GB) for instance types with local storage.
         * 
         * @return builder
         * 
         */
        public Builder totalLocalStorageGb(CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsTotalLocalStorageGbArgs totalLocalStorageGb) {
            return totalLocalStorageGb(Output.of(totalLocalStorageGb));
        }

        /**
         * @param vcpuCount The minimum and maximum number of vCPUs for the instance types. Amazon ECS selects instance types that have vCPU counts within this range.
         * 
         * @return builder
         * 
         */
        public Builder vcpuCount(Output<CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsVcpuCountArgs> vcpuCount) {
            $.vcpuCount = vcpuCount;
            return this;
        }

        /**
         * @param vcpuCount The minimum and maximum number of vCPUs for the instance types. Amazon ECS selects instance types that have vCPU counts within this range.
         * 
         * @return builder
         * 
         */
        public Builder vcpuCount(CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsVcpuCountArgs vcpuCount) {
            return vcpuCount(Output.of(vcpuCount));
        }

        public CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsArgs build() {
            if ($.memoryMib == null) {
                throw new MissingRequiredPropertyException("CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsArgs", "memoryMib");
            }
            if ($.vcpuCount == null) {
                throw new MissingRequiredPropertyException("CapacityProviderManagedInstancesProviderInstanceLaunchTemplateInstanceRequirementsArgs", "vcpuCount");
            }
            return $;
        }
    }

}
