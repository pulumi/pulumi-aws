// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.accessanalyzer;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AnalyzerArgs extends com.pulumi.resources.ResourceArgs {

    public static final AnalyzerArgs Empty = new AnalyzerArgs();

    @Import(name="analyzerName", required=true)
    private Output<String> analyzerName;

    public Output<String> analyzerName() {
        return this.analyzerName;
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private AnalyzerArgs() {}

    private AnalyzerArgs(AnalyzerArgs $) {
        this.analyzerName = $.analyzerName;
        this.tags = $.tags;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AnalyzerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AnalyzerArgs $;

        public Builder() {
            $ = new AnalyzerArgs();
        }

        public Builder(AnalyzerArgs defaults) {
            $ = new AnalyzerArgs(Objects.requireNonNull(defaults));
        }

        public Builder analyzerName(Output<String> analyzerName) {
            $.analyzerName = analyzerName;
            return this;
        }

        public Builder analyzerName(String analyzerName) {
            return analyzerName(Output.of(analyzerName));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public AnalyzerArgs build() {
            $.analyzerName = Objects.requireNonNull($.analyzerName, "expected parameter 'analyzerName' to be non-null");
            return $;
        }
    }

}
