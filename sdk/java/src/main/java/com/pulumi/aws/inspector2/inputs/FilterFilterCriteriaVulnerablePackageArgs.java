// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.inspector2.inputs;

import com.pulumi.aws.inspector2.inputs.FilterFilterCriteriaVulnerablePackageArchitectureArgs;
import com.pulumi.aws.inspector2.inputs.FilterFilterCriteriaVulnerablePackageEpochArgs;
import com.pulumi.aws.inspector2.inputs.FilterFilterCriteriaVulnerablePackageFilePathArgs;
import com.pulumi.aws.inspector2.inputs.FilterFilterCriteriaVulnerablePackageNameArgs;
import com.pulumi.aws.inspector2.inputs.FilterFilterCriteriaVulnerablePackageReleaseArgs;
import com.pulumi.aws.inspector2.inputs.FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnArgs;
import com.pulumi.aws.inspector2.inputs.FilterFilterCriteriaVulnerablePackageSourceLayerHashArgs;
import com.pulumi.aws.inspector2.inputs.FilterFilterCriteriaVulnerablePackageVersionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FilterFilterCriteriaVulnerablePackageArgs extends com.pulumi.resources.ResourceArgs {

    public static final FilterFilterCriteriaVulnerablePackageArgs Empty = new FilterFilterCriteriaVulnerablePackageArgs();

    /**
     * (Optional) The architecture of the package. Documented below.
     * 
     */
    @Import(name="architecture")
    private @Nullable Output<FilterFilterCriteriaVulnerablePackageArchitectureArgs> architecture;

    /**
     * @return (Optional) The architecture of the package. Documented below.
     * 
     */
    public Optional<Output<FilterFilterCriteriaVulnerablePackageArchitectureArgs>> architecture() {
        return Optional.ofNullable(this.architecture);
    }

    /**
     * (Optional) The epoch of the package. Documented below.
     * 
     */
    @Import(name="epoches")
    private @Nullable Output<List<FilterFilterCriteriaVulnerablePackageEpochArgs>> epoches;

    /**
     * @return (Optional) The epoch of the package. Documented below.
     * 
     */
    public Optional<Output<List<FilterFilterCriteriaVulnerablePackageEpochArgs>>> epoches() {
        return Optional.ofNullable(this.epoches);
    }

    /**
     * (Optional) The name of the package. Documented below.
     * 
     */
    @Import(name="filePath")
    private @Nullable Output<FilterFilterCriteriaVulnerablePackageFilePathArgs> filePath;

    /**
     * @return (Optional) The name of the package. Documented below.
     * 
     */
    public Optional<Output<FilterFilterCriteriaVulnerablePackageFilePathArgs>> filePath() {
        return Optional.ofNullable(this.filePath);
    }

    /**
     * Name of the filter.
     * 
     */
    @Import(name="name")
    private @Nullable Output<FilterFilterCriteriaVulnerablePackageNameArgs> name;

    /**
     * @return Name of the filter.
     * 
     */
    public Optional<Output<FilterFilterCriteriaVulnerablePackageNameArgs>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * (Optional) The release of the package. Documented below.
     * 
     */
    @Import(name="release")
    private @Nullable Output<FilterFilterCriteriaVulnerablePackageReleaseArgs> release;

    /**
     * @return (Optional) The release of the package. Documented below.
     * 
     */
    public Optional<Output<FilterFilterCriteriaVulnerablePackageReleaseArgs>> release() {
        return Optional.ofNullable(this.release);
    }

    /**
     * (Optional) The ARN of the package&#39;s source lambda layer. Documented below.
     * 
     */
    @Import(name="sourceLambdaLayerArn")
    private @Nullable Output<FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnArgs> sourceLambdaLayerArn;

    /**
     * @return (Optional) The ARN of the package&#39;s source lambda layer. Documented below.
     * 
     */
    public Optional<Output<FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnArgs>> sourceLambdaLayerArn() {
        return Optional.ofNullable(this.sourceLambdaLayerArn);
    }

    /**
     * (Optional) The source layer hash of the package. Documented below.
     * 
     */
    @Import(name="sourceLayerHash")
    private @Nullable Output<FilterFilterCriteriaVulnerablePackageSourceLayerHashArgs> sourceLayerHash;

    /**
     * @return (Optional) The source layer hash of the package. Documented below.
     * 
     */
    public Optional<Output<FilterFilterCriteriaVulnerablePackageSourceLayerHashArgs>> sourceLayerHash() {
        return Optional.ofNullable(this.sourceLayerHash);
    }

    /**
     * (Optional) The version of the package. Documented below.
     * 
     */
    @Import(name="version")
    private @Nullable Output<FilterFilterCriteriaVulnerablePackageVersionArgs> version;

    /**
     * @return (Optional) The version of the package. Documented below.
     * 
     */
    public Optional<Output<FilterFilterCriteriaVulnerablePackageVersionArgs>> version() {
        return Optional.ofNullable(this.version);
    }

    private FilterFilterCriteriaVulnerablePackageArgs() {}

    private FilterFilterCriteriaVulnerablePackageArgs(FilterFilterCriteriaVulnerablePackageArgs $) {
        this.architecture = $.architecture;
        this.epoches = $.epoches;
        this.filePath = $.filePath;
        this.name = $.name;
        this.release = $.release;
        this.sourceLambdaLayerArn = $.sourceLambdaLayerArn;
        this.sourceLayerHash = $.sourceLayerHash;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FilterFilterCriteriaVulnerablePackageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FilterFilterCriteriaVulnerablePackageArgs $;

        public Builder() {
            $ = new FilterFilterCriteriaVulnerablePackageArgs();
        }

        public Builder(FilterFilterCriteriaVulnerablePackageArgs defaults) {
            $ = new FilterFilterCriteriaVulnerablePackageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param architecture (Optional) The architecture of the package. Documented below.
         * 
         * @return builder
         * 
         */
        public Builder architecture(@Nullable Output<FilterFilterCriteriaVulnerablePackageArchitectureArgs> architecture) {
            $.architecture = architecture;
            return this;
        }

        /**
         * @param architecture (Optional) The architecture of the package. Documented below.
         * 
         * @return builder
         * 
         */
        public Builder architecture(FilterFilterCriteriaVulnerablePackageArchitectureArgs architecture) {
            return architecture(Output.of(architecture));
        }

        /**
         * @param epoches (Optional) The epoch of the package. Documented below.
         * 
         * @return builder
         * 
         */
        public Builder epoches(@Nullable Output<List<FilterFilterCriteriaVulnerablePackageEpochArgs>> epoches) {
            $.epoches = epoches;
            return this;
        }

        /**
         * @param epoches (Optional) The epoch of the package. Documented below.
         * 
         * @return builder
         * 
         */
        public Builder epoches(List<FilterFilterCriteriaVulnerablePackageEpochArgs> epoches) {
            return epoches(Output.of(epoches));
        }

        /**
         * @param epoches (Optional) The epoch of the package. Documented below.
         * 
         * @return builder
         * 
         */
        public Builder epoches(FilterFilterCriteriaVulnerablePackageEpochArgs... epoches) {
            return epoches(List.of(epoches));
        }

        /**
         * @param filePath (Optional) The name of the package. Documented below.
         * 
         * @return builder
         * 
         */
        public Builder filePath(@Nullable Output<FilterFilterCriteriaVulnerablePackageFilePathArgs> filePath) {
            $.filePath = filePath;
            return this;
        }

        /**
         * @param filePath (Optional) The name of the package. Documented below.
         * 
         * @return builder
         * 
         */
        public Builder filePath(FilterFilterCriteriaVulnerablePackageFilePathArgs filePath) {
            return filePath(Output.of(filePath));
        }

        /**
         * @param name Name of the filter.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<FilterFilterCriteriaVulnerablePackageNameArgs> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the filter.
         * 
         * @return builder
         * 
         */
        public Builder name(FilterFilterCriteriaVulnerablePackageNameArgs name) {
            return name(Output.of(name));
        }

        /**
         * @param release (Optional) The release of the package. Documented below.
         * 
         * @return builder
         * 
         */
        public Builder release(@Nullable Output<FilterFilterCriteriaVulnerablePackageReleaseArgs> release) {
            $.release = release;
            return this;
        }

        /**
         * @param release (Optional) The release of the package. Documented below.
         * 
         * @return builder
         * 
         */
        public Builder release(FilterFilterCriteriaVulnerablePackageReleaseArgs release) {
            return release(Output.of(release));
        }

        /**
         * @param sourceLambdaLayerArn (Optional) The ARN of the package&#39;s source lambda layer. Documented below.
         * 
         * @return builder
         * 
         */
        public Builder sourceLambdaLayerArn(@Nullable Output<FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnArgs> sourceLambdaLayerArn) {
            $.sourceLambdaLayerArn = sourceLambdaLayerArn;
            return this;
        }

        /**
         * @param sourceLambdaLayerArn (Optional) The ARN of the package&#39;s source lambda layer. Documented below.
         * 
         * @return builder
         * 
         */
        public Builder sourceLambdaLayerArn(FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnArgs sourceLambdaLayerArn) {
            return sourceLambdaLayerArn(Output.of(sourceLambdaLayerArn));
        }

        /**
         * @param sourceLayerHash (Optional) The source layer hash of the package. Documented below.
         * 
         * @return builder
         * 
         */
        public Builder sourceLayerHash(@Nullable Output<FilterFilterCriteriaVulnerablePackageSourceLayerHashArgs> sourceLayerHash) {
            $.sourceLayerHash = sourceLayerHash;
            return this;
        }

        /**
         * @param sourceLayerHash (Optional) The source layer hash of the package. Documented below.
         * 
         * @return builder
         * 
         */
        public Builder sourceLayerHash(FilterFilterCriteriaVulnerablePackageSourceLayerHashArgs sourceLayerHash) {
            return sourceLayerHash(Output.of(sourceLayerHash));
        }

        /**
         * @param version (Optional) The version of the package. Documented below.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<FilterFilterCriteriaVulnerablePackageVersionArgs> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version (Optional) The version of the package. Documented below.
         * 
         * @return builder
         * 
         */
        public Builder version(FilterFilterCriteriaVulnerablePackageVersionArgs version) {
            return version(Output.of(version));
        }

        public FilterFilterCriteriaVulnerablePackageArgs build() {
            return $;
        }
    }

}
