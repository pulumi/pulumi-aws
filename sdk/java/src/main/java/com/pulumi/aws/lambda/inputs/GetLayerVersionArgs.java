// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lambda.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetLayerVersionArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetLayerVersionArgs Empty = new GetLayerVersionArgs();

    @Import(name="compatibleArchitecture")
    private @Nullable Output<String> compatibleArchitecture;

    public Optional<Output<String>> compatibleArchitecture() {
        return Optional.ofNullable(this.compatibleArchitecture);
    }

    @Import(name="compatibleRuntime")
    private @Nullable Output<String> compatibleRuntime;

    public Optional<Output<String>> compatibleRuntime() {
        return Optional.ofNullable(this.compatibleRuntime);
    }

    @Import(name="layerName", required=true)
    private Output<String> layerName;

    public Output<String> layerName() {
        return this.layerName;
    }

    @Import(name="version")
    private @Nullable Output<Integer> version;

    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    private GetLayerVersionArgs() {}

    private GetLayerVersionArgs(GetLayerVersionArgs $) {
        this.compatibleArchitecture = $.compatibleArchitecture;
        this.compatibleRuntime = $.compatibleRuntime;
        this.layerName = $.layerName;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLayerVersionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLayerVersionArgs $;

        public Builder() {
            $ = new GetLayerVersionArgs();
        }

        public Builder(GetLayerVersionArgs defaults) {
            $ = new GetLayerVersionArgs(Objects.requireNonNull(defaults));
        }

        public Builder compatibleArchitecture(@Nullable Output<String> compatibleArchitecture) {
            $.compatibleArchitecture = compatibleArchitecture;
            return this;
        }

        public Builder compatibleArchitecture(String compatibleArchitecture) {
            return compatibleArchitecture(Output.of(compatibleArchitecture));
        }

        public Builder compatibleRuntime(@Nullable Output<String> compatibleRuntime) {
            $.compatibleRuntime = compatibleRuntime;
            return this;
        }

        public Builder compatibleRuntime(String compatibleRuntime) {
            return compatibleRuntime(Output.of(compatibleRuntime));
        }

        public Builder layerName(Output<String> layerName) {
            $.layerName = layerName;
            return this;
        }

        public Builder layerName(String layerName) {
            return layerName(Output.of(layerName));
        }

        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public GetLayerVersionArgs build() {
            $.layerName = Objects.requireNonNull($.layerName, "expected parameter 'layerName' to be non-null");
            return $;
        }
    }

}
