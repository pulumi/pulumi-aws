// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.pipes.inputs;

import com.pulumi.aws.pipes.inputs.PipeSourceParametersActivemqBrokerParametersCredentialsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipeSourceParametersActivemqBrokerParametersArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipeSourceParametersActivemqBrokerParametersArgs Empty = new PipeSourceParametersActivemqBrokerParametersArgs();

    @Import(name="batchSize")
    private @Nullable Output<Integer> batchSize;

    public Optional<Output<Integer>> batchSize() {
        return Optional.ofNullable(this.batchSize);
    }

    @Import(name="credentials", required=true)
    private Output<PipeSourceParametersActivemqBrokerParametersCredentialsArgs> credentials;

    public Output<PipeSourceParametersActivemqBrokerParametersCredentialsArgs> credentials() {
        return this.credentials;
    }

    @Import(name="maximumBatchingWindowInSeconds")
    private @Nullable Output<Integer> maximumBatchingWindowInSeconds;

    public Optional<Output<Integer>> maximumBatchingWindowInSeconds() {
        return Optional.ofNullable(this.maximumBatchingWindowInSeconds);
    }

    @Import(name="queueName", required=true)
    private Output<String> queueName;

    public Output<String> queueName() {
        return this.queueName;
    }

    private PipeSourceParametersActivemqBrokerParametersArgs() {}

    private PipeSourceParametersActivemqBrokerParametersArgs(PipeSourceParametersActivemqBrokerParametersArgs $) {
        this.batchSize = $.batchSize;
        this.credentials = $.credentials;
        this.maximumBatchingWindowInSeconds = $.maximumBatchingWindowInSeconds;
        this.queueName = $.queueName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipeSourceParametersActivemqBrokerParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipeSourceParametersActivemqBrokerParametersArgs $;

        public Builder() {
            $ = new PipeSourceParametersActivemqBrokerParametersArgs();
        }

        public Builder(PipeSourceParametersActivemqBrokerParametersArgs defaults) {
            $ = new PipeSourceParametersActivemqBrokerParametersArgs(Objects.requireNonNull(defaults));
        }

        public Builder batchSize(@Nullable Output<Integer> batchSize) {
            $.batchSize = batchSize;
            return this;
        }

        public Builder batchSize(Integer batchSize) {
            return batchSize(Output.of(batchSize));
        }

        public Builder credentials(Output<PipeSourceParametersActivemqBrokerParametersCredentialsArgs> credentials) {
            $.credentials = credentials;
            return this;
        }

        public Builder credentials(PipeSourceParametersActivemqBrokerParametersCredentialsArgs credentials) {
            return credentials(Output.of(credentials));
        }

        public Builder maximumBatchingWindowInSeconds(@Nullable Output<Integer> maximumBatchingWindowInSeconds) {
            $.maximumBatchingWindowInSeconds = maximumBatchingWindowInSeconds;
            return this;
        }

        public Builder maximumBatchingWindowInSeconds(Integer maximumBatchingWindowInSeconds) {
            return maximumBatchingWindowInSeconds(Output.of(maximumBatchingWindowInSeconds));
        }

        public Builder queueName(Output<String> queueName) {
            $.queueName = queueName;
            return this;
        }

        public Builder queueName(String queueName) {
            return queueName(Output.of(queueName));
        }

        public PipeSourceParametersActivemqBrokerParametersArgs build() {
            if ($.credentials == null) {
                throw new MissingRequiredPropertyException("PipeSourceParametersActivemqBrokerParametersArgs", "credentials");
            }
            if ($.queueName == null) {
                throw new MissingRequiredPropertyException("PipeSourceParametersActivemqBrokerParametersArgs", "queueName");
            }
            return $;
        }
    }

}
