// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.efs.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMountTargetResult {
    private @Nullable String accessPointId;
    /**
     * @return The unique and consistent identifier of the Availability Zone (AZ) that the mount target resides in.
     * 
     */
    private @Nullable String availabilityZoneId;
    /**
     * @return The name of the Availability Zone (AZ) that the mount target resides in.
     * 
     */
    private @Nullable String availabilityZoneName;
    /**
     * @return DNS name for the EFS file system.
     * 
     */
    private @Nullable String dnsName;
    /**
     * @return Amazon Resource Name of the file system for which the mount target is intended.
     * 
     */
    private @Nullable String fileSystemArn;
    private @Nullable String fileSystemId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return Address at which the file system may be mounted via the mount target.
     * 
     */
    private @Nullable String ipAddress;
    /**
     * @return The DNS name for the given subnet/AZ per [documented convention](http://docs.aws.amazon.com/efs/latest/ug/mounting-fs-mount-cmd-dns-name.html).
     * 
     */
    private @Nullable String mountTargetDnsName;
    private @Nullable String mountTargetId;
    /**
     * @return The ID of the network interface that Amazon EFS created when it created the mount target.
     * 
     */
    private @Nullable String networkInterfaceId;
    /**
     * @return AWS account ID that owns the resource.
     * 
     */
    private @Nullable String ownerId;
    /**
     * @return List of VPC security group IDs attached to the mount target.
     * 
     */
    private @Nullable List<String> securityGroups;
    /**
     * @return ID of the mount target&#39;s subnet.
     * 
     */
    private @Nullable String subnetId;

    private GetMountTargetResult() {}
    public Optional<String> accessPointId() {
        return Optional.ofNullable(this.accessPointId);
    }
    /**
     * @return The unique and consistent identifier of the Availability Zone (AZ) that the mount target resides in.
     * 
     */
    public Optional<String> availabilityZoneId() {
        return Optional.ofNullable(this.availabilityZoneId);
    }
    /**
     * @return The name of the Availability Zone (AZ) that the mount target resides in.
     * 
     */
    public Optional<String> availabilityZoneName() {
        return Optional.ofNullable(this.availabilityZoneName);
    }
    /**
     * @return DNS name for the EFS file system.
     * 
     */
    public Optional<String> dnsName() {
        return Optional.ofNullable(this.dnsName);
    }
    /**
     * @return Amazon Resource Name of the file system for which the mount target is intended.
     * 
     */
    public Optional<String> fileSystemArn() {
        return Optional.ofNullable(this.fileSystemArn);
    }
    public Optional<String> fileSystemId() {
        return Optional.ofNullable(this.fileSystemId);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Address at which the file system may be mounted via the mount target.
     * 
     */
    public Optional<String> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }
    /**
     * @return The DNS name for the given subnet/AZ per [documented convention](http://docs.aws.amazon.com/efs/latest/ug/mounting-fs-mount-cmd-dns-name.html).
     * 
     */
    public Optional<String> mountTargetDnsName() {
        return Optional.ofNullable(this.mountTargetDnsName);
    }
    public Optional<String> mountTargetId() {
        return Optional.ofNullable(this.mountTargetId);
    }
    /**
     * @return The ID of the network interface that Amazon EFS created when it created the mount target.
     * 
     */
    public Optional<String> networkInterfaceId() {
        return Optional.ofNullable(this.networkInterfaceId);
    }
    /**
     * @return AWS account ID that owns the resource.
     * 
     */
    public Optional<String> ownerId() {
        return Optional.ofNullable(this.ownerId);
    }
    /**
     * @return List of VPC security group IDs attached to the mount target.
     * 
     */
    public List<String> securityGroups() {
        return this.securityGroups == null ? List.of() : this.securityGroups;
    }
    /**
     * @return ID of the mount target&#39;s subnet.
     * 
     */
    public Optional<String> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMountTargetResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accessPointId;
        private @Nullable String availabilityZoneId;
        private @Nullable String availabilityZoneName;
        private @Nullable String dnsName;
        private @Nullable String fileSystemArn;
        private @Nullable String fileSystemId;
        private @Nullable String id;
        private @Nullable String ipAddress;
        private @Nullable String mountTargetDnsName;
        private @Nullable String mountTargetId;
        private @Nullable String networkInterfaceId;
        private @Nullable String ownerId;
        private @Nullable List<String> securityGroups;
        private @Nullable String subnetId;
        public Builder() {}
        public Builder(GetMountTargetResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessPointId = defaults.accessPointId;
    	      this.availabilityZoneId = defaults.availabilityZoneId;
    	      this.availabilityZoneName = defaults.availabilityZoneName;
    	      this.dnsName = defaults.dnsName;
    	      this.fileSystemArn = defaults.fileSystemArn;
    	      this.fileSystemId = defaults.fileSystemId;
    	      this.id = defaults.id;
    	      this.ipAddress = defaults.ipAddress;
    	      this.mountTargetDnsName = defaults.mountTargetDnsName;
    	      this.mountTargetId = defaults.mountTargetId;
    	      this.networkInterfaceId = defaults.networkInterfaceId;
    	      this.ownerId = defaults.ownerId;
    	      this.securityGroups = defaults.securityGroups;
    	      this.subnetId = defaults.subnetId;
        }

        @CustomType.Setter
        public Builder accessPointId(@Nullable String accessPointId) {
            this.accessPointId = accessPointId;
            return this;
        }
        @CustomType.Setter
        public Builder availabilityZoneId(@Nullable String availabilityZoneId) {
            this.availabilityZoneId = availabilityZoneId;
            return this;
        }
        @CustomType.Setter
        public Builder availabilityZoneName(@Nullable String availabilityZoneName) {
            this.availabilityZoneName = availabilityZoneName;
            return this;
        }
        @CustomType.Setter
        public Builder dnsName(@Nullable String dnsName) {
            this.dnsName = dnsName;
            return this;
        }
        @CustomType.Setter
        public Builder fileSystemArn(@Nullable String fileSystemArn) {
            this.fileSystemArn = fileSystemArn;
            return this;
        }
        @CustomType.Setter
        public Builder fileSystemId(@Nullable String fileSystemId) {
            this.fileSystemId = fileSystemId;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipAddress(@Nullable String ipAddress) {
            this.ipAddress = ipAddress;
            return this;
        }
        @CustomType.Setter
        public Builder mountTargetDnsName(@Nullable String mountTargetDnsName) {
            this.mountTargetDnsName = mountTargetDnsName;
            return this;
        }
        @CustomType.Setter
        public Builder mountTargetId(@Nullable String mountTargetId) {
            this.mountTargetId = mountTargetId;
            return this;
        }
        @CustomType.Setter
        public Builder networkInterfaceId(@Nullable String networkInterfaceId) {
            this.networkInterfaceId = networkInterfaceId;
            return this;
        }
        @CustomType.Setter
        public Builder ownerId(@Nullable String ownerId) {
            this.ownerId = ownerId;
            return this;
        }
        @CustomType.Setter
        public Builder securityGroups(@Nullable List<String> securityGroups) {
            this.securityGroups = securityGroups;
            return this;
        }
        public Builder securityGroups(String... securityGroups) {
            return securityGroups(List.of(securityGroups));
        }
        @CustomType.Setter
        public Builder subnetId(@Nullable String subnetId) {
            this.subnetId = subnetId;
            return this;
        }
        public GetMountTargetResult build() {
            final var o = new GetMountTargetResult();
            o.accessPointId = accessPointId;
            o.availabilityZoneId = availabilityZoneId;
            o.availabilityZoneName = availabilityZoneName;
            o.dnsName = dnsName;
            o.fileSystemArn = fileSystemArn;
            o.fileSystemId = fileSystemId;
            o.id = id;
            o.ipAddress = ipAddress;
            o.mountTargetDnsName = mountTargetDnsName;
            o.mountTargetId = mountTargetId;
            o.networkInterfaceId = networkInterfaceId;
            o.ownerId = ownerId;
            o.securityGroups = securityGroups;
            o.subnetId = subnetId;
            return o;
        }
    }
}
