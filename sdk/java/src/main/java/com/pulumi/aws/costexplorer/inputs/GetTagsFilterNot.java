// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.costexplorer.inputs;

import com.pulumi.aws.costexplorer.inputs.GetTagsFilterNotCostCategory;
import com.pulumi.aws.costexplorer.inputs.GetTagsFilterNotDimension;
import com.pulumi.aws.costexplorer.inputs.GetTagsFilterNotTags;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTagsFilterNot extends com.pulumi.resources.InvokeArgs {

    public static final GetTagsFilterNot Empty = new GetTagsFilterNot();

    /**
     * Configuration block for the filter that&#39;s based on `CostCategory` values. See below.
     * 
     */
    @Import(name="costCategory")
    private @Nullable GetTagsFilterNotCostCategory costCategory;

    /**
     * @return Configuration block for the filter that&#39;s based on `CostCategory` values. See below.
     * 
     */
    public Optional<GetTagsFilterNotCostCategory> costCategory() {
        return Optional.ofNullable(this.costCategory);
    }

    /**
     * Configuration block for the specific `Dimension` to use for `Expression`. See below.
     * 
     */
    @Import(name="dimension")
    private @Nullable GetTagsFilterNotDimension dimension;

    /**
     * @return Configuration block for the specific `Dimension` to use for `Expression`. See below.
     * 
     */
    public Optional<GetTagsFilterNotDimension> dimension() {
        return Optional.ofNullable(this.dimension);
    }

    /**
     * Tags that match your request.
     * 
     */
    @Import(name="tags")
    private @Nullable GetTagsFilterNotTags tags;

    /**
     * @return Tags that match your request.
     * 
     */
    public Optional<GetTagsFilterNotTags> tags() {
        return Optional.ofNullable(this.tags);
    }

    private GetTagsFilterNot() {}

    private GetTagsFilterNot(GetTagsFilterNot $) {
        this.costCategory = $.costCategory;
        this.dimension = $.dimension;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTagsFilterNot defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTagsFilterNot $;

        public Builder() {
            $ = new GetTagsFilterNot();
        }

        public Builder(GetTagsFilterNot defaults) {
            $ = new GetTagsFilterNot(Objects.requireNonNull(defaults));
        }

        /**
         * @param costCategory Configuration block for the filter that&#39;s based on `CostCategory` values. See below.
         * 
         * @return builder
         * 
         */
        public Builder costCategory(@Nullable GetTagsFilterNotCostCategory costCategory) {
            $.costCategory = costCategory;
            return this;
        }

        /**
         * @param dimension Configuration block for the specific `Dimension` to use for `Expression`. See below.
         * 
         * @return builder
         * 
         */
        public Builder dimension(@Nullable GetTagsFilterNotDimension dimension) {
            $.dimension = dimension;
            return this;
        }

        /**
         * @param tags Tags that match your request.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable GetTagsFilterNotTags tags) {
            $.tags = tags;
            return this;
        }

        public GetTagsFilterNot build() {
            return $;
        }
    }

}
