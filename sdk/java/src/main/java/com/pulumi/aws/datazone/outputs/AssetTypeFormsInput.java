// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.datazone.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AssetTypeFormsInput {
    private String mapBlockKey;
    private @Nullable Boolean required;
    private String typeIdentifier;
    private String typeRevision;

    private AssetTypeFormsInput() {}
    public String mapBlockKey() {
        return this.mapBlockKey;
    }
    public Optional<Boolean> required() {
        return Optional.ofNullable(this.required);
    }
    public String typeIdentifier() {
        return this.typeIdentifier;
    }
    public String typeRevision() {
        return this.typeRevision;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AssetTypeFormsInput defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String mapBlockKey;
        private @Nullable Boolean required;
        private String typeIdentifier;
        private String typeRevision;
        public Builder() {}
        public Builder(AssetTypeFormsInput defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.mapBlockKey = defaults.mapBlockKey;
    	      this.required = defaults.required;
    	      this.typeIdentifier = defaults.typeIdentifier;
    	      this.typeRevision = defaults.typeRevision;
        }

        @CustomType.Setter
        public Builder mapBlockKey(String mapBlockKey) {
            if (mapBlockKey == null) {
              throw new MissingRequiredPropertyException("AssetTypeFormsInput", "mapBlockKey");
            }
            this.mapBlockKey = mapBlockKey;
            return this;
        }
        @CustomType.Setter
        public Builder required(@Nullable Boolean required) {

            this.required = required;
            return this;
        }
        @CustomType.Setter
        public Builder typeIdentifier(String typeIdentifier) {
            if (typeIdentifier == null) {
              throw new MissingRequiredPropertyException("AssetTypeFormsInput", "typeIdentifier");
            }
            this.typeIdentifier = typeIdentifier;
            return this;
        }
        @CustomType.Setter
        public Builder typeRevision(String typeRevision) {
            if (typeRevision == null) {
              throw new MissingRequiredPropertyException("AssetTypeFormsInput", "typeRevision");
            }
            this.typeRevision = typeRevision;
            return this;
        }
        public AssetTypeFormsInput build() {
            final var _resultValue = new AssetTypeFormsInput();
            _resultValue.mapBlockKey = mapBlockKey;
            _resultValue.required = required;
            _resultValue.typeIdentifier = typeIdentifier;
            _resultValue.typeRevision = typeRevision;
            return _resultValue;
        }
    }
}
