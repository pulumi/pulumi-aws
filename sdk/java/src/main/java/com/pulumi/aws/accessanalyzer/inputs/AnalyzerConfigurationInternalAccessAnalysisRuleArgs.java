// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.accessanalyzer.inputs;

import com.pulumi.aws.accessanalyzer.inputs.AnalyzerConfigurationInternalAccessAnalysisRuleInclusionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AnalyzerConfigurationInternalAccessAnalysisRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final AnalyzerConfigurationInternalAccessAnalysisRuleArgs Empty = new AnalyzerConfigurationInternalAccessAnalysisRuleArgs();

    /**
     * List of rules for the internal access analyzer containing criteria to include in analysis. Only resources that meet the rule criteria will generate findings. See `inclusion` Block for details.
     * 
     */
    @Import(name="inclusions")
    private @Nullable Output<List<AnalyzerConfigurationInternalAccessAnalysisRuleInclusionArgs>> inclusions;

    /**
     * @return List of rules for the internal access analyzer containing criteria to include in analysis. Only resources that meet the rule criteria will generate findings. See `inclusion` Block for details.
     * 
     */
    public Optional<Output<List<AnalyzerConfigurationInternalAccessAnalysisRuleInclusionArgs>>> inclusions() {
        return Optional.ofNullable(this.inclusions);
    }

    private AnalyzerConfigurationInternalAccessAnalysisRuleArgs() {}

    private AnalyzerConfigurationInternalAccessAnalysisRuleArgs(AnalyzerConfigurationInternalAccessAnalysisRuleArgs $) {
        this.inclusions = $.inclusions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AnalyzerConfigurationInternalAccessAnalysisRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AnalyzerConfigurationInternalAccessAnalysisRuleArgs $;

        public Builder() {
            $ = new AnalyzerConfigurationInternalAccessAnalysisRuleArgs();
        }

        public Builder(AnalyzerConfigurationInternalAccessAnalysisRuleArgs defaults) {
            $ = new AnalyzerConfigurationInternalAccessAnalysisRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param inclusions List of rules for the internal access analyzer containing criteria to include in analysis. Only resources that meet the rule criteria will generate findings. See `inclusion` Block for details.
         * 
         * @return builder
         * 
         */
        public Builder inclusions(@Nullable Output<List<AnalyzerConfigurationInternalAccessAnalysisRuleInclusionArgs>> inclusions) {
            $.inclusions = inclusions;
            return this;
        }

        /**
         * @param inclusions List of rules for the internal access analyzer containing criteria to include in analysis. Only resources that meet the rule criteria will generate findings. See `inclusion` Block for details.
         * 
         * @return builder
         * 
         */
        public Builder inclusions(List<AnalyzerConfigurationInternalAccessAnalysisRuleInclusionArgs> inclusions) {
            return inclusions(Output.of(inclusions));
        }

        /**
         * @param inclusions List of rules for the internal access analyzer containing criteria to include in analysis. Only resources that meet the rule criteria will generate findings. See `inclusion` Block for details.
         * 
         * @return builder
         * 
         */
        public Builder inclusions(AnalyzerConfigurationInternalAccessAnalysisRuleInclusionArgs... inclusions) {
            return inclusions(List.of(inclusions));
        }

        public AnalyzerConfigurationInternalAccessAnalysisRuleArgs build() {
            return $;
        }
    }

}
