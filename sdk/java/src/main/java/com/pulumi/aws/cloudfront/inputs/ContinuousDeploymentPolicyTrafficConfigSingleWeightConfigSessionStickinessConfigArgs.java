// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudfront.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;


public final class ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigArgs Empty = new ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigArgs();

    /**
     * The amount of time in seconds after which sessions will cease if no requests are received. Valid values are `300` – `3600` (5–60 minutes). The value must be less than or equal to `maximum_ttl`.
     * 
     */
    @Import(name="idleTtl", required=true)
    private Output<Integer> idleTtl;

    /**
     * @return The amount of time in seconds after which sessions will cease if no requests are received. Valid values are `300` – `3600` (5–60 minutes). The value must be less than or equal to `maximum_ttl`.
     * 
     */
    public Output<Integer> idleTtl() {
        return this.idleTtl;
    }

    /**
     * The maximum amount of time in seconds to consider requests from the viewer as being part of the same session. Valid values are `300` – `3600` (5–60 minutes). The value must be greater than or equal to `idle_ttl`.
     * 
     */
    @Import(name="maximumTtl", required=true)
    private Output<Integer> maximumTtl;

    /**
     * @return The maximum amount of time in seconds to consider requests from the viewer as being part of the same session. Valid values are `300` – `3600` (5–60 minutes). The value must be greater than or equal to `idle_ttl`.
     * 
     */
    public Output<Integer> maximumTtl() {
        return this.maximumTtl;
    }

    private ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigArgs() {}

    private ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigArgs(ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigArgs $) {
        this.idleTtl = $.idleTtl;
        this.maximumTtl = $.maximumTtl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigArgs $;

        public Builder() {
            $ = new ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigArgs();
        }

        public Builder(ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigArgs defaults) {
            $ = new ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param idleTtl The amount of time in seconds after which sessions will cease if no requests are received. Valid values are `300` – `3600` (5–60 minutes). The value must be less than or equal to `maximum_ttl`.
         * 
         * @return builder
         * 
         */
        public Builder idleTtl(Output<Integer> idleTtl) {
            $.idleTtl = idleTtl;
            return this;
        }

        /**
         * @param idleTtl The amount of time in seconds after which sessions will cease if no requests are received. Valid values are `300` – `3600` (5–60 minutes). The value must be less than or equal to `maximum_ttl`.
         * 
         * @return builder
         * 
         */
        public Builder idleTtl(Integer idleTtl) {
            return idleTtl(Output.of(idleTtl));
        }

        /**
         * @param maximumTtl The maximum amount of time in seconds to consider requests from the viewer as being part of the same session. Valid values are `300` – `3600` (5–60 minutes). The value must be greater than or equal to `idle_ttl`.
         * 
         * @return builder
         * 
         */
        public Builder maximumTtl(Output<Integer> maximumTtl) {
            $.maximumTtl = maximumTtl;
            return this;
        }

        /**
         * @param maximumTtl The maximum amount of time in seconds to consider requests from the viewer as being part of the same session. Valid values are `300` – `3600` (5–60 minutes). The value must be greater than or equal to `idle_ttl`.
         * 
         * @return builder
         * 
         */
        public Builder maximumTtl(Integer maximumTtl) {
            return maximumTtl(Output.of(maximumTtl));
        }

        public ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigArgs build() {
            if ($.idleTtl == null) {
                throw new MissingRequiredPropertyException("ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigArgs", "idleTtl");
            }
            if ($.maximumTtl == null) {
                throw new MissingRequiredPropertyException("ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigArgs", "maximumTtl");
            }
            return $;
        }
    }

}
