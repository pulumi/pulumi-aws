// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kendra;

import com.pulumi.aws.kendra.inputs.IndexCapacityUnitsArgs;
import com.pulumi.aws.kendra.inputs.IndexDocumentMetadataConfigurationUpdateArgs;
import com.pulumi.aws.kendra.inputs.IndexServerSideEncryptionConfigurationArgs;
import com.pulumi.aws.kendra.inputs.IndexUserGroupResolutionConfigurationArgs;
import com.pulumi.aws.kendra.inputs.IndexUserTokenConfigurationsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IndexArgs extends com.pulumi.resources.ResourceArgs {

    public static final IndexArgs Empty = new IndexArgs();

    @Import(name="capacityUnits")
    private @Nullable Output<IndexCapacityUnitsArgs> capacityUnits;

    public Optional<Output<IndexCapacityUnitsArgs>> capacityUnits() {
        return Optional.ofNullable(this.capacityUnits);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="documentMetadataConfigurationUpdates")
    private @Nullable Output<List<IndexDocumentMetadataConfigurationUpdateArgs>> documentMetadataConfigurationUpdates;

    public Optional<Output<List<IndexDocumentMetadataConfigurationUpdateArgs>>> documentMetadataConfigurationUpdates() {
        return Optional.ofNullable(this.documentMetadataConfigurationUpdates);
    }

    @Import(name="edition")
    private @Nullable Output<String> edition;

    public Optional<Output<String>> edition() {
        return Optional.ofNullable(this.edition);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="roleArn", required=true)
    private Output<String> roleArn;

    public Output<String> roleArn() {
        return this.roleArn;
    }

    @Import(name="serverSideEncryptionConfiguration")
    private @Nullable Output<IndexServerSideEncryptionConfigurationArgs> serverSideEncryptionConfiguration;

    public Optional<Output<IndexServerSideEncryptionConfigurationArgs>> serverSideEncryptionConfiguration() {
        return Optional.ofNullable(this.serverSideEncryptionConfiguration);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="userContextPolicy")
    private @Nullable Output<String> userContextPolicy;

    public Optional<Output<String>> userContextPolicy() {
        return Optional.ofNullable(this.userContextPolicy);
    }

    @Import(name="userGroupResolutionConfiguration")
    private @Nullable Output<IndexUserGroupResolutionConfigurationArgs> userGroupResolutionConfiguration;

    public Optional<Output<IndexUserGroupResolutionConfigurationArgs>> userGroupResolutionConfiguration() {
        return Optional.ofNullable(this.userGroupResolutionConfiguration);
    }

    @Import(name="userTokenConfigurations")
    private @Nullable Output<IndexUserTokenConfigurationsArgs> userTokenConfigurations;

    public Optional<Output<IndexUserTokenConfigurationsArgs>> userTokenConfigurations() {
        return Optional.ofNullable(this.userTokenConfigurations);
    }

    private IndexArgs() {}

    private IndexArgs(IndexArgs $) {
        this.capacityUnits = $.capacityUnits;
        this.description = $.description;
        this.documentMetadataConfigurationUpdates = $.documentMetadataConfigurationUpdates;
        this.edition = $.edition;
        this.name = $.name;
        this.roleArn = $.roleArn;
        this.serverSideEncryptionConfiguration = $.serverSideEncryptionConfiguration;
        this.tags = $.tags;
        this.userContextPolicy = $.userContextPolicy;
        this.userGroupResolutionConfiguration = $.userGroupResolutionConfiguration;
        this.userTokenConfigurations = $.userTokenConfigurations;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IndexArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IndexArgs $;

        public Builder() {
            $ = new IndexArgs();
        }

        public Builder(IndexArgs defaults) {
            $ = new IndexArgs(Objects.requireNonNull(defaults));
        }

        public Builder capacityUnits(@Nullable Output<IndexCapacityUnitsArgs> capacityUnits) {
            $.capacityUnits = capacityUnits;
            return this;
        }

        public Builder capacityUnits(IndexCapacityUnitsArgs capacityUnits) {
            return capacityUnits(Output.of(capacityUnits));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder documentMetadataConfigurationUpdates(@Nullable Output<List<IndexDocumentMetadataConfigurationUpdateArgs>> documentMetadataConfigurationUpdates) {
            $.documentMetadataConfigurationUpdates = documentMetadataConfigurationUpdates;
            return this;
        }

        public Builder documentMetadataConfigurationUpdates(List<IndexDocumentMetadataConfigurationUpdateArgs> documentMetadataConfigurationUpdates) {
            return documentMetadataConfigurationUpdates(Output.of(documentMetadataConfigurationUpdates));
        }

        public Builder documentMetadataConfigurationUpdates(IndexDocumentMetadataConfigurationUpdateArgs... documentMetadataConfigurationUpdates) {
            return documentMetadataConfigurationUpdates(List.of(documentMetadataConfigurationUpdates));
        }

        public Builder edition(@Nullable Output<String> edition) {
            $.edition = edition;
            return this;
        }

        public Builder edition(String edition) {
            return edition(Output.of(edition));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder roleArn(Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public Builder serverSideEncryptionConfiguration(@Nullable Output<IndexServerSideEncryptionConfigurationArgs> serverSideEncryptionConfiguration) {
            $.serverSideEncryptionConfiguration = serverSideEncryptionConfiguration;
            return this;
        }

        public Builder serverSideEncryptionConfiguration(IndexServerSideEncryptionConfigurationArgs serverSideEncryptionConfiguration) {
            return serverSideEncryptionConfiguration(Output.of(serverSideEncryptionConfiguration));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder userContextPolicy(@Nullable Output<String> userContextPolicy) {
            $.userContextPolicy = userContextPolicy;
            return this;
        }

        public Builder userContextPolicy(String userContextPolicy) {
            return userContextPolicy(Output.of(userContextPolicy));
        }

        public Builder userGroupResolutionConfiguration(@Nullable Output<IndexUserGroupResolutionConfigurationArgs> userGroupResolutionConfiguration) {
            $.userGroupResolutionConfiguration = userGroupResolutionConfiguration;
            return this;
        }

        public Builder userGroupResolutionConfiguration(IndexUserGroupResolutionConfigurationArgs userGroupResolutionConfiguration) {
            return userGroupResolutionConfiguration(Output.of(userGroupResolutionConfiguration));
        }

        public Builder userTokenConfigurations(@Nullable Output<IndexUserTokenConfigurationsArgs> userTokenConfigurations) {
            $.userTokenConfigurations = userTokenConfigurations;
            return this;
        }

        public Builder userTokenConfigurations(IndexUserTokenConfigurationsArgs userTokenConfigurations) {
            return userTokenConfigurations(Output.of(userTokenConfigurations));
        }

        public IndexArgs build() {
            $.roleArn = Objects.requireNonNull($.roleArn, "expected parameter 'roleArn' to be non-null");
            return $;
        }
    }

}
