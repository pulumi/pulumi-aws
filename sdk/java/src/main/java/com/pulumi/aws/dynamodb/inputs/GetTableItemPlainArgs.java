// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dynamodb.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTableItemPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTableItemPlainArgs Empty = new GetTableItemPlainArgs();

    @Import(name="expressionAttributeNames")
    private @Nullable Map<String,String> expressionAttributeNames;

    public Optional<Map<String,String>> expressionAttributeNames() {
        return Optional.ofNullable(this.expressionAttributeNames);
    }

    @Import(name="key", required=true)
    private String key;

    public String key() {
        return this.key;
    }

    @Import(name="projectionExpression")
    private @Nullable String projectionExpression;

    public Optional<String> projectionExpression() {
        return Optional.ofNullable(this.projectionExpression);
    }

    @Import(name="tableName", required=true)
    private String tableName;

    public String tableName() {
        return this.tableName;
    }

    private GetTableItemPlainArgs() {}

    private GetTableItemPlainArgs(GetTableItemPlainArgs $) {
        this.expressionAttributeNames = $.expressionAttributeNames;
        this.key = $.key;
        this.projectionExpression = $.projectionExpression;
        this.tableName = $.tableName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTableItemPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTableItemPlainArgs $;

        public Builder() {
            $ = new GetTableItemPlainArgs();
        }

        public Builder(GetTableItemPlainArgs defaults) {
            $ = new GetTableItemPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder expressionAttributeNames(@Nullable Map<String,String> expressionAttributeNames) {
            $.expressionAttributeNames = expressionAttributeNames;
            return this;
        }

        public Builder key(String key) {
            $.key = key;
            return this;
        }

        public Builder projectionExpression(@Nullable String projectionExpression) {
            $.projectionExpression = projectionExpression;
            return this;
        }

        public Builder tableName(String tableName) {
            $.tableName = tableName;
            return this;
        }

        public GetTableItemPlainArgs build() {
            $.key = Objects.requireNonNull($.key, "expected parameter 'key' to be non-null");
            $.tableName = Objects.requireNonNull($.tableName, "expected parameter 'tableName' to be non-null");
            return $;
        }
    }

}
