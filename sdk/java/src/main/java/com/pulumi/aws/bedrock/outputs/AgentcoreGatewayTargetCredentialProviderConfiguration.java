// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.outputs;

import com.pulumi.aws.bedrock.outputs.AgentcoreGatewayTargetCredentialProviderConfigurationApiKey;
import com.pulumi.aws.bedrock.outputs.AgentcoreGatewayTargetCredentialProviderConfigurationGatewayIamRole;
import com.pulumi.aws.bedrock.outputs.AgentcoreGatewayTargetCredentialProviderConfigurationOauth;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AgentcoreGatewayTargetCredentialProviderConfiguration {
    /**
     * @return API key-based authentication configuration. See `apiKey` below.
     * 
     */
    private @Nullable AgentcoreGatewayTargetCredentialProviderConfigurationApiKey apiKey;
    /**
     * @return Use the gateway&#39;s IAM role for authentication. This is an empty configuration block.
     * 
     */
    private @Nullable AgentcoreGatewayTargetCredentialProviderConfigurationGatewayIamRole gatewayIamRole;
    /**
     * @return OAuth-based authentication configuration. See `oauth` below.
     * 
     */
    private @Nullable AgentcoreGatewayTargetCredentialProviderConfigurationOauth oauth;

    private AgentcoreGatewayTargetCredentialProviderConfiguration() {}
    /**
     * @return API key-based authentication configuration. See `apiKey` below.
     * 
     */
    public Optional<AgentcoreGatewayTargetCredentialProviderConfigurationApiKey> apiKey() {
        return Optional.ofNullable(this.apiKey);
    }
    /**
     * @return Use the gateway&#39;s IAM role for authentication. This is an empty configuration block.
     * 
     */
    public Optional<AgentcoreGatewayTargetCredentialProviderConfigurationGatewayIamRole> gatewayIamRole() {
        return Optional.ofNullable(this.gatewayIamRole);
    }
    /**
     * @return OAuth-based authentication configuration. See `oauth` below.
     * 
     */
    public Optional<AgentcoreGatewayTargetCredentialProviderConfigurationOauth> oauth() {
        return Optional.ofNullable(this.oauth);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AgentcoreGatewayTargetCredentialProviderConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable AgentcoreGatewayTargetCredentialProviderConfigurationApiKey apiKey;
        private @Nullable AgentcoreGatewayTargetCredentialProviderConfigurationGatewayIamRole gatewayIamRole;
        private @Nullable AgentcoreGatewayTargetCredentialProviderConfigurationOauth oauth;
        public Builder() {}
        public Builder(AgentcoreGatewayTargetCredentialProviderConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiKey = defaults.apiKey;
    	      this.gatewayIamRole = defaults.gatewayIamRole;
    	      this.oauth = defaults.oauth;
        }

        @CustomType.Setter
        public Builder apiKey(@Nullable AgentcoreGatewayTargetCredentialProviderConfigurationApiKey apiKey) {

            this.apiKey = apiKey;
            return this;
        }
        @CustomType.Setter
        public Builder gatewayIamRole(@Nullable AgentcoreGatewayTargetCredentialProviderConfigurationGatewayIamRole gatewayIamRole) {

            this.gatewayIamRole = gatewayIamRole;
            return this;
        }
        @CustomType.Setter
        public Builder oauth(@Nullable AgentcoreGatewayTargetCredentialProviderConfigurationOauth oauth) {

            this.oauth = oauth;
            return this;
        }
        public AgentcoreGatewayTargetCredentialProviderConfiguration build() {
            final var _resultValue = new AgentcoreGatewayTargetCredentialProviderConfiguration();
            _resultValue.apiKey = apiKey;
            _resultValue.gatewayIamRole = gatewayIamRole;
            _resultValue.oauth = oauth;
            return _resultValue;
        }
    }
}
