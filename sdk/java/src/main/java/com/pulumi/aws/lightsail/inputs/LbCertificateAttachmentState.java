// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lightsail.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LbCertificateAttachmentState extends com.pulumi.resources.ResourceArgs {

    public static final LbCertificateAttachmentState Empty = new LbCertificateAttachmentState();

    /**
     * The name of your SSL/TLS certificate.
     * 
     */
    @Import(name="certificateName")
    private @Nullable Output<String> certificateName;

    /**
     * @return The name of your SSL/TLS certificate.
     * 
     */
    public Optional<Output<String>> certificateName() {
        return Optional.ofNullable(this.certificateName);
    }

    /**
     * The name of the load balancer to which you want to associate the SSL/TLS certificate.
     * 
     */
    @Import(name="lbName")
    private @Nullable Output<String> lbName;

    /**
     * @return The name of the load balancer to which you want to associate the SSL/TLS certificate.
     * 
     */
    public Optional<Output<String>> lbName() {
        return Optional.ofNullable(this.lbName);
    }

    private LbCertificateAttachmentState() {}

    private LbCertificateAttachmentState(LbCertificateAttachmentState $) {
        this.certificateName = $.certificateName;
        this.lbName = $.lbName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LbCertificateAttachmentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LbCertificateAttachmentState $;

        public Builder() {
            $ = new LbCertificateAttachmentState();
        }

        public Builder(LbCertificateAttachmentState defaults) {
            $ = new LbCertificateAttachmentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificateName The name of your SSL/TLS certificate.
         * 
         * @return builder
         * 
         */
        public Builder certificateName(@Nullable Output<String> certificateName) {
            $.certificateName = certificateName;
            return this;
        }

        /**
         * @param certificateName The name of your SSL/TLS certificate.
         * 
         * @return builder
         * 
         */
        public Builder certificateName(String certificateName) {
            return certificateName(Output.of(certificateName));
        }

        /**
         * @param lbName The name of the load balancer to which you want to associate the SSL/TLS certificate.
         * 
         * @return builder
         * 
         */
        public Builder lbName(@Nullable Output<String> lbName) {
            $.lbName = lbName;
            return this;
        }

        /**
         * @param lbName The name of the load balancer to which you want to associate the SSL/TLS certificate.
         * 
         * @return builder
         * 
         */
        public Builder lbName(String lbName) {
            return lbName(Output.of(lbName));
        }

        public LbCertificateAttachmentState build() {
            return $;
        }
    }

}
