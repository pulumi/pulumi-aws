// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.vpclattice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ListenerRuleMatchHttpMatchHeaderMatchMatchArgs extends com.pulumi.resources.ResourceArgs {

    public static final ListenerRuleMatchHttpMatchHeaderMatchMatchArgs Empty = new ListenerRuleMatchHttpMatchHeaderMatchMatchArgs();

    /**
     * Specifies a contains type match.
     * 
     */
    @Import(name="contains")
    private @Nullable Output<String> contains;

    /**
     * @return Specifies a contains type match.
     * 
     */
    public Optional<Output<String>> contains() {
        return Optional.ofNullable(this.contains);
    }

    /**
     * Specifies an exact type match.
     * 
     */
    @Import(name="exact")
    private @Nullable Output<String> exact;

    /**
     * @return Specifies an exact type match.
     * 
     */
    public Optional<Output<String>> exact() {
        return Optional.ofNullable(this.exact);
    }

    /**
     * Specifies a prefix type match. Matches the value with the prefix.
     * 
     */
    @Import(name="prefix")
    private @Nullable Output<String> prefix;

    /**
     * @return Specifies a prefix type match. Matches the value with the prefix.
     * 
     */
    public Optional<Output<String>> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    private ListenerRuleMatchHttpMatchHeaderMatchMatchArgs() {}

    private ListenerRuleMatchHttpMatchHeaderMatchMatchArgs(ListenerRuleMatchHttpMatchHeaderMatchMatchArgs $) {
        this.contains = $.contains;
        this.exact = $.exact;
        this.prefix = $.prefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ListenerRuleMatchHttpMatchHeaderMatchMatchArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ListenerRuleMatchHttpMatchHeaderMatchMatchArgs $;

        public Builder() {
            $ = new ListenerRuleMatchHttpMatchHeaderMatchMatchArgs();
        }

        public Builder(ListenerRuleMatchHttpMatchHeaderMatchMatchArgs defaults) {
            $ = new ListenerRuleMatchHttpMatchHeaderMatchMatchArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param contains Specifies a contains type match.
         * 
         * @return builder
         * 
         */
        public Builder contains(@Nullable Output<String> contains) {
            $.contains = contains;
            return this;
        }

        /**
         * @param contains Specifies a contains type match.
         * 
         * @return builder
         * 
         */
        public Builder contains(String contains) {
            return contains(Output.of(contains));
        }

        /**
         * @param exact Specifies an exact type match.
         * 
         * @return builder
         * 
         */
        public Builder exact(@Nullable Output<String> exact) {
            $.exact = exact;
            return this;
        }

        /**
         * @param exact Specifies an exact type match.
         * 
         * @return builder
         * 
         */
        public Builder exact(String exact) {
            return exact(Output.of(exact));
        }

        /**
         * @param prefix Specifies a prefix type match. Matches the value with the prefix.
         * 
         * @return builder
         * 
         */
        public Builder prefix(@Nullable Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        /**
         * @param prefix Specifies a prefix type match. Matches the value with the prefix.
         * 
         * @return builder
         * 
         */
        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        public ListenerRuleMatchHttpMatchHeaderMatchMatchArgs build() {
            return $;
        }
    }

}
