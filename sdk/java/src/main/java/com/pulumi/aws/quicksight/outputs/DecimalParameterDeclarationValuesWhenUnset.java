// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DecimalParameterDeclarationValuesWhenUnset {
    private @Nullable Double customValue;
    private @Nullable String valueWhenUnsetOption;

    private DecimalParameterDeclarationValuesWhenUnset() {}
    public Optional<Double> customValue() {
        return Optional.ofNullable(this.customValue);
    }
    public Optional<String> valueWhenUnsetOption() {
        return Optional.ofNullable(this.valueWhenUnsetOption);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DecimalParameterDeclarationValuesWhenUnset defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Double customValue;
        private @Nullable String valueWhenUnsetOption;
        public Builder() {}
        public Builder(DecimalParameterDeclarationValuesWhenUnset defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customValue = defaults.customValue;
    	      this.valueWhenUnsetOption = defaults.valueWhenUnsetOption;
        }

        @CustomType.Setter
        public Builder customValue(@Nullable Double customValue) {

            this.customValue = customValue;
            return this;
        }
        @CustomType.Setter
        public Builder valueWhenUnsetOption(@Nullable String valueWhenUnsetOption) {

            this.valueWhenUnsetOption = valueWhenUnsetOption;
            return this;
        }
        public DecimalParameterDeclarationValuesWhenUnset build() {
            final var _resultValue = new DecimalParameterDeclarationValuesWhenUnset();
            _resultValue.customValue = customValue;
            _resultValue.valueWhenUnsetOption = valueWhenUnsetOption;
            return _resultValue;
        }
    }
}
