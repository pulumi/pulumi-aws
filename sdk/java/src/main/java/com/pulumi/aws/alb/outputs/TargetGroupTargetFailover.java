// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.alb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class TargetGroupTargetFailover {
    /**
     * @return Indicates how the GWLB handles existing flows when a target is deregistered. Possible values are `rebalance` and `no_rebalance`. Must match the attribute value set for `on_unhealthy`. Default: `no_rebalance`.
     * 
     */
    private String onDeregistration;
    /**
     * @return Indicates how the GWLB handles existing flows when a target is unhealthy. Possible values are `rebalance` and `no_rebalance`. Must match the attribute value set for `on_deregistration`. Default: `no_rebalance`.
     * 
     */
    private String onUnhealthy;

    private TargetGroupTargetFailover() {}
    /**
     * @return Indicates how the GWLB handles existing flows when a target is deregistered. Possible values are `rebalance` and `no_rebalance`. Must match the attribute value set for `on_unhealthy`. Default: `no_rebalance`.
     * 
     */
    public String onDeregistration() {
        return this.onDeregistration;
    }
    /**
     * @return Indicates how the GWLB handles existing flows when a target is unhealthy. Possible values are `rebalance` and `no_rebalance`. Must match the attribute value set for `on_deregistration`. Default: `no_rebalance`.
     * 
     */
    public String onUnhealthy() {
        return this.onUnhealthy;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TargetGroupTargetFailover defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String onDeregistration;
        private String onUnhealthy;
        public Builder() {}
        public Builder(TargetGroupTargetFailover defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.onDeregistration = defaults.onDeregistration;
    	      this.onUnhealthy = defaults.onUnhealthy;
        }

        @CustomType.Setter
        public Builder onDeregistration(String onDeregistration) {
            if (onDeregistration == null) {
              throw new MissingRequiredPropertyException("TargetGroupTargetFailover", "onDeregistration");
            }
            this.onDeregistration = onDeregistration;
            return this;
        }
        @CustomType.Setter
        public Builder onUnhealthy(String onUnhealthy) {
            if (onUnhealthy == null) {
              throw new MissingRequiredPropertyException("TargetGroupTargetFailover", "onUnhealthy");
            }
            this.onUnhealthy = onUnhealthy;
            return this;
        }
        public TargetGroupTargetFailover build() {
            final var _resultValue = new TargetGroupTargetFailover();
            _resultValue.onDeregistration = onDeregistration;
            _resultValue.onUnhealthy = onUnhealthy;
            return _resultValue;
        }
    }
}
