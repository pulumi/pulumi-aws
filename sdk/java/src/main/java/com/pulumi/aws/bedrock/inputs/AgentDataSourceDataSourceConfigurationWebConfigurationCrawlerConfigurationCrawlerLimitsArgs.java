// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfigurationCrawlerLimitsArgs extends com.pulumi.resources.ResourceArgs {

    public static final AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfigurationCrawlerLimitsArgs Empty = new AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfigurationCrawlerLimitsArgs();

    /**
     * Max number of web pages crawled from your source URLs, up to 25,000 pages.
     * 
     */
    @Import(name="maxPages")
    private @Nullable Output<Integer> maxPages;

    /**
     * @return Max number of web pages crawled from your source URLs, up to 25,000 pages.
     * 
     */
    public Optional<Output<Integer>> maxPages() {
        return Optional.ofNullable(this.maxPages);
    }

    /**
     * Max rate at which pages are crawled, up to 300 per minute per host.
     * 
     */
    @Import(name="rateLimit")
    private @Nullable Output<Integer> rateLimit;

    /**
     * @return Max rate at which pages are crawled, up to 300 per minute per host.
     * 
     */
    public Optional<Output<Integer>> rateLimit() {
        return Optional.ofNullable(this.rateLimit);
    }

    private AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfigurationCrawlerLimitsArgs() {}

    private AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfigurationCrawlerLimitsArgs(AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfigurationCrawlerLimitsArgs $) {
        this.maxPages = $.maxPages;
        this.rateLimit = $.rateLimit;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfigurationCrawlerLimitsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfigurationCrawlerLimitsArgs $;

        public Builder() {
            $ = new AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfigurationCrawlerLimitsArgs();
        }

        public Builder(AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfigurationCrawlerLimitsArgs defaults) {
            $ = new AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfigurationCrawlerLimitsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxPages Max number of web pages crawled from your source URLs, up to 25,000 pages.
         * 
         * @return builder
         * 
         */
        public Builder maxPages(@Nullable Output<Integer> maxPages) {
            $.maxPages = maxPages;
            return this;
        }

        /**
         * @param maxPages Max number of web pages crawled from your source URLs, up to 25,000 pages.
         * 
         * @return builder
         * 
         */
        public Builder maxPages(Integer maxPages) {
            return maxPages(Output.of(maxPages));
        }

        /**
         * @param rateLimit Max rate at which pages are crawled, up to 300 per minute per host.
         * 
         * @return builder
         * 
         */
        public Builder rateLimit(@Nullable Output<Integer> rateLimit) {
            $.rateLimit = rateLimit;
            return this;
        }

        /**
         * @param rateLimit Max rate at which pages are crawled, up to 300 per minute per host.
         * 
         * @return builder
         * 
         */
        public Builder rateLimit(Integer rateLimit) {
            return rateLimit(Output.of(rateLimit));
        }

        public AgentDataSourceDataSourceConfigurationWebConfigurationCrawlerConfigurationCrawlerLimitsArgs build() {
            return $;
        }
    }

}
