// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.alb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetLoadBalancerSubnetMapping {
    private String allocationId;
    private String ipv6Address;
    private String outpostId;
    private String privateIpv4Address;
    private String subnetId;

    private GetLoadBalancerSubnetMapping() {}
    public String allocationId() {
        return this.allocationId;
    }
    public String ipv6Address() {
        return this.ipv6Address;
    }
    public String outpostId() {
        return this.outpostId;
    }
    public String privateIpv4Address() {
        return this.privateIpv4Address;
    }
    public String subnetId() {
        return this.subnetId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLoadBalancerSubnetMapping defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String allocationId;
        private String ipv6Address;
        private String outpostId;
        private String privateIpv4Address;
        private String subnetId;
        public Builder() {}
        public Builder(GetLoadBalancerSubnetMapping defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allocationId = defaults.allocationId;
    	      this.ipv6Address = defaults.ipv6Address;
    	      this.outpostId = defaults.outpostId;
    	      this.privateIpv4Address = defaults.privateIpv4Address;
    	      this.subnetId = defaults.subnetId;
        }

        @CustomType.Setter
        public Builder allocationId(String allocationId) {
            if (allocationId == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerSubnetMapping", "allocationId");
            }
            this.allocationId = allocationId;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6Address(String ipv6Address) {
            if (ipv6Address == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerSubnetMapping", "ipv6Address");
            }
            this.ipv6Address = ipv6Address;
            return this;
        }
        @CustomType.Setter
        public Builder outpostId(String outpostId) {
            if (outpostId == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerSubnetMapping", "outpostId");
            }
            this.outpostId = outpostId;
            return this;
        }
        @CustomType.Setter
        public Builder privateIpv4Address(String privateIpv4Address) {
            if (privateIpv4Address == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerSubnetMapping", "privateIpv4Address");
            }
            this.privateIpv4Address = privateIpv4Address;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            if (subnetId == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerSubnetMapping", "subnetId");
            }
            this.subnetId = subnetId;
            return this;
        }
        public GetLoadBalancerSubnetMapping build() {
            final var _resultValue = new GetLoadBalancerSubnetMapping();
            _resultValue.allocationId = allocationId;
            _resultValue.ipv6Address = ipv6Address;
            _resultValue.outpostId = outpostId;
            _resultValue.privateIpv4Address = privateIpv4Address;
            _resultValue.subnetId = subnetId;
            return _resultValue;
        }
    }
}
