// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.GetDataSetColumnGroup;
import com.pulumi.aws.quicksight.outputs.GetDataSetColumnLevelPermissionRule;
import com.pulumi.aws.quicksight.outputs.GetDataSetDataSetUsageConfiguration;
import com.pulumi.aws.quicksight.outputs.GetDataSetFieldFolder;
import com.pulumi.aws.quicksight.outputs.GetDataSetLogicalTableMap;
import com.pulumi.aws.quicksight.outputs.GetDataSetPermission;
import com.pulumi.aws.quicksight.outputs.GetDataSetPhysicalTableMap;
import com.pulumi.aws.quicksight.outputs.GetDataSetRowLevelPermissionDataSet;
import com.pulumi.aws.quicksight.outputs.GetDataSetRowLevelPermissionTagConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDataSetResult {
    private @Nullable String arn;
    private @Nullable String awsAccountId;
    private @Nullable List<GetDataSetColumnGroup> columnGroups;
    private @Nullable List<GetDataSetColumnLevelPermissionRule> columnLevelPermissionRules;
    private String dataSetId;
    private @Nullable List<GetDataSetDataSetUsageConfiguration> dataSetUsageConfigurations;
    private @Nullable List<GetDataSetFieldFolder> fieldFolders;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private @Nullable String importMode;
    private @Nullable List<GetDataSetLogicalTableMap> logicalTableMaps;
    private @Nullable String name;
    private @Nullable List<GetDataSetPermission> permissions;
    private @Nullable List<GetDataSetPhysicalTableMap> physicalTableMaps;
    private @Nullable List<GetDataSetRowLevelPermissionDataSet> rowLevelPermissionDataSets;
    private @Nullable List<GetDataSetRowLevelPermissionTagConfiguration> rowLevelPermissionTagConfigurations;
    private @Nullable Map<String,String> tags;
    /**
     * @deprecated
     * this attribute has been deprecated
     * 
     */
    @Deprecated /* this attribute has been deprecated */
    private @Nullable Map<String,String> tagsAll;

    private GetDataSetResult() {}
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    public Optional<String> awsAccountId() {
        return Optional.ofNullable(this.awsAccountId);
    }
    public List<GetDataSetColumnGroup> columnGroups() {
        return this.columnGroups == null ? List.of() : this.columnGroups;
    }
    public List<GetDataSetColumnLevelPermissionRule> columnLevelPermissionRules() {
        return this.columnLevelPermissionRules == null ? List.of() : this.columnLevelPermissionRules;
    }
    public String dataSetId() {
        return this.dataSetId;
    }
    public List<GetDataSetDataSetUsageConfiguration> dataSetUsageConfigurations() {
        return this.dataSetUsageConfigurations == null ? List.of() : this.dataSetUsageConfigurations;
    }
    public List<GetDataSetFieldFolder> fieldFolders() {
        return this.fieldFolders == null ? List.of() : this.fieldFolders;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<String> importMode() {
        return Optional.ofNullable(this.importMode);
    }
    public List<GetDataSetLogicalTableMap> logicalTableMaps() {
        return this.logicalTableMaps == null ? List.of() : this.logicalTableMaps;
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public List<GetDataSetPermission> permissions() {
        return this.permissions == null ? List.of() : this.permissions;
    }
    public List<GetDataSetPhysicalTableMap> physicalTableMaps() {
        return this.physicalTableMaps == null ? List.of() : this.physicalTableMaps;
    }
    public List<GetDataSetRowLevelPermissionDataSet> rowLevelPermissionDataSets() {
        return this.rowLevelPermissionDataSets == null ? List.of() : this.rowLevelPermissionDataSets;
    }
    public List<GetDataSetRowLevelPermissionTagConfiguration> rowLevelPermissionTagConfigurations() {
        return this.rowLevelPermissionTagConfigurations == null ? List.of() : this.rowLevelPermissionTagConfigurations;
    }
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @deprecated
     * this attribute has been deprecated
     * 
     */
    @Deprecated /* this attribute has been deprecated */
    public Map<String,String> tagsAll() {
        return this.tagsAll == null ? Map.of() : this.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDataSetResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String awsAccountId;
        private @Nullable List<GetDataSetColumnGroup> columnGroups;
        private @Nullable List<GetDataSetColumnLevelPermissionRule> columnLevelPermissionRules;
        private String dataSetId;
        private @Nullable List<GetDataSetDataSetUsageConfiguration> dataSetUsageConfigurations;
        private @Nullable List<GetDataSetFieldFolder> fieldFolders;
        private @Nullable String id;
        private @Nullable String importMode;
        private @Nullable List<GetDataSetLogicalTableMap> logicalTableMaps;
        private @Nullable String name;
        private @Nullable List<GetDataSetPermission> permissions;
        private @Nullable List<GetDataSetPhysicalTableMap> physicalTableMaps;
        private @Nullable List<GetDataSetRowLevelPermissionDataSet> rowLevelPermissionDataSets;
        private @Nullable List<GetDataSetRowLevelPermissionTagConfiguration> rowLevelPermissionTagConfigurations;
        private @Nullable Map<String,String> tags;
        private @Nullable Map<String,String> tagsAll;
        public Builder() {}
        public Builder(GetDataSetResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.awsAccountId = defaults.awsAccountId;
    	      this.columnGroups = defaults.columnGroups;
    	      this.columnLevelPermissionRules = defaults.columnLevelPermissionRules;
    	      this.dataSetId = defaults.dataSetId;
    	      this.dataSetUsageConfigurations = defaults.dataSetUsageConfigurations;
    	      this.fieldFolders = defaults.fieldFolders;
    	      this.id = defaults.id;
    	      this.importMode = defaults.importMode;
    	      this.logicalTableMaps = defaults.logicalTableMaps;
    	      this.name = defaults.name;
    	      this.permissions = defaults.permissions;
    	      this.physicalTableMaps = defaults.physicalTableMaps;
    	      this.rowLevelPermissionDataSets = defaults.rowLevelPermissionDataSets;
    	      this.rowLevelPermissionTagConfigurations = defaults.rowLevelPermissionTagConfigurations;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder awsAccountId(@Nullable String awsAccountId) {
            this.awsAccountId = awsAccountId;
            return this;
        }
        @CustomType.Setter
        public Builder columnGroups(@Nullable List<GetDataSetColumnGroup> columnGroups) {
            this.columnGroups = columnGroups;
            return this;
        }
        public Builder columnGroups(GetDataSetColumnGroup... columnGroups) {
            return columnGroups(List.of(columnGroups));
        }
        @CustomType.Setter
        public Builder columnLevelPermissionRules(@Nullable List<GetDataSetColumnLevelPermissionRule> columnLevelPermissionRules) {
            this.columnLevelPermissionRules = columnLevelPermissionRules;
            return this;
        }
        public Builder columnLevelPermissionRules(GetDataSetColumnLevelPermissionRule... columnLevelPermissionRules) {
            return columnLevelPermissionRules(List.of(columnLevelPermissionRules));
        }
        @CustomType.Setter
        public Builder dataSetId(String dataSetId) {
            this.dataSetId = Objects.requireNonNull(dataSetId);
            return this;
        }
        @CustomType.Setter
        public Builder dataSetUsageConfigurations(@Nullable List<GetDataSetDataSetUsageConfiguration> dataSetUsageConfigurations) {
            this.dataSetUsageConfigurations = dataSetUsageConfigurations;
            return this;
        }
        public Builder dataSetUsageConfigurations(GetDataSetDataSetUsageConfiguration... dataSetUsageConfigurations) {
            return dataSetUsageConfigurations(List.of(dataSetUsageConfigurations));
        }
        @CustomType.Setter
        public Builder fieldFolders(@Nullable List<GetDataSetFieldFolder> fieldFolders) {
            this.fieldFolders = fieldFolders;
            return this;
        }
        public Builder fieldFolders(GetDataSetFieldFolder... fieldFolders) {
            return fieldFolders(List.of(fieldFolders));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder importMode(@Nullable String importMode) {
            this.importMode = importMode;
            return this;
        }
        @CustomType.Setter
        public Builder logicalTableMaps(@Nullable List<GetDataSetLogicalTableMap> logicalTableMaps) {
            this.logicalTableMaps = logicalTableMaps;
            return this;
        }
        public Builder logicalTableMaps(GetDataSetLogicalTableMap... logicalTableMaps) {
            return logicalTableMaps(List.of(logicalTableMaps));
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder permissions(@Nullable List<GetDataSetPermission> permissions) {
            this.permissions = permissions;
            return this;
        }
        public Builder permissions(GetDataSetPermission... permissions) {
            return permissions(List.of(permissions));
        }
        @CustomType.Setter
        public Builder physicalTableMaps(@Nullable List<GetDataSetPhysicalTableMap> physicalTableMaps) {
            this.physicalTableMaps = physicalTableMaps;
            return this;
        }
        public Builder physicalTableMaps(GetDataSetPhysicalTableMap... physicalTableMaps) {
            return physicalTableMaps(List.of(physicalTableMaps));
        }
        @CustomType.Setter
        public Builder rowLevelPermissionDataSets(@Nullable List<GetDataSetRowLevelPermissionDataSet> rowLevelPermissionDataSets) {
            this.rowLevelPermissionDataSets = rowLevelPermissionDataSets;
            return this;
        }
        public Builder rowLevelPermissionDataSets(GetDataSetRowLevelPermissionDataSet... rowLevelPermissionDataSets) {
            return rowLevelPermissionDataSets(List.of(rowLevelPermissionDataSets));
        }
        @CustomType.Setter
        public Builder rowLevelPermissionTagConfigurations(@Nullable List<GetDataSetRowLevelPermissionTagConfiguration> rowLevelPermissionTagConfigurations) {
            this.rowLevelPermissionTagConfigurations = rowLevelPermissionTagConfigurations;
            return this;
        }
        public Builder rowLevelPermissionTagConfigurations(GetDataSetRowLevelPermissionTagConfiguration... rowLevelPermissionTagConfigurations) {
            return rowLevelPermissionTagConfigurations(List.of(rowLevelPermissionTagConfigurations));
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }
        public GetDataSetResult build() {
            final var o = new GetDataSetResult();
            o.arn = arn;
            o.awsAccountId = awsAccountId;
            o.columnGroups = columnGroups;
            o.columnLevelPermissionRules = columnLevelPermissionRules;
            o.dataSetId = dataSetId;
            o.dataSetUsageConfigurations = dataSetUsageConfigurations;
            o.fieldFolders = fieldFolders;
            o.id = id;
            o.importMode = importMode;
            o.logicalTableMaps = logicalTableMaps;
            o.name = name;
            o.permissions = permissions;
            o.physicalTableMaps = physicalTableMaps;
            o.rowLevelPermissionDataSets = rowLevelPermissionDataSets;
            o.rowLevelPermissionTagConfigurations = rowLevelPermissionTagConfigurations;
            o.tags = tags;
            o.tagsAll = tagsAll;
            return o;
        }
    }
}
