// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.VisualsGaugeChartVisualConditionalFormattingConditionalFormattingOptionArcArgs;
import com.pulumi.aws.quicksight.inputs.VisualsGaugeChartVisualConditionalFormattingConditionalFormattingOptionPrimaryValueArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VisualsGaugeChartVisualConditionalFormattingConditionalFormattingOptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final VisualsGaugeChartVisualConditionalFormattingConditionalFormattingOptionArgs Empty = new VisualsGaugeChartVisualConditionalFormattingConditionalFormattingOptionArgs();

    @Import(name="arc")
    private @Nullable Output<VisualsGaugeChartVisualConditionalFormattingConditionalFormattingOptionArcArgs> arc;

    public Optional<Output<VisualsGaugeChartVisualConditionalFormattingConditionalFormattingOptionArcArgs>> arc() {
        return Optional.ofNullable(this.arc);
    }

    @Import(name="primaryValue")
    private @Nullable Output<VisualsGaugeChartVisualConditionalFormattingConditionalFormattingOptionPrimaryValueArgs> primaryValue;

    public Optional<Output<VisualsGaugeChartVisualConditionalFormattingConditionalFormattingOptionPrimaryValueArgs>> primaryValue() {
        return Optional.ofNullable(this.primaryValue);
    }

    private VisualsGaugeChartVisualConditionalFormattingConditionalFormattingOptionArgs() {}

    private VisualsGaugeChartVisualConditionalFormattingConditionalFormattingOptionArgs(VisualsGaugeChartVisualConditionalFormattingConditionalFormattingOptionArgs $) {
        this.arc = $.arc;
        this.primaryValue = $.primaryValue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VisualsGaugeChartVisualConditionalFormattingConditionalFormattingOptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VisualsGaugeChartVisualConditionalFormattingConditionalFormattingOptionArgs $;

        public Builder() {
            $ = new VisualsGaugeChartVisualConditionalFormattingConditionalFormattingOptionArgs();
        }

        public Builder(VisualsGaugeChartVisualConditionalFormattingConditionalFormattingOptionArgs defaults) {
            $ = new VisualsGaugeChartVisualConditionalFormattingConditionalFormattingOptionArgs(Objects.requireNonNull(defaults));
        }

        public Builder arc(@Nullable Output<VisualsGaugeChartVisualConditionalFormattingConditionalFormattingOptionArcArgs> arc) {
            $.arc = arc;
            return this;
        }

        public Builder arc(VisualsGaugeChartVisualConditionalFormattingConditionalFormattingOptionArcArgs arc) {
            return arc(Output.of(arc));
        }

        public Builder primaryValue(@Nullable Output<VisualsGaugeChartVisualConditionalFormattingConditionalFormattingOptionPrimaryValueArgs> primaryValue) {
            $.primaryValue = primaryValue;
            return this;
        }

        public Builder primaryValue(VisualsGaugeChartVisualConditionalFormattingConditionalFormattingOptionPrimaryValueArgs primaryValue) {
            return primaryValue(Output.of(primaryValue));
        }

        public VisualsGaugeChartVisualConditionalFormattingConditionalFormattingOptionArgs build() {
            return $;
        }
    }

}
