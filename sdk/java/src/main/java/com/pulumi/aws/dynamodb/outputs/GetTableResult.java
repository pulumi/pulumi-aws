// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dynamodb.outputs;

import com.pulumi.aws.dynamodb.outputs.GetTableAttribute;
import com.pulumi.aws.dynamodb.outputs.GetTableGlobalSecondaryIndex;
import com.pulumi.aws.dynamodb.outputs.GetTableLocalSecondaryIndex;
import com.pulumi.aws.dynamodb.outputs.GetTablePointInTimeRecovery;
import com.pulumi.aws.dynamodb.outputs.GetTableReplica;
import com.pulumi.aws.dynamodb.outputs.GetTableServerSideEncryption;
import com.pulumi.aws.dynamodb.outputs.GetTableTtl;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetTableResult {
    private @Nullable String arn;
    private @Nullable List<GetTableAttribute> attributes;
    private @Nullable String billingMode;
    private @Nullable Boolean deletionProtectionEnabled;
    private @Nullable List<GetTableGlobalSecondaryIndex> globalSecondaryIndexes;
    private @Nullable String hashKey;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private @Nullable List<GetTableLocalSecondaryIndex> localSecondaryIndexes;
    private String name;
    private @Nullable GetTablePointInTimeRecovery pointInTimeRecovery;
    private @Nullable String rangeKey;
    private @Nullable Integer readCapacity;
    private @Nullable List<GetTableReplica> replicas;
    private @Nullable GetTableServerSideEncryption serverSideEncryption;
    private @Nullable String streamArn;
    private @Nullable Boolean streamEnabled;
    private @Nullable String streamLabel;
    private @Nullable String streamViewType;
    private @Nullable String tableClass;
    private @Nullable Map<String,String> tags;
    private @Nullable GetTableTtl ttl;
    private @Nullable Integer writeCapacity;

    private GetTableResult() {}
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    public List<GetTableAttribute> attributes() {
        return this.attributes == null ? List.of() : this.attributes;
    }
    public Optional<String> billingMode() {
        return Optional.ofNullable(this.billingMode);
    }
    public Optional<Boolean> deletionProtectionEnabled() {
        return Optional.ofNullable(this.deletionProtectionEnabled);
    }
    public List<GetTableGlobalSecondaryIndex> globalSecondaryIndexes() {
        return this.globalSecondaryIndexes == null ? List.of() : this.globalSecondaryIndexes;
    }
    public Optional<String> hashKey() {
        return Optional.ofNullable(this.hashKey);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public List<GetTableLocalSecondaryIndex> localSecondaryIndexes() {
        return this.localSecondaryIndexes == null ? List.of() : this.localSecondaryIndexes;
    }
    public String name() {
        return this.name;
    }
    public Optional<GetTablePointInTimeRecovery> pointInTimeRecovery() {
        return Optional.ofNullable(this.pointInTimeRecovery);
    }
    public Optional<String> rangeKey() {
        return Optional.ofNullable(this.rangeKey);
    }
    public Optional<Integer> readCapacity() {
        return Optional.ofNullable(this.readCapacity);
    }
    public List<GetTableReplica> replicas() {
        return this.replicas == null ? List.of() : this.replicas;
    }
    public Optional<GetTableServerSideEncryption> serverSideEncryption() {
        return Optional.ofNullable(this.serverSideEncryption);
    }
    public Optional<String> streamArn() {
        return Optional.ofNullable(this.streamArn);
    }
    public Optional<Boolean> streamEnabled() {
        return Optional.ofNullable(this.streamEnabled);
    }
    public Optional<String> streamLabel() {
        return Optional.ofNullable(this.streamLabel);
    }
    public Optional<String> streamViewType() {
        return Optional.ofNullable(this.streamViewType);
    }
    public Optional<String> tableClass() {
        return Optional.ofNullable(this.tableClass);
    }
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public Optional<GetTableTtl> ttl() {
        return Optional.ofNullable(this.ttl);
    }
    public Optional<Integer> writeCapacity() {
        return Optional.ofNullable(this.writeCapacity);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTableResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable List<GetTableAttribute> attributes;
        private @Nullable String billingMode;
        private @Nullable Boolean deletionProtectionEnabled;
        private @Nullable List<GetTableGlobalSecondaryIndex> globalSecondaryIndexes;
        private @Nullable String hashKey;
        private @Nullable String id;
        private @Nullable List<GetTableLocalSecondaryIndex> localSecondaryIndexes;
        private String name;
        private @Nullable GetTablePointInTimeRecovery pointInTimeRecovery;
        private @Nullable String rangeKey;
        private @Nullable Integer readCapacity;
        private @Nullable List<GetTableReplica> replicas;
        private @Nullable GetTableServerSideEncryption serverSideEncryption;
        private @Nullable String streamArn;
        private @Nullable Boolean streamEnabled;
        private @Nullable String streamLabel;
        private @Nullable String streamViewType;
        private @Nullable String tableClass;
        private @Nullable Map<String,String> tags;
        private @Nullable GetTableTtl ttl;
        private @Nullable Integer writeCapacity;
        public Builder() {}
        public Builder(GetTableResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.attributes = defaults.attributes;
    	      this.billingMode = defaults.billingMode;
    	      this.deletionProtectionEnabled = defaults.deletionProtectionEnabled;
    	      this.globalSecondaryIndexes = defaults.globalSecondaryIndexes;
    	      this.hashKey = defaults.hashKey;
    	      this.id = defaults.id;
    	      this.localSecondaryIndexes = defaults.localSecondaryIndexes;
    	      this.name = defaults.name;
    	      this.pointInTimeRecovery = defaults.pointInTimeRecovery;
    	      this.rangeKey = defaults.rangeKey;
    	      this.readCapacity = defaults.readCapacity;
    	      this.replicas = defaults.replicas;
    	      this.serverSideEncryption = defaults.serverSideEncryption;
    	      this.streamArn = defaults.streamArn;
    	      this.streamEnabled = defaults.streamEnabled;
    	      this.streamLabel = defaults.streamLabel;
    	      this.streamViewType = defaults.streamViewType;
    	      this.tableClass = defaults.tableClass;
    	      this.tags = defaults.tags;
    	      this.ttl = defaults.ttl;
    	      this.writeCapacity = defaults.writeCapacity;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder attributes(@Nullable List<GetTableAttribute> attributes) {
            this.attributes = attributes;
            return this;
        }
        public Builder attributes(GetTableAttribute... attributes) {
            return attributes(List.of(attributes));
        }
        @CustomType.Setter
        public Builder billingMode(@Nullable String billingMode) {
            this.billingMode = billingMode;
            return this;
        }
        @CustomType.Setter
        public Builder deletionProtectionEnabled(@Nullable Boolean deletionProtectionEnabled) {
            this.deletionProtectionEnabled = deletionProtectionEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder globalSecondaryIndexes(@Nullable List<GetTableGlobalSecondaryIndex> globalSecondaryIndexes) {
            this.globalSecondaryIndexes = globalSecondaryIndexes;
            return this;
        }
        public Builder globalSecondaryIndexes(GetTableGlobalSecondaryIndex... globalSecondaryIndexes) {
            return globalSecondaryIndexes(List.of(globalSecondaryIndexes));
        }
        @CustomType.Setter
        public Builder hashKey(@Nullable String hashKey) {
            this.hashKey = hashKey;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder localSecondaryIndexes(@Nullable List<GetTableLocalSecondaryIndex> localSecondaryIndexes) {
            this.localSecondaryIndexes = localSecondaryIndexes;
            return this;
        }
        public Builder localSecondaryIndexes(GetTableLocalSecondaryIndex... localSecondaryIndexes) {
            return localSecondaryIndexes(List.of(localSecondaryIndexes));
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder pointInTimeRecovery(@Nullable GetTablePointInTimeRecovery pointInTimeRecovery) {
            this.pointInTimeRecovery = pointInTimeRecovery;
            return this;
        }
        @CustomType.Setter
        public Builder rangeKey(@Nullable String rangeKey) {
            this.rangeKey = rangeKey;
            return this;
        }
        @CustomType.Setter
        public Builder readCapacity(@Nullable Integer readCapacity) {
            this.readCapacity = readCapacity;
            return this;
        }
        @CustomType.Setter
        public Builder replicas(@Nullable List<GetTableReplica> replicas) {
            this.replicas = replicas;
            return this;
        }
        public Builder replicas(GetTableReplica... replicas) {
            return replicas(List.of(replicas));
        }
        @CustomType.Setter
        public Builder serverSideEncryption(@Nullable GetTableServerSideEncryption serverSideEncryption) {
            this.serverSideEncryption = serverSideEncryption;
            return this;
        }
        @CustomType.Setter
        public Builder streamArn(@Nullable String streamArn) {
            this.streamArn = streamArn;
            return this;
        }
        @CustomType.Setter
        public Builder streamEnabled(@Nullable Boolean streamEnabled) {
            this.streamEnabled = streamEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder streamLabel(@Nullable String streamLabel) {
            this.streamLabel = streamLabel;
            return this;
        }
        @CustomType.Setter
        public Builder streamViewType(@Nullable String streamViewType) {
            this.streamViewType = streamViewType;
            return this;
        }
        @CustomType.Setter
        public Builder tableClass(@Nullable String tableClass) {
            this.tableClass = tableClass;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder ttl(@Nullable GetTableTtl ttl) {
            this.ttl = ttl;
            return this;
        }
        @CustomType.Setter
        public Builder writeCapacity(@Nullable Integer writeCapacity) {
            this.writeCapacity = writeCapacity;
            return this;
        }
        public GetTableResult build() {
            final var o = new GetTableResult();
            o.arn = arn;
            o.attributes = attributes;
            o.billingMode = billingMode;
            o.deletionProtectionEnabled = deletionProtectionEnabled;
            o.globalSecondaryIndexes = globalSecondaryIndexes;
            o.hashKey = hashKey;
            o.id = id;
            o.localSecondaryIndexes = localSecondaryIndexes;
            o.name = name;
            o.pointInTimeRecovery = pointInTimeRecovery;
            o.rangeKey = rangeKey;
            o.readCapacity = readCapacity;
            o.replicas = replicas;
            o.serverSideEncryption = serverSideEncryption;
            o.streamArn = streamArn;
            o.streamEnabled = streamEnabled;
            o.streamLabel = streamLabel;
            o.streamViewType = streamViewType;
            o.tableClass = tableClass;
            o.tags = tags;
            o.ttl = ttl;
            o.writeCapacity = writeCapacity;
            return o;
        }
    }
}
