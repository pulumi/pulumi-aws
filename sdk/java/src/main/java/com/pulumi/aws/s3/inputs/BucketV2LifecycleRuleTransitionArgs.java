// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketV2LifecycleRuleTransitionArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketV2LifecycleRuleTransitionArgs Empty = new BucketV2LifecycleRuleTransitionArgs();

    @Import(name="date")
    private @Nullable Output<String> date;

    public Optional<Output<String>> date() {
        return Optional.ofNullable(this.date);
    }

    @Import(name="days")
    private @Nullable Output<Integer> days;

    public Optional<Output<Integer>> days() {
        return Optional.ofNullable(this.days);
    }

    @Import(name="storageClass", required=true)
    private Output<String> storageClass;

    public Output<String> storageClass() {
        return this.storageClass;
    }

    private BucketV2LifecycleRuleTransitionArgs() {}

    private BucketV2LifecycleRuleTransitionArgs(BucketV2LifecycleRuleTransitionArgs $) {
        this.date = $.date;
        this.days = $.days;
        this.storageClass = $.storageClass;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketV2LifecycleRuleTransitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketV2LifecycleRuleTransitionArgs $;

        public Builder() {
            $ = new BucketV2LifecycleRuleTransitionArgs();
        }

        public Builder(BucketV2LifecycleRuleTransitionArgs defaults) {
            $ = new BucketV2LifecycleRuleTransitionArgs(Objects.requireNonNull(defaults));
        }

        public Builder date(@Nullable Output<String> date) {
            $.date = date;
            return this;
        }

        public Builder date(String date) {
            return date(Output.of(date));
        }

        public Builder days(@Nullable Output<Integer> days) {
            $.days = days;
            return this;
        }

        public Builder days(Integer days) {
            return days(Output.of(days));
        }

        public Builder storageClass(Output<String> storageClass) {
            $.storageClass = storageClass;
            return this;
        }

        public Builder storageClass(String storageClass) {
            return storageClass(Output.of(storageClass));
        }

        public BucketV2LifecycleRuleTransitionArgs build() {
            $.storageClass = Objects.requireNonNull($.storageClass, "expected parameter 'storageClass' to be non-null");
            return $;
        }
    }

}
