// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3control.inputs;

import com.pulumi.aws.s3control.inputs.MultiRegionAccessPointPolicyDetailsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MultiRegionAccessPointPolicyState extends com.pulumi.resources.ResourceArgs {

    public static final MultiRegionAccessPointPolicyState Empty = new MultiRegionAccessPointPolicyState();

    /**
     * The AWS account ID for the owner of the Multi-Region Access Point. Defaults to automatically determined account ID of the AWS provider.
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return The AWS account ID for the owner of the Multi-Region Access Point. Defaults to automatically determined account ID of the AWS provider.
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * A configuration block containing details about the policy for the Multi-Region Access Point. See Details Configuration Block below for more details
     * 
     */
    @Import(name="details")
    private @Nullable Output<MultiRegionAccessPointPolicyDetailsArgs> details;

    /**
     * @return A configuration block containing details about the policy for the Multi-Region Access Point. See Details Configuration Block below for more details
     * 
     */
    public Optional<Output<MultiRegionAccessPointPolicyDetailsArgs>> details() {
        return Optional.ofNullable(this.details);
    }

    /**
     * The last established policy for the Multi-Region Access Point.
     * 
     */
    @Import(name="established")
    private @Nullable Output<String> established;

    /**
     * @return The last established policy for the Multi-Region Access Point.
     * 
     */
    public Optional<Output<String>> established() {
        return Optional.ofNullable(this.established);
    }

    /**
     * The proposed policy for the Multi-Region Access Point.
     * 
     */
    @Import(name="proposed")
    private @Nullable Output<String> proposed;

    /**
     * @return The proposed policy for the Multi-Region Access Point.
     * 
     */
    public Optional<Output<String>> proposed() {
        return Optional.ofNullable(this.proposed);
    }

    private MultiRegionAccessPointPolicyState() {}

    private MultiRegionAccessPointPolicyState(MultiRegionAccessPointPolicyState $) {
        this.accountId = $.accountId;
        this.details = $.details;
        this.established = $.established;
        this.proposed = $.proposed;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MultiRegionAccessPointPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MultiRegionAccessPointPolicyState $;

        public Builder() {
            $ = new MultiRegionAccessPointPolicyState();
        }

        public Builder(MultiRegionAccessPointPolicyState defaults) {
            $ = new MultiRegionAccessPointPolicyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId The AWS account ID for the owner of the Multi-Region Access Point. Defaults to automatically determined account ID of the AWS provider.
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId The AWS account ID for the owner of the Multi-Region Access Point. Defaults to automatically determined account ID of the AWS provider.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param details A configuration block containing details about the policy for the Multi-Region Access Point. See Details Configuration Block below for more details
         * 
         * @return builder
         * 
         */
        public Builder details(@Nullable Output<MultiRegionAccessPointPolicyDetailsArgs> details) {
            $.details = details;
            return this;
        }

        /**
         * @param details A configuration block containing details about the policy for the Multi-Region Access Point. See Details Configuration Block below for more details
         * 
         * @return builder
         * 
         */
        public Builder details(MultiRegionAccessPointPolicyDetailsArgs details) {
            return details(Output.of(details));
        }

        /**
         * @param established The last established policy for the Multi-Region Access Point.
         * 
         * @return builder
         * 
         */
        public Builder established(@Nullable Output<String> established) {
            $.established = established;
            return this;
        }

        /**
         * @param established The last established policy for the Multi-Region Access Point.
         * 
         * @return builder
         * 
         */
        public Builder established(String established) {
            return established(Output.of(established));
        }

        /**
         * @param proposed The proposed policy for the Multi-Region Access Point.
         * 
         * @return builder
         * 
         */
        public Builder proposed(@Nullable Output<String> proposed) {
            $.proposed = proposed;
            return this;
        }

        /**
         * @param proposed The proposed policy for the Multi-Region Access Point.
         * 
         * @return builder
         * 
         */
        public Builder proposed(String proposed) {
            return proposed(Output.of(proposed));
        }

        public MultiRegionAccessPointPolicyState build() {
            return $;
        }
    }

}
