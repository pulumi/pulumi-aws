// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dlm.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LifecyclePolicyPolicyDetailsExclusions {
    /**
     * @return Indicates whether to exclude volumes that are attached to instances as the boot volume. To exclude boot volumes, specify `true`.
     * 
     */
    private @Nullable Boolean excludeBootVolumes;
    /**
     * @return Map specifies whether to exclude volumes that have specific tags.
     * 
     */
    private @Nullable Map<String,String> excludeTags;
    /**
     * @return List specifies the volume types to exclude.
     * 
     */
    private @Nullable List<String> excludeVolumeTypes;

    private LifecyclePolicyPolicyDetailsExclusions() {}
    /**
     * @return Indicates whether to exclude volumes that are attached to instances as the boot volume. To exclude boot volumes, specify `true`.
     * 
     */
    public Optional<Boolean> excludeBootVolumes() {
        return Optional.ofNullable(this.excludeBootVolumes);
    }
    /**
     * @return Map specifies whether to exclude volumes that have specific tags.
     * 
     */
    public Map<String,String> excludeTags() {
        return this.excludeTags == null ? Map.of() : this.excludeTags;
    }
    /**
     * @return List specifies the volume types to exclude.
     * 
     */
    public List<String> excludeVolumeTypes() {
        return this.excludeVolumeTypes == null ? List.of() : this.excludeVolumeTypes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LifecyclePolicyPolicyDetailsExclusions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean excludeBootVolumes;
        private @Nullable Map<String,String> excludeTags;
        private @Nullable List<String> excludeVolumeTypes;
        public Builder() {}
        public Builder(LifecyclePolicyPolicyDetailsExclusions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.excludeBootVolumes = defaults.excludeBootVolumes;
    	      this.excludeTags = defaults.excludeTags;
    	      this.excludeVolumeTypes = defaults.excludeVolumeTypes;
        }

        @CustomType.Setter
        public Builder excludeBootVolumes(@Nullable Boolean excludeBootVolumes) {

            this.excludeBootVolumes = excludeBootVolumes;
            return this;
        }
        @CustomType.Setter
        public Builder excludeTags(@Nullable Map<String,String> excludeTags) {

            this.excludeTags = excludeTags;
            return this;
        }
        @CustomType.Setter
        public Builder excludeVolumeTypes(@Nullable List<String> excludeVolumeTypes) {

            this.excludeVolumeTypes = excludeVolumeTypes;
            return this;
        }
        public Builder excludeVolumeTypes(String... excludeVolumeTypes) {
            return excludeVolumeTypes(List.of(excludeVolumeTypes));
        }
        public LifecyclePolicyPolicyDetailsExclusions build() {
            final var _resultValue = new LifecyclePolicyPolicyDetailsExclusions();
            _resultValue.excludeBootVolumes = excludeBootVolumes;
            _resultValue.excludeTags = excludeTags;
            _resultValue.excludeVolumeTypes = excludeVolumeTypes;
            return _resultValue;
        }
    }
}
