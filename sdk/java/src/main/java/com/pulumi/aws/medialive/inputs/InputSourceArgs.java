// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.medialive.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class InputSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final InputSourceArgs Empty = new InputSourceArgs();

    /**
     * The key used to extract the password from EC2 Parameter store.
     * 
     */
    @Import(name="passwordParam", required=true)
    private Output<String> passwordParam;

    /**
     * @return The key used to extract the password from EC2 Parameter store.
     * 
     */
    public Output<String> passwordParam() {
        return this.passwordParam;
    }

    /**
     * The URL where the stream is pulled from.
     * 
     */
    @Import(name="url", required=true)
    private Output<String> url;

    /**
     * @return The URL where the stream is pulled from.
     * 
     */
    public Output<String> url() {
        return this.url;
    }

    /**
     * The username for the input source.
     * 
     */
    @Import(name="username", required=true)
    private Output<String> username;

    /**
     * @return The username for the input source.
     * 
     */
    public Output<String> username() {
        return this.username;
    }

    private InputSourceArgs() {}

    private InputSourceArgs(InputSourceArgs $) {
        this.passwordParam = $.passwordParam;
        this.url = $.url;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InputSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InputSourceArgs $;

        public Builder() {
            $ = new InputSourceArgs();
        }

        public Builder(InputSourceArgs defaults) {
            $ = new InputSourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param passwordParam The key used to extract the password from EC2 Parameter store.
         * 
         * @return builder
         * 
         */
        public Builder passwordParam(Output<String> passwordParam) {
            $.passwordParam = passwordParam;
            return this;
        }

        /**
         * @param passwordParam The key used to extract the password from EC2 Parameter store.
         * 
         * @return builder
         * 
         */
        public Builder passwordParam(String passwordParam) {
            return passwordParam(Output.of(passwordParam));
        }

        /**
         * @param url The URL where the stream is pulled from.
         * 
         * @return builder
         * 
         */
        public Builder url(Output<String> url) {
            $.url = url;
            return this;
        }

        /**
         * @param url The URL where the stream is pulled from.
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            return url(Output.of(url));
        }

        /**
         * @param username The username for the input source.
         * 
         * @return builder
         * 
         */
        public Builder username(Output<String> username) {
            $.username = username;
            return this;
        }

        /**
         * @param username The username for the input source.
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            return username(Output.of(username));
        }

        public InputSourceArgs build() {
            if ($.passwordParam == null) {
                throw new MissingRequiredPropertyException("InputSourceArgs", "passwordParam");
            }
            if ($.url == null) {
                throw new MissingRequiredPropertyException("InputSourceArgs", "url");
            }
            if ($.username == null) {
                throw new MissingRequiredPropertyException("InputSourceArgs", "username");
            }
            return $;
        }
    }

}
