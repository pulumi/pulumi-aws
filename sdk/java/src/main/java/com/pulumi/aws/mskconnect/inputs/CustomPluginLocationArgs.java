// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.mskconnect.inputs;

import com.pulumi.aws.mskconnect.inputs.CustomPluginLocationS3Args;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;


public final class CustomPluginLocationArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomPluginLocationArgs Empty = new CustomPluginLocationArgs();

    /**
     * Information of the plugin file stored in Amazon S3. See below.
     * 
     */
    @Import(name="s3", required=true)
    private Output<CustomPluginLocationS3Args> s3;

    /**
     * @return Information of the plugin file stored in Amazon S3. See below.
     * 
     */
    public Output<CustomPluginLocationS3Args> s3() {
        return this.s3;
    }

    private CustomPluginLocationArgs() {}

    private CustomPluginLocationArgs(CustomPluginLocationArgs $) {
        this.s3 = $.s3;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomPluginLocationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomPluginLocationArgs $;

        public Builder() {
            $ = new CustomPluginLocationArgs();
        }

        public Builder(CustomPluginLocationArgs defaults) {
            $ = new CustomPluginLocationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param s3 Information of the plugin file stored in Amazon S3. See below.
         * 
         * @return builder
         * 
         */
        public Builder s3(Output<CustomPluginLocationS3Args> s3) {
            $.s3 = s3;
            return this;
        }

        /**
         * @param s3 Information of the plugin file stored in Amazon S3. See below.
         * 
         * @return builder
         * 
         */
        public Builder s3(CustomPluginLocationS3Args s3) {
            return s3(Output.of(s3));
        }

        public CustomPluginLocationArgs build() {
            $.s3 = Objects.requireNonNull($.s3, "expected parameter 's3' to be non-null");
            return $;
        }
    }

}
