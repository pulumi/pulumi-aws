// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.gamelift.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GameSessionQueuePlayerLatencyPolicy {
    /**
     * @return Maximum latency value that is allowed for any player.
     * 
     */
    private Integer maximumIndividualPlayerLatencyMilliseconds;
    /**
     * @return Length of time that the policy is enforced while placing a new game session. Absence of value for this attribute means that the policy is enforced until the queue times out.
     * 
     */
    private @Nullable Integer policyDurationSeconds;

    private GameSessionQueuePlayerLatencyPolicy() {}
    /**
     * @return Maximum latency value that is allowed for any player.
     * 
     */
    public Integer maximumIndividualPlayerLatencyMilliseconds() {
        return this.maximumIndividualPlayerLatencyMilliseconds;
    }
    /**
     * @return Length of time that the policy is enforced while placing a new game session. Absence of value for this attribute means that the policy is enforced until the queue times out.
     * 
     */
    public Optional<Integer> policyDurationSeconds() {
        return Optional.ofNullable(this.policyDurationSeconds);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GameSessionQueuePlayerLatencyPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer maximumIndividualPlayerLatencyMilliseconds;
        private @Nullable Integer policyDurationSeconds;
        public Builder() {}
        public Builder(GameSessionQueuePlayerLatencyPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maximumIndividualPlayerLatencyMilliseconds = defaults.maximumIndividualPlayerLatencyMilliseconds;
    	      this.policyDurationSeconds = defaults.policyDurationSeconds;
        }

        @CustomType.Setter
        public Builder maximumIndividualPlayerLatencyMilliseconds(Integer maximumIndividualPlayerLatencyMilliseconds) {
            if (maximumIndividualPlayerLatencyMilliseconds == null) {
              throw new MissingRequiredPropertyException("GameSessionQueuePlayerLatencyPolicy", "maximumIndividualPlayerLatencyMilliseconds");
            }
            this.maximumIndividualPlayerLatencyMilliseconds = maximumIndividualPlayerLatencyMilliseconds;
            return this;
        }
        @CustomType.Setter
        public Builder policyDurationSeconds(@Nullable Integer policyDurationSeconds) {

            this.policyDurationSeconds = policyDurationSeconds;
            return this;
        }
        public GameSessionQueuePlayerLatencyPolicy build() {
            final var _resultValue = new GameSessionQueuePlayerLatencyPolicy();
            _resultValue.maximumIndividualPlayerLatencyMilliseconds = maximumIndividualPlayerLatencyMilliseconds;
            _resultValue.policyDurationSeconds = policyDurationSeconds;
            return _resultValue;
        }
    }
}
