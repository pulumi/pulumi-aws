// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appstream.inputs;

import com.pulumi.aws.appstream.inputs.DirectoryConfigServiceAccountCredentialsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DirectoryConfigState extends com.pulumi.resources.ResourceArgs {

    public static final DirectoryConfigState Empty = new DirectoryConfigState();

    /**
     * Date and time, in UTC and extended RFC 3339 format, when the directory config was created.
     * 
     */
    @Import(name="createdTime")
    private @Nullable Output<String> createdTime;

    /**
     * @return Date and time, in UTC and extended RFC 3339 format, when the directory config was created.
     * 
     */
    public Optional<Output<String>> createdTime() {
        return Optional.ofNullable(this.createdTime);
    }

    /**
     * Fully qualified name of the directory.
     * 
     */
    @Import(name="directoryName")
    private @Nullable Output<String> directoryName;

    /**
     * @return Fully qualified name of the directory.
     * 
     */
    public Optional<Output<String>> directoryName() {
        return Optional.ofNullable(this.directoryName);
    }

    /**
     * Distinguished names of the organizational units for computer accounts.
     * 
     */
    @Import(name="organizationalUnitDistinguishedNames")
    private @Nullable Output<List<String>> organizationalUnitDistinguishedNames;

    /**
     * @return Distinguished names of the organizational units for computer accounts.
     * 
     */
    public Optional<Output<List<String>>> organizationalUnitDistinguishedNames() {
        return Optional.ofNullable(this.organizationalUnitDistinguishedNames);
    }

    /**
     * Configuration block for the name of the directory and organizational unit (OU) to use to join the directory config to a Microsoft Active Directory domain. See `service_account_credentials` below.
     * 
     */
    @Import(name="serviceAccountCredentials")
    private @Nullable Output<DirectoryConfigServiceAccountCredentialsArgs> serviceAccountCredentials;

    /**
     * @return Configuration block for the name of the directory and organizational unit (OU) to use to join the directory config to a Microsoft Active Directory domain. See `service_account_credentials` below.
     * 
     */
    public Optional<Output<DirectoryConfigServiceAccountCredentialsArgs>> serviceAccountCredentials() {
        return Optional.ofNullable(this.serviceAccountCredentials);
    }

    private DirectoryConfigState() {}

    private DirectoryConfigState(DirectoryConfigState $) {
        this.createdTime = $.createdTime;
        this.directoryName = $.directoryName;
        this.organizationalUnitDistinguishedNames = $.organizationalUnitDistinguishedNames;
        this.serviceAccountCredentials = $.serviceAccountCredentials;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DirectoryConfigState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DirectoryConfigState $;

        public Builder() {
            $ = new DirectoryConfigState();
        }

        public Builder(DirectoryConfigState defaults) {
            $ = new DirectoryConfigState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createdTime Date and time, in UTC and extended RFC 3339 format, when the directory config was created.
         * 
         * @return builder
         * 
         */
        public Builder createdTime(@Nullable Output<String> createdTime) {
            $.createdTime = createdTime;
            return this;
        }

        /**
         * @param createdTime Date and time, in UTC and extended RFC 3339 format, when the directory config was created.
         * 
         * @return builder
         * 
         */
        public Builder createdTime(String createdTime) {
            return createdTime(Output.of(createdTime));
        }

        /**
         * @param directoryName Fully qualified name of the directory.
         * 
         * @return builder
         * 
         */
        public Builder directoryName(@Nullable Output<String> directoryName) {
            $.directoryName = directoryName;
            return this;
        }

        /**
         * @param directoryName Fully qualified name of the directory.
         * 
         * @return builder
         * 
         */
        public Builder directoryName(String directoryName) {
            return directoryName(Output.of(directoryName));
        }

        /**
         * @param organizationalUnitDistinguishedNames Distinguished names of the organizational units for computer accounts.
         * 
         * @return builder
         * 
         */
        public Builder organizationalUnitDistinguishedNames(@Nullable Output<List<String>> organizationalUnitDistinguishedNames) {
            $.organizationalUnitDistinguishedNames = organizationalUnitDistinguishedNames;
            return this;
        }

        /**
         * @param organizationalUnitDistinguishedNames Distinguished names of the organizational units for computer accounts.
         * 
         * @return builder
         * 
         */
        public Builder organizationalUnitDistinguishedNames(List<String> organizationalUnitDistinguishedNames) {
            return organizationalUnitDistinguishedNames(Output.of(organizationalUnitDistinguishedNames));
        }

        /**
         * @param organizationalUnitDistinguishedNames Distinguished names of the organizational units for computer accounts.
         * 
         * @return builder
         * 
         */
        public Builder organizationalUnitDistinguishedNames(String... organizationalUnitDistinguishedNames) {
            return organizationalUnitDistinguishedNames(List.of(organizationalUnitDistinguishedNames));
        }

        /**
         * @param serviceAccountCredentials Configuration block for the name of the directory and organizational unit (OU) to use to join the directory config to a Microsoft Active Directory domain. See `service_account_credentials` below.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccountCredentials(@Nullable Output<DirectoryConfigServiceAccountCredentialsArgs> serviceAccountCredentials) {
            $.serviceAccountCredentials = serviceAccountCredentials;
            return this;
        }

        /**
         * @param serviceAccountCredentials Configuration block for the name of the directory and organizational unit (OU) to use to join the directory config to a Microsoft Active Directory domain. See `service_account_credentials` below.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccountCredentials(DirectoryConfigServiceAccountCredentialsArgs serviceAccountCredentials) {
            return serviceAccountCredentials(Output.of(serviceAccountCredentials));
        }

        public DirectoryConfigState build() {
            return $;
        }
    }

}
