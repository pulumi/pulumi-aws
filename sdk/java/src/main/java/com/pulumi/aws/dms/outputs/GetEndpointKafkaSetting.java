// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dms.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetEndpointKafkaSetting {
    private @Nullable String broker;
    private @Nullable Boolean includeControlDetails;
    private @Nullable Boolean includeNullAndEmpty;
    private @Nullable Boolean includePartitionValue;
    private @Nullable Boolean includeTableAlterOperations;
    private @Nullable Boolean includeTransactionDetails;
    private @Nullable String messageFormat;
    private @Nullable Integer messageMaxBytes;
    private @Nullable Boolean noHexPrefix;
    private @Nullable Boolean partitionIncludeSchemaTable;
    private @Nullable String saslPassword;
    private @Nullable String saslUsername;
    private @Nullable String securityProtocol;
    private @Nullable String sslCaCertificateArn;
    private @Nullable String sslClientCertificateArn;
    private @Nullable String sslClientKeyArn;
    private @Nullable String sslClientKeyPassword;
    private @Nullable String topic;

    private GetEndpointKafkaSetting() {}
    public Optional<String> broker() {
        return Optional.ofNullable(this.broker);
    }
    public Optional<Boolean> includeControlDetails() {
        return Optional.ofNullable(this.includeControlDetails);
    }
    public Optional<Boolean> includeNullAndEmpty() {
        return Optional.ofNullable(this.includeNullAndEmpty);
    }
    public Optional<Boolean> includePartitionValue() {
        return Optional.ofNullable(this.includePartitionValue);
    }
    public Optional<Boolean> includeTableAlterOperations() {
        return Optional.ofNullable(this.includeTableAlterOperations);
    }
    public Optional<Boolean> includeTransactionDetails() {
        return Optional.ofNullable(this.includeTransactionDetails);
    }
    public Optional<String> messageFormat() {
        return Optional.ofNullable(this.messageFormat);
    }
    public Optional<Integer> messageMaxBytes() {
        return Optional.ofNullable(this.messageMaxBytes);
    }
    public Optional<Boolean> noHexPrefix() {
        return Optional.ofNullable(this.noHexPrefix);
    }
    public Optional<Boolean> partitionIncludeSchemaTable() {
        return Optional.ofNullable(this.partitionIncludeSchemaTable);
    }
    public Optional<String> saslPassword() {
        return Optional.ofNullable(this.saslPassword);
    }
    public Optional<String> saslUsername() {
        return Optional.ofNullable(this.saslUsername);
    }
    public Optional<String> securityProtocol() {
        return Optional.ofNullable(this.securityProtocol);
    }
    public Optional<String> sslCaCertificateArn() {
        return Optional.ofNullable(this.sslCaCertificateArn);
    }
    public Optional<String> sslClientCertificateArn() {
        return Optional.ofNullable(this.sslClientCertificateArn);
    }
    public Optional<String> sslClientKeyArn() {
        return Optional.ofNullable(this.sslClientKeyArn);
    }
    public Optional<String> sslClientKeyPassword() {
        return Optional.ofNullable(this.sslClientKeyPassword);
    }
    public Optional<String> topic() {
        return Optional.ofNullable(this.topic);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEndpointKafkaSetting defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String broker;
        private @Nullable Boolean includeControlDetails;
        private @Nullable Boolean includeNullAndEmpty;
        private @Nullable Boolean includePartitionValue;
        private @Nullable Boolean includeTableAlterOperations;
        private @Nullable Boolean includeTransactionDetails;
        private @Nullable String messageFormat;
        private @Nullable Integer messageMaxBytes;
        private @Nullable Boolean noHexPrefix;
        private @Nullable Boolean partitionIncludeSchemaTable;
        private @Nullable String saslPassword;
        private @Nullable String saslUsername;
        private @Nullable String securityProtocol;
        private @Nullable String sslCaCertificateArn;
        private @Nullable String sslClientCertificateArn;
        private @Nullable String sslClientKeyArn;
        private @Nullable String sslClientKeyPassword;
        private @Nullable String topic;
        public Builder() {}
        public Builder(GetEndpointKafkaSetting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.broker = defaults.broker;
    	      this.includeControlDetails = defaults.includeControlDetails;
    	      this.includeNullAndEmpty = defaults.includeNullAndEmpty;
    	      this.includePartitionValue = defaults.includePartitionValue;
    	      this.includeTableAlterOperations = defaults.includeTableAlterOperations;
    	      this.includeTransactionDetails = defaults.includeTransactionDetails;
    	      this.messageFormat = defaults.messageFormat;
    	      this.messageMaxBytes = defaults.messageMaxBytes;
    	      this.noHexPrefix = defaults.noHexPrefix;
    	      this.partitionIncludeSchemaTable = defaults.partitionIncludeSchemaTable;
    	      this.saslPassword = defaults.saslPassword;
    	      this.saslUsername = defaults.saslUsername;
    	      this.securityProtocol = defaults.securityProtocol;
    	      this.sslCaCertificateArn = defaults.sslCaCertificateArn;
    	      this.sslClientCertificateArn = defaults.sslClientCertificateArn;
    	      this.sslClientKeyArn = defaults.sslClientKeyArn;
    	      this.sslClientKeyPassword = defaults.sslClientKeyPassword;
    	      this.topic = defaults.topic;
        }

        @CustomType.Setter
        public Builder broker(@Nullable String broker) {
            this.broker = broker;
            return this;
        }
        @CustomType.Setter
        public Builder includeControlDetails(@Nullable Boolean includeControlDetails) {
            this.includeControlDetails = includeControlDetails;
            return this;
        }
        @CustomType.Setter
        public Builder includeNullAndEmpty(@Nullable Boolean includeNullAndEmpty) {
            this.includeNullAndEmpty = includeNullAndEmpty;
            return this;
        }
        @CustomType.Setter
        public Builder includePartitionValue(@Nullable Boolean includePartitionValue) {
            this.includePartitionValue = includePartitionValue;
            return this;
        }
        @CustomType.Setter
        public Builder includeTableAlterOperations(@Nullable Boolean includeTableAlterOperations) {
            this.includeTableAlterOperations = includeTableAlterOperations;
            return this;
        }
        @CustomType.Setter
        public Builder includeTransactionDetails(@Nullable Boolean includeTransactionDetails) {
            this.includeTransactionDetails = includeTransactionDetails;
            return this;
        }
        @CustomType.Setter
        public Builder messageFormat(@Nullable String messageFormat) {
            this.messageFormat = messageFormat;
            return this;
        }
        @CustomType.Setter
        public Builder messageMaxBytes(@Nullable Integer messageMaxBytes) {
            this.messageMaxBytes = messageMaxBytes;
            return this;
        }
        @CustomType.Setter
        public Builder noHexPrefix(@Nullable Boolean noHexPrefix) {
            this.noHexPrefix = noHexPrefix;
            return this;
        }
        @CustomType.Setter
        public Builder partitionIncludeSchemaTable(@Nullable Boolean partitionIncludeSchemaTable) {
            this.partitionIncludeSchemaTable = partitionIncludeSchemaTable;
            return this;
        }
        @CustomType.Setter
        public Builder saslPassword(@Nullable String saslPassword) {
            this.saslPassword = saslPassword;
            return this;
        }
        @CustomType.Setter
        public Builder saslUsername(@Nullable String saslUsername) {
            this.saslUsername = saslUsername;
            return this;
        }
        @CustomType.Setter
        public Builder securityProtocol(@Nullable String securityProtocol) {
            this.securityProtocol = securityProtocol;
            return this;
        }
        @CustomType.Setter
        public Builder sslCaCertificateArn(@Nullable String sslCaCertificateArn) {
            this.sslCaCertificateArn = sslCaCertificateArn;
            return this;
        }
        @CustomType.Setter
        public Builder sslClientCertificateArn(@Nullable String sslClientCertificateArn) {
            this.sslClientCertificateArn = sslClientCertificateArn;
            return this;
        }
        @CustomType.Setter
        public Builder sslClientKeyArn(@Nullable String sslClientKeyArn) {
            this.sslClientKeyArn = sslClientKeyArn;
            return this;
        }
        @CustomType.Setter
        public Builder sslClientKeyPassword(@Nullable String sslClientKeyPassword) {
            this.sslClientKeyPassword = sslClientKeyPassword;
            return this;
        }
        @CustomType.Setter
        public Builder topic(@Nullable String topic) {
            this.topic = topic;
            return this;
        }
        public GetEndpointKafkaSetting build() {
            final var o = new GetEndpointKafkaSetting();
            o.broker = broker;
            o.includeControlDetails = includeControlDetails;
            o.includeNullAndEmpty = includeNullAndEmpty;
            o.includePartitionValue = includePartitionValue;
            o.includeTableAlterOperations = includeTableAlterOperations;
            o.includeTransactionDetails = includeTransactionDetails;
            o.messageFormat = messageFormat;
            o.messageMaxBytes = messageMaxBytes;
            o.noHexPrefix = noHexPrefix;
            o.partitionIncludeSchemaTable = partitionIncludeSchemaTable;
            o.saslPassword = saslPassword;
            o.saslUsername = saslUsername;
            o.securityProtocol = securityProtocol;
            o.sslCaCertificateArn = sslCaCertificateArn;
            o.sslClientCertificateArn = sslClientCertificateArn;
            o.sslClientKeyArn = sslClientKeyArn;
            o.sslClientKeyPassword = sslClientKeyPassword;
            o.topic = topic;
            return o;
        }
    }
}
