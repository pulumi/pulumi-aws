// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class BucketMetadataConfigurationMetadataConfigurationDestination {
    /**
     * @return ARN of the table bucket where the metadata configuration is stored.
     * 
     */
    private String tableBucketArn;
    /**
     * @return Type of the table bucket where the metadata configuration is stored.
     * 
     */
    private String tableBucketType;
    /**
     * @return Namespace in the table bucket where the metadata tables for the metadata configuration are stored.
     * 
     */
    private String tableNamespace;

    private BucketMetadataConfigurationMetadataConfigurationDestination() {}
    /**
     * @return ARN of the table bucket where the metadata configuration is stored.
     * 
     */
    public String tableBucketArn() {
        return this.tableBucketArn;
    }
    /**
     * @return Type of the table bucket where the metadata configuration is stored.
     * 
     */
    public String tableBucketType() {
        return this.tableBucketType;
    }
    /**
     * @return Namespace in the table bucket where the metadata tables for the metadata configuration are stored.
     * 
     */
    public String tableNamespace() {
        return this.tableNamespace;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketMetadataConfigurationMetadataConfigurationDestination defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String tableBucketArn;
        private String tableBucketType;
        private String tableNamespace;
        public Builder() {}
        public Builder(BucketMetadataConfigurationMetadataConfigurationDestination defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.tableBucketArn = defaults.tableBucketArn;
    	      this.tableBucketType = defaults.tableBucketType;
    	      this.tableNamespace = defaults.tableNamespace;
        }

        @CustomType.Setter
        public Builder tableBucketArn(String tableBucketArn) {
            if (tableBucketArn == null) {
              throw new MissingRequiredPropertyException("BucketMetadataConfigurationMetadataConfigurationDestination", "tableBucketArn");
            }
            this.tableBucketArn = tableBucketArn;
            return this;
        }
        @CustomType.Setter
        public Builder tableBucketType(String tableBucketType) {
            if (tableBucketType == null) {
              throw new MissingRequiredPropertyException("BucketMetadataConfigurationMetadataConfigurationDestination", "tableBucketType");
            }
            this.tableBucketType = tableBucketType;
            return this;
        }
        @CustomType.Setter
        public Builder tableNamespace(String tableNamespace) {
            if (tableNamespace == null) {
              throw new MissingRequiredPropertyException("BucketMetadataConfigurationMetadataConfigurationDestination", "tableNamespace");
            }
            this.tableNamespace = tableNamespace;
            return this;
        }
        public BucketMetadataConfigurationMetadataConfigurationDestination build() {
            final var _resultValue = new BucketMetadataConfigurationMetadataConfigurationDestination();
            _resultValue.tableBucketArn = tableBucketArn;
            _resultValue.tableBucketType = tableBucketType;
            _resultValue.tableNamespace = tableNamespace;
            return _resultValue;
        }
    }
}
