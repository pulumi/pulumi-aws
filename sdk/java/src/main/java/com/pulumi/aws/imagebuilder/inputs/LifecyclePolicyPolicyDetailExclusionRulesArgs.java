// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.imagebuilder.inputs;

import com.pulumi.aws.imagebuilder.inputs.LifecyclePolicyPolicyDetailExclusionRulesAmisArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LifecyclePolicyPolicyDetailExclusionRulesArgs extends com.pulumi.resources.ResourceArgs {

    public static final LifecyclePolicyPolicyDetailExclusionRulesArgs Empty = new LifecyclePolicyPolicyDetailExclusionRulesArgs();

    /**
     * Lists configuration values that apply to AMIs that Image Builder should exclude from the lifecycle action. Detailed below.
     * 
     */
    @Import(name="amis")
    private @Nullable Output<LifecyclePolicyPolicyDetailExclusionRulesAmisArgs> amis;

    /**
     * @return Lists configuration values that apply to AMIs that Image Builder should exclude from the lifecycle action. Detailed below.
     * 
     */
    public Optional<Output<LifecyclePolicyPolicyDetailExclusionRulesAmisArgs>> amis() {
        return Optional.ofNullable(this.amis);
    }

    /**
     * Contains a list of tags that Image Builder uses to skip lifecycle actions for Image Builder image resources that have them.
     * 
     */
    @Import(name="tagMap")
    private @Nullable Output<Map<String,String>> tagMap;

    /**
     * @return Contains a list of tags that Image Builder uses to skip lifecycle actions for Image Builder image resources that have them.
     * 
     */
    public Optional<Output<Map<String,String>>> tagMap() {
        return Optional.ofNullable(this.tagMap);
    }

    private LifecyclePolicyPolicyDetailExclusionRulesArgs() {}

    private LifecyclePolicyPolicyDetailExclusionRulesArgs(LifecyclePolicyPolicyDetailExclusionRulesArgs $) {
        this.amis = $.amis;
        this.tagMap = $.tagMap;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LifecyclePolicyPolicyDetailExclusionRulesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LifecyclePolicyPolicyDetailExclusionRulesArgs $;

        public Builder() {
            $ = new LifecyclePolicyPolicyDetailExclusionRulesArgs();
        }

        public Builder(LifecyclePolicyPolicyDetailExclusionRulesArgs defaults) {
            $ = new LifecyclePolicyPolicyDetailExclusionRulesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param amis Lists configuration values that apply to AMIs that Image Builder should exclude from the lifecycle action. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder amis(@Nullable Output<LifecyclePolicyPolicyDetailExclusionRulesAmisArgs> amis) {
            $.amis = amis;
            return this;
        }

        /**
         * @param amis Lists configuration values that apply to AMIs that Image Builder should exclude from the lifecycle action. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder amis(LifecyclePolicyPolicyDetailExclusionRulesAmisArgs amis) {
            return amis(Output.of(amis));
        }

        /**
         * @param tagMap Contains a list of tags that Image Builder uses to skip lifecycle actions for Image Builder image resources that have them.
         * 
         * @return builder
         * 
         */
        public Builder tagMap(@Nullable Output<Map<String,String>> tagMap) {
            $.tagMap = tagMap;
            return this;
        }

        /**
         * @param tagMap Contains a list of tags that Image Builder uses to skip lifecycle actions for Image Builder image resources that have them.
         * 
         * @return builder
         * 
         */
        public Builder tagMap(Map<String,String> tagMap) {
            return tagMap(Output.of(tagMap));
        }

        public LifecyclePolicyPolicyDetailExclusionRulesArgs build() {
            return $;
        }
    }

}
