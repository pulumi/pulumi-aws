// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.networkmanager.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetConnectionResult {
    /**
     * @return ARN of the connection.
     * 
     */
    private @Nullable String arn;
    /**
     * @return ID of the second device in the connection.
     * 
     */
    private @Nullable String connectedDeviceId;
    /**
     * @return ID of the link for the second device.
     * 
     */
    private @Nullable String connectedLinkId;
    private String connectionId;
    /**
     * @return Description of the connection.
     * 
     */
    private @Nullable String description;
    /**
     * @return ID of the first device in the connection.
     * 
     */
    private @Nullable String deviceId;
    private String globalNetworkId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return ID of the link for the first device.
     * 
     */
    private @Nullable String linkId;
    /**
     * @return Key-value tags for the connection.
     * 
     */
    private @Nullable Map<String,String> tags;

    private GetConnectionResult() {}
    /**
     * @return ARN of the connection.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return ID of the second device in the connection.
     * 
     */
    public Optional<String> connectedDeviceId() {
        return Optional.ofNullable(this.connectedDeviceId);
    }
    /**
     * @return ID of the link for the second device.
     * 
     */
    public Optional<String> connectedLinkId() {
        return Optional.ofNullable(this.connectedLinkId);
    }
    public String connectionId() {
        return this.connectionId;
    }
    /**
     * @return Description of the connection.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return ID of the first device in the connection.
     * 
     */
    public Optional<String> deviceId() {
        return Optional.ofNullable(this.deviceId);
    }
    public String globalNetworkId() {
        return this.globalNetworkId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return ID of the link for the first device.
     * 
     */
    public Optional<String> linkId() {
        return Optional.ofNullable(this.linkId);
    }
    /**
     * @return Key-value tags for the connection.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConnectionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String connectedDeviceId;
        private @Nullable String connectedLinkId;
        private String connectionId;
        private @Nullable String description;
        private @Nullable String deviceId;
        private String globalNetworkId;
        private @Nullable String id;
        private @Nullable String linkId;
        private @Nullable Map<String,String> tags;
        public Builder() {}
        public Builder(GetConnectionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.connectedDeviceId = defaults.connectedDeviceId;
    	      this.connectedLinkId = defaults.connectedLinkId;
    	      this.connectionId = defaults.connectionId;
    	      this.description = defaults.description;
    	      this.deviceId = defaults.deviceId;
    	      this.globalNetworkId = defaults.globalNetworkId;
    	      this.id = defaults.id;
    	      this.linkId = defaults.linkId;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder connectedDeviceId(@Nullable String connectedDeviceId) {
            this.connectedDeviceId = connectedDeviceId;
            return this;
        }
        @CustomType.Setter
        public Builder connectedLinkId(@Nullable String connectedLinkId) {
            this.connectedLinkId = connectedLinkId;
            return this;
        }
        @CustomType.Setter
        public Builder connectionId(String connectionId) {
            this.connectionId = Objects.requireNonNull(connectionId);
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder deviceId(@Nullable String deviceId) {
            this.deviceId = deviceId;
            return this;
        }
        @CustomType.Setter
        public Builder globalNetworkId(String globalNetworkId) {
            this.globalNetworkId = Objects.requireNonNull(globalNetworkId);
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder linkId(@Nullable String linkId) {
            this.linkId = linkId;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public GetConnectionResult build() {
            final var o = new GetConnectionResult();
            o.arn = arn;
            o.connectedDeviceId = connectedDeviceId;
            o.connectedLinkId = connectedLinkId;
            o.connectionId = connectionId;
            o.description = description;
            o.deviceId = deviceId;
            o.globalNetworkId = globalNetworkId;
            o.id = id;
            o.linkId = linkId;
            o.tags = tags;
            return o;
        }
    }
}
