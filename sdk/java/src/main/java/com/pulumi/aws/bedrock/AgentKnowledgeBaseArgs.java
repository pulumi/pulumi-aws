// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock;

import com.pulumi.aws.bedrock.inputs.AgentKnowledgeBaseKnowledgeBaseConfigurationArgs;
import com.pulumi.aws.bedrock.inputs.AgentKnowledgeBaseStorageConfigurationArgs;
import com.pulumi.aws.bedrock.inputs.AgentKnowledgeBaseTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AgentKnowledgeBaseArgs extends com.pulumi.resources.ResourceArgs {

    public static final AgentKnowledgeBaseArgs Empty = new AgentKnowledgeBaseArgs();

    /**
     * A description of the knowledge base.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A description of the knowledge base.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Contains details about the embeddings model used for the knowledge base.
     * 
     */
    @Import(name="knowledgeBaseConfiguration")
    private @Nullable Output<AgentKnowledgeBaseKnowledgeBaseConfigurationArgs> knowledgeBaseConfiguration;

    /**
     * @return Contains details about the embeddings model used for the knowledge base.
     * 
     */
    public Optional<Output<AgentKnowledgeBaseKnowledgeBaseConfigurationArgs>> knowledgeBaseConfiguration() {
        return Optional.ofNullable(this.knowledgeBaseConfiguration);
    }

    /**
     * A name for the knowledge base.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return A name for the knowledge base.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ARN of the IAM role with permissions to create the knowledge base.
     * 
     */
    @Import(name="roleArn", required=true)
    private Output<String> roleArn;

    /**
     * @return The ARN of the IAM role with permissions to create the knowledge base.
     * 
     */
    public Output<String> roleArn() {
        return this.roleArn;
    }

    /**
     * Contains details about the configuration of the vector database used for the knowledge base.
     * 
     */
    @Import(name="storageConfiguration")
    private @Nullable Output<AgentKnowledgeBaseStorageConfigurationArgs> storageConfiguration;

    /**
     * @return Contains details about the configuration of the vector database used for the knowledge base.
     * 
     */
    public Optional<Output<AgentKnowledgeBaseStorageConfigurationArgs>> storageConfiguration() {
        return Optional.ofNullable(this.storageConfiguration);
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="timeouts")
    private @Nullable Output<AgentKnowledgeBaseTimeoutsArgs> timeouts;

    public Optional<Output<AgentKnowledgeBaseTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private AgentKnowledgeBaseArgs() {}

    private AgentKnowledgeBaseArgs(AgentKnowledgeBaseArgs $) {
        this.description = $.description;
        this.knowledgeBaseConfiguration = $.knowledgeBaseConfiguration;
        this.name = $.name;
        this.roleArn = $.roleArn;
        this.storageConfiguration = $.storageConfiguration;
        this.tags = $.tags;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentKnowledgeBaseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentKnowledgeBaseArgs $;

        public Builder() {
            $ = new AgentKnowledgeBaseArgs();
        }

        public Builder(AgentKnowledgeBaseArgs defaults) {
            $ = new AgentKnowledgeBaseArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description A description of the knowledge base.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A description of the knowledge base.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param knowledgeBaseConfiguration Contains details about the embeddings model used for the knowledge base.
         * 
         * @return builder
         * 
         */
        public Builder knowledgeBaseConfiguration(@Nullable Output<AgentKnowledgeBaseKnowledgeBaseConfigurationArgs> knowledgeBaseConfiguration) {
            $.knowledgeBaseConfiguration = knowledgeBaseConfiguration;
            return this;
        }

        /**
         * @param knowledgeBaseConfiguration Contains details about the embeddings model used for the knowledge base.
         * 
         * @return builder
         * 
         */
        public Builder knowledgeBaseConfiguration(AgentKnowledgeBaseKnowledgeBaseConfigurationArgs knowledgeBaseConfiguration) {
            return knowledgeBaseConfiguration(Output.of(knowledgeBaseConfiguration));
        }

        /**
         * @param name A name for the knowledge base.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name A name for the knowledge base.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param roleArn The ARN of the IAM role with permissions to create the knowledge base.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn The ARN of the IAM role with permissions to create the knowledge base.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        /**
         * @param storageConfiguration Contains details about the configuration of the vector database used for the knowledge base.
         * 
         * @return builder
         * 
         */
        public Builder storageConfiguration(@Nullable Output<AgentKnowledgeBaseStorageConfigurationArgs> storageConfiguration) {
            $.storageConfiguration = storageConfiguration;
            return this;
        }

        /**
         * @param storageConfiguration Contains details about the configuration of the vector database used for the knowledge base.
         * 
         * @return builder
         * 
         */
        public Builder storageConfiguration(AgentKnowledgeBaseStorageConfigurationArgs storageConfiguration) {
            return storageConfiguration(Output.of(storageConfiguration));
        }

        /**
         * @param tags A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder timeouts(@Nullable Output<AgentKnowledgeBaseTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(AgentKnowledgeBaseTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public AgentKnowledgeBaseArgs build() {
            if ($.roleArn == null) {
                throw new MissingRequiredPropertyException("AgentKnowledgeBaseArgs", "roleArn");
            }
            return $;
        }
    }

}
