// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.mskconnect.outputs;

import com.pulumi.aws.mskconnect.outputs.ConnectorCapacityAutoscalingScaleInPolicy;
import com.pulumi.aws.mskconnect.outputs.ConnectorCapacityAutoscalingScaleOutPolicy;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConnectorCapacityAutoscaling {
    /**
     * @return The maximum number of workers allocated to the connector.
     * 
     */
    private Integer maxWorkerCount;
    /**
     * @return The number of microcontroller units (MCUs) allocated to each connector worker. Valid values: `1`, `2`, `4`, `8`. The default value is `1`.
     * 
     */
    private @Nullable Integer mcuCount;
    /**
     * @return The minimum number of workers allocated to the connector.
     * 
     */
    private Integer minWorkerCount;
    /**
     * @return The scale-in policy for the connector. See below.
     * 
     */
    private @Nullable ConnectorCapacityAutoscalingScaleInPolicy scaleInPolicy;
    /**
     * @return The scale-out policy for the connector. See below.
     * 
     */
    private @Nullable ConnectorCapacityAutoscalingScaleOutPolicy scaleOutPolicy;

    private ConnectorCapacityAutoscaling() {}
    /**
     * @return The maximum number of workers allocated to the connector.
     * 
     */
    public Integer maxWorkerCount() {
        return this.maxWorkerCount;
    }
    /**
     * @return The number of microcontroller units (MCUs) allocated to each connector worker. Valid values: `1`, `2`, `4`, `8`. The default value is `1`.
     * 
     */
    public Optional<Integer> mcuCount() {
        return Optional.ofNullable(this.mcuCount);
    }
    /**
     * @return The minimum number of workers allocated to the connector.
     * 
     */
    public Integer minWorkerCount() {
        return this.minWorkerCount;
    }
    /**
     * @return The scale-in policy for the connector. See below.
     * 
     */
    public Optional<ConnectorCapacityAutoscalingScaleInPolicy> scaleInPolicy() {
        return Optional.ofNullable(this.scaleInPolicy);
    }
    /**
     * @return The scale-out policy for the connector. See below.
     * 
     */
    public Optional<ConnectorCapacityAutoscalingScaleOutPolicy> scaleOutPolicy() {
        return Optional.ofNullable(this.scaleOutPolicy);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectorCapacityAutoscaling defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer maxWorkerCount;
        private @Nullable Integer mcuCount;
        private Integer minWorkerCount;
        private @Nullable ConnectorCapacityAutoscalingScaleInPolicy scaleInPolicy;
        private @Nullable ConnectorCapacityAutoscalingScaleOutPolicy scaleOutPolicy;
        public Builder() {}
        public Builder(ConnectorCapacityAutoscaling defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxWorkerCount = defaults.maxWorkerCount;
    	      this.mcuCount = defaults.mcuCount;
    	      this.minWorkerCount = defaults.minWorkerCount;
    	      this.scaleInPolicy = defaults.scaleInPolicy;
    	      this.scaleOutPolicy = defaults.scaleOutPolicy;
        }

        @CustomType.Setter
        public Builder maxWorkerCount(Integer maxWorkerCount) {
            if (maxWorkerCount == null) {
              throw new MissingRequiredPropertyException("ConnectorCapacityAutoscaling", "maxWorkerCount");
            }
            this.maxWorkerCount = maxWorkerCount;
            return this;
        }
        @CustomType.Setter
        public Builder mcuCount(@Nullable Integer mcuCount) {

            this.mcuCount = mcuCount;
            return this;
        }
        @CustomType.Setter
        public Builder minWorkerCount(Integer minWorkerCount) {
            if (minWorkerCount == null) {
              throw new MissingRequiredPropertyException("ConnectorCapacityAutoscaling", "minWorkerCount");
            }
            this.minWorkerCount = minWorkerCount;
            return this;
        }
        @CustomType.Setter
        public Builder scaleInPolicy(@Nullable ConnectorCapacityAutoscalingScaleInPolicy scaleInPolicy) {

            this.scaleInPolicy = scaleInPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder scaleOutPolicy(@Nullable ConnectorCapacityAutoscalingScaleOutPolicy scaleOutPolicy) {

            this.scaleOutPolicy = scaleOutPolicy;
            return this;
        }
        public ConnectorCapacityAutoscaling build() {
            final var _resultValue = new ConnectorCapacityAutoscaling();
            _resultValue.maxWorkerCount = maxWorkerCount;
            _resultValue.mcuCount = mcuCount;
            _resultValue.minWorkerCount = minWorkerCount;
            _resultValue.scaleInPolicy = scaleInPolicy;
            _resultValue.scaleOutPolicy = scaleOutPolicy;
            return _resultValue;
        }
    }
}
