// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.TooltipOptionsFieldBaseTooltipTooltipFieldArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TooltipOptionsFieldBaseTooltipArgs extends com.pulumi.resources.ResourceArgs {

    public static final TooltipOptionsFieldBaseTooltipArgs Empty = new TooltipOptionsFieldBaseTooltipArgs();

    @Import(name="aggregationVisibility")
    private @Nullable Output<String> aggregationVisibility;

    public Optional<Output<String>> aggregationVisibility() {
        return Optional.ofNullable(this.aggregationVisibility);
    }

    @Import(name="tooltipFields")
    private @Nullable Output<List<TooltipOptionsFieldBaseTooltipTooltipFieldArgs>> tooltipFields;

    public Optional<Output<List<TooltipOptionsFieldBaseTooltipTooltipFieldArgs>>> tooltipFields() {
        return Optional.ofNullable(this.tooltipFields);
    }

    @Import(name="tooltipTitleType")
    private @Nullable Output<String> tooltipTitleType;

    public Optional<Output<String>> tooltipTitleType() {
        return Optional.ofNullable(this.tooltipTitleType);
    }

    private TooltipOptionsFieldBaseTooltipArgs() {}

    private TooltipOptionsFieldBaseTooltipArgs(TooltipOptionsFieldBaseTooltipArgs $) {
        this.aggregationVisibility = $.aggregationVisibility;
        this.tooltipFields = $.tooltipFields;
        this.tooltipTitleType = $.tooltipTitleType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TooltipOptionsFieldBaseTooltipArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TooltipOptionsFieldBaseTooltipArgs $;

        public Builder() {
            $ = new TooltipOptionsFieldBaseTooltipArgs();
        }

        public Builder(TooltipOptionsFieldBaseTooltipArgs defaults) {
            $ = new TooltipOptionsFieldBaseTooltipArgs(Objects.requireNonNull(defaults));
        }

        public Builder aggregationVisibility(@Nullable Output<String> aggregationVisibility) {
            $.aggregationVisibility = aggregationVisibility;
            return this;
        }

        public Builder aggregationVisibility(String aggregationVisibility) {
            return aggregationVisibility(Output.of(aggregationVisibility));
        }

        public Builder tooltipFields(@Nullable Output<List<TooltipOptionsFieldBaseTooltipTooltipFieldArgs>> tooltipFields) {
            $.tooltipFields = tooltipFields;
            return this;
        }

        public Builder tooltipFields(List<TooltipOptionsFieldBaseTooltipTooltipFieldArgs> tooltipFields) {
            return tooltipFields(Output.of(tooltipFields));
        }

        public Builder tooltipFields(TooltipOptionsFieldBaseTooltipTooltipFieldArgs... tooltipFields) {
            return tooltipFields(List.of(tooltipFields));
        }

        public Builder tooltipTitleType(@Nullable Output<String> tooltipTitleType) {
            $.tooltipTitleType = tooltipTitleType;
            return this;
        }

        public Builder tooltipTitleType(String tooltipTitleType) {
            return tooltipTitleType(Output.of(tooltipTitleType));
        }

        public TooltipOptionsFieldBaseTooltipArgs build() {
            return $;
        }
    }

}
