// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lambda.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EventSourceMappingDocumentDbEventSourceConfig {
    /**
     * @return The name of the collection to consume within the database. If you do not specify a collection, Lambda consumes all collections.
     * 
     */
    private @Nullable String collectionName;
    /**
     * @return The name of the database to consume within the DocumentDB cluster.
     * 
     */
    private String databaseName;
    /**
     * @return Determines what DocumentDB sends to your event stream during document update operations. If set to `UpdateLookup`, DocumentDB sends a delta describing the changes, along with a copy of the entire document. Otherwise, DocumentDB sends only a partial document that contains the changes. Valid values: `UpdateLookup`, `Default`.
     * 
     */
    private @Nullable String fullDocument;

    private EventSourceMappingDocumentDbEventSourceConfig() {}
    /**
     * @return The name of the collection to consume within the database. If you do not specify a collection, Lambda consumes all collections.
     * 
     */
    public Optional<String> collectionName() {
        return Optional.ofNullable(this.collectionName);
    }
    /**
     * @return The name of the database to consume within the DocumentDB cluster.
     * 
     */
    public String databaseName() {
        return this.databaseName;
    }
    /**
     * @return Determines what DocumentDB sends to your event stream during document update operations. If set to `UpdateLookup`, DocumentDB sends a delta describing the changes, along with a copy of the entire document. Otherwise, DocumentDB sends only a partial document that contains the changes. Valid values: `UpdateLookup`, `Default`.
     * 
     */
    public Optional<String> fullDocument() {
        return Optional.ofNullable(this.fullDocument);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EventSourceMappingDocumentDbEventSourceConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String collectionName;
        private String databaseName;
        private @Nullable String fullDocument;
        public Builder() {}
        public Builder(EventSourceMappingDocumentDbEventSourceConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.collectionName = defaults.collectionName;
    	      this.databaseName = defaults.databaseName;
    	      this.fullDocument = defaults.fullDocument;
        }

        @CustomType.Setter
        public Builder collectionName(@Nullable String collectionName) {
            this.collectionName = collectionName;
            return this;
        }
        @CustomType.Setter
        public Builder databaseName(String databaseName) {
            this.databaseName = Objects.requireNonNull(databaseName);
            return this;
        }
        @CustomType.Setter
        public Builder fullDocument(@Nullable String fullDocument) {
            this.fullDocument = fullDocument;
            return this;
        }
        public EventSourceMappingDocumentDbEventSourceConfig build() {
            final var _resultValue = new EventSourceMappingDocumentDbEventSourceConfig();
            _resultValue.collectionName = collectionName;
            _resultValue.databaseName = databaseName;
            _resultValue.fullDocument = fullDocument;
            return _resultValue;
        }
    }
}
