// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kinesis.outputs;

import com.pulumi.aws.kinesis.outputs.FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfiguration;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FirehoseDeliveryStreamMskSourceConfiguration {
    /**
     * @return The authentication configuration of the Amazon MSK cluster. See `authentication_configuration` block below for details.
     * 
     */
    private FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfiguration authenticationConfiguration;
    /**
     * @return The ARN of the Amazon MSK cluster.
     * 
     */
    private String mskClusterArn;
    /**
     * @return The start date and time in UTC for the offset position within your MSK topic from where Firehose begins to read. By default, this is set to timestamp when Firehose becomes Active. If you want to create a Firehose stream with Earliest start position set the `read_from_timestamp` parameter to Epoch (1970-01-01T00:00:00Z).
     * 
     */
    private @Nullable String readFromTimestamp;
    /**
     * @return The topic name within the Amazon MSK cluster.
     * 
     */
    private String topicName;

    private FirehoseDeliveryStreamMskSourceConfiguration() {}
    /**
     * @return The authentication configuration of the Amazon MSK cluster. See `authentication_configuration` block below for details.
     * 
     */
    public FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfiguration authenticationConfiguration() {
        return this.authenticationConfiguration;
    }
    /**
     * @return The ARN of the Amazon MSK cluster.
     * 
     */
    public String mskClusterArn() {
        return this.mskClusterArn;
    }
    /**
     * @return The start date and time in UTC for the offset position within your MSK topic from where Firehose begins to read. By default, this is set to timestamp when Firehose becomes Active. If you want to create a Firehose stream with Earliest start position set the `read_from_timestamp` parameter to Epoch (1970-01-01T00:00:00Z).
     * 
     */
    public Optional<String> readFromTimestamp() {
        return Optional.ofNullable(this.readFromTimestamp);
    }
    /**
     * @return The topic name within the Amazon MSK cluster.
     * 
     */
    public String topicName() {
        return this.topicName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FirehoseDeliveryStreamMskSourceConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfiguration authenticationConfiguration;
        private String mskClusterArn;
        private @Nullable String readFromTimestamp;
        private String topicName;
        public Builder() {}
        public Builder(FirehoseDeliveryStreamMskSourceConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authenticationConfiguration = defaults.authenticationConfiguration;
    	      this.mskClusterArn = defaults.mskClusterArn;
    	      this.readFromTimestamp = defaults.readFromTimestamp;
    	      this.topicName = defaults.topicName;
        }

        @CustomType.Setter
        public Builder authenticationConfiguration(FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfiguration authenticationConfiguration) {
            if (authenticationConfiguration == null) {
              throw new MissingRequiredPropertyException("FirehoseDeliveryStreamMskSourceConfiguration", "authenticationConfiguration");
            }
            this.authenticationConfiguration = authenticationConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder mskClusterArn(String mskClusterArn) {
            if (mskClusterArn == null) {
              throw new MissingRequiredPropertyException("FirehoseDeliveryStreamMskSourceConfiguration", "mskClusterArn");
            }
            this.mskClusterArn = mskClusterArn;
            return this;
        }
        @CustomType.Setter
        public Builder readFromTimestamp(@Nullable String readFromTimestamp) {

            this.readFromTimestamp = readFromTimestamp;
            return this;
        }
        @CustomType.Setter
        public Builder topicName(String topicName) {
            if (topicName == null) {
              throw new MissingRequiredPropertyException("FirehoseDeliveryStreamMskSourceConfiguration", "topicName");
            }
            this.topicName = topicName;
            return this;
        }
        public FirehoseDeliveryStreamMskSourceConfiguration build() {
            final var _resultValue = new FirehoseDeliveryStreamMskSourceConfiguration();
            _resultValue.authenticationConfiguration = authenticationConfiguration;
            _resultValue.mskClusterArn = mskClusterArn;
            _resultValue.readFromTimestamp = readFromTimestamp;
            _resultValue.topicName = topicName;
            return _resultValue;
        }
    }
}
