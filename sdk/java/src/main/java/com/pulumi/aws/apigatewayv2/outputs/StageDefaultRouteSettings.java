// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apigatewayv2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class StageDefaultRouteSettings {
    /**
     * @return Whether data trace logging is enabled for the route. Affects the log entries pushed to Amazon CloudWatch Logs.
     * Defaults to `false`. Supported only for WebSocket APIs.
     * 
     */
    private @Nullable Boolean dataTraceEnabled;
    /**
     * @return Whether detailed metrics are enabled for the route. Defaults to `false`.
     * 
     */
    private @Nullable Boolean detailedMetricsEnabled;
    /**
     * @return Logging level for the route. Affects the log entries pushed to Amazon CloudWatch Logs.
     * Valid values: `ERROR`, `INFO`, `OFF`. Defaults to `OFF`. Supported only for WebSocket APIs. This provider will only perform drift detection of its value when present in a configuration.
     * 
     */
    private @Nullable String loggingLevel;
    /**
     * @return Throttling burst limit for the route.
     * 
     */
    private @Nullable Integer throttlingBurstLimit;
    /**
     * @return Throttling rate limit for the route.
     * 
     */
    private @Nullable Double throttlingRateLimit;

    private StageDefaultRouteSettings() {}
    /**
     * @return Whether data trace logging is enabled for the route. Affects the log entries pushed to Amazon CloudWatch Logs.
     * Defaults to `false`. Supported only for WebSocket APIs.
     * 
     */
    public Optional<Boolean> dataTraceEnabled() {
        return Optional.ofNullable(this.dataTraceEnabled);
    }
    /**
     * @return Whether detailed metrics are enabled for the route. Defaults to `false`.
     * 
     */
    public Optional<Boolean> detailedMetricsEnabled() {
        return Optional.ofNullable(this.detailedMetricsEnabled);
    }
    /**
     * @return Logging level for the route. Affects the log entries pushed to Amazon CloudWatch Logs.
     * Valid values: `ERROR`, `INFO`, `OFF`. Defaults to `OFF`. Supported only for WebSocket APIs. This provider will only perform drift detection of its value when present in a configuration.
     * 
     */
    public Optional<String> loggingLevel() {
        return Optional.ofNullable(this.loggingLevel);
    }
    /**
     * @return Throttling burst limit for the route.
     * 
     */
    public Optional<Integer> throttlingBurstLimit() {
        return Optional.ofNullable(this.throttlingBurstLimit);
    }
    /**
     * @return Throttling rate limit for the route.
     * 
     */
    public Optional<Double> throttlingRateLimit() {
        return Optional.ofNullable(this.throttlingRateLimit);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StageDefaultRouteSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean dataTraceEnabled;
        private @Nullable Boolean detailedMetricsEnabled;
        private @Nullable String loggingLevel;
        private @Nullable Integer throttlingBurstLimit;
        private @Nullable Double throttlingRateLimit;
        public Builder() {}
        public Builder(StageDefaultRouteSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataTraceEnabled = defaults.dataTraceEnabled;
    	      this.detailedMetricsEnabled = defaults.detailedMetricsEnabled;
    	      this.loggingLevel = defaults.loggingLevel;
    	      this.throttlingBurstLimit = defaults.throttlingBurstLimit;
    	      this.throttlingRateLimit = defaults.throttlingRateLimit;
        }

        @CustomType.Setter
        public Builder dataTraceEnabled(@Nullable Boolean dataTraceEnabled) {
            this.dataTraceEnabled = dataTraceEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder detailedMetricsEnabled(@Nullable Boolean detailedMetricsEnabled) {
            this.detailedMetricsEnabled = detailedMetricsEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder loggingLevel(@Nullable String loggingLevel) {
            this.loggingLevel = loggingLevel;
            return this;
        }
        @CustomType.Setter
        public Builder throttlingBurstLimit(@Nullable Integer throttlingBurstLimit) {
            this.throttlingBurstLimit = throttlingBurstLimit;
            return this;
        }
        @CustomType.Setter
        public Builder throttlingRateLimit(@Nullable Double throttlingRateLimit) {
            this.throttlingRateLimit = throttlingRateLimit;
            return this;
        }
        public StageDefaultRouteSettings build() {
            final var o = new StageDefaultRouteSettings();
            o.dataTraceEnabled = dataTraceEnabled;
            o.detailedMetricsEnabled = detailedMetricsEnabled;
            o.loggingLevel = loggingLevel;
            o.throttlingBurstLimit = throttlingBurstLimit;
            o.throttlingRateLimit = throttlingRateLimit;
            return o;
        }
    }
}
