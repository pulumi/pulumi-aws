// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.athena;

import com.pulumi.aws.athena.inputs.CapacityReservationTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CapacityReservationArgs extends com.pulumi.resources.ResourceArgs {

    public static final CapacityReservationArgs Empty = new CapacityReservationArgs();

    /**
     * Name of the capacity reservation.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the capacity reservation.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Number of data processing units requested. Must be at least `24` units.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="targetDpus", required=true)
    private Output<Integer> targetDpus;

    /**
     * @return Number of data processing units requested. Must be at least `24` units.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<Integer> targetDpus() {
        return this.targetDpus;
    }

    @Import(name="timeouts")
    private @Nullable Output<CapacityReservationTimeoutsArgs> timeouts;

    public Optional<Output<CapacityReservationTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private CapacityReservationArgs() {}

    private CapacityReservationArgs(CapacityReservationArgs $) {
        this.name = $.name;
        this.tags = $.tags;
        this.targetDpus = $.targetDpus;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CapacityReservationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CapacityReservationArgs $;

        public Builder() {
            $ = new CapacityReservationArgs();
        }

        public Builder(CapacityReservationArgs defaults) {
            $ = new CapacityReservationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Name of the capacity reservation.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the capacity reservation.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param tags Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param targetDpus Number of data processing units requested. Must be at least `24` units.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder targetDpus(Output<Integer> targetDpus) {
            $.targetDpus = targetDpus;
            return this;
        }

        /**
         * @param targetDpus Number of data processing units requested. Must be at least `24` units.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder targetDpus(Integer targetDpus) {
            return targetDpus(Output.of(targetDpus));
        }

        public Builder timeouts(@Nullable Output<CapacityReservationTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(CapacityReservationTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public CapacityReservationArgs build() {
            if ($.targetDpus == null) {
                throw new MissingRequiredPropertyException("CapacityReservationArgs", "targetDpus");
            }
            return $;
        }
    }

}
