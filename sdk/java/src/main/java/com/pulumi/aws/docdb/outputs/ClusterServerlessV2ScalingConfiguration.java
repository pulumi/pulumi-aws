// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.docdb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.util.Objects;

@CustomType
public final class ClusterServerlessV2ScalingConfiguration {
    /**
     * @return Maximum number of Amazon DocumentDB capacity units (DCUs) for an instance in an Amazon DocumentDB Serverless cluster. Valid values are multiples of 0.5 between 1 and 256.
     * 
     */
    private Double maxCapacity;
    /**
     * @return Minimum number of Amazon DocumentDB capacity units (DCUs) for an instance in an Amazon DocumentDB Serverless cluster. Valid values are multiples of 0.5 between 0.5 and 256.
     * 
     */
    private Double minCapacity;

    private ClusterServerlessV2ScalingConfiguration() {}
    /**
     * @return Maximum number of Amazon DocumentDB capacity units (DCUs) for an instance in an Amazon DocumentDB Serverless cluster. Valid values are multiples of 0.5 between 1 and 256.
     * 
     */
    public Double maxCapacity() {
        return this.maxCapacity;
    }
    /**
     * @return Minimum number of Amazon DocumentDB capacity units (DCUs) for an instance in an Amazon DocumentDB Serverless cluster. Valid values are multiples of 0.5 between 0.5 and 256.
     * 
     */
    public Double minCapacity() {
        return this.minCapacity;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterServerlessV2ScalingConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double maxCapacity;
        private Double minCapacity;
        public Builder() {}
        public Builder(ClusterServerlessV2ScalingConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxCapacity = defaults.maxCapacity;
    	      this.minCapacity = defaults.minCapacity;
        }

        @CustomType.Setter
        public Builder maxCapacity(Double maxCapacity) {
            if (maxCapacity == null) {
              throw new MissingRequiredPropertyException("ClusterServerlessV2ScalingConfiguration", "maxCapacity");
            }
            this.maxCapacity = maxCapacity;
            return this;
        }
        @CustomType.Setter
        public Builder minCapacity(Double minCapacity) {
            if (minCapacity == null) {
              throw new MissingRequiredPropertyException("ClusterServerlessV2ScalingConfiguration", "minCapacity");
            }
            this.minCapacity = minCapacity;
            return this;
        }
        public ClusterServerlessV2ScalingConfiguration build() {
            final var _resultValue = new ClusterServerlessV2ScalingConfiguration();
            _resultValue.maxCapacity = maxCapacity;
            _resultValue.minCapacity = minCapacity;
            return _resultValue;
        }
    }
}
