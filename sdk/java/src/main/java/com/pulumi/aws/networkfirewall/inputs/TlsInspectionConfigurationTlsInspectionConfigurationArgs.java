// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.networkfirewall.inputs;

import com.pulumi.aws.networkfirewall.inputs.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TlsInspectionConfigurationTlsInspectionConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final TlsInspectionConfigurationTlsInspectionConfigurationArgs Empty = new TlsInspectionConfigurationTlsInspectionConfigurationArgs();

    /**
     * Server certificate configurations that are associated with the TLS configuration. Detailed below.
     * 
     */
    @Import(name="serverCertificateConfiguration")
    private @Nullable Output<TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationArgs> serverCertificateConfiguration;

    /**
     * @return Server certificate configurations that are associated with the TLS configuration. Detailed below.
     * 
     */
    public Optional<Output<TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationArgs>> serverCertificateConfiguration() {
        return Optional.ofNullable(this.serverCertificateConfiguration);
    }

    private TlsInspectionConfigurationTlsInspectionConfigurationArgs() {}

    private TlsInspectionConfigurationTlsInspectionConfigurationArgs(TlsInspectionConfigurationTlsInspectionConfigurationArgs $) {
        this.serverCertificateConfiguration = $.serverCertificateConfiguration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TlsInspectionConfigurationTlsInspectionConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TlsInspectionConfigurationTlsInspectionConfigurationArgs $;

        public Builder() {
            $ = new TlsInspectionConfigurationTlsInspectionConfigurationArgs();
        }

        public Builder(TlsInspectionConfigurationTlsInspectionConfigurationArgs defaults) {
            $ = new TlsInspectionConfigurationTlsInspectionConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param serverCertificateConfiguration Server certificate configurations that are associated with the TLS configuration. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder serverCertificateConfiguration(@Nullable Output<TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationArgs> serverCertificateConfiguration) {
            $.serverCertificateConfiguration = serverCertificateConfiguration;
            return this;
        }

        /**
         * @param serverCertificateConfiguration Server certificate configurations that are associated with the TLS configuration. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder serverCertificateConfiguration(TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationArgs serverCertificateConfiguration) {
            return serverCertificateConfiguration(Output.of(serverCertificateConfiguration));
        }

        public TlsInspectionConfigurationTlsInspectionConfigurationArgs build() {
            return $;
        }
    }

}
