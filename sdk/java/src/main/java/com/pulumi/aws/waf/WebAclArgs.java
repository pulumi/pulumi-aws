// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.waf;

import com.pulumi.aws.waf.inputs.WebAclDefaultActionArgs;
import com.pulumi.aws.waf.inputs.WebAclLoggingConfigurationArgs;
import com.pulumi.aws.waf.inputs.WebAclRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WebAclArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebAclArgs Empty = new WebAclArgs();

    /**
     * Configuration block with action that you want AWS WAF to take when a request doesn&#39;t match the criteria in any of the rules that are associated with the web ACL. Detailed below.
     * 
     */
    @Import(name="defaultAction", required=true)
    private Output<WebAclDefaultActionArgs> defaultAction;

    /**
     * @return Configuration block with action that you want AWS WAF to take when a request doesn&#39;t match the criteria in any of the rules that are associated with the web ACL. Detailed below.
     * 
     */
    public Output<WebAclDefaultActionArgs> defaultAction() {
        return this.defaultAction;
    }

    /**
     * Configuration block to enable WAF logging. Detailed below.
     * 
     */
    @Import(name="loggingConfiguration")
    private @Nullable Output<WebAclLoggingConfigurationArgs> loggingConfiguration;

    /**
     * @return Configuration block to enable WAF logging. Detailed below.
     * 
     */
    public Optional<Output<WebAclLoggingConfigurationArgs>> loggingConfiguration() {
        return Optional.ofNullable(this.loggingConfiguration);
    }

    /**
     * The name or description for the Amazon CloudWatch metric of this web ACL.
     * 
     */
    @Import(name="metricName", required=true)
    private Output<String> metricName;

    /**
     * @return The name or description for the Amazon CloudWatch metric of this web ACL.
     * 
     */
    public Output<String> metricName() {
        return this.metricName;
    }

    /**
     * The name or description of the web ACL.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name or description of the web ACL.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Configuration blocks containing rules to associate with the web ACL and the settings for each rule. Detailed below.
     * 
     */
    @Import(name="rules")
    private @Nullable Output<List<WebAclRuleArgs>> rules;

    /**
     * @return Configuration blocks containing rules to associate with the web ACL and the settings for each rule. Detailed below.
     * 
     */
    public Optional<Output<List<WebAclRuleArgs>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private WebAclArgs() {}

    private WebAclArgs(WebAclArgs $) {
        this.defaultAction = $.defaultAction;
        this.loggingConfiguration = $.loggingConfiguration;
        this.metricName = $.metricName;
        this.name = $.name;
        this.rules = $.rules;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebAclArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebAclArgs $;

        public Builder() {
            $ = new WebAclArgs();
        }

        public Builder(WebAclArgs defaults) {
            $ = new WebAclArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param defaultAction Configuration block with action that you want AWS WAF to take when a request doesn&#39;t match the criteria in any of the rules that are associated with the web ACL. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder defaultAction(Output<WebAclDefaultActionArgs> defaultAction) {
            $.defaultAction = defaultAction;
            return this;
        }

        /**
         * @param defaultAction Configuration block with action that you want AWS WAF to take when a request doesn&#39;t match the criteria in any of the rules that are associated with the web ACL. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder defaultAction(WebAclDefaultActionArgs defaultAction) {
            return defaultAction(Output.of(defaultAction));
        }

        /**
         * @param loggingConfiguration Configuration block to enable WAF logging. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder loggingConfiguration(@Nullable Output<WebAclLoggingConfigurationArgs> loggingConfiguration) {
            $.loggingConfiguration = loggingConfiguration;
            return this;
        }

        /**
         * @param loggingConfiguration Configuration block to enable WAF logging. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder loggingConfiguration(WebAclLoggingConfigurationArgs loggingConfiguration) {
            return loggingConfiguration(Output.of(loggingConfiguration));
        }

        /**
         * @param metricName The name or description for the Amazon CloudWatch metric of this web ACL.
         * 
         * @return builder
         * 
         */
        public Builder metricName(Output<String> metricName) {
            $.metricName = metricName;
            return this;
        }

        /**
         * @param metricName The name or description for the Amazon CloudWatch metric of this web ACL.
         * 
         * @return builder
         * 
         */
        public Builder metricName(String metricName) {
            return metricName(Output.of(metricName));
        }

        /**
         * @param name The name or description of the web ACL.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name or description of the web ACL.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param rules Configuration blocks containing rules to associate with the web ACL and the settings for each rule. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder rules(@Nullable Output<List<WebAclRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules Configuration blocks containing rules to associate with the web ACL and the settings for each rule. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder rules(List<WebAclRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules Configuration blocks containing rules to associate with the web ACL and the settings for each rule. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder rules(WebAclRuleArgs... rules) {
            return rules(List.of(rules));
        }

        /**
         * @param tags Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public WebAclArgs build() {
            if ($.defaultAction == null) {
                throw new MissingRequiredPropertyException("WebAclArgs", "defaultAction");
            }
            if ($.metricName == null) {
                throw new MissingRequiredPropertyException("WebAclArgs", "metricName");
            }
            return $;
        }
    }

}
