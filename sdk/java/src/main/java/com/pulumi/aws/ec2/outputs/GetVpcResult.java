// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.outputs;

import com.pulumi.aws.ec2.outputs.GetVpcCidrBlockAssociation;
import com.pulumi.aws.ec2.outputs.GetVpcFilter;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVpcResult {
    /**
     * @return ARN of VPC
     * 
     */
    private @Nullable String arn;
    /**
     * @return CIDR block for the association.
     * 
     */
    private @Nullable String cidrBlock;
    private @Nullable List<GetVpcCidrBlockAssociation> cidrBlockAssociations;
    private @Nullable Boolean default_;
    private @Nullable String dhcpOptionsId;
    /**
     * @return Whether or not the VPC has DNS hostname support
     * 
     */
    private @Nullable Boolean enableDnsHostnames;
    /**
     * @return Whether or not the VPC has DNS support
     * 
     */
    private @Nullable Boolean enableDnsSupport;
    /**
     * @return Whether Network Address Usage metrics are enabled for your VPC
     * 
     */
    private @Nullable Boolean enableNetworkAddressUsageMetrics;
    private @Nullable List<GetVpcFilter> filters;
    private @Nullable String id;
    /**
     * @return Allowed tenancy of instances launched into the
     * selected VPC. May be any of `&#34;default&#34;`, `&#34;dedicated&#34;`, or `&#34;host&#34;`.
     * 
     */
    private @Nullable String instanceTenancy;
    /**
     * @return Association ID for the IPv6 CIDR block.
     * 
     */
    private @Nullable String ipv6AssociationId;
    /**
     * @return IPv6 CIDR block.
     * 
     */
    private @Nullable String ipv6CidrBlock;
    /**
     * @return ID of the main route table associated with this VPC.
     * 
     */
    private @Nullable String mainRouteTableId;
    /**
     * @return ID of the AWS account that owns the VPC.
     * 
     */
    private @Nullable String ownerId;
    /**
     * @return State of the association.
     * 
     */
    private @Nullable String state;
    private @Nullable Map<String,String> tags;

    private GetVpcResult() {}
    /**
     * @return ARN of VPC
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return CIDR block for the association.
     * 
     */
    public Optional<String> cidrBlock() {
        return Optional.ofNullable(this.cidrBlock);
    }
    public List<GetVpcCidrBlockAssociation> cidrBlockAssociations() {
        return this.cidrBlockAssociations == null ? List.of() : this.cidrBlockAssociations;
    }
    public Optional<Boolean> default_() {
        return Optional.ofNullable(this.default_);
    }
    public Optional<String> dhcpOptionsId() {
        return Optional.ofNullable(this.dhcpOptionsId);
    }
    /**
     * @return Whether or not the VPC has DNS hostname support
     * 
     */
    public Optional<Boolean> enableDnsHostnames() {
        return Optional.ofNullable(this.enableDnsHostnames);
    }
    /**
     * @return Whether or not the VPC has DNS support
     * 
     */
    public Optional<Boolean> enableDnsSupport() {
        return Optional.ofNullable(this.enableDnsSupport);
    }
    /**
     * @return Whether Network Address Usage metrics are enabled for your VPC
     * 
     */
    public Optional<Boolean> enableNetworkAddressUsageMetrics() {
        return Optional.ofNullable(this.enableNetworkAddressUsageMetrics);
    }
    public List<GetVpcFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Allowed tenancy of instances launched into the
     * selected VPC. May be any of `&#34;default&#34;`, `&#34;dedicated&#34;`, or `&#34;host&#34;`.
     * 
     */
    public Optional<String> instanceTenancy() {
        return Optional.ofNullable(this.instanceTenancy);
    }
    /**
     * @return Association ID for the IPv6 CIDR block.
     * 
     */
    public Optional<String> ipv6AssociationId() {
        return Optional.ofNullable(this.ipv6AssociationId);
    }
    /**
     * @return IPv6 CIDR block.
     * 
     */
    public Optional<String> ipv6CidrBlock() {
        return Optional.ofNullable(this.ipv6CidrBlock);
    }
    /**
     * @return ID of the main route table associated with this VPC.
     * 
     */
    public Optional<String> mainRouteTableId() {
        return Optional.ofNullable(this.mainRouteTableId);
    }
    /**
     * @return ID of the AWS account that owns the VPC.
     * 
     */
    public Optional<String> ownerId() {
        return Optional.ofNullable(this.ownerId);
    }
    /**
     * @return State of the association.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVpcResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String cidrBlock;
        private @Nullable List<GetVpcCidrBlockAssociation> cidrBlockAssociations;
        private @Nullable Boolean default_;
        private @Nullable String dhcpOptionsId;
        private @Nullable Boolean enableDnsHostnames;
        private @Nullable Boolean enableDnsSupport;
        private @Nullable Boolean enableNetworkAddressUsageMetrics;
        private @Nullable List<GetVpcFilter> filters;
        private @Nullable String id;
        private @Nullable String instanceTenancy;
        private @Nullable String ipv6AssociationId;
        private @Nullable String ipv6CidrBlock;
        private @Nullable String mainRouteTableId;
        private @Nullable String ownerId;
        private @Nullable String state;
        private @Nullable Map<String,String> tags;
        public Builder() {}
        public Builder(GetVpcResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.cidrBlock = defaults.cidrBlock;
    	      this.cidrBlockAssociations = defaults.cidrBlockAssociations;
    	      this.default_ = defaults.default_;
    	      this.dhcpOptionsId = defaults.dhcpOptionsId;
    	      this.enableDnsHostnames = defaults.enableDnsHostnames;
    	      this.enableDnsSupport = defaults.enableDnsSupport;
    	      this.enableNetworkAddressUsageMetrics = defaults.enableNetworkAddressUsageMetrics;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.instanceTenancy = defaults.instanceTenancy;
    	      this.ipv6AssociationId = defaults.ipv6AssociationId;
    	      this.ipv6CidrBlock = defaults.ipv6CidrBlock;
    	      this.mainRouteTableId = defaults.mainRouteTableId;
    	      this.ownerId = defaults.ownerId;
    	      this.state = defaults.state;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder cidrBlock(@Nullable String cidrBlock) {
            this.cidrBlock = cidrBlock;
            return this;
        }
        @CustomType.Setter
        public Builder cidrBlockAssociations(@Nullable List<GetVpcCidrBlockAssociation> cidrBlockAssociations) {
            this.cidrBlockAssociations = cidrBlockAssociations;
            return this;
        }
        public Builder cidrBlockAssociations(GetVpcCidrBlockAssociation... cidrBlockAssociations) {
            return cidrBlockAssociations(List.of(cidrBlockAssociations));
        }
        @CustomType.Setter("default")
        public Builder default_(@Nullable Boolean default_) {
            this.default_ = default_;
            return this;
        }
        @CustomType.Setter
        public Builder dhcpOptionsId(@Nullable String dhcpOptionsId) {
            this.dhcpOptionsId = dhcpOptionsId;
            return this;
        }
        @CustomType.Setter
        public Builder enableDnsHostnames(@Nullable Boolean enableDnsHostnames) {
            this.enableDnsHostnames = enableDnsHostnames;
            return this;
        }
        @CustomType.Setter
        public Builder enableDnsSupport(@Nullable Boolean enableDnsSupport) {
            this.enableDnsSupport = enableDnsSupport;
            return this;
        }
        @CustomType.Setter
        public Builder enableNetworkAddressUsageMetrics(@Nullable Boolean enableNetworkAddressUsageMetrics) {
            this.enableNetworkAddressUsageMetrics = enableNetworkAddressUsageMetrics;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetVpcFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetVpcFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder instanceTenancy(@Nullable String instanceTenancy) {
            this.instanceTenancy = instanceTenancy;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6AssociationId(@Nullable String ipv6AssociationId) {
            this.ipv6AssociationId = ipv6AssociationId;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6CidrBlock(@Nullable String ipv6CidrBlock) {
            this.ipv6CidrBlock = ipv6CidrBlock;
            return this;
        }
        @CustomType.Setter
        public Builder mainRouteTableId(@Nullable String mainRouteTableId) {
            this.mainRouteTableId = mainRouteTableId;
            return this;
        }
        @CustomType.Setter
        public Builder ownerId(@Nullable String ownerId) {
            this.ownerId = ownerId;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public GetVpcResult build() {
            final var o = new GetVpcResult();
            o.arn = arn;
            o.cidrBlock = cidrBlock;
            o.cidrBlockAssociations = cidrBlockAssociations;
            o.default_ = default_;
            o.dhcpOptionsId = dhcpOptionsId;
            o.enableDnsHostnames = enableDnsHostnames;
            o.enableDnsSupport = enableDnsSupport;
            o.enableNetworkAddressUsageMetrics = enableNetworkAddressUsageMetrics;
            o.filters = filters;
            o.id = id;
            o.instanceTenancy = instanceTenancy;
            o.ipv6AssociationId = ipv6AssociationId;
            o.ipv6CidrBlock = ipv6CidrBlock;
            o.mainRouteTableId = mainRouteTableId;
            o.ownerId = ownerId;
            o.state = state;
            o.tags = tags;
            return o;
        }
    }
}
