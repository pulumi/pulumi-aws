// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.glue.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsConnectionPasswordEncryption {
    /**
     * @return A KMS key ARN that is used to encrypt the connection password. If connection password protection is enabled, the caller of CreateConnection and UpdateConnection needs at least `kms:Encrypt` permission on the specified AWS KMS key, to encrypt passwords before storing them in the Data Catalog.
     * 
     */
    private @Nullable String awsKmsKeyId;
    /**
     * @return When set to `true`, passwords remain encrypted in the responses of GetConnection and GetConnections. This encryption takes effect independently of the catalog encryption.
     * 
     */
    private Boolean returnConnectionPasswordEncrypted;

    private DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsConnectionPasswordEncryption() {}
    /**
     * @return A KMS key ARN that is used to encrypt the connection password. If connection password protection is enabled, the caller of CreateConnection and UpdateConnection needs at least `kms:Encrypt` permission on the specified AWS KMS key, to encrypt passwords before storing them in the Data Catalog.
     * 
     */
    public Optional<String> awsKmsKeyId() {
        return Optional.ofNullable(this.awsKmsKeyId);
    }
    /**
     * @return When set to `true`, passwords remain encrypted in the responses of GetConnection and GetConnections. This encryption takes effect independently of the catalog encryption.
     * 
     */
    public Boolean returnConnectionPasswordEncrypted() {
        return this.returnConnectionPasswordEncrypted;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsConnectionPasswordEncryption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String awsKmsKeyId;
        private Boolean returnConnectionPasswordEncrypted;
        public Builder() {}
        public Builder(DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsConnectionPasswordEncryption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.awsKmsKeyId = defaults.awsKmsKeyId;
    	      this.returnConnectionPasswordEncrypted = defaults.returnConnectionPasswordEncrypted;
        }

        @CustomType.Setter
        public Builder awsKmsKeyId(@Nullable String awsKmsKeyId) {
            this.awsKmsKeyId = awsKmsKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder returnConnectionPasswordEncrypted(Boolean returnConnectionPasswordEncrypted) {
            this.returnConnectionPasswordEncrypted = Objects.requireNonNull(returnConnectionPasswordEncrypted);
            return this;
        }
        public DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsConnectionPasswordEncryption build() {
            final var _resultValue = new DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsConnectionPasswordEncryption();
            _resultValue.awsKmsKeyId = awsKmsKeyId;
            _resultValue.returnConnectionPasswordEncrypted = returnConnectionPasswordEncrypted;
            return _resultValue;
        }
    }
}
