// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.wafv2.outputs;

import com.pulumi.aws.wafv2.outputs.WebAclRuleStatementManagedRuleGroupStatementExcludedRule;
import com.pulumi.aws.wafv2.outputs.WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfig;
import com.pulumi.aws.wafv2.outputs.WebAclRuleStatementManagedRuleGroupStatementRuleActionOverride;
import com.pulumi.aws.wafv2.outputs.WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WebAclRuleStatementManagedRuleGroupStatement {
    /**
     * @deprecated
     * Use rule_action_override instead
     * 
     */
    @Deprecated /* Use rule_action_override instead */
    private @Nullable List<WebAclRuleStatementManagedRuleGroupStatementExcludedRule> excludedRules;
    private @Nullable List<WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfig> managedRuleGroupConfigs;
    private String name;
    private @Nullable List<WebAclRuleStatementManagedRuleGroupStatementRuleActionOverride> ruleActionOverrides;
    private @Nullable WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement scopeDownStatement;
    private String vendorName;
    private @Nullable String version;

    private WebAclRuleStatementManagedRuleGroupStatement() {}
    /**
     * @deprecated
     * Use rule_action_override instead
     * 
     */
    @Deprecated /* Use rule_action_override instead */
    public List<WebAclRuleStatementManagedRuleGroupStatementExcludedRule> excludedRules() {
        return this.excludedRules == null ? List.of() : this.excludedRules;
    }
    public List<WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfig> managedRuleGroupConfigs() {
        return this.managedRuleGroupConfigs == null ? List.of() : this.managedRuleGroupConfigs;
    }
    public String name() {
        return this.name;
    }
    public List<WebAclRuleStatementManagedRuleGroupStatementRuleActionOverride> ruleActionOverrides() {
        return this.ruleActionOverrides == null ? List.of() : this.ruleActionOverrides;
    }
    public Optional<WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement> scopeDownStatement() {
        return Optional.ofNullable(this.scopeDownStatement);
    }
    public String vendorName() {
        return this.vendorName;
    }
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebAclRuleStatementManagedRuleGroupStatement defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<WebAclRuleStatementManagedRuleGroupStatementExcludedRule> excludedRules;
        private @Nullable List<WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfig> managedRuleGroupConfigs;
        private String name;
        private @Nullable List<WebAclRuleStatementManagedRuleGroupStatementRuleActionOverride> ruleActionOverrides;
        private @Nullable WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement scopeDownStatement;
        private String vendorName;
        private @Nullable String version;
        public Builder() {}
        public Builder(WebAclRuleStatementManagedRuleGroupStatement defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.excludedRules = defaults.excludedRules;
    	      this.managedRuleGroupConfigs = defaults.managedRuleGroupConfigs;
    	      this.name = defaults.name;
    	      this.ruleActionOverrides = defaults.ruleActionOverrides;
    	      this.scopeDownStatement = defaults.scopeDownStatement;
    	      this.vendorName = defaults.vendorName;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder excludedRules(@Nullable List<WebAclRuleStatementManagedRuleGroupStatementExcludedRule> excludedRules) {
            this.excludedRules = excludedRules;
            return this;
        }
        public Builder excludedRules(WebAclRuleStatementManagedRuleGroupStatementExcludedRule... excludedRules) {
            return excludedRules(List.of(excludedRules));
        }
        @CustomType.Setter
        public Builder managedRuleGroupConfigs(@Nullable List<WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfig> managedRuleGroupConfigs) {
            this.managedRuleGroupConfigs = managedRuleGroupConfigs;
            return this;
        }
        public Builder managedRuleGroupConfigs(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfig... managedRuleGroupConfigs) {
            return managedRuleGroupConfigs(List.of(managedRuleGroupConfigs));
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder ruleActionOverrides(@Nullable List<WebAclRuleStatementManagedRuleGroupStatementRuleActionOverride> ruleActionOverrides) {
            this.ruleActionOverrides = ruleActionOverrides;
            return this;
        }
        public Builder ruleActionOverrides(WebAclRuleStatementManagedRuleGroupStatementRuleActionOverride... ruleActionOverrides) {
            return ruleActionOverrides(List.of(ruleActionOverrides));
        }
        @CustomType.Setter
        public Builder scopeDownStatement(@Nullable WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement scopeDownStatement) {
            this.scopeDownStatement = scopeDownStatement;
            return this;
        }
        @CustomType.Setter
        public Builder vendorName(String vendorName) {
            this.vendorName = Objects.requireNonNull(vendorName);
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }
        public WebAclRuleStatementManagedRuleGroupStatement build() {
            final var o = new WebAclRuleStatementManagedRuleGroupStatement();
            o.excludedRules = excludedRules;
            o.managedRuleGroupConfigs = managedRuleGroupConfigs;
            o.name = name;
            o.ruleActionOverrides = ruleActionOverrides;
            o.scopeDownStatement = scopeDownStatement;
            o.vendorName = vendorName;
            o.version = version;
            return o;
        }
    }
}
