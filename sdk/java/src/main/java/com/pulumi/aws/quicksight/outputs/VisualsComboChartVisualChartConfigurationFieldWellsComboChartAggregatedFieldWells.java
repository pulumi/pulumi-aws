// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.DimensionFieldSchema;
import com.pulumi.aws.quicksight.outputs.MeasureFieldSchema;
import com.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class VisualsComboChartVisualChartConfigurationFieldWellsComboChartAggregatedFieldWells {
    private @Nullable List<MeasureFieldSchema> barValues;
    private @Nullable List<DimensionFieldSchema> categories;
    private @Nullable List<DimensionFieldSchema> colors;
    private @Nullable List<MeasureFieldSchema> lineValues;

    private VisualsComboChartVisualChartConfigurationFieldWellsComboChartAggregatedFieldWells() {}
    public List<MeasureFieldSchema> barValues() {
        return this.barValues == null ? List.of() : this.barValues;
    }
    public List<DimensionFieldSchema> categories() {
        return this.categories == null ? List.of() : this.categories;
    }
    public List<DimensionFieldSchema> colors() {
        return this.colors == null ? List.of() : this.colors;
    }
    public List<MeasureFieldSchema> lineValues() {
        return this.lineValues == null ? List.of() : this.lineValues;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VisualsComboChartVisualChartConfigurationFieldWellsComboChartAggregatedFieldWells defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<MeasureFieldSchema> barValues;
        private @Nullable List<DimensionFieldSchema> categories;
        private @Nullable List<DimensionFieldSchema> colors;
        private @Nullable List<MeasureFieldSchema> lineValues;
        public Builder() {}
        public Builder(VisualsComboChartVisualChartConfigurationFieldWellsComboChartAggregatedFieldWells defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.barValues = defaults.barValues;
    	      this.categories = defaults.categories;
    	      this.colors = defaults.colors;
    	      this.lineValues = defaults.lineValues;
        }

        @CustomType.Setter
        public Builder barValues(@Nullable List<MeasureFieldSchema> barValues) {

            this.barValues = barValues;
            return this;
        }
        public Builder barValues(MeasureFieldSchema... barValues) {
            return barValues(List.of(barValues));
        }
        @CustomType.Setter
        public Builder categories(@Nullable List<DimensionFieldSchema> categories) {

            this.categories = categories;
            return this;
        }
        public Builder categories(DimensionFieldSchema... categories) {
            return categories(List.of(categories));
        }
        @CustomType.Setter
        public Builder colors(@Nullable List<DimensionFieldSchema> colors) {

            this.colors = colors;
            return this;
        }
        public Builder colors(DimensionFieldSchema... colors) {
            return colors(List.of(colors));
        }
        @CustomType.Setter
        public Builder lineValues(@Nullable List<MeasureFieldSchema> lineValues) {

            this.lineValues = lineValues;
            return this;
        }
        public Builder lineValues(MeasureFieldSchema... lineValues) {
            return lineValues(List.of(lineValues));
        }
        public VisualsComboChartVisualChartConfigurationFieldWellsComboChartAggregatedFieldWells build() {
            final var _resultValue = new VisualsComboChartVisualChartConfigurationFieldWellsComboChartAggregatedFieldWells();
            _resultValue.barValues = barValues;
            _resultValue.categories = categories;
            _resultValue.colors = colors;
            _resultValue.lineValues = lineValues;
            return _resultValue;
        }
    }
}
