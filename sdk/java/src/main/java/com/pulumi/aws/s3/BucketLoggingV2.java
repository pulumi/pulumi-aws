// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.s3.BucketLoggingV2Args;
import com.pulumi.aws.s3.inputs.BucketLoggingV2State;
import com.pulumi.aws.s3.outputs.BucketLoggingV2TargetGrant;
import com.pulumi.aws.s3.outputs.BucketLoggingV2TargetObjectKeyFormat;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides an S3 bucket (server access) logging resource. For more information, see [Logging requests using server access logging](https://docs.aws.amazon.com/AmazonS3/latest/userguide/ServerLogs.html)
 * in the AWS S3 User Guide.
 * 
 * &gt; **Note:** Amazon S3 supports server access logging, AWS CloudTrail, or a combination of both. Refer to the [Logging options for Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/userguide/logging-with-S3.html)
 * to decide which method meets your requirements.
 * 
 * &gt; This resource cannot be used with S3 directory buckets.
 * 
 * ## Example Usage
 * 
 * ### Grant permission by using bucket policy
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.AwsFunctions;
 * import com.pulumi.aws.inputs.GetCallerIdentityArgs;
 * import com.pulumi.aws.s3.Bucket;
 * import com.pulumi.aws.s3.BucketArgs;
 * import com.pulumi.aws.iam.IamFunctions;
 * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
 * import com.pulumi.aws.s3.BucketPolicy;
 * import com.pulumi.aws.s3.BucketPolicyArgs;
 * import com.pulumi.aws.s3.BucketLogging;
 * import com.pulumi.aws.s3.BucketLoggingArgs;
 * import com.pulumi.aws.s3.inputs.BucketLoggingTargetObjectKeyFormatArgs;
 * import com.pulumi.aws.s3.inputs.BucketLoggingTargetObjectKeyFormatPartitionedPrefixArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var current = AwsFunctions.getCallerIdentity(GetCallerIdentityArgs.builder()
 *             .build());
 * 
 *         var logging = new Bucket("logging", BucketArgs.builder()
 *             .bucket("access-logging-bucket")
 *             .build());
 * 
 *         final var loggingBucketPolicy = logging.arn().applyValue(_arn -> IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
 *             .statements(GetPolicyDocumentStatementArgs.builder()
 *                 .principals(GetPolicyDocumentStatementPrincipalArgs.builder()
 *                     .identifiers("logging.s3.amazonaws.com")
 *                     .type("Service")
 *                     .build())
 *                 .actions("s3:PutObject")
 *                 .resources(String.format("%s/*", _arn))
 *                 .conditions(GetPolicyDocumentStatementConditionArgs.builder()
 *                     .test("StringEquals")
 *                     .variable("aws:SourceAccount")
 *                     .values(current.accountId())
 *                     .build())
 *                 .build())
 *             .build()));
 * 
 *         var loggingBucketPolicy2 = new BucketPolicy("loggingBucketPolicy2", BucketPolicyArgs.builder()
 *             .bucket(logging.bucket())
 *             .policy(loggingBucketPolicy.json())
 *             .build());
 * 
 *         var example = new Bucket("example", BucketArgs.builder()
 *             .bucket("example-bucket")
 *             .build());
 * 
 *         var exampleBucketLogging = new BucketLogging("exampleBucketLogging", BucketLoggingArgs.builder()
 *             .bucket(example.bucket())
 *             .targetBucket(logging.bucket())
 *             .targetPrefix("log/")
 *             .targetObjectKeyFormat(BucketLoggingTargetObjectKeyFormatArgs.builder()
 *                 .partitionedPrefix(BucketLoggingTargetObjectKeyFormatPartitionedPrefixArgs.builder()
 *                     .partitionDateSource("EventTime")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ### Grant permission by using bucket ACL
 * 
 * The [AWS Documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/enable-server-access-logging.html) does not recommend using the ACL.
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.s3.Bucket;
 * import com.pulumi.aws.s3.BucketArgs;
 * import com.pulumi.aws.s3.BucketAcl;
 * import com.pulumi.aws.s3.BucketAclArgs;
 * import com.pulumi.aws.s3.BucketLogging;
 * import com.pulumi.aws.s3.BucketLoggingArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Bucket("example", BucketArgs.builder()
 *             .bucket("my-tf-example-bucket")
 *             .build());
 * 
 *         var exampleBucketAcl = new BucketAcl("exampleBucketAcl", BucketAclArgs.builder()
 *             .bucket(example.id())
 *             .acl("private")
 *             .build());
 * 
 *         var logBucket = new Bucket("logBucket", BucketArgs.builder()
 *             .bucket("my-tf-log-bucket")
 *             .build());
 * 
 *         var logBucketAcl = new BucketAcl("logBucketAcl", BucketAclArgs.builder()
 *             .bucket(logBucket.id())
 *             .acl("log-delivery-write")
 *             .build());
 * 
 *         var exampleBucketLogging = new BucketLogging("exampleBucketLogging", BucketLoggingArgs.builder()
 *             .bucket(example.id())
 *             .targetBucket(logBucket.id())
 *             .targetPrefix("log/")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * If the owner (account ID) of the source bucket differs from the account used to configure the AWS Provider, import using the `bucket` and `expected_bucket_owner` separated by a comma (`,`):
 * 
 * __Using `pulumi import` to import__ S3 bucket logging using the `bucket` or using the `bucket` and `expected_bucket_owner` separated by a comma (`,`). For example:
 * 
 * If the owner (account ID) of the source bucket is the same account used to configure the AWS Provider, import using the `bucket`:
 * 
 * ```sh
 * $ pulumi import aws:s3/bucketLoggingV2:BucketLoggingV2 example bucket-name
 * ```
 * If the owner (account ID) of the source bucket differs from the account used to configure the AWS Provider, import using the `bucket` and `expected_bucket_owner` separated by a comma (`,`):
 * 
 * ```sh
 * $ pulumi import aws:s3/bucketLoggingV2:BucketLoggingV2 example bucket-name,123456789012
 * ```
 * 
 * @deprecated
 * aws.s3/bucketloggingv2.BucketLoggingV2 has been deprecated in favor of aws.s3/bucketlogging.BucketLogging
 * 
 */
@Deprecated /* aws.s3/bucketloggingv2.BucketLoggingV2 has been deprecated in favor of aws.s3/bucketlogging.BucketLogging */
@ResourceType(type="aws:s3/bucketLoggingV2:BucketLoggingV2")
public class BucketLoggingV2 extends com.pulumi.resources.CustomResource {
    /**
     * Name of the bucket.
     * 
     */
    @Export(name="bucket", refs={String.class}, tree="[0]")
    private Output<String> bucket;

    /**
     * @return Name of the bucket.
     * 
     */
    public Output<String> bucket() {
        return this.bucket;
    }
    /**
     * Account ID of the expected bucket owner.
     * 
     */
    @Export(name="expectedBucketOwner", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> expectedBucketOwner;

    /**
     * @return Account ID of the expected bucket owner.
     * 
     */
    public Output<Optional<String>> expectedBucketOwner() {
        return Codegen.optional(this.expectedBucketOwner);
    }
    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * Name of the bucket where you want Amazon S3 to store server access logs.
     * 
     */
    @Export(name="targetBucket", refs={String.class}, tree="[0]")
    private Output<String> targetBucket;

    /**
     * @return Name of the bucket where you want Amazon S3 to store server access logs.
     * 
     */
    public Output<String> targetBucket() {
        return this.targetBucket;
    }
    /**
     * Set of configuration blocks with information for granting permissions. See below.
     * 
     */
    @Export(name="targetGrants", refs={List.class,BucketLoggingV2TargetGrant.class}, tree="[0,1]")
    private Output</* @Nullable */ List<BucketLoggingV2TargetGrant>> targetGrants;

    /**
     * @return Set of configuration blocks with information for granting permissions. See below.
     * 
     */
    public Output<Optional<List<BucketLoggingV2TargetGrant>>> targetGrants() {
        return Codegen.optional(this.targetGrants);
    }
    /**
     * Amazon S3 key format for log objects. See below.
     * 
     */
    @Export(name="targetObjectKeyFormat", refs={BucketLoggingV2TargetObjectKeyFormat.class}, tree="[0]")
    private Output</* @Nullable */ BucketLoggingV2TargetObjectKeyFormat> targetObjectKeyFormat;

    /**
     * @return Amazon S3 key format for log objects. See below.
     * 
     */
    public Output<Optional<BucketLoggingV2TargetObjectKeyFormat>> targetObjectKeyFormat() {
        return Codegen.optional(this.targetObjectKeyFormat);
    }
    /**
     * Prefix for all log object keys.
     * 
     */
    @Export(name="targetPrefix", refs={String.class}, tree="[0]")
    private Output<String> targetPrefix;

    /**
     * @return Prefix for all log object keys.
     * 
     */
    public Output<String> targetPrefix() {
        return this.targetPrefix;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public BucketLoggingV2(java.lang.String name) {
        this(name, BucketLoggingV2Args.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public BucketLoggingV2(java.lang.String name, BucketLoggingV2Args args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public BucketLoggingV2(java.lang.String name, BucketLoggingV2Args args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:s3/bucketLoggingV2:BucketLoggingV2", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private BucketLoggingV2(java.lang.String name, Output<java.lang.String> id, @Nullable BucketLoggingV2State state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:s3/bucketLoggingV2:BucketLoggingV2", name, state, makeResourceOptions(options, id), false);
    }

    private static BucketLoggingV2Args makeArgs(BucketLoggingV2Args args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? BucketLoggingV2Args.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("aws:s3/bucketLoggingV2:BucketLoggingV2").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static BucketLoggingV2 get(java.lang.String name, Output<java.lang.String> id, @Nullable BucketLoggingV2State state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new BucketLoggingV2(name, id, state, options);
    }
}
