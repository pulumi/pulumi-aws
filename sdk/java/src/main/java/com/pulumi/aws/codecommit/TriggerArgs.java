// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codecommit;

import com.pulumi.aws.codecommit.inputs.TriggerTriggerArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class TriggerArgs extends com.pulumi.resources.ResourceArgs {

    public static final TriggerArgs Empty = new TriggerArgs();

    /**
     * The name for the repository. This needs to be less than 100 characters.
     * 
     */
    @Import(name="repositoryName", required=true)
    private Output<String> repositoryName;

    /**
     * @return The name for the repository. This needs to be less than 100 characters.
     * 
     */
    public Output<String> repositoryName() {
        return this.repositoryName;
    }

    @Import(name="triggers", required=true)
    private Output<List<TriggerTriggerArgs>> triggers;

    public Output<List<TriggerTriggerArgs>> triggers() {
        return this.triggers;
    }

    private TriggerArgs() {}

    private TriggerArgs(TriggerArgs $) {
        this.repositoryName = $.repositoryName;
        this.triggers = $.triggers;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TriggerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TriggerArgs $;

        public Builder() {
            $ = new TriggerArgs();
        }

        public Builder(TriggerArgs defaults) {
            $ = new TriggerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param repositoryName The name for the repository. This needs to be less than 100 characters.
         * 
         * @return builder
         * 
         */
        public Builder repositoryName(Output<String> repositoryName) {
            $.repositoryName = repositoryName;
            return this;
        }

        /**
         * @param repositoryName The name for the repository. This needs to be less than 100 characters.
         * 
         * @return builder
         * 
         */
        public Builder repositoryName(String repositoryName) {
            return repositoryName(Output.of(repositoryName));
        }

        public Builder triggers(Output<List<TriggerTriggerArgs>> triggers) {
            $.triggers = triggers;
            return this;
        }

        public Builder triggers(List<TriggerTriggerArgs> triggers) {
            return triggers(Output.of(triggers));
        }

        public Builder triggers(TriggerTriggerArgs... triggers) {
            return triggers(List.of(triggers));
        }

        public TriggerArgs build() {
            $.repositoryName = Objects.requireNonNull($.repositoryName, "expected parameter 'repositoryName' to be non-null");
            $.triggers = Objects.requireNonNull($.triggers, "expected parameter 'triggers' to be non-null");
            return $;
        }
    }

}
