// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appconfig.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExtensionAssociationState extends com.pulumi.resources.ResourceArgs {

    public static final ExtensionAssociationState Empty = new ExtensionAssociationState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="extensionArn")
    private @Nullable Output<String> extensionArn;

    public Optional<Output<String>> extensionArn() {
        return Optional.ofNullable(this.extensionArn);
    }

    @Import(name="extensionVersion")
    private @Nullable Output<Integer> extensionVersion;

    public Optional<Output<Integer>> extensionVersion() {
        return Optional.ofNullable(this.extensionVersion);
    }

    @Import(name="parameters")
    private @Nullable Output<Map<String,String>> parameters;

    public Optional<Output<Map<String,String>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    @Import(name="resourceArn")
    private @Nullable Output<String> resourceArn;

    public Optional<Output<String>> resourceArn() {
        return Optional.ofNullable(this.resourceArn);
    }

    private ExtensionAssociationState() {}

    private ExtensionAssociationState(ExtensionAssociationState $) {
        this.arn = $.arn;
        this.extensionArn = $.extensionArn;
        this.extensionVersion = $.extensionVersion;
        this.parameters = $.parameters;
        this.resourceArn = $.resourceArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExtensionAssociationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExtensionAssociationState $;

        public Builder() {
            $ = new ExtensionAssociationState();
        }

        public Builder(ExtensionAssociationState defaults) {
            $ = new ExtensionAssociationState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder extensionArn(@Nullable Output<String> extensionArn) {
            $.extensionArn = extensionArn;
            return this;
        }

        public Builder extensionArn(String extensionArn) {
            return extensionArn(Output.of(extensionArn));
        }

        public Builder extensionVersion(@Nullable Output<Integer> extensionVersion) {
            $.extensionVersion = extensionVersion;
            return this;
        }

        public Builder extensionVersion(Integer extensionVersion) {
            return extensionVersion(Output.of(extensionVersion));
        }

        public Builder parameters(@Nullable Output<Map<String,String>> parameters) {
            $.parameters = parameters;
            return this;
        }

        public Builder parameters(Map<String,String> parameters) {
            return parameters(Output.of(parameters));
        }

        public Builder resourceArn(@Nullable Output<String> resourceArn) {
            $.resourceArn = resourceArn;
            return this;
        }

        public Builder resourceArn(String resourceArn) {
            return resourceArn(Output.of(resourceArn));
        }

        public ExtensionAssociationState build() {
            return $;
        }
    }

}
