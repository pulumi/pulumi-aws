// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class EndpointConfigurationShadowProductionVariantCoreDumpConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final EndpointConfigurationShadowProductionVariantCoreDumpConfigArgs Empty = new EndpointConfigurationShadowProductionVariantCoreDumpConfigArgs();

    /**
     * The URL for S3 location where the captured data is stored.
     * 
     */
    @Import(name="destinationS3Uri", required=true)
    private Output<String> destinationS3Uri;

    /**
     * @return The URL for S3 location where the captured data is stored.
     * 
     */
    public Output<String> destinationS3Uri() {
        return this.destinationS3Uri;
    }

    /**
     * The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt the asynchronous inference output in Amazon S3.
     * 
     */
    @Import(name="kmsKeyId", required=true)
    private Output<String> kmsKeyId;

    /**
     * @return The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt the asynchronous inference output in Amazon S3.
     * 
     */
    public Output<String> kmsKeyId() {
        return this.kmsKeyId;
    }

    private EndpointConfigurationShadowProductionVariantCoreDumpConfigArgs() {}

    private EndpointConfigurationShadowProductionVariantCoreDumpConfigArgs(EndpointConfigurationShadowProductionVariantCoreDumpConfigArgs $) {
        this.destinationS3Uri = $.destinationS3Uri;
        this.kmsKeyId = $.kmsKeyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EndpointConfigurationShadowProductionVariantCoreDumpConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EndpointConfigurationShadowProductionVariantCoreDumpConfigArgs $;

        public Builder() {
            $ = new EndpointConfigurationShadowProductionVariantCoreDumpConfigArgs();
        }

        public Builder(EndpointConfigurationShadowProductionVariantCoreDumpConfigArgs defaults) {
            $ = new EndpointConfigurationShadowProductionVariantCoreDumpConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param destinationS3Uri The URL for S3 location where the captured data is stored.
         * 
         * @return builder
         * 
         */
        public Builder destinationS3Uri(Output<String> destinationS3Uri) {
            $.destinationS3Uri = destinationS3Uri;
            return this;
        }

        /**
         * @param destinationS3Uri The URL for S3 location where the captured data is stored.
         * 
         * @return builder
         * 
         */
        public Builder destinationS3Uri(String destinationS3Uri) {
            return destinationS3Uri(Output.of(destinationS3Uri));
        }

        /**
         * @param kmsKeyId The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt the asynchronous inference output in Amazon S3.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(Output<String> kmsKeyId) {
            $.kmsKeyId = kmsKeyId;
            return this;
        }

        /**
         * @param kmsKeyId The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt the asynchronous inference output in Amazon S3.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(String kmsKeyId) {
            return kmsKeyId(Output.of(kmsKeyId));
        }

        public EndpointConfigurationShadowProductionVariantCoreDumpConfigArgs build() {
            $.destinationS3Uri = Objects.requireNonNull($.destinationS3Uri, "expected parameter 'destinationS3Uri' to be non-null");
            $.kmsKeyId = Objects.requireNonNull($.kmsKeyId, "expected parameter 'kmsKeyId' to be non-null");
            return $;
        }
    }

}
