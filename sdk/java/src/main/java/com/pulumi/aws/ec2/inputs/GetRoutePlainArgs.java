// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRoutePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRoutePlainArgs Empty = new GetRoutePlainArgs();

    @Import(name="carrierGatewayId")
    private @Nullable String carrierGatewayId;

    public Optional<String> carrierGatewayId() {
        return Optional.ofNullable(this.carrierGatewayId);
    }

    @Import(name="coreNetworkArn")
    private @Nullable String coreNetworkArn;

    public Optional<String> coreNetworkArn() {
        return Optional.ofNullable(this.coreNetworkArn);
    }

    @Import(name="destinationCidrBlock")
    private @Nullable String destinationCidrBlock;

    public Optional<String> destinationCidrBlock() {
        return Optional.ofNullable(this.destinationCidrBlock);
    }

    @Import(name="destinationIpv6CidrBlock")
    private @Nullable String destinationIpv6CidrBlock;

    public Optional<String> destinationIpv6CidrBlock() {
        return Optional.ofNullable(this.destinationIpv6CidrBlock);
    }

    @Import(name="destinationPrefixListId")
    private @Nullable String destinationPrefixListId;

    public Optional<String> destinationPrefixListId() {
        return Optional.ofNullable(this.destinationPrefixListId);
    }

    @Import(name="egressOnlyGatewayId")
    private @Nullable String egressOnlyGatewayId;

    public Optional<String> egressOnlyGatewayId() {
        return Optional.ofNullable(this.egressOnlyGatewayId);
    }

    @Import(name="gatewayId")
    private @Nullable String gatewayId;

    public Optional<String> gatewayId() {
        return Optional.ofNullable(this.gatewayId);
    }

    @Import(name="instanceId")
    private @Nullable String instanceId;

    public Optional<String> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }

    @Import(name="localGatewayId")
    private @Nullable String localGatewayId;

    public Optional<String> localGatewayId() {
        return Optional.ofNullable(this.localGatewayId);
    }

    @Import(name="natGatewayId")
    private @Nullable String natGatewayId;

    public Optional<String> natGatewayId() {
        return Optional.ofNullable(this.natGatewayId);
    }

    @Import(name="networkInterfaceId")
    private @Nullable String networkInterfaceId;

    public Optional<String> networkInterfaceId() {
        return Optional.ofNullable(this.networkInterfaceId);
    }

    @Import(name="routeTableId", required=true)
    private String routeTableId;

    public String routeTableId() {
        return this.routeTableId;
    }

    @Import(name="transitGatewayId")
    private @Nullable String transitGatewayId;

    public Optional<String> transitGatewayId() {
        return Optional.ofNullable(this.transitGatewayId);
    }

    @Import(name="vpcPeeringConnectionId")
    private @Nullable String vpcPeeringConnectionId;

    public Optional<String> vpcPeeringConnectionId() {
        return Optional.ofNullable(this.vpcPeeringConnectionId);
    }

    private GetRoutePlainArgs() {}

    private GetRoutePlainArgs(GetRoutePlainArgs $) {
        this.carrierGatewayId = $.carrierGatewayId;
        this.coreNetworkArn = $.coreNetworkArn;
        this.destinationCidrBlock = $.destinationCidrBlock;
        this.destinationIpv6CidrBlock = $.destinationIpv6CidrBlock;
        this.destinationPrefixListId = $.destinationPrefixListId;
        this.egressOnlyGatewayId = $.egressOnlyGatewayId;
        this.gatewayId = $.gatewayId;
        this.instanceId = $.instanceId;
        this.localGatewayId = $.localGatewayId;
        this.natGatewayId = $.natGatewayId;
        this.networkInterfaceId = $.networkInterfaceId;
        this.routeTableId = $.routeTableId;
        this.transitGatewayId = $.transitGatewayId;
        this.vpcPeeringConnectionId = $.vpcPeeringConnectionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRoutePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRoutePlainArgs $;

        public Builder() {
            $ = new GetRoutePlainArgs();
        }

        public Builder(GetRoutePlainArgs defaults) {
            $ = new GetRoutePlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder carrierGatewayId(@Nullable String carrierGatewayId) {
            $.carrierGatewayId = carrierGatewayId;
            return this;
        }

        public Builder coreNetworkArn(@Nullable String coreNetworkArn) {
            $.coreNetworkArn = coreNetworkArn;
            return this;
        }

        public Builder destinationCidrBlock(@Nullable String destinationCidrBlock) {
            $.destinationCidrBlock = destinationCidrBlock;
            return this;
        }

        public Builder destinationIpv6CidrBlock(@Nullable String destinationIpv6CidrBlock) {
            $.destinationIpv6CidrBlock = destinationIpv6CidrBlock;
            return this;
        }

        public Builder destinationPrefixListId(@Nullable String destinationPrefixListId) {
            $.destinationPrefixListId = destinationPrefixListId;
            return this;
        }

        public Builder egressOnlyGatewayId(@Nullable String egressOnlyGatewayId) {
            $.egressOnlyGatewayId = egressOnlyGatewayId;
            return this;
        }

        public Builder gatewayId(@Nullable String gatewayId) {
            $.gatewayId = gatewayId;
            return this;
        }

        public Builder instanceId(@Nullable String instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        public Builder localGatewayId(@Nullable String localGatewayId) {
            $.localGatewayId = localGatewayId;
            return this;
        }

        public Builder natGatewayId(@Nullable String natGatewayId) {
            $.natGatewayId = natGatewayId;
            return this;
        }

        public Builder networkInterfaceId(@Nullable String networkInterfaceId) {
            $.networkInterfaceId = networkInterfaceId;
            return this;
        }

        public Builder routeTableId(String routeTableId) {
            $.routeTableId = routeTableId;
            return this;
        }

        public Builder transitGatewayId(@Nullable String transitGatewayId) {
            $.transitGatewayId = transitGatewayId;
            return this;
        }

        public Builder vpcPeeringConnectionId(@Nullable String vpcPeeringConnectionId) {
            $.vpcPeeringConnectionId = vpcPeeringConnectionId;
            return this;
        }

        public GetRoutePlainArgs build() {
            $.routeTableId = Objects.requireNonNull($.routeTableId, "expected parameter 'routeTableId' to be non-null");
            return $;
        }
    }

}
