// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.datasync.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class LocationHdfsNameNodeArgs extends com.pulumi.resources.ResourceArgs {

    public static final LocationHdfsNameNodeArgs Empty = new LocationHdfsNameNodeArgs();

    @Import(name="hostname", required=true)
    private Output<String> hostname;

    public Output<String> hostname() {
        return this.hostname;
    }

    @Import(name="port", required=true)
    private Output<Integer> port;

    public Output<Integer> port() {
        return this.port;
    }

    private LocationHdfsNameNodeArgs() {}

    private LocationHdfsNameNodeArgs(LocationHdfsNameNodeArgs $) {
        this.hostname = $.hostname;
        this.port = $.port;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LocationHdfsNameNodeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LocationHdfsNameNodeArgs $;

        public Builder() {
            $ = new LocationHdfsNameNodeArgs();
        }

        public Builder(LocationHdfsNameNodeArgs defaults) {
            $ = new LocationHdfsNameNodeArgs(Objects.requireNonNull(defaults));
        }

        public Builder hostname(Output<String> hostname) {
            $.hostname = hostname;
            return this;
        }

        public Builder hostname(String hostname) {
            return hostname(Output.of(hostname));
        }

        public Builder port(Output<Integer> port) {
            $.port = port;
            return this;
        }

        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        public LocationHdfsNameNodeArgs build() {
            $.hostname = Objects.requireNonNull($.hostname, "expected parameter 'hostname' to be non-null");
            $.port = Objects.requireNonNull($.port, "expected parameter 'port' to be non-null");
            return $;
        }
    }

}
