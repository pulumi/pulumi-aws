// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.auditmanager.outputs;

import com.pulumi.aws.auditmanager.outputs.GetControlControlMappingSourceSourceKeyword;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetControlControlMappingSource {
    private @Nullable String sourceDescription;
    private @Nullable String sourceFrequency;
    private @Nullable String sourceId;
    private @Nullable GetControlControlMappingSourceSourceKeyword sourceKeyword;
    private @Nullable String sourceName;
    private @Nullable String sourceSetUpOption;
    private @Nullable String sourceType;
    private @Nullable String troubleshootingText;

    private GetControlControlMappingSource() {}
    public Optional<String> sourceDescription() {
        return Optional.ofNullable(this.sourceDescription);
    }
    public Optional<String> sourceFrequency() {
        return Optional.ofNullable(this.sourceFrequency);
    }
    public Optional<String> sourceId() {
        return Optional.ofNullable(this.sourceId);
    }
    public Optional<GetControlControlMappingSourceSourceKeyword> sourceKeyword() {
        return Optional.ofNullable(this.sourceKeyword);
    }
    public Optional<String> sourceName() {
        return Optional.ofNullable(this.sourceName);
    }
    public Optional<String> sourceSetUpOption() {
        return Optional.ofNullable(this.sourceSetUpOption);
    }
    public Optional<String> sourceType() {
        return Optional.ofNullable(this.sourceType);
    }
    public Optional<String> troubleshootingText() {
        return Optional.ofNullable(this.troubleshootingText);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetControlControlMappingSource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String sourceDescription;
        private @Nullable String sourceFrequency;
        private @Nullable String sourceId;
        private @Nullable GetControlControlMappingSourceSourceKeyword sourceKeyword;
        private @Nullable String sourceName;
        private @Nullable String sourceSetUpOption;
        private @Nullable String sourceType;
        private @Nullable String troubleshootingText;
        public Builder() {}
        public Builder(GetControlControlMappingSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.sourceDescription = defaults.sourceDescription;
    	      this.sourceFrequency = defaults.sourceFrequency;
    	      this.sourceId = defaults.sourceId;
    	      this.sourceKeyword = defaults.sourceKeyword;
    	      this.sourceName = defaults.sourceName;
    	      this.sourceSetUpOption = defaults.sourceSetUpOption;
    	      this.sourceType = defaults.sourceType;
    	      this.troubleshootingText = defaults.troubleshootingText;
        }

        @CustomType.Setter
        public Builder sourceDescription(@Nullable String sourceDescription) {
            this.sourceDescription = sourceDescription;
            return this;
        }
        @CustomType.Setter
        public Builder sourceFrequency(@Nullable String sourceFrequency) {
            this.sourceFrequency = sourceFrequency;
            return this;
        }
        @CustomType.Setter
        public Builder sourceId(@Nullable String sourceId) {
            this.sourceId = sourceId;
            return this;
        }
        @CustomType.Setter
        public Builder sourceKeyword(@Nullable GetControlControlMappingSourceSourceKeyword sourceKeyword) {
            this.sourceKeyword = sourceKeyword;
            return this;
        }
        @CustomType.Setter
        public Builder sourceName(@Nullable String sourceName) {
            this.sourceName = sourceName;
            return this;
        }
        @CustomType.Setter
        public Builder sourceSetUpOption(@Nullable String sourceSetUpOption) {
            this.sourceSetUpOption = sourceSetUpOption;
            return this;
        }
        @CustomType.Setter
        public Builder sourceType(@Nullable String sourceType) {
            this.sourceType = sourceType;
            return this;
        }
        @CustomType.Setter
        public Builder troubleshootingText(@Nullable String troubleshootingText) {
            this.troubleshootingText = troubleshootingText;
            return this;
        }
        public GetControlControlMappingSource build() {
            final var o = new GetControlControlMappingSource();
            o.sourceDescription = sourceDescription;
            o.sourceFrequency = sourceFrequency;
            o.sourceId = sourceId;
            o.sourceKeyword = sourceKeyword;
            o.sourceName = sourceName;
            o.sourceSetUpOption = sourceSetUpOption;
            o.sourceType = sourceType;
            o.troubleshootingText = troubleshootingText;
            return o;
        }
    }
}
