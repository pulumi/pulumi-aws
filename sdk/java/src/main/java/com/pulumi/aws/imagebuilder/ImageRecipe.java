// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.imagebuilder;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.imagebuilder.ImageRecipeArgs;
import com.pulumi.aws.imagebuilder.inputs.ImageRecipeState;
import com.pulumi.aws.imagebuilder.outputs.ImageRecipeBlockDeviceMapping;
import com.pulumi.aws.imagebuilder.outputs.ImageRecipeComponent;
import com.pulumi.aws.imagebuilder.outputs.ImageRecipeSystemsManagerAgent;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="aws:imagebuilder/imageRecipe:ImageRecipe")
public class ImageRecipe extends com.pulumi.resources.CustomResource {
    @Export(name="arn", refs={String.class}, tree="[0]")
    private Output<String> arn;

    public Output<String> arn() {
        return this.arn;
    }
    @Export(name="blockDeviceMappings", refs={List.class,ImageRecipeBlockDeviceMapping.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ImageRecipeBlockDeviceMapping>> blockDeviceMappings;

    public Output<Optional<List<ImageRecipeBlockDeviceMapping>>> blockDeviceMappings() {
        return Codegen.optional(this.blockDeviceMappings);
    }
    @Export(name="components", refs={List.class,ImageRecipeComponent.class}, tree="[0,1]")
    private Output<List<ImageRecipeComponent>> components;

    public Output<List<ImageRecipeComponent>> components() {
        return this.components;
    }
    @Export(name="dateCreated", refs={String.class}, tree="[0]")
    private Output<String> dateCreated;

    public Output<String> dateCreated() {
        return this.dateCreated;
    }
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }
    @Export(name="owner", refs={String.class}, tree="[0]")
    private Output<String> owner;

    public Output<String> owner() {
        return this.owner;
    }
    @Export(name="parentImage", refs={String.class}, tree="[0]")
    private Output<String> parentImage;

    public Output<String> parentImage() {
        return this.parentImage;
    }
    @Export(name="platform", refs={String.class}, tree="[0]")
    private Output<String> platform;

    public Output<String> platform() {
        return this.platform;
    }
    @Export(name="systemsManagerAgent", refs={ImageRecipeSystemsManagerAgent.class}, tree="[0]")
    private Output<ImageRecipeSystemsManagerAgent> systemsManagerAgent;

    public Output<ImageRecipeSystemsManagerAgent> systemsManagerAgent() {
        return this.systemsManagerAgent;
    }
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    @Export(name="tagsAll", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll;
    }
    @Export(name="userDataBase64", refs={String.class}, tree="[0]")
    private Output<String> userDataBase64;

    public Output<String> userDataBase64() {
        return this.userDataBase64;
    }
    @Export(name="version", refs={String.class}, tree="[0]")
    private Output<String> version;

    public Output<String> version() {
        return this.version;
    }
    @Export(name="workingDirectory", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> workingDirectory;

    public Output<Optional<String>> workingDirectory() {
        return Codegen.optional(this.workingDirectory);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ImageRecipe(String name) {
        this(name, ImageRecipeArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ImageRecipe(String name, ImageRecipeArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ImageRecipe(String name, ImageRecipeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:imagebuilder/imageRecipe:ImageRecipe", name, args == null ? ImageRecipeArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ImageRecipe(String name, Output<String> id, @Nullable ImageRecipeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:imagebuilder/imageRecipe:ImageRecipe", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ImageRecipe get(String name, Output<String> id, @Nullable ImageRecipeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ImageRecipe(name, id, state, options);
    }
}
