// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;


public final class GetListenerRuleActionForwardStickinessArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetListenerRuleActionForwardStickinessArgs Empty = new GetListenerRuleActionForwardStickinessArgs();

    /**
     * The time period, in seconds, during which requests from a client should be routed to the same target group.
     * 
     */
    @Import(name="duration", required=true)
    private Output<Integer> duration;

    /**
     * @return The time period, in seconds, during which requests from a client should be routed to the same target group.
     * 
     */
    public Output<Integer> duration() {
        return this.duration;
    }

    /**
     * Indicates whether target group stickiness is enabled.
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Indicates whether target group stickiness is enabled.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    private GetListenerRuleActionForwardStickinessArgs() {}

    private GetListenerRuleActionForwardStickinessArgs(GetListenerRuleActionForwardStickinessArgs $) {
        this.duration = $.duration;
        this.enabled = $.enabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetListenerRuleActionForwardStickinessArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetListenerRuleActionForwardStickinessArgs $;

        public Builder() {
            $ = new GetListenerRuleActionForwardStickinessArgs();
        }

        public Builder(GetListenerRuleActionForwardStickinessArgs defaults) {
            $ = new GetListenerRuleActionForwardStickinessArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param duration The time period, in seconds, during which requests from a client should be routed to the same target group.
         * 
         * @return builder
         * 
         */
        public Builder duration(Output<Integer> duration) {
            $.duration = duration;
            return this;
        }

        /**
         * @param duration The time period, in seconds, during which requests from a client should be routed to the same target group.
         * 
         * @return builder
         * 
         */
        public Builder duration(Integer duration) {
            return duration(Output.of(duration));
        }

        /**
         * @param enabled Indicates whether target group stickiness is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Indicates whether target group stickiness is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public GetListenerRuleActionForwardStickinessArgs build() {
            if ($.duration == null) {
                throw new MissingRequiredPropertyException("GetListenerRuleActionForwardStickinessArgs", "duration");
            }
            if ($.enabled == null) {
                throw new MissingRequiredPropertyException("GetListenerRuleActionForwardStickinessArgs", "enabled");
            }
            return $;
        }
    }

}
