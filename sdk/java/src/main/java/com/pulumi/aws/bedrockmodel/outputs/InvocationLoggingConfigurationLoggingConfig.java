// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrockmodel.outputs;

import com.pulumi.aws.bedrockmodel.outputs.InvocationLoggingConfigurationLoggingConfigCloudwatchConfig;
import com.pulumi.aws.bedrockmodel.outputs.InvocationLoggingConfigurationLoggingConfigS3Config;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InvocationLoggingConfigurationLoggingConfig {
    /**
     * @return CloudWatch logging configuration. See `cloudwatch_config` Block for details.
     * 
     */
    private @Nullable InvocationLoggingConfigurationLoggingConfigCloudwatchConfig cloudwatchConfig;
    /**
     * @return Set to include embeddings data in the log delivery. Defaults to `true`.
     * 
     */
    private @Nullable Boolean embeddingDataDeliveryEnabled;
    /**
     * @return Set to include image data in the log delivery. Defaults to `true`.
     * 
     */
    private @Nullable Boolean imageDataDeliveryEnabled;
    /**
     * @return S3 configuration for storing log data. See `s3_config` Block for details.
     * 
     */
    private @Nullable InvocationLoggingConfigurationLoggingConfigS3Config s3Config;
    /**
     * @return Set to include text data in the log delivery. Defaults to `true`.
     * 
     */
    private @Nullable Boolean textDataDeliveryEnabled;
    /**
     * @return Set to include text data in the log delivery. Defaults to `true`.
     * 
     */
    private @Nullable Boolean videoDataDeliveryEnabled;

    private InvocationLoggingConfigurationLoggingConfig() {}
    /**
     * @return CloudWatch logging configuration. See `cloudwatch_config` Block for details.
     * 
     */
    public Optional<InvocationLoggingConfigurationLoggingConfigCloudwatchConfig> cloudwatchConfig() {
        return Optional.ofNullable(this.cloudwatchConfig);
    }
    /**
     * @return Set to include embeddings data in the log delivery. Defaults to `true`.
     * 
     */
    public Optional<Boolean> embeddingDataDeliveryEnabled() {
        return Optional.ofNullable(this.embeddingDataDeliveryEnabled);
    }
    /**
     * @return Set to include image data in the log delivery. Defaults to `true`.
     * 
     */
    public Optional<Boolean> imageDataDeliveryEnabled() {
        return Optional.ofNullable(this.imageDataDeliveryEnabled);
    }
    /**
     * @return S3 configuration for storing log data. See `s3_config` Block for details.
     * 
     */
    public Optional<InvocationLoggingConfigurationLoggingConfigS3Config> s3Config() {
        return Optional.ofNullable(this.s3Config);
    }
    /**
     * @return Set to include text data in the log delivery. Defaults to `true`.
     * 
     */
    public Optional<Boolean> textDataDeliveryEnabled() {
        return Optional.ofNullable(this.textDataDeliveryEnabled);
    }
    /**
     * @return Set to include text data in the log delivery. Defaults to `true`.
     * 
     */
    public Optional<Boolean> videoDataDeliveryEnabled() {
        return Optional.ofNullable(this.videoDataDeliveryEnabled);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InvocationLoggingConfigurationLoggingConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable InvocationLoggingConfigurationLoggingConfigCloudwatchConfig cloudwatchConfig;
        private @Nullable Boolean embeddingDataDeliveryEnabled;
        private @Nullable Boolean imageDataDeliveryEnabled;
        private @Nullable InvocationLoggingConfigurationLoggingConfigS3Config s3Config;
        private @Nullable Boolean textDataDeliveryEnabled;
        private @Nullable Boolean videoDataDeliveryEnabled;
        public Builder() {}
        public Builder(InvocationLoggingConfigurationLoggingConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudwatchConfig = defaults.cloudwatchConfig;
    	      this.embeddingDataDeliveryEnabled = defaults.embeddingDataDeliveryEnabled;
    	      this.imageDataDeliveryEnabled = defaults.imageDataDeliveryEnabled;
    	      this.s3Config = defaults.s3Config;
    	      this.textDataDeliveryEnabled = defaults.textDataDeliveryEnabled;
    	      this.videoDataDeliveryEnabled = defaults.videoDataDeliveryEnabled;
        }

        @CustomType.Setter
        public Builder cloudwatchConfig(@Nullable InvocationLoggingConfigurationLoggingConfigCloudwatchConfig cloudwatchConfig) {

            this.cloudwatchConfig = cloudwatchConfig;
            return this;
        }
        @CustomType.Setter
        public Builder embeddingDataDeliveryEnabled(@Nullable Boolean embeddingDataDeliveryEnabled) {

            this.embeddingDataDeliveryEnabled = embeddingDataDeliveryEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder imageDataDeliveryEnabled(@Nullable Boolean imageDataDeliveryEnabled) {

            this.imageDataDeliveryEnabled = imageDataDeliveryEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder s3Config(@Nullable InvocationLoggingConfigurationLoggingConfigS3Config s3Config) {

            this.s3Config = s3Config;
            return this;
        }
        @CustomType.Setter
        public Builder textDataDeliveryEnabled(@Nullable Boolean textDataDeliveryEnabled) {

            this.textDataDeliveryEnabled = textDataDeliveryEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder videoDataDeliveryEnabled(@Nullable Boolean videoDataDeliveryEnabled) {

            this.videoDataDeliveryEnabled = videoDataDeliveryEnabled;
            return this;
        }
        public InvocationLoggingConfigurationLoggingConfig build() {
            final var _resultValue = new InvocationLoggingConfigurationLoggingConfig();
            _resultValue.cloudwatchConfig = cloudwatchConfig;
            _resultValue.embeddingDataDeliveryEnabled = embeddingDataDeliveryEnabled;
            _resultValue.imageDataDeliveryEnabled = imageDataDeliveryEnabled;
            _resultValue.s3Config = s3Config;
            _resultValue.textDataDeliveryEnabled = textDataDeliveryEnabled;
            _resultValue.videoDataDeliveryEnabled = videoDataDeliveryEnabled;
            return _resultValue;
        }
    }
}
