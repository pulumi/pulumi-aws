// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.imagebuilder.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InfrastructureConfigurationPlacementArgs extends com.pulumi.resources.ResourceArgs {

    public static final InfrastructureConfigurationPlacementArgs Empty = new InfrastructureConfigurationPlacementArgs();

    /**
     * Availability Zone where your build and test instances will launch.
     * 
     */
    @Import(name="availabilityZone")
    private @Nullable Output<String> availabilityZone;

    /**
     * @return Availability Zone where your build and test instances will launch.
     * 
     */
    public Optional<Output<String>> availabilityZone() {
        return Optional.ofNullable(this.availabilityZone);
    }

    /**
     * ID of the Dedicated Host on which build and test instances run. Conflicts with `host_resource_group_arn`.
     * 
     */
    @Import(name="hostId")
    private @Nullable Output<String> hostId;

    /**
     * @return ID of the Dedicated Host on which build and test instances run. Conflicts with `host_resource_group_arn`.
     * 
     */
    public Optional<Output<String>> hostId() {
        return Optional.ofNullable(this.hostId);
    }

    /**
     * ARN of the host resource group in which to launch build and test instances. Conflicts with `host_id`.
     * 
     */
    @Import(name="hostResourceGroupArn")
    private @Nullable Output<String> hostResourceGroupArn;

    /**
     * @return ARN of the host resource group in which to launch build and test instances. Conflicts with `host_id`.
     * 
     */
    public Optional<Output<String>> hostResourceGroupArn() {
        return Optional.ofNullable(this.hostResourceGroupArn);
    }

    /**
     * Placement tenancy of the instance. Valid values: `default`, `dedicated` and `host`.
     * 
     */
    @Import(name="tenancy")
    private @Nullable Output<String> tenancy;

    /**
     * @return Placement tenancy of the instance. Valid values: `default`, `dedicated` and `host`.
     * 
     */
    public Optional<Output<String>> tenancy() {
        return Optional.ofNullable(this.tenancy);
    }

    private InfrastructureConfigurationPlacementArgs() {}

    private InfrastructureConfigurationPlacementArgs(InfrastructureConfigurationPlacementArgs $) {
        this.availabilityZone = $.availabilityZone;
        this.hostId = $.hostId;
        this.hostResourceGroupArn = $.hostResourceGroupArn;
        this.tenancy = $.tenancy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InfrastructureConfigurationPlacementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InfrastructureConfigurationPlacementArgs $;

        public Builder() {
            $ = new InfrastructureConfigurationPlacementArgs();
        }

        public Builder(InfrastructureConfigurationPlacementArgs defaults) {
            $ = new InfrastructureConfigurationPlacementArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param availabilityZone Availability Zone where your build and test instances will launch.
         * 
         * @return builder
         * 
         */
        public Builder availabilityZone(@Nullable Output<String> availabilityZone) {
            $.availabilityZone = availabilityZone;
            return this;
        }

        /**
         * @param availabilityZone Availability Zone where your build and test instances will launch.
         * 
         * @return builder
         * 
         */
        public Builder availabilityZone(String availabilityZone) {
            return availabilityZone(Output.of(availabilityZone));
        }

        /**
         * @param hostId ID of the Dedicated Host on which build and test instances run. Conflicts with `host_resource_group_arn`.
         * 
         * @return builder
         * 
         */
        public Builder hostId(@Nullable Output<String> hostId) {
            $.hostId = hostId;
            return this;
        }

        /**
         * @param hostId ID of the Dedicated Host on which build and test instances run. Conflicts with `host_resource_group_arn`.
         * 
         * @return builder
         * 
         */
        public Builder hostId(String hostId) {
            return hostId(Output.of(hostId));
        }

        /**
         * @param hostResourceGroupArn ARN of the host resource group in which to launch build and test instances. Conflicts with `host_id`.
         * 
         * @return builder
         * 
         */
        public Builder hostResourceGroupArn(@Nullable Output<String> hostResourceGroupArn) {
            $.hostResourceGroupArn = hostResourceGroupArn;
            return this;
        }

        /**
         * @param hostResourceGroupArn ARN of the host resource group in which to launch build and test instances. Conflicts with `host_id`.
         * 
         * @return builder
         * 
         */
        public Builder hostResourceGroupArn(String hostResourceGroupArn) {
            return hostResourceGroupArn(Output.of(hostResourceGroupArn));
        }

        /**
         * @param tenancy Placement tenancy of the instance. Valid values: `default`, `dedicated` and `host`.
         * 
         * @return builder
         * 
         */
        public Builder tenancy(@Nullable Output<String> tenancy) {
            $.tenancy = tenancy;
            return this;
        }

        /**
         * @param tenancy Placement tenancy of the instance. Valid values: `default`, `dedicated` and `host`.
         * 
         * @return builder
         * 
         */
        public Builder tenancy(String tenancy) {
            return tenancy(Output.of(tenancy));
        }

        public InfrastructureConfigurationPlacementArgs build() {
            return $;
        }
    }

}
