// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.medialive;

import com.pulumi.aws.medialive.inputs.ChannelCdiInputSpecificationArgs;
import com.pulumi.aws.medialive.inputs.ChannelDestinationArgs;
import com.pulumi.aws.medialive.inputs.ChannelEncoderSettingsArgs;
import com.pulumi.aws.medialive.inputs.ChannelInputAttachmentArgs;
import com.pulumi.aws.medialive.inputs.ChannelInputSpecificationArgs;
import com.pulumi.aws.medialive.inputs.ChannelMaintenanceArgs;
import com.pulumi.aws.medialive.inputs.ChannelVpcArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ChannelArgs extends com.pulumi.resources.ResourceArgs {

    public static final ChannelArgs Empty = new ChannelArgs();

    @Import(name="cdiInputSpecification")
    private @Nullable Output<ChannelCdiInputSpecificationArgs> cdiInputSpecification;

    public Optional<Output<ChannelCdiInputSpecificationArgs>> cdiInputSpecification() {
        return Optional.ofNullable(this.cdiInputSpecification);
    }

    @Import(name="channelClass", required=true)
    private Output<String> channelClass;

    public Output<String> channelClass() {
        return this.channelClass;
    }

    @Import(name="destinations", required=true)
    private Output<List<ChannelDestinationArgs>> destinations;

    public Output<List<ChannelDestinationArgs>> destinations() {
        return this.destinations;
    }

    @Import(name="encoderSettings", required=true)
    private Output<ChannelEncoderSettingsArgs> encoderSettings;

    public Output<ChannelEncoderSettingsArgs> encoderSettings() {
        return this.encoderSettings;
    }

    @Import(name="inputAttachments", required=true)
    private Output<List<ChannelInputAttachmentArgs>> inputAttachments;

    public Output<List<ChannelInputAttachmentArgs>> inputAttachments() {
        return this.inputAttachments;
    }

    @Import(name="inputSpecification", required=true)
    private Output<ChannelInputSpecificationArgs> inputSpecification;

    public Output<ChannelInputSpecificationArgs> inputSpecification() {
        return this.inputSpecification;
    }

    @Import(name="logLevel")
    private @Nullable Output<String> logLevel;

    public Optional<Output<String>> logLevel() {
        return Optional.ofNullable(this.logLevel);
    }

    @Import(name="maintenance")
    private @Nullable Output<ChannelMaintenanceArgs> maintenance;

    public Optional<Output<ChannelMaintenanceArgs>> maintenance() {
        return Optional.ofNullable(this.maintenance);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="roleArn")
    private @Nullable Output<String> roleArn;

    public Optional<Output<String>> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }

    @Import(name="startChannel")
    private @Nullable Output<Boolean> startChannel;

    public Optional<Output<Boolean>> startChannel() {
        return Optional.ofNullable(this.startChannel);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="vpc")
    private @Nullable Output<ChannelVpcArgs> vpc;

    public Optional<Output<ChannelVpcArgs>> vpc() {
        return Optional.ofNullable(this.vpc);
    }

    private ChannelArgs() {}

    private ChannelArgs(ChannelArgs $) {
        this.cdiInputSpecification = $.cdiInputSpecification;
        this.channelClass = $.channelClass;
        this.destinations = $.destinations;
        this.encoderSettings = $.encoderSettings;
        this.inputAttachments = $.inputAttachments;
        this.inputSpecification = $.inputSpecification;
        this.logLevel = $.logLevel;
        this.maintenance = $.maintenance;
        this.name = $.name;
        this.roleArn = $.roleArn;
        this.startChannel = $.startChannel;
        this.tags = $.tags;
        this.vpc = $.vpc;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ChannelArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ChannelArgs $;

        public Builder() {
            $ = new ChannelArgs();
        }

        public Builder(ChannelArgs defaults) {
            $ = new ChannelArgs(Objects.requireNonNull(defaults));
        }

        public Builder cdiInputSpecification(@Nullable Output<ChannelCdiInputSpecificationArgs> cdiInputSpecification) {
            $.cdiInputSpecification = cdiInputSpecification;
            return this;
        }

        public Builder cdiInputSpecification(ChannelCdiInputSpecificationArgs cdiInputSpecification) {
            return cdiInputSpecification(Output.of(cdiInputSpecification));
        }

        public Builder channelClass(Output<String> channelClass) {
            $.channelClass = channelClass;
            return this;
        }

        public Builder channelClass(String channelClass) {
            return channelClass(Output.of(channelClass));
        }

        public Builder destinations(Output<List<ChannelDestinationArgs>> destinations) {
            $.destinations = destinations;
            return this;
        }

        public Builder destinations(List<ChannelDestinationArgs> destinations) {
            return destinations(Output.of(destinations));
        }

        public Builder destinations(ChannelDestinationArgs... destinations) {
            return destinations(List.of(destinations));
        }

        public Builder encoderSettings(Output<ChannelEncoderSettingsArgs> encoderSettings) {
            $.encoderSettings = encoderSettings;
            return this;
        }

        public Builder encoderSettings(ChannelEncoderSettingsArgs encoderSettings) {
            return encoderSettings(Output.of(encoderSettings));
        }

        public Builder inputAttachments(Output<List<ChannelInputAttachmentArgs>> inputAttachments) {
            $.inputAttachments = inputAttachments;
            return this;
        }

        public Builder inputAttachments(List<ChannelInputAttachmentArgs> inputAttachments) {
            return inputAttachments(Output.of(inputAttachments));
        }

        public Builder inputAttachments(ChannelInputAttachmentArgs... inputAttachments) {
            return inputAttachments(List.of(inputAttachments));
        }

        public Builder inputSpecification(Output<ChannelInputSpecificationArgs> inputSpecification) {
            $.inputSpecification = inputSpecification;
            return this;
        }

        public Builder inputSpecification(ChannelInputSpecificationArgs inputSpecification) {
            return inputSpecification(Output.of(inputSpecification));
        }

        public Builder logLevel(@Nullable Output<String> logLevel) {
            $.logLevel = logLevel;
            return this;
        }

        public Builder logLevel(String logLevel) {
            return logLevel(Output.of(logLevel));
        }

        public Builder maintenance(@Nullable Output<ChannelMaintenanceArgs> maintenance) {
            $.maintenance = maintenance;
            return this;
        }

        public Builder maintenance(ChannelMaintenanceArgs maintenance) {
            return maintenance(Output.of(maintenance));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder roleArn(@Nullable Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public Builder startChannel(@Nullable Output<Boolean> startChannel) {
            $.startChannel = startChannel;
            return this;
        }

        public Builder startChannel(Boolean startChannel) {
            return startChannel(Output.of(startChannel));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder vpc(@Nullable Output<ChannelVpcArgs> vpc) {
            $.vpc = vpc;
            return this;
        }

        public Builder vpc(ChannelVpcArgs vpc) {
            return vpc(Output.of(vpc));
        }

        public ChannelArgs build() {
            $.channelClass = Objects.requireNonNull($.channelClass, "expected parameter 'channelClass' to be non-null");
            $.destinations = Objects.requireNonNull($.destinations, "expected parameter 'destinations' to be non-null");
            $.encoderSettings = Objects.requireNonNull($.encoderSettings, "expected parameter 'encoderSettings' to be non-null");
            $.inputAttachments = Objects.requireNonNull($.inputAttachments, "expected parameter 'inputAttachments' to be non-null");
            $.inputSpecification = Objects.requireNonNull($.inputSpecification, "expected parameter 'inputSpecification' to be non-null");
            return $;
        }
    }

}
