// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.imagebuilder.inputs;

import com.pulumi.aws.imagebuilder.inputs.LifecyclePolicyPolicyDetailActionIncludeResourcesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LifecyclePolicyPolicyDetailActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final LifecyclePolicyPolicyDetailActionArgs Empty = new LifecyclePolicyPolicyDetailActionArgs();

    /**
     * Specifies the resources that the lifecycle policy applies to. Detailed below.
     * 
     */
    @Import(name="includeResources")
    private @Nullable Output<LifecyclePolicyPolicyDetailActionIncludeResourcesArgs> includeResources;

    /**
     * @return Specifies the resources that the lifecycle policy applies to. Detailed below.
     * 
     */
    public Optional<Output<LifecyclePolicyPolicyDetailActionIncludeResourcesArgs>> includeResources() {
        return Optional.ofNullable(this.includeResources);
    }

    /**
     * Specifies the lifecycle action to take. Valid values: `DELETE`, `DEPRECATE` or `DISABLE`.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Specifies the lifecycle action to take. Valid values: `DELETE`, `DEPRECATE` or `DISABLE`.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private LifecyclePolicyPolicyDetailActionArgs() {}

    private LifecyclePolicyPolicyDetailActionArgs(LifecyclePolicyPolicyDetailActionArgs $) {
        this.includeResources = $.includeResources;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LifecyclePolicyPolicyDetailActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LifecyclePolicyPolicyDetailActionArgs $;

        public Builder() {
            $ = new LifecyclePolicyPolicyDetailActionArgs();
        }

        public Builder(LifecyclePolicyPolicyDetailActionArgs defaults) {
            $ = new LifecyclePolicyPolicyDetailActionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param includeResources Specifies the resources that the lifecycle policy applies to. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder includeResources(@Nullable Output<LifecyclePolicyPolicyDetailActionIncludeResourcesArgs> includeResources) {
            $.includeResources = includeResources;
            return this;
        }

        /**
         * @param includeResources Specifies the resources that the lifecycle policy applies to. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder includeResources(LifecyclePolicyPolicyDetailActionIncludeResourcesArgs includeResources) {
            return includeResources(Output.of(includeResources));
        }

        /**
         * @param type Specifies the lifecycle action to take. Valid values: `DELETE`, `DEPRECATE` or `DISABLE`.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Specifies the lifecycle action to take. Valid values: `DELETE`, `DEPRECATE` or `DISABLE`.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public LifecyclePolicyPolicyDetailActionArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("LifecyclePolicyPolicyDetailActionArgs", "type");
            }
            return $;
        }
    }

}
