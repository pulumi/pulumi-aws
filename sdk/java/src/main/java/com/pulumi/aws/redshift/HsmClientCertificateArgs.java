// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.redshift;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HsmClientCertificateArgs extends com.pulumi.resources.ResourceArgs {

    public static final HsmClientCertificateArgs Empty = new HsmClientCertificateArgs();

    /**
     * The identifier of the HSM client certificate.
     * 
     */
    @Import(name="hsmClientCertificateIdentifier", required=true)
    private Output<String> hsmClientCertificateIdentifier;

    /**
     * @return The identifier of the HSM client certificate.
     * 
     */
    public Output<String> hsmClientCertificateIdentifier() {
        return this.hsmClientCertificateIdentifier;
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private HsmClientCertificateArgs() {}

    private HsmClientCertificateArgs(HsmClientCertificateArgs $) {
        this.hsmClientCertificateIdentifier = $.hsmClientCertificateIdentifier;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HsmClientCertificateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HsmClientCertificateArgs $;

        public Builder() {
            $ = new HsmClientCertificateArgs();
        }

        public Builder(HsmClientCertificateArgs defaults) {
            $ = new HsmClientCertificateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param hsmClientCertificateIdentifier The identifier of the HSM client certificate.
         * 
         * @return builder
         * 
         */
        public Builder hsmClientCertificateIdentifier(Output<String> hsmClientCertificateIdentifier) {
            $.hsmClientCertificateIdentifier = hsmClientCertificateIdentifier;
            return this;
        }

        /**
         * @param hsmClientCertificateIdentifier The identifier of the HSM client certificate.
         * 
         * @return builder
         * 
         */
        public Builder hsmClientCertificateIdentifier(String hsmClientCertificateIdentifier) {
            return hsmClientCertificateIdentifier(Output.of(hsmClientCertificateIdentifier));
        }

        /**
         * @param tags A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public HsmClientCertificateArgs build() {
            if ($.hsmClientCertificateIdentifier == null) {
                throw new MissingRequiredPropertyException("HsmClientCertificateArgs", "hsmClientCertificateIdentifier");
            }
            return $;
        }
    }

}
