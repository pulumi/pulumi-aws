// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.networkfirewall.inputs;

import com.pulumi.aws.networkfirewall.inputs.FirewallEncryptionConfigurationArgs;
import com.pulumi.aws.networkfirewall.inputs.FirewallFirewallStatusArgs;
import com.pulumi.aws.networkfirewall.inputs.FirewallSubnetMappingArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FirewallState extends com.pulumi.resources.ResourceArgs {

    public static final FirewallState Empty = new FirewallState();

    /**
     * The Amazon Resource Name (ARN) that identifies the firewall.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return The Amazon Resource Name (ARN) that identifies the firewall.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * A boolean flag indicating whether it is possible to delete the firewall. Defaults to `false`.
     * 
     */
    @Import(name="deleteProtection")
    private @Nullable Output<Boolean> deleteProtection;

    /**
     * @return A boolean flag indicating whether it is possible to delete the firewall. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> deleteProtection() {
        return Optional.ofNullable(this.deleteProtection);
    }

    /**
     * A friendly description of the firewall.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A friendly description of the firewall.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * KMS encryption configuration settings. See Encryption Configuration below for details.
     * 
     */
    @Import(name="encryptionConfiguration")
    private @Nullable Output<FirewallEncryptionConfigurationArgs> encryptionConfiguration;

    /**
     * @return KMS encryption configuration settings. See Encryption Configuration below for details.
     * 
     */
    public Optional<Output<FirewallEncryptionConfigurationArgs>> encryptionConfiguration() {
        return Optional.ofNullable(this.encryptionConfiguration);
    }

    /**
     * The Amazon Resource Name (ARN) of the VPC Firewall policy.
     * 
     */
    @Import(name="firewallPolicyArn")
    private @Nullable Output<String> firewallPolicyArn;

    /**
     * @return The Amazon Resource Name (ARN) of the VPC Firewall policy.
     * 
     */
    public Optional<Output<String>> firewallPolicyArn() {
        return Optional.ofNullable(this.firewallPolicyArn);
    }

    /**
     * A boolean flag indicating whether it is possible to change the associated firewall policy. Defaults to `false`.
     * 
     */
    @Import(name="firewallPolicyChangeProtection")
    private @Nullable Output<Boolean> firewallPolicyChangeProtection;

    /**
     * @return A boolean flag indicating whether it is possible to change the associated firewall policy. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> firewallPolicyChangeProtection() {
        return Optional.ofNullable(this.firewallPolicyChangeProtection);
    }

    /**
     * Nested list of information about the current status of the firewall.
     * 
     */
    @Import(name="firewallStatuses")
    private @Nullable Output<List<FirewallFirewallStatusArgs>> firewallStatuses;

    /**
     * @return Nested list of information about the current status of the firewall.
     * 
     */
    public Optional<Output<List<FirewallFirewallStatusArgs>>> firewallStatuses() {
        return Optional.ofNullable(this.firewallStatuses);
    }

    /**
     * A friendly name of the firewall.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return A friendly name of the firewall.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A boolean flag indicating whether it is possible to change the associated subnet(s). Defaults to `false`.
     * 
     */
    @Import(name="subnetChangeProtection")
    private @Nullable Output<Boolean> subnetChangeProtection;

    /**
     * @return A boolean flag indicating whether it is possible to change the associated subnet(s). Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> subnetChangeProtection() {
        return Optional.ofNullable(this.subnetChangeProtection);
    }

    /**
     * Set of configuration blocks describing the public subnets. Each subnet must belong to a different Availability Zone in the VPC. AWS Network Firewall creates a firewall endpoint in each subnet. See Subnet Mapping below for details.
     * 
     */
    @Import(name="subnetMappings")
    private @Nullable Output<List<FirewallSubnetMappingArgs>> subnetMappings;

    /**
     * @return Set of configuration blocks describing the public subnets. Each subnet must belong to a different Availability Zone in the VPC. AWS Network Firewall creates a firewall endpoint in each subnet. See Subnet Mapping below for details.
     * 
     */
    public Optional<Output<List<FirewallSubnetMappingArgs>>> subnetMappings() {
        return Optional.ofNullable(this.subnetMappings);
    }

    /**
     * Map of resource tags to associate with the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Map of resource tags to associate with the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    /**
     * A string token used when updating a firewall.
     * 
     */
    @Import(name="updateToken")
    private @Nullable Output<String> updateToken;

    /**
     * @return A string token used when updating a firewall.
     * 
     */
    public Optional<Output<String>> updateToken() {
        return Optional.ofNullable(this.updateToken);
    }

    /**
     * The unique identifier of the VPC where AWS Network Firewall should create the firewall.
     * 
     */
    @Import(name="vpcId")
    private @Nullable Output<String> vpcId;

    /**
     * @return The unique identifier of the VPC where AWS Network Firewall should create the firewall.
     * 
     */
    public Optional<Output<String>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    private FirewallState() {}

    private FirewallState(FirewallState $) {
        this.arn = $.arn;
        this.deleteProtection = $.deleteProtection;
        this.description = $.description;
        this.encryptionConfiguration = $.encryptionConfiguration;
        this.firewallPolicyArn = $.firewallPolicyArn;
        this.firewallPolicyChangeProtection = $.firewallPolicyChangeProtection;
        this.firewallStatuses = $.firewallStatuses;
        this.name = $.name;
        this.subnetChangeProtection = $.subnetChangeProtection;
        this.subnetMappings = $.subnetMappings;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.updateToken = $.updateToken;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirewallState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirewallState $;

        public Builder() {
            $ = new FirewallState();
        }

        public Builder(FirewallState defaults) {
            $ = new FirewallState(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn The Amazon Resource Name (ARN) that identifies the firewall.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn The Amazon Resource Name (ARN) that identifies the firewall.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param deleteProtection A boolean flag indicating whether it is possible to delete the firewall. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder deleteProtection(@Nullable Output<Boolean> deleteProtection) {
            $.deleteProtection = deleteProtection;
            return this;
        }

        /**
         * @param deleteProtection A boolean flag indicating whether it is possible to delete the firewall. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder deleteProtection(Boolean deleteProtection) {
            return deleteProtection(Output.of(deleteProtection));
        }

        /**
         * @param description A friendly description of the firewall.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A friendly description of the firewall.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param encryptionConfiguration KMS encryption configuration settings. See Encryption Configuration below for details.
         * 
         * @return builder
         * 
         */
        public Builder encryptionConfiguration(@Nullable Output<FirewallEncryptionConfigurationArgs> encryptionConfiguration) {
            $.encryptionConfiguration = encryptionConfiguration;
            return this;
        }

        /**
         * @param encryptionConfiguration KMS encryption configuration settings. See Encryption Configuration below for details.
         * 
         * @return builder
         * 
         */
        public Builder encryptionConfiguration(FirewallEncryptionConfigurationArgs encryptionConfiguration) {
            return encryptionConfiguration(Output.of(encryptionConfiguration));
        }

        /**
         * @param firewallPolicyArn The Amazon Resource Name (ARN) of the VPC Firewall policy.
         * 
         * @return builder
         * 
         */
        public Builder firewallPolicyArn(@Nullable Output<String> firewallPolicyArn) {
            $.firewallPolicyArn = firewallPolicyArn;
            return this;
        }

        /**
         * @param firewallPolicyArn The Amazon Resource Name (ARN) of the VPC Firewall policy.
         * 
         * @return builder
         * 
         */
        public Builder firewallPolicyArn(String firewallPolicyArn) {
            return firewallPolicyArn(Output.of(firewallPolicyArn));
        }

        /**
         * @param firewallPolicyChangeProtection A boolean flag indicating whether it is possible to change the associated firewall policy. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder firewallPolicyChangeProtection(@Nullable Output<Boolean> firewallPolicyChangeProtection) {
            $.firewallPolicyChangeProtection = firewallPolicyChangeProtection;
            return this;
        }

        /**
         * @param firewallPolicyChangeProtection A boolean flag indicating whether it is possible to change the associated firewall policy. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder firewallPolicyChangeProtection(Boolean firewallPolicyChangeProtection) {
            return firewallPolicyChangeProtection(Output.of(firewallPolicyChangeProtection));
        }

        /**
         * @param firewallStatuses Nested list of information about the current status of the firewall.
         * 
         * @return builder
         * 
         */
        public Builder firewallStatuses(@Nullable Output<List<FirewallFirewallStatusArgs>> firewallStatuses) {
            $.firewallStatuses = firewallStatuses;
            return this;
        }

        /**
         * @param firewallStatuses Nested list of information about the current status of the firewall.
         * 
         * @return builder
         * 
         */
        public Builder firewallStatuses(List<FirewallFirewallStatusArgs> firewallStatuses) {
            return firewallStatuses(Output.of(firewallStatuses));
        }

        /**
         * @param firewallStatuses Nested list of information about the current status of the firewall.
         * 
         * @return builder
         * 
         */
        public Builder firewallStatuses(FirewallFirewallStatusArgs... firewallStatuses) {
            return firewallStatuses(List.of(firewallStatuses));
        }

        /**
         * @param name A friendly name of the firewall.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name A friendly name of the firewall.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param subnetChangeProtection A boolean flag indicating whether it is possible to change the associated subnet(s). Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder subnetChangeProtection(@Nullable Output<Boolean> subnetChangeProtection) {
            $.subnetChangeProtection = subnetChangeProtection;
            return this;
        }

        /**
         * @param subnetChangeProtection A boolean flag indicating whether it is possible to change the associated subnet(s). Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder subnetChangeProtection(Boolean subnetChangeProtection) {
            return subnetChangeProtection(Output.of(subnetChangeProtection));
        }

        /**
         * @param subnetMappings Set of configuration blocks describing the public subnets. Each subnet must belong to a different Availability Zone in the VPC. AWS Network Firewall creates a firewall endpoint in each subnet. See Subnet Mapping below for details.
         * 
         * @return builder
         * 
         */
        public Builder subnetMappings(@Nullable Output<List<FirewallSubnetMappingArgs>> subnetMappings) {
            $.subnetMappings = subnetMappings;
            return this;
        }

        /**
         * @param subnetMappings Set of configuration blocks describing the public subnets. Each subnet must belong to a different Availability Zone in the VPC. AWS Network Firewall creates a firewall endpoint in each subnet. See Subnet Mapping below for details.
         * 
         * @return builder
         * 
         */
        public Builder subnetMappings(List<FirewallSubnetMappingArgs> subnetMappings) {
            return subnetMappings(Output.of(subnetMappings));
        }

        /**
         * @param subnetMappings Set of configuration blocks describing the public subnets. Each subnet must belong to a different Availability Zone in the VPC. AWS Network Firewall creates a firewall endpoint in each subnet. See Subnet Mapping below for details.
         * 
         * @return builder
         * 
         */
        public Builder subnetMappings(FirewallSubnetMappingArgs... subnetMappings) {
            return subnetMappings(List.of(subnetMappings));
        }

        /**
         * @param tags Map of resource tags to associate with the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Map of resource tags to associate with the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        /**
         * @param tagsAll A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
         * 
         * @return builder
         * 
         * @deprecated
         * Please use `tags` instead.
         * 
         */
        @Deprecated /* Please use `tags` instead. */
        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        /**
         * @param updateToken A string token used when updating a firewall.
         * 
         * @return builder
         * 
         */
        public Builder updateToken(@Nullable Output<String> updateToken) {
            $.updateToken = updateToken;
            return this;
        }

        /**
         * @param updateToken A string token used when updating a firewall.
         * 
         * @return builder
         * 
         */
        public Builder updateToken(String updateToken) {
            return updateToken(Output.of(updateToken));
        }

        /**
         * @param vpcId The unique identifier of the VPC where AWS Network Firewall should create the firewall.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(@Nullable Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId The unique identifier of the VPC where AWS Network Firewall should create the firewall.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        public FirewallState build() {
            return $;
        }
    }

}
