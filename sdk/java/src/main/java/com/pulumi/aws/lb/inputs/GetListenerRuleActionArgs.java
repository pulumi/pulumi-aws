// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lb.inputs;

import com.pulumi.aws.lb.inputs.GetListenerRuleActionAuthenticateCognitoArgs;
import com.pulumi.aws.lb.inputs.GetListenerRuleActionAuthenticateOidcArgs;
import com.pulumi.aws.lb.inputs.GetListenerRuleActionFixedResponseArgs;
import com.pulumi.aws.lb.inputs.GetListenerRuleActionForwardArgs;
import com.pulumi.aws.lb.inputs.GetListenerRuleActionRedirectArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetListenerRuleActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetListenerRuleActionArgs Empty = new GetListenerRuleActionArgs();

    /**
     * An action to authenticate using Amazon Cognito.
     * Detailed below.
     * 
     */
    @Import(name="authenticateCognitos")
    private @Nullable Output<List<GetListenerRuleActionAuthenticateCognitoArgs>> authenticateCognitos;

    /**
     * @return An action to authenticate using Amazon Cognito.
     * Detailed below.
     * 
     */
    public Optional<Output<List<GetListenerRuleActionAuthenticateCognitoArgs>>> authenticateCognitos() {
        return Optional.ofNullable(this.authenticateCognitos);
    }

    /**
     * An action to authenticate using OIDC.
     * Detailed below.
     * 
     */
    @Import(name="authenticateOidcs")
    private @Nullable Output<List<GetListenerRuleActionAuthenticateOidcArgs>> authenticateOidcs;

    /**
     * @return An action to authenticate using OIDC.
     * Detailed below.
     * 
     */
    public Optional<Output<List<GetListenerRuleActionAuthenticateOidcArgs>>> authenticateOidcs() {
        return Optional.ofNullable(this.authenticateOidcs);
    }

    /**
     * An action to return a fixed response.
     * Detailed below.
     * 
     */
    @Import(name="fixedResponses")
    private @Nullable Output<List<GetListenerRuleActionFixedResponseArgs>> fixedResponses;

    /**
     * @return An action to return a fixed response.
     * Detailed below.
     * 
     */
    public Optional<Output<List<GetListenerRuleActionFixedResponseArgs>>> fixedResponses() {
        return Optional.ofNullable(this.fixedResponses);
    }

    /**
     * An action to forward the request.
     * Detailed below.
     * 
     */
    @Import(name="forwards")
    private @Nullable Output<List<GetListenerRuleActionForwardArgs>> forwards;

    /**
     * @return An action to forward the request.
     * Detailed below.
     * 
     */
    public Optional<Output<List<GetListenerRuleActionForwardArgs>>> forwards() {
        return Optional.ofNullable(this.forwards);
    }

    /**
     * The evaluation order of the action.
     * 
     */
    @Import(name="order", required=true)
    private Output<Integer> order;

    /**
     * @return The evaluation order of the action.
     * 
     */
    public Output<Integer> order() {
        return this.order;
    }

    /**
     * An action to redirect the request.
     * Detailed below.
     * 
     */
    @Import(name="redirects")
    private @Nullable Output<List<GetListenerRuleActionRedirectArgs>> redirects;

    /**
     * @return An action to redirect the request.
     * Detailed below.
     * 
     */
    public Optional<Output<List<GetListenerRuleActionRedirectArgs>>> redirects() {
        return Optional.ofNullable(this.redirects);
    }

    /**
     * The type of the action, indicates which sub-block will be populated.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The type of the action, indicates which sub-block will be populated.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private GetListenerRuleActionArgs() {}

    private GetListenerRuleActionArgs(GetListenerRuleActionArgs $) {
        this.authenticateCognitos = $.authenticateCognitos;
        this.authenticateOidcs = $.authenticateOidcs;
        this.fixedResponses = $.fixedResponses;
        this.forwards = $.forwards;
        this.order = $.order;
        this.redirects = $.redirects;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetListenerRuleActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetListenerRuleActionArgs $;

        public Builder() {
            $ = new GetListenerRuleActionArgs();
        }

        public Builder(GetListenerRuleActionArgs defaults) {
            $ = new GetListenerRuleActionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authenticateCognitos An action to authenticate using Amazon Cognito.
         * Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder authenticateCognitos(@Nullable Output<List<GetListenerRuleActionAuthenticateCognitoArgs>> authenticateCognitos) {
            $.authenticateCognitos = authenticateCognitos;
            return this;
        }

        /**
         * @param authenticateCognitos An action to authenticate using Amazon Cognito.
         * Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder authenticateCognitos(List<GetListenerRuleActionAuthenticateCognitoArgs> authenticateCognitos) {
            return authenticateCognitos(Output.of(authenticateCognitos));
        }

        /**
         * @param authenticateCognitos An action to authenticate using Amazon Cognito.
         * Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder authenticateCognitos(GetListenerRuleActionAuthenticateCognitoArgs... authenticateCognitos) {
            return authenticateCognitos(List.of(authenticateCognitos));
        }

        /**
         * @param authenticateOidcs An action to authenticate using OIDC.
         * Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder authenticateOidcs(@Nullable Output<List<GetListenerRuleActionAuthenticateOidcArgs>> authenticateOidcs) {
            $.authenticateOidcs = authenticateOidcs;
            return this;
        }

        /**
         * @param authenticateOidcs An action to authenticate using OIDC.
         * Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder authenticateOidcs(List<GetListenerRuleActionAuthenticateOidcArgs> authenticateOidcs) {
            return authenticateOidcs(Output.of(authenticateOidcs));
        }

        /**
         * @param authenticateOidcs An action to authenticate using OIDC.
         * Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder authenticateOidcs(GetListenerRuleActionAuthenticateOidcArgs... authenticateOidcs) {
            return authenticateOidcs(List.of(authenticateOidcs));
        }

        /**
         * @param fixedResponses An action to return a fixed response.
         * Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder fixedResponses(@Nullable Output<List<GetListenerRuleActionFixedResponseArgs>> fixedResponses) {
            $.fixedResponses = fixedResponses;
            return this;
        }

        /**
         * @param fixedResponses An action to return a fixed response.
         * Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder fixedResponses(List<GetListenerRuleActionFixedResponseArgs> fixedResponses) {
            return fixedResponses(Output.of(fixedResponses));
        }

        /**
         * @param fixedResponses An action to return a fixed response.
         * Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder fixedResponses(GetListenerRuleActionFixedResponseArgs... fixedResponses) {
            return fixedResponses(List.of(fixedResponses));
        }

        /**
         * @param forwards An action to forward the request.
         * Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder forwards(@Nullable Output<List<GetListenerRuleActionForwardArgs>> forwards) {
            $.forwards = forwards;
            return this;
        }

        /**
         * @param forwards An action to forward the request.
         * Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder forwards(List<GetListenerRuleActionForwardArgs> forwards) {
            return forwards(Output.of(forwards));
        }

        /**
         * @param forwards An action to forward the request.
         * Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder forwards(GetListenerRuleActionForwardArgs... forwards) {
            return forwards(List.of(forwards));
        }

        /**
         * @param order The evaluation order of the action.
         * 
         * @return builder
         * 
         */
        public Builder order(Output<Integer> order) {
            $.order = order;
            return this;
        }

        /**
         * @param order The evaluation order of the action.
         * 
         * @return builder
         * 
         */
        public Builder order(Integer order) {
            return order(Output.of(order));
        }

        /**
         * @param redirects An action to redirect the request.
         * Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder redirects(@Nullable Output<List<GetListenerRuleActionRedirectArgs>> redirects) {
            $.redirects = redirects;
            return this;
        }

        /**
         * @param redirects An action to redirect the request.
         * Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder redirects(List<GetListenerRuleActionRedirectArgs> redirects) {
            return redirects(Output.of(redirects));
        }

        /**
         * @param redirects An action to redirect the request.
         * Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder redirects(GetListenerRuleActionRedirectArgs... redirects) {
            return redirects(List.of(redirects));
        }

        /**
         * @param type The type of the action, indicates which sub-block will be populated.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of the action, indicates which sub-block will be populated.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public GetListenerRuleActionArgs build() {
            if ($.order == null) {
                throw new MissingRequiredPropertyException("GetListenerRuleActionArgs", "order");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("GetListenerRuleActionArgs", "type");
            }
            return $;
        }
    }

}
