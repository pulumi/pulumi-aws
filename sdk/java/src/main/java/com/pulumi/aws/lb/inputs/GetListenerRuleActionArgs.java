// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lb.inputs;

import com.pulumi.aws.lb.inputs.GetListenerRuleActionAuthenticateCognitoArgs;
import com.pulumi.aws.lb.inputs.GetListenerRuleActionAuthenticateOidcArgs;
import com.pulumi.aws.lb.inputs.GetListenerRuleActionFixedResponseArgs;
import com.pulumi.aws.lb.inputs.GetListenerRuleActionForwardArgs;
import com.pulumi.aws.lb.inputs.GetListenerRuleActionRedirectArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetListenerRuleActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetListenerRuleActionArgs Empty = new GetListenerRuleActionArgs();

    /**
     * An action to authenticate using Amazon Cognito.
     * Detailed below.
     * 
     */
    @Import(name="authenticateCognito")
    private @Nullable Output<GetListenerRuleActionAuthenticateCognitoArgs> authenticateCognito;

    /**
     * @return An action to authenticate using Amazon Cognito.
     * Detailed below.
     * 
     */
    public Optional<Output<GetListenerRuleActionAuthenticateCognitoArgs>> authenticateCognito() {
        return Optional.ofNullable(this.authenticateCognito);
    }

    /**
     * An action to authenticate using OIDC.
     * Detailed below.
     * 
     */
    @Import(name="authenticateOidc")
    private @Nullable Output<GetListenerRuleActionAuthenticateOidcArgs> authenticateOidc;

    /**
     * @return An action to authenticate using OIDC.
     * Detailed below.
     * 
     */
    public Optional<Output<GetListenerRuleActionAuthenticateOidcArgs>> authenticateOidc() {
        return Optional.ofNullable(this.authenticateOidc);
    }

    /**
     * An action to return a fixed response.
     * Detailed below.
     * 
     */
    @Import(name="fixedResponse")
    private @Nullable Output<GetListenerRuleActionFixedResponseArgs> fixedResponse;

    /**
     * @return An action to return a fixed response.
     * Detailed below.
     * 
     */
    public Optional<Output<GetListenerRuleActionFixedResponseArgs>> fixedResponse() {
        return Optional.ofNullable(this.fixedResponse);
    }

    /**
     * An action to forward the request.
     * Detailed below.
     * 
     */
    @Import(name="forward")
    private @Nullable Output<GetListenerRuleActionForwardArgs> forward;

    /**
     * @return An action to forward the request.
     * Detailed below.
     * 
     */
    public Optional<Output<GetListenerRuleActionForwardArgs>> forward() {
        return Optional.ofNullable(this.forward);
    }

    /**
     * The evaluation order of the action.
     * 
     */
    @Import(name="order", required=true)
    private Output<Double> order;

    /**
     * @return The evaluation order of the action.
     * 
     */
    public Output<Double> order() {
        return this.order;
    }

    /**
     * An action to redirect the request.
     * Detailed below.
     * 
     */
    @Import(name="redirect")
    private @Nullable Output<GetListenerRuleActionRedirectArgs> redirect;

    /**
     * @return An action to redirect the request.
     * Detailed below.
     * 
     */
    public Optional<Output<GetListenerRuleActionRedirectArgs>> redirect() {
        return Optional.ofNullable(this.redirect);
    }

    /**
     * The type of the action, indicates which sub-block will be populated.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The type of the action, indicates which sub-block will be populated.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private GetListenerRuleActionArgs() {}

    private GetListenerRuleActionArgs(GetListenerRuleActionArgs $) {
        this.authenticateCognito = $.authenticateCognito;
        this.authenticateOidc = $.authenticateOidc;
        this.fixedResponse = $.fixedResponse;
        this.forward = $.forward;
        this.order = $.order;
        this.redirect = $.redirect;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetListenerRuleActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetListenerRuleActionArgs $;

        public Builder() {
            $ = new GetListenerRuleActionArgs();
        }

        public Builder(GetListenerRuleActionArgs defaults) {
            $ = new GetListenerRuleActionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authenticateCognito An action to authenticate using Amazon Cognito.
         * Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder authenticateCognito(@Nullable Output<GetListenerRuleActionAuthenticateCognitoArgs> authenticateCognito) {
            $.authenticateCognito = authenticateCognito;
            return this;
        }

        /**
         * @param authenticateCognito An action to authenticate using Amazon Cognito.
         * Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder authenticateCognito(GetListenerRuleActionAuthenticateCognitoArgs authenticateCognito) {
            return authenticateCognito(Output.of(authenticateCognito));
        }

        /**
         * @param authenticateOidc An action to authenticate using OIDC.
         * Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder authenticateOidc(@Nullable Output<GetListenerRuleActionAuthenticateOidcArgs> authenticateOidc) {
            $.authenticateOidc = authenticateOidc;
            return this;
        }

        /**
         * @param authenticateOidc An action to authenticate using OIDC.
         * Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder authenticateOidc(GetListenerRuleActionAuthenticateOidcArgs authenticateOidc) {
            return authenticateOidc(Output.of(authenticateOidc));
        }

        /**
         * @param fixedResponse An action to return a fixed response.
         * Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder fixedResponse(@Nullable Output<GetListenerRuleActionFixedResponseArgs> fixedResponse) {
            $.fixedResponse = fixedResponse;
            return this;
        }

        /**
         * @param fixedResponse An action to return a fixed response.
         * Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder fixedResponse(GetListenerRuleActionFixedResponseArgs fixedResponse) {
            return fixedResponse(Output.of(fixedResponse));
        }

        /**
         * @param forward An action to forward the request.
         * Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder forward(@Nullable Output<GetListenerRuleActionForwardArgs> forward) {
            $.forward = forward;
            return this;
        }

        /**
         * @param forward An action to forward the request.
         * Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder forward(GetListenerRuleActionForwardArgs forward) {
            return forward(Output.of(forward));
        }

        /**
         * @param order The evaluation order of the action.
         * 
         * @return builder
         * 
         */
        public Builder order(Output<Double> order) {
            $.order = order;
            return this;
        }

        /**
         * @param order The evaluation order of the action.
         * 
         * @return builder
         * 
         */
        public Builder order(Double order) {
            return order(Output.of(order));
        }

        /**
         * @param redirect An action to redirect the request.
         * Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder redirect(@Nullable Output<GetListenerRuleActionRedirectArgs> redirect) {
            $.redirect = redirect;
            return this;
        }

        /**
         * @param redirect An action to redirect the request.
         * Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder redirect(GetListenerRuleActionRedirectArgs redirect) {
            return redirect(Output.of(redirect));
        }

        /**
         * @param type The type of the action, indicates which sub-block will be populated.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of the action, indicates which sub-block will be populated.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public GetListenerRuleActionArgs build() {
            if ($.order == null) {
                throw new MissingRequiredPropertyException("GetListenerRuleActionArgs", "order");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("GetListenerRuleActionArgs", "type");
            }
            return $;
        }
    }

}
