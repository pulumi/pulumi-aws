// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ebs;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.ebs.inputs.GetEbsVolumesArgs;
import com.pulumi.aws.ebs.inputs.GetEbsVolumesPlainArgs;
import com.pulumi.aws.ebs.inputs.GetSnapshotArgs;
import com.pulumi.aws.ebs.inputs.GetSnapshotIdsArgs;
import com.pulumi.aws.ebs.inputs.GetSnapshotIdsPlainArgs;
import com.pulumi.aws.ebs.inputs.GetSnapshotPlainArgs;
import com.pulumi.aws.ebs.inputs.GetVolumeArgs;
import com.pulumi.aws.ebs.inputs.GetVolumePlainArgs;
import com.pulumi.aws.ebs.outputs.GetDefaultKmsKeyResult;
import com.pulumi.aws.ebs.outputs.GetEbsVolumesResult;
import com.pulumi.aws.ebs.outputs.GetEncryptionByDefaultResult;
import com.pulumi.aws.ebs.outputs.GetSnapshotIdsResult;
import com.pulumi.aws.ebs.outputs.GetSnapshotResult;
import com.pulumi.aws.ebs.outputs.GetVolumeResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.resources.InvokeArgs;
import java.util.concurrent.CompletableFuture;

public final class EbsFunctions {
    /**
     * Use this data source to get the default EBS encryption KMS key in the current region.
     * 
     */
    public static Output<GetDefaultKmsKeyResult> getDefaultKmsKey() {
        return getDefaultKmsKey(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the default EBS encryption KMS key in the current region.
     * 
     */
    public static CompletableFuture<GetDefaultKmsKeyResult> getDefaultKmsKeyPlain() {
        return getDefaultKmsKeyPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the default EBS encryption KMS key in the current region.
     * 
     */
    public static Output<GetDefaultKmsKeyResult> getDefaultKmsKey(InvokeArgs args) {
        return getDefaultKmsKey(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the default EBS encryption KMS key in the current region.
     * 
     */
    public static CompletableFuture<GetDefaultKmsKeyResult> getDefaultKmsKeyPlain(InvokeArgs args) {
        return getDefaultKmsKeyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the default EBS encryption KMS key in the current region.
     * 
     */
    public static Output<GetDefaultKmsKeyResult> getDefaultKmsKey(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:ebs/getDefaultKmsKey:getDefaultKmsKey", TypeShape.of(GetDefaultKmsKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the default EBS encryption KMS key in the current region.
     * 
     */
    public static CompletableFuture<GetDefaultKmsKeyResult> getDefaultKmsKeyPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:ebs/getDefaultKmsKey:getDefaultKmsKey", TypeShape.of(GetDefaultKmsKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * `aws.ebs.getEbsVolumes` provides identifying information for EBS volumes matching given criteria.
     * 
     * This data source can be useful for getting a list of volume IDs with (for example) matching tags.
     * 
     */
    public static Output<GetEbsVolumesResult> getEbsVolumes() {
        return getEbsVolumes(GetEbsVolumesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * `aws.ebs.getEbsVolumes` provides identifying information for EBS volumes matching given criteria.
     * 
     * This data source can be useful for getting a list of volume IDs with (for example) matching tags.
     * 
     */
    public static CompletableFuture<GetEbsVolumesResult> getEbsVolumesPlain() {
        return getEbsVolumesPlain(GetEbsVolumesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * `aws.ebs.getEbsVolumes` provides identifying information for EBS volumes matching given criteria.
     * 
     * This data source can be useful for getting a list of volume IDs with (for example) matching tags.
     * 
     */
    public static Output<GetEbsVolumesResult> getEbsVolumes(GetEbsVolumesArgs args) {
        return getEbsVolumes(args, InvokeOptions.Empty);
    }
    /**
     * `aws.ebs.getEbsVolumes` provides identifying information for EBS volumes matching given criteria.
     * 
     * This data source can be useful for getting a list of volume IDs with (for example) matching tags.
     * 
     */
    public static CompletableFuture<GetEbsVolumesResult> getEbsVolumesPlain(GetEbsVolumesPlainArgs args) {
        return getEbsVolumesPlain(args, InvokeOptions.Empty);
    }
    /**
     * `aws.ebs.getEbsVolumes` provides identifying information for EBS volumes matching given criteria.
     * 
     * This data source can be useful for getting a list of volume IDs with (for example) matching tags.
     * 
     */
    public static Output<GetEbsVolumesResult> getEbsVolumes(GetEbsVolumesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:ebs/getEbsVolumes:getEbsVolumes", TypeShape.of(GetEbsVolumesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * `aws.ebs.getEbsVolumes` provides identifying information for EBS volumes matching given criteria.
     * 
     * This data source can be useful for getting a list of volume IDs with (for example) matching tags.
     * 
     */
    public static CompletableFuture<GetEbsVolumesResult> getEbsVolumesPlain(GetEbsVolumesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:ebs/getEbsVolumes:getEbsVolumes", TypeShape.of(GetEbsVolumesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provides a way to check whether default EBS encryption is enabled for your AWS account in the current AWS region.
     * 
     */
    public static Output<GetEncryptionByDefaultResult> getEncryptionByDefault() {
        return getEncryptionByDefault(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Provides a way to check whether default EBS encryption is enabled for your AWS account in the current AWS region.
     * 
     */
    public static CompletableFuture<GetEncryptionByDefaultResult> getEncryptionByDefaultPlain() {
        return getEncryptionByDefaultPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Provides a way to check whether default EBS encryption is enabled for your AWS account in the current AWS region.
     * 
     */
    public static Output<GetEncryptionByDefaultResult> getEncryptionByDefault(InvokeArgs args) {
        return getEncryptionByDefault(args, InvokeOptions.Empty);
    }
    /**
     * Provides a way to check whether default EBS encryption is enabled for your AWS account in the current AWS region.
     * 
     */
    public static CompletableFuture<GetEncryptionByDefaultResult> getEncryptionByDefaultPlain(InvokeArgs args) {
        return getEncryptionByDefaultPlain(args, InvokeOptions.Empty);
    }
    /**
     * Provides a way to check whether default EBS encryption is enabled for your AWS account in the current AWS region.
     * 
     */
    public static Output<GetEncryptionByDefaultResult> getEncryptionByDefault(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:ebs/getEncryptionByDefault:getEncryptionByDefault", TypeShape.of(GetEncryptionByDefaultResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provides a way to check whether default EBS encryption is enabled for your AWS account in the current AWS region.
     * 
     */
    public static CompletableFuture<GetEncryptionByDefaultResult> getEncryptionByDefaultPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:ebs/getEncryptionByDefault:getEncryptionByDefault", TypeShape.of(GetEncryptionByDefaultResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about an EBS Snapshot for use when provisioning EBS Volumes
     * 
     */
    public static Output<GetSnapshotResult> getSnapshot() {
        return getSnapshot(GetSnapshotArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about an EBS Snapshot for use when provisioning EBS Volumes
     * 
     */
    public static CompletableFuture<GetSnapshotResult> getSnapshotPlain() {
        return getSnapshotPlain(GetSnapshotPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about an EBS Snapshot for use when provisioning EBS Volumes
     * 
     */
    public static Output<GetSnapshotResult> getSnapshot(GetSnapshotArgs args) {
        return getSnapshot(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about an EBS Snapshot for use when provisioning EBS Volumes
     * 
     */
    public static CompletableFuture<GetSnapshotResult> getSnapshotPlain(GetSnapshotPlainArgs args) {
        return getSnapshotPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about an EBS Snapshot for use when provisioning EBS Volumes
     * 
     */
    public static Output<GetSnapshotResult> getSnapshot(GetSnapshotArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:ebs/getSnapshot:getSnapshot", TypeShape.of(GetSnapshotResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about an EBS Snapshot for use when provisioning EBS Volumes
     * 
     */
    public static CompletableFuture<GetSnapshotResult> getSnapshotPlain(GetSnapshotPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:ebs/getSnapshot:getSnapshot", TypeShape.of(GetSnapshotResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a list of EBS Snapshot IDs matching the specified
     * criteria.
     * 
     */
    public static Output<GetSnapshotIdsResult> getSnapshotIds() {
        return getSnapshotIds(GetSnapshotIdsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get a list of EBS Snapshot IDs matching the specified
     * criteria.
     * 
     */
    public static CompletableFuture<GetSnapshotIdsResult> getSnapshotIdsPlain() {
        return getSnapshotIdsPlain(GetSnapshotIdsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get a list of EBS Snapshot IDs matching the specified
     * criteria.
     * 
     */
    public static Output<GetSnapshotIdsResult> getSnapshotIds(GetSnapshotIdsArgs args) {
        return getSnapshotIds(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get a list of EBS Snapshot IDs matching the specified
     * criteria.
     * 
     */
    public static CompletableFuture<GetSnapshotIdsResult> getSnapshotIdsPlain(GetSnapshotIdsPlainArgs args) {
        return getSnapshotIdsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get a list of EBS Snapshot IDs matching the specified
     * criteria.
     * 
     */
    public static Output<GetSnapshotIdsResult> getSnapshotIds(GetSnapshotIdsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:ebs/getSnapshotIds:getSnapshotIds", TypeShape.of(GetSnapshotIdsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a list of EBS Snapshot IDs matching the specified
     * criteria.
     * 
     */
    public static CompletableFuture<GetSnapshotIdsResult> getSnapshotIdsPlain(GetSnapshotIdsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:ebs/getSnapshotIds:getSnapshotIds", TypeShape.of(GetSnapshotIdsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about an EBS volume for use in other
     * resources.
     * 
     */
    public static Output<GetVolumeResult> getVolume() {
        return getVolume(GetVolumeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about an EBS volume for use in other
     * resources.
     * 
     */
    public static CompletableFuture<GetVolumeResult> getVolumePlain() {
        return getVolumePlain(GetVolumePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about an EBS volume for use in other
     * resources.
     * 
     */
    public static Output<GetVolumeResult> getVolume(GetVolumeArgs args) {
        return getVolume(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about an EBS volume for use in other
     * resources.
     * 
     */
    public static CompletableFuture<GetVolumeResult> getVolumePlain(GetVolumePlainArgs args) {
        return getVolumePlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about an EBS volume for use in other
     * resources.
     * 
     */
    public static Output<GetVolumeResult> getVolume(GetVolumeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:ebs/getVolume:getVolume", TypeShape.of(GetVolumeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about an EBS volume for use in other
     * resources.
     * 
     */
    public static CompletableFuture<GetVolumeResult> getVolumePlain(GetVolumePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:ebs/getVolume:getVolume", TypeShape.of(GetVolumeResult.class), args, Utilities.withVersion(options));
    }
}
