// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.autoscaling.inputs;

import com.pulumi.aws.autoscaling.inputs.PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricArgs;
import com.pulumi.aws.autoscaling.inputs.PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicyTargetTrackingConfigurationCustomizedMetricSpecificationArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicyTargetTrackingConfigurationCustomizedMetricSpecificationArgs Empty = new PolicyTargetTrackingConfigurationCustomizedMetricSpecificationArgs();

    /**
     * Dimensions of the metric.
     * 
     */
    @Import(name="metricDimensions")
    private @Nullable Output<List<PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArgs>> metricDimensions;

    /**
     * @return Dimensions of the metric.
     * 
     */
    public Optional<Output<List<PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArgs>>> metricDimensions() {
        return Optional.ofNullable(this.metricDimensions);
    }

    /**
     * Name of the metric.
     * 
     */
    @Import(name="metricName")
    private @Nullable Output<String> metricName;

    /**
     * @return Name of the metric.
     * 
     */
    public Optional<Output<String>> metricName() {
        return Optional.ofNullable(this.metricName);
    }

    /**
     * Metrics to include, as a metric data query.
     * 
     */
    @Import(name="metrics")
    private @Nullable Output<List<PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricArgs>> metrics;

    /**
     * @return Metrics to include, as a metric data query.
     * 
     */
    public Optional<Output<List<PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricArgs>>> metrics() {
        return Optional.ofNullable(this.metrics);
    }

    /**
     * Namespace of the metric.
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return Namespace of the metric.
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * Statistic of the metric.
     * 
     */
    @Import(name="statistic")
    private @Nullable Output<String> statistic;

    /**
     * @return Statistic of the metric.
     * 
     */
    public Optional<Output<String>> statistic() {
        return Optional.ofNullable(this.statistic);
    }

    /**
     * Unit of the metric.
     * 
     */
    @Import(name="unit")
    private @Nullable Output<String> unit;

    /**
     * @return Unit of the metric.
     * 
     */
    public Optional<Output<String>> unit() {
        return Optional.ofNullable(this.unit);
    }

    private PolicyTargetTrackingConfigurationCustomizedMetricSpecificationArgs() {}

    private PolicyTargetTrackingConfigurationCustomizedMetricSpecificationArgs(PolicyTargetTrackingConfigurationCustomizedMetricSpecificationArgs $) {
        this.metricDimensions = $.metricDimensions;
        this.metricName = $.metricName;
        this.metrics = $.metrics;
        this.namespace = $.namespace;
        this.statistic = $.statistic;
        this.unit = $.unit;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyTargetTrackingConfigurationCustomizedMetricSpecificationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyTargetTrackingConfigurationCustomizedMetricSpecificationArgs $;

        public Builder() {
            $ = new PolicyTargetTrackingConfigurationCustomizedMetricSpecificationArgs();
        }

        public Builder(PolicyTargetTrackingConfigurationCustomizedMetricSpecificationArgs defaults) {
            $ = new PolicyTargetTrackingConfigurationCustomizedMetricSpecificationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param metricDimensions Dimensions of the metric.
         * 
         * @return builder
         * 
         */
        public Builder metricDimensions(@Nullable Output<List<PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArgs>> metricDimensions) {
            $.metricDimensions = metricDimensions;
            return this;
        }

        /**
         * @param metricDimensions Dimensions of the metric.
         * 
         * @return builder
         * 
         */
        public Builder metricDimensions(List<PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArgs> metricDimensions) {
            return metricDimensions(Output.of(metricDimensions));
        }

        /**
         * @param metricDimensions Dimensions of the metric.
         * 
         * @return builder
         * 
         */
        public Builder metricDimensions(PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArgs... metricDimensions) {
            return metricDimensions(List.of(metricDimensions));
        }

        /**
         * @param metricName Name of the metric.
         * 
         * @return builder
         * 
         */
        public Builder metricName(@Nullable Output<String> metricName) {
            $.metricName = metricName;
            return this;
        }

        /**
         * @param metricName Name of the metric.
         * 
         * @return builder
         * 
         */
        public Builder metricName(String metricName) {
            return metricName(Output.of(metricName));
        }

        /**
         * @param metrics Metrics to include, as a metric data query.
         * 
         * @return builder
         * 
         */
        public Builder metrics(@Nullable Output<List<PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricArgs>> metrics) {
            $.metrics = metrics;
            return this;
        }

        /**
         * @param metrics Metrics to include, as a metric data query.
         * 
         * @return builder
         * 
         */
        public Builder metrics(List<PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricArgs> metrics) {
            return metrics(Output.of(metrics));
        }

        /**
         * @param metrics Metrics to include, as a metric data query.
         * 
         * @return builder
         * 
         */
        public Builder metrics(PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricArgs... metrics) {
            return metrics(List.of(metrics));
        }

        /**
         * @param namespace Namespace of the metric.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace Namespace of the metric.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param statistic Statistic of the metric.
         * 
         * @return builder
         * 
         */
        public Builder statistic(@Nullable Output<String> statistic) {
            $.statistic = statistic;
            return this;
        }

        /**
         * @param statistic Statistic of the metric.
         * 
         * @return builder
         * 
         */
        public Builder statistic(String statistic) {
            return statistic(Output.of(statistic));
        }

        /**
         * @param unit Unit of the metric.
         * 
         * @return builder
         * 
         */
        public Builder unit(@Nullable Output<String> unit) {
            $.unit = unit;
            return this;
        }

        /**
         * @param unit Unit of the metric.
         * 
         * @return builder
         * 
         */
        public Builder unit(String unit) {
            return unit(Output.of(unit));
        }

        public PolicyTargetTrackingConfigurationCustomizedMetricSpecificationArgs build() {
            return $;
        }
    }

}
