// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker.inputs;

import com.pulumi.aws.sagemaker.inputs.ModelContainerModelDataSourceS3DataSourceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;


public final class ModelContainerModelDataSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ModelContainerModelDataSourceArgs Empty = new ModelContainerModelDataSourceArgs();

    /**
     * The S3 location of model data to deploy.
     * 
     */
    @Import(name="s3DataSources", required=true)
    private Output<List<ModelContainerModelDataSourceS3DataSourceArgs>> s3DataSources;

    /**
     * @return The S3 location of model data to deploy.
     * 
     */
    public Output<List<ModelContainerModelDataSourceS3DataSourceArgs>> s3DataSources() {
        return this.s3DataSources;
    }

    private ModelContainerModelDataSourceArgs() {}

    private ModelContainerModelDataSourceArgs(ModelContainerModelDataSourceArgs $) {
        this.s3DataSources = $.s3DataSources;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ModelContainerModelDataSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ModelContainerModelDataSourceArgs $;

        public Builder() {
            $ = new ModelContainerModelDataSourceArgs();
        }

        public Builder(ModelContainerModelDataSourceArgs defaults) {
            $ = new ModelContainerModelDataSourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param s3DataSources The S3 location of model data to deploy.
         * 
         * @return builder
         * 
         */
        public Builder s3DataSources(Output<List<ModelContainerModelDataSourceS3DataSourceArgs>> s3DataSources) {
            $.s3DataSources = s3DataSources;
            return this;
        }

        /**
         * @param s3DataSources The S3 location of model data to deploy.
         * 
         * @return builder
         * 
         */
        public Builder s3DataSources(List<ModelContainerModelDataSourceS3DataSourceArgs> s3DataSources) {
            return s3DataSources(Output.of(s3DataSources));
        }

        /**
         * @param s3DataSources The S3 location of model data to deploy.
         * 
         * @return builder
         * 
         */
        public Builder s3DataSources(ModelContainerModelDataSourceS3DataSourceArgs... s3DataSources) {
            return s3DataSources(List.of(s3DataSources));
        }

        public ModelContainerModelDataSourceArgs build() {
            $.s3DataSources = Objects.requireNonNull($.s3DataSources, "expected parameter 's3DataSources' to be non-null");
            return $;
        }
    }

}
