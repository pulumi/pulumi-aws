// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.directoryservice;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.directoryservice.DirectoryArgs;
import com.pulumi.aws.directoryservice.inputs.DirectoryState;
import com.pulumi.aws.directoryservice.outputs.DirectoryConnectSettings;
import com.pulumi.aws.directoryservice.outputs.DirectoryVpcSettings;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="aws:directoryservice/directory:Directory")
public class Directory extends com.pulumi.resources.CustomResource {
    @Export(name="accessUrl", refs={String.class}, tree="[0]")
    private Output<String> accessUrl;

    public Output<String> accessUrl() {
        return this.accessUrl;
    }
    @Export(name="alias", refs={String.class}, tree="[0]")
    private Output<String> alias;

    public Output<String> alias() {
        return this.alias;
    }
    @Export(name="connectSettings", refs={DirectoryConnectSettings.class}, tree="[0]")
    private Output</* @Nullable */ DirectoryConnectSettings> connectSettings;

    public Output<Optional<DirectoryConnectSettings>> connectSettings() {
        return Codegen.optional(this.connectSettings);
    }
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    @Export(name="desiredNumberOfDomainControllers", refs={Integer.class}, tree="[0]")
    private Output<Integer> desiredNumberOfDomainControllers;

    public Output<Integer> desiredNumberOfDomainControllers() {
        return this.desiredNumberOfDomainControllers;
    }
    @Export(name="dnsIpAddresses", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> dnsIpAddresses;

    public Output<List<String>> dnsIpAddresses() {
        return this.dnsIpAddresses;
    }
    @Export(name="edition", refs={String.class}, tree="[0]")
    private Output<String> edition;

    public Output<String> edition() {
        return this.edition;
    }
    @Export(name="enableSso", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enableSso;

    public Output<Optional<Boolean>> enableSso() {
        return Codegen.optional(this.enableSso);
    }
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }
    @Export(name="password", refs={String.class}, tree="[0]")
    private Output<String> password;

    public Output<String> password() {
        return this.password;
    }
    @Export(name="securityGroupId", refs={String.class}, tree="[0]")
    private Output<String> securityGroupId;

    public Output<String> securityGroupId() {
        return this.securityGroupId;
    }
    @Export(name="shortName", refs={String.class}, tree="[0]")
    private Output<String> shortName;

    public Output<String> shortName() {
        return this.shortName;
    }
    @Export(name="size", refs={String.class}, tree="[0]")
    private Output<String> size;

    public Output<String> size() {
        return this.size;
    }
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    @Export(name="tagsAll", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll;
    }
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> type;

    public Output<Optional<String>> type() {
        return Codegen.optional(this.type);
    }
    @Export(name="vpcSettings", refs={DirectoryVpcSettings.class}, tree="[0]")
    private Output</* @Nullable */ DirectoryVpcSettings> vpcSettings;

    public Output<Optional<DirectoryVpcSettings>> vpcSettings() {
        return Codegen.optional(this.vpcSettings);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Directory(String name) {
        this(name, DirectoryArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Directory(String name, DirectoryArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Directory(String name, DirectoryArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:directoryservice/directory:Directory", name, args == null ? DirectoryArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Directory(String name, Output<String> id, @Nullable DirectoryState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:directoryservice/directory:Directory", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "password"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Directory get(String name, Output<String> id, @Nullable DirectoryState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Directory(name, id, state, options);
    }
}
