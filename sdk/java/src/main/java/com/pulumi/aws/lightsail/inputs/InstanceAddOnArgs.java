// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lightsail.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class InstanceAddOnArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceAddOnArgs Empty = new InstanceAddOnArgs();

    /**
     * The daily time when an automatic snapshot will be created. Must be in HH:00 format, and in an hourly increment and specified in Coordinated Universal Time (UTC). The snapshot will be automatically created between the time specified and up to 45 minutes after.
     * 
     */
    @Import(name="snapshotTime", required=true)
    private Output<String> snapshotTime;

    /**
     * @return The daily time when an automatic snapshot will be created. Must be in HH:00 format, and in an hourly increment and specified in Coordinated Universal Time (UTC). The snapshot will be automatically created between the time specified and up to 45 minutes after.
     * 
     */
    public Output<String> snapshotTime() {
        return this.snapshotTime;
    }

    /**
     * The status of the add on. Valid Values: `Enabled`, `Disabled`.
     * 
     */
    @Import(name="status", required=true)
    private Output<String> status;

    /**
     * @return The status of the add on. Valid Values: `Enabled`, `Disabled`.
     * 
     */
    public Output<String> status() {
        return this.status;
    }

    /**
     * The add-on type. There is currently only one valid type `AutoSnapshot`.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The add-on type. There is currently only one valid type `AutoSnapshot`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private InstanceAddOnArgs() {}

    private InstanceAddOnArgs(InstanceAddOnArgs $) {
        this.snapshotTime = $.snapshotTime;
        this.status = $.status;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceAddOnArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceAddOnArgs $;

        public Builder() {
            $ = new InstanceAddOnArgs();
        }

        public Builder(InstanceAddOnArgs defaults) {
            $ = new InstanceAddOnArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param snapshotTime The daily time when an automatic snapshot will be created. Must be in HH:00 format, and in an hourly increment and specified in Coordinated Universal Time (UTC). The snapshot will be automatically created between the time specified and up to 45 minutes after.
         * 
         * @return builder
         * 
         */
        public Builder snapshotTime(Output<String> snapshotTime) {
            $.snapshotTime = snapshotTime;
            return this;
        }

        /**
         * @param snapshotTime The daily time when an automatic snapshot will be created. Must be in HH:00 format, and in an hourly increment and specified in Coordinated Universal Time (UTC). The snapshot will be automatically created between the time specified and up to 45 minutes after.
         * 
         * @return builder
         * 
         */
        public Builder snapshotTime(String snapshotTime) {
            return snapshotTime(Output.of(snapshotTime));
        }

        /**
         * @param status The status of the add on. Valid Values: `Enabled`, `Disabled`.
         * 
         * @return builder
         * 
         */
        public Builder status(Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the add on. Valid Values: `Enabled`, `Disabled`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param type The add-on type. There is currently only one valid type `AutoSnapshot`.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The add-on type. There is currently only one valid type `AutoSnapshot`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public InstanceAddOnArgs build() {
            if ($.snapshotTime == null) {
                throw new MissingRequiredPropertyException("InstanceAddOnArgs", "snapshotTime");
            }
            if ($.status == null) {
                throw new MissingRequiredPropertyException("InstanceAddOnArgs", "status");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("InstanceAddOnArgs", "type");
            }
            return $;
        }
    }

}
