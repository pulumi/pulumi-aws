// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.location.inputs;

import com.pulumi.aws.location.inputs.PlaceIndexDataSourceConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PlaceIndexState extends com.pulumi.resources.ResourceArgs {

    public static final PlaceIndexState Empty = new PlaceIndexState();

    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    @Import(name="dataSource")
    private @Nullable Output<String> dataSource;

    public Optional<Output<String>> dataSource() {
        return Optional.ofNullable(this.dataSource);
    }

    @Import(name="dataSourceConfiguration")
    private @Nullable Output<PlaceIndexDataSourceConfigurationArgs> dataSourceConfiguration;

    public Optional<Output<PlaceIndexDataSourceConfigurationArgs>> dataSourceConfiguration() {
        return Optional.ofNullable(this.dataSourceConfiguration);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="indexArn")
    private @Nullable Output<String> indexArn;

    public Optional<Output<String>> indexArn() {
        return Optional.ofNullable(this.indexArn);
    }

    @Import(name="indexName")
    private @Nullable Output<String> indexName;

    public Optional<Output<String>> indexName() {
        return Optional.ofNullable(this.indexName);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    private PlaceIndexState() {}

    private PlaceIndexState(PlaceIndexState $) {
        this.createTime = $.createTime;
        this.dataSource = $.dataSource;
        this.dataSourceConfiguration = $.dataSourceConfiguration;
        this.description = $.description;
        this.indexArn = $.indexArn;
        this.indexName = $.indexName;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.updateTime = $.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PlaceIndexState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PlaceIndexState $;

        public Builder() {
            $ = new PlaceIndexState();
        }

        public Builder(PlaceIndexState defaults) {
            $ = new PlaceIndexState(Objects.requireNonNull(defaults));
        }

        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        public Builder dataSource(@Nullable Output<String> dataSource) {
            $.dataSource = dataSource;
            return this;
        }

        public Builder dataSource(String dataSource) {
            return dataSource(Output.of(dataSource));
        }

        public Builder dataSourceConfiguration(@Nullable Output<PlaceIndexDataSourceConfigurationArgs> dataSourceConfiguration) {
            $.dataSourceConfiguration = dataSourceConfiguration;
            return this;
        }

        public Builder dataSourceConfiguration(PlaceIndexDataSourceConfigurationArgs dataSourceConfiguration) {
            return dataSourceConfiguration(Output.of(dataSourceConfiguration));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder indexArn(@Nullable Output<String> indexArn) {
            $.indexArn = indexArn;
            return this;
        }

        public Builder indexArn(String indexArn) {
            return indexArn(Output.of(indexArn));
        }

        public Builder indexName(@Nullable Output<String> indexName) {
            $.indexName = indexName;
            return this;
        }

        public Builder indexName(String indexName) {
            return indexName(Output.of(indexName));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        public PlaceIndexState build() {
            return $;
        }
    }

}
