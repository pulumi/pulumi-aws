// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class MonitoringScheduleMonitoringScheduleConfigScheduleConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final MonitoringScheduleMonitoringScheduleConfigScheduleConfigArgs Empty = new MonitoringScheduleMonitoringScheduleConfigScheduleConfigArgs();

    /**
     * A cron expression that describes details about the monitoring schedule. For example, and hourly schedule would be `cron(0 * ? * * *)`.
     * 
     */
    @Import(name="scheduleExpression", required=true)
    private Output<String> scheduleExpression;

    /**
     * @return A cron expression that describes details about the monitoring schedule. For example, and hourly schedule would be `cron(0 * ? * * *)`.
     * 
     */
    public Output<String> scheduleExpression() {
        return this.scheduleExpression;
    }

    private MonitoringScheduleMonitoringScheduleConfigScheduleConfigArgs() {}

    private MonitoringScheduleMonitoringScheduleConfigScheduleConfigArgs(MonitoringScheduleMonitoringScheduleConfigScheduleConfigArgs $) {
        this.scheduleExpression = $.scheduleExpression;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitoringScheduleMonitoringScheduleConfigScheduleConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitoringScheduleMonitoringScheduleConfigScheduleConfigArgs $;

        public Builder() {
            $ = new MonitoringScheduleMonitoringScheduleConfigScheduleConfigArgs();
        }

        public Builder(MonitoringScheduleMonitoringScheduleConfigScheduleConfigArgs defaults) {
            $ = new MonitoringScheduleMonitoringScheduleConfigScheduleConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param scheduleExpression A cron expression that describes details about the monitoring schedule. For example, and hourly schedule would be `cron(0 * ? * * *)`.
         * 
         * @return builder
         * 
         */
        public Builder scheduleExpression(Output<String> scheduleExpression) {
            $.scheduleExpression = scheduleExpression;
            return this;
        }

        /**
         * @param scheduleExpression A cron expression that describes details about the monitoring schedule. For example, and hourly schedule would be `cron(0 * ? * * *)`.
         * 
         * @return builder
         * 
         */
        public Builder scheduleExpression(String scheduleExpression) {
            return scheduleExpression(Output.of(scheduleExpression));
        }

        public MonitoringScheduleMonitoringScheduleConfigScheduleConfigArgs build() {
            if ($.scheduleExpression == null) {
                throw new MissingRequiredPropertyException("MonitoringScheduleMonitoringScheduleConfigScheduleConfigArgs", "scheduleExpression");
            }
            return $;
        }
    }

}
