// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker.inputs;

import com.pulumi.aws.sagemaker.inputs.FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FlowDefinitionHumanLoopConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlowDefinitionHumanLoopConfigArgs Empty = new FlowDefinitionHumanLoopConfigArgs();

    @Import(name="humanTaskUiArn", required=true)
    private Output<String> humanTaskUiArn;

    public Output<String> humanTaskUiArn() {
        return this.humanTaskUiArn;
    }

    @Import(name="publicWorkforceTaskPrice")
    private @Nullable Output<FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceArgs> publicWorkforceTaskPrice;

    public Optional<Output<FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceArgs>> publicWorkforceTaskPrice() {
        return Optional.ofNullable(this.publicWorkforceTaskPrice);
    }

    @Import(name="taskAvailabilityLifetimeInSeconds")
    private @Nullable Output<Integer> taskAvailabilityLifetimeInSeconds;

    public Optional<Output<Integer>> taskAvailabilityLifetimeInSeconds() {
        return Optional.ofNullable(this.taskAvailabilityLifetimeInSeconds);
    }

    @Import(name="taskCount", required=true)
    private Output<Integer> taskCount;

    public Output<Integer> taskCount() {
        return this.taskCount;
    }

    @Import(name="taskDescription", required=true)
    private Output<String> taskDescription;

    public Output<String> taskDescription() {
        return this.taskDescription;
    }

    @Import(name="taskKeywords")
    private @Nullable Output<List<String>> taskKeywords;

    public Optional<Output<List<String>>> taskKeywords() {
        return Optional.ofNullable(this.taskKeywords);
    }

    @Import(name="taskTimeLimitInSeconds")
    private @Nullable Output<Integer> taskTimeLimitInSeconds;

    public Optional<Output<Integer>> taskTimeLimitInSeconds() {
        return Optional.ofNullable(this.taskTimeLimitInSeconds);
    }

    @Import(name="taskTitle", required=true)
    private Output<String> taskTitle;

    public Output<String> taskTitle() {
        return this.taskTitle;
    }

    @Import(name="workteamArn", required=true)
    private Output<String> workteamArn;

    public Output<String> workteamArn() {
        return this.workteamArn;
    }

    private FlowDefinitionHumanLoopConfigArgs() {}

    private FlowDefinitionHumanLoopConfigArgs(FlowDefinitionHumanLoopConfigArgs $) {
        this.humanTaskUiArn = $.humanTaskUiArn;
        this.publicWorkforceTaskPrice = $.publicWorkforceTaskPrice;
        this.taskAvailabilityLifetimeInSeconds = $.taskAvailabilityLifetimeInSeconds;
        this.taskCount = $.taskCount;
        this.taskDescription = $.taskDescription;
        this.taskKeywords = $.taskKeywords;
        this.taskTimeLimitInSeconds = $.taskTimeLimitInSeconds;
        this.taskTitle = $.taskTitle;
        this.workteamArn = $.workteamArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlowDefinitionHumanLoopConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlowDefinitionHumanLoopConfigArgs $;

        public Builder() {
            $ = new FlowDefinitionHumanLoopConfigArgs();
        }

        public Builder(FlowDefinitionHumanLoopConfigArgs defaults) {
            $ = new FlowDefinitionHumanLoopConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder humanTaskUiArn(Output<String> humanTaskUiArn) {
            $.humanTaskUiArn = humanTaskUiArn;
            return this;
        }

        public Builder humanTaskUiArn(String humanTaskUiArn) {
            return humanTaskUiArn(Output.of(humanTaskUiArn));
        }

        public Builder publicWorkforceTaskPrice(@Nullable Output<FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceArgs> publicWorkforceTaskPrice) {
            $.publicWorkforceTaskPrice = publicWorkforceTaskPrice;
            return this;
        }

        public Builder publicWorkforceTaskPrice(FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceArgs publicWorkforceTaskPrice) {
            return publicWorkforceTaskPrice(Output.of(publicWorkforceTaskPrice));
        }

        public Builder taskAvailabilityLifetimeInSeconds(@Nullable Output<Integer> taskAvailabilityLifetimeInSeconds) {
            $.taskAvailabilityLifetimeInSeconds = taskAvailabilityLifetimeInSeconds;
            return this;
        }

        public Builder taskAvailabilityLifetimeInSeconds(Integer taskAvailabilityLifetimeInSeconds) {
            return taskAvailabilityLifetimeInSeconds(Output.of(taskAvailabilityLifetimeInSeconds));
        }

        public Builder taskCount(Output<Integer> taskCount) {
            $.taskCount = taskCount;
            return this;
        }

        public Builder taskCount(Integer taskCount) {
            return taskCount(Output.of(taskCount));
        }

        public Builder taskDescription(Output<String> taskDescription) {
            $.taskDescription = taskDescription;
            return this;
        }

        public Builder taskDescription(String taskDescription) {
            return taskDescription(Output.of(taskDescription));
        }

        public Builder taskKeywords(@Nullable Output<List<String>> taskKeywords) {
            $.taskKeywords = taskKeywords;
            return this;
        }

        public Builder taskKeywords(List<String> taskKeywords) {
            return taskKeywords(Output.of(taskKeywords));
        }

        public Builder taskKeywords(String... taskKeywords) {
            return taskKeywords(List.of(taskKeywords));
        }

        public Builder taskTimeLimitInSeconds(@Nullable Output<Integer> taskTimeLimitInSeconds) {
            $.taskTimeLimitInSeconds = taskTimeLimitInSeconds;
            return this;
        }

        public Builder taskTimeLimitInSeconds(Integer taskTimeLimitInSeconds) {
            return taskTimeLimitInSeconds(Output.of(taskTimeLimitInSeconds));
        }

        public Builder taskTitle(Output<String> taskTitle) {
            $.taskTitle = taskTitle;
            return this;
        }

        public Builder taskTitle(String taskTitle) {
            return taskTitle(Output.of(taskTitle));
        }

        public Builder workteamArn(Output<String> workteamArn) {
            $.workteamArn = workteamArn;
            return this;
        }

        public Builder workteamArn(String workteamArn) {
            return workteamArn(Output.of(workteamArn));
        }

        public FlowDefinitionHumanLoopConfigArgs build() {
            $.humanTaskUiArn = Objects.requireNonNull($.humanTaskUiArn, "expected parameter 'humanTaskUiArn' to be non-null");
            $.taskCount = Objects.requireNonNull($.taskCount, "expected parameter 'taskCount' to be non-null");
            $.taskDescription = Objects.requireNonNull($.taskDescription, "expected parameter 'taskDescription' to be non-null");
            $.taskTitle = Objects.requireNonNull($.taskTitle, "expected parameter 'taskTitle' to be non-null");
            $.workteamArn = Objects.requireNonNull($.workteamArn, "expected parameter 'workteamArn' to be non-null");
            return $;
        }
    }

}
