// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.opsworks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationAppSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationAppSourceArgs Empty = new ApplicationAppSourceArgs();

    @Import(name="password")
    private @Nullable Output<String> password;

    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    @Import(name="revision")
    private @Nullable Output<String> revision;

    public Optional<Output<String>> revision() {
        return Optional.ofNullable(this.revision);
    }

    @Import(name="sshKey")
    private @Nullable Output<String> sshKey;

    public Optional<Output<String>> sshKey() {
        return Optional.ofNullable(this.sshKey);
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    @Import(name="url")
    private @Nullable Output<String> url;

    public Optional<Output<String>> url() {
        return Optional.ofNullable(this.url);
    }

    @Import(name="username")
    private @Nullable Output<String> username;

    public Optional<Output<String>> username() {
        return Optional.ofNullable(this.username);
    }

    private ApplicationAppSourceArgs() {}

    private ApplicationAppSourceArgs(ApplicationAppSourceArgs $) {
        this.password = $.password;
        this.revision = $.revision;
        this.sshKey = $.sshKey;
        this.type = $.type;
        this.url = $.url;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationAppSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationAppSourceArgs $;

        public Builder() {
            $ = new ApplicationAppSourceArgs();
        }

        public Builder(ApplicationAppSourceArgs defaults) {
            $ = new ApplicationAppSourceArgs(Objects.requireNonNull(defaults));
        }

        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        public Builder password(String password) {
            return password(Output.of(password));
        }

        public Builder revision(@Nullable Output<String> revision) {
            $.revision = revision;
            return this;
        }

        public Builder revision(String revision) {
            return revision(Output.of(revision));
        }

        public Builder sshKey(@Nullable Output<String> sshKey) {
            $.sshKey = sshKey;
            return this;
        }

        public Builder sshKey(String sshKey) {
            return sshKey(Output.of(sshKey));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder url(@Nullable Output<String> url) {
            $.url = url;
            return this;
        }

        public Builder url(String url) {
            return url(Output.of(url));
        }

        public Builder username(@Nullable Output<String> username) {
            $.username = username;
            return this;
        }

        public Builder username(String username) {
            return username(Output.of(username));
        }

        public ApplicationAppSourceArgs build() {
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
