// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.datasync;

import com.pulumi.aws.datasync.inputs.TaskExcludesArgs;
import com.pulumi.aws.datasync.inputs.TaskIncludesArgs;
import com.pulumi.aws.datasync.inputs.TaskOptionsArgs;
import com.pulumi.aws.datasync.inputs.TaskScheduleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TaskArgs extends com.pulumi.resources.ResourceArgs {

    public static final TaskArgs Empty = new TaskArgs();

    @Import(name="cloudwatchLogGroupArn")
    private @Nullable Output<String> cloudwatchLogGroupArn;

    public Optional<Output<String>> cloudwatchLogGroupArn() {
        return Optional.ofNullable(this.cloudwatchLogGroupArn);
    }

    @Import(name="destinationLocationArn", required=true)
    private Output<String> destinationLocationArn;

    public Output<String> destinationLocationArn() {
        return this.destinationLocationArn;
    }

    @Import(name="excludes")
    private @Nullable Output<TaskExcludesArgs> excludes;

    public Optional<Output<TaskExcludesArgs>> excludes() {
        return Optional.ofNullable(this.excludes);
    }

    @Import(name="includes")
    private @Nullable Output<TaskIncludesArgs> includes;

    public Optional<Output<TaskIncludesArgs>> includes() {
        return Optional.ofNullable(this.includes);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="options")
    private @Nullable Output<TaskOptionsArgs> options;

    public Optional<Output<TaskOptionsArgs>> options() {
        return Optional.ofNullable(this.options);
    }

    @Import(name="schedule")
    private @Nullable Output<TaskScheduleArgs> schedule;

    public Optional<Output<TaskScheduleArgs>> schedule() {
        return Optional.ofNullable(this.schedule);
    }

    @Import(name="sourceLocationArn", required=true)
    private Output<String> sourceLocationArn;

    public Output<String> sourceLocationArn() {
        return this.sourceLocationArn;
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private TaskArgs() {}

    private TaskArgs(TaskArgs $) {
        this.cloudwatchLogGroupArn = $.cloudwatchLogGroupArn;
        this.destinationLocationArn = $.destinationLocationArn;
        this.excludes = $.excludes;
        this.includes = $.includes;
        this.name = $.name;
        this.options = $.options;
        this.schedule = $.schedule;
        this.sourceLocationArn = $.sourceLocationArn;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TaskArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TaskArgs $;

        public Builder() {
            $ = new TaskArgs();
        }

        public Builder(TaskArgs defaults) {
            $ = new TaskArgs(Objects.requireNonNull(defaults));
        }

        public Builder cloudwatchLogGroupArn(@Nullable Output<String> cloudwatchLogGroupArn) {
            $.cloudwatchLogGroupArn = cloudwatchLogGroupArn;
            return this;
        }

        public Builder cloudwatchLogGroupArn(String cloudwatchLogGroupArn) {
            return cloudwatchLogGroupArn(Output.of(cloudwatchLogGroupArn));
        }

        public Builder destinationLocationArn(Output<String> destinationLocationArn) {
            $.destinationLocationArn = destinationLocationArn;
            return this;
        }

        public Builder destinationLocationArn(String destinationLocationArn) {
            return destinationLocationArn(Output.of(destinationLocationArn));
        }

        public Builder excludes(@Nullable Output<TaskExcludesArgs> excludes) {
            $.excludes = excludes;
            return this;
        }

        public Builder excludes(TaskExcludesArgs excludes) {
            return excludes(Output.of(excludes));
        }

        public Builder includes(@Nullable Output<TaskIncludesArgs> includes) {
            $.includes = includes;
            return this;
        }

        public Builder includes(TaskIncludesArgs includes) {
            return includes(Output.of(includes));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder options(@Nullable Output<TaskOptionsArgs> options) {
            $.options = options;
            return this;
        }

        public Builder options(TaskOptionsArgs options) {
            return options(Output.of(options));
        }

        public Builder schedule(@Nullable Output<TaskScheduleArgs> schedule) {
            $.schedule = schedule;
            return this;
        }

        public Builder schedule(TaskScheduleArgs schedule) {
            return schedule(Output.of(schedule));
        }

        public Builder sourceLocationArn(Output<String> sourceLocationArn) {
            $.sourceLocationArn = sourceLocationArn;
            return this;
        }

        public Builder sourceLocationArn(String sourceLocationArn) {
            return sourceLocationArn(Output.of(sourceLocationArn));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public TaskArgs build() {
            $.destinationLocationArn = Objects.requireNonNull($.destinationLocationArn, "expected parameter 'destinationLocationArn' to be non-null");
            $.sourceLocationArn = Objects.requireNonNull($.sourceLocationArn, "expected parameter 'sourceLocationArn' to be non-null");
            return $;
        }
    }

}
