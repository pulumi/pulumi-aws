// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.customerprofiles.inputs;

import com.pulumi.aws.customerprofiles.inputs.DomainMatchingAutoMergingArgs;
import com.pulumi.aws.customerprofiles.inputs.DomainMatchingExportingConfigArgs;
import com.pulumi.aws.customerprofiles.inputs.DomainMatchingJobScheduleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainMatchingArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainMatchingArgs Empty = new DomainMatchingArgs();

    /**
     * A block that specifies the configuration about the auto-merging process. Documented below.
     * 
     */
    @Import(name="autoMerging")
    private @Nullable Output<DomainMatchingAutoMergingArgs> autoMerging;

    /**
     * @return A block that specifies the configuration about the auto-merging process. Documented below.
     * 
     */
    public Optional<Output<DomainMatchingAutoMergingArgs>> autoMerging() {
        return Optional.ofNullable(this.autoMerging);
    }

    /**
     * The flag that enables the matching process of duplicate profiles.
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return The flag that enables the matching process of duplicate profiles.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * A block that specifies the configuration for exporting Identity Resolution results. Documented below.
     * 
     */
    @Import(name="exportingConfig")
    private @Nullable Output<DomainMatchingExportingConfigArgs> exportingConfig;

    /**
     * @return A block that specifies the configuration for exporting Identity Resolution results. Documented below.
     * 
     */
    public Optional<Output<DomainMatchingExportingConfigArgs>> exportingConfig() {
        return Optional.ofNullable(this.exportingConfig);
    }

    /**
     * A block that specifies the day and time when you want to start the Identity Resolution Job every week. Documented below.
     * 
     */
    @Import(name="jobSchedule")
    private @Nullable Output<DomainMatchingJobScheduleArgs> jobSchedule;

    /**
     * @return A block that specifies the day and time when you want to start the Identity Resolution Job every week. Documented below.
     * 
     */
    public Optional<Output<DomainMatchingJobScheduleArgs>> jobSchedule() {
        return Optional.ofNullable(this.jobSchedule);
    }

    private DomainMatchingArgs() {}

    private DomainMatchingArgs(DomainMatchingArgs $) {
        this.autoMerging = $.autoMerging;
        this.enabled = $.enabled;
        this.exportingConfig = $.exportingConfig;
        this.jobSchedule = $.jobSchedule;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainMatchingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainMatchingArgs $;

        public Builder() {
            $ = new DomainMatchingArgs();
        }

        public Builder(DomainMatchingArgs defaults) {
            $ = new DomainMatchingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoMerging A block that specifies the configuration about the auto-merging process. Documented below.
         * 
         * @return builder
         * 
         */
        public Builder autoMerging(@Nullable Output<DomainMatchingAutoMergingArgs> autoMerging) {
            $.autoMerging = autoMerging;
            return this;
        }

        /**
         * @param autoMerging A block that specifies the configuration about the auto-merging process. Documented below.
         * 
         * @return builder
         * 
         */
        public Builder autoMerging(DomainMatchingAutoMergingArgs autoMerging) {
            return autoMerging(Output.of(autoMerging));
        }

        /**
         * @param enabled The flag that enables the matching process of duplicate profiles.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled The flag that enables the matching process of duplicate profiles.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param exportingConfig A block that specifies the configuration for exporting Identity Resolution results. Documented below.
         * 
         * @return builder
         * 
         */
        public Builder exportingConfig(@Nullable Output<DomainMatchingExportingConfigArgs> exportingConfig) {
            $.exportingConfig = exportingConfig;
            return this;
        }

        /**
         * @param exportingConfig A block that specifies the configuration for exporting Identity Resolution results. Documented below.
         * 
         * @return builder
         * 
         */
        public Builder exportingConfig(DomainMatchingExportingConfigArgs exportingConfig) {
            return exportingConfig(Output.of(exportingConfig));
        }

        /**
         * @param jobSchedule A block that specifies the day and time when you want to start the Identity Resolution Job every week. Documented below.
         * 
         * @return builder
         * 
         */
        public Builder jobSchedule(@Nullable Output<DomainMatchingJobScheduleArgs> jobSchedule) {
            $.jobSchedule = jobSchedule;
            return this;
        }

        /**
         * @param jobSchedule A block that specifies the day and time when you want to start the Identity Resolution Job every week. Documented below.
         * 
         * @return builder
         * 
         */
        public Builder jobSchedule(DomainMatchingJobScheduleArgs jobSchedule) {
            return jobSchedule(Output.of(jobSchedule));
        }

        public DomainMatchingArgs build() {
            $.enabled = Objects.requireNonNull($.enabled, "expected parameter 'enabled' to be non-null");
            return $;
        }
    }

}
