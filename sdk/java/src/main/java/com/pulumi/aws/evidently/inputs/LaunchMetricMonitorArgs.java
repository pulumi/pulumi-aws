// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.evidently.inputs;

import com.pulumi.aws.evidently.inputs.LaunchMetricMonitorMetricDefinitionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.Objects;


public final class LaunchMetricMonitorArgs extends com.pulumi.resources.ResourceArgs {

    public static final LaunchMetricMonitorArgs Empty = new LaunchMetricMonitorArgs();

    /**
     * A block that defines the metric. Detailed below.
     * 
     */
    @Import(name="metricDefinition", required=true)
    private Output<LaunchMetricMonitorMetricDefinitionArgs> metricDefinition;

    /**
     * @return A block that defines the metric. Detailed below.
     * 
     */
    public Output<LaunchMetricMonitorMetricDefinitionArgs> metricDefinition() {
        return this.metricDefinition;
    }

    private LaunchMetricMonitorArgs() {}

    private LaunchMetricMonitorArgs(LaunchMetricMonitorArgs $) {
        this.metricDefinition = $.metricDefinition;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LaunchMetricMonitorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LaunchMetricMonitorArgs $;

        public Builder() {
            $ = new LaunchMetricMonitorArgs();
        }

        public Builder(LaunchMetricMonitorArgs defaults) {
            $ = new LaunchMetricMonitorArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param metricDefinition A block that defines the metric. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder metricDefinition(Output<LaunchMetricMonitorMetricDefinitionArgs> metricDefinition) {
            $.metricDefinition = metricDefinition;
            return this;
        }

        /**
         * @param metricDefinition A block that defines the metric. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder metricDefinition(LaunchMetricMonitorMetricDefinitionArgs metricDefinition) {
            return metricDefinition(Output.of(metricDefinition));
        }

        public LaunchMetricMonitorArgs build() {
            if ($.metricDefinition == null) {
                throw new MissingRequiredPropertyException("LaunchMetricMonitorArgs", "metricDefinition");
            }
            return $;
        }
    }

}
