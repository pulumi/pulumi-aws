// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elastictranscoder;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.elastictranscoder.PresetArgs;
import com.pulumi.aws.elastictranscoder.inputs.PresetState;
import com.pulumi.aws.elastictranscoder.outputs.PresetAudio;
import com.pulumi.aws.elastictranscoder.outputs.PresetAudioCodecOptions;
import com.pulumi.aws.elastictranscoder.outputs.PresetThumbnails;
import com.pulumi.aws.elastictranscoder.outputs.PresetVideo;
import com.pulumi.aws.elastictranscoder.outputs.PresetVideoWatermark;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="aws:elastictranscoder/preset:Preset")
public class Preset extends com.pulumi.resources.CustomResource {
    @Export(name="arn", refs={String.class}, tree="[0]")
    private Output<String> arn;

    public Output<String> arn() {
        return this.arn;
    }
    @Export(name="audio", refs={PresetAudio.class}, tree="[0]")
    private Output</* @Nullable */ PresetAudio> audio;

    public Output<Optional<PresetAudio>> audio() {
        return Codegen.optional(this.audio);
    }
    @Export(name="audioCodecOptions", refs={PresetAudioCodecOptions.class}, tree="[0]")
    private Output<PresetAudioCodecOptions> audioCodecOptions;

    public Output<PresetAudioCodecOptions> audioCodecOptions() {
        return this.audioCodecOptions;
    }
    @Export(name="container", refs={String.class}, tree="[0]")
    private Output<String> container;

    public Output<String> container() {
        return this.container;
    }
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }
    @Export(name="thumbnails", refs={PresetThumbnails.class}, tree="[0]")
    private Output</* @Nullable */ PresetThumbnails> thumbnails;

    public Output<Optional<PresetThumbnails>> thumbnails() {
        return Codegen.optional(this.thumbnails);
    }
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }
    @Export(name="video", refs={PresetVideo.class}, tree="[0]")
    private Output</* @Nullable */ PresetVideo> video;

    public Output<Optional<PresetVideo>> video() {
        return Codegen.optional(this.video);
    }
    @Export(name="videoCodecOptions", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> videoCodecOptions;

    public Output<Optional<Map<String,String>>> videoCodecOptions() {
        return Codegen.optional(this.videoCodecOptions);
    }
    @Export(name="videoWatermarks", refs={List.class,PresetVideoWatermark.class}, tree="[0,1]")
    private Output</* @Nullable */ List<PresetVideoWatermark>> videoWatermarks;

    public Output<Optional<List<PresetVideoWatermark>>> videoWatermarks() {
        return Codegen.optional(this.videoWatermarks);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Preset(String name) {
        this(name, PresetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Preset(String name, PresetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Preset(String name, PresetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:elastictranscoder/preset:Preset", name, args == null ? PresetArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Preset(String name, Output<String> id, @Nullable PresetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:elastictranscoder/preset:Preset", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Preset get(String name, Output<String> id, @Nullable PresetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Preset(name, id, state, options);
    }
}
