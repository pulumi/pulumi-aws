// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.medialive.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ChannelEncoderSettingsAudioDescriptionCodecSettingsAc3SettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ChannelEncoderSettingsAudioDescriptionCodecSettingsAc3SettingsArgs Empty = new ChannelEncoderSettingsAudioDescriptionCodecSettingsAc3SettingsArgs();

    @Import(name="bitrate")
    private @Nullable Output<Double> bitrate;

    public Optional<Output<Double>> bitrate() {
        return Optional.ofNullable(this.bitrate);
    }

    @Import(name="bitstreamMode")
    private @Nullable Output<String> bitstreamMode;

    public Optional<Output<String>> bitstreamMode() {
        return Optional.ofNullable(this.bitstreamMode);
    }

    @Import(name="codingMode")
    private @Nullable Output<String> codingMode;

    public Optional<Output<String>> codingMode() {
        return Optional.ofNullable(this.codingMode);
    }

    @Import(name="dialnorm")
    private @Nullable Output<Integer> dialnorm;

    public Optional<Output<Integer>> dialnorm() {
        return Optional.ofNullable(this.dialnorm);
    }

    @Import(name="drcProfile")
    private @Nullable Output<String> drcProfile;

    public Optional<Output<String>> drcProfile() {
        return Optional.ofNullable(this.drcProfile);
    }

    @Import(name="lfeFilter")
    private @Nullable Output<String> lfeFilter;

    public Optional<Output<String>> lfeFilter() {
        return Optional.ofNullable(this.lfeFilter);
    }

    @Import(name="metadataControl")
    private @Nullable Output<String> metadataControl;

    public Optional<Output<String>> metadataControl() {
        return Optional.ofNullable(this.metadataControl);
    }

    private ChannelEncoderSettingsAudioDescriptionCodecSettingsAc3SettingsArgs() {}

    private ChannelEncoderSettingsAudioDescriptionCodecSettingsAc3SettingsArgs(ChannelEncoderSettingsAudioDescriptionCodecSettingsAc3SettingsArgs $) {
        this.bitrate = $.bitrate;
        this.bitstreamMode = $.bitstreamMode;
        this.codingMode = $.codingMode;
        this.dialnorm = $.dialnorm;
        this.drcProfile = $.drcProfile;
        this.lfeFilter = $.lfeFilter;
        this.metadataControl = $.metadataControl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ChannelEncoderSettingsAudioDescriptionCodecSettingsAc3SettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ChannelEncoderSettingsAudioDescriptionCodecSettingsAc3SettingsArgs $;

        public Builder() {
            $ = new ChannelEncoderSettingsAudioDescriptionCodecSettingsAc3SettingsArgs();
        }

        public Builder(ChannelEncoderSettingsAudioDescriptionCodecSettingsAc3SettingsArgs defaults) {
            $ = new ChannelEncoderSettingsAudioDescriptionCodecSettingsAc3SettingsArgs(Objects.requireNonNull(defaults));
        }

        public Builder bitrate(@Nullable Output<Double> bitrate) {
            $.bitrate = bitrate;
            return this;
        }

        public Builder bitrate(Double bitrate) {
            return bitrate(Output.of(bitrate));
        }

        public Builder bitstreamMode(@Nullable Output<String> bitstreamMode) {
            $.bitstreamMode = bitstreamMode;
            return this;
        }

        public Builder bitstreamMode(String bitstreamMode) {
            return bitstreamMode(Output.of(bitstreamMode));
        }

        public Builder codingMode(@Nullable Output<String> codingMode) {
            $.codingMode = codingMode;
            return this;
        }

        public Builder codingMode(String codingMode) {
            return codingMode(Output.of(codingMode));
        }

        public Builder dialnorm(@Nullable Output<Integer> dialnorm) {
            $.dialnorm = dialnorm;
            return this;
        }

        public Builder dialnorm(Integer dialnorm) {
            return dialnorm(Output.of(dialnorm));
        }

        public Builder drcProfile(@Nullable Output<String> drcProfile) {
            $.drcProfile = drcProfile;
            return this;
        }

        public Builder drcProfile(String drcProfile) {
            return drcProfile(Output.of(drcProfile));
        }

        public Builder lfeFilter(@Nullable Output<String> lfeFilter) {
            $.lfeFilter = lfeFilter;
            return this;
        }

        public Builder lfeFilter(String lfeFilter) {
            return lfeFilter(Output.of(lfeFilter));
        }

        public Builder metadataControl(@Nullable Output<String> metadataControl) {
            $.metadataControl = metadataControl;
            return this;
        }

        public Builder metadataControl(String metadataControl) {
            return metadataControl(Output.of(metadataControl));
        }

        public ChannelEncoderSettingsAudioDescriptionCodecSettingsAc3SettingsArgs build() {
            return $;
        }
    }

}
