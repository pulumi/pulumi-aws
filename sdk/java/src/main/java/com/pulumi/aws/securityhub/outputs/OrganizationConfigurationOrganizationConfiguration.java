// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.securityhub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class OrganizationConfigurationOrganizationConfiguration {
    /**
     * @return Indicates whether the organization uses local or central configuration. If using central configuration, `auto_enable` must be set to `false` and `auto_enable_standards` set to `NONE`. More information can be found in the [documentation for central configuration](https://docs.aws.amazon.com/securityhub/latest/userguide/central-configuration-intro.html). Valid values: `LOCAL`, `CENTRAL`.
     * 
     */
    private String configurationType;

    private OrganizationConfigurationOrganizationConfiguration() {}
    /**
     * @return Indicates whether the organization uses local or central configuration. If using central configuration, `auto_enable` must be set to `false` and `auto_enable_standards` set to `NONE`. More information can be found in the [documentation for central configuration](https://docs.aws.amazon.com/securityhub/latest/userguide/central-configuration-intro.html). Valid values: `LOCAL`, `CENTRAL`.
     * 
     */
    public String configurationType() {
        return this.configurationType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OrganizationConfigurationOrganizationConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String configurationType;
        public Builder() {}
        public Builder(OrganizationConfigurationOrganizationConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configurationType = defaults.configurationType;
        }

        @CustomType.Setter
        public Builder configurationType(String configurationType) {
            if (configurationType == null) {
              throw new MissingRequiredPropertyException("OrganizationConfigurationOrganizationConfiguration", "configurationType");
            }
            this.configurationType = configurationType;
            return this;
        }
        public OrganizationConfigurationOrganizationConfiguration build() {
            final var _resultValue = new OrganizationConfigurationOrganizationConfiguration();
            _resultValue.configurationType = configurationType;
            return _resultValue;
        }
    }
}
