// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3tables;

import com.pulumi.aws.s3tables.inputs.TableMaintenanceConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TableArgs extends com.pulumi.resources.ResourceArgs {

    public static final TableArgs Empty = new TableArgs();

    /**
     * Format of the table.
     * Must be `ICEBERG`.
     * 
     */
    @Import(name="format", required=true)
    private Output<String> format;

    /**
     * @return Format of the table.
     * Must be `ICEBERG`.
     * 
     */
    public Output<String> format() {
        return this.format;
    }

    /**
     * A single table bucket maintenance configuration object.
     * See `maintenance_configuration` below.
     * 
     */
    @Import(name="maintenanceConfiguration")
    private @Nullable Output<TableMaintenanceConfigurationArgs> maintenanceConfiguration;

    /**
     * @return A single table bucket maintenance configuration object.
     * See `maintenance_configuration` below.
     * 
     */
    public Optional<Output<TableMaintenanceConfigurationArgs>> maintenanceConfiguration() {
        return Optional.ofNullable(this.maintenanceConfiguration);
    }

    /**
     * Name of the table.
     * Must be between 1 and 255 characters in length.
     * Can consist of lowercase letters, numbers, and underscores, and must begin and end with a lowercase letter or number.
     * A full list of table naming rules can be found in the [S3 Tables documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-tables-buckets-naming.html#naming-rules-table).
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the table.
     * Must be between 1 and 255 characters in length.
     * Can consist of lowercase letters, numbers, and underscores, and must begin and end with a lowercase letter or number.
     * A full list of table naming rules can be found in the [S3 Tables documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-tables-buckets-naming.html#naming-rules-table).
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Name of the namespace for this table.
     * Must be between 1 and 255 characters in length.
     * Can consist of lowercase letters, numbers, and underscores, and must begin and end with a lowercase letter or number.
     * 
     */
    @Import(name="namespace", required=true)
    private Output<String> namespace;

    /**
     * @return Name of the namespace for this table.
     * Must be between 1 and 255 characters in length.
     * Can consist of lowercase letters, numbers, and underscores, and must begin and end with a lowercase letter or number.
     * 
     */
    public Output<String> namespace() {
        return this.namespace;
    }

    /**
     * ARN referencing the Table Bucket that contains this Namespace.
     * 
     * The following argument is optional:
     * 
     */
    @Import(name="tableBucketArn", required=true)
    private Output<String> tableBucketArn;

    /**
     * @return ARN referencing the Table Bucket that contains this Namespace.
     * 
     * The following argument is optional:
     * 
     */
    public Output<String> tableBucketArn() {
        return this.tableBucketArn;
    }

    private TableArgs() {}

    private TableArgs(TableArgs $) {
        this.format = $.format;
        this.maintenanceConfiguration = $.maintenanceConfiguration;
        this.name = $.name;
        this.namespace = $.namespace;
        this.tableBucketArn = $.tableBucketArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TableArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TableArgs $;

        public Builder() {
            $ = new TableArgs();
        }

        public Builder(TableArgs defaults) {
            $ = new TableArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param format Format of the table.
         * Must be `ICEBERG`.
         * 
         * @return builder
         * 
         */
        public Builder format(Output<String> format) {
            $.format = format;
            return this;
        }

        /**
         * @param format Format of the table.
         * Must be `ICEBERG`.
         * 
         * @return builder
         * 
         */
        public Builder format(String format) {
            return format(Output.of(format));
        }

        /**
         * @param maintenanceConfiguration A single table bucket maintenance configuration object.
         * See `maintenance_configuration` below.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceConfiguration(@Nullable Output<TableMaintenanceConfigurationArgs> maintenanceConfiguration) {
            $.maintenanceConfiguration = maintenanceConfiguration;
            return this;
        }

        /**
         * @param maintenanceConfiguration A single table bucket maintenance configuration object.
         * See `maintenance_configuration` below.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceConfiguration(TableMaintenanceConfigurationArgs maintenanceConfiguration) {
            return maintenanceConfiguration(Output.of(maintenanceConfiguration));
        }

        /**
         * @param name Name of the table.
         * Must be between 1 and 255 characters in length.
         * Can consist of lowercase letters, numbers, and underscores, and must begin and end with a lowercase letter or number.
         * A full list of table naming rules can be found in the [S3 Tables documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-tables-buckets-naming.html#naming-rules-table).
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the table.
         * Must be between 1 and 255 characters in length.
         * Can consist of lowercase letters, numbers, and underscores, and must begin and end with a lowercase letter or number.
         * A full list of table naming rules can be found in the [S3 Tables documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-tables-buckets-naming.html#naming-rules-table).
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param namespace Name of the namespace for this table.
         * Must be between 1 and 255 characters in length.
         * Can consist of lowercase letters, numbers, and underscores, and must begin and end with a lowercase letter or number.
         * 
         * @return builder
         * 
         */
        public Builder namespace(Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace Name of the namespace for this table.
         * Must be between 1 and 255 characters in length.
         * Can consist of lowercase letters, numbers, and underscores, and must begin and end with a lowercase letter or number.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param tableBucketArn ARN referencing the Table Bucket that contains this Namespace.
         * 
         * The following argument is optional:
         * 
         * @return builder
         * 
         */
        public Builder tableBucketArn(Output<String> tableBucketArn) {
            $.tableBucketArn = tableBucketArn;
            return this;
        }

        /**
         * @param tableBucketArn ARN referencing the Table Bucket that contains this Namespace.
         * 
         * The following argument is optional:
         * 
         * @return builder
         * 
         */
        public Builder tableBucketArn(String tableBucketArn) {
            return tableBucketArn(Output.of(tableBucketArn));
        }

        public TableArgs build() {
            if ($.format == null) {
                throw new MissingRequiredPropertyException("TableArgs", "format");
            }
            if ($.namespace == null) {
                throw new MissingRequiredPropertyException("TableArgs", "namespace");
            }
            if ($.tableBucketArn == null) {
                throw new MissingRequiredPropertyException("TableArgs", "tableBucketArn");
            }
            return $;
        }
    }

}
