// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elasticsearch.inputs;

import com.pulumi.aws.elasticsearch.inputs.DomainClusterConfigColdStorageOptionsArgs;
import com.pulumi.aws.elasticsearch.inputs.DomainClusterConfigZoneAwarenessConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainClusterConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainClusterConfigArgs Empty = new DomainClusterConfigArgs();

    @Import(name="coldStorageOptions")
    private @Nullable Output<DomainClusterConfigColdStorageOptionsArgs> coldStorageOptions;

    public Optional<Output<DomainClusterConfigColdStorageOptionsArgs>> coldStorageOptions() {
        return Optional.ofNullable(this.coldStorageOptions);
    }

    @Import(name="dedicatedMasterCount")
    private @Nullable Output<Integer> dedicatedMasterCount;

    public Optional<Output<Integer>> dedicatedMasterCount() {
        return Optional.ofNullable(this.dedicatedMasterCount);
    }

    @Import(name="dedicatedMasterEnabled")
    private @Nullable Output<Boolean> dedicatedMasterEnabled;

    public Optional<Output<Boolean>> dedicatedMasterEnabled() {
        return Optional.ofNullable(this.dedicatedMasterEnabled);
    }

    @Import(name="dedicatedMasterType")
    private @Nullable Output<String> dedicatedMasterType;

    public Optional<Output<String>> dedicatedMasterType() {
        return Optional.ofNullable(this.dedicatedMasterType);
    }

    @Import(name="instanceCount")
    private @Nullable Output<Integer> instanceCount;

    public Optional<Output<Integer>> instanceCount() {
        return Optional.ofNullable(this.instanceCount);
    }

    @Import(name="instanceType")
    private @Nullable Output<String> instanceType;

    public Optional<Output<String>> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    @Import(name="warmCount")
    private @Nullable Output<Integer> warmCount;

    public Optional<Output<Integer>> warmCount() {
        return Optional.ofNullable(this.warmCount);
    }

    @Import(name="warmEnabled")
    private @Nullable Output<Boolean> warmEnabled;

    public Optional<Output<Boolean>> warmEnabled() {
        return Optional.ofNullable(this.warmEnabled);
    }

    @Import(name="warmType")
    private @Nullable Output<String> warmType;

    public Optional<Output<String>> warmType() {
        return Optional.ofNullable(this.warmType);
    }

    @Import(name="zoneAwarenessConfig")
    private @Nullable Output<DomainClusterConfigZoneAwarenessConfigArgs> zoneAwarenessConfig;

    public Optional<Output<DomainClusterConfigZoneAwarenessConfigArgs>> zoneAwarenessConfig() {
        return Optional.ofNullable(this.zoneAwarenessConfig);
    }

    @Import(name="zoneAwarenessEnabled")
    private @Nullable Output<Boolean> zoneAwarenessEnabled;

    public Optional<Output<Boolean>> zoneAwarenessEnabled() {
        return Optional.ofNullable(this.zoneAwarenessEnabled);
    }

    private DomainClusterConfigArgs() {}

    private DomainClusterConfigArgs(DomainClusterConfigArgs $) {
        this.coldStorageOptions = $.coldStorageOptions;
        this.dedicatedMasterCount = $.dedicatedMasterCount;
        this.dedicatedMasterEnabled = $.dedicatedMasterEnabled;
        this.dedicatedMasterType = $.dedicatedMasterType;
        this.instanceCount = $.instanceCount;
        this.instanceType = $.instanceType;
        this.warmCount = $.warmCount;
        this.warmEnabled = $.warmEnabled;
        this.warmType = $.warmType;
        this.zoneAwarenessConfig = $.zoneAwarenessConfig;
        this.zoneAwarenessEnabled = $.zoneAwarenessEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainClusterConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainClusterConfigArgs $;

        public Builder() {
            $ = new DomainClusterConfigArgs();
        }

        public Builder(DomainClusterConfigArgs defaults) {
            $ = new DomainClusterConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder coldStorageOptions(@Nullable Output<DomainClusterConfigColdStorageOptionsArgs> coldStorageOptions) {
            $.coldStorageOptions = coldStorageOptions;
            return this;
        }

        public Builder coldStorageOptions(DomainClusterConfigColdStorageOptionsArgs coldStorageOptions) {
            return coldStorageOptions(Output.of(coldStorageOptions));
        }

        public Builder dedicatedMasterCount(@Nullable Output<Integer> dedicatedMasterCount) {
            $.dedicatedMasterCount = dedicatedMasterCount;
            return this;
        }

        public Builder dedicatedMasterCount(Integer dedicatedMasterCount) {
            return dedicatedMasterCount(Output.of(dedicatedMasterCount));
        }

        public Builder dedicatedMasterEnabled(@Nullable Output<Boolean> dedicatedMasterEnabled) {
            $.dedicatedMasterEnabled = dedicatedMasterEnabled;
            return this;
        }

        public Builder dedicatedMasterEnabled(Boolean dedicatedMasterEnabled) {
            return dedicatedMasterEnabled(Output.of(dedicatedMasterEnabled));
        }

        public Builder dedicatedMasterType(@Nullable Output<String> dedicatedMasterType) {
            $.dedicatedMasterType = dedicatedMasterType;
            return this;
        }

        public Builder dedicatedMasterType(String dedicatedMasterType) {
            return dedicatedMasterType(Output.of(dedicatedMasterType));
        }

        public Builder instanceCount(@Nullable Output<Integer> instanceCount) {
            $.instanceCount = instanceCount;
            return this;
        }

        public Builder instanceCount(Integer instanceCount) {
            return instanceCount(Output.of(instanceCount));
        }

        public Builder instanceType(@Nullable Output<String> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        public Builder instanceType(String instanceType) {
            return instanceType(Output.of(instanceType));
        }

        public Builder warmCount(@Nullable Output<Integer> warmCount) {
            $.warmCount = warmCount;
            return this;
        }

        public Builder warmCount(Integer warmCount) {
            return warmCount(Output.of(warmCount));
        }

        public Builder warmEnabled(@Nullable Output<Boolean> warmEnabled) {
            $.warmEnabled = warmEnabled;
            return this;
        }

        public Builder warmEnabled(Boolean warmEnabled) {
            return warmEnabled(Output.of(warmEnabled));
        }

        public Builder warmType(@Nullable Output<String> warmType) {
            $.warmType = warmType;
            return this;
        }

        public Builder warmType(String warmType) {
            return warmType(Output.of(warmType));
        }

        public Builder zoneAwarenessConfig(@Nullable Output<DomainClusterConfigZoneAwarenessConfigArgs> zoneAwarenessConfig) {
            $.zoneAwarenessConfig = zoneAwarenessConfig;
            return this;
        }

        public Builder zoneAwarenessConfig(DomainClusterConfigZoneAwarenessConfigArgs zoneAwarenessConfig) {
            return zoneAwarenessConfig(Output.of(zoneAwarenessConfig));
        }

        public Builder zoneAwarenessEnabled(@Nullable Output<Boolean> zoneAwarenessEnabled) {
            $.zoneAwarenessEnabled = zoneAwarenessEnabled;
            return this;
        }

        public Builder zoneAwarenessEnabled(Boolean zoneAwarenessEnabled) {
            return zoneAwarenessEnabled(Output.of(zoneAwarenessEnabled));
        }

        public DomainClusterConfigArgs build() {
            return $;
        }
    }

}
