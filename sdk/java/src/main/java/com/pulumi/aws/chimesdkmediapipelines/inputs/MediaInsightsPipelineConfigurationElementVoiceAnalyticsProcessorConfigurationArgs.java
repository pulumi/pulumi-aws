// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.chimesdkmediapipelines.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class MediaInsightsPipelineConfigurationElementVoiceAnalyticsProcessorConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final MediaInsightsPipelineConfigurationElementVoiceAnalyticsProcessorConfigurationArgs Empty = new MediaInsightsPipelineConfigurationElementVoiceAnalyticsProcessorConfigurationArgs();

    /**
     * Enable speaker search.
     * 
     */
    @Import(name="speakerSearchStatus", required=true)
    private Output<String> speakerSearchStatus;

    /**
     * @return Enable speaker search.
     * 
     */
    public Output<String> speakerSearchStatus() {
        return this.speakerSearchStatus;
    }

    /**
     * Enable voice tone analysis.
     * 
     */
    @Import(name="voiceToneAnalysisStatus", required=true)
    private Output<String> voiceToneAnalysisStatus;

    /**
     * @return Enable voice tone analysis.
     * 
     */
    public Output<String> voiceToneAnalysisStatus() {
        return this.voiceToneAnalysisStatus;
    }

    private MediaInsightsPipelineConfigurationElementVoiceAnalyticsProcessorConfigurationArgs() {}

    private MediaInsightsPipelineConfigurationElementVoiceAnalyticsProcessorConfigurationArgs(MediaInsightsPipelineConfigurationElementVoiceAnalyticsProcessorConfigurationArgs $) {
        this.speakerSearchStatus = $.speakerSearchStatus;
        this.voiceToneAnalysisStatus = $.voiceToneAnalysisStatus;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MediaInsightsPipelineConfigurationElementVoiceAnalyticsProcessorConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MediaInsightsPipelineConfigurationElementVoiceAnalyticsProcessorConfigurationArgs $;

        public Builder() {
            $ = new MediaInsightsPipelineConfigurationElementVoiceAnalyticsProcessorConfigurationArgs();
        }

        public Builder(MediaInsightsPipelineConfigurationElementVoiceAnalyticsProcessorConfigurationArgs defaults) {
            $ = new MediaInsightsPipelineConfigurationElementVoiceAnalyticsProcessorConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param speakerSearchStatus Enable speaker search.
         * 
         * @return builder
         * 
         */
        public Builder speakerSearchStatus(Output<String> speakerSearchStatus) {
            $.speakerSearchStatus = speakerSearchStatus;
            return this;
        }

        /**
         * @param speakerSearchStatus Enable speaker search.
         * 
         * @return builder
         * 
         */
        public Builder speakerSearchStatus(String speakerSearchStatus) {
            return speakerSearchStatus(Output.of(speakerSearchStatus));
        }

        /**
         * @param voiceToneAnalysisStatus Enable voice tone analysis.
         * 
         * @return builder
         * 
         */
        public Builder voiceToneAnalysisStatus(Output<String> voiceToneAnalysisStatus) {
            $.voiceToneAnalysisStatus = voiceToneAnalysisStatus;
            return this;
        }

        /**
         * @param voiceToneAnalysisStatus Enable voice tone analysis.
         * 
         * @return builder
         * 
         */
        public Builder voiceToneAnalysisStatus(String voiceToneAnalysisStatus) {
            return voiceToneAnalysisStatus(Output.of(voiceToneAnalysisStatus));
        }

        public MediaInsightsPipelineConfigurationElementVoiceAnalyticsProcessorConfigurationArgs build() {
            if ($.speakerSearchStatus == null) {
                throw new MissingRequiredPropertyException("MediaInsightsPipelineConfigurationElementVoiceAnalyticsProcessorConfigurationArgs", "speakerSearchStatus");
            }
            if ($.voiceToneAnalysisStatus == null) {
                throw new MissingRequiredPropertyException("MediaInsightsPipelineConfigurationElementVoiceAnalyticsProcessorConfigurationArgs", "voiceToneAnalysisStatus");
            }
            return $;
        }
    }

}
