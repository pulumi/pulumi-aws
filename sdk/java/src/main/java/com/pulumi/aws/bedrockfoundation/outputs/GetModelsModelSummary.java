// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrockfoundation.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetModelsModelSummary {
    /**
     * @return Customizations that the model supports.
     * 
     */
    private @Nullable List<String> customizationsSupporteds;
    /**
     * @return Inference types that the model supports.
     * 
     */
    private @Nullable List<String> inferenceTypesSupporteds;
    /**
     * @return Input modalities that the model supports.
     * 
     */
    private @Nullable List<String> inputModalities;
    /**
     * @return Model ARN.
     * 
     */
    private @Nullable String modelArn;
    /**
     * @return Model identifier.
     * 
     */
    private @Nullable String modelId;
    /**
     * @return Model name.
     * 
     */
    private @Nullable String modelName;
    /**
     * @return Output modalities that the model supports.
     * 
     */
    private @Nullable List<String> outputModalities;
    /**
     * @return Model provider name.
     * 
     */
    private @Nullable String providerName;
    /**
     * @return Indicates whether the model supports streaming.
     * 
     */
    private @Nullable Boolean responseStreamingSupported;

    private GetModelsModelSummary() {}
    /**
     * @return Customizations that the model supports.
     * 
     */
    public List<String> customizationsSupporteds() {
        return this.customizationsSupporteds == null ? List.of() : this.customizationsSupporteds;
    }
    /**
     * @return Inference types that the model supports.
     * 
     */
    public List<String> inferenceTypesSupporteds() {
        return this.inferenceTypesSupporteds == null ? List.of() : this.inferenceTypesSupporteds;
    }
    /**
     * @return Input modalities that the model supports.
     * 
     */
    public List<String> inputModalities() {
        return this.inputModalities == null ? List.of() : this.inputModalities;
    }
    /**
     * @return Model ARN.
     * 
     */
    public Optional<String> modelArn() {
        return Optional.ofNullable(this.modelArn);
    }
    /**
     * @return Model identifier.
     * 
     */
    public Optional<String> modelId() {
        return Optional.ofNullable(this.modelId);
    }
    /**
     * @return Model name.
     * 
     */
    public Optional<String> modelName() {
        return Optional.ofNullable(this.modelName);
    }
    /**
     * @return Output modalities that the model supports.
     * 
     */
    public List<String> outputModalities() {
        return this.outputModalities == null ? List.of() : this.outputModalities;
    }
    /**
     * @return Model provider name.
     * 
     */
    public Optional<String> providerName() {
        return Optional.ofNullable(this.providerName);
    }
    /**
     * @return Indicates whether the model supports streaming.
     * 
     */
    public Optional<Boolean> responseStreamingSupported() {
        return Optional.ofNullable(this.responseStreamingSupported);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetModelsModelSummary defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> customizationsSupporteds;
        private @Nullable List<String> inferenceTypesSupporteds;
        private @Nullable List<String> inputModalities;
        private @Nullable String modelArn;
        private @Nullable String modelId;
        private @Nullable String modelName;
        private @Nullable List<String> outputModalities;
        private @Nullable String providerName;
        private @Nullable Boolean responseStreamingSupported;
        public Builder() {}
        public Builder(GetModelsModelSummary defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customizationsSupporteds = defaults.customizationsSupporteds;
    	      this.inferenceTypesSupporteds = defaults.inferenceTypesSupporteds;
    	      this.inputModalities = defaults.inputModalities;
    	      this.modelArn = defaults.modelArn;
    	      this.modelId = defaults.modelId;
    	      this.modelName = defaults.modelName;
    	      this.outputModalities = defaults.outputModalities;
    	      this.providerName = defaults.providerName;
    	      this.responseStreamingSupported = defaults.responseStreamingSupported;
        }

        @CustomType.Setter
        public Builder customizationsSupporteds(@Nullable List<String> customizationsSupporteds) {
            this.customizationsSupporteds = customizationsSupporteds;
            return this;
        }
        public Builder customizationsSupporteds(String... customizationsSupporteds) {
            return customizationsSupporteds(List.of(customizationsSupporteds));
        }
        @CustomType.Setter
        public Builder inferenceTypesSupporteds(@Nullable List<String> inferenceTypesSupporteds) {
            this.inferenceTypesSupporteds = inferenceTypesSupporteds;
            return this;
        }
        public Builder inferenceTypesSupporteds(String... inferenceTypesSupporteds) {
            return inferenceTypesSupporteds(List.of(inferenceTypesSupporteds));
        }
        @CustomType.Setter
        public Builder inputModalities(@Nullable List<String> inputModalities) {
            this.inputModalities = inputModalities;
            return this;
        }
        public Builder inputModalities(String... inputModalities) {
            return inputModalities(List.of(inputModalities));
        }
        @CustomType.Setter
        public Builder modelArn(@Nullable String modelArn) {
            this.modelArn = modelArn;
            return this;
        }
        @CustomType.Setter
        public Builder modelId(@Nullable String modelId) {
            this.modelId = modelId;
            return this;
        }
        @CustomType.Setter
        public Builder modelName(@Nullable String modelName) {
            this.modelName = modelName;
            return this;
        }
        @CustomType.Setter
        public Builder outputModalities(@Nullable List<String> outputModalities) {
            this.outputModalities = outputModalities;
            return this;
        }
        public Builder outputModalities(String... outputModalities) {
            return outputModalities(List.of(outputModalities));
        }
        @CustomType.Setter
        public Builder providerName(@Nullable String providerName) {
            this.providerName = providerName;
            return this;
        }
        @CustomType.Setter
        public Builder responseStreamingSupported(@Nullable Boolean responseStreamingSupported) {
            this.responseStreamingSupported = responseStreamingSupported;
            return this;
        }
        public GetModelsModelSummary build() {
            final var o = new GetModelsModelSummary();
            o.customizationsSupporteds = customizationsSupporteds;
            o.inferenceTypesSupporteds = inferenceTypesSupporteds;
            o.inputModalities = inputModalities;
            o.modelArn = modelArn;
            o.modelId = modelId;
            o.modelName = modelName;
            o.outputModalities = outputModalities;
            o.providerName = providerName;
            o.responseStreamingSupported = responseStreamingSupported;
            return o;
        }
    }
}
