// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appflow.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflake {
    /**
     * @return The name of the account.
     * 
     */
    private @Nullable String accountName;
    /**
     * @return A name for the associated Amazon S3 bucket.
     * 
     */
    private String bucketName;
    /**
     * @return The object key for the destination bucket in which Amazon AppFlow places the files.
     * 
     */
    private @Nullable String bucketPrefix;
    /**
     * @return The SAPOData Private Link service name to be used for private data transfers.
     * 
     */
    private @Nullable String privateLinkServiceName;
    /**
     * @return AWS Region of the Snowflake account.
     * 
     */
    private @Nullable String region;
    /**
     * @return Name of the Amazon S3 stage that was created while setting up an Amazon S3 stage in the Snowflake account. This is written in the following format: `&lt;Database&gt;.&lt;Schema&gt;.&lt;Stage Name&gt;`.
     * 
     */
    private String stage;
    /**
     * @return The name of the Snowflake warehouse.
     * 
     */
    private String warehouse;

    private ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflake() {}
    /**
     * @return The name of the account.
     * 
     */
    public Optional<String> accountName() {
        return Optional.ofNullable(this.accountName);
    }
    /**
     * @return A name for the associated Amazon S3 bucket.
     * 
     */
    public String bucketName() {
        return this.bucketName;
    }
    /**
     * @return The object key for the destination bucket in which Amazon AppFlow places the files.
     * 
     */
    public Optional<String> bucketPrefix() {
        return Optional.ofNullable(this.bucketPrefix);
    }
    /**
     * @return The SAPOData Private Link service name to be used for private data transfers.
     * 
     */
    public Optional<String> privateLinkServiceName() {
        return Optional.ofNullable(this.privateLinkServiceName);
    }
    /**
     * @return AWS Region of the Snowflake account.
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    /**
     * @return Name of the Amazon S3 stage that was created while setting up an Amazon S3 stage in the Snowflake account. This is written in the following format: `&lt;Database&gt;.&lt;Schema&gt;.&lt;Stage Name&gt;`.
     * 
     */
    public String stage() {
        return this.stage;
    }
    /**
     * @return The name of the Snowflake warehouse.
     * 
     */
    public String warehouse() {
        return this.warehouse;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflake defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accountName;
        private String bucketName;
        private @Nullable String bucketPrefix;
        private @Nullable String privateLinkServiceName;
        private @Nullable String region;
        private String stage;
        private String warehouse;
        public Builder() {}
        public Builder(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflake defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.bucketName = defaults.bucketName;
    	      this.bucketPrefix = defaults.bucketPrefix;
    	      this.privateLinkServiceName = defaults.privateLinkServiceName;
    	      this.region = defaults.region;
    	      this.stage = defaults.stage;
    	      this.warehouse = defaults.warehouse;
        }

        @CustomType.Setter
        public Builder accountName(@Nullable String accountName) {
            this.accountName = accountName;
            return this;
        }
        @CustomType.Setter
        public Builder bucketName(String bucketName) {
            this.bucketName = Objects.requireNonNull(bucketName);
            return this;
        }
        @CustomType.Setter
        public Builder bucketPrefix(@Nullable String bucketPrefix) {
            this.bucketPrefix = bucketPrefix;
            return this;
        }
        @CustomType.Setter
        public Builder privateLinkServiceName(@Nullable String privateLinkServiceName) {
            this.privateLinkServiceName = privateLinkServiceName;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder stage(String stage) {
            this.stage = Objects.requireNonNull(stage);
            return this;
        }
        @CustomType.Setter
        public Builder warehouse(String warehouse) {
            this.warehouse = Objects.requireNonNull(warehouse);
            return this;
        }
        public ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflake build() {
            final var o = new ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflake();
            o.accountName = accountName;
            o.bucketName = bucketName;
            o.bucketPrefix = bucketPrefix;
            o.privateLinkServiceName = privateLinkServiceName;
            o.region = region;
            o.stage = stage;
            o.warehouse = warehouse;
            return o;
        }
    }
}
