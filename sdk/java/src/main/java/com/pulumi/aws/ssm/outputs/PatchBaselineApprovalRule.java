// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ssm.outputs;

import com.pulumi.aws.ssm.outputs.PatchBaselineApprovalRulePatchFilter;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PatchBaselineApprovalRule {
    private @Nullable Integer approveAfterDays;
    private @Nullable String approveUntilDate;
    private @Nullable String complianceLevel;
    private @Nullable Boolean enableNonSecurity;
    private List<PatchBaselineApprovalRulePatchFilter> patchFilters;

    private PatchBaselineApprovalRule() {}
    public Optional<Integer> approveAfterDays() {
        return Optional.ofNullable(this.approveAfterDays);
    }
    public Optional<String> approveUntilDate() {
        return Optional.ofNullable(this.approveUntilDate);
    }
    public Optional<String> complianceLevel() {
        return Optional.ofNullable(this.complianceLevel);
    }
    public Optional<Boolean> enableNonSecurity() {
        return Optional.ofNullable(this.enableNonSecurity);
    }
    public List<PatchBaselineApprovalRulePatchFilter> patchFilters() {
        return this.patchFilters;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PatchBaselineApprovalRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer approveAfterDays;
        private @Nullable String approveUntilDate;
        private @Nullable String complianceLevel;
        private @Nullable Boolean enableNonSecurity;
        private List<PatchBaselineApprovalRulePatchFilter> patchFilters;
        public Builder() {}
        public Builder(PatchBaselineApprovalRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.approveAfterDays = defaults.approveAfterDays;
    	      this.approveUntilDate = defaults.approveUntilDate;
    	      this.complianceLevel = defaults.complianceLevel;
    	      this.enableNonSecurity = defaults.enableNonSecurity;
    	      this.patchFilters = defaults.patchFilters;
        }

        @CustomType.Setter
        public Builder approveAfterDays(@Nullable Integer approveAfterDays) {
            this.approveAfterDays = approveAfterDays;
            return this;
        }
        @CustomType.Setter
        public Builder approveUntilDate(@Nullable String approveUntilDate) {
            this.approveUntilDate = approveUntilDate;
            return this;
        }
        @CustomType.Setter
        public Builder complianceLevel(@Nullable String complianceLevel) {
            this.complianceLevel = complianceLevel;
            return this;
        }
        @CustomType.Setter
        public Builder enableNonSecurity(@Nullable Boolean enableNonSecurity) {
            this.enableNonSecurity = enableNonSecurity;
            return this;
        }
        @CustomType.Setter
        public Builder patchFilters(List<PatchBaselineApprovalRulePatchFilter> patchFilters) {
            this.patchFilters = Objects.requireNonNull(patchFilters);
            return this;
        }
        public Builder patchFilters(PatchBaselineApprovalRulePatchFilter... patchFilters) {
            return patchFilters(List.of(patchFilters));
        }
        public PatchBaselineApprovalRule build() {
            final var o = new PatchBaselineApprovalRule();
            o.approveAfterDays = approveAfterDays;
            o.approveUntilDate = approveUntilDate;
            o.complianceLevel = complianceLevel;
            o.enableNonSecurity = enableNonSecurity;
            o.patchFilters = patchFilters;
            return o;
        }
    }
}
