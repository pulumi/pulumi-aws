// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apigateway;

import com.pulumi.aws.apigateway.inputs.RestApiEndpointConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RestApiArgs extends com.pulumi.resources.ResourceArgs {

    public static final RestApiArgs Empty = new RestApiArgs();

    @Import(name="apiKeySource")
    private @Nullable Output<String> apiKeySource;

    public Optional<Output<String>> apiKeySource() {
        return Optional.ofNullable(this.apiKeySource);
    }

    @Import(name="binaryMediaTypes")
    private @Nullable Output<List<String>> binaryMediaTypes;

    public Optional<Output<List<String>>> binaryMediaTypes() {
        return Optional.ofNullable(this.binaryMediaTypes);
    }

    @Import(name="body")
    private @Nullable Output<String> body;

    public Optional<Output<String>> body() {
        return Optional.ofNullable(this.body);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="disableExecuteApiEndpoint")
    private @Nullable Output<Boolean> disableExecuteApiEndpoint;

    public Optional<Output<Boolean>> disableExecuteApiEndpoint() {
        return Optional.ofNullable(this.disableExecuteApiEndpoint);
    }

    @Import(name="endpointConfiguration")
    private @Nullable Output<RestApiEndpointConfigurationArgs> endpointConfiguration;

    public Optional<Output<RestApiEndpointConfigurationArgs>> endpointConfiguration() {
        return Optional.ofNullable(this.endpointConfiguration);
    }

    @Import(name="minimumCompressionSize")
    private @Nullable Output<Integer> minimumCompressionSize;

    public Optional<Output<Integer>> minimumCompressionSize() {
        return Optional.ofNullable(this.minimumCompressionSize);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="parameters")
    private @Nullable Output<Map<String,String>> parameters;

    public Optional<Output<Map<String,String>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    @Import(name="policy")
    private @Nullable Output<String> policy;

    public Optional<Output<String>> policy() {
        return Optional.ofNullable(this.policy);
    }

    @Import(name="putRestApiMode")
    private @Nullable Output<String> putRestApiMode;

    public Optional<Output<String>> putRestApiMode() {
        return Optional.ofNullable(this.putRestApiMode);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private RestApiArgs() {}

    private RestApiArgs(RestApiArgs $) {
        this.apiKeySource = $.apiKeySource;
        this.binaryMediaTypes = $.binaryMediaTypes;
        this.body = $.body;
        this.description = $.description;
        this.disableExecuteApiEndpoint = $.disableExecuteApiEndpoint;
        this.endpointConfiguration = $.endpointConfiguration;
        this.minimumCompressionSize = $.minimumCompressionSize;
        this.name = $.name;
        this.parameters = $.parameters;
        this.policy = $.policy;
        this.putRestApiMode = $.putRestApiMode;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RestApiArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RestApiArgs $;

        public Builder() {
            $ = new RestApiArgs();
        }

        public Builder(RestApiArgs defaults) {
            $ = new RestApiArgs(Objects.requireNonNull(defaults));
        }

        public Builder apiKeySource(@Nullable Output<String> apiKeySource) {
            $.apiKeySource = apiKeySource;
            return this;
        }

        public Builder apiKeySource(String apiKeySource) {
            return apiKeySource(Output.of(apiKeySource));
        }

        public Builder binaryMediaTypes(@Nullable Output<List<String>> binaryMediaTypes) {
            $.binaryMediaTypes = binaryMediaTypes;
            return this;
        }

        public Builder binaryMediaTypes(List<String> binaryMediaTypes) {
            return binaryMediaTypes(Output.of(binaryMediaTypes));
        }

        public Builder binaryMediaTypes(String... binaryMediaTypes) {
            return binaryMediaTypes(List.of(binaryMediaTypes));
        }

        public Builder body(@Nullable Output<String> body) {
            $.body = body;
            return this;
        }

        public Builder body(String body) {
            return body(Output.of(body));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder disableExecuteApiEndpoint(@Nullable Output<Boolean> disableExecuteApiEndpoint) {
            $.disableExecuteApiEndpoint = disableExecuteApiEndpoint;
            return this;
        }

        public Builder disableExecuteApiEndpoint(Boolean disableExecuteApiEndpoint) {
            return disableExecuteApiEndpoint(Output.of(disableExecuteApiEndpoint));
        }

        public Builder endpointConfiguration(@Nullable Output<RestApiEndpointConfigurationArgs> endpointConfiguration) {
            $.endpointConfiguration = endpointConfiguration;
            return this;
        }

        public Builder endpointConfiguration(RestApiEndpointConfigurationArgs endpointConfiguration) {
            return endpointConfiguration(Output.of(endpointConfiguration));
        }

        public Builder minimumCompressionSize(@Nullable Output<Integer> minimumCompressionSize) {
            $.minimumCompressionSize = minimumCompressionSize;
            return this;
        }

        public Builder minimumCompressionSize(Integer minimumCompressionSize) {
            return minimumCompressionSize(Output.of(minimumCompressionSize));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder parameters(@Nullable Output<Map<String,String>> parameters) {
            $.parameters = parameters;
            return this;
        }

        public Builder parameters(Map<String,String> parameters) {
            return parameters(Output.of(parameters));
        }

        public Builder policy(@Nullable Output<String> policy) {
            $.policy = policy;
            return this;
        }

        public Builder policy(String policy) {
            return policy(Output.of(policy));
        }

        public Builder putRestApiMode(@Nullable Output<String> putRestApiMode) {
            $.putRestApiMode = putRestApiMode;
            return this;
        }

        public Builder putRestApiMode(String putRestApiMode) {
            return putRestApiMode(Output.of(putRestApiMode));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public RestApiArgs build() {
            return $;
        }
    }

}
