// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ColorScaleNullValueColorArgs extends com.pulumi.resources.ResourceArgs {

    public static final ColorScaleNullValueColorArgs Empty = new ColorScaleNullValueColorArgs();

    @Import(name="color")
    private @Nullable Output<String> color;

    public Optional<Output<String>> color() {
        return Optional.ofNullable(this.color);
    }

    @Import(name="dataValue")
    private @Nullable Output<Double> dataValue;

    public Optional<Output<Double>> dataValue() {
        return Optional.ofNullable(this.dataValue);
    }

    private ColorScaleNullValueColorArgs() {}

    private ColorScaleNullValueColorArgs(ColorScaleNullValueColorArgs $) {
        this.color = $.color;
        this.dataValue = $.dataValue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ColorScaleNullValueColorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ColorScaleNullValueColorArgs $;

        public Builder() {
            $ = new ColorScaleNullValueColorArgs();
        }

        public Builder(ColorScaleNullValueColorArgs defaults) {
            $ = new ColorScaleNullValueColorArgs(Objects.requireNonNull(defaults));
        }

        public Builder color(@Nullable Output<String> color) {
            $.color = color;
            return this;
        }

        public Builder color(String color) {
            return color(Output.of(color));
        }

        public Builder dataValue(@Nullable Output<Double> dataValue) {
            $.dataValue = dataValue;
            return this;
        }

        public Builder dataValue(Double dataValue) {
            return dataValue(Output.of(dataValue));
        }

        public ColorScaleNullValueColorArgs build() {
            return $;
        }
    }

}
