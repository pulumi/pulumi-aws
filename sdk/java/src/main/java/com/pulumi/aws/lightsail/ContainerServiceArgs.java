// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lightsail;

import com.pulumi.aws.lightsail.inputs.ContainerServicePrivateRegistryAccessArgs;
import com.pulumi.aws.lightsail.inputs.ContainerServicePublicDomainNamesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ContainerServiceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContainerServiceArgs Empty = new ContainerServiceArgs();

    @Import(name="isDisabled")
    private @Nullable Output<Boolean> isDisabled;

    public Optional<Output<Boolean>> isDisabled() {
        return Optional.ofNullable(this.isDisabled);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="power", required=true)
    private Output<String> power;

    public Output<String> power() {
        return this.power;
    }

    @Import(name="privateRegistryAccess")
    private @Nullable Output<ContainerServicePrivateRegistryAccessArgs> privateRegistryAccess;

    public Optional<Output<ContainerServicePrivateRegistryAccessArgs>> privateRegistryAccess() {
        return Optional.ofNullable(this.privateRegistryAccess);
    }

    @Import(name="publicDomainNames")
    private @Nullable Output<ContainerServicePublicDomainNamesArgs> publicDomainNames;

    public Optional<Output<ContainerServicePublicDomainNamesArgs>> publicDomainNames() {
        return Optional.ofNullable(this.publicDomainNames);
    }

    @Import(name="scale", required=true)
    private Output<Integer> scale;

    public Output<Integer> scale() {
        return this.scale;
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ContainerServiceArgs() {}

    private ContainerServiceArgs(ContainerServiceArgs $) {
        this.isDisabled = $.isDisabled;
        this.name = $.name;
        this.power = $.power;
        this.privateRegistryAccess = $.privateRegistryAccess;
        this.publicDomainNames = $.publicDomainNames;
        this.scale = $.scale;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContainerServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContainerServiceArgs $;

        public Builder() {
            $ = new ContainerServiceArgs();
        }

        public Builder(ContainerServiceArgs defaults) {
            $ = new ContainerServiceArgs(Objects.requireNonNull(defaults));
        }

        public Builder isDisabled(@Nullable Output<Boolean> isDisabled) {
            $.isDisabled = isDisabled;
            return this;
        }

        public Builder isDisabled(Boolean isDisabled) {
            return isDisabled(Output.of(isDisabled));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder power(Output<String> power) {
            $.power = power;
            return this;
        }

        public Builder power(String power) {
            return power(Output.of(power));
        }

        public Builder privateRegistryAccess(@Nullable Output<ContainerServicePrivateRegistryAccessArgs> privateRegistryAccess) {
            $.privateRegistryAccess = privateRegistryAccess;
            return this;
        }

        public Builder privateRegistryAccess(ContainerServicePrivateRegistryAccessArgs privateRegistryAccess) {
            return privateRegistryAccess(Output.of(privateRegistryAccess));
        }

        public Builder publicDomainNames(@Nullable Output<ContainerServicePublicDomainNamesArgs> publicDomainNames) {
            $.publicDomainNames = publicDomainNames;
            return this;
        }

        public Builder publicDomainNames(ContainerServicePublicDomainNamesArgs publicDomainNames) {
            return publicDomainNames(Output.of(publicDomainNames));
        }

        public Builder scale(Output<Integer> scale) {
            $.scale = scale;
            return this;
        }

        public Builder scale(Integer scale) {
            return scale(Output.of(scale));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public ContainerServiceArgs build() {
            $.power = Objects.requireNonNull($.power, "expected parameter 'power' to be non-null");
            $.scale = Objects.requireNonNull($.scale, "expected parameter 'scale' to be non-null");
            return $;
        }
    }

}
