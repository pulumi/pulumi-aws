// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EndpointConfigurationAsyncInferenceConfigClientConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final EndpointConfigurationAsyncInferenceConfigClientConfigArgs Empty = new EndpointConfigurationAsyncInferenceConfigClientConfigArgs();

    @Import(name="maxConcurrentInvocationsPerInstance")
    private @Nullable Output<Integer> maxConcurrentInvocationsPerInstance;

    public Optional<Output<Integer>> maxConcurrentInvocationsPerInstance() {
        return Optional.ofNullable(this.maxConcurrentInvocationsPerInstance);
    }

    private EndpointConfigurationAsyncInferenceConfigClientConfigArgs() {}

    private EndpointConfigurationAsyncInferenceConfigClientConfigArgs(EndpointConfigurationAsyncInferenceConfigClientConfigArgs $) {
        this.maxConcurrentInvocationsPerInstance = $.maxConcurrentInvocationsPerInstance;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EndpointConfigurationAsyncInferenceConfigClientConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EndpointConfigurationAsyncInferenceConfigClientConfigArgs $;

        public Builder() {
            $ = new EndpointConfigurationAsyncInferenceConfigClientConfigArgs();
        }

        public Builder(EndpointConfigurationAsyncInferenceConfigClientConfigArgs defaults) {
            $ = new EndpointConfigurationAsyncInferenceConfigClientConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder maxConcurrentInvocationsPerInstance(@Nullable Output<Integer> maxConcurrentInvocationsPerInstance) {
            $.maxConcurrentInvocationsPerInstance = maxConcurrentInvocationsPerInstance;
            return this;
        }

        public Builder maxConcurrentInvocationsPerInstance(Integer maxConcurrentInvocationsPerInstance) {
            return maxConcurrentInvocationsPerInstance(Output.of(maxConcurrentInvocationsPerInstance));
        }

        public EndpointConfigurationAsyncInferenceConfigClientConfigArgs build() {
            return $;
        }
    }

}
