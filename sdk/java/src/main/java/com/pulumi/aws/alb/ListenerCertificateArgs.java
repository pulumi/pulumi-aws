// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.alb;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ListenerCertificateArgs extends com.pulumi.resources.ResourceArgs {

    public static final ListenerCertificateArgs Empty = new ListenerCertificateArgs();

    /**
     * The ARN of the certificate to attach to the listener.
     * 
     */
    @Import(name="certificateArn", required=true)
    private Output<String> certificateArn;

    /**
     * @return The ARN of the certificate to attach to the listener.
     * 
     */
    public Output<String> certificateArn() {
        return this.certificateArn;
    }

    /**
     * The ARN of the listener to which to attach the certificate.
     * 
     */
    @Import(name="listenerArn", required=true)
    private Output<String> listenerArn;

    /**
     * @return The ARN of the listener to which to attach the certificate.
     * 
     */
    public Output<String> listenerArn() {
        return this.listenerArn;
    }

    /**
     * The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    private ListenerCertificateArgs() {}

    private ListenerCertificateArgs(ListenerCertificateArgs $) {
        this.certificateArn = $.certificateArn;
        this.listenerArn = $.listenerArn;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ListenerCertificateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ListenerCertificateArgs $;

        public Builder() {
            $ = new ListenerCertificateArgs();
        }

        public Builder(ListenerCertificateArgs defaults) {
            $ = new ListenerCertificateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificateArn The ARN of the certificate to attach to the listener.
         * 
         * @return builder
         * 
         */
        public Builder certificateArn(Output<String> certificateArn) {
            $.certificateArn = certificateArn;
            return this;
        }

        /**
         * @param certificateArn The ARN of the certificate to attach to the listener.
         * 
         * @return builder
         * 
         */
        public Builder certificateArn(String certificateArn) {
            return certificateArn(Output.of(certificateArn));
        }

        /**
         * @param listenerArn The ARN of the listener to which to attach the certificate.
         * 
         * @return builder
         * 
         */
        public Builder listenerArn(Output<String> listenerArn) {
            $.listenerArn = listenerArn;
            return this;
        }

        /**
         * @param listenerArn The ARN of the listener to which to attach the certificate.
         * 
         * @return builder
         * 
         */
        public Builder listenerArn(String listenerArn) {
            return listenerArn(Output.of(listenerArn));
        }

        /**
         * @param region The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public ListenerCertificateArgs build() {
            if ($.certificateArn == null) {
                throw new MissingRequiredPropertyException("ListenerCertificateArgs", "certificateArn");
            }
            if ($.listenerArn == null) {
                throw new MissingRequiredPropertyException("ListenerCertificateArgs", "listenerArn");
            }
            return $;
        }
    }

}
