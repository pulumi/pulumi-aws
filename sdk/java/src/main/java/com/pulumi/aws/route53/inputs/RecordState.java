// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.route53.inputs;

import com.pulumi.aws.route53.enums.RecordType;
import com.pulumi.aws.route53.inputs.RecordAliasArgs;
import com.pulumi.aws.route53.inputs.RecordFailoverRoutingPolicyArgs;
import com.pulumi.aws.route53.inputs.RecordGeolocationRoutingPolicyArgs;
import com.pulumi.aws.route53.inputs.RecordLatencyRoutingPolicyArgs;
import com.pulumi.aws.route53.inputs.RecordWeightedRoutingPolicyArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RecordState extends com.pulumi.resources.ResourceArgs {

    public static final RecordState Empty = new RecordState();

    @Import(name="aliases")
    private @Nullable Output<List<RecordAliasArgs>> aliases;

    public Optional<Output<List<RecordAliasArgs>>> aliases() {
        return Optional.ofNullable(this.aliases);
    }

    @Import(name="allowOverwrite")
    private @Nullable Output<Boolean> allowOverwrite;

    public Optional<Output<Boolean>> allowOverwrite() {
        return Optional.ofNullable(this.allowOverwrite);
    }

    @Import(name="failoverRoutingPolicies")
    private @Nullable Output<List<RecordFailoverRoutingPolicyArgs>> failoverRoutingPolicies;

    public Optional<Output<List<RecordFailoverRoutingPolicyArgs>>> failoverRoutingPolicies() {
        return Optional.ofNullable(this.failoverRoutingPolicies);
    }

    @Import(name="fqdn")
    private @Nullable Output<String> fqdn;

    public Optional<Output<String>> fqdn() {
        return Optional.ofNullable(this.fqdn);
    }

    @Import(name="geolocationRoutingPolicies")
    private @Nullable Output<List<RecordGeolocationRoutingPolicyArgs>> geolocationRoutingPolicies;

    public Optional<Output<List<RecordGeolocationRoutingPolicyArgs>>> geolocationRoutingPolicies() {
        return Optional.ofNullable(this.geolocationRoutingPolicies);
    }

    @Import(name="healthCheckId")
    private @Nullable Output<String> healthCheckId;

    public Optional<Output<String>> healthCheckId() {
        return Optional.ofNullable(this.healthCheckId);
    }

    @Import(name="latencyRoutingPolicies")
    private @Nullable Output<List<RecordLatencyRoutingPolicyArgs>> latencyRoutingPolicies;

    public Optional<Output<List<RecordLatencyRoutingPolicyArgs>>> latencyRoutingPolicies() {
        return Optional.ofNullable(this.latencyRoutingPolicies);
    }

    @Import(name="multivalueAnswerRoutingPolicy")
    private @Nullable Output<Boolean> multivalueAnswerRoutingPolicy;

    public Optional<Output<Boolean>> multivalueAnswerRoutingPolicy() {
        return Optional.ofNullable(this.multivalueAnswerRoutingPolicy);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="records")
    private @Nullable Output<List<String>> records;

    public Optional<Output<List<String>>> records() {
        return Optional.ofNullable(this.records);
    }

    @Import(name="setIdentifier")
    private @Nullable Output<String> setIdentifier;

    public Optional<Output<String>> setIdentifier() {
        return Optional.ofNullable(this.setIdentifier);
    }

    @Import(name="ttl")
    private @Nullable Output<Integer> ttl;

    public Optional<Output<Integer>> ttl() {
        return Optional.ofNullable(this.ttl);
    }

    @Import(name="type")
    private @Nullable Output<Either<String,RecordType>> type;

    public Optional<Output<Either<String,RecordType>>> type() {
        return Optional.ofNullable(this.type);
    }

    @Import(name="weightedRoutingPolicies")
    private @Nullable Output<List<RecordWeightedRoutingPolicyArgs>> weightedRoutingPolicies;

    public Optional<Output<List<RecordWeightedRoutingPolicyArgs>>> weightedRoutingPolicies() {
        return Optional.ofNullable(this.weightedRoutingPolicies);
    }

    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private RecordState() {}

    private RecordState(RecordState $) {
        this.aliases = $.aliases;
        this.allowOverwrite = $.allowOverwrite;
        this.failoverRoutingPolicies = $.failoverRoutingPolicies;
        this.fqdn = $.fqdn;
        this.geolocationRoutingPolicies = $.geolocationRoutingPolicies;
        this.healthCheckId = $.healthCheckId;
        this.latencyRoutingPolicies = $.latencyRoutingPolicies;
        this.multivalueAnswerRoutingPolicy = $.multivalueAnswerRoutingPolicy;
        this.name = $.name;
        this.records = $.records;
        this.setIdentifier = $.setIdentifier;
        this.ttl = $.ttl;
        this.type = $.type;
        this.weightedRoutingPolicies = $.weightedRoutingPolicies;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RecordState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RecordState $;

        public Builder() {
            $ = new RecordState();
        }

        public Builder(RecordState defaults) {
            $ = new RecordState(Objects.requireNonNull(defaults));
        }

        public Builder aliases(@Nullable Output<List<RecordAliasArgs>> aliases) {
            $.aliases = aliases;
            return this;
        }

        public Builder aliases(List<RecordAliasArgs> aliases) {
            return aliases(Output.of(aliases));
        }

        public Builder aliases(RecordAliasArgs... aliases) {
            return aliases(List.of(aliases));
        }

        public Builder allowOverwrite(@Nullable Output<Boolean> allowOverwrite) {
            $.allowOverwrite = allowOverwrite;
            return this;
        }

        public Builder allowOverwrite(Boolean allowOverwrite) {
            return allowOverwrite(Output.of(allowOverwrite));
        }

        public Builder failoverRoutingPolicies(@Nullable Output<List<RecordFailoverRoutingPolicyArgs>> failoverRoutingPolicies) {
            $.failoverRoutingPolicies = failoverRoutingPolicies;
            return this;
        }

        public Builder failoverRoutingPolicies(List<RecordFailoverRoutingPolicyArgs> failoverRoutingPolicies) {
            return failoverRoutingPolicies(Output.of(failoverRoutingPolicies));
        }

        public Builder failoverRoutingPolicies(RecordFailoverRoutingPolicyArgs... failoverRoutingPolicies) {
            return failoverRoutingPolicies(List.of(failoverRoutingPolicies));
        }

        public Builder fqdn(@Nullable Output<String> fqdn) {
            $.fqdn = fqdn;
            return this;
        }

        public Builder fqdn(String fqdn) {
            return fqdn(Output.of(fqdn));
        }

        public Builder geolocationRoutingPolicies(@Nullable Output<List<RecordGeolocationRoutingPolicyArgs>> geolocationRoutingPolicies) {
            $.geolocationRoutingPolicies = geolocationRoutingPolicies;
            return this;
        }

        public Builder geolocationRoutingPolicies(List<RecordGeolocationRoutingPolicyArgs> geolocationRoutingPolicies) {
            return geolocationRoutingPolicies(Output.of(geolocationRoutingPolicies));
        }

        public Builder geolocationRoutingPolicies(RecordGeolocationRoutingPolicyArgs... geolocationRoutingPolicies) {
            return geolocationRoutingPolicies(List.of(geolocationRoutingPolicies));
        }

        public Builder healthCheckId(@Nullable Output<String> healthCheckId) {
            $.healthCheckId = healthCheckId;
            return this;
        }

        public Builder healthCheckId(String healthCheckId) {
            return healthCheckId(Output.of(healthCheckId));
        }

        public Builder latencyRoutingPolicies(@Nullable Output<List<RecordLatencyRoutingPolicyArgs>> latencyRoutingPolicies) {
            $.latencyRoutingPolicies = latencyRoutingPolicies;
            return this;
        }

        public Builder latencyRoutingPolicies(List<RecordLatencyRoutingPolicyArgs> latencyRoutingPolicies) {
            return latencyRoutingPolicies(Output.of(latencyRoutingPolicies));
        }

        public Builder latencyRoutingPolicies(RecordLatencyRoutingPolicyArgs... latencyRoutingPolicies) {
            return latencyRoutingPolicies(List.of(latencyRoutingPolicies));
        }

        public Builder multivalueAnswerRoutingPolicy(@Nullable Output<Boolean> multivalueAnswerRoutingPolicy) {
            $.multivalueAnswerRoutingPolicy = multivalueAnswerRoutingPolicy;
            return this;
        }

        public Builder multivalueAnswerRoutingPolicy(Boolean multivalueAnswerRoutingPolicy) {
            return multivalueAnswerRoutingPolicy(Output.of(multivalueAnswerRoutingPolicy));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder records(@Nullable Output<List<String>> records) {
            $.records = records;
            return this;
        }

        public Builder records(List<String> records) {
            return records(Output.of(records));
        }

        public Builder records(String... records) {
            return records(List.of(records));
        }

        public Builder setIdentifier(@Nullable Output<String> setIdentifier) {
            $.setIdentifier = setIdentifier;
            return this;
        }

        public Builder setIdentifier(String setIdentifier) {
            return setIdentifier(Output.of(setIdentifier));
        }

        public Builder ttl(@Nullable Output<Integer> ttl) {
            $.ttl = ttl;
            return this;
        }

        public Builder ttl(Integer ttl) {
            return ttl(Output.of(ttl));
        }

        public Builder type(@Nullable Output<Either<String,RecordType>> type) {
            $.type = type;
            return this;
        }

        public Builder type(Either<String,RecordType> type) {
            return type(Output.of(type));
        }

        public Builder type(String type) {
            return type(Either.ofLeft(type));
        }

        public Builder type(RecordType type) {
            return type(Either.ofRight(type));
        }

        public Builder weightedRoutingPolicies(@Nullable Output<List<RecordWeightedRoutingPolicyArgs>> weightedRoutingPolicies) {
            $.weightedRoutingPolicies = weightedRoutingPolicies;
            return this;
        }

        public Builder weightedRoutingPolicies(List<RecordWeightedRoutingPolicyArgs> weightedRoutingPolicies) {
            return weightedRoutingPolicies(Output.of(weightedRoutingPolicies));
        }

        public Builder weightedRoutingPolicies(RecordWeightedRoutingPolicyArgs... weightedRoutingPolicies) {
            return weightedRoutingPolicies(List.of(weightedRoutingPolicies));
        }

        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public RecordState build() {
            return $;
        }
    }

}
