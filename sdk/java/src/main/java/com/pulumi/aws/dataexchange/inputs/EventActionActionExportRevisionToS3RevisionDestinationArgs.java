// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dataexchange.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EventActionActionExportRevisionToS3RevisionDestinationArgs extends com.pulumi.resources.ResourceArgs {

    public static final EventActionActionExportRevisionToS3RevisionDestinationArgs Empty = new EventActionActionExportRevisionToS3RevisionDestinationArgs();

    /**
     * The S3 bucket where the revision will be exported.
     * 
     */
    @Import(name="bucket", required=true)
    private Output<String> bucket;

    /**
     * @return The S3 bucket where the revision will be exported.
     * 
     */
    public Output<String> bucket() {
        return this.bucket;
    }

    /**
     * Pattern for naming revisions in the S3 bucket.
     * Defaults to `${Revision.CreatedAt}/${Asset.Name}`.
     * 
     */
    @Import(name="keyPattern")
    private @Nullable Output<String> keyPattern;

    /**
     * @return Pattern for naming revisions in the S3 bucket.
     * Defaults to `${Revision.CreatedAt}/${Asset.Name}`.
     * 
     */
    public Optional<Output<String>> keyPattern() {
        return Optional.ofNullable(this.keyPattern);
    }

    private EventActionActionExportRevisionToS3RevisionDestinationArgs() {}

    private EventActionActionExportRevisionToS3RevisionDestinationArgs(EventActionActionExportRevisionToS3RevisionDestinationArgs $) {
        this.bucket = $.bucket;
        this.keyPattern = $.keyPattern;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventActionActionExportRevisionToS3RevisionDestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventActionActionExportRevisionToS3RevisionDestinationArgs $;

        public Builder() {
            $ = new EventActionActionExportRevisionToS3RevisionDestinationArgs();
        }

        public Builder(EventActionActionExportRevisionToS3RevisionDestinationArgs defaults) {
            $ = new EventActionActionExportRevisionToS3RevisionDestinationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucket The S3 bucket where the revision will be exported.
         * 
         * @return builder
         * 
         */
        public Builder bucket(Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param bucket The S3 bucket where the revision will be exported.
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        /**
         * @param keyPattern Pattern for naming revisions in the S3 bucket.
         * Defaults to `${Revision.CreatedAt}/${Asset.Name}`.
         * 
         * @return builder
         * 
         */
        public Builder keyPattern(@Nullable Output<String> keyPattern) {
            $.keyPattern = keyPattern;
            return this;
        }

        /**
         * @param keyPattern Pattern for naming revisions in the S3 bucket.
         * Defaults to `${Revision.CreatedAt}/${Asset.Name}`.
         * 
         * @return builder
         * 
         */
        public Builder keyPattern(String keyPattern) {
            return keyPattern(Output.of(keyPattern));
        }

        public EventActionActionExportRevisionToS3RevisionDestinationArgs build() {
            if ($.bucket == null) {
                throw new MissingRequiredPropertyException("EventActionActionExportRevisionToS3RevisionDestinationArgs", "bucket");
            }
            return $;
        }
    }

}
