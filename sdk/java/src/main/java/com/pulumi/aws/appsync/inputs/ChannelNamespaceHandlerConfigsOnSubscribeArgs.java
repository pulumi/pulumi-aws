// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appsync.inputs;

import com.pulumi.aws.appsync.inputs.ChannelNamespaceHandlerConfigsOnSubscribeIntegrationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ChannelNamespaceHandlerConfigsOnSubscribeArgs extends com.pulumi.resources.ResourceArgs {

    public static final ChannelNamespaceHandlerConfigsOnSubscribeArgs Empty = new ChannelNamespaceHandlerConfigsOnSubscribeArgs();

    /**
     * Behavior for the handler. Valid values: `CODE`, `DIRECT`.
     * 
     */
    @Import(name="behavior", required=true)
    private Output<String> behavior;

    /**
     * @return Behavior for the handler. Valid values: `CODE`, `DIRECT`.
     * 
     */
    public Output<String> behavior() {
        return this.behavior;
    }

    /**
     * Integration data source configuration for the handler. See Integration below.
     * 
     */
    @Import(name="integration")
    private @Nullable Output<ChannelNamespaceHandlerConfigsOnSubscribeIntegrationArgs> integration;

    /**
     * @return Integration data source configuration for the handler. See Integration below.
     * 
     */
    public Optional<Output<ChannelNamespaceHandlerConfigsOnSubscribeIntegrationArgs>> integration() {
        return Optional.ofNullable(this.integration);
    }

    private ChannelNamespaceHandlerConfigsOnSubscribeArgs() {}

    private ChannelNamespaceHandlerConfigsOnSubscribeArgs(ChannelNamespaceHandlerConfigsOnSubscribeArgs $) {
        this.behavior = $.behavior;
        this.integration = $.integration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ChannelNamespaceHandlerConfigsOnSubscribeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ChannelNamespaceHandlerConfigsOnSubscribeArgs $;

        public Builder() {
            $ = new ChannelNamespaceHandlerConfigsOnSubscribeArgs();
        }

        public Builder(ChannelNamespaceHandlerConfigsOnSubscribeArgs defaults) {
            $ = new ChannelNamespaceHandlerConfigsOnSubscribeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param behavior Behavior for the handler. Valid values: `CODE`, `DIRECT`.
         * 
         * @return builder
         * 
         */
        public Builder behavior(Output<String> behavior) {
            $.behavior = behavior;
            return this;
        }

        /**
         * @param behavior Behavior for the handler. Valid values: `CODE`, `DIRECT`.
         * 
         * @return builder
         * 
         */
        public Builder behavior(String behavior) {
            return behavior(Output.of(behavior));
        }

        /**
         * @param integration Integration data source configuration for the handler. See Integration below.
         * 
         * @return builder
         * 
         */
        public Builder integration(@Nullable Output<ChannelNamespaceHandlerConfigsOnSubscribeIntegrationArgs> integration) {
            $.integration = integration;
            return this;
        }

        /**
         * @param integration Integration data source configuration for the handler. See Integration below.
         * 
         * @return builder
         * 
         */
        public Builder integration(ChannelNamespaceHandlerConfigsOnSubscribeIntegrationArgs integration) {
            return integration(Output.of(integration));
        }

        public ChannelNamespaceHandlerConfigsOnSubscribeArgs build() {
            if ($.behavior == null) {
                throw new MissingRequiredPropertyException("ChannelNamespaceHandlerConfigsOnSubscribeArgs", "behavior");
            }
            return $;
        }
    }

}
