// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.VisualsTableVisualChartConfigurationFieldOptions;
import com.pulumi.aws.quicksight.outputs.VisualsTableVisualChartConfigurationFieldWells;
import com.pulumi.aws.quicksight.outputs.VisualsTableVisualChartConfigurationPaginatedReportOptions;
import com.pulumi.aws.quicksight.outputs.VisualsTableVisualChartConfigurationSortConfiguration;
import com.pulumi.aws.quicksight.outputs.VisualsTableVisualChartConfigurationTableInlineVisualization;
import com.pulumi.aws.quicksight.outputs.VisualsTableVisualChartConfigurationTableOptions;
import com.pulumi.aws.quicksight.outputs.VisualsTableVisualChartConfigurationTotalOptions;
import com.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VisualsTableVisualChartConfiguration {
    private @Nullable VisualsTableVisualChartConfigurationFieldOptions fieldOptions;
    private @Nullable VisualsTableVisualChartConfigurationFieldWells fieldWells;
    private @Nullable VisualsTableVisualChartConfigurationPaginatedReportOptions paginatedReportOptions;
    private @Nullable VisualsTableVisualChartConfigurationSortConfiguration sortConfiguration;
    private @Nullable List<VisualsTableVisualChartConfigurationTableInlineVisualization> tableInlineVisualizations;
    private @Nullable VisualsTableVisualChartConfigurationTableOptions tableOptions;
    private @Nullable VisualsTableVisualChartConfigurationTotalOptions totalOptions;

    private VisualsTableVisualChartConfiguration() {}
    public Optional<VisualsTableVisualChartConfigurationFieldOptions> fieldOptions() {
        return Optional.ofNullable(this.fieldOptions);
    }
    public Optional<VisualsTableVisualChartConfigurationFieldWells> fieldWells() {
        return Optional.ofNullable(this.fieldWells);
    }
    public Optional<VisualsTableVisualChartConfigurationPaginatedReportOptions> paginatedReportOptions() {
        return Optional.ofNullable(this.paginatedReportOptions);
    }
    public Optional<VisualsTableVisualChartConfigurationSortConfiguration> sortConfiguration() {
        return Optional.ofNullable(this.sortConfiguration);
    }
    public List<VisualsTableVisualChartConfigurationTableInlineVisualization> tableInlineVisualizations() {
        return this.tableInlineVisualizations == null ? List.of() : this.tableInlineVisualizations;
    }
    public Optional<VisualsTableVisualChartConfigurationTableOptions> tableOptions() {
        return Optional.ofNullable(this.tableOptions);
    }
    public Optional<VisualsTableVisualChartConfigurationTotalOptions> totalOptions() {
        return Optional.ofNullable(this.totalOptions);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VisualsTableVisualChartConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable VisualsTableVisualChartConfigurationFieldOptions fieldOptions;
        private @Nullable VisualsTableVisualChartConfigurationFieldWells fieldWells;
        private @Nullable VisualsTableVisualChartConfigurationPaginatedReportOptions paginatedReportOptions;
        private @Nullable VisualsTableVisualChartConfigurationSortConfiguration sortConfiguration;
        private @Nullable List<VisualsTableVisualChartConfigurationTableInlineVisualization> tableInlineVisualizations;
        private @Nullable VisualsTableVisualChartConfigurationTableOptions tableOptions;
        private @Nullable VisualsTableVisualChartConfigurationTotalOptions totalOptions;
        public Builder() {}
        public Builder(VisualsTableVisualChartConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fieldOptions = defaults.fieldOptions;
    	      this.fieldWells = defaults.fieldWells;
    	      this.paginatedReportOptions = defaults.paginatedReportOptions;
    	      this.sortConfiguration = defaults.sortConfiguration;
    	      this.tableInlineVisualizations = defaults.tableInlineVisualizations;
    	      this.tableOptions = defaults.tableOptions;
    	      this.totalOptions = defaults.totalOptions;
        }

        @CustomType.Setter
        public Builder fieldOptions(@Nullable VisualsTableVisualChartConfigurationFieldOptions fieldOptions) {

            this.fieldOptions = fieldOptions;
            return this;
        }
        @CustomType.Setter
        public Builder fieldWells(@Nullable VisualsTableVisualChartConfigurationFieldWells fieldWells) {

            this.fieldWells = fieldWells;
            return this;
        }
        @CustomType.Setter
        public Builder paginatedReportOptions(@Nullable VisualsTableVisualChartConfigurationPaginatedReportOptions paginatedReportOptions) {

            this.paginatedReportOptions = paginatedReportOptions;
            return this;
        }
        @CustomType.Setter
        public Builder sortConfiguration(@Nullable VisualsTableVisualChartConfigurationSortConfiguration sortConfiguration) {

            this.sortConfiguration = sortConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder tableInlineVisualizations(@Nullable List<VisualsTableVisualChartConfigurationTableInlineVisualization> tableInlineVisualizations) {

            this.tableInlineVisualizations = tableInlineVisualizations;
            return this;
        }
        public Builder tableInlineVisualizations(VisualsTableVisualChartConfigurationTableInlineVisualization... tableInlineVisualizations) {
            return tableInlineVisualizations(List.of(tableInlineVisualizations));
        }
        @CustomType.Setter
        public Builder tableOptions(@Nullable VisualsTableVisualChartConfigurationTableOptions tableOptions) {

            this.tableOptions = tableOptions;
            return this;
        }
        @CustomType.Setter
        public Builder totalOptions(@Nullable VisualsTableVisualChartConfigurationTotalOptions totalOptions) {

            this.totalOptions = totalOptions;
            return this;
        }
        public VisualsTableVisualChartConfiguration build() {
            final var _resultValue = new VisualsTableVisualChartConfiguration();
            _resultValue.fieldOptions = fieldOptions;
            _resultValue.fieldWells = fieldWells;
            _resultValue.paginatedReportOptions = paginatedReportOptions;
            _resultValue.sortConfiguration = sortConfiguration;
            _resultValue.tableInlineVisualizations = tableInlineVisualizations;
            _resultValue.tableOptions = tableOptions;
            _resultValue.totalOptions = totalOptions;
            return _resultValue;
        }
    }
}
