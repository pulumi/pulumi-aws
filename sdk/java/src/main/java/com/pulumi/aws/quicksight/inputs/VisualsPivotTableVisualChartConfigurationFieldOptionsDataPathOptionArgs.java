// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.VisualsPivotTableVisualChartConfigurationFieldOptionsDataPathOptionDataPathListArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VisualsPivotTableVisualChartConfigurationFieldOptionsDataPathOptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final VisualsPivotTableVisualChartConfigurationFieldOptionsDataPathOptionArgs Empty = new VisualsPivotTableVisualChartConfigurationFieldOptionsDataPathOptionArgs();

    @Import(name="dataPathLists", required=true)
    private Output<List<VisualsPivotTableVisualChartConfigurationFieldOptionsDataPathOptionDataPathListArgs>> dataPathLists;

    public Output<List<VisualsPivotTableVisualChartConfigurationFieldOptionsDataPathOptionDataPathListArgs>> dataPathLists() {
        return this.dataPathLists;
    }

    @Import(name="width")
    private @Nullable Output<String> width;

    public Optional<Output<String>> width() {
        return Optional.ofNullable(this.width);
    }

    private VisualsPivotTableVisualChartConfigurationFieldOptionsDataPathOptionArgs() {}

    private VisualsPivotTableVisualChartConfigurationFieldOptionsDataPathOptionArgs(VisualsPivotTableVisualChartConfigurationFieldOptionsDataPathOptionArgs $) {
        this.dataPathLists = $.dataPathLists;
        this.width = $.width;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VisualsPivotTableVisualChartConfigurationFieldOptionsDataPathOptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VisualsPivotTableVisualChartConfigurationFieldOptionsDataPathOptionArgs $;

        public Builder() {
            $ = new VisualsPivotTableVisualChartConfigurationFieldOptionsDataPathOptionArgs();
        }

        public Builder(VisualsPivotTableVisualChartConfigurationFieldOptionsDataPathOptionArgs defaults) {
            $ = new VisualsPivotTableVisualChartConfigurationFieldOptionsDataPathOptionArgs(Objects.requireNonNull(defaults));
        }

        public Builder dataPathLists(Output<List<VisualsPivotTableVisualChartConfigurationFieldOptionsDataPathOptionDataPathListArgs>> dataPathLists) {
            $.dataPathLists = dataPathLists;
            return this;
        }

        public Builder dataPathLists(List<VisualsPivotTableVisualChartConfigurationFieldOptionsDataPathOptionDataPathListArgs> dataPathLists) {
            return dataPathLists(Output.of(dataPathLists));
        }

        public Builder dataPathLists(VisualsPivotTableVisualChartConfigurationFieldOptionsDataPathOptionDataPathListArgs... dataPathLists) {
            return dataPathLists(List.of(dataPathLists));
        }

        public Builder width(@Nullable Output<String> width) {
            $.width = width;
            return this;
        }

        public Builder width(String width) {
            return width(Output.of(width));
        }

        public VisualsPivotTableVisualChartConfigurationFieldOptionsDataPathOptionArgs build() {
            if ($.dataPathLists == null) {
                throw new MissingRequiredPropertyException("VisualsPivotTableVisualChartConfigurationFieldOptionsDataPathOptionArgs", "dataPathLists");
            }
            return $;
        }
    }

}
