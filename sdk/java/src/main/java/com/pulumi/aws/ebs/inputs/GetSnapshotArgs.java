// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ebs.inputs;

import com.pulumi.aws.ebs.inputs.GetSnapshotFilterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSnapshotArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSnapshotArgs Empty = new GetSnapshotArgs();

    /**
     * One or more name/value pairs to filter off of. There are
     * several valid keys, for a full reference, check out
     * [describe-snapshots in the AWS CLI reference][1].
     * 
     */
    @Import(name="filters")
    private @Nullable Output<List<GetSnapshotFilterArgs>> filters;

    /**
     * @return One or more name/value pairs to filter off of. There are
     * several valid keys, for a full reference, check out
     * [describe-snapshots in the AWS CLI reference][1].
     * 
     */
    public Optional<Output<List<GetSnapshotFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * If more than one result is returned, use the most recent snapshot.
     * 
     */
    @Import(name="mostRecent")
    private @Nullable Output<Boolean> mostRecent;

    /**
     * @return If more than one result is returned, use the most recent snapshot.
     * 
     */
    public Optional<Output<Boolean>> mostRecent() {
        return Optional.ofNullable(this.mostRecent);
    }

    /**
     * Returns the snapshots owned by the specified owner id. Multiple owners can be specified.
     * 
     */
    @Import(name="owners")
    private @Nullable Output<List<String>> owners;

    /**
     * @return Returns the snapshots owned by the specified owner id. Multiple owners can be specified.
     * 
     */
    public Optional<Output<List<String>>> owners() {
        return Optional.ofNullable(this.owners);
    }

    /**
     * One or more AWS accounts IDs that can create volumes from the snapshot.
     * 
     */
    @Import(name="restorableByUserIds")
    private @Nullable Output<List<String>> restorableByUserIds;

    /**
     * @return One or more AWS accounts IDs that can create volumes from the snapshot.
     * 
     */
    public Optional<Output<List<String>>> restorableByUserIds() {
        return Optional.ofNullable(this.restorableByUserIds);
    }

    /**
     * Returns information on a specific snapshot_id.
     * 
     */
    @Import(name="snapshotIds")
    private @Nullable Output<List<String>> snapshotIds;

    /**
     * @return Returns information on a specific snapshot_id.
     * 
     */
    public Optional<Output<List<String>>> snapshotIds() {
        return Optional.ofNullable(this.snapshotIds);
    }

    /**
     * Map of tags for the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Map of tags for the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private GetSnapshotArgs() {}

    private GetSnapshotArgs(GetSnapshotArgs $) {
        this.filters = $.filters;
        this.mostRecent = $.mostRecent;
        this.owners = $.owners;
        this.restorableByUserIds = $.restorableByUserIds;
        this.snapshotIds = $.snapshotIds;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSnapshotArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSnapshotArgs $;

        public Builder() {
            $ = new GetSnapshotArgs();
        }

        public Builder(GetSnapshotArgs defaults) {
            $ = new GetSnapshotArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filters One or more name/value pairs to filter off of. There are
         * several valid keys, for a full reference, check out
         * [describe-snapshots in the AWS CLI reference][1].
         * 
         * @return builder
         * 
         */
        public Builder filters(@Nullable Output<List<GetSnapshotFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        /**
         * @param filters One or more name/value pairs to filter off of. There are
         * several valid keys, for a full reference, check out
         * [describe-snapshots in the AWS CLI reference][1].
         * 
         * @return builder
         * 
         */
        public Builder filters(List<GetSnapshotFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        /**
         * @param filters One or more name/value pairs to filter off of. There are
         * several valid keys, for a full reference, check out
         * [describe-snapshots in the AWS CLI reference][1].
         * 
         * @return builder
         * 
         */
        public Builder filters(GetSnapshotFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param mostRecent If more than one result is returned, use the most recent snapshot.
         * 
         * @return builder
         * 
         */
        public Builder mostRecent(@Nullable Output<Boolean> mostRecent) {
            $.mostRecent = mostRecent;
            return this;
        }

        /**
         * @param mostRecent If more than one result is returned, use the most recent snapshot.
         * 
         * @return builder
         * 
         */
        public Builder mostRecent(Boolean mostRecent) {
            return mostRecent(Output.of(mostRecent));
        }

        /**
         * @param owners Returns the snapshots owned by the specified owner id. Multiple owners can be specified.
         * 
         * @return builder
         * 
         */
        public Builder owners(@Nullable Output<List<String>> owners) {
            $.owners = owners;
            return this;
        }

        /**
         * @param owners Returns the snapshots owned by the specified owner id. Multiple owners can be specified.
         * 
         * @return builder
         * 
         */
        public Builder owners(List<String> owners) {
            return owners(Output.of(owners));
        }

        /**
         * @param owners Returns the snapshots owned by the specified owner id. Multiple owners can be specified.
         * 
         * @return builder
         * 
         */
        public Builder owners(String... owners) {
            return owners(List.of(owners));
        }

        /**
         * @param restorableByUserIds One or more AWS accounts IDs that can create volumes from the snapshot.
         * 
         * @return builder
         * 
         */
        public Builder restorableByUserIds(@Nullable Output<List<String>> restorableByUserIds) {
            $.restorableByUserIds = restorableByUserIds;
            return this;
        }

        /**
         * @param restorableByUserIds One or more AWS accounts IDs that can create volumes from the snapshot.
         * 
         * @return builder
         * 
         */
        public Builder restorableByUserIds(List<String> restorableByUserIds) {
            return restorableByUserIds(Output.of(restorableByUserIds));
        }

        /**
         * @param restorableByUserIds One or more AWS accounts IDs that can create volumes from the snapshot.
         * 
         * @return builder
         * 
         */
        public Builder restorableByUserIds(String... restorableByUserIds) {
            return restorableByUserIds(List.of(restorableByUserIds));
        }

        /**
         * @param snapshotIds Returns information on a specific snapshot_id.
         * 
         * @return builder
         * 
         */
        public Builder snapshotIds(@Nullable Output<List<String>> snapshotIds) {
            $.snapshotIds = snapshotIds;
            return this;
        }

        /**
         * @param snapshotIds Returns information on a specific snapshot_id.
         * 
         * @return builder
         * 
         */
        public Builder snapshotIds(List<String> snapshotIds) {
            return snapshotIds(Output.of(snapshotIds));
        }

        /**
         * @param snapshotIds Returns information on a specific snapshot_id.
         * 
         * @return builder
         * 
         */
        public Builder snapshotIds(String... snapshotIds) {
            return snapshotIds(List.of(snapshotIds));
        }

        /**
         * @param tags Map of tags for the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Map of tags for the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public GetSnapshotArgs build() {
            return $;
        }
    }

}
