// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.FontConfigurationFontSize;
import com.pulumi.aws.quicksight.outputs.FontConfigurationFontWeight;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FontConfiguration {
    private @Nullable String fontColor;
    private @Nullable String fontDecoration;
    private @Nullable FontConfigurationFontSize fontSize;
    private @Nullable String fontStyle;
    private @Nullable FontConfigurationFontWeight fontWeight;

    private FontConfiguration() {}
    public Optional<String> fontColor() {
        return Optional.ofNullable(this.fontColor);
    }
    public Optional<String> fontDecoration() {
        return Optional.ofNullable(this.fontDecoration);
    }
    public Optional<FontConfigurationFontSize> fontSize() {
        return Optional.ofNullable(this.fontSize);
    }
    public Optional<String> fontStyle() {
        return Optional.ofNullable(this.fontStyle);
    }
    public Optional<FontConfigurationFontWeight> fontWeight() {
        return Optional.ofNullable(this.fontWeight);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FontConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String fontColor;
        private @Nullable String fontDecoration;
        private @Nullable FontConfigurationFontSize fontSize;
        private @Nullable String fontStyle;
        private @Nullable FontConfigurationFontWeight fontWeight;
        public Builder() {}
        public Builder(FontConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fontColor = defaults.fontColor;
    	      this.fontDecoration = defaults.fontDecoration;
    	      this.fontSize = defaults.fontSize;
    	      this.fontStyle = defaults.fontStyle;
    	      this.fontWeight = defaults.fontWeight;
        }

        @CustomType.Setter
        public Builder fontColor(@Nullable String fontColor) {

            this.fontColor = fontColor;
            return this;
        }
        @CustomType.Setter
        public Builder fontDecoration(@Nullable String fontDecoration) {

            this.fontDecoration = fontDecoration;
            return this;
        }
        @CustomType.Setter
        public Builder fontSize(@Nullable FontConfigurationFontSize fontSize) {

            this.fontSize = fontSize;
            return this;
        }
        @CustomType.Setter
        public Builder fontStyle(@Nullable String fontStyle) {

            this.fontStyle = fontStyle;
            return this;
        }
        @CustomType.Setter
        public Builder fontWeight(@Nullable FontConfigurationFontWeight fontWeight) {

            this.fontWeight = fontWeight;
            return this;
        }
        public FontConfiguration build() {
            final var _resultValue = new FontConfiguration();
            _resultValue.fontColor = fontColor;
            _resultValue.fontDecoration = fontDecoration;
            _resultValue.fontSize = fontSize;
            _resultValue.fontStyle = fontStyle;
            _resultValue.fontWeight = fontWeight;
            return _resultValue;
        }
    }
}
