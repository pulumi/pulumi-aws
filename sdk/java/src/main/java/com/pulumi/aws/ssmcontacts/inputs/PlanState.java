// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ssmcontacts.inputs;

import com.pulumi.aws.ssmcontacts.inputs.PlanStageArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PlanState extends com.pulumi.resources.ResourceArgs {

    public static final PlanState Empty = new PlanState();

    /**
     * The Amazon Resource Name (ARN) of the contact or escalation plan.
     * 
     */
    @Import(name="contactId")
    private @Nullable Output<String> contactId;

    /**
     * @return The Amazon Resource Name (ARN) of the contact or escalation plan.
     * 
     */
    public Optional<Output<String>> contactId() {
        return Optional.ofNullable(this.contactId);
    }

    /**
     * One or more configuration blocks for specifying a list of stages that the escalation plan or engagement plan uses to engage contacts and contact methods. See Stage below for more details.
     * 
     */
    @Import(name="stages")
    private @Nullable Output<List<PlanStageArgs>> stages;

    /**
     * @return One or more configuration blocks for specifying a list of stages that the escalation plan or engagement plan uses to engage contacts and contact methods. See Stage below for more details.
     * 
     */
    public Optional<Output<List<PlanStageArgs>>> stages() {
        return Optional.ofNullable(this.stages);
    }

    private PlanState() {}

    private PlanState(PlanState $) {
        this.contactId = $.contactId;
        this.stages = $.stages;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PlanState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PlanState $;

        public Builder() {
            $ = new PlanState();
        }

        public Builder(PlanState defaults) {
            $ = new PlanState(Objects.requireNonNull(defaults));
        }

        /**
         * @param contactId The Amazon Resource Name (ARN) of the contact or escalation plan.
         * 
         * @return builder
         * 
         */
        public Builder contactId(@Nullable Output<String> contactId) {
            $.contactId = contactId;
            return this;
        }

        /**
         * @param contactId The Amazon Resource Name (ARN) of the contact or escalation plan.
         * 
         * @return builder
         * 
         */
        public Builder contactId(String contactId) {
            return contactId(Output.of(contactId));
        }

        /**
         * @param stages One or more configuration blocks for specifying a list of stages that the escalation plan or engagement plan uses to engage contacts and contact methods. See Stage below for more details.
         * 
         * @return builder
         * 
         */
        public Builder stages(@Nullable Output<List<PlanStageArgs>> stages) {
            $.stages = stages;
            return this;
        }

        /**
         * @param stages One or more configuration blocks for specifying a list of stages that the escalation plan or engagement plan uses to engage contacts and contact methods. See Stage below for more details.
         * 
         * @return builder
         * 
         */
        public Builder stages(List<PlanStageArgs> stages) {
            return stages(Output.of(stages));
        }

        /**
         * @param stages One or more configuration blocks for specifying a list of stages that the escalation plan or engagement plan uses to engage contacts and contact methods. See Stage below for more details.
         * 
         * @return builder
         * 
         */
        public Builder stages(PlanStageArgs... stages) {
            return stages(List.of(stages));
        }

        public PlanState build() {
            return $;
        }
    }

}
