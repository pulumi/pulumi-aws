// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iam.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSessionContextResult {
    private String arn;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return IAM source role ARN if `arn` corresponds to an STS assumed role. Otherwise, `issuer_arn` is equal to `arn`.
     * 
     */
    private String issuerArn;
    /**
     * @return Unique identifier of the IAM role that issues the STS assumed role.
     * 
     */
    private String issuerId;
    /**
     * @return Name of the source role. Only available if `arn` corresponds to an STS assumed role.
     * 
     */
    private String issuerName;
    /**
     * @return Name of the STS session. Only available if `arn` corresponds to an STS assumed role.
     * 
     */
    private String sessionName;

    private GetSessionContextResult() {}
    public String arn() {
        return this.arn;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return IAM source role ARN if `arn` corresponds to an STS assumed role. Otherwise, `issuer_arn` is equal to `arn`.
     * 
     */
    public String issuerArn() {
        return this.issuerArn;
    }
    /**
     * @return Unique identifier of the IAM role that issues the STS assumed role.
     * 
     */
    public String issuerId() {
        return this.issuerId;
    }
    /**
     * @return Name of the source role. Only available if `arn` corresponds to an STS assumed role.
     * 
     */
    public String issuerName() {
        return this.issuerName;
    }
    /**
     * @return Name of the STS session. Only available if `arn` corresponds to an STS assumed role.
     * 
     */
    public String sessionName() {
        return this.sessionName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSessionContextResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private String id;
        private String issuerArn;
        private String issuerId;
        private String issuerName;
        private String sessionName;
        public Builder() {}
        public Builder(GetSessionContextResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.id = defaults.id;
    	      this.issuerArn = defaults.issuerArn;
    	      this.issuerId = defaults.issuerId;
    	      this.issuerName = defaults.issuerName;
    	      this.sessionName = defaults.sessionName;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            if (arn == null) {
              throw new MissingRequiredPropertyException("GetSessionContextResult", "arn");
            }
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSessionContextResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder issuerArn(String issuerArn) {
            if (issuerArn == null) {
              throw new MissingRequiredPropertyException("GetSessionContextResult", "issuerArn");
            }
            this.issuerArn = issuerArn;
            return this;
        }
        @CustomType.Setter
        public Builder issuerId(String issuerId) {
            if (issuerId == null) {
              throw new MissingRequiredPropertyException("GetSessionContextResult", "issuerId");
            }
            this.issuerId = issuerId;
            return this;
        }
        @CustomType.Setter
        public Builder issuerName(String issuerName) {
            if (issuerName == null) {
              throw new MissingRequiredPropertyException("GetSessionContextResult", "issuerName");
            }
            this.issuerName = issuerName;
            return this;
        }
        @CustomType.Setter
        public Builder sessionName(String sessionName) {
            if (sessionName == null) {
              throw new MissingRequiredPropertyException("GetSessionContextResult", "sessionName");
            }
            this.sessionName = sessionName;
            return this;
        }
        public GetSessionContextResult build() {
            final var _resultValue = new GetSessionContextResult();
            _resultValue.arn = arn;
            _resultValue.id = id;
            _resultValue.issuerArn = issuerArn;
            _resultValue.issuerId = issuerId;
            _resultValue.issuerName = issuerName;
            _resultValue.sessionName = sessionName;
            return _resultValue;
        }
    }
}
