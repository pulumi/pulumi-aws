// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.guardduty.inputs;

import com.pulumi.aws.guardduty.inputs.DetectorDatasourcesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DetectorState extends com.pulumi.resources.ResourceArgs {

    public static final DetectorState Empty = new DetectorState();

    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="datasources")
    private @Nullable Output<DetectorDatasourcesArgs> datasources;

    public Optional<Output<DetectorDatasourcesArgs>> datasources() {
        return Optional.ofNullable(this.datasources);
    }

    @Import(name="enable")
    private @Nullable Output<Boolean> enable;

    public Optional<Output<Boolean>> enable() {
        return Optional.ofNullable(this.enable);
    }

    @Import(name="findingPublishingFrequency")
    private @Nullable Output<String> findingPublishingFrequency;

    public Optional<Output<String>> findingPublishingFrequency() {
        return Optional.ofNullable(this.findingPublishingFrequency);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private DetectorState() {}

    private DetectorState(DetectorState $) {
        this.accountId = $.accountId;
        this.arn = $.arn;
        this.datasources = $.datasources;
        this.enable = $.enable;
        this.findingPublishingFrequency = $.findingPublishingFrequency;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DetectorState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DetectorState $;

        public Builder() {
            $ = new DetectorState();
        }

        public Builder(DetectorState defaults) {
            $ = new DetectorState(Objects.requireNonNull(defaults));
        }

        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder datasources(@Nullable Output<DetectorDatasourcesArgs> datasources) {
            $.datasources = datasources;
            return this;
        }

        public Builder datasources(DetectorDatasourcesArgs datasources) {
            return datasources(Output.of(datasources));
        }

        public Builder enable(@Nullable Output<Boolean> enable) {
            $.enable = enable;
            return this;
        }

        public Builder enable(Boolean enable) {
            return enable(Output.of(enable));
        }

        public Builder findingPublishingFrequency(@Nullable Output<String> findingPublishingFrequency) {
            $.findingPublishingFrequency = findingPublishingFrequency;
            return this;
        }

        public Builder findingPublishingFrequency(String findingPublishingFrequency) {
            return findingPublishingFrequency(Output.of(findingPublishingFrequency));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public DetectorState build() {
            return $;
        }
    }

}
