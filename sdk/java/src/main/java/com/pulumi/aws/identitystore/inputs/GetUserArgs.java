// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.identitystore.inputs;

import com.pulumi.aws.identitystore.inputs.GetUserAlternateIdentifierArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetUserArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetUserArgs Empty = new GetUserArgs();

    /**
     * A unique identifier for a user or group that is not the primary identifier. Conflicts with `userId` and `filter`. Detailed below.
     * 
     */
    @Import(name="alternateIdentifier")
    private @Nullable Output<GetUserAlternateIdentifierArgs> alternateIdentifier;

    /**
     * @return A unique identifier for a user or group that is not the primary identifier. Conflicts with `userId` and `filter`. Detailed below.
     * 
     */
    public Optional<Output<GetUserAlternateIdentifierArgs>> alternateIdentifier() {
        return Optional.ofNullable(this.alternateIdentifier);
    }

    /**
     * Identity Store ID associated with the Single Sign-On Instance.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="identityStoreId", required=true)
    private Output<String> identityStoreId;

    /**
     * @return Identity Store ID associated with the Single Sign-On Instance.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<String> identityStoreId() {
        return this.identityStoreId;
    }

    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * The identifier for a user in the Identity Store.
     * 
     * &gt; Exactly one of the above arguments must be provided. Passing both `filter` and `userId` is allowed for backwards compatibility.
     * 
     */
    @Import(name="userId")
    private @Nullable Output<String> userId;

    /**
     * @return The identifier for a user in the Identity Store.
     * 
     * &gt; Exactly one of the above arguments must be provided. Passing both `filter` and `userId` is allowed for backwards compatibility.
     * 
     */
    public Optional<Output<String>> userId() {
        return Optional.ofNullable(this.userId);
    }

    private GetUserArgs() {}

    private GetUserArgs(GetUserArgs $) {
        this.alternateIdentifier = $.alternateIdentifier;
        this.identityStoreId = $.identityStoreId;
        this.region = $.region;
        this.userId = $.userId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetUserArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetUserArgs $;

        public Builder() {
            $ = new GetUserArgs();
        }

        public Builder(GetUserArgs defaults) {
            $ = new GetUserArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param alternateIdentifier A unique identifier for a user or group that is not the primary identifier. Conflicts with `userId` and `filter`. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder alternateIdentifier(@Nullable Output<GetUserAlternateIdentifierArgs> alternateIdentifier) {
            $.alternateIdentifier = alternateIdentifier;
            return this;
        }

        /**
         * @param alternateIdentifier A unique identifier for a user or group that is not the primary identifier. Conflicts with `userId` and `filter`. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder alternateIdentifier(GetUserAlternateIdentifierArgs alternateIdentifier) {
            return alternateIdentifier(Output.of(alternateIdentifier));
        }

        /**
         * @param identityStoreId Identity Store ID associated with the Single Sign-On Instance.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder identityStoreId(Output<String> identityStoreId) {
            $.identityStoreId = identityStoreId;
            return this;
        }

        /**
         * @param identityStoreId Identity Store ID associated with the Single Sign-On Instance.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder identityStoreId(String identityStoreId) {
            return identityStoreId(Output.of(identityStoreId));
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param userId The identifier for a user in the Identity Store.
         * 
         * &gt; Exactly one of the above arguments must be provided. Passing both `filter` and `userId` is allowed for backwards compatibility.
         * 
         * @return builder
         * 
         */
        public Builder userId(@Nullable Output<String> userId) {
            $.userId = userId;
            return this;
        }

        /**
         * @param userId The identifier for a user in the Identity Store.
         * 
         * &gt; Exactly one of the above arguments must be provided. Passing both `filter` and `userId` is allowed for backwards compatibility.
         * 
         * @return builder
         * 
         */
        public Builder userId(String userId) {
            return userId(Output.of(userId));
        }

        public GetUserArgs build() {
            if ($.identityStoreId == null) {
                throw new MissingRequiredPropertyException("GetUserArgs", "identityStoreId");
            }
            return $;
        }
    }

}
