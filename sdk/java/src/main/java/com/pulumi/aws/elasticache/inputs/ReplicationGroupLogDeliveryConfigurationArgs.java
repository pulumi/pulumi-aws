// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elasticache.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class ReplicationGroupLogDeliveryConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ReplicationGroupLogDeliveryConfigurationArgs Empty = new ReplicationGroupLogDeliveryConfigurationArgs();

    /**
     * Name of either the CloudWatch Logs LogGroup or Kinesis Data Firehose resource.
     * 
     */
    @Import(name="destination", required=true)
    private Output<String> destination;

    /**
     * @return Name of either the CloudWatch Logs LogGroup or Kinesis Data Firehose resource.
     * 
     */
    public Output<String> destination() {
        return this.destination;
    }

    /**
     * For CloudWatch Logs use `cloudwatch-logs` or for Kinesis Data Firehose use `kinesis-firehose`.
     * 
     */
    @Import(name="destinationType", required=true)
    private Output<String> destinationType;

    /**
     * @return For CloudWatch Logs use `cloudwatch-logs` or for Kinesis Data Firehose use `kinesis-firehose`.
     * 
     */
    public Output<String> destinationType() {
        return this.destinationType;
    }

    /**
     * Valid values are `json` or `text`
     * 
     */
    @Import(name="logFormat", required=true)
    private Output<String> logFormat;

    /**
     * @return Valid values are `json` or `text`
     * 
     */
    public Output<String> logFormat() {
        return this.logFormat;
    }

    /**
     * Valid values are  `slow-log` or `engine-log`. Max 1 of each.
     * 
     */
    @Import(name="logType", required=true)
    private Output<String> logType;

    /**
     * @return Valid values are  `slow-log` or `engine-log`. Max 1 of each.
     * 
     */
    public Output<String> logType() {
        return this.logType;
    }

    private ReplicationGroupLogDeliveryConfigurationArgs() {}

    private ReplicationGroupLogDeliveryConfigurationArgs(ReplicationGroupLogDeliveryConfigurationArgs $) {
        this.destination = $.destination;
        this.destinationType = $.destinationType;
        this.logFormat = $.logFormat;
        this.logType = $.logType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReplicationGroupLogDeliveryConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReplicationGroupLogDeliveryConfigurationArgs $;

        public Builder() {
            $ = new ReplicationGroupLogDeliveryConfigurationArgs();
        }

        public Builder(ReplicationGroupLogDeliveryConfigurationArgs defaults) {
            $ = new ReplicationGroupLogDeliveryConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param destination Name of either the CloudWatch Logs LogGroup or Kinesis Data Firehose resource.
         * 
         * @return builder
         * 
         */
        public Builder destination(Output<String> destination) {
            $.destination = destination;
            return this;
        }

        /**
         * @param destination Name of either the CloudWatch Logs LogGroup or Kinesis Data Firehose resource.
         * 
         * @return builder
         * 
         */
        public Builder destination(String destination) {
            return destination(Output.of(destination));
        }

        /**
         * @param destinationType For CloudWatch Logs use `cloudwatch-logs` or for Kinesis Data Firehose use `kinesis-firehose`.
         * 
         * @return builder
         * 
         */
        public Builder destinationType(Output<String> destinationType) {
            $.destinationType = destinationType;
            return this;
        }

        /**
         * @param destinationType For CloudWatch Logs use `cloudwatch-logs` or for Kinesis Data Firehose use `kinesis-firehose`.
         * 
         * @return builder
         * 
         */
        public Builder destinationType(String destinationType) {
            return destinationType(Output.of(destinationType));
        }

        /**
         * @param logFormat Valid values are `json` or `text`
         * 
         * @return builder
         * 
         */
        public Builder logFormat(Output<String> logFormat) {
            $.logFormat = logFormat;
            return this;
        }

        /**
         * @param logFormat Valid values are `json` or `text`
         * 
         * @return builder
         * 
         */
        public Builder logFormat(String logFormat) {
            return logFormat(Output.of(logFormat));
        }

        /**
         * @param logType Valid values are  `slow-log` or `engine-log`. Max 1 of each.
         * 
         * @return builder
         * 
         */
        public Builder logType(Output<String> logType) {
            $.logType = logType;
            return this;
        }

        /**
         * @param logType Valid values are  `slow-log` or `engine-log`. Max 1 of each.
         * 
         * @return builder
         * 
         */
        public Builder logType(String logType) {
            return logType(Output.of(logType));
        }

        public ReplicationGroupLogDeliveryConfigurationArgs build() {
            $.destination = Objects.requireNonNull($.destination, "expected parameter 'destination' to be non-null");
            $.destinationType = Objects.requireNonNull($.destinationType, "expected parameter 'destinationType' to be non-null");
            $.logFormat = Objects.requireNonNull($.logFormat, "expected parameter 'logFormat' to be non-null");
            $.logType = Objects.requireNonNull($.logType, "expected parameter 'logType' to be non-null");
            return $;
        }
    }

}
