// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.connect.outputs;

import com.pulumi.aws.connect.outputs.GetUserHierarchyGroupHierarchyPath;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetUserHierarchyGroupResult {
    /**
     * @return ARN of the hierarchy group.
     * 
     */
    private @Nullable String arn;
    private @Nullable String hierarchyGroupId;
    /**
     * @return Block that contains information about the levels in the hierarchy group. The `hierarchy_path` block is documented below.
     * 
     */
    private @Nullable List<GetUserHierarchyGroupHierarchyPath> hierarchyPaths;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private String instanceId;
    /**
     * @return Identifier of the level in the hierarchy group.
     * 
     */
    private @Nullable String levelId;
    /**
     * @return Name of the hierarchy group.
     * 
     */
    private @Nullable String name;
    /**
     * @return Map of tags to assign to the hierarchy group.
     * 
     */
    private @Nullable Map<String,String> tags;

    private GetUserHierarchyGroupResult() {}
    /**
     * @return ARN of the hierarchy group.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    public Optional<String> hierarchyGroupId() {
        return Optional.ofNullable(this.hierarchyGroupId);
    }
    /**
     * @return Block that contains information about the levels in the hierarchy group. The `hierarchy_path` block is documented below.
     * 
     */
    public List<GetUserHierarchyGroupHierarchyPath> hierarchyPaths() {
        return this.hierarchyPaths == null ? List.of() : this.hierarchyPaths;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return Identifier of the level in the hierarchy group.
     * 
     */
    public Optional<String> levelId() {
        return Optional.ofNullable(this.levelId);
    }
    /**
     * @return Name of the hierarchy group.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Map of tags to assign to the hierarchy group.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUserHierarchyGroupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String hierarchyGroupId;
        private @Nullable List<GetUserHierarchyGroupHierarchyPath> hierarchyPaths;
        private @Nullable String id;
        private String instanceId;
        private @Nullable String levelId;
        private @Nullable String name;
        private @Nullable Map<String,String> tags;
        public Builder() {}
        public Builder(GetUserHierarchyGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.hierarchyGroupId = defaults.hierarchyGroupId;
    	      this.hierarchyPaths = defaults.hierarchyPaths;
    	      this.id = defaults.id;
    	      this.instanceId = defaults.instanceId;
    	      this.levelId = defaults.levelId;
    	      this.name = defaults.name;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder hierarchyGroupId(@Nullable String hierarchyGroupId) {
            this.hierarchyGroupId = hierarchyGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder hierarchyPaths(@Nullable List<GetUserHierarchyGroupHierarchyPath> hierarchyPaths) {
            this.hierarchyPaths = hierarchyPaths;
            return this;
        }
        public Builder hierarchyPaths(GetUserHierarchyGroupHierarchyPath... hierarchyPaths) {
            return hierarchyPaths(List.of(hierarchyPaths));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            this.instanceId = Objects.requireNonNull(instanceId);
            return this;
        }
        @CustomType.Setter
        public Builder levelId(@Nullable String levelId) {
            this.levelId = levelId;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public GetUserHierarchyGroupResult build() {
            final var o = new GetUserHierarchyGroupResult();
            o.arn = arn;
            o.hierarchyGroupId = hierarchyGroupId;
            o.hierarchyPaths = hierarchyPaths;
            o.id = id;
            o.instanceId = instanceId;
            o.levelId = levelId;
            o.name = name;
            o.tags = tags;
            return o;
        }
    }
}
