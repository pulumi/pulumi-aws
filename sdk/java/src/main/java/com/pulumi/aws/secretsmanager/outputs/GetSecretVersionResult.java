// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.secretsmanager.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSecretVersionResult {
    /**
     * @return ARN of the secret.
     * 
     */
    private @Nullable String arn;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return Decrypted part of the protected secret information that was originally provided as a binary.
     * 
     */
    private @Nullable String secretBinary;
    private String secretId;
    /**
     * @return Decrypted part of the protected secret information that was originally provided as a string.
     * 
     */
    private @Nullable String secretString;
    /**
     * @return Unique identifier of this version of the secret.
     * 
     */
    private @Nullable String versionId;
    private @Nullable String versionStage;
    private @Nullable List<String> versionStages;

    private GetSecretVersionResult() {}
    /**
     * @return ARN of the secret.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Decrypted part of the protected secret information that was originally provided as a binary.
     * 
     */
    public Optional<String> secretBinary() {
        return Optional.ofNullable(this.secretBinary);
    }
    public String secretId() {
        return this.secretId;
    }
    /**
     * @return Decrypted part of the protected secret information that was originally provided as a string.
     * 
     */
    public Optional<String> secretString() {
        return Optional.ofNullable(this.secretString);
    }
    /**
     * @return Unique identifier of this version of the secret.
     * 
     */
    public Optional<String> versionId() {
        return Optional.ofNullable(this.versionId);
    }
    public Optional<String> versionStage() {
        return Optional.ofNullable(this.versionStage);
    }
    public List<String> versionStages() {
        return this.versionStages == null ? List.of() : this.versionStages;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecretVersionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String id;
        private @Nullable String secretBinary;
        private String secretId;
        private @Nullable String secretString;
        private @Nullable String versionId;
        private @Nullable String versionStage;
        private @Nullable List<String> versionStages;
        public Builder() {}
        public Builder(GetSecretVersionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.id = defaults.id;
    	      this.secretBinary = defaults.secretBinary;
    	      this.secretId = defaults.secretId;
    	      this.secretString = defaults.secretString;
    	      this.versionId = defaults.versionId;
    	      this.versionStage = defaults.versionStage;
    	      this.versionStages = defaults.versionStages;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder secretBinary(@Nullable String secretBinary) {
            this.secretBinary = secretBinary;
            return this;
        }
        @CustomType.Setter
        public Builder secretId(String secretId) {
            this.secretId = Objects.requireNonNull(secretId);
            return this;
        }
        @CustomType.Setter
        public Builder secretString(@Nullable String secretString) {
            this.secretString = secretString;
            return this;
        }
        @CustomType.Setter
        public Builder versionId(@Nullable String versionId) {
            this.versionId = versionId;
            return this;
        }
        @CustomType.Setter
        public Builder versionStage(@Nullable String versionStage) {
            this.versionStage = versionStage;
            return this;
        }
        @CustomType.Setter
        public Builder versionStages(@Nullable List<String> versionStages) {
            this.versionStages = versionStages;
            return this;
        }
        public Builder versionStages(String... versionStages) {
            return versionStages(List.of(versionStages));
        }
        public GetSecretVersionResult build() {
            final var o = new GetSecretVersionResult();
            o.arn = arn;
            o.id = id;
            o.secretBinary = secretBinary;
            o.secretId = secretId;
            o.secretString = secretString;
            o.versionId = versionId;
            o.versionStage = versionStage;
            o.versionStages = versionStages;
            return o;
        }
    }
}
