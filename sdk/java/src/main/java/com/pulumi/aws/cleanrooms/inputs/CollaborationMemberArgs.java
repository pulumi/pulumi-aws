// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cleanrooms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CollaborationMemberArgs extends com.pulumi.resources.ResourceArgs {

    public static final CollaborationMemberArgs Empty = new CollaborationMemberArgs();

    @Import(name="accountId", required=true)
    private Output<String> accountId;

    public Output<String> accountId() {
        return this.accountId;
    }

    @Import(name="displayName", required=true)
    private Output<String> displayName;

    public Output<String> displayName() {
        return this.displayName;
    }

    @Import(name="memberAbilities", required=true)
    private Output<List<String>> memberAbilities;

    public Output<List<String>> memberAbilities() {
        return this.memberAbilities;
    }

    @Import(name="status")
    private @Nullable Output<String> status;

    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private CollaborationMemberArgs() {}

    private CollaborationMemberArgs(CollaborationMemberArgs $) {
        this.accountId = $.accountId;
        this.displayName = $.displayName;
        this.memberAbilities = $.memberAbilities;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CollaborationMemberArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CollaborationMemberArgs $;

        public Builder() {
            $ = new CollaborationMemberArgs();
        }

        public Builder(CollaborationMemberArgs defaults) {
            $ = new CollaborationMemberArgs(Objects.requireNonNull(defaults));
        }

        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder memberAbilities(Output<List<String>> memberAbilities) {
            $.memberAbilities = memberAbilities;
            return this;
        }

        public Builder memberAbilities(List<String> memberAbilities) {
            return memberAbilities(Output.of(memberAbilities));
        }

        public Builder memberAbilities(String... memberAbilities) {
            return memberAbilities(List.of(memberAbilities));
        }

        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        public Builder status(String status) {
            return status(Output.of(status));
        }

        public CollaborationMemberArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("CollaborationMemberArgs", "accountId");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("CollaborationMemberArgs", "displayName");
            }
            if ($.memberAbilities == null) {
                throw new MissingRequiredPropertyException("CollaborationMemberArgs", "memberAbilities");
            }
            return $;
        }
    }

}
