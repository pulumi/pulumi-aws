// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.VisualsTableVisualChartConfigurationFieldOptionsSelectedFieldOptionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VisualsTableVisualChartConfigurationFieldOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final VisualsTableVisualChartConfigurationFieldOptionsArgs Empty = new VisualsTableVisualChartConfigurationFieldOptionsArgs();

    @Import(name="orders")
    private @Nullable Output<List<String>> orders;

    public Optional<Output<List<String>>> orders() {
        return Optional.ofNullable(this.orders);
    }

    @Import(name="selectedFieldOptions")
    private @Nullable Output<List<VisualsTableVisualChartConfigurationFieldOptionsSelectedFieldOptionArgs>> selectedFieldOptions;

    public Optional<Output<List<VisualsTableVisualChartConfigurationFieldOptionsSelectedFieldOptionArgs>>> selectedFieldOptions() {
        return Optional.ofNullable(this.selectedFieldOptions);
    }

    private VisualsTableVisualChartConfigurationFieldOptionsArgs() {}

    private VisualsTableVisualChartConfigurationFieldOptionsArgs(VisualsTableVisualChartConfigurationFieldOptionsArgs $) {
        this.orders = $.orders;
        this.selectedFieldOptions = $.selectedFieldOptions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VisualsTableVisualChartConfigurationFieldOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VisualsTableVisualChartConfigurationFieldOptionsArgs $;

        public Builder() {
            $ = new VisualsTableVisualChartConfigurationFieldOptionsArgs();
        }

        public Builder(VisualsTableVisualChartConfigurationFieldOptionsArgs defaults) {
            $ = new VisualsTableVisualChartConfigurationFieldOptionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder orders(@Nullable Output<List<String>> orders) {
            $.orders = orders;
            return this;
        }

        public Builder orders(List<String> orders) {
            return orders(Output.of(orders));
        }

        public Builder orders(String... orders) {
            return orders(List.of(orders));
        }

        public Builder selectedFieldOptions(@Nullable Output<List<VisualsTableVisualChartConfigurationFieldOptionsSelectedFieldOptionArgs>> selectedFieldOptions) {
            $.selectedFieldOptions = selectedFieldOptions;
            return this;
        }

        public Builder selectedFieldOptions(List<VisualsTableVisualChartConfigurationFieldOptionsSelectedFieldOptionArgs> selectedFieldOptions) {
            return selectedFieldOptions(Output.of(selectedFieldOptions));
        }

        public Builder selectedFieldOptions(VisualsTableVisualChartConfigurationFieldOptionsSelectedFieldOptionArgs... selectedFieldOptions) {
            return selectedFieldOptions(List.of(selectedFieldOptions));
        }

        public VisualsTableVisualChartConfigurationFieldOptionsArgs build() {
            return $;
        }
    }

}
