// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.wafv2.outputs;

import com.pulumi.aws.wafv2.outputs.WebAclRuleGroupAssociationManagedRuleGroupRuleActionOverrideActionToUse;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WebAclRuleGroupAssociationManagedRuleGroupRuleActionOverride {
    /**
     * @return Action to use instead of the rule&#39;s original action. See below.
     * 
     */
    private @Nullable WebAclRuleGroupAssociationManagedRuleGroupRuleActionOverrideActionToUse actionToUse;
    /**
     * @return Name of the rule to override within the rule group. Verify the name carefully. With managed rule groups, WAF silently ignores any override that uses an invalid rule name. With customer-owned rule groups, invalid rule names in your overrides will cause web ACL updates to fail. An invalid rule name is any name that doesn&#39;t exactly match the case-sensitive name of an existing rule in the rule group.
     * 
     */
    private String name;

    private WebAclRuleGroupAssociationManagedRuleGroupRuleActionOverride() {}
    /**
     * @return Action to use instead of the rule&#39;s original action. See below.
     * 
     */
    public Optional<WebAclRuleGroupAssociationManagedRuleGroupRuleActionOverrideActionToUse> actionToUse() {
        return Optional.ofNullable(this.actionToUse);
    }
    /**
     * @return Name of the rule to override within the rule group. Verify the name carefully. With managed rule groups, WAF silently ignores any override that uses an invalid rule name. With customer-owned rule groups, invalid rule names in your overrides will cause web ACL updates to fail. An invalid rule name is any name that doesn&#39;t exactly match the case-sensitive name of an existing rule in the rule group.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebAclRuleGroupAssociationManagedRuleGroupRuleActionOverride defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable WebAclRuleGroupAssociationManagedRuleGroupRuleActionOverrideActionToUse actionToUse;
        private String name;
        public Builder() {}
        public Builder(WebAclRuleGroupAssociationManagedRuleGroupRuleActionOverride defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actionToUse = defaults.actionToUse;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder actionToUse(@Nullable WebAclRuleGroupAssociationManagedRuleGroupRuleActionOverrideActionToUse actionToUse) {

            this.actionToUse = actionToUse;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("WebAclRuleGroupAssociationManagedRuleGroupRuleActionOverride", "name");
            }
            this.name = name;
            return this;
        }
        public WebAclRuleGroupAssociationManagedRuleGroupRuleActionOverride build() {
            final var _resultValue = new WebAclRuleGroupAssociationManagedRuleGroupRuleActionOverride();
            _resultValue.actionToUse = actionToUse;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
