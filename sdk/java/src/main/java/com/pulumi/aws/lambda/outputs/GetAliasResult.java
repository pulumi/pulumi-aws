// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lambda.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAliasResult {
    /**
     * @return ARN identifying the Lambda function alias.
     * 
     */
    private String arn;
    /**
     * @return Description of alias.
     * 
     */
    private String description;
    private String functionName;
    /**
     * @return Lambda function version which the alias uses.
     * 
     */
    private String functionVersion;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return ARN to be used for invoking Lambda Function from API Gateway - to be used in aws_api_gateway_integration&#39;s `uri`.
     * 
     */
    private String invokeArn;
    private String name;

    private GetAliasResult() {}
    /**
     * @return ARN identifying the Lambda function alias.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return Description of alias.
     * 
     */
    public String description() {
        return this.description;
    }
    public String functionName() {
        return this.functionName;
    }
    /**
     * @return Lambda function version which the alias uses.
     * 
     */
    public String functionVersion() {
        return this.functionVersion;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return ARN to be used for invoking Lambda Function from API Gateway - to be used in aws_api_gateway_integration&#39;s `uri`.
     * 
     */
    public String invokeArn() {
        return this.invokeArn;
    }
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAliasResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private String description;
        private String functionName;
        private String functionVersion;
        private String id;
        private String invokeArn;
        private String name;
        public Builder() {}
        public Builder(GetAliasResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.description = defaults.description;
    	      this.functionName = defaults.functionName;
    	      this.functionVersion = defaults.functionVersion;
    	      this.id = defaults.id;
    	      this.invokeArn = defaults.invokeArn;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            if (arn == null) {
              throw new MissingRequiredPropertyException("GetAliasResult", "arn");
            }
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetAliasResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder functionName(String functionName) {
            if (functionName == null) {
              throw new MissingRequiredPropertyException("GetAliasResult", "functionName");
            }
            this.functionName = functionName;
            return this;
        }
        @CustomType.Setter
        public Builder functionVersion(String functionVersion) {
            if (functionVersion == null) {
              throw new MissingRequiredPropertyException("GetAliasResult", "functionVersion");
            }
            this.functionVersion = functionVersion;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAliasResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder invokeArn(String invokeArn) {
            if (invokeArn == null) {
              throw new MissingRequiredPropertyException("GetAliasResult", "invokeArn");
            }
            this.invokeArn = invokeArn;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetAliasResult", "name");
            }
            this.name = name;
            return this;
        }
        public GetAliasResult build() {
            final var _resultValue = new GetAliasResult();
            _resultValue.arn = arn;
            _resultValue.description = description;
            _resultValue.functionName = functionName;
            _resultValue.functionVersion = functionVersion;
            _resultValue.id = id;
            _resultValue.invokeArn = invokeArn;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
