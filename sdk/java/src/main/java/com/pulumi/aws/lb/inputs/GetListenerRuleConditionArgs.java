// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lb.inputs;

import com.pulumi.aws.lb.inputs.GetListenerRuleConditionHostHeaderArgs;
import com.pulumi.aws.lb.inputs.GetListenerRuleConditionHttpHeaderArgs;
import com.pulumi.aws.lb.inputs.GetListenerRuleConditionHttpRequestMethodArgs;
import com.pulumi.aws.lb.inputs.GetListenerRuleConditionPathPatternArgs;
import com.pulumi.aws.lb.inputs.GetListenerRuleConditionQueryStringArgs;
import com.pulumi.aws.lb.inputs.GetListenerRuleConditionSourceIpArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetListenerRuleConditionArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetListenerRuleConditionArgs Empty = new GetListenerRuleConditionArgs();

    /**
     * Contains a single attribute `values`, which contains a set of host names.
     * 
     */
    @Import(name="hostHeader")
    private @Nullable Output<GetListenerRuleConditionHostHeaderArgs> hostHeader;

    /**
     * @return Contains a single attribute `values`, which contains a set of host names.
     * 
     */
    public Optional<Output<GetListenerRuleConditionHostHeaderArgs>> hostHeader() {
        return Optional.ofNullable(this.hostHeader);
    }

    /**
     * HTTP header and values to match.
     * Detailed below.
     * 
     */
    @Import(name="httpHeader")
    private @Nullable Output<GetListenerRuleConditionHttpHeaderArgs> httpHeader;

    /**
     * @return HTTP header and values to match.
     * Detailed below.
     * 
     */
    public Optional<Output<GetListenerRuleConditionHttpHeaderArgs>> httpHeader() {
        return Optional.ofNullable(this.httpHeader);
    }

    /**
     * Contains a single attribute `values`, which contains a set of HTTP request methods.
     * 
     */
    @Import(name="httpRequestMethod")
    private @Nullable Output<GetListenerRuleConditionHttpRequestMethodArgs> httpRequestMethod;

    /**
     * @return Contains a single attribute `values`, which contains a set of HTTP request methods.
     * 
     */
    public Optional<Output<GetListenerRuleConditionHttpRequestMethodArgs>> httpRequestMethod() {
        return Optional.ofNullable(this.httpRequestMethod);
    }

    /**
     * Contains a single attribute `values`, which contains a set of path patterns to compare against the request URL.
     * 
     */
    @Import(name="pathPattern")
    private @Nullable Output<GetListenerRuleConditionPathPatternArgs> pathPattern;

    /**
     * @return Contains a single attribute `values`, which contains a set of path patterns to compare against the request URL.
     * 
     */
    public Optional<Output<GetListenerRuleConditionPathPatternArgs>> pathPattern() {
        return Optional.ofNullable(this.pathPattern);
    }

    /**
     * Query string parameters to match.
     * Detailed below.
     * 
     */
    @Import(name="queryString")
    private @Nullable Output<GetListenerRuleConditionQueryStringArgs> queryString;

    /**
     * @return Query string parameters to match.
     * Detailed below.
     * 
     */
    public Optional<Output<GetListenerRuleConditionQueryStringArgs>> queryString() {
        return Optional.ofNullable(this.queryString);
    }

    /**
     * Contains a single attribute `values`, which contains a set of source IPs in CIDR notation.
     * 
     */
    @Import(name="sourceIp")
    private @Nullable Output<GetListenerRuleConditionSourceIpArgs> sourceIp;

    /**
     * @return Contains a single attribute `values`, which contains a set of source IPs in CIDR notation.
     * 
     */
    public Optional<Output<GetListenerRuleConditionSourceIpArgs>> sourceIp() {
        return Optional.ofNullable(this.sourceIp);
    }

    private GetListenerRuleConditionArgs() {}

    private GetListenerRuleConditionArgs(GetListenerRuleConditionArgs $) {
        this.hostHeader = $.hostHeader;
        this.httpHeader = $.httpHeader;
        this.httpRequestMethod = $.httpRequestMethod;
        this.pathPattern = $.pathPattern;
        this.queryString = $.queryString;
        this.sourceIp = $.sourceIp;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetListenerRuleConditionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetListenerRuleConditionArgs $;

        public Builder() {
            $ = new GetListenerRuleConditionArgs();
        }

        public Builder(GetListenerRuleConditionArgs defaults) {
            $ = new GetListenerRuleConditionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param hostHeader Contains a single attribute `values`, which contains a set of host names.
         * 
         * @return builder
         * 
         */
        public Builder hostHeader(@Nullable Output<GetListenerRuleConditionHostHeaderArgs> hostHeader) {
            $.hostHeader = hostHeader;
            return this;
        }

        /**
         * @param hostHeader Contains a single attribute `values`, which contains a set of host names.
         * 
         * @return builder
         * 
         */
        public Builder hostHeader(GetListenerRuleConditionHostHeaderArgs hostHeader) {
            return hostHeader(Output.of(hostHeader));
        }

        /**
         * @param httpHeader HTTP header and values to match.
         * Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder httpHeader(@Nullable Output<GetListenerRuleConditionHttpHeaderArgs> httpHeader) {
            $.httpHeader = httpHeader;
            return this;
        }

        /**
         * @param httpHeader HTTP header and values to match.
         * Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder httpHeader(GetListenerRuleConditionHttpHeaderArgs httpHeader) {
            return httpHeader(Output.of(httpHeader));
        }

        /**
         * @param httpRequestMethod Contains a single attribute `values`, which contains a set of HTTP request methods.
         * 
         * @return builder
         * 
         */
        public Builder httpRequestMethod(@Nullable Output<GetListenerRuleConditionHttpRequestMethodArgs> httpRequestMethod) {
            $.httpRequestMethod = httpRequestMethod;
            return this;
        }

        /**
         * @param httpRequestMethod Contains a single attribute `values`, which contains a set of HTTP request methods.
         * 
         * @return builder
         * 
         */
        public Builder httpRequestMethod(GetListenerRuleConditionHttpRequestMethodArgs httpRequestMethod) {
            return httpRequestMethod(Output.of(httpRequestMethod));
        }

        /**
         * @param pathPattern Contains a single attribute `values`, which contains a set of path patterns to compare against the request URL.
         * 
         * @return builder
         * 
         */
        public Builder pathPattern(@Nullable Output<GetListenerRuleConditionPathPatternArgs> pathPattern) {
            $.pathPattern = pathPattern;
            return this;
        }

        /**
         * @param pathPattern Contains a single attribute `values`, which contains a set of path patterns to compare against the request URL.
         * 
         * @return builder
         * 
         */
        public Builder pathPattern(GetListenerRuleConditionPathPatternArgs pathPattern) {
            return pathPattern(Output.of(pathPattern));
        }

        /**
         * @param queryString Query string parameters to match.
         * Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder queryString(@Nullable Output<GetListenerRuleConditionQueryStringArgs> queryString) {
            $.queryString = queryString;
            return this;
        }

        /**
         * @param queryString Query string parameters to match.
         * Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder queryString(GetListenerRuleConditionQueryStringArgs queryString) {
            return queryString(Output.of(queryString));
        }

        /**
         * @param sourceIp Contains a single attribute `values`, which contains a set of source IPs in CIDR notation.
         * 
         * @return builder
         * 
         */
        public Builder sourceIp(@Nullable Output<GetListenerRuleConditionSourceIpArgs> sourceIp) {
            $.sourceIp = sourceIp;
            return this;
        }

        /**
         * @param sourceIp Contains a single attribute `values`, which contains a set of source IPs in CIDR notation.
         * 
         * @return builder
         * 
         */
        public Builder sourceIp(GetListenerRuleConditionSourceIpArgs sourceIp) {
            return sourceIp(Output.of(sourceIp));
        }

        public GetListenerRuleConditionArgs build() {
            return $;
        }
    }

}
