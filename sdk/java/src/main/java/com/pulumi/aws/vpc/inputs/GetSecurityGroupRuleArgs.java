// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.vpc.inputs;

import com.pulumi.aws.vpc.inputs.GetSecurityGroupRuleFilterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSecurityGroupRuleArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSecurityGroupRuleArgs Empty = new GetSecurityGroupRuleArgs();

    /**
     * Configuration block(s) for filtering. Detailed below.
     * 
     * The arguments of this data source act as filters for querying the available
     * security group rules. The given filters must match exactly one security group rule
     * whose data will be exported as attributes.
     * 
     */
    @Import(name="filters")
    private @Nullable Output<List<GetSecurityGroupRuleFilterArgs>> filters;

    /**
     * @return Configuration block(s) for filtering. Detailed below.
     * 
     * The arguments of this data source act as filters for querying the available
     * security group rules. The given filters must match exactly one security group rule
     * whose data will be exported as attributes.
     * 
     */
    public Optional<Output<List<GetSecurityGroupRuleFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * ID of the security group rule to select.
     * 
     */
    @Import(name="securityGroupRuleId")
    private @Nullable Output<String> securityGroupRuleId;

    /**
     * @return ID of the security group rule to select.
     * 
     */
    public Optional<Output<String>> securityGroupRuleId() {
        return Optional.ofNullable(this.securityGroupRuleId);
    }

    private GetSecurityGroupRuleArgs() {}

    private GetSecurityGroupRuleArgs(GetSecurityGroupRuleArgs $) {
        this.filters = $.filters;
        this.securityGroupRuleId = $.securityGroupRuleId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSecurityGroupRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSecurityGroupRuleArgs $;

        public Builder() {
            $ = new GetSecurityGroupRuleArgs();
        }

        public Builder(GetSecurityGroupRuleArgs defaults) {
            $ = new GetSecurityGroupRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filters Configuration block(s) for filtering. Detailed below.
         * 
         * The arguments of this data source act as filters for querying the available
         * security group rules. The given filters must match exactly one security group rule
         * whose data will be exported as attributes.
         * 
         * @return builder
         * 
         */
        public Builder filters(@Nullable Output<List<GetSecurityGroupRuleFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        /**
         * @param filters Configuration block(s) for filtering. Detailed below.
         * 
         * The arguments of this data source act as filters for querying the available
         * security group rules. The given filters must match exactly one security group rule
         * whose data will be exported as attributes.
         * 
         * @return builder
         * 
         */
        public Builder filters(List<GetSecurityGroupRuleFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        /**
         * @param filters Configuration block(s) for filtering. Detailed below.
         * 
         * The arguments of this data source act as filters for querying the available
         * security group rules. The given filters must match exactly one security group rule
         * whose data will be exported as attributes.
         * 
         * @return builder
         * 
         */
        public Builder filters(GetSecurityGroupRuleFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param securityGroupRuleId ID of the security group rule to select.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupRuleId(@Nullable Output<String> securityGroupRuleId) {
            $.securityGroupRuleId = securityGroupRuleId;
            return this;
        }

        /**
         * @param securityGroupRuleId ID of the security group rule to select.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupRuleId(String securityGroupRuleId) {
            return securityGroupRuleId(Output.of(securityGroupRuleId));
        }

        public GetSecurityGroupRuleArgs build() {
            return $;
        }
    }

}
