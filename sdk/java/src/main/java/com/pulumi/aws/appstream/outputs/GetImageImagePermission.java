// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appstream.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class GetImageImagePermission {
    /**
     * @return Boolean indicating if the image can be used for a fleet.
     * 
     */
    private Boolean allowFleet;
    /**
     * @return indicated whether the image can be used for an image builder.
     * 
     */
    private Boolean allowImageBuilder;

    private GetImageImagePermission() {}
    /**
     * @return Boolean indicating if the image can be used for a fleet.
     * 
     */
    public Boolean allowFleet() {
        return this.allowFleet;
    }
    /**
     * @return indicated whether the image can be used for an image builder.
     * 
     */
    public Boolean allowImageBuilder() {
        return this.allowImageBuilder;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetImageImagePermission defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean allowFleet;
        private Boolean allowImageBuilder;
        public Builder() {}
        public Builder(GetImageImagePermission defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowFleet = defaults.allowFleet;
    	      this.allowImageBuilder = defaults.allowImageBuilder;
        }

        @CustomType.Setter
        public Builder allowFleet(Boolean allowFleet) {
            if (allowFleet == null) {
              throw new MissingRequiredPropertyException("GetImageImagePermission", "allowFleet");
            }
            this.allowFleet = allowFleet;
            return this;
        }
        @CustomType.Setter
        public Builder allowImageBuilder(Boolean allowImageBuilder) {
            if (allowImageBuilder == null) {
              throw new MissingRequiredPropertyException("GetImageImagePermission", "allowImageBuilder");
            }
            this.allowImageBuilder = allowImageBuilder;
            return this;
        }
        public GetImageImagePermission build() {
            final var _resultValue = new GetImageImagePermission();
            _resultValue.allowFleet = allowFleet;
            _resultValue.allowImageBuilder = allowImageBuilder;
            return _resultValue;
        }
    }
}
