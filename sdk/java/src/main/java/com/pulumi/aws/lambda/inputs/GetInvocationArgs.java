// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lambda.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetInvocationArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetInvocationArgs Empty = new GetInvocationArgs();

    @Import(name="functionName", required=true)
    private Output<String> functionName;

    public Output<String> functionName() {
        return this.functionName;
    }

    @Import(name="input", required=true)
    private Output<String> input;

    public Output<String> input() {
        return this.input;
    }

    @Import(name="qualifier")
    private @Nullable Output<String> qualifier;

    public Optional<Output<String>> qualifier() {
        return Optional.ofNullable(this.qualifier);
    }

    private GetInvocationArgs() {}

    private GetInvocationArgs(GetInvocationArgs $) {
        this.functionName = $.functionName;
        this.input = $.input;
        this.qualifier = $.qualifier;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInvocationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInvocationArgs $;

        public Builder() {
            $ = new GetInvocationArgs();
        }

        public Builder(GetInvocationArgs defaults) {
            $ = new GetInvocationArgs(Objects.requireNonNull(defaults));
        }

        public Builder functionName(Output<String> functionName) {
            $.functionName = functionName;
            return this;
        }

        public Builder functionName(String functionName) {
            return functionName(Output.of(functionName));
        }

        public Builder input(Output<String> input) {
            $.input = input;
            return this;
        }

        public Builder input(String input) {
            return input(Output.of(input));
        }

        public Builder qualifier(@Nullable Output<String> qualifier) {
            $.qualifier = qualifier;
            return this;
        }

        public Builder qualifier(String qualifier) {
            return qualifier(Output.of(qualifier));
        }

        public GetInvocationArgs build() {
            $.functionName = Objects.requireNonNull($.functionName, "expected parameter 'functionName' to be non-null");
            $.input = Objects.requireNonNull($.input, "expected parameter 'input' to be non-null");
            return $;
        }
    }

}
