// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lambda.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FunctionVpcConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final FunctionVpcConfigArgs Empty = new FunctionVpcConfigArgs();

    /**
     * Allows outbound IPv6 traffic on VPC functions that are connected to dual-stack subnets. Default is `false`.
     * 
     */
    @Import(name="ipv6AllowedForDualStack")
    private @Nullable Output<Boolean> ipv6AllowedForDualStack;

    /**
     * @return Allows outbound IPv6 traffic on VPC functions that are connected to dual-stack subnets. Default is `false`.
     * 
     */
    public Optional<Output<Boolean>> ipv6AllowedForDualStack() {
        return Optional.ofNullable(this.ipv6AllowedForDualStack);
    }

    /**
     * List of security group IDs associated with the Lambda function.
     * 
     */
    @Import(name="securityGroupIds", required=true)
    private Output<List<String>> securityGroupIds;

    /**
     * @return List of security group IDs associated with the Lambda function.
     * 
     */
    public Output<List<String>> securityGroupIds() {
        return this.securityGroupIds;
    }

    /**
     * List of subnet IDs associated with the Lambda function.
     * 
     */
    @Import(name="subnetIds", required=true)
    private Output<List<String>> subnetIds;

    /**
     * @return List of subnet IDs associated with the Lambda function.
     * 
     */
    public Output<List<String>> subnetIds() {
        return this.subnetIds;
    }

    @Import(name="vpcId")
    private @Nullable Output<String> vpcId;

    public Optional<Output<String>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    private FunctionVpcConfigArgs() {}

    private FunctionVpcConfigArgs(FunctionVpcConfigArgs $) {
        this.ipv6AllowedForDualStack = $.ipv6AllowedForDualStack;
        this.securityGroupIds = $.securityGroupIds;
        this.subnetIds = $.subnetIds;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FunctionVpcConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FunctionVpcConfigArgs $;

        public Builder() {
            $ = new FunctionVpcConfigArgs();
        }

        public Builder(FunctionVpcConfigArgs defaults) {
            $ = new FunctionVpcConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ipv6AllowedForDualStack Allows outbound IPv6 traffic on VPC functions that are connected to dual-stack subnets. Default is `false`.
         * 
         * @return builder
         * 
         */
        public Builder ipv6AllowedForDualStack(@Nullable Output<Boolean> ipv6AllowedForDualStack) {
            $.ipv6AllowedForDualStack = ipv6AllowedForDualStack;
            return this;
        }

        /**
         * @param ipv6AllowedForDualStack Allows outbound IPv6 traffic on VPC functions that are connected to dual-stack subnets. Default is `false`.
         * 
         * @return builder
         * 
         */
        public Builder ipv6AllowedForDualStack(Boolean ipv6AllowedForDualStack) {
            return ipv6AllowedForDualStack(Output.of(ipv6AllowedForDualStack));
        }

        /**
         * @param securityGroupIds List of security group IDs associated with the Lambda function.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(Output<List<String>> securityGroupIds) {
            $.securityGroupIds = securityGroupIds;
            return this;
        }

        /**
         * @param securityGroupIds List of security group IDs associated with the Lambda function.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(List<String> securityGroupIds) {
            return securityGroupIds(Output.of(securityGroupIds));
        }

        /**
         * @param securityGroupIds List of security group IDs associated with the Lambda function.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }

        /**
         * @param subnetIds List of subnet IDs associated with the Lambda function.
         * 
         * @return builder
         * 
         */
        public Builder subnetIds(Output<List<String>> subnetIds) {
            $.subnetIds = subnetIds;
            return this;
        }

        /**
         * @param subnetIds List of subnet IDs associated with the Lambda function.
         * 
         * @return builder
         * 
         */
        public Builder subnetIds(List<String> subnetIds) {
            return subnetIds(Output.of(subnetIds));
        }

        /**
         * @param subnetIds List of subnet IDs associated with the Lambda function.
         * 
         * @return builder
         * 
         */
        public Builder subnetIds(String... subnetIds) {
            return subnetIds(List.of(subnetIds));
        }

        public Builder vpcId(@Nullable Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        public FunctionVpcConfigArgs build() {
            if ($.securityGroupIds == null) {
                throw new MissingRequiredPropertyException("FunctionVpcConfigArgs", "securityGroupIds");
            }
            if ($.subnetIds == null) {
                throw new MissingRequiredPropertyException("FunctionVpcConfigArgs", "subnetIds");
            }
            return $;
        }
    }

}
