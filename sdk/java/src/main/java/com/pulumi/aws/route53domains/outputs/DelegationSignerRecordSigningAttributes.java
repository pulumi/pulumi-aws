// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.route53domains.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class DelegationSignerRecordSigningAttributes {
    /**
     * @return Algorithm which was used to generate the digest from the public key.
     * 
     */
    private Integer algorithm;
    /**
     * @return Defines the type of key. It can be either a KSK (key-signing-key, value `257`) or ZSK (zone-signing-key, value `256`).
     * 
     */
    private Integer flags;
    /**
     * @return The base64-encoded public key part of the key pair that is passed to the registry.
     * 
     */
    private String publicKey;

    private DelegationSignerRecordSigningAttributes() {}
    /**
     * @return Algorithm which was used to generate the digest from the public key.
     * 
     */
    public Integer algorithm() {
        return this.algorithm;
    }
    /**
     * @return Defines the type of key. It can be either a KSK (key-signing-key, value `257`) or ZSK (zone-signing-key, value `256`).
     * 
     */
    public Integer flags() {
        return this.flags;
    }
    /**
     * @return The base64-encoded public key part of the key pair that is passed to the registry.
     * 
     */
    public String publicKey() {
        return this.publicKey;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DelegationSignerRecordSigningAttributes defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer algorithm;
        private Integer flags;
        private String publicKey;
        public Builder() {}
        public Builder(DelegationSignerRecordSigningAttributes defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.algorithm = defaults.algorithm;
    	      this.flags = defaults.flags;
    	      this.publicKey = defaults.publicKey;
        }

        @CustomType.Setter
        public Builder algorithm(Integer algorithm) {
            if (algorithm == null) {
              throw new MissingRequiredPropertyException("DelegationSignerRecordSigningAttributes", "algorithm");
            }
            this.algorithm = algorithm;
            return this;
        }
        @CustomType.Setter
        public Builder flags(Integer flags) {
            if (flags == null) {
              throw new MissingRequiredPropertyException("DelegationSignerRecordSigningAttributes", "flags");
            }
            this.flags = flags;
            return this;
        }
        @CustomType.Setter
        public Builder publicKey(String publicKey) {
            if (publicKey == null) {
              throw new MissingRequiredPropertyException("DelegationSignerRecordSigningAttributes", "publicKey");
            }
            this.publicKey = publicKey;
            return this;
        }
        public DelegationSignerRecordSigningAttributes build() {
            final var _resultValue = new DelegationSignerRecordSigningAttributes();
            _resultValue.algorithm = algorithm;
            _resultValue.flags = flags;
            _resultValue.publicKey = publicKey;
            return _resultValue;
        }
    }
}
