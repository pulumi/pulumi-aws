// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.networkfirewall;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.networkfirewall.TlsInspectionConfigurationArgs;
import com.pulumi.aws.networkfirewall.inputs.TlsInspectionConfigurationState;
import com.pulumi.aws.networkfirewall.outputs.TlsInspectionConfigurationCertificate;
import com.pulumi.aws.networkfirewall.outputs.TlsInspectionConfigurationCertificateAuthority;
import com.pulumi.aws.networkfirewall.outputs.TlsInspectionConfigurationEncryptionConfiguration;
import com.pulumi.aws.networkfirewall.outputs.TlsInspectionConfigurationTimeouts;
import com.pulumi.aws.networkfirewall.outputs.TlsInspectionConfigurationTlsInspectionConfiguration;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for managing an AWS Network Firewall TLS Inspection Configuration.
 * 
 * ## Example Usage
 * 
 * &gt; **NOTE:** You must configure either inbound inspection, outbound inspection, or both.
 * 
 * ### Basic inbound/ingress inspection
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.networkfirewall.TlsInspectionConfiguration;
 * import com.pulumi.aws.networkfirewall.TlsInspectionConfigurationArgs;
 * import com.pulumi.aws.networkfirewall.inputs.TlsInspectionConfigurationEncryptionConfigurationArgs;
 * import com.pulumi.aws.networkfirewall.inputs.TlsInspectionConfigurationTlsInspectionConfigurationArgs;
 * import com.pulumi.aws.networkfirewall.inputs.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new TlsInspectionConfiguration("example", TlsInspectionConfigurationArgs.builder()
 *             .name("example")
 *             .description("example")
 *             .encryptionConfigurations(TlsInspectionConfigurationEncryptionConfigurationArgs.builder()
 *                 .keyId("AWS_OWNED_KMS_KEY")
 *                 .type("AWS_OWNED_KMS_KEY")
 *                 .build())
 *             .tlsInspectionConfiguration(TlsInspectionConfigurationTlsInspectionConfigurationArgs.builder()
 *                 .serverCertificateConfiguration(TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationArgs.builder()
 *                     .serverCertificates(TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationServerCertificateArgs.builder()
 *                         .resourceArn(example1.arn())
 *                         .build())
 *                     .scopes(TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeArgs.builder()
 *                         .protocols(6)
 *                         .destinationPorts(TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeDestinationPortArgs.builder()
 *                             .fromPort(443)
 *                             .toPort(443)
 *                             .build())
 *                         .destinations(TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeDestinationArgs.builder()
 *                             .addressDefinition("0.0.0.0/0")
 *                             .build())
 *                         .sourcePorts(TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeSourcePortArgs.builder()
 *                             .fromPort(0)
 *                             .toPort(65535)
 *                             .build())
 *                         .sources(TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeSourceArgs.builder()
 *                             .addressDefinition("0.0.0.0/0")
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Basic outbound/engress inspection
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.networkfirewall.TlsInspectionConfiguration;
 * import com.pulumi.aws.networkfirewall.TlsInspectionConfigurationArgs;
 * import com.pulumi.aws.networkfirewall.inputs.TlsInspectionConfigurationEncryptionConfigurationArgs;
 * import com.pulumi.aws.networkfirewall.inputs.TlsInspectionConfigurationTlsInspectionConfigurationArgs;
 * import com.pulumi.aws.networkfirewall.inputs.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationArgs;
 * import com.pulumi.aws.networkfirewall.inputs.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationCheckCertificateRevocationStatusArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new TlsInspectionConfiguration("example", TlsInspectionConfigurationArgs.builder()
 *             .name("example")
 *             .description("example")
 *             .encryptionConfigurations(TlsInspectionConfigurationEncryptionConfigurationArgs.builder()
 *                 .keyId("AWS_OWNED_KMS_KEY")
 *                 .type("AWS_OWNED_KMS_KEY")
 *                 .build())
 *             .tlsInspectionConfiguration(TlsInspectionConfigurationTlsInspectionConfigurationArgs.builder()
 *                 .serverCertificateConfiguration(TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationArgs.builder()
 *                     .certificateAuthorityArn(example1.arn())
 *                     .checkCertificateRevocationStatus(TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationCheckCertificateRevocationStatusArgs.builder()
 *                         .revokedStatusAction("REJECT")
 *                         .unknownStatusAction("PASS")
 *                         .build())
 *                     .scopes(TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeArgs.builder()
 *                         .protocols(6)
 *                         .destinationPorts(TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeDestinationPortArgs.builder()
 *                             .fromPort(443)
 *                             .toPort(443)
 *                             .build())
 *                         .destinations(TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeDestinationArgs.builder()
 *                             .addressDefinition("0.0.0.0/0")
 *                             .build())
 *                         .sourcePorts(TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeSourcePortArgs.builder()
 *                             .fromPort(0)
 *                             .toPort(65535)
 *                             .build())
 *                         .sources(TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeSourceArgs.builder()
 *                             .addressDefinition("0.0.0.0/0")
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Inbound with encryption configuration
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.kms.Key;
 * import com.pulumi.aws.kms.KeyArgs;
 * import com.pulumi.aws.networkfirewall.TlsInspectionConfiguration;
 * import com.pulumi.aws.networkfirewall.TlsInspectionConfigurationArgs;
 * import com.pulumi.aws.networkfirewall.inputs.TlsInspectionConfigurationEncryptionConfigurationArgs;
 * import com.pulumi.aws.networkfirewall.inputs.TlsInspectionConfigurationTlsInspectionConfigurationArgs;
 * import com.pulumi.aws.networkfirewall.inputs.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Key("example", KeyArgs.builder()
 *             .description("example")
 *             .deletionWindowInDays(7)
 *             .build());
 * 
 *         var exampleTlsInspectionConfiguration = new TlsInspectionConfiguration("exampleTlsInspectionConfiguration", TlsInspectionConfigurationArgs.builder()
 *             .name("example")
 *             .description("example")
 *             .encryptionConfigurations(TlsInspectionConfigurationEncryptionConfigurationArgs.builder()
 *                 .keyId(example.arn())
 *                 .type("CUSTOMER_KMS")
 *                 .build())
 *             .tlsInspectionConfiguration(TlsInspectionConfigurationTlsInspectionConfigurationArgs.builder()
 *                 .serverCertificateConfiguration(TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationArgs.builder()
 *                     .serverCertificates(TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationServerCertificateArgs.builder()
 *                         .resourceArn(example1.arn())
 *                         .build())
 *                     .scopes(TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeArgs.builder()
 *                         .protocols(6)
 *                         .destinationPorts(TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeDestinationPortArgs.builder()
 *                             .fromPort(443)
 *                             .toPort(443)
 *                             .build())
 *                         .destinations(TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeDestinationArgs.builder()
 *                             .addressDefinition("0.0.0.0/0")
 *                             .build())
 *                         .sourcePorts(TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeSourcePortArgs.builder()
 *                             .fromPort(0)
 *                             .toPort(65535)
 *                             .build())
 *                         .sources(TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeSourceArgs.builder()
 *                             .addressDefinition("0.0.0.0/0")
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Outbound with encryption configuration
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.kms.Key;
 * import com.pulumi.aws.kms.KeyArgs;
 * import com.pulumi.aws.networkfirewall.TlsInspectionConfiguration;
 * import com.pulumi.aws.networkfirewall.TlsInspectionConfigurationArgs;
 * import com.pulumi.aws.networkfirewall.inputs.TlsInspectionConfigurationEncryptionConfigurationArgs;
 * import com.pulumi.aws.networkfirewall.inputs.TlsInspectionConfigurationTlsInspectionConfigurationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Key("example", KeyArgs.builder()
 *             .description("example")
 *             .deletionWindowInDays(7)
 *             .build());
 * 
 *         var exampleTlsInspectionConfiguration = new TlsInspectionConfiguration("exampleTlsInspectionConfiguration", TlsInspectionConfigurationArgs.builder()
 *             .name("example")
 *             .description("example")
 *             .encryptionConfigurations(TlsInspectionConfigurationEncryptionConfigurationArgs.builder()
 *                 .keyId(example.arn())
 *                 .type("CUSTOMER_KMS")
 *                 .build())
 *             .tlsInspectionConfiguration(TlsInspectionConfigurationTlsInspectionConfigurationArgs.builder()
 *                 .serverCertificateConfigurations(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Combined inbound and outbound
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.networkfirewall.TlsInspectionConfiguration;
 * import com.pulumi.aws.networkfirewall.TlsInspectionConfigurationArgs;
 * import com.pulumi.aws.networkfirewall.inputs.TlsInspectionConfigurationEncryptionConfigurationArgs;
 * import com.pulumi.aws.networkfirewall.inputs.TlsInspectionConfigurationTlsInspectionConfigurationArgs;
 * import com.pulumi.aws.networkfirewall.inputs.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationArgs;
 * import com.pulumi.aws.networkfirewall.inputs.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationCheckCertificateRevocationStatusArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new TlsInspectionConfiguration("example", TlsInspectionConfigurationArgs.builder()
 *             .name("example")
 *             .description("example")
 *             .encryptionConfigurations(TlsInspectionConfigurationEncryptionConfigurationArgs.builder()
 *                 .keyId("AWS_OWNED_KMS_KEY")
 *                 .type("AWS_OWNED_KMS_KEY")
 *                 .build())
 *             .tlsInspectionConfiguration(TlsInspectionConfigurationTlsInspectionConfigurationArgs.builder()
 *                 .serverCertificateConfiguration(TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationArgs.builder()
 *                     .certificateAuthorityArn(example1.arn())
 *                     .checkCertificateRevocationStatus(TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationCheckCertificateRevocationStatusArgs.builder()
 *                         .revokedStatusAction("REJECT")
 *                         .unknownStatusAction("PASS")
 *                         .build())
 *                     .serverCertificates(TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationServerCertificateArgs.builder()
 *                         .resourceArn(example2.arn())
 *                         .build())
 *                     .scopes(TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeArgs.builder()
 *                         .protocols(6)
 *                         .destinationPorts(TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeDestinationPortArgs.builder()
 *                             .fromPort(443)
 *                             .toPort(443)
 *                             .build())
 *                         .destinations(TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeDestinationArgs.builder()
 *                             .addressDefinition("0.0.0.0/0")
 *                             .build())
 *                         .sourcePorts(TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeSourcePortArgs.builder()
 *                             .fromPort(0)
 *                             .toPort(65535)
 *                             .build())
 *                         .sources(TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeSourceArgs.builder()
 *                             .addressDefinition("0.0.0.0/0")
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Using `pulumi import`, import Network Firewall TLS Inspection Configuration using the `arn`. For example:
 * 
 * ```sh
 * $ pulumi import aws:networkfirewall/tlsInspectionConfiguration:TlsInspectionConfiguration example arn:aws:network-firewall::&lt;region&gt;:&lt;account_id&gt;:tls-configuration/example
 * ```
 * 
 */
@ResourceType(type="aws:networkfirewall/tlsInspectionConfiguration:TlsInspectionConfiguration")
public class TlsInspectionConfiguration extends com.pulumi.resources.CustomResource {
    /**
     * ARN of the TLS Inspection Configuration.
     * 
     */
    @Export(name="arn", refs={String.class}, tree="[0]")
    private Output<String> arn;

    /**
     * @return ARN of the TLS Inspection Configuration.
     * 
     */
    public Output<String> arn() {
        return this.arn;
    }
    /**
     * Certificate Manager certificate block. See Certificate Authority below for details.
     * 
     */
    @Export(name="certificateAuthorities", refs={List.class,TlsInspectionConfigurationCertificateAuthority.class}, tree="[0,1]")
    private Output<List<TlsInspectionConfigurationCertificateAuthority>> certificateAuthorities;

    /**
     * @return Certificate Manager certificate block. See Certificate Authority below for details.
     * 
     */
    public Output<List<TlsInspectionConfigurationCertificateAuthority>> certificateAuthorities() {
        return this.certificateAuthorities;
    }
    /**
     * List of certificate blocks describing certificates associated with the TLS inspection configuration. See Certificates below for details.
     * 
     */
    @Export(name="certificates", refs={List.class,TlsInspectionConfigurationCertificate.class}, tree="[0,1]")
    private Output<List<TlsInspectionConfigurationCertificate>> certificates;

    /**
     * @return List of certificate blocks describing certificates associated with the TLS inspection configuration. See Certificates below for details.
     * 
     */
    public Output<List<TlsInspectionConfigurationCertificate>> certificates() {
        return this.certificates;
    }
    /**
     * Description of the TLS inspection configuration.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the TLS inspection configuration.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Encryption configuration block. Detailed below.
     * 
     */
    @Export(name="encryptionConfigurations", refs={List.class,TlsInspectionConfigurationEncryptionConfiguration.class}, tree="[0,1]")
    private Output<List<TlsInspectionConfigurationEncryptionConfiguration>> encryptionConfigurations;

    /**
     * @return Encryption configuration block. Detailed below.
     * 
     */
    public Output<List<TlsInspectionConfigurationEncryptionConfiguration>> encryptionConfigurations() {
        return this.encryptionConfigurations;
    }
    /**
     * Descriptive name of the TLS inspection configuration.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Descriptive name of the TLS inspection configuration.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Number of firewall policies that use this TLS inspection configuration.
     * 
     */
    @Export(name="numberOfAssociations", refs={Integer.class}, tree="[0]")
    private Output<Integer> numberOfAssociations;

    /**
     * @return Number of firewall policies that use this TLS inspection configuration.
     * 
     */
    public Output<Integer> numberOfAssociations() {
        return this.numberOfAssociations;
    }
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Export(name="tagsAll", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll;
    }
    @Export(name="timeouts", refs={TlsInspectionConfigurationTimeouts.class}, tree="[0]")
    private Output</* @Nullable */ TlsInspectionConfigurationTimeouts> timeouts;

    public Output<Optional<TlsInspectionConfigurationTimeouts>> timeouts() {
        return Codegen.optional(this.timeouts);
    }
    /**
     * TLS inspection configuration block. Detailed below.
     * 
     * The following arguments are optional:
     * 
     */
    @Export(name="tlsInspectionConfiguration", refs={TlsInspectionConfigurationTlsInspectionConfiguration.class}, tree="[0]")
    private Output</* @Nullable */ TlsInspectionConfigurationTlsInspectionConfiguration> tlsInspectionConfiguration;

    /**
     * @return TLS inspection configuration block. Detailed below.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<Optional<TlsInspectionConfigurationTlsInspectionConfiguration>> tlsInspectionConfiguration() {
        return Codegen.optional(this.tlsInspectionConfiguration);
    }
    /**
     * A unique identifier for the TLS inspection configuration.
     * 
     */
    @Export(name="tlsInspectionConfigurationId", refs={String.class}, tree="[0]")
    private Output<String> tlsInspectionConfigurationId;

    /**
     * @return A unique identifier for the TLS inspection configuration.
     * 
     */
    public Output<String> tlsInspectionConfigurationId() {
        return this.tlsInspectionConfigurationId;
    }
    /**
     * String token used when updating the rule group.
     * 
     */
    @Export(name="updateToken", refs={String.class}, tree="[0]")
    private Output<String> updateToken;

    /**
     * @return String token used when updating the rule group.
     * 
     */
    public Output<String> updateToken() {
        return this.updateToken;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public TlsInspectionConfiguration(String name) {
        this(name, TlsInspectionConfigurationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public TlsInspectionConfiguration(String name, @Nullable TlsInspectionConfigurationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public TlsInspectionConfiguration(String name, @Nullable TlsInspectionConfigurationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:networkfirewall/tlsInspectionConfiguration:TlsInspectionConfiguration", name, args == null ? TlsInspectionConfigurationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private TlsInspectionConfiguration(String name, Output<String> id, @Nullable TlsInspectionConfigurationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:networkfirewall/tlsInspectionConfiguration:TlsInspectionConfiguration", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static TlsInspectionConfiguration get(String name, Output<String> id, @Nullable TlsInspectionConfigurationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new TlsInspectionConfiguration(name, id, state, options);
    }
}
