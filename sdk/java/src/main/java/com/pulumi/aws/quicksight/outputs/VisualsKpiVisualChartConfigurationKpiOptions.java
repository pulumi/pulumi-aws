// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.FontConfiguration;
import com.pulumi.aws.quicksight.outputs.SelectAllOptions;
import com.pulumi.aws.quicksight.outputs.VisualsKpiVisualChartConfigurationKpiOptionsComparison;
import com.pulumi.aws.quicksight.outputs.VisualsKpiVisualChartConfigurationKpiOptionsSparkline;
import com.pulumi.aws.quicksight.outputs.VisualsKpiVisualChartConfigurationKpiOptionsVisualLayoutOptions;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VisualsKpiVisualChartConfigurationKpiOptions {
    private @Nullable VisualsKpiVisualChartConfigurationKpiOptionsComparison comparison;
    private @Nullable String primaryValueDisplayType;
    private @Nullable FontConfiguration primaryValueFontConfiguration;
    private @Nullable SelectAllOptions progressBar;
    private @Nullable SelectAllOptions secondaryValue;
    private @Nullable FontConfiguration secondaryValueFontConfiguration;
    private @Nullable VisualsKpiVisualChartConfigurationKpiOptionsSparkline sparkline;
    private @Nullable SelectAllOptions trendArrows;
    private @Nullable VisualsKpiVisualChartConfigurationKpiOptionsVisualLayoutOptions visualLayoutOptions;

    private VisualsKpiVisualChartConfigurationKpiOptions() {}
    public Optional<VisualsKpiVisualChartConfigurationKpiOptionsComparison> comparison() {
        return Optional.ofNullable(this.comparison);
    }
    public Optional<String> primaryValueDisplayType() {
        return Optional.ofNullable(this.primaryValueDisplayType);
    }
    public Optional<FontConfiguration> primaryValueFontConfiguration() {
        return Optional.ofNullable(this.primaryValueFontConfiguration);
    }
    public Optional<SelectAllOptions> progressBar() {
        return Optional.ofNullable(this.progressBar);
    }
    public Optional<SelectAllOptions> secondaryValue() {
        return Optional.ofNullable(this.secondaryValue);
    }
    public Optional<FontConfiguration> secondaryValueFontConfiguration() {
        return Optional.ofNullable(this.secondaryValueFontConfiguration);
    }
    public Optional<VisualsKpiVisualChartConfigurationKpiOptionsSparkline> sparkline() {
        return Optional.ofNullable(this.sparkline);
    }
    public Optional<SelectAllOptions> trendArrows() {
        return Optional.ofNullable(this.trendArrows);
    }
    public Optional<VisualsKpiVisualChartConfigurationKpiOptionsVisualLayoutOptions> visualLayoutOptions() {
        return Optional.ofNullable(this.visualLayoutOptions);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VisualsKpiVisualChartConfigurationKpiOptions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable VisualsKpiVisualChartConfigurationKpiOptionsComparison comparison;
        private @Nullable String primaryValueDisplayType;
        private @Nullable FontConfiguration primaryValueFontConfiguration;
        private @Nullable SelectAllOptions progressBar;
        private @Nullable SelectAllOptions secondaryValue;
        private @Nullable FontConfiguration secondaryValueFontConfiguration;
        private @Nullable VisualsKpiVisualChartConfigurationKpiOptionsSparkline sparkline;
        private @Nullable SelectAllOptions trendArrows;
        private @Nullable VisualsKpiVisualChartConfigurationKpiOptionsVisualLayoutOptions visualLayoutOptions;
        public Builder() {}
        public Builder(VisualsKpiVisualChartConfigurationKpiOptions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.comparison = defaults.comparison;
    	      this.primaryValueDisplayType = defaults.primaryValueDisplayType;
    	      this.primaryValueFontConfiguration = defaults.primaryValueFontConfiguration;
    	      this.progressBar = defaults.progressBar;
    	      this.secondaryValue = defaults.secondaryValue;
    	      this.secondaryValueFontConfiguration = defaults.secondaryValueFontConfiguration;
    	      this.sparkline = defaults.sparkline;
    	      this.trendArrows = defaults.trendArrows;
    	      this.visualLayoutOptions = defaults.visualLayoutOptions;
        }

        @CustomType.Setter
        public Builder comparison(@Nullable VisualsKpiVisualChartConfigurationKpiOptionsComparison comparison) {

            this.comparison = comparison;
            return this;
        }
        @CustomType.Setter
        public Builder primaryValueDisplayType(@Nullable String primaryValueDisplayType) {

            this.primaryValueDisplayType = primaryValueDisplayType;
            return this;
        }
        @CustomType.Setter
        public Builder primaryValueFontConfiguration(@Nullable FontConfiguration primaryValueFontConfiguration) {

            this.primaryValueFontConfiguration = primaryValueFontConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder progressBar(@Nullable SelectAllOptions progressBar) {

            this.progressBar = progressBar;
            return this;
        }
        @CustomType.Setter
        public Builder secondaryValue(@Nullable SelectAllOptions secondaryValue) {

            this.secondaryValue = secondaryValue;
            return this;
        }
        @CustomType.Setter
        public Builder secondaryValueFontConfiguration(@Nullable FontConfiguration secondaryValueFontConfiguration) {

            this.secondaryValueFontConfiguration = secondaryValueFontConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder sparkline(@Nullable VisualsKpiVisualChartConfigurationKpiOptionsSparkline sparkline) {

            this.sparkline = sparkline;
            return this;
        }
        @CustomType.Setter
        public Builder trendArrows(@Nullable SelectAllOptions trendArrows) {

            this.trendArrows = trendArrows;
            return this;
        }
        @CustomType.Setter
        public Builder visualLayoutOptions(@Nullable VisualsKpiVisualChartConfigurationKpiOptionsVisualLayoutOptions visualLayoutOptions) {

            this.visualLayoutOptions = visualLayoutOptions;
            return this;
        }
        public VisualsKpiVisualChartConfigurationKpiOptions build() {
            final var _resultValue = new VisualsKpiVisualChartConfigurationKpiOptions();
            _resultValue.comparison = comparison;
            _resultValue.primaryValueDisplayType = primaryValueDisplayType;
            _resultValue.primaryValueFontConfiguration = primaryValueFontConfiguration;
            _resultValue.progressBar = progressBar;
            _resultValue.secondaryValue = secondaryValue;
            _resultValue.secondaryValueFontConfiguration = secondaryValueFontConfiguration;
            _resultValue.sparkline = sparkline;
            _resultValue.trendArrows = trendArrows;
            _resultValue.visualLayoutOptions = visualLayoutOptions;
            return _resultValue;
        }
    }
}
