// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.RefreshScheduleScheduleScheduleFrequencyRefreshOnDayArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RefreshScheduleScheduleScheduleFrequencyArgs extends com.pulumi.resources.ResourceArgs {

    public static final RefreshScheduleScheduleScheduleFrequencyArgs Empty = new RefreshScheduleScheduleScheduleFrequencyArgs();

    /**
     * The interval between scheduled refreshes. Valid values are `MINUTE15`, `MINUTE30`, `HOURLY`, `DAILY`, `WEEKLY` and `MONTHLY`.
     * 
     */
    @Import(name="interval", required=true)
    private Output<String> interval;

    /**
     * @return The interval between scheduled refreshes. Valid values are `MINUTE15`, `MINUTE30`, `HOURLY`, `DAILY`, `WEEKLY` and `MONTHLY`.
     * 
     */
    public Output<String> interval() {
        return this.interval;
    }

    /**
     * The [refresh on entity](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ScheduleRefreshOnEntity.html) configuration for weekly or monthly schedules. See refresh_on_day.
     * 
     */
    @Import(name="refreshOnDay")
    private @Nullable Output<RefreshScheduleScheduleScheduleFrequencyRefreshOnDayArgs> refreshOnDay;

    /**
     * @return The [refresh on entity](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ScheduleRefreshOnEntity.html) configuration for weekly or monthly schedules. See refresh_on_day.
     * 
     */
    public Optional<Output<RefreshScheduleScheduleScheduleFrequencyRefreshOnDayArgs>> refreshOnDay() {
        return Optional.ofNullable(this.refreshOnDay);
    }

    /**
     * The time of day that you want the dataset to refresh. This value is expressed in `HH:MM` format. This field is not required for schedules that refresh hourly.
     * 
     */
    @Import(name="timeOfTheDay")
    private @Nullable Output<String> timeOfTheDay;

    /**
     * @return The time of day that you want the dataset to refresh. This value is expressed in `HH:MM` format. This field is not required for schedules that refresh hourly.
     * 
     */
    public Optional<Output<String>> timeOfTheDay() {
        return Optional.ofNullable(this.timeOfTheDay);
    }

    /**
     * The timezone that you want the refresh schedule to use.
     * 
     */
    @Import(name="timezone")
    private @Nullable Output<String> timezone;

    /**
     * @return The timezone that you want the refresh schedule to use.
     * 
     */
    public Optional<Output<String>> timezone() {
        return Optional.ofNullable(this.timezone);
    }

    private RefreshScheduleScheduleScheduleFrequencyArgs() {}

    private RefreshScheduleScheduleScheduleFrequencyArgs(RefreshScheduleScheduleScheduleFrequencyArgs $) {
        this.interval = $.interval;
        this.refreshOnDay = $.refreshOnDay;
        this.timeOfTheDay = $.timeOfTheDay;
        this.timezone = $.timezone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RefreshScheduleScheduleScheduleFrequencyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RefreshScheduleScheduleScheduleFrequencyArgs $;

        public Builder() {
            $ = new RefreshScheduleScheduleScheduleFrequencyArgs();
        }

        public Builder(RefreshScheduleScheduleScheduleFrequencyArgs defaults) {
            $ = new RefreshScheduleScheduleScheduleFrequencyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param interval The interval between scheduled refreshes. Valid values are `MINUTE15`, `MINUTE30`, `HOURLY`, `DAILY`, `WEEKLY` and `MONTHLY`.
         * 
         * @return builder
         * 
         */
        public Builder interval(Output<String> interval) {
            $.interval = interval;
            return this;
        }

        /**
         * @param interval The interval between scheduled refreshes. Valid values are `MINUTE15`, `MINUTE30`, `HOURLY`, `DAILY`, `WEEKLY` and `MONTHLY`.
         * 
         * @return builder
         * 
         */
        public Builder interval(String interval) {
            return interval(Output.of(interval));
        }

        /**
         * @param refreshOnDay The [refresh on entity](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ScheduleRefreshOnEntity.html) configuration for weekly or monthly schedules. See refresh_on_day.
         * 
         * @return builder
         * 
         */
        public Builder refreshOnDay(@Nullable Output<RefreshScheduleScheduleScheduleFrequencyRefreshOnDayArgs> refreshOnDay) {
            $.refreshOnDay = refreshOnDay;
            return this;
        }

        /**
         * @param refreshOnDay The [refresh on entity](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ScheduleRefreshOnEntity.html) configuration for weekly or monthly schedules. See refresh_on_day.
         * 
         * @return builder
         * 
         */
        public Builder refreshOnDay(RefreshScheduleScheduleScheduleFrequencyRefreshOnDayArgs refreshOnDay) {
            return refreshOnDay(Output.of(refreshOnDay));
        }

        /**
         * @param timeOfTheDay The time of day that you want the dataset to refresh. This value is expressed in `HH:MM` format. This field is not required for schedules that refresh hourly.
         * 
         * @return builder
         * 
         */
        public Builder timeOfTheDay(@Nullable Output<String> timeOfTheDay) {
            $.timeOfTheDay = timeOfTheDay;
            return this;
        }

        /**
         * @param timeOfTheDay The time of day that you want the dataset to refresh. This value is expressed in `HH:MM` format. This field is not required for schedules that refresh hourly.
         * 
         * @return builder
         * 
         */
        public Builder timeOfTheDay(String timeOfTheDay) {
            return timeOfTheDay(Output.of(timeOfTheDay));
        }

        /**
         * @param timezone The timezone that you want the refresh schedule to use.
         * 
         * @return builder
         * 
         */
        public Builder timezone(@Nullable Output<String> timezone) {
            $.timezone = timezone;
            return this;
        }

        /**
         * @param timezone The timezone that you want the refresh schedule to use.
         * 
         * @return builder
         * 
         */
        public Builder timezone(String timezone) {
            return timezone(Output.of(timezone));
        }

        public RefreshScheduleScheduleScheduleFrequencyArgs build() {
            if ($.interval == null) {
                throw new MissingRequiredPropertyException("RefreshScheduleScheduleScheduleFrequencyArgs", "interval");
            }
            return $;
        }
    }

}
