// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.VisualsBarChartVisualArgs;
import com.pulumi.aws.quicksight.inputs.VisualsBoxPlotVisualArgs;
import com.pulumi.aws.quicksight.inputs.VisualsComboChartVisualArgs;
import com.pulumi.aws.quicksight.inputs.VisualsCustomContentVisualArgs;
import com.pulumi.aws.quicksight.inputs.VisualsEmptyVisualArgs;
import com.pulumi.aws.quicksight.inputs.VisualsFilledMapVisualArgs;
import com.pulumi.aws.quicksight.inputs.VisualsFunnelChartVisualArgs;
import com.pulumi.aws.quicksight.inputs.VisualsGaugeChartVisualArgs;
import com.pulumi.aws.quicksight.inputs.VisualsGeospatialMapVisualArgs;
import com.pulumi.aws.quicksight.inputs.VisualsHeatMapVisualArgs;
import com.pulumi.aws.quicksight.inputs.VisualsHistogramVisualArgs;
import com.pulumi.aws.quicksight.inputs.VisualsInsightVisualArgs;
import com.pulumi.aws.quicksight.inputs.VisualsKpiVisualArgs;
import com.pulumi.aws.quicksight.inputs.VisualsLineChartVisualArgs;
import com.pulumi.aws.quicksight.inputs.VisualsPieChartVisualArgs;
import com.pulumi.aws.quicksight.inputs.VisualsPivotTableVisualArgs;
import com.pulumi.aws.quicksight.inputs.VisualsRadarChartVisualArgs;
import com.pulumi.aws.quicksight.inputs.VisualsSankeyDiagramVisualArgs;
import com.pulumi.aws.quicksight.inputs.VisualsScatterPlotVisualArgs;
import com.pulumi.aws.quicksight.inputs.VisualsTableVisualArgs;
import com.pulumi.aws.quicksight.inputs.VisualsTreeMapVisualArgs;
import com.pulumi.aws.quicksight.inputs.VisualsWaterfallVisualArgs;
import com.pulumi.aws.quicksight.inputs.VisualsWordCloudVisualArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VisualsArgs extends com.pulumi.resources.ResourceArgs {

    public static final VisualsArgs Empty = new VisualsArgs();

    @Import(name="barChartVisual")
    private @Nullable Output<VisualsBarChartVisualArgs> barChartVisual;

    public Optional<Output<VisualsBarChartVisualArgs>> barChartVisual() {
        return Optional.ofNullable(this.barChartVisual);
    }

    @Import(name="boxPlotVisual")
    private @Nullable Output<VisualsBoxPlotVisualArgs> boxPlotVisual;

    public Optional<Output<VisualsBoxPlotVisualArgs>> boxPlotVisual() {
        return Optional.ofNullable(this.boxPlotVisual);
    }

    @Import(name="comboChartVisual")
    private @Nullable Output<VisualsComboChartVisualArgs> comboChartVisual;

    public Optional<Output<VisualsComboChartVisualArgs>> comboChartVisual() {
        return Optional.ofNullable(this.comboChartVisual);
    }

    @Import(name="customContentVisual")
    private @Nullable Output<VisualsCustomContentVisualArgs> customContentVisual;

    public Optional<Output<VisualsCustomContentVisualArgs>> customContentVisual() {
        return Optional.ofNullable(this.customContentVisual);
    }

    @Import(name="emptyVisual")
    private @Nullable Output<VisualsEmptyVisualArgs> emptyVisual;

    public Optional<Output<VisualsEmptyVisualArgs>> emptyVisual() {
        return Optional.ofNullable(this.emptyVisual);
    }

    @Import(name="filledMapVisual")
    private @Nullable Output<VisualsFilledMapVisualArgs> filledMapVisual;

    public Optional<Output<VisualsFilledMapVisualArgs>> filledMapVisual() {
        return Optional.ofNullable(this.filledMapVisual);
    }

    @Import(name="funnelChartVisual")
    private @Nullable Output<VisualsFunnelChartVisualArgs> funnelChartVisual;

    public Optional<Output<VisualsFunnelChartVisualArgs>> funnelChartVisual() {
        return Optional.ofNullable(this.funnelChartVisual);
    }

    @Import(name="gaugeChartVisual")
    private @Nullable Output<VisualsGaugeChartVisualArgs> gaugeChartVisual;

    public Optional<Output<VisualsGaugeChartVisualArgs>> gaugeChartVisual() {
        return Optional.ofNullable(this.gaugeChartVisual);
    }

    @Import(name="geospatialMapVisual")
    private @Nullable Output<VisualsGeospatialMapVisualArgs> geospatialMapVisual;

    public Optional<Output<VisualsGeospatialMapVisualArgs>> geospatialMapVisual() {
        return Optional.ofNullable(this.geospatialMapVisual);
    }

    @Import(name="heatMapVisual")
    private @Nullable Output<VisualsHeatMapVisualArgs> heatMapVisual;

    public Optional<Output<VisualsHeatMapVisualArgs>> heatMapVisual() {
        return Optional.ofNullable(this.heatMapVisual);
    }

    @Import(name="histogramVisual")
    private @Nullable Output<VisualsHistogramVisualArgs> histogramVisual;

    public Optional<Output<VisualsHistogramVisualArgs>> histogramVisual() {
        return Optional.ofNullable(this.histogramVisual);
    }

    @Import(name="insightVisual")
    private @Nullable Output<VisualsInsightVisualArgs> insightVisual;

    public Optional<Output<VisualsInsightVisualArgs>> insightVisual() {
        return Optional.ofNullable(this.insightVisual);
    }

    @Import(name="kpiVisual")
    private @Nullable Output<VisualsKpiVisualArgs> kpiVisual;

    public Optional<Output<VisualsKpiVisualArgs>> kpiVisual() {
        return Optional.ofNullable(this.kpiVisual);
    }

    @Import(name="lineChartVisual")
    private @Nullable Output<VisualsLineChartVisualArgs> lineChartVisual;

    public Optional<Output<VisualsLineChartVisualArgs>> lineChartVisual() {
        return Optional.ofNullable(this.lineChartVisual);
    }

    @Import(name="pieChartVisual")
    private @Nullable Output<VisualsPieChartVisualArgs> pieChartVisual;

    public Optional<Output<VisualsPieChartVisualArgs>> pieChartVisual() {
        return Optional.ofNullable(this.pieChartVisual);
    }

    @Import(name="pivotTableVisual")
    private @Nullable Output<VisualsPivotTableVisualArgs> pivotTableVisual;

    public Optional<Output<VisualsPivotTableVisualArgs>> pivotTableVisual() {
        return Optional.ofNullable(this.pivotTableVisual);
    }

    @Import(name="radarChartVisual")
    private @Nullable Output<VisualsRadarChartVisualArgs> radarChartVisual;

    public Optional<Output<VisualsRadarChartVisualArgs>> radarChartVisual() {
        return Optional.ofNullable(this.radarChartVisual);
    }

    @Import(name="sankeyDiagramVisual")
    private @Nullable Output<VisualsSankeyDiagramVisualArgs> sankeyDiagramVisual;

    public Optional<Output<VisualsSankeyDiagramVisualArgs>> sankeyDiagramVisual() {
        return Optional.ofNullable(this.sankeyDiagramVisual);
    }

    @Import(name="scatterPlotVisual")
    private @Nullable Output<VisualsScatterPlotVisualArgs> scatterPlotVisual;

    public Optional<Output<VisualsScatterPlotVisualArgs>> scatterPlotVisual() {
        return Optional.ofNullable(this.scatterPlotVisual);
    }

    @Import(name="tableVisual")
    private @Nullable Output<VisualsTableVisualArgs> tableVisual;

    public Optional<Output<VisualsTableVisualArgs>> tableVisual() {
        return Optional.ofNullable(this.tableVisual);
    }

    @Import(name="treeMapVisual")
    private @Nullable Output<VisualsTreeMapVisualArgs> treeMapVisual;

    public Optional<Output<VisualsTreeMapVisualArgs>> treeMapVisual() {
        return Optional.ofNullable(this.treeMapVisual);
    }

    @Import(name="waterfallVisual")
    private @Nullable Output<VisualsWaterfallVisualArgs> waterfallVisual;

    public Optional<Output<VisualsWaterfallVisualArgs>> waterfallVisual() {
        return Optional.ofNullable(this.waterfallVisual);
    }

    @Import(name="wordCloudVisual")
    private @Nullable Output<VisualsWordCloudVisualArgs> wordCloudVisual;

    public Optional<Output<VisualsWordCloudVisualArgs>> wordCloudVisual() {
        return Optional.ofNullable(this.wordCloudVisual);
    }

    private VisualsArgs() {}

    private VisualsArgs(VisualsArgs $) {
        this.barChartVisual = $.barChartVisual;
        this.boxPlotVisual = $.boxPlotVisual;
        this.comboChartVisual = $.comboChartVisual;
        this.customContentVisual = $.customContentVisual;
        this.emptyVisual = $.emptyVisual;
        this.filledMapVisual = $.filledMapVisual;
        this.funnelChartVisual = $.funnelChartVisual;
        this.gaugeChartVisual = $.gaugeChartVisual;
        this.geospatialMapVisual = $.geospatialMapVisual;
        this.heatMapVisual = $.heatMapVisual;
        this.histogramVisual = $.histogramVisual;
        this.insightVisual = $.insightVisual;
        this.kpiVisual = $.kpiVisual;
        this.lineChartVisual = $.lineChartVisual;
        this.pieChartVisual = $.pieChartVisual;
        this.pivotTableVisual = $.pivotTableVisual;
        this.radarChartVisual = $.radarChartVisual;
        this.sankeyDiagramVisual = $.sankeyDiagramVisual;
        this.scatterPlotVisual = $.scatterPlotVisual;
        this.tableVisual = $.tableVisual;
        this.treeMapVisual = $.treeMapVisual;
        this.waterfallVisual = $.waterfallVisual;
        this.wordCloudVisual = $.wordCloudVisual;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VisualsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VisualsArgs $;

        public Builder() {
            $ = new VisualsArgs();
        }

        public Builder(VisualsArgs defaults) {
            $ = new VisualsArgs(Objects.requireNonNull(defaults));
        }

        public Builder barChartVisual(@Nullable Output<VisualsBarChartVisualArgs> barChartVisual) {
            $.barChartVisual = barChartVisual;
            return this;
        }

        public Builder barChartVisual(VisualsBarChartVisualArgs barChartVisual) {
            return barChartVisual(Output.of(barChartVisual));
        }

        public Builder boxPlotVisual(@Nullable Output<VisualsBoxPlotVisualArgs> boxPlotVisual) {
            $.boxPlotVisual = boxPlotVisual;
            return this;
        }

        public Builder boxPlotVisual(VisualsBoxPlotVisualArgs boxPlotVisual) {
            return boxPlotVisual(Output.of(boxPlotVisual));
        }

        public Builder comboChartVisual(@Nullable Output<VisualsComboChartVisualArgs> comboChartVisual) {
            $.comboChartVisual = comboChartVisual;
            return this;
        }

        public Builder comboChartVisual(VisualsComboChartVisualArgs comboChartVisual) {
            return comboChartVisual(Output.of(comboChartVisual));
        }

        public Builder customContentVisual(@Nullable Output<VisualsCustomContentVisualArgs> customContentVisual) {
            $.customContentVisual = customContentVisual;
            return this;
        }

        public Builder customContentVisual(VisualsCustomContentVisualArgs customContentVisual) {
            return customContentVisual(Output.of(customContentVisual));
        }

        public Builder emptyVisual(@Nullable Output<VisualsEmptyVisualArgs> emptyVisual) {
            $.emptyVisual = emptyVisual;
            return this;
        }

        public Builder emptyVisual(VisualsEmptyVisualArgs emptyVisual) {
            return emptyVisual(Output.of(emptyVisual));
        }

        public Builder filledMapVisual(@Nullable Output<VisualsFilledMapVisualArgs> filledMapVisual) {
            $.filledMapVisual = filledMapVisual;
            return this;
        }

        public Builder filledMapVisual(VisualsFilledMapVisualArgs filledMapVisual) {
            return filledMapVisual(Output.of(filledMapVisual));
        }

        public Builder funnelChartVisual(@Nullable Output<VisualsFunnelChartVisualArgs> funnelChartVisual) {
            $.funnelChartVisual = funnelChartVisual;
            return this;
        }

        public Builder funnelChartVisual(VisualsFunnelChartVisualArgs funnelChartVisual) {
            return funnelChartVisual(Output.of(funnelChartVisual));
        }

        public Builder gaugeChartVisual(@Nullable Output<VisualsGaugeChartVisualArgs> gaugeChartVisual) {
            $.gaugeChartVisual = gaugeChartVisual;
            return this;
        }

        public Builder gaugeChartVisual(VisualsGaugeChartVisualArgs gaugeChartVisual) {
            return gaugeChartVisual(Output.of(gaugeChartVisual));
        }

        public Builder geospatialMapVisual(@Nullable Output<VisualsGeospatialMapVisualArgs> geospatialMapVisual) {
            $.geospatialMapVisual = geospatialMapVisual;
            return this;
        }

        public Builder geospatialMapVisual(VisualsGeospatialMapVisualArgs geospatialMapVisual) {
            return geospatialMapVisual(Output.of(geospatialMapVisual));
        }

        public Builder heatMapVisual(@Nullable Output<VisualsHeatMapVisualArgs> heatMapVisual) {
            $.heatMapVisual = heatMapVisual;
            return this;
        }

        public Builder heatMapVisual(VisualsHeatMapVisualArgs heatMapVisual) {
            return heatMapVisual(Output.of(heatMapVisual));
        }

        public Builder histogramVisual(@Nullable Output<VisualsHistogramVisualArgs> histogramVisual) {
            $.histogramVisual = histogramVisual;
            return this;
        }

        public Builder histogramVisual(VisualsHistogramVisualArgs histogramVisual) {
            return histogramVisual(Output.of(histogramVisual));
        }

        public Builder insightVisual(@Nullable Output<VisualsInsightVisualArgs> insightVisual) {
            $.insightVisual = insightVisual;
            return this;
        }

        public Builder insightVisual(VisualsInsightVisualArgs insightVisual) {
            return insightVisual(Output.of(insightVisual));
        }

        public Builder kpiVisual(@Nullable Output<VisualsKpiVisualArgs> kpiVisual) {
            $.kpiVisual = kpiVisual;
            return this;
        }

        public Builder kpiVisual(VisualsKpiVisualArgs kpiVisual) {
            return kpiVisual(Output.of(kpiVisual));
        }

        public Builder lineChartVisual(@Nullable Output<VisualsLineChartVisualArgs> lineChartVisual) {
            $.lineChartVisual = lineChartVisual;
            return this;
        }

        public Builder lineChartVisual(VisualsLineChartVisualArgs lineChartVisual) {
            return lineChartVisual(Output.of(lineChartVisual));
        }

        public Builder pieChartVisual(@Nullable Output<VisualsPieChartVisualArgs> pieChartVisual) {
            $.pieChartVisual = pieChartVisual;
            return this;
        }

        public Builder pieChartVisual(VisualsPieChartVisualArgs pieChartVisual) {
            return pieChartVisual(Output.of(pieChartVisual));
        }

        public Builder pivotTableVisual(@Nullable Output<VisualsPivotTableVisualArgs> pivotTableVisual) {
            $.pivotTableVisual = pivotTableVisual;
            return this;
        }

        public Builder pivotTableVisual(VisualsPivotTableVisualArgs pivotTableVisual) {
            return pivotTableVisual(Output.of(pivotTableVisual));
        }

        public Builder radarChartVisual(@Nullable Output<VisualsRadarChartVisualArgs> radarChartVisual) {
            $.radarChartVisual = radarChartVisual;
            return this;
        }

        public Builder radarChartVisual(VisualsRadarChartVisualArgs radarChartVisual) {
            return radarChartVisual(Output.of(radarChartVisual));
        }

        public Builder sankeyDiagramVisual(@Nullable Output<VisualsSankeyDiagramVisualArgs> sankeyDiagramVisual) {
            $.sankeyDiagramVisual = sankeyDiagramVisual;
            return this;
        }

        public Builder sankeyDiagramVisual(VisualsSankeyDiagramVisualArgs sankeyDiagramVisual) {
            return sankeyDiagramVisual(Output.of(sankeyDiagramVisual));
        }

        public Builder scatterPlotVisual(@Nullable Output<VisualsScatterPlotVisualArgs> scatterPlotVisual) {
            $.scatterPlotVisual = scatterPlotVisual;
            return this;
        }

        public Builder scatterPlotVisual(VisualsScatterPlotVisualArgs scatterPlotVisual) {
            return scatterPlotVisual(Output.of(scatterPlotVisual));
        }

        public Builder tableVisual(@Nullable Output<VisualsTableVisualArgs> tableVisual) {
            $.tableVisual = tableVisual;
            return this;
        }

        public Builder tableVisual(VisualsTableVisualArgs tableVisual) {
            return tableVisual(Output.of(tableVisual));
        }

        public Builder treeMapVisual(@Nullable Output<VisualsTreeMapVisualArgs> treeMapVisual) {
            $.treeMapVisual = treeMapVisual;
            return this;
        }

        public Builder treeMapVisual(VisualsTreeMapVisualArgs treeMapVisual) {
            return treeMapVisual(Output.of(treeMapVisual));
        }

        public Builder waterfallVisual(@Nullable Output<VisualsWaterfallVisualArgs> waterfallVisual) {
            $.waterfallVisual = waterfallVisual;
            return this;
        }

        public Builder waterfallVisual(VisualsWaterfallVisualArgs waterfallVisual) {
            return waterfallVisual(Output.of(waterfallVisual));
        }

        public Builder wordCloudVisual(@Nullable Output<VisualsWordCloudVisualArgs> wordCloudVisual) {
            $.wordCloudVisual = wordCloudVisual;
            return this;
        }

        public Builder wordCloudVisual(VisualsWordCloudVisualArgs wordCloudVisual) {
            return wordCloudVisual(Output.of(wordCloudVisual));
        }

        public VisualsArgs build() {
            return $;
        }
    }

}
