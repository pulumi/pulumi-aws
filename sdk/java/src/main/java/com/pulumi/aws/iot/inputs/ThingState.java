// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iot.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ThingState extends com.pulumi.resources.ResourceArgs {

    public static final ThingState Empty = new ThingState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="attributes")
    private @Nullable Output<Map<String,String>> attributes;

    public Optional<Output<Map<String,String>>> attributes() {
        return Optional.ofNullable(this.attributes);
    }

    @Import(name="defaultClientId")
    private @Nullable Output<String> defaultClientId;

    public Optional<Output<String>> defaultClientId() {
        return Optional.ofNullable(this.defaultClientId);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="thingTypeName")
    private @Nullable Output<String> thingTypeName;

    public Optional<Output<String>> thingTypeName() {
        return Optional.ofNullable(this.thingTypeName);
    }

    @Import(name="version")
    private @Nullable Output<Integer> version;

    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    private ThingState() {}

    private ThingState(ThingState $) {
        this.arn = $.arn;
        this.attributes = $.attributes;
        this.defaultClientId = $.defaultClientId;
        this.name = $.name;
        this.thingTypeName = $.thingTypeName;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ThingState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ThingState $;

        public Builder() {
            $ = new ThingState();
        }

        public Builder(ThingState defaults) {
            $ = new ThingState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder attributes(@Nullable Output<Map<String,String>> attributes) {
            $.attributes = attributes;
            return this;
        }

        public Builder attributes(Map<String,String> attributes) {
            return attributes(Output.of(attributes));
        }

        public Builder defaultClientId(@Nullable Output<String> defaultClientId) {
            $.defaultClientId = defaultClientId;
            return this;
        }

        public Builder defaultClientId(String defaultClientId) {
            return defaultClientId(Output.of(defaultClientId));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder thingTypeName(@Nullable Output<String> thingTypeName) {
            $.thingTypeName = thingTypeName;
            return this;
        }

        public Builder thingTypeName(String thingTypeName) {
            return thingTypeName(Output.of(thingTypeName));
        }

        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public ThingState build() {
            return $;
        }
    }

}
