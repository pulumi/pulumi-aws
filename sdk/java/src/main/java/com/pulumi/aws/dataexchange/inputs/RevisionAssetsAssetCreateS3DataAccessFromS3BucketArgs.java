// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dataexchange.inputs;

import com.pulumi.aws.dataexchange.inputs.RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RevisionAssetsAssetCreateS3DataAccessFromS3BucketArgs extends com.pulumi.resources.ResourceArgs {

    public static final RevisionAssetsAssetCreateS3DataAccessFromS3BucketArgs Empty = new RevisionAssetsAssetCreateS3DataAccessFromS3BucketArgs();

    @Import(name="accessPointAlias")
    private @Nullable Output<String> accessPointAlias;

    public Optional<Output<String>> accessPointAlias() {
        return Optional.ofNullable(this.accessPointAlias);
    }

    @Import(name="accessPointArn")
    private @Nullable Output<String> accessPointArn;

    public Optional<Output<String>> accessPointArn() {
        return Optional.ofNullable(this.accessPointArn);
    }

    /**
     * A block specifying the source bucket for the asset. This block supports the following:
     * 
     */
    @Import(name="assetSource")
    private @Nullable Output<RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceArgs> assetSource;

    /**
     * @return A block specifying the source bucket for the asset. This block supports the following:
     * 
     */
    public Optional<Output<RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceArgs>> assetSource() {
        return Optional.ofNullable(this.assetSource);
    }

    private RevisionAssetsAssetCreateS3DataAccessFromS3BucketArgs() {}

    private RevisionAssetsAssetCreateS3DataAccessFromS3BucketArgs(RevisionAssetsAssetCreateS3DataAccessFromS3BucketArgs $) {
        this.accessPointAlias = $.accessPointAlias;
        this.accessPointArn = $.accessPointArn;
        this.assetSource = $.assetSource;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RevisionAssetsAssetCreateS3DataAccessFromS3BucketArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RevisionAssetsAssetCreateS3DataAccessFromS3BucketArgs $;

        public Builder() {
            $ = new RevisionAssetsAssetCreateS3DataAccessFromS3BucketArgs();
        }

        public Builder(RevisionAssetsAssetCreateS3DataAccessFromS3BucketArgs defaults) {
            $ = new RevisionAssetsAssetCreateS3DataAccessFromS3BucketArgs(Objects.requireNonNull(defaults));
        }

        public Builder accessPointAlias(@Nullable Output<String> accessPointAlias) {
            $.accessPointAlias = accessPointAlias;
            return this;
        }

        public Builder accessPointAlias(String accessPointAlias) {
            return accessPointAlias(Output.of(accessPointAlias));
        }

        public Builder accessPointArn(@Nullable Output<String> accessPointArn) {
            $.accessPointArn = accessPointArn;
            return this;
        }

        public Builder accessPointArn(String accessPointArn) {
            return accessPointArn(Output.of(accessPointArn));
        }

        /**
         * @param assetSource A block specifying the source bucket for the asset. This block supports the following:
         * 
         * @return builder
         * 
         */
        public Builder assetSource(@Nullable Output<RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceArgs> assetSource) {
            $.assetSource = assetSource;
            return this;
        }

        /**
         * @param assetSource A block specifying the source bucket for the asset. This block supports the following:
         * 
         * @return builder
         * 
         */
        public Builder assetSource(RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceArgs assetSource) {
            return assetSource(Output.of(assetSource));
        }

        public RevisionAssetsAssetCreateS3DataAccessFromS3BucketArgs build() {
            return $;
        }
    }

}
