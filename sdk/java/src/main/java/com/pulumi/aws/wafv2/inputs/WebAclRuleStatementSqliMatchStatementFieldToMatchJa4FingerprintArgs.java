// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.wafv2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class WebAclRuleStatementSqliMatchStatementFieldToMatchJa4FingerprintArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebAclRuleStatementSqliMatchStatementFieldToMatchJa4FingerprintArgs Empty = new WebAclRuleStatementSqliMatchStatementFieldToMatchJa4FingerprintArgs();

    /**
     * Match status to assign to the web request if there is insufficient TSL Client Hello information to compute the JA4 fingerprint. Valid values include: `MATCH` or `NO_MATCH`.
     * 
     */
    @Import(name="fallbackBehavior", required=true)
    private Output<String> fallbackBehavior;

    /**
     * @return Match status to assign to the web request if there is insufficient TSL Client Hello information to compute the JA4 fingerprint. Valid values include: `MATCH` or `NO_MATCH`.
     * 
     */
    public Output<String> fallbackBehavior() {
        return this.fallbackBehavior;
    }

    private WebAclRuleStatementSqliMatchStatementFieldToMatchJa4FingerprintArgs() {}

    private WebAclRuleStatementSqliMatchStatementFieldToMatchJa4FingerprintArgs(WebAclRuleStatementSqliMatchStatementFieldToMatchJa4FingerprintArgs $) {
        this.fallbackBehavior = $.fallbackBehavior;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebAclRuleStatementSqliMatchStatementFieldToMatchJa4FingerprintArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebAclRuleStatementSqliMatchStatementFieldToMatchJa4FingerprintArgs $;

        public Builder() {
            $ = new WebAclRuleStatementSqliMatchStatementFieldToMatchJa4FingerprintArgs();
        }

        public Builder(WebAclRuleStatementSqliMatchStatementFieldToMatchJa4FingerprintArgs defaults) {
            $ = new WebAclRuleStatementSqliMatchStatementFieldToMatchJa4FingerprintArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param fallbackBehavior Match status to assign to the web request if there is insufficient TSL Client Hello information to compute the JA4 fingerprint. Valid values include: `MATCH` or `NO_MATCH`.
         * 
         * @return builder
         * 
         */
        public Builder fallbackBehavior(Output<String> fallbackBehavior) {
            $.fallbackBehavior = fallbackBehavior;
            return this;
        }

        /**
         * @param fallbackBehavior Match status to assign to the web request if there is insufficient TSL Client Hello information to compute the JA4 fingerprint. Valid values include: `MATCH` or `NO_MATCH`.
         * 
         * @return builder
         * 
         */
        public Builder fallbackBehavior(String fallbackBehavior) {
            return fallbackBehavior(Output.of(fallbackBehavior));
        }

        public WebAclRuleStatementSqliMatchStatementFieldToMatchJa4FingerprintArgs build() {
            if ($.fallbackBehavior == null) {
                throw new MissingRequiredPropertyException("WebAclRuleStatementSqliMatchStatementFieldToMatchJa4FingerprintArgs", "fallbackBehavior");
            }
            return $;
        }
    }

}
