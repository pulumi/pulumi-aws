// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.guardduty.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class OrganizationConfigurationFeatureAdditionalConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final OrganizationConfigurationFeatureAdditionalConfigurationArgs Empty = new OrganizationConfigurationFeatureAdditionalConfigurationArgs();

    /**
     * The status of the additional configuration that will be configured for the organization. Valid values: `NEW`, `ALL`, `NONE`.
     * 
     */
    @Import(name="autoEnable", required=true)
    private Output<String> autoEnable;

    /**
     * @return The status of the additional configuration that will be configured for the organization. Valid values: `NEW`, `ALL`, `NONE`.
     * 
     */
    public Output<String> autoEnable() {
        return this.autoEnable;
    }

    /**
     * The name of the additional configuration that will be configured for the organization. Valid values: `EKS_ADDON_MANAGEMENT`.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the additional configuration that will be configured for the organization. Valid values: `EKS_ADDON_MANAGEMENT`.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private OrganizationConfigurationFeatureAdditionalConfigurationArgs() {}

    private OrganizationConfigurationFeatureAdditionalConfigurationArgs(OrganizationConfigurationFeatureAdditionalConfigurationArgs $) {
        this.autoEnable = $.autoEnable;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrganizationConfigurationFeatureAdditionalConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrganizationConfigurationFeatureAdditionalConfigurationArgs $;

        public Builder() {
            $ = new OrganizationConfigurationFeatureAdditionalConfigurationArgs();
        }

        public Builder(OrganizationConfigurationFeatureAdditionalConfigurationArgs defaults) {
            $ = new OrganizationConfigurationFeatureAdditionalConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoEnable The status of the additional configuration that will be configured for the organization. Valid values: `NEW`, `ALL`, `NONE`.
         * 
         * @return builder
         * 
         */
        public Builder autoEnable(Output<String> autoEnable) {
            $.autoEnable = autoEnable;
            return this;
        }

        /**
         * @param autoEnable The status of the additional configuration that will be configured for the organization. Valid values: `NEW`, `ALL`, `NONE`.
         * 
         * @return builder
         * 
         */
        public Builder autoEnable(String autoEnable) {
            return autoEnable(Output.of(autoEnable));
        }

        /**
         * @param name The name of the additional configuration that will be configured for the organization. Valid values: `EKS_ADDON_MANAGEMENT`.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the additional configuration that will be configured for the organization. Valid values: `EKS_ADDON_MANAGEMENT`.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public OrganizationConfigurationFeatureAdditionalConfigurationArgs build() {
            if ($.autoEnable == null) {
                throw new MissingRequiredPropertyException("OrganizationConfigurationFeatureAdditionalConfigurationArgs", "autoEnable");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("OrganizationConfigurationFeatureAdditionalConfigurationArgs", "name");
            }
            return $;
        }
    }

}
