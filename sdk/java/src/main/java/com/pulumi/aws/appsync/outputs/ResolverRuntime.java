// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appsync.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ResolverRuntime {
    /**
     * @return The name of the runtime to use. Currently, the only allowed value is `APPSYNC_JS`.
     * 
     */
    private String name;
    /**
     * @return The version of the runtime to use. Currently, the only allowed version is `1.0.0`.
     * 
     */
    private String runtimeVersion;

    private ResolverRuntime() {}
    /**
     * @return The name of the runtime to use. Currently, the only allowed value is `APPSYNC_JS`.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The version of the runtime to use. Currently, the only allowed version is `1.0.0`.
     * 
     */
    public String runtimeVersion() {
        return this.runtimeVersion;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResolverRuntime defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String name;
        private String runtimeVersion;
        public Builder() {}
        public Builder(ResolverRuntime defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.runtimeVersion = defaults.runtimeVersion;
        }

        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("ResolverRuntime", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder runtimeVersion(String runtimeVersion) {
            if (runtimeVersion == null) {
              throw new MissingRequiredPropertyException("ResolverRuntime", "runtimeVersion");
            }
            this.runtimeVersion = runtimeVersion;
            return this;
        }
        public ResolverRuntime build() {
            final var _resultValue = new ResolverRuntime();
            _resultValue.name = name;
            _resultValue.runtimeVersion = runtimeVersion;
            return _resultValue;
        }
    }
}
