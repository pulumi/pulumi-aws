// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.fis.inputs;

import com.pulumi.aws.fis.inputs.ExperimentTemplateActionParameterArgs;
import com.pulumi.aws.fis.inputs.ExperimentTemplateActionTargetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExperimentTemplateActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExperimentTemplateActionArgs Empty = new ExperimentTemplateActionArgs();

    @Import(name="actionId", required=true)
    private Output<String> actionId;

    public Output<String> actionId() {
        return this.actionId;
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="parameters")
    private @Nullable Output<List<ExperimentTemplateActionParameterArgs>> parameters;

    public Optional<Output<List<ExperimentTemplateActionParameterArgs>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    @Import(name="startAfters")
    private @Nullable Output<List<String>> startAfters;

    public Optional<Output<List<String>>> startAfters() {
        return Optional.ofNullable(this.startAfters);
    }

    @Import(name="target")
    private @Nullable Output<ExperimentTemplateActionTargetArgs> target;

    public Optional<Output<ExperimentTemplateActionTargetArgs>> target() {
        return Optional.ofNullable(this.target);
    }

    private ExperimentTemplateActionArgs() {}

    private ExperimentTemplateActionArgs(ExperimentTemplateActionArgs $) {
        this.actionId = $.actionId;
        this.description = $.description;
        this.name = $.name;
        this.parameters = $.parameters;
        this.startAfters = $.startAfters;
        this.target = $.target;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExperimentTemplateActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExperimentTemplateActionArgs $;

        public Builder() {
            $ = new ExperimentTemplateActionArgs();
        }

        public Builder(ExperimentTemplateActionArgs defaults) {
            $ = new ExperimentTemplateActionArgs(Objects.requireNonNull(defaults));
        }

        public Builder actionId(Output<String> actionId) {
            $.actionId = actionId;
            return this;
        }

        public Builder actionId(String actionId) {
            return actionId(Output.of(actionId));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder parameters(@Nullable Output<List<ExperimentTemplateActionParameterArgs>> parameters) {
            $.parameters = parameters;
            return this;
        }

        public Builder parameters(List<ExperimentTemplateActionParameterArgs> parameters) {
            return parameters(Output.of(parameters));
        }

        public Builder parameters(ExperimentTemplateActionParameterArgs... parameters) {
            return parameters(List.of(parameters));
        }

        public Builder startAfters(@Nullable Output<List<String>> startAfters) {
            $.startAfters = startAfters;
            return this;
        }

        public Builder startAfters(List<String> startAfters) {
            return startAfters(Output.of(startAfters));
        }

        public Builder startAfters(String... startAfters) {
            return startAfters(List.of(startAfters));
        }

        public Builder target(@Nullable Output<ExperimentTemplateActionTargetArgs> target) {
            $.target = target;
            return this;
        }

        public Builder target(ExperimentTemplateActionTargetArgs target) {
            return target(Output.of(target));
        }

        public ExperimentTemplateActionArgs build() {
            $.actionId = Objects.requireNonNull($.actionId, "expected parameter 'actionId' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
