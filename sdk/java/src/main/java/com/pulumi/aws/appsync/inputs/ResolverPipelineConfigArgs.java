// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appsync.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResolverPipelineConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResolverPipelineConfigArgs Empty = new ResolverPipelineConfigArgs();

    /**
     * List of Function ID.
     * 
     */
    @Import(name="functions")
    private @Nullable Output<List<String>> functions;

    /**
     * @return List of Function ID.
     * 
     */
    public Optional<Output<List<String>>> functions() {
        return Optional.ofNullable(this.functions);
    }

    private ResolverPipelineConfigArgs() {}

    private ResolverPipelineConfigArgs(ResolverPipelineConfigArgs $) {
        this.functions = $.functions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResolverPipelineConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResolverPipelineConfigArgs $;

        public Builder() {
            $ = new ResolverPipelineConfigArgs();
        }

        public Builder(ResolverPipelineConfigArgs defaults) {
            $ = new ResolverPipelineConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param functions List of Function ID.
         * 
         * @return builder
         * 
         */
        public Builder functions(@Nullable Output<List<String>> functions) {
            $.functions = functions;
            return this;
        }

        /**
         * @param functions List of Function ID.
         * 
         * @return builder
         * 
         */
        public Builder functions(List<String> functions) {
            return functions(Output.of(functions));
        }

        /**
         * @param functions List of Function ID.
         * 
         * @return builder
         * 
         */
        public Builder functions(String... functions) {
            return functions(List.of(functions));
        }

        public ResolverPipelineConfigArgs build() {
            return $;
        }
    }

}
