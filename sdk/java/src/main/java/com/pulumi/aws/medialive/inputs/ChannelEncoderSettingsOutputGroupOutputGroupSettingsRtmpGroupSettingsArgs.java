// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.medialive.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ChannelEncoderSettingsOutputGroupOutputGroupSettingsRtmpGroupSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ChannelEncoderSettingsOutputGroupOutputGroupSettingsRtmpGroupSettingsArgs Empty = new ChannelEncoderSettingsOutputGroupOutputGroupSettingsRtmpGroupSettingsArgs();

    /**
     * The ad marker type for this output group.
     * 
     */
    @Import(name="adMarkers")
    private @Nullable Output<List<String>> adMarkers;

    /**
     * @return The ad marker type for this output group.
     * 
     */
    public Optional<Output<List<String>>> adMarkers() {
        return Optional.ofNullable(this.adMarkers);
    }

    /**
     * Authentication scheme to use when connecting with CDN.
     * 
     */
    @Import(name="authenticationScheme")
    private @Nullable Output<String> authenticationScheme;

    /**
     * @return Authentication scheme to use when connecting with CDN.
     * 
     */
    public Optional<Output<String>> authenticationScheme() {
        return Optional.ofNullable(this.authenticationScheme);
    }

    /**
     * Controls behavior when content cache fills up.
     * 
     */
    @Import(name="cacheFullBehavior")
    private @Nullable Output<String> cacheFullBehavior;

    /**
     * @return Controls behavior when content cache fills up.
     * 
     */
    public Optional<Output<String>> cacheFullBehavior() {
        return Optional.ofNullable(this.cacheFullBehavior);
    }

    /**
     * Cache length in seconds, is used to calculate buffer size.
     * 
     */
    @Import(name="cacheLength")
    private @Nullable Output<Integer> cacheLength;

    /**
     * @return Cache length in seconds, is used to calculate buffer size.
     * 
     */
    public Optional<Output<Integer>> cacheLength() {
        return Optional.ofNullable(this.cacheLength);
    }

    /**
     * Controls the types of data that passes to onCaptionInfo outputs.
     * 
     */
    @Import(name="captionData")
    private @Nullable Output<String> captionData;

    /**
     * @return Controls the types of data that passes to onCaptionInfo outputs.
     * 
     */
    public Optional<Output<String>> captionData() {
        return Optional.ofNullable(this.captionData);
    }

    /**
     * Specifies behavior of last resort when input video os lost.
     * 
     */
    @Import(name="inputLossAction")
    private @Nullable Output<String> inputLossAction;

    /**
     * @return Specifies behavior of last resort when input video os lost.
     * 
     */
    public Optional<Output<String>> inputLossAction() {
        return Optional.ofNullable(this.inputLossAction);
    }

    /**
     * Number of seconds to wait until a restart is initiated.
     * 
     */
    @Import(name="restartDelay")
    private @Nullable Output<Integer> restartDelay;

    /**
     * @return Number of seconds to wait until a restart is initiated.
     * 
     */
    public Optional<Output<Integer>> restartDelay() {
        return Optional.ofNullable(this.restartDelay);
    }

    private ChannelEncoderSettingsOutputGroupOutputGroupSettingsRtmpGroupSettingsArgs() {}

    private ChannelEncoderSettingsOutputGroupOutputGroupSettingsRtmpGroupSettingsArgs(ChannelEncoderSettingsOutputGroupOutputGroupSettingsRtmpGroupSettingsArgs $) {
        this.adMarkers = $.adMarkers;
        this.authenticationScheme = $.authenticationScheme;
        this.cacheFullBehavior = $.cacheFullBehavior;
        this.cacheLength = $.cacheLength;
        this.captionData = $.captionData;
        this.inputLossAction = $.inputLossAction;
        this.restartDelay = $.restartDelay;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ChannelEncoderSettingsOutputGroupOutputGroupSettingsRtmpGroupSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ChannelEncoderSettingsOutputGroupOutputGroupSettingsRtmpGroupSettingsArgs $;

        public Builder() {
            $ = new ChannelEncoderSettingsOutputGroupOutputGroupSettingsRtmpGroupSettingsArgs();
        }

        public Builder(ChannelEncoderSettingsOutputGroupOutputGroupSettingsRtmpGroupSettingsArgs defaults) {
            $ = new ChannelEncoderSettingsOutputGroupOutputGroupSettingsRtmpGroupSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param adMarkers The ad marker type for this output group.
         * 
         * @return builder
         * 
         */
        public Builder adMarkers(@Nullable Output<List<String>> adMarkers) {
            $.adMarkers = adMarkers;
            return this;
        }

        /**
         * @param adMarkers The ad marker type for this output group.
         * 
         * @return builder
         * 
         */
        public Builder adMarkers(List<String> adMarkers) {
            return adMarkers(Output.of(adMarkers));
        }

        /**
         * @param adMarkers The ad marker type for this output group.
         * 
         * @return builder
         * 
         */
        public Builder adMarkers(String... adMarkers) {
            return adMarkers(List.of(adMarkers));
        }

        /**
         * @param authenticationScheme Authentication scheme to use when connecting with CDN.
         * 
         * @return builder
         * 
         */
        public Builder authenticationScheme(@Nullable Output<String> authenticationScheme) {
            $.authenticationScheme = authenticationScheme;
            return this;
        }

        /**
         * @param authenticationScheme Authentication scheme to use when connecting with CDN.
         * 
         * @return builder
         * 
         */
        public Builder authenticationScheme(String authenticationScheme) {
            return authenticationScheme(Output.of(authenticationScheme));
        }

        /**
         * @param cacheFullBehavior Controls behavior when content cache fills up.
         * 
         * @return builder
         * 
         */
        public Builder cacheFullBehavior(@Nullable Output<String> cacheFullBehavior) {
            $.cacheFullBehavior = cacheFullBehavior;
            return this;
        }

        /**
         * @param cacheFullBehavior Controls behavior when content cache fills up.
         * 
         * @return builder
         * 
         */
        public Builder cacheFullBehavior(String cacheFullBehavior) {
            return cacheFullBehavior(Output.of(cacheFullBehavior));
        }

        /**
         * @param cacheLength Cache length in seconds, is used to calculate buffer size.
         * 
         * @return builder
         * 
         */
        public Builder cacheLength(@Nullable Output<Integer> cacheLength) {
            $.cacheLength = cacheLength;
            return this;
        }

        /**
         * @param cacheLength Cache length in seconds, is used to calculate buffer size.
         * 
         * @return builder
         * 
         */
        public Builder cacheLength(Integer cacheLength) {
            return cacheLength(Output.of(cacheLength));
        }

        /**
         * @param captionData Controls the types of data that passes to onCaptionInfo outputs.
         * 
         * @return builder
         * 
         */
        public Builder captionData(@Nullable Output<String> captionData) {
            $.captionData = captionData;
            return this;
        }

        /**
         * @param captionData Controls the types of data that passes to onCaptionInfo outputs.
         * 
         * @return builder
         * 
         */
        public Builder captionData(String captionData) {
            return captionData(Output.of(captionData));
        }

        /**
         * @param inputLossAction Specifies behavior of last resort when input video os lost.
         * 
         * @return builder
         * 
         */
        public Builder inputLossAction(@Nullable Output<String> inputLossAction) {
            $.inputLossAction = inputLossAction;
            return this;
        }

        /**
         * @param inputLossAction Specifies behavior of last resort when input video os lost.
         * 
         * @return builder
         * 
         */
        public Builder inputLossAction(String inputLossAction) {
            return inputLossAction(Output.of(inputLossAction));
        }

        /**
         * @param restartDelay Number of seconds to wait until a restart is initiated.
         * 
         * @return builder
         * 
         */
        public Builder restartDelay(@Nullable Output<Integer> restartDelay) {
            $.restartDelay = restartDelay;
            return this;
        }

        /**
         * @param restartDelay Number of seconds to wait until a restart is initiated.
         * 
         * @return builder
         * 
         */
        public Builder restartDelay(Integer restartDelay) {
            return restartDelay(Output.of(restartDelay));
        }

        public ChannelEncoderSettingsOutputGroupOutputGroupSettingsRtmpGroupSettingsArgs build() {
            return $;
        }
    }

}
