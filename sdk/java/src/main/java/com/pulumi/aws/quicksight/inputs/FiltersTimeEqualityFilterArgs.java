// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.ColumnArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FiltersTimeEqualityFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final FiltersTimeEqualityFilterArgs Empty = new FiltersTimeEqualityFilterArgs();

    @Import(name="column", required=true)
    private Output<ColumnArgs> column;

    public Output<ColumnArgs> column() {
        return this.column;
    }

    @Import(name="filterId", required=true)
    private Output<String> filterId;

    public Output<String> filterId() {
        return this.filterId;
    }

    @Import(name="parameterName")
    private @Nullable Output<String> parameterName;

    public Optional<Output<String>> parameterName() {
        return Optional.ofNullable(this.parameterName);
    }

    @Import(name="timeGranularity", required=true)
    private Output<String> timeGranularity;

    public Output<String> timeGranularity() {
        return this.timeGranularity;
    }

    @Import(name="value")
    private @Nullable Output<String> value;

    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    private FiltersTimeEqualityFilterArgs() {}

    private FiltersTimeEqualityFilterArgs(FiltersTimeEqualityFilterArgs $) {
        this.column = $.column;
        this.filterId = $.filterId;
        this.parameterName = $.parameterName;
        this.timeGranularity = $.timeGranularity;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FiltersTimeEqualityFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FiltersTimeEqualityFilterArgs $;

        public Builder() {
            $ = new FiltersTimeEqualityFilterArgs();
        }

        public Builder(FiltersTimeEqualityFilterArgs defaults) {
            $ = new FiltersTimeEqualityFilterArgs(Objects.requireNonNull(defaults));
        }

        public Builder column(Output<ColumnArgs> column) {
            $.column = column;
            return this;
        }

        public Builder column(ColumnArgs column) {
            return column(Output.of(column));
        }

        public Builder filterId(Output<String> filterId) {
            $.filterId = filterId;
            return this;
        }

        public Builder filterId(String filterId) {
            return filterId(Output.of(filterId));
        }

        public Builder parameterName(@Nullable Output<String> parameterName) {
            $.parameterName = parameterName;
            return this;
        }

        public Builder parameterName(String parameterName) {
            return parameterName(Output.of(parameterName));
        }

        public Builder timeGranularity(Output<String> timeGranularity) {
            $.timeGranularity = timeGranularity;
            return this;
        }

        public Builder timeGranularity(String timeGranularity) {
            return timeGranularity(Output.of(timeGranularity));
        }

        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        public Builder value(String value) {
            return value(Output.of(value));
        }

        public FiltersTimeEqualityFilterArgs build() {
            if ($.column == null) {
                throw new MissingRequiredPropertyException("FiltersTimeEqualityFilterArgs", "column");
            }
            if ($.filterId == null) {
                throw new MissingRequiredPropertyException("FiltersTimeEqualityFilterArgs", "filterId");
            }
            if ($.timeGranularity == null) {
                throw new MissingRequiredPropertyException("FiltersTimeEqualityFilterArgs", "timeGranularity");
            }
            return $;
        }
    }

}
