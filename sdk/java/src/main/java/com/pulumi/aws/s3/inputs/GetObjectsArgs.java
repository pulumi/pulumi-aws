// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetObjectsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetObjectsArgs Empty = new GetObjectsArgs();

    @Import(name="bucket", required=true)
    private Output<String> bucket;

    public Output<String> bucket() {
        return this.bucket;
    }

    @Import(name="delimiter")
    private @Nullable Output<String> delimiter;

    public Optional<Output<String>> delimiter() {
        return Optional.ofNullable(this.delimiter);
    }

    @Import(name="encodingType")
    private @Nullable Output<String> encodingType;

    public Optional<Output<String>> encodingType() {
        return Optional.ofNullable(this.encodingType);
    }

    @Import(name="fetchOwner")
    private @Nullable Output<Boolean> fetchOwner;

    public Optional<Output<Boolean>> fetchOwner() {
        return Optional.ofNullable(this.fetchOwner);
    }

    @Import(name="maxKeys")
    private @Nullable Output<Integer> maxKeys;

    public Optional<Output<Integer>> maxKeys() {
        return Optional.ofNullable(this.maxKeys);
    }

    @Import(name="prefix")
    private @Nullable Output<String> prefix;

    public Optional<Output<String>> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    @Import(name="startAfter")
    private @Nullable Output<String> startAfter;

    public Optional<Output<String>> startAfter() {
        return Optional.ofNullable(this.startAfter);
    }

    private GetObjectsArgs() {}

    private GetObjectsArgs(GetObjectsArgs $) {
        this.bucket = $.bucket;
        this.delimiter = $.delimiter;
        this.encodingType = $.encodingType;
        this.fetchOwner = $.fetchOwner;
        this.maxKeys = $.maxKeys;
        this.prefix = $.prefix;
        this.startAfter = $.startAfter;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetObjectsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetObjectsArgs $;

        public Builder() {
            $ = new GetObjectsArgs();
        }

        public Builder(GetObjectsArgs defaults) {
            $ = new GetObjectsArgs(Objects.requireNonNull(defaults));
        }

        public Builder bucket(Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        public Builder delimiter(@Nullable Output<String> delimiter) {
            $.delimiter = delimiter;
            return this;
        }

        public Builder delimiter(String delimiter) {
            return delimiter(Output.of(delimiter));
        }

        public Builder encodingType(@Nullable Output<String> encodingType) {
            $.encodingType = encodingType;
            return this;
        }

        public Builder encodingType(String encodingType) {
            return encodingType(Output.of(encodingType));
        }

        public Builder fetchOwner(@Nullable Output<Boolean> fetchOwner) {
            $.fetchOwner = fetchOwner;
            return this;
        }

        public Builder fetchOwner(Boolean fetchOwner) {
            return fetchOwner(Output.of(fetchOwner));
        }

        public Builder maxKeys(@Nullable Output<Integer> maxKeys) {
            $.maxKeys = maxKeys;
            return this;
        }

        public Builder maxKeys(Integer maxKeys) {
            return maxKeys(Output.of(maxKeys));
        }

        public Builder prefix(@Nullable Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        public Builder startAfter(@Nullable Output<String> startAfter) {
            $.startAfter = startAfter;
            return this;
        }

        public Builder startAfter(String startAfter) {
            return startAfter(Output.of(startAfter));
        }

        public GetObjectsArgs build() {
            $.bucket = Objects.requireNonNull($.bucket, "expected parameter 'bucket' to be non-null");
            return $;
        }
    }

}
