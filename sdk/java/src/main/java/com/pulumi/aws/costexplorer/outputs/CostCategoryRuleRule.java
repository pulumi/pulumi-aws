// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.costexplorer.outputs;

import com.pulumi.aws.costexplorer.outputs.CostCategoryRuleRuleAnd;
import com.pulumi.aws.costexplorer.outputs.CostCategoryRuleRuleCostCategory;
import com.pulumi.aws.costexplorer.outputs.CostCategoryRuleRuleDimension;
import com.pulumi.aws.costexplorer.outputs.CostCategoryRuleRuleNot;
import com.pulumi.aws.costexplorer.outputs.CostCategoryRuleRuleOr;
import com.pulumi.aws.costexplorer.outputs.CostCategoryRuleRuleTags;
import com.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CostCategoryRuleRule {
    private @Nullable List<CostCategoryRuleRuleAnd> ands;
    private @Nullable CostCategoryRuleRuleCostCategory costCategory;
    private @Nullable CostCategoryRuleRuleDimension dimension;
    private @Nullable CostCategoryRuleRuleNot not;
    private @Nullable List<CostCategoryRuleRuleOr> ors;
    private @Nullable CostCategoryRuleRuleTags tags;

    private CostCategoryRuleRule() {}
    public List<CostCategoryRuleRuleAnd> ands() {
        return this.ands == null ? List.of() : this.ands;
    }
    public Optional<CostCategoryRuleRuleCostCategory> costCategory() {
        return Optional.ofNullable(this.costCategory);
    }
    public Optional<CostCategoryRuleRuleDimension> dimension() {
        return Optional.ofNullable(this.dimension);
    }
    public Optional<CostCategoryRuleRuleNot> not() {
        return Optional.ofNullable(this.not);
    }
    public List<CostCategoryRuleRuleOr> ors() {
        return this.ors == null ? List.of() : this.ors;
    }
    public Optional<CostCategoryRuleRuleTags> tags() {
        return Optional.ofNullable(this.tags);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CostCategoryRuleRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<CostCategoryRuleRuleAnd> ands;
        private @Nullable CostCategoryRuleRuleCostCategory costCategory;
        private @Nullable CostCategoryRuleRuleDimension dimension;
        private @Nullable CostCategoryRuleRuleNot not;
        private @Nullable List<CostCategoryRuleRuleOr> ors;
        private @Nullable CostCategoryRuleRuleTags tags;
        public Builder() {}
        public Builder(CostCategoryRuleRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ands = defaults.ands;
    	      this.costCategory = defaults.costCategory;
    	      this.dimension = defaults.dimension;
    	      this.not = defaults.not;
    	      this.ors = defaults.ors;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder ands(@Nullable List<CostCategoryRuleRuleAnd> ands) {
            this.ands = ands;
            return this;
        }
        public Builder ands(CostCategoryRuleRuleAnd... ands) {
            return ands(List.of(ands));
        }
        @CustomType.Setter
        public Builder costCategory(@Nullable CostCategoryRuleRuleCostCategory costCategory) {
            this.costCategory = costCategory;
            return this;
        }
        @CustomType.Setter
        public Builder dimension(@Nullable CostCategoryRuleRuleDimension dimension) {
            this.dimension = dimension;
            return this;
        }
        @CustomType.Setter
        public Builder not(@Nullable CostCategoryRuleRuleNot not) {
            this.not = not;
            return this;
        }
        @CustomType.Setter
        public Builder ors(@Nullable List<CostCategoryRuleRuleOr> ors) {
            this.ors = ors;
            return this;
        }
        public Builder ors(CostCategoryRuleRuleOr... ors) {
            return ors(List.of(ors));
        }
        @CustomType.Setter
        public Builder tags(@Nullable CostCategoryRuleRuleTags tags) {
            this.tags = tags;
            return this;
        }
        public CostCategoryRuleRule build() {
            final var o = new CostCategoryRuleRule();
            o.ands = ands;
            o.costCategory = costCategory;
            o.dimension = dimension;
            o.not = not;
            o.ors = ors;
            o.tags = tags;
            return o;
        }
    }
}
