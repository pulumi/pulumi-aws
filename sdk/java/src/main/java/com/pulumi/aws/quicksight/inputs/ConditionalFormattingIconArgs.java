// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.ConditionalFormattingIconCustomConditionArgs;
import com.pulumi.aws.quicksight.inputs.ConditionalFormattingIconIconSetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConditionalFormattingIconArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConditionalFormattingIconArgs Empty = new ConditionalFormattingIconArgs();

    @Import(name="customCondition")
    private @Nullable Output<ConditionalFormattingIconCustomConditionArgs> customCondition;

    public Optional<Output<ConditionalFormattingIconCustomConditionArgs>> customCondition() {
        return Optional.ofNullable(this.customCondition);
    }

    @Import(name="iconSet")
    private @Nullable Output<ConditionalFormattingIconIconSetArgs> iconSet;

    public Optional<Output<ConditionalFormattingIconIconSetArgs>> iconSet() {
        return Optional.ofNullable(this.iconSet);
    }

    private ConditionalFormattingIconArgs() {}

    private ConditionalFormattingIconArgs(ConditionalFormattingIconArgs $) {
        this.customCondition = $.customCondition;
        this.iconSet = $.iconSet;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConditionalFormattingIconArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConditionalFormattingIconArgs $;

        public Builder() {
            $ = new ConditionalFormattingIconArgs();
        }

        public Builder(ConditionalFormattingIconArgs defaults) {
            $ = new ConditionalFormattingIconArgs(Objects.requireNonNull(defaults));
        }

        public Builder customCondition(@Nullable Output<ConditionalFormattingIconCustomConditionArgs> customCondition) {
            $.customCondition = customCondition;
            return this;
        }

        public Builder customCondition(ConditionalFormattingIconCustomConditionArgs customCondition) {
            return customCondition(Output.of(customCondition));
        }

        public Builder iconSet(@Nullable Output<ConditionalFormattingIconIconSetArgs> iconSet) {
            $.iconSet = iconSet;
            return this;
        }

        public Builder iconSet(ConditionalFormattingIconIconSetArgs iconSet) {
            return iconSet(Output.of(iconSet));
        }

        public ConditionalFormattingIconArgs build() {
            return $;
        }
    }

}
