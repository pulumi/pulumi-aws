// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.fsx;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.fsx.inputs.GetOpenZfsSnapshotArgs;
import com.pulumi.aws.fsx.inputs.GetOpenZfsSnapshotPlainArgs;
import com.pulumi.aws.fsx.outputs.GetOpenZfsSnapshotResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import java.util.concurrent.CompletableFuture;

public final class FsxFunctions {
    /**
     * Use this data source to get information about an Amazon FSx for OpenZFS Snapshot for use when provisioning new Volumes.
     * 
     * ## Example Usage
     * ### Root volume Example
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.fsx.FsxFunctions;
     * import com.pulumi.aws.fsx.inputs.GetOpenZfsSnapshotArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FsxFunctions.getOpenZfsSnapshot(GetOpenZfsSnapshotArgs.builder()
     *             .filters(GetOpenZfsSnapshotFilterArgs.builder()
     *                 .name(&#34;volume-id&#34;)
     *                 .values(&#34;fsvol-073a32b6098a73feb&#34;)
     *                 .build())
     *             .mostRecent(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetOpenZfsSnapshotResult> getOpenZfsSnapshot() {
        return getOpenZfsSnapshot(GetOpenZfsSnapshotArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about an Amazon FSx for OpenZFS Snapshot for use when provisioning new Volumes.
     * 
     * ## Example Usage
     * ### Root volume Example
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.fsx.FsxFunctions;
     * import com.pulumi.aws.fsx.inputs.GetOpenZfsSnapshotArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FsxFunctions.getOpenZfsSnapshot(GetOpenZfsSnapshotArgs.builder()
     *             .filters(GetOpenZfsSnapshotFilterArgs.builder()
     *                 .name(&#34;volume-id&#34;)
     *                 .values(&#34;fsvol-073a32b6098a73feb&#34;)
     *                 .build())
     *             .mostRecent(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetOpenZfsSnapshotResult> getOpenZfsSnapshotPlain() {
        return getOpenZfsSnapshotPlain(GetOpenZfsSnapshotPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about an Amazon FSx for OpenZFS Snapshot for use when provisioning new Volumes.
     * 
     * ## Example Usage
     * ### Root volume Example
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.fsx.FsxFunctions;
     * import com.pulumi.aws.fsx.inputs.GetOpenZfsSnapshotArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FsxFunctions.getOpenZfsSnapshot(GetOpenZfsSnapshotArgs.builder()
     *             .filters(GetOpenZfsSnapshotFilterArgs.builder()
     *                 .name(&#34;volume-id&#34;)
     *                 .values(&#34;fsvol-073a32b6098a73feb&#34;)
     *                 .build())
     *             .mostRecent(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetOpenZfsSnapshotResult> getOpenZfsSnapshot(GetOpenZfsSnapshotArgs args) {
        return getOpenZfsSnapshot(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about an Amazon FSx for OpenZFS Snapshot for use when provisioning new Volumes.
     * 
     * ## Example Usage
     * ### Root volume Example
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.fsx.FsxFunctions;
     * import com.pulumi.aws.fsx.inputs.GetOpenZfsSnapshotArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FsxFunctions.getOpenZfsSnapshot(GetOpenZfsSnapshotArgs.builder()
     *             .filters(GetOpenZfsSnapshotFilterArgs.builder()
     *                 .name(&#34;volume-id&#34;)
     *                 .values(&#34;fsvol-073a32b6098a73feb&#34;)
     *                 .build())
     *             .mostRecent(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetOpenZfsSnapshotResult> getOpenZfsSnapshotPlain(GetOpenZfsSnapshotPlainArgs args) {
        return getOpenZfsSnapshotPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about an Amazon FSx for OpenZFS Snapshot for use when provisioning new Volumes.
     * 
     * ## Example Usage
     * ### Root volume Example
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.fsx.FsxFunctions;
     * import com.pulumi.aws.fsx.inputs.GetOpenZfsSnapshotArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FsxFunctions.getOpenZfsSnapshot(GetOpenZfsSnapshotArgs.builder()
     *             .filters(GetOpenZfsSnapshotFilterArgs.builder()
     *                 .name(&#34;volume-id&#34;)
     *                 .values(&#34;fsvol-073a32b6098a73feb&#34;)
     *                 .build())
     *             .mostRecent(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetOpenZfsSnapshotResult> getOpenZfsSnapshot(GetOpenZfsSnapshotArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws:fsx/getOpenZfsSnapshot:getOpenZfsSnapshot", TypeShape.of(GetOpenZfsSnapshotResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about an Amazon FSx for OpenZFS Snapshot for use when provisioning new Volumes.
     * 
     * ## Example Usage
     * ### Root volume Example
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.fsx.FsxFunctions;
     * import com.pulumi.aws.fsx.inputs.GetOpenZfsSnapshotArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = FsxFunctions.getOpenZfsSnapshot(GetOpenZfsSnapshotArgs.builder()
     *             .filters(GetOpenZfsSnapshotFilterArgs.builder()
     *                 .name(&#34;volume-id&#34;)
     *                 .values(&#34;fsvol-073a32b6098a73feb&#34;)
     *                 .build())
     *             .mostRecent(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetOpenZfsSnapshotResult> getOpenZfsSnapshotPlain(GetOpenZfsSnapshotPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:fsx/getOpenZfsSnapshot:getOpenZfsSnapshot", TypeShape.of(GetOpenZfsSnapshotResult.class), args, Utilities.withVersion(options));
    }
}
