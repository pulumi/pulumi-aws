// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.inspector.inputs;

import com.pulumi.aws.inspector.inputs.AssessmentTemplateEventSubscriptionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AssessmentTemplateState extends com.pulumi.resources.ResourceArgs {

    public static final AssessmentTemplateState Empty = new AssessmentTemplateState();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="duration")
    private @Nullable Output<Integer> duration;

    public Optional<Output<Integer>> duration() {
        return Optional.ofNullable(this.duration);
    }

    @Import(name="eventSubscriptions")
    private @Nullable Output<List<AssessmentTemplateEventSubscriptionArgs>> eventSubscriptions;

    public Optional<Output<List<AssessmentTemplateEventSubscriptionArgs>>> eventSubscriptions() {
        return Optional.ofNullable(this.eventSubscriptions);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="rulesPackageArns")
    private @Nullable Output<List<String>> rulesPackageArns;

    public Optional<Output<List<String>>> rulesPackageArns() {
        return Optional.ofNullable(this.rulesPackageArns);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="targetArn")
    private @Nullable Output<String> targetArn;

    public Optional<Output<String>> targetArn() {
        return Optional.ofNullable(this.targetArn);
    }

    private AssessmentTemplateState() {}

    private AssessmentTemplateState(AssessmentTemplateState $) {
        this.arn = $.arn;
        this.duration = $.duration;
        this.eventSubscriptions = $.eventSubscriptions;
        this.name = $.name;
        this.rulesPackageArns = $.rulesPackageArns;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.targetArn = $.targetArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AssessmentTemplateState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AssessmentTemplateState $;

        public Builder() {
            $ = new AssessmentTemplateState();
        }

        public Builder(AssessmentTemplateState defaults) {
            $ = new AssessmentTemplateState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder duration(@Nullable Output<Integer> duration) {
            $.duration = duration;
            return this;
        }

        public Builder duration(Integer duration) {
            return duration(Output.of(duration));
        }

        public Builder eventSubscriptions(@Nullable Output<List<AssessmentTemplateEventSubscriptionArgs>> eventSubscriptions) {
            $.eventSubscriptions = eventSubscriptions;
            return this;
        }

        public Builder eventSubscriptions(List<AssessmentTemplateEventSubscriptionArgs> eventSubscriptions) {
            return eventSubscriptions(Output.of(eventSubscriptions));
        }

        public Builder eventSubscriptions(AssessmentTemplateEventSubscriptionArgs... eventSubscriptions) {
            return eventSubscriptions(List.of(eventSubscriptions));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder rulesPackageArns(@Nullable Output<List<String>> rulesPackageArns) {
            $.rulesPackageArns = rulesPackageArns;
            return this;
        }

        public Builder rulesPackageArns(List<String> rulesPackageArns) {
            return rulesPackageArns(Output.of(rulesPackageArns));
        }

        public Builder rulesPackageArns(String... rulesPackageArns) {
            return rulesPackageArns(List.of(rulesPackageArns));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder targetArn(@Nullable Output<String> targetArn) {
            $.targetArn = targetArn;
            return this;
        }

        public Builder targetArn(String targetArn) {
            return targetArn(Output.of(targetArn));
        }

        public AssessmentTemplateState build() {
            return $;
        }
    }

}
