// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.macie.inputs;

import com.pulumi.aws.macie.inputs.S3BucketAssociationClassificationTypeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class S3BucketAssociationState extends com.pulumi.resources.ResourceArgs {

    public static final S3BucketAssociationState Empty = new S3BucketAssociationState();

    @Import(name="bucketName")
    private @Nullable Output<String> bucketName;

    public Optional<Output<String>> bucketName() {
        return Optional.ofNullable(this.bucketName);
    }

    @Import(name="classificationType")
    private @Nullable Output<S3BucketAssociationClassificationTypeArgs> classificationType;

    public Optional<Output<S3BucketAssociationClassificationTypeArgs>> classificationType() {
        return Optional.ofNullable(this.classificationType);
    }

    @Import(name="memberAccountId")
    private @Nullable Output<String> memberAccountId;

    public Optional<Output<String>> memberAccountId() {
        return Optional.ofNullable(this.memberAccountId);
    }

    @Import(name="prefix")
    private @Nullable Output<String> prefix;

    public Optional<Output<String>> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    private S3BucketAssociationState() {}

    private S3BucketAssociationState(S3BucketAssociationState $) {
        this.bucketName = $.bucketName;
        this.classificationType = $.classificationType;
        this.memberAccountId = $.memberAccountId;
        this.prefix = $.prefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(S3BucketAssociationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private S3BucketAssociationState $;

        public Builder() {
            $ = new S3BucketAssociationState();
        }

        public Builder(S3BucketAssociationState defaults) {
            $ = new S3BucketAssociationState(Objects.requireNonNull(defaults));
        }

        public Builder bucketName(@Nullable Output<String> bucketName) {
            $.bucketName = bucketName;
            return this;
        }

        public Builder bucketName(String bucketName) {
            return bucketName(Output.of(bucketName));
        }

        public Builder classificationType(@Nullable Output<S3BucketAssociationClassificationTypeArgs> classificationType) {
            $.classificationType = classificationType;
            return this;
        }

        public Builder classificationType(S3BucketAssociationClassificationTypeArgs classificationType) {
            return classificationType(Output.of(classificationType));
        }

        public Builder memberAccountId(@Nullable Output<String> memberAccountId) {
            $.memberAccountId = memberAccountId;
            return this;
        }

        public Builder memberAccountId(String memberAccountId) {
            return memberAccountId(Output.of(memberAccountId));
        }

        public Builder prefix(@Nullable Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        public S3BucketAssociationState build() {
            return $;
        }
    }

}
