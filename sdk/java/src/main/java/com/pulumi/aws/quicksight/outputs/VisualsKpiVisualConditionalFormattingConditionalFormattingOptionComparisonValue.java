// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.ConditionalFormattingColor;
import com.pulumi.aws.quicksight.outputs.ConditionalFormattingIcon;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VisualsKpiVisualConditionalFormattingConditionalFormattingOptionComparisonValue {
    private @Nullable ConditionalFormattingIcon icon;
    private ConditionalFormattingColor textColor;

    private VisualsKpiVisualConditionalFormattingConditionalFormattingOptionComparisonValue() {}
    public Optional<ConditionalFormattingIcon> icon() {
        return Optional.ofNullable(this.icon);
    }
    public ConditionalFormattingColor textColor() {
        return this.textColor;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VisualsKpiVisualConditionalFormattingConditionalFormattingOptionComparisonValue defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ConditionalFormattingIcon icon;
        private ConditionalFormattingColor textColor;
        public Builder() {}
        public Builder(VisualsKpiVisualConditionalFormattingConditionalFormattingOptionComparisonValue defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.icon = defaults.icon;
    	      this.textColor = defaults.textColor;
        }

        @CustomType.Setter
        public Builder icon(@Nullable ConditionalFormattingIcon icon) {

            this.icon = icon;
            return this;
        }
        @CustomType.Setter
        public Builder textColor(ConditionalFormattingColor textColor) {
            if (textColor == null) {
              throw new MissingRequiredPropertyException("VisualsKpiVisualConditionalFormattingConditionalFormattingOptionComparisonValue", "textColor");
            }
            this.textColor = textColor;
            return this;
        }
        public VisualsKpiVisualConditionalFormattingConditionalFormattingOptionComparisonValue build() {
            final var _resultValue = new VisualsKpiVisualConditionalFormattingConditionalFormattingOptionComparisonValue();
            _resultValue.icon = icon;
            _resultValue.textColor = textColor;
            return _resultValue;
        }
    }
}
