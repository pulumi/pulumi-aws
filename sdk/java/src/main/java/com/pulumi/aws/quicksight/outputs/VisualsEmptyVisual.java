// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.VisualCustomActions;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class VisualsEmptyVisual {
    /**
     * @return List of IAM actions to grant or revoke permissions on.
     * 
     */
    private @Nullable List<VisualCustomActions> actions;
    private String dataSetIdentifier;
    private String visualId;

    private VisualsEmptyVisual() {}
    /**
     * @return List of IAM actions to grant or revoke permissions on.
     * 
     */
    public List<VisualCustomActions> actions() {
        return this.actions == null ? List.of() : this.actions;
    }
    public String dataSetIdentifier() {
        return this.dataSetIdentifier;
    }
    public String visualId() {
        return this.visualId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VisualsEmptyVisual defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<VisualCustomActions> actions;
        private String dataSetIdentifier;
        private String visualId;
        public Builder() {}
        public Builder(VisualsEmptyVisual defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actions = defaults.actions;
    	      this.dataSetIdentifier = defaults.dataSetIdentifier;
    	      this.visualId = defaults.visualId;
        }

        @CustomType.Setter
        public Builder actions(@Nullable List<VisualCustomActions> actions) {

            this.actions = actions;
            return this;
        }
        public Builder actions(VisualCustomActions... actions) {
            return actions(List.of(actions));
        }
        @CustomType.Setter
        public Builder dataSetIdentifier(String dataSetIdentifier) {
            if (dataSetIdentifier == null) {
              throw new MissingRequiredPropertyException("VisualsEmptyVisual", "dataSetIdentifier");
            }
            this.dataSetIdentifier = dataSetIdentifier;
            return this;
        }
        @CustomType.Setter
        public Builder visualId(String visualId) {
            if (visualId == null) {
              throw new MissingRequiredPropertyException("VisualsEmptyVisual", "visualId");
            }
            this.visualId = visualId;
            return this;
        }
        public VisualsEmptyVisual build() {
            final var _resultValue = new VisualsEmptyVisual();
            _resultValue.actions = actions;
            _resultValue.dataSetIdentifier = dataSetIdentifier;
            _resultValue.visualId = visualId;
            return _resultValue;
        }
    }
}
