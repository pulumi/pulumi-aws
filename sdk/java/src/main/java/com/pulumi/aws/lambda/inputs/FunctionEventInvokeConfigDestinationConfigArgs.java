// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lambda.inputs;

import com.pulumi.aws.lambda.inputs.FunctionEventInvokeConfigDestinationConfigOnFailureArgs;
import com.pulumi.aws.lambda.inputs.FunctionEventInvokeConfigDestinationConfigOnSuccessArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FunctionEventInvokeConfigDestinationConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final FunctionEventInvokeConfigDestinationConfigArgs Empty = new FunctionEventInvokeConfigDestinationConfigArgs();

    /**
     * Configuration block with destination configuration for failed asynchronous invocations. See below for details.
     * 
     */
    @Import(name="onFailure")
    private @Nullable Output<FunctionEventInvokeConfigDestinationConfigOnFailureArgs> onFailure;

    /**
     * @return Configuration block with destination configuration for failed asynchronous invocations. See below for details.
     * 
     */
    public Optional<Output<FunctionEventInvokeConfigDestinationConfigOnFailureArgs>> onFailure() {
        return Optional.ofNullable(this.onFailure);
    }

    /**
     * Configuration block with destination configuration for successful asynchronous invocations. See below for details.
     * 
     */
    @Import(name="onSuccess")
    private @Nullable Output<FunctionEventInvokeConfigDestinationConfigOnSuccessArgs> onSuccess;

    /**
     * @return Configuration block with destination configuration for successful asynchronous invocations. See below for details.
     * 
     */
    public Optional<Output<FunctionEventInvokeConfigDestinationConfigOnSuccessArgs>> onSuccess() {
        return Optional.ofNullable(this.onSuccess);
    }

    private FunctionEventInvokeConfigDestinationConfigArgs() {}

    private FunctionEventInvokeConfigDestinationConfigArgs(FunctionEventInvokeConfigDestinationConfigArgs $) {
        this.onFailure = $.onFailure;
        this.onSuccess = $.onSuccess;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FunctionEventInvokeConfigDestinationConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FunctionEventInvokeConfigDestinationConfigArgs $;

        public Builder() {
            $ = new FunctionEventInvokeConfigDestinationConfigArgs();
        }

        public Builder(FunctionEventInvokeConfigDestinationConfigArgs defaults) {
            $ = new FunctionEventInvokeConfigDestinationConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param onFailure Configuration block with destination configuration for failed asynchronous invocations. See below for details.
         * 
         * @return builder
         * 
         */
        public Builder onFailure(@Nullable Output<FunctionEventInvokeConfigDestinationConfigOnFailureArgs> onFailure) {
            $.onFailure = onFailure;
            return this;
        }

        /**
         * @param onFailure Configuration block with destination configuration for failed asynchronous invocations. See below for details.
         * 
         * @return builder
         * 
         */
        public Builder onFailure(FunctionEventInvokeConfigDestinationConfigOnFailureArgs onFailure) {
            return onFailure(Output.of(onFailure));
        }

        /**
         * @param onSuccess Configuration block with destination configuration for successful asynchronous invocations. See below for details.
         * 
         * @return builder
         * 
         */
        public Builder onSuccess(@Nullable Output<FunctionEventInvokeConfigDestinationConfigOnSuccessArgs> onSuccess) {
            $.onSuccess = onSuccess;
            return this;
        }

        /**
         * @param onSuccess Configuration block with destination configuration for successful asynchronous invocations. See below for details.
         * 
         * @return builder
         * 
         */
        public Builder onSuccess(FunctionEventInvokeConfigDestinationConfigOnSuccessArgs onSuccess) {
            return onSuccess(Output.of(onSuccess));
        }

        public FunctionEventInvokeConfigDestinationConfigArgs build() {
            return $;
        }
    }

}
