// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudformation;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.cloudformation.StackInstancesArgs;
import com.pulumi.aws.cloudformation.inputs.StackInstancesState;
import com.pulumi.aws.cloudformation.outputs.StackInstancesDeploymentTargets;
import com.pulumi.aws.cloudformation.outputs.StackInstancesOperationPreferences;
import com.pulumi.aws.cloudformation.outputs.StackInstancesStackInstanceSummary;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * ### Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.cloudformation.StackInstances;
 * import com.pulumi.aws.cloudformation.StackInstancesArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new StackInstances("example", StackInstancesArgs.builder()
 *             .accounts(            
 *                 "123456789012",
 *                 "234567890123")
 *             .regions(            
 *                 "us-east-1",
 *                 "us-west-2")
 *             .stackSetName(exampleAwsCloudformationStackSet.name())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Example IAM Setup in Target Account
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.iam.IamFunctions;
 * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
 * import com.pulumi.aws.iam.Role;
 * import com.pulumi.aws.iam.RoleArgs;
 * import com.pulumi.aws.iam.RolePolicy;
 * import com.pulumi.aws.iam.RolePolicyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var aWSCloudFormationStackSetExecutionRoleAssumeRolePolicy = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
 *             .statements(GetPolicyDocumentStatementArgs.builder()
 *                 .actions("sts:AssumeRole")
 *                 .effect("Allow")
 *                 .principals(GetPolicyDocumentStatementPrincipalArgs.builder()
 *                     .identifiers(aWSCloudFormationStackSetAdministrationRole.arn())
 *                     .type("AWS")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var aWSCloudFormationStackSetExecutionRole = new Role("aWSCloudFormationStackSetExecutionRole", RoleArgs.builder()
 *             .assumeRolePolicy(aWSCloudFormationStackSetExecutionRoleAssumeRolePolicy.json())
 *             .name("AWSCloudFormationStackSetExecutionRole")
 *             .build());
 * 
 *         // Documentation: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html
 *         // Additional IAM permissions necessary depend on the resources defined in the StackSet template
 *         final var aWSCloudFormationStackSetExecutionRoleMinimumExecutionPolicy = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
 *             .statements(GetPolicyDocumentStatementArgs.builder()
 *                 .actions(                
 *                     "cloudformation:*",
 *                     "s3:*",
 *                     "sns:*")
 *                 .effect("Allow")
 *                 .resources("*")
 *                 .build())
 *             .build());
 * 
 *         var aWSCloudFormationStackSetExecutionRoleMinimumExecutionPolicyRolePolicy = new RolePolicy("aWSCloudFormationStackSetExecutionRoleMinimumExecutionPolicyRolePolicy", RolePolicyArgs.builder()
 *             .name("MinimumExecutionPolicy")
 *             .policy(aWSCloudFormationStackSetExecutionRoleMinimumExecutionPolicy.json())
 *             .role(aWSCloudFormationStackSetExecutionRole.name())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Example Deployment across Organizations account
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.cloudformation.StackInstances;
 * import com.pulumi.aws.cloudformation.StackInstancesArgs;
 * import com.pulumi.aws.cloudformation.inputs.StackInstancesDeploymentTargetsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new StackInstances("example", StackInstancesArgs.builder()
 *             .deploymentTargets(StackInstancesDeploymentTargetsArgs.builder()
 *                 .organizationalUnitIds(exampleAwsOrganizationsOrganization.roots()[0].id())
 *                 .build())
 *             .regions(            
 *                 "us-west-2",
 *                 "us-east-1")
 *             .stackSetName(exampleAwsCloudformationStackSet.name())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Import CloudFormation stack instances that target OUs, using the stack set name, `call_as`, and &#34;OU&#34; separated by commas (`,`). For example:
 * 
 * Using `pulumi import`, import CloudFormation stack instances using the stack set name and `call_as` separated by commas (`,`). If you are importing a stack instance targeting OUs, see the example below. For example:
 * 
 * ```sh
 * $ pulumi import aws:cloudformation/stackInstances:StackInstances example example,SELF
 * ```
 * Using `pulumi import`, Import CloudFormation stack instances that target OUs, using the stack set name, `call_as`, and &#34;OU&#34; separated by commas (`,`). For example:
 * 
 * ```sh
 * $ pulumi import aws:cloudformation/stackInstances:StackInstances example example,SELF,OU
 * ```
 * 
 */
@ResourceType(type="aws:cloudformation/stackInstances:StackInstances")
public class StackInstances extends com.pulumi.resources.CustomResource {
    /**
     * Accounts where you want to create stack instances in the specified `regions`. You can specify either `accounts` or `deployment_targets`, but not both.
     * 
     */
    @Export(name="accounts", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> accounts;

    /**
     * @return Accounts where you want to create stack instances in the specified `regions`. You can specify either `accounts` or `deployment_targets`, but not both.
     * 
     */
    public Output<List<String>> accounts() {
        return this.accounts;
    }
    /**
     * Whether you are acting as an account administrator in the organization&#39;s management account or as a delegated administrator in a member account. Valid values: `SELF` (default), `DELEGATED_ADMIN`.
     * 
     */
    @Export(name="callAs", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> callAs;

    /**
     * @return Whether you are acting as an account administrator in the organization&#39;s management account or as a delegated administrator in a member account. Valid values: `SELF` (default), `DELEGATED_ADMIN`.
     * 
     */
    public Output<Optional<String>> callAs() {
        return Codegen.optional(this.callAs);
    }
    /**
     * AWS Organizations accounts for which to create stack instances in the `regions`. stack sets doesn&#39;t deploy stack instances to the organization management account, even if the organization management account is in your organization or in an OU in your organization. Drift detection is not possible for most of this argument. See deployment_targets below.
     * 
     */
    @Export(name="deploymentTargets", refs={StackInstancesDeploymentTargets.class}, tree="[0]")
    private Output</* @Nullable */ StackInstancesDeploymentTargets> deploymentTargets;

    /**
     * @return AWS Organizations accounts for which to create stack instances in the `regions`. stack sets doesn&#39;t deploy stack instances to the organization management account, even if the organization management account is in your organization or in an OU in your organization. Drift detection is not possible for most of this argument. See deployment_targets below.
     * 
     */
    public Output<Optional<StackInstancesDeploymentTargets>> deploymentTargets() {
        return Codegen.optional(this.deploymentTargets);
    }
    /**
     * Preferences for how AWS CloudFormation performs a stack set operation. See operation_preferences below.
     * 
     */
    @Export(name="operationPreferences", refs={StackInstancesOperationPreferences.class}, tree="[0]")
    private Output</* @Nullable */ StackInstancesOperationPreferences> operationPreferences;

    /**
     * @return Preferences for how AWS CloudFormation performs a stack set operation. See operation_preferences below.
     * 
     */
    public Output<Optional<StackInstancesOperationPreferences>> operationPreferences() {
        return Codegen.optional(this.operationPreferences);
    }
    /**
     * Key-value map of input parameters to override from the stack set for these instances. This argument&#39;s drift detection is limited to the first account and region since each instance can have unique parameters.
     * 
     */
    @Export(name="parameterOverrides", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> parameterOverrides;

    /**
     * @return Key-value map of input parameters to override from the stack set for these instances. This argument&#39;s drift detection is limited to the first account and region since each instance can have unique parameters.
     * 
     */
    public Output<Optional<Map<String,String>>> parameterOverrides() {
        return Codegen.optional(this.parameterOverrides);
    }
    /**
     * Regions where you want to create stack instances in the specified `accounts`.
     * 
     */
    @Export(name="regions", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> regions;

    /**
     * @return Regions where you want to create stack instances in the specified `accounts`.
     * 
     */
    public Output<List<String>> regions() {
        return this.regions;
    }
    /**
     * Whether to remove the stack instances from the stack set, but not delete the stacks. You can&#39;t reassociate a retained stack or add an existing, saved stack to a new stack set. To retain the stack, ensure `retain_stacks = true` has been successfully applied _before_ an apply that would destroy the resource. Defaults to `false`.
     * 
     */
    @Export(name="retainStacks", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> retainStacks;

    /**
     * @return Whether to remove the stack instances from the stack set, but not delete the stacks. You can&#39;t reassociate a retained stack or add an existing, saved stack to a new stack set. To retain the stack, ensure `retain_stacks = true` has been successfully applied _before_ an apply that would destroy the resource. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> retainStacks() {
        return Codegen.optional(this.retainStacks);
    }
    /**
     * List of stack instances created from an organizational unit deployment target. This may not always be set depending on whether CloudFormation returns summaries for your configuration. See `stack_instance_summaries`.
     * 
     */
    @Export(name="stackInstanceSummaries", refs={List.class,StackInstancesStackInstanceSummary.class}, tree="[0,1]")
    private Output<List<StackInstancesStackInstanceSummary>> stackInstanceSummaries;

    /**
     * @return List of stack instances created from an organizational unit deployment target. This may not always be set depending on whether CloudFormation returns summaries for your configuration. See `stack_instance_summaries`.
     * 
     */
    public Output<List<StackInstancesStackInstanceSummary>> stackInstanceSummaries() {
        return this.stackInstanceSummaries;
    }
    /**
     * Name or unique ID of the stack set that the stack instance is associated with.
     * 
     */
    @Export(name="stackSetId", refs={String.class}, tree="[0]")
    private Output<String> stackSetId;

    /**
     * @return Name or unique ID of the stack set that the stack instance is associated with.
     * 
     */
    public Output<String> stackSetId() {
        return this.stackSetId;
    }
    /**
     * Name of the stack set.
     * 
     * The following arguments are optional:
     * 
     */
    @Export(name="stackSetName", refs={String.class}, tree="[0]")
    private Output<String> stackSetName;

    /**
     * @return Name of the stack set.
     * 
     * The following arguments are optional:
     * 
     */
    public Output<String> stackSetName() {
        return this.stackSetName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public StackInstances(java.lang.String name) {
        this(name, StackInstancesArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public StackInstances(java.lang.String name, StackInstancesArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public StackInstances(java.lang.String name, StackInstancesArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:cloudformation/stackInstances:StackInstances", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private StackInstances(java.lang.String name, Output<java.lang.String> id, @Nullable StackInstancesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:cloudformation/stackInstances:StackInstances", name, state, makeResourceOptions(options, id), false);
    }

    private static StackInstancesArgs makeArgs(StackInstancesArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? StackInstancesArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static StackInstances get(java.lang.String name, Output<java.lang.String> id, @Nullable StackInstancesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new StackInstances(name, id, state, options);
    }
}
