// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.glue.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CatalogTableOptimizerConfigurationOrphanFileDeletionConfigurationIcebergConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final CatalogTableOptimizerConfigurationOrphanFileDeletionConfigurationIcebergConfigurationArgs Empty = new CatalogTableOptimizerConfigurationOrphanFileDeletionConfigurationIcebergConfigurationArgs();

    /**
     * Specifies a directory in which to look for files. You may choose a sub-directory rather than the top-level table location. Defaults to the table&#39;s location.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies a directory in which to look for files. You may choose a sub-directory rather than the top-level table location. Defaults to the table&#39;s location.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The number of days that orphan files should be retained before file deletion. Defaults to `3`.
     * 
     */
    @Import(name="orphanFileRetentionPeriodInDays")
    private @Nullable Output<Integer> orphanFileRetentionPeriodInDays;

    /**
     * @return The number of days that orphan files should be retained before file deletion. Defaults to `3`.
     * 
     */
    public Optional<Output<Integer>> orphanFileRetentionPeriodInDays() {
        return Optional.ofNullable(this.orphanFileRetentionPeriodInDays);
    }

    /**
     * interval in hours between orphan file deletion job runs. Defaults to `24`.
     * 
     */
    @Import(name="runRateInHours")
    private @Nullable Output<Integer> runRateInHours;

    /**
     * @return interval in hours between orphan file deletion job runs. Defaults to `24`.
     * 
     */
    public Optional<Output<Integer>> runRateInHours() {
        return Optional.ofNullable(this.runRateInHours);
    }

    private CatalogTableOptimizerConfigurationOrphanFileDeletionConfigurationIcebergConfigurationArgs() {}

    private CatalogTableOptimizerConfigurationOrphanFileDeletionConfigurationIcebergConfigurationArgs(CatalogTableOptimizerConfigurationOrphanFileDeletionConfigurationIcebergConfigurationArgs $) {
        this.location = $.location;
        this.orphanFileRetentionPeriodInDays = $.orphanFileRetentionPeriodInDays;
        this.runRateInHours = $.runRateInHours;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CatalogTableOptimizerConfigurationOrphanFileDeletionConfigurationIcebergConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CatalogTableOptimizerConfigurationOrphanFileDeletionConfigurationIcebergConfigurationArgs $;

        public Builder() {
            $ = new CatalogTableOptimizerConfigurationOrphanFileDeletionConfigurationIcebergConfigurationArgs();
        }

        public Builder(CatalogTableOptimizerConfigurationOrphanFileDeletionConfigurationIcebergConfigurationArgs defaults) {
            $ = new CatalogTableOptimizerConfigurationOrphanFileDeletionConfigurationIcebergConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param location Specifies a directory in which to look for files. You may choose a sub-directory rather than the top-level table location. Defaults to the table&#39;s location.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies a directory in which to look for files. You may choose a sub-directory rather than the top-level table location. Defaults to the table&#39;s location.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param orphanFileRetentionPeriodInDays The number of days that orphan files should be retained before file deletion. Defaults to `3`.
         * 
         * @return builder
         * 
         */
        public Builder orphanFileRetentionPeriodInDays(@Nullable Output<Integer> orphanFileRetentionPeriodInDays) {
            $.orphanFileRetentionPeriodInDays = orphanFileRetentionPeriodInDays;
            return this;
        }

        /**
         * @param orphanFileRetentionPeriodInDays The number of days that orphan files should be retained before file deletion. Defaults to `3`.
         * 
         * @return builder
         * 
         */
        public Builder orphanFileRetentionPeriodInDays(Integer orphanFileRetentionPeriodInDays) {
            return orphanFileRetentionPeriodInDays(Output.of(orphanFileRetentionPeriodInDays));
        }

        /**
         * @param runRateInHours interval in hours between orphan file deletion job runs. Defaults to `24`.
         * 
         * @return builder
         * 
         */
        public Builder runRateInHours(@Nullable Output<Integer> runRateInHours) {
            $.runRateInHours = runRateInHours;
            return this;
        }

        /**
         * @param runRateInHours interval in hours between orphan file deletion job runs. Defaults to `24`.
         * 
         * @return builder
         * 
         */
        public Builder runRateInHours(Integer runRateInHours) {
            return runRateInHours(Output.of(runRateInHours));
        }

        public CatalogTableOptimizerConfigurationOrphanFileDeletionConfigurationIcebergConfigurationArgs build() {
            return $;
        }
    }

}
