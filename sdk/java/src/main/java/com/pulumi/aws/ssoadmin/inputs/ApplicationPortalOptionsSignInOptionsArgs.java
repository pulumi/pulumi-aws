// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ssoadmin.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationPortalOptionsSignInOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationPortalOptionsSignInOptionsArgs Empty = new ApplicationPortalOptionsSignInOptionsArgs();

    /**
     * URL that accepts authentication requests for an application.
     * 
     */
    @Import(name="applicationUrl")
    private @Nullable Output<String> applicationUrl;

    /**
     * @return URL that accepts authentication requests for an application.
     * 
     */
    public Optional<Output<String>> applicationUrl() {
        return Optional.ofNullable(this.applicationUrl);
    }

    /**
     * Determines how IAM Identity Center navigates the user to the target application.
     * Valid values are `APPLICATION` and `IDENTITY_CENTER`.
     * If `APPLICATION` is set, IAM Identity Center redirects the customer to the configured `application_url`.
     * If `IDENTITY_CENTER` is set, IAM Identity Center uses SAML identity-provider initiated authentication to sign the customer directly into a SAML-based application.
     * 
     */
    @Import(name="origin", required=true)
    private Output<String> origin;

    /**
     * @return Determines how IAM Identity Center navigates the user to the target application.
     * Valid values are `APPLICATION` and `IDENTITY_CENTER`.
     * If `APPLICATION` is set, IAM Identity Center redirects the customer to the configured `application_url`.
     * If `IDENTITY_CENTER` is set, IAM Identity Center uses SAML identity-provider initiated authentication to sign the customer directly into a SAML-based application.
     * 
     */
    public Output<String> origin() {
        return this.origin;
    }

    private ApplicationPortalOptionsSignInOptionsArgs() {}

    private ApplicationPortalOptionsSignInOptionsArgs(ApplicationPortalOptionsSignInOptionsArgs $) {
        this.applicationUrl = $.applicationUrl;
        this.origin = $.origin;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationPortalOptionsSignInOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationPortalOptionsSignInOptionsArgs $;

        public Builder() {
            $ = new ApplicationPortalOptionsSignInOptionsArgs();
        }

        public Builder(ApplicationPortalOptionsSignInOptionsArgs defaults) {
            $ = new ApplicationPortalOptionsSignInOptionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationUrl URL that accepts authentication requests for an application.
         * 
         * @return builder
         * 
         */
        public Builder applicationUrl(@Nullable Output<String> applicationUrl) {
            $.applicationUrl = applicationUrl;
            return this;
        }

        /**
         * @param applicationUrl URL that accepts authentication requests for an application.
         * 
         * @return builder
         * 
         */
        public Builder applicationUrl(String applicationUrl) {
            return applicationUrl(Output.of(applicationUrl));
        }

        /**
         * @param origin Determines how IAM Identity Center navigates the user to the target application.
         * Valid values are `APPLICATION` and `IDENTITY_CENTER`.
         * If `APPLICATION` is set, IAM Identity Center redirects the customer to the configured `application_url`.
         * If `IDENTITY_CENTER` is set, IAM Identity Center uses SAML identity-provider initiated authentication to sign the customer directly into a SAML-based application.
         * 
         * @return builder
         * 
         */
        public Builder origin(Output<String> origin) {
            $.origin = origin;
            return this;
        }

        /**
         * @param origin Determines how IAM Identity Center navigates the user to the target application.
         * Valid values are `APPLICATION` and `IDENTITY_CENTER`.
         * If `APPLICATION` is set, IAM Identity Center redirects the customer to the configured `application_url`.
         * If `IDENTITY_CENTER` is set, IAM Identity Center uses SAML identity-provider initiated authentication to sign the customer directly into a SAML-based application.
         * 
         * @return builder
         * 
         */
        public Builder origin(String origin) {
            return origin(Output.of(origin));
        }

        public ApplicationPortalOptionsSignInOptionsArgs build() {
            $.origin = Objects.requireNonNull($.origin, "expected parameter 'origin' to be non-null");
            return $;
        }
    }

}
