// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.aws.ec2.inputs.GetSubnetFilter;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSubnetPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSubnetPlainArgs Empty = new GetSubnetPlainArgs();

    @Import(name="availabilityZone")
    private @Nullable String availabilityZone;

    public Optional<String> availabilityZone() {
        return Optional.ofNullable(this.availabilityZone);
    }

    @Import(name="availabilityZoneId")
    private @Nullable String availabilityZoneId;

    public Optional<String> availabilityZoneId() {
        return Optional.ofNullable(this.availabilityZoneId);
    }

    @Import(name="cidrBlock")
    private @Nullable String cidrBlock;

    public Optional<String> cidrBlock() {
        return Optional.ofNullable(this.cidrBlock);
    }

    @Import(name="defaultForAz")
    private @Nullable Boolean defaultForAz;

    public Optional<Boolean> defaultForAz() {
        return Optional.ofNullable(this.defaultForAz);
    }

    @Import(name="filters")
    private @Nullable List<GetSubnetFilter> filters;

    public Optional<List<GetSubnetFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    @Import(name="id")
    private @Nullable String id;

    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    @Import(name="ipv6CidrBlock")
    private @Nullable String ipv6CidrBlock;

    public Optional<String> ipv6CidrBlock() {
        return Optional.ofNullable(this.ipv6CidrBlock);
    }

    @Import(name="state")
    private @Nullable String state;

    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    @Import(name="tags")
    private @Nullable Map<String,String> tags;

    public Optional<Map<String,String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="vpcId")
    private @Nullable String vpcId;

    public Optional<String> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    private GetSubnetPlainArgs() {}

    private GetSubnetPlainArgs(GetSubnetPlainArgs $) {
        this.availabilityZone = $.availabilityZone;
        this.availabilityZoneId = $.availabilityZoneId;
        this.cidrBlock = $.cidrBlock;
        this.defaultForAz = $.defaultForAz;
        this.filters = $.filters;
        this.id = $.id;
        this.ipv6CidrBlock = $.ipv6CidrBlock;
        this.state = $.state;
        this.tags = $.tags;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSubnetPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSubnetPlainArgs $;

        public Builder() {
            $ = new GetSubnetPlainArgs();
        }

        public Builder(GetSubnetPlainArgs defaults) {
            $ = new GetSubnetPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder availabilityZone(@Nullable String availabilityZone) {
            $.availabilityZone = availabilityZone;
            return this;
        }

        public Builder availabilityZoneId(@Nullable String availabilityZoneId) {
            $.availabilityZoneId = availabilityZoneId;
            return this;
        }

        public Builder cidrBlock(@Nullable String cidrBlock) {
            $.cidrBlock = cidrBlock;
            return this;
        }

        public Builder defaultForAz(@Nullable Boolean defaultForAz) {
            $.defaultForAz = defaultForAz;
            return this;
        }

        public Builder filters(@Nullable List<GetSubnetFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetSubnetFilter... filters) {
            return filters(List.of(filters));
        }

        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        public Builder ipv6CidrBlock(@Nullable String ipv6CidrBlock) {
            $.ipv6CidrBlock = ipv6CidrBlock;
            return this;
        }

        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            $.tags = tags;
            return this;
        }

        public Builder vpcId(@Nullable String vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        public GetSubnetPlainArgs build() {
            return $;
        }
    }

}
