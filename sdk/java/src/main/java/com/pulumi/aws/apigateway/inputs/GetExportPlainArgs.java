// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apigateway.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetExportPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetExportPlainArgs Empty = new GetExportPlainArgs();

    /**
     * Content-type of the export. Valid values are `application/json` and `application/yaml` are supported for `export_type` `ofoas30` and `swagger`.
     * 
     */
    @Import(name="accepts")
    private @Nullable String accepts;

    /**
     * @return Content-type of the export. Valid values are `application/json` and `application/yaml` are supported for `export_type` `ofoas30` and `swagger`.
     * 
     */
    public Optional<String> accepts() {
        return Optional.ofNullable(this.accepts);
    }

    /**
     * Type of export. Acceptable values are `oas30` for OpenAPI 3.0.x and `swagger` for Swagger/OpenAPI 2.0.
     * 
     */
    @Import(name="exportType", required=true)
    private String exportType;

    /**
     * @return Type of export. Acceptable values are `oas30` for OpenAPI 3.0.x and `swagger` for Swagger/OpenAPI 2.0.
     * 
     */
    public String exportType() {
        return this.exportType;
    }

    /**
     * Key-value map of query string parameters that specify properties of the export. the following parameters are supported: `extensions=&#39;integrations&#39;` or `extensions=&#39;apigateway&#39;` will export the API with x-amazon-apigateway-integration extensions. `extensions=&#39;authorizers&#39;` will export the API with x-amazon-apigateway-authorizer extensions.
     * 
     */
    @Import(name="parameters")
    private @Nullable Map<String,String> parameters;

    /**
     * @return Key-value map of query string parameters that specify properties of the export. the following parameters are supported: `extensions=&#39;integrations&#39;` or `extensions=&#39;apigateway&#39;` will export the API with x-amazon-apigateway-integration extensions. `extensions=&#39;authorizers&#39;` will export the API with x-amazon-apigateway-authorizer extensions.
     * 
     */
    public Optional<Map<String,String>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * Identifier of the associated REST API.
     * 
     */
    @Import(name="restApiId", required=true)
    private String restApiId;

    /**
     * @return Identifier of the associated REST API.
     * 
     */
    public String restApiId() {
        return this.restApiId;
    }

    /**
     * Name of the Stage that will be exported.
     * 
     */
    @Import(name="stageName", required=true)
    private String stageName;

    /**
     * @return Name of the Stage that will be exported.
     * 
     */
    public String stageName() {
        return this.stageName;
    }

    private GetExportPlainArgs() {}

    private GetExportPlainArgs(GetExportPlainArgs $) {
        this.accepts = $.accepts;
        this.exportType = $.exportType;
        this.parameters = $.parameters;
        this.restApiId = $.restApiId;
        this.stageName = $.stageName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetExportPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetExportPlainArgs $;

        public Builder() {
            $ = new GetExportPlainArgs();
        }

        public Builder(GetExportPlainArgs defaults) {
            $ = new GetExportPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accepts Content-type of the export. Valid values are `application/json` and `application/yaml` are supported for `export_type` `ofoas30` and `swagger`.
         * 
         * @return builder
         * 
         */
        public Builder accepts(@Nullable String accepts) {
            $.accepts = accepts;
            return this;
        }

        /**
         * @param exportType Type of export. Acceptable values are `oas30` for OpenAPI 3.0.x and `swagger` for Swagger/OpenAPI 2.0.
         * 
         * @return builder
         * 
         */
        public Builder exportType(String exportType) {
            $.exportType = exportType;
            return this;
        }

        /**
         * @param parameters Key-value map of query string parameters that specify properties of the export. the following parameters are supported: `extensions=&#39;integrations&#39;` or `extensions=&#39;apigateway&#39;` will export the API with x-amazon-apigateway-integration extensions. `extensions=&#39;authorizers&#39;` will export the API with x-amazon-apigateway-authorizer extensions.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Map<String,String> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param restApiId Identifier of the associated REST API.
         * 
         * @return builder
         * 
         */
        public Builder restApiId(String restApiId) {
            $.restApiId = restApiId;
            return this;
        }

        /**
         * @param stageName Name of the Stage that will be exported.
         * 
         * @return builder
         * 
         */
        public Builder stageName(String stageName) {
            $.stageName = stageName;
            return this;
        }

        public GetExportPlainArgs build() {
            if ($.exportType == null) {
                throw new MissingRequiredPropertyException("GetExportPlainArgs", "exportType");
            }
            if ($.restApiId == null) {
                throw new MissingRequiredPropertyException("GetExportPlainArgs", "restApiId");
            }
            if ($.stageName == null) {
                throw new MissingRequiredPropertyException("GetExportPlainArgs", "stageName");
            }
            return $;
        }
    }

}
