// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dynamodb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TableGlobalSecondaryIndexArgs extends com.pulumi.resources.ResourceArgs {

    public static final TableGlobalSecondaryIndexArgs Empty = new TableGlobalSecondaryIndexArgs();

    @Import(name="hashKey", required=true)
    private Output<String> hashKey;

    public Output<String> hashKey() {
        return this.hashKey;
    }

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="nonKeyAttributes")
    private @Nullable Output<List<String>> nonKeyAttributes;

    public Optional<Output<List<String>>> nonKeyAttributes() {
        return Optional.ofNullable(this.nonKeyAttributes);
    }

    @Import(name="projectionType", required=true)
    private Output<String> projectionType;

    public Output<String> projectionType() {
        return this.projectionType;
    }

    @Import(name="rangeKey")
    private @Nullable Output<String> rangeKey;

    public Optional<Output<String>> rangeKey() {
        return Optional.ofNullable(this.rangeKey);
    }

    @Import(name="readCapacity")
    private @Nullable Output<Integer> readCapacity;

    public Optional<Output<Integer>> readCapacity() {
        return Optional.ofNullable(this.readCapacity);
    }

    @Import(name="writeCapacity")
    private @Nullable Output<Integer> writeCapacity;

    public Optional<Output<Integer>> writeCapacity() {
        return Optional.ofNullable(this.writeCapacity);
    }

    private TableGlobalSecondaryIndexArgs() {}

    private TableGlobalSecondaryIndexArgs(TableGlobalSecondaryIndexArgs $) {
        this.hashKey = $.hashKey;
        this.name = $.name;
        this.nonKeyAttributes = $.nonKeyAttributes;
        this.projectionType = $.projectionType;
        this.rangeKey = $.rangeKey;
        this.readCapacity = $.readCapacity;
        this.writeCapacity = $.writeCapacity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TableGlobalSecondaryIndexArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TableGlobalSecondaryIndexArgs $;

        public Builder() {
            $ = new TableGlobalSecondaryIndexArgs();
        }

        public Builder(TableGlobalSecondaryIndexArgs defaults) {
            $ = new TableGlobalSecondaryIndexArgs(Objects.requireNonNull(defaults));
        }

        public Builder hashKey(Output<String> hashKey) {
            $.hashKey = hashKey;
            return this;
        }

        public Builder hashKey(String hashKey) {
            return hashKey(Output.of(hashKey));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder nonKeyAttributes(@Nullable Output<List<String>> nonKeyAttributes) {
            $.nonKeyAttributes = nonKeyAttributes;
            return this;
        }

        public Builder nonKeyAttributes(List<String> nonKeyAttributes) {
            return nonKeyAttributes(Output.of(nonKeyAttributes));
        }

        public Builder nonKeyAttributes(String... nonKeyAttributes) {
            return nonKeyAttributes(List.of(nonKeyAttributes));
        }

        public Builder projectionType(Output<String> projectionType) {
            $.projectionType = projectionType;
            return this;
        }

        public Builder projectionType(String projectionType) {
            return projectionType(Output.of(projectionType));
        }

        public Builder rangeKey(@Nullable Output<String> rangeKey) {
            $.rangeKey = rangeKey;
            return this;
        }

        public Builder rangeKey(String rangeKey) {
            return rangeKey(Output.of(rangeKey));
        }

        public Builder readCapacity(@Nullable Output<Integer> readCapacity) {
            $.readCapacity = readCapacity;
            return this;
        }

        public Builder readCapacity(Integer readCapacity) {
            return readCapacity(Output.of(readCapacity));
        }

        public Builder writeCapacity(@Nullable Output<Integer> writeCapacity) {
            $.writeCapacity = writeCapacity;
            return this;
        }

        public Builder writeCapacity(Integer writeCapacity) {
            return writeCapacity(Output.of(writeCapacity));
        }

        public TableGlobalSecondaryIndexArgs build() {
            $.hashKey = Objects.requireNonNull($.hashKey, "expected parameter 'hashKey' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.projectionType = Objects.requireNonNull($.projectionType, "expected parameter 'projectionType' to be non-null");
            return $;
        }
    }

}
