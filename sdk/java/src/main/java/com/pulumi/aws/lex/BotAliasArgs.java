// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lex;

import com.pulumi.aws.lex.inputs.BotAliasConversationLogsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BotAliasArgs extends com.pulumi.resources.ResourceArgs {

    public static final BotAliasArgs Empty = new BotAliasArgs();

    /**
     * The name of the bot.
     * 
     */
    @Import(name="botName", required=true)
    private Output<String> botName;

    /**
     * @return The name of the bot.
     * 
     */
    public Output<String> botName() {
        return this.botName;
    }

    /**
     * The version of the bot.
     * 
     */
    @Import(name="botVersion", required=true)
    private Output<String> botVersion;

    /**
     * @return The version of the bot.
     * 
     */
    public Output<String> botVersion() {
        return this.botVersion;
    }

    /**
     * The settings that determine how Amazon Lex uses conversation logs for the alias. Attributes are documented under conversation_logs.
     * 
     */
    @Import(name="conversationLogs")
    private @Nullable Output<BotAliasConversationLogsArgs> conversationLogs;

    /**
     * @return The settings that determine how Amazon Lex uses conversation logs for the alias. Attributes are documented under conversation_logs.
     * 
     */
    public Optional<Output<BotAliasConversationLogsArgs>> conversationLogs() {
        return Optional.ofNullable(this.conversationLogs);
    }

    /**
     * A description of the alias. Must be less than or equal to 200 characters in length.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A description of the alias. Must be less than or equal to 200 characters in length.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The name of the alias. The name is not case sensitive. Must be less than or equal to 100 characters in length.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the alias. The name is not case sensitive. Must be less than or equal to 100 characters in length.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private BotAliasArgs() {}

    private BotAliasArgs(BotAliasArgs $) {
        this.botName = $.botName;
        this.botVersion = $.botVersion;
        this.conversationLogs = $.conversationLogs;
        this.description = $.description;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BotAliasArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BotAliasArgs $;

        public Builder() {
            $ = new BotAliasArgs();
        }

        public Builder(BotAliasArgs defaults) {
            $ = new BotAliasArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param botName The name of the bot.
         * 
         * @return builder
         * 
         */
        public Builder botName(Output<String> botName) {
            $.botName = botName;
            return this;
        }

        /**
         * @param botName The name of the bot.
         * 
         * @return builder
         * 
         */
        public Builder botName(String botName) {
            return botName(Output.of(botName));
        }

        /**
         * @param botVersion The version of the bot.
         * 
         * @return builder
         * 
         */
        public Builder botVersion(Output<String> botVersion) {
            $.botVersion = botVersion;
            return this;
        }

        /**
         * @param botVersion The version of the bot.
         * 
         * @return builder
         * 
         */
        public Builder botVersion(String botVersion) {
            return botVersion(Output.of(botVersion));
        }

        /**
         * @param conversationLogs The settings that determine how Amazon Lex uses conversation logs for the alias. Attributes are documented under conversation_logs.
         * 
         * @return builder
         * 
         */
        public Builder conversationLogs(@Nullable Output<BotAliasConversationLogsArgs> conversationLogs) {
            $.conversationLogs = conversationLogs;
            return this;
        }

        /**
         * @param conversationLogs The settings that determine how Amazon Lex uses conversation logs for the alias. Attributes are documented under conversation_logs.
         * 
         * @return builder
         * 
         */
        public Builder conversationLogs(BotAliasConversationLogsArgs conversationLogs) {
            return conversationLogs(Output.of(conversationLogs));
        }

        /**
         * @param description A description of the alias. Must be less than or equal to 200 characters in length.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A description of the alias. Must be less than or equal to 200 characters in length.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name The name of the alias. The name is not case sensitive. Must be less than or equal to 100 characters in length.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the alias. The name is not case sensitive. Must be less than or equal to 100 characters in length.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public BotAliasArgs build() {
            if ($.botName == null) {
                throw new MissingRequiredPropertyException("BotAliasArgs", "botName");
            }
            if ($.botVersion == null) {
                throw new MissingRequiredPropertyException("BotAliasArgs", "botVersion");
            }
            return $;
        }
    }

}
