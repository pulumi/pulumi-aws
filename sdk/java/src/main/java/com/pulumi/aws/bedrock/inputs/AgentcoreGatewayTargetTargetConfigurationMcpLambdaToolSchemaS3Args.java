// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.bedrock.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaS3Args extends com.pulumi.resources.ResourceArgs {

    public static final AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaS3Args Empty = new AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaS3Args();

    /**
     * Account ID of the S3 bucket owner.
     * 
     */
    @Import(name="bucketOwnerAccountId")
    private @Nullable Output<String> bucketOwnerAccountId;

    /**
     * @return Account ID of the S3 bucket owner.
     * 
     */
    public Optional<Output<String>> bucketOwnerAccountId() {
        return Optional.ofNullable(this.bucketOwnerAccountId);
    }

    /**
     * S3 URI where the schema is stored.
     * 
     */
    @Import(name="uri")
    private @Nullable Output<String> uri;

    /**
     * @return S3 URI where the schema is stored.
     * 
     */
    public Optional<Output<String>> uri() {
        return Optional.ofNullable(this.uri);
    }

    private AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaS3Args() {}

    private AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaS3Args(AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaS3Args $) {
        this.bucketOwnerAccountId = $.bucketOwnerAccountId;
        this.uri = $.uri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaS3Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaS3Args $;

        public Builder() {
            $ = new AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaS3Args();
        }

        public Builder(AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaS3Args defaults) {
            $ = new AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaS3Args(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucketOwnerAccountId Account ID of the S3 bucket owner.
         * 
         * @return builder
         * 
         */
        public Builder bucketOwnerAccountId(@Nullable Output<String> bucketOwnerAccountId) {
            $.bucketOwnerAccountId = bucketOwnerAccountId;
            return this;
        }

        /**
         * @param bucketOwnerAccountId Account ID of the S3 bucket owner.
         * 
         * @return builder
         * 
         */
        public Builder bucketOwnerAccountId(String bucketOwnerAccountId) {
            return bucketOwnerAccountId(Output.of(bucketOwnerAccountId));
        }

        /**
         * @param uri S3 URI where the schema is stored.
         * 
         * @return builder
         * 
         */
        public Builder uri(@Nullable Output<String> uri) {
            $.uri = uri;
            return this;
        }

        /**
         * @param uri S3 URI where the schema is stored.
         * 
         * @return builder
         * 
         */
        public Builder uri(String uri) {
            return uri(Output.of(uri));
        }

        public AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaS3Args build() {
            return $;
        }
    }

}
