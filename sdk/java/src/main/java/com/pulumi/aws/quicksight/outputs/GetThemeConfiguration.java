// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.GetThemeConfigurationDataColorPalette;
import com.pulumi.aws.quicksight.outputs.GetThemeConfigurationSheet;
import com.pulumi.aws.quicksight.outputs.GetThemeConfigurationTypography;
import com.pulumi.aws.quicksight.outputs.GetThemeConfigurationUiColorPalette;
import com.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetThemeConfiguration {
    /**
     * @return Color properties that apply to chart data colors. See data_color_palette.
     * 
     */
    private @Nullable List<GetThemeConfigurationDataColorPalette> dataColorPalettes;
    /**
     * @return Display options related to sheets. See sheet.
     * 
     */
    private @Nullable List<GetThemeConfigurationSheet> sheets;
    /**
     * @return Determines the typography options. See typography.
     * 
     */
    private @Nullable List<GetThemeConfigurationTypography> typographies;
    /**
     * @return Color properties that apply to the UI and to charts, excluding the colors that apply to data. See ui_color_palette.
     * 
     */
    private @Nullable List<GetThemeConfigurationUiColorPalette> uiColorPalettes;

    private GetThemeConfiguration() {}
    /**
     * @return Color properties that apply to chart data colors. See data_color_palette.
     * 
     */
    public List<GetThemeConfigurationDataColorPalette> dataColorPalettes() {
        return this.dataColorPalettes == null ? List.of() : this.dataColorPalettes;
    }
    /**
     * @return Display options related to sheets. See sheet.
     * 
     */
    public List<GetThemeConfigurationSheet> sheets() {
        return this.sheets == null ? List.of() : this.sheets;
    }
    /**
     * @return Determines the typography options. See typography.
     * 
     */
    public List<GetThemeConfigurationTypography> typographies() {
        return this.typographies == null ? List.of() : this.typographies;
    }
    /**
     * @return Color properties that apply to the UI and to charts, excluding the colors that apply to data. See ui_color_palette.
     * 
     */
    public List<GetThemeConfigurationUiColorPalette> uiColorPalettes() {
        return this.uiColorPalettes == null ? List.of() : this.uiColorPalettes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetThemeConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetThemeConfigurationDataColorPalette> dataColorPalettes;
        private @Nullable List<GetThemeConfigurationSheet> sheets;
        private @Nullable List<GetThemeConfigurationTypography> typographies;
        private @Nullable List<GetThemeConfigurationUiColorPalette> uiColorPalettes;
        public Builder() {}
        public Builder(GetThemeConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataColorPalettes = defaults.dataColorPalettes;
    	      this.sheets = defaults.sheets;
    	      this.typographies = defaults.typographies;
    	      this.uiColorPalettes = defaults.uiColorPalettes;
        }

        @CustomType.Setter
        public Builder dataColorPalettes(@Nullable List<GetThemeConfigurationDataColorPalette> dataColorPalettes) {
            this.dataColorPalettes = dataColorPalettes;
            return this;
        }
        public Builder dataColorPalettes(GetThemeConfigurationDataColorPalette... dataColorPalettes) {
            return dataColorPalettes(List.of(dataColorPalettes));
        }
        @CustomType.Setter
        public Builder sheets(@Nullable List<GetThemeConfigurationSheet> sheets) {
            this.sheets = sheets;
            return this;
        }
        public Builder sheets(GetThemeConfigurationSheet... sheets) {
            return sheets(List.of(sheets));
        }
        @CustomType.Setter
        public Builder typographies(@Nullable List<GetThemeConfigurationTypography> typographies) {
            this.typographies = typographies;
            return this;
        }
        public Builder typographies(GetThemeConfigurationTypography... typographies) {
            return typographies(List.of(typographies));
        }
        @CustomType.Setter
        public Builder uiColorPalettes(@Nullable List<GetThemeConfigurationUiColorPalette> uiColorPalettes) {
            this.uiColorPalettes = uiColorPalettes;
            return this;
        }
        public Builder uiColorPalettes(GetThemeConfigurationUiColorPalette... uiColorPalettes) {
            return uiColorPalettes(List.of(uiColorPalettes));
        }
        public GetThemeConfiguration build() {
            final var o = new GetThemeConfiguration();
            o.dataColorPalettes = dataColorPalettes;
            o.sheets = sheets;
            o.typographies = typographies;
            o.uiColorPalettes = uiColorPalettes;
            return o;
        }
    }
}
