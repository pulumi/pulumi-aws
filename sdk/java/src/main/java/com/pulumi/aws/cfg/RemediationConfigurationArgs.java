// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cfg;

import com.pulumi.aws.cfg.inputs.RemediationConfigurationExecutionControlsArgs;
import com.pulumi.aws.cfg.inputs.RemediationConfigurationParameterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RemediationConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final RemediationConfigurationArgs Empty = new RemediationConfigurationArgs();

    @Import(name="automatic")
    private @Nullable Output<Boolean> automatic;

    public Optional<Output<Boolean>> automatic() {
        return Optional.ofNullable(this.automatic);
    }

    @Import(name="configRuleName", required=true)
    private Output<String> configRuleName;

    public Output<String> configRuleName() {
        return this.configRuleName;
    }

    @Import(name="executionControls")
    private @Nullable Output<RemediationConfigurationExecutionControlsArgs> executionControls;

    public Optional<Output<RemediationConfigurationExecutionControlsArgs>> executionControls() {
        return Optional.ofNullable(this.executionControls);
    }

    @Import(name="maximumAutomaticAttempts")
    private @Nullable Output<Integer> maximumAutomaticAttempts;

    public Optional<Output<Integer>> maximumAutomaticAttempts() {
        return Optional.ofNullable(this.maximumAutomaticAttempts);
    }

    @Import(name="parameters")
    private @Nullable Output<List<RemediationConfigurationParameterArgs>> parameters;

    public Optional<Output<List<RemediationConfigurationParameterArgs>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    @Import(name="resourceType")
    private @Nullable Output<String> resourceType;

    public Optional<Output<String>> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }

    @Import(name="retryAttemptSeconds")
    private @Nullable Output<Integer> retryAttemptSeconds;

    public Optional<Output<Integer>> retryAttemptSeconds() {
        return Optional.ofNullable(this.retryAttemptSeconds);
    }

    @Import(name="targetId", required=true)
    private Output<String> targetId;

    public Output<String> targetId() {
        return this.targetId;
    }

    @Import(name="targetType", required=true)
    private Output<String> targetType;

    public Output<String> targetType() {
        return this.targetType;
    }

    @Import(name="targetVersion")
    private @Nullable Output<String> targetVersion;

    public Optional<Output<String>> targetVersion() {
        return Optional.ofNullable(this.targetVersion);
    }

    private RemediationConfigurationArgs() {}

    private RemediationConfigurationArgs(RemediationConfigurationArgs $) {
        this.automatic = $.automatic;
        this.configRuleName = $.configRuleName;
        this.executionControls = $.executionControls;
        this.maximumAutomaticAttempts = $.maximumAutomaticAttempts;
        this.parameters = $.parameters;
        this.resourceType = $.resourceType;
        this.retryAttemptSeconds = $.retryAttemptSeconds;
        this.targetId = $.targetId;
        this.targetType = $.targetType;
        this.targetVersion = $.targetVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RemediationConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RemediationConfigurationArgs $;

        public Builder() {
            $ = new RemediationConfigurationArgs();
        }

        public Builder(RemediationConfigurationArgs defaults) {
            $ = new RemediationConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder automatic(@Nullable Output<Boolean> automatic) {
            $.automatic = automatic;
            return this;
        }

        public Builder automatic(Boolean automatic) {
            return automatic(Output.of(automatic));
        }

        public Builder configRuleName(Output<String> configRuleName) {
            $.configRuleName = configRuleName;
            return this;
        }

        public Builder configRuleName(String configRuleName) {
            return configRuleName(Output.of(configRuleName));
        }

        public Builder executionControls(@Nullable Output<RemediationConfigurationExecutionControlsArgs> executionControls) {
            $.executionControls = executionControls;
            return this;
        }

        public Builder executionControls(RemediationConfigurationExecutionControlsArgs executionControls) {
            return executionControls(Output.of(executionControls));
        }

        public Builder maximumAutomaticAttempts(@Nullable Output<Integer> maximumAutomaticAttempts) {
            $.maximumAutomaticAttempts = maximumAutomaticAttempts;
            return this;
        }

        public Builder maximumAutomaticAttempts(Integer maximumAutomaticAttempts) {
            return maximumAutomaticAttempts(Output.of(maximumAutomaticAttempts));
        }

        public Builder parameters(@Nullable Output<List<RemediationConfigurationParameterArgs>> parameters) {
            $.parameters = parameters;
            return this;
        }

        public Builder parameters(List<RemediationConfigurationParameterArgs> parameters) {
            return parameters(Output.of(parameters));
        }

        public Builder parameters(RemediationConfigurationParameterArgs... parameters) {
            return parameters(List.of(parameters));
        }

        public Builder resourceType(@Nullable Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        public Builder retryAttemptSeconds(@Nullable Output<Integer> retryAttemptSeconds) {
            $.retryAttemptSeconds = retryAttemptSeconds;
            return this;
        }

        public Builder retryAttemptSeconds(Integer retryAttemptSeconds) {
            return retryAttemptSeconds(Output.of(retryAttemptSeconds));
        }

        public Builder targetId(Output<String> targetId) {
            $.targetId = targetId;
            return this;
        }

        public Builder targetId(String targetId) {
            return targetId(Output.of(targetId));
        }

        public Builder targetType(Output<String> targetType) {
            $.targetType = targetType;
            return this;
        }

        public Builder targetType(String targetType) {
            return targetType(Output.of(targetType));
        }

        public Builder targetVersion(@Nullable Output<String> targetVersion) {
            $.targetVersion = targetVersion;
            return this;
        }

        public Builder targetVersion(String targetVersion) {
            return targetVersion(Output.of(targetVersion));
        }

        public RemediationConfigurationArgs build() {
            $.configRuleName = Objects.requireNonNull($.configRuleName, "expected parameter 'configRuleName' to be non-null");
            $.targetId = Objects.requireNonNull($.targetId, "expected parameter 'targetId' to be non-null");
            $.targetType = Objects.requireNonNull($.targetType, "expected parameter 'targetType' to be non-null");
            return $;
        }
    }

}
