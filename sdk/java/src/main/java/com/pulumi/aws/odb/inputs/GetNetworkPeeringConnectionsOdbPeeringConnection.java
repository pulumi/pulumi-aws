// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.odb.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetNetworkPeeringConnectionsOdbPeeringConnection extends com.pulumi.resources.InvokeArgs {

    public static final GetNetworkPeeringConnectionsOdbPeeringConnection Empty = new GetNetworkPeeringConnectionsOdbPeeringConnection();

    /**
     * The Amazon Resource Name (ARN) for the  ODB network peering connection.
     * 
     */
    @Import(name="arn", required=true)
    private String arn;

    /**
     * @return The Amazon Resource Name (ARN) for the  ODB network peering connection.
     * 
     */
    public String arn() {
        return this.arn;
    }

    /**
     * Display name of the ODB network peering connection.
     * 
     */
    @Import(name="displayName", required=true)
    private String displayName;

    /**
     * @return Display name of the ODB network peering connection.
     * 
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * The unique identifier of the  ODB network peering connection.
     * 
     */
    @Import(name="id", required=true)
    private String id;

    /**
     * @return The unique identifier of the  ODB network peering connection.
     * 
     */
    public String id() {
        return this.id;
    }

    /**
     * ARN of the ODB network peering connection.
     * 
     */
    @Import(name="odbNetworkArn", required=true)
    private String odbNetworkArn;

    /**
     * @return ARN of the ODB network peering connection.
     * 
     */
    public String odbNetworkArn() {
        return this.odbNetworkArn;
    }

    /**
     * ARN of the peer network peering connection.
     * 
     */
    @Import(name="peerNetworkArn", required=true)
    private String peerNetworkArn;

    /**
     * @return ARN of the peer network peering connection.
     * 
     */
    public String peerNetworkArn() {
        return this.peerNetworkArn;
    }

    private GetNetworkPeeringConnectionsOdbPeeringConnection() {}

    private GetNetworkPeeringConnectionsOdbPeeringConnection(GetNetworkPeeringConnectionsOdbPeeringConnection $) {
        this.arn = $.arn;
        this.displayName = $.displayName;
        this.id = $.id;
        this.odbNetworkArn = $.odbNetworkArn;
        this.peerNetworkArn = $.peerNetworkArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetNetworkPeeringConnectionsOdbPeeringConnection defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetNetworkPeeringConnectionsOdbPeeringConnection $;

        public Builder() {
            $ = new GetNetworkPeeringConnectionsOdbPeeringConnection();
        }

        public Builder(GetNetworkPeeringConnectionsOdbPeeringConnection defaults) {
            $ = new GetNetworkPeeringConnectionsOdbPeeringConnection(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn The Amazon Resource Name (ARN) for the  ODB network peering connection.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param displayName Display name of the ODB network peering connection.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param id The unique identifier of the  ODB network peering connection.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            $.id = id;
            return this;
        }

        /**
         * @param odbNetworkArn ARN of the ODB network peering connection.
         * 
         * @return builder
         * 
         */
        public Builder odbNetworkArn(String odbNetworkArn) {
            $.odbNetworkArn = odbNetworkArn;
            return this;
        }

        /**
         * @param peerNetworkArn ARN of the peer network peering connection.
         * 
         * @return builder
         * 
         */
        public Builder peerNetworkArn(String peerNetworkArn) {
            $.peerNetworkArn = peerNetworkArn;
            return this;
        }

        public GetNetworkPeeringConnectionsOdbPeeringConnection build() {
            if ($.arn == null) {
                throw new MissingRequiredPropertyException("GetNetworkPeeringConnectionsOdbPeeringConnection", "arn");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("GetNetworkPeeringConnectionsOdbPeeringConnection", "displayName");
            }
            if ($.id == null) {
                throw new MissingRequiredPropertyException("GetNetworkPeeringConnectionsOdbPeeringConnection", "id");
            }
            if ($.odbNetworkArn == null) {
                throw new MissingRequiredPropertyException("GetNetworkPeeringConnectionsOdbPeeringConnection", "odbNetworkArn");
            }
            if ($.peerNetworkArn == null) {
                throw new MissingRequiredPropertyException("GetNetworkPeeringConnectionsOdbPeeringConnection", "peerNetworkArn");
            }
            return $;
        }
    }

}
