// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.odb.outputs;

import com.pulumi.aws.odb.outputs.GetNetworkManagedService;
import com.pulumi.aws.odb.outputs.GetNetworkOciDnsForwardingConfig;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetNetworkResult {
    /**
     * @return Amazon Resource Name (ARN) of the odb network resource.
     * 
     */
    private String arn;
    /**
     * @return The availability zone where the ODB network is located.
     * 
     */
    private String availabilityZone;
    /**
     * @return The AZ ID of the AZ where the ODB network is located.
     * 
     */
    private String availabilityZoneId;
    /**
     * @return The CIDR range of the backup subnet for the ODB network.
     * 
     */
    private String backupSubnetCidr;
    /**
     * @return The CIDR notation for the network resource.
     * 
     */
    private String clientSubnetCidr;
    /**
     * @return The date and time when the ODB network was created.
     * 
     */
    private String createdAt;
    /**
     * @return The name of the custom domain that the network is located.
     * 
     */
    private String customDomainName;
    /**
     * @return The default DNS prefix for the network resource.
     * 
     */
    private String defaultDnsPrefix;
    /**
     * @return Display name for the network resource.
     * 
     */
    private String displayName;
    /**
     * @return Unique identifier of the odb network resource.
     * 
     */
    private String id;
    /**
     * @return The managed services configuration for the ODB network.
     * 
     */
    private List<GetNetworkManagedService> managedServices;
    private List<GetNetworkOciDnsForwardingConfig> ociDnsForwardingConfigs;
    /**
     * @return The unique identifier of the OCI network anchor for the ODB network.
     * 
     */
    private String ociNetworkAnchorId;
    /**
     * @return The URL of the OCI network anchor for the ODB network.
     * 
     */
    private String ociNetworkAnchorUrl;
    /**
     * @return The name of the OCI resource anchor for the ODB network.
     * 
     */
    private String ociResourceAnchorName;
    /**
     * @return The unique identifier  Oracle Cloud ID (OCID) of the OCI VCN for the ODB network.
     * 
     */
    private String ociVcnId;
    /**
     * @return The URL of the OCI VCN for the ODB network.
     * 
     */
    private String ociVcnUrl;
    /**
     * @return The list of CIDR ranges from the peered VPC that are allowed access to the ODB network. Please refer odb network peering documentation.
     * 
     */
    private List<String> peeredCidrs;
    /**
     * @return The amount of progress made on the current operation on the ODB network, expressed as a percentage.
     * 
     */
    private Double percentProgress;
    private String region;
    /**
     * @return The status of the network resource.
     * 
     */
    private String status;
    /**
     * @return Additional information about the current status of the ODB network.
     * 
     */
    private String statusReason;
    private Map<String,String> tags;

    private GetNetworkResult() {}
    /**
     * @return Amazon Resource Name (ARN) of the odb network resource.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return The availability zone where the ODB network is located.
     * 
     */
    public String availabilityZone() {
        return this.availabilityZone;
    }
    /**
     * @return The AZ ID of the AZ where the ODB network is located.
     * 
     */
    public String availabilityZoneId() {
        return this.availabilityZoneId;
    }
    /**
     * @return The CIDR range of the backup subnet for the ODB network.
     * 
     */
    public String backupSubnetCidr() {
        return this.backupSubnetCidr;
    }
    /**
     * @return The CIDR notation for the network resource.
     * 
     */
    public String clientSubnetCidr() {
        return this.clientSubnetCidr;
    }
    /**
     * @return The date and time when the ODB network was created.
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return The name of the custom domain that the network is located.
     * 
     */
    public String customDomainName() {
        return this.customDomainName;
    }
    /**
     * @return The default DNS prefix for the network resource.
     * 
     */
    public String defaultDnsPrefix() {
        return this.defaultDnsPrefix;
    }
    /**
     * @return Display name for the network resource.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Unique identifier of the odb network resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The managed services configuration for the ODB network.
     * 
     */
    public List<GetNetworkManagedService> managedServices() {
        return this.managedServices;
    }
    public List<GetNetworkOciDnsForwardingConfig> ociDnsForwardingConfigs() {
        return this.ociDnsForwardingConfigs;
    }
    /**
     * @return The unique identifier of the OCI network anchor for the ODB network.
     * 
     */
    public String ociNetworkAnchorId() {
        return this.ociNetworkAnchorId;
    }
    /**
     * @return The URL of the OCI network anchor for the ODB network.
     * 
     */
    public String ociNetworkAnchorUrl() {
        return this.ociNetworkAnchorUrl;
    }
    /**
     * @return The name of the OCI resource anchor for the ODB network.
     * 
     */
    public String ociResourceAnchorName() {
        return this.ociResourceAnchorName;
    }
    /**
     * @return The unique identifier  Oracle Cloud ID (OCID) of the OCI VCN for the ODB network.
     * 
     */
    public String ociVcnId() {
        return this.ociVcnId;
    }
    /**
     * @return The URL of the OCI VCN for the ODB network.
     * 
     */
    public String ociVcnUrl() {
        return this.ociVcnUrl;
    }
    /**
     * @return The list of CIDR ranges from the peered VPC that are allowed access to the ODB network. Please refer odb network peering documentation.
     * 
     */
    public List<String> peeredCidrs() {
        return this.peeredCidrs;
    }
    /**
     * @return The amount of progress made on the current operation on the ODB network, expressed as a percentage.
     * 
     */
    public Double percentProgress() {
        return this.percentProgress;
    }
    public String region() {
        return this.region;
    }
    /**
     * @return The status of the network resource.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Additional information about the current status of the ODB network.
     * 
     */
    public String statusReason() {
        return this.statusReason;
    }
    public Map<String,String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private String availabilityZone;
        private String availabilityZoneId;
        private String backupSubnetCidr;
        private String clientSubnetCidr;
        private String createdAt;
        private String customDomainName;
        private String defaultDnsPrefix;
        private String displayName;
        private String id;
        private List<GetNetworkManagedService> managedServices;
        private List<GetNetworkOciDnsForwardingConfig> ociDnsForwardingConfigs;
        private String ociNetworkAnchorId;
        private String ociNetworkAnchorUrl;
        private String ociResourceAnchorName;
        private String ociVcnId;
        private String ociVcnUrl;
        private List<String> peeredCidrs;
        private Double percentProgress;
        private String region;
        private String status;
        private String statusReason;
        private Map<String,String> tags;
        public Builder() {}
        public Builder(GetNetworkResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.availabilityZone = defaults.availabilityZone;
    	      this.availabilityZoneId = defaults.availabilityZoneId;
    	      this.backupSubnetCidr = defaults.backupSubnetCidr;
    	      this.clientSubnetCidr = defaults.clientSubnetCidr;
    	      this.createdAt = defaults.createdAt;
    	      this.customDomainName = defaults.customDomainName;
    	      this.defaultDnsPrefix = defaults.defaultDnsPrefix;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.managedServices = defaults.managedServices;
    	      this.ociDnsForwardingConfigs = defaults.ociDnsForwardingConfigs;
    	      this.ociNetworkAnchorId = defaults.ociNetworkAnchorId;
    	      this.ociNetworkAnchorUrl = defaults.ociNetworkAnchorUrl;
    	      this.ociResourceAnchorName = defaults.ociResourceAnchorName;
    	      this.ociVcnId = defaults.ociVcnId;
    	      this.ociVcnUrl = defaults.ociVcnUrl;
    	      this.peeredCidrs = defaults.peeredCidrs;
    	      this.percentProgress = defaults.percentProgress;
    	      this.region = defaults.region;
    	      this.status = defaults.status;
    	      this.statusReason = defaults.statusReason;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            if (arn == null) {
              throw new MissingRequiredPropertyException("GetNetworkResult", "arn");
            }
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder availabilityZone(String availabilityZone) {
            if (availabilityZone == null) {
              throw new MissingRequiredPropertyException("GetNetworkResult", "availabilityZone");
            }
            this.availabilityZone = availabilityZone;
            return this;
        }
        @CustomType.Setter
        public Builder availabilityZoneId(String availabilityZoneId) {
            if (availabilityZoneId == null) {
              throw new MissingRequiredPropertyException("GetNetworkResult", "availabilityZoneId");
            }
            this.availabilityZoneId = availabilityZoneId;
            return this;
        }
        @CustomType.Setter
        public Builder backupSubnetCidr(String backupSubnetCidr) {
            if (backupSubnetCidr == null) {
              throw new MissingRequiredPropertyException("GetNetworkResult", "backupSubnetCidr");
            }
            this.backupSubnetCidr = backupSubnetCidr;
            return this;
        }
        @CustomType.Setter
        public Builder clientSubnetCidr(String clientSubnetCidr) {
            if (clientSubnetCidr == null) {
              throw new MissingRequiredPropertyException("GetNetworkResult", "clientSubnetCidr");
            }
            this.clientSubnetCidr = clientSubnetCidr;
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetNetworkResult", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder customDomainName(String customDomainName) {
            if (customDomainName == null) {
              throw new MissingRequiredPropertyException("GetNetworkResult", "customDomainName");
            }
            this.customDomainName = customDomainName;
            return this;
        }
        @CustomType.Setter
        public Builder defaultDnsPrefix(String defaultDnsPrefix) {
            if (defaultDnsPrefix == null) {
              throw new MissingRequiredPropertyException("GetNetworkResult", "defaultDnsPrefix");
            }
            this.defaultDnsPrefix = defaultDnsPrefix;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetNetworkResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetNetworkResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder managedServices(List<GetNetworkManagedService> managedServices) {
            if (managedServices == null) {
              throw new MissingRequiredPropertyException("GetNetworkResult", "managedServices");
            }
            this.managedServices = managedServices;
            return this;
        }
        public Builder managedServices(GetNetworkManagedService... managedServices) {
            return managedServices(List.of(managedServices));
        }
        @CustomType.Setter
        public Builder ociDnsForwardingConfigs(List<GetNetworkOciDnsForwardingConfig> ociDnsForwardingConfigs) {
            if (ociDnsForwardingConfigs == null) {
              throw new MissingRequiredPropertyException("GetNetworkResult", "ociDnsForwardingConfigs");
            }
            this.ociDnsForwardingConfigs = ociDnsForwardingConfigs;
            return this;
        }
        public Builder ociDnsForwardingConfigs(GetNetworkOciDnsForwardingConfig... ociDnsForwardingConfigs) {
            return ociDnsForwardingConfigs(List.of(ociDnsForwardingConfigs));
        }
        @CustomType.Setter
        public Builder ociNetworkAnchorId(String ociNetworkAnchorId) {
            if (ociNetworkAnchorId == null) {
              throw new MissingRequiredPropertyException("GetNetworkResult", "ociNetworkAnchorId");
            }
            this.ociNetworkAnchorId = ociNetworkAnchorId;
            return this;
        }
        @CustomType.Setter
        public Builder ociNetworkAnchorUrl(String ociNetworkAnchorUrl) {
            if (ociNetworkAnchorUrl == null) {
              throw new MissingRequiredPropertyException("GetNetworkResult", "ociNetworkAnchorUrl");
            }
            this.ociNetworkAnchorUrl = ociNetworkAnchorUrl;
            return this;
        }
        @CustomType.Setter
        public Builder ociResourceAnchorName(String ociResourceAnchorName) {
            if (ociResourceAnchorName == null) {
              throw new MissingRequiredPropertyException("GetNetworkResult", "ociResourceAnchorName");
            }
            this.ociResourceAnchorName = ociResourceAnchorName;
            return this;
        }
        @CustomType.Setter
        public Builder ociVcnId(String ociVcnId) {
            if (ociVcnId == null) {
              throw new MissingRequiredPropertyException("GetNetworkResult", "ociVcnId");
            }
            this.ociVcnId = ociVcnId;
            return this;
        }
        @CustomType.Setter
        public Builder ociVcnUrl(String ociVcnUrl) {
            if (ociVcnUrl == null) {
              throw new MissingRequiredPropertyException("GetNetworkResult", "ociVcnUrl");
            }
            this.ociVcnUrl = ociVcnUrl;
            return this;
        }
        @CustomType.Setter
        public Builder peeredCidrs(List<String> peeredCidrs) {
            if (peeredCidrs == null) {
              throw new MissingRequiredPropertyException("GetNetworkResult", "peeredCidrs");
            }
            this.peeredCidrs = peeredCidrs;
            return this;
        }
        public Builder peeredCidrs(String... peeredCidrs) {
            return peeredCidrs(List.of(peeredCidrs));
        }
        @CustomType.Setter
        public Builder percentProgress(Double percentProgress) {
            if (percentProgress == null) {
              throw new MissingRequiredPropertyException("GetNetworkResult", "percentProgress");
            }
            this.percentProgress = percentProgress;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetNetworkResult", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetNetworkResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder statusReason(String statusReason) {
            if (statusReason == null) {
              throw new MissingRequiredPropertyException("GetNetworkResult", "statusReason");
            }
            this.statusReason = statusReason;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetNetworkResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        public GetNetworkResult build() {
            final var _resultValue = new GetNetworkResult();
            _resultValue.arn = arn;
            _resultValue.availabilityZone = availabilityZone;
            _resultValue.availabilityZoneId = availabilityZoneId;
            _resultValue.backupSubnetCidr = backupSubnetCidr;
            _resultValue.clientSubnetCidr = clientSubnetCidr;
            _resultValue.createdAt = createdAt;
            _resultValue.customDomainName = customDomainName;
            _resultValue.defaultDnsPrefix = defaultDnsPrefix;
            _resultValue.displayName = displayName;
            _resultValue.id = id;
            _resultValue.managedServices = managedServices;
            _resultValue.ociDnsForwardingConfigs = ociDnsForwardingConfigs;
            _resultValue.ociNetworkAnchorId = ociNetworkAnchorId;
            _resultValue.ociNetworkAnchorUrl = ociNetworkAnchorUrl;
            _resultValue.ociResourceAnchorName = ociResourceAnchorName;
            _resultValue.ociVcnId = ociVcnId;
            _resultValue.ociVcnUrl = ociVcnUrl;
            _resultValue.peeredCidrs = peeredCidrs;
            _resultValue.percentProgress = percentProgress;
            _resultValue.region = region;
            _resultValue.status = status;
            _resultValue.statusReason = statusReason;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
