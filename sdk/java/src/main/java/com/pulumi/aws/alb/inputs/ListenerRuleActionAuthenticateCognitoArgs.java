// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.alb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ListenerRuleActionAuthenticateCognitoArgs extends com.pulumi.resources.ResourceArgs {

    public static final ListenerRuleActionAuthenticateCognitoArgs Empty = new ListenerRuleActionAuthenticateCognitoArgs();

    @Import(name="authenticationRequestExtraParams")
    private @Nullable Output<Map<String,String>> authenticationRequestExtraParams;

    public Optional<Output<Map<String,String>>> authenticationRequestExtraParams() {
        return Optional.ofNullable(this.authenticationRequestExtraParams);
    }

    @Import(name="onUnauthenticatedRequest")
    private @Nullable Output<String> onUnauthenticatedRequest;

    public Optional<Output<String>> onUnauthenticatedRequest() {
        return Optional.ofNullable(this.onUnauthenticatedRequest);
    }

    @Import(name="scope")
    private @Nullable Output<String> scope;

    public Optional<Output<String>> scope() {
        return Optional.ofNullable(this.scope);
    }

    @Import(name="sessionCookieName")
    private @Nullable Output<String> sessionCookieName;

    public Optional<Output<String>> sessionCookieName() {
        return Optional.ofNullable(this.sessionCookieName);
    }

    @Import(name="sessionTimeout")
    private @Nullable Output<Integer> sessionTimeout;

    public Optional<Output<Integer>> sessionTimeout() {
        return Optional.ofNullable(this.sessionTimeout);
    }

    @Import(name="userPoolArn", required=true)
    private Output<String> userPoolArn;

    public Output<String> userPoolArn() {
        return this.userPoolArn;
    }

    @Import(name="userPoolClientId", required=true)
    private Output<String> userPoolClientId;

    public Output<String> userPoolClientId() {
        return this.userPoolClientId;
    }

    @Import(name="userPoolDomain", required=true)
    private Output<String> userPoolDomain;

    public Output<String> userPoolDomain() {
        return this.userPoolDomain;
    }

    private ListenerRuleActionAuthenticateCognitoArgs() {}

    private ListenerRuleActionAuthenticateCognitoArgs(ListenerRuleActionAuthenticateCognitoArgs $) {
        this.authenticationRequestExtraParams = $.authenticationRequestExtraParams;
        this.onUnauthenticatedRequest = $.onUnauthenticatedRequest;
        this.scope = $.scope;
        this.sessionCookieName = $.sessionCookieName;
        this.sessionTimeout = $.sessionTimeout;
        this.userPoolArn = $.userPoolArn;
        this.userPoolClientId = $.userPoolClientId;
        this.userPoolDomain = $.userPoolDomain;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ListenerRuleActionAuthenticateCognitoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ListenerRuleActionAuthenticateCognitoArgs $;

        public Builder() {
            $ = new ListenerRuleActionAuthenticateCognitoArgs();
        }

        public Builder(ListenerRuleActionAuthenticateCognitoArgs defaults) {
            $ = new ListenerRuleActionAuthenticateCognitoArgs(Objects.requireNonNull(defaults));
        }

        public Builder authenticationRequestExtraParams(@Nullable Output<Map<String,String>> authenticationRequestExtraParams) {
            $.authenticationRequestExtraParams = authenticationRequestExtraParams;
            return this;
        }

        public Builder authenticationRequestExtraParams(Map<String,String> authenticationRequestExtraParams) {
            return authenticationRequestExtraParams(Output.of(authenticationRequestExtraParams));
        }

        public Builder onUnauthenticatedRequest(@Nullable Output<String> onUnauthenticatedRequest) {
            $.onUnauthenticatedRequest = onUnauthenticatedRequest;
            return this;
        }

        public Builder onUnauthenticatedRequest(String onUnauthenticatedRequest) {
            return onUnauthenticatedRequest(Output.of(onUnauthenticatedRequest));
        }

        public Builder scope(@Nullable Output<String> scope) {
            $.scope = scope;
            return this;
        }

        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        public Builder sessionCookieName(@Nullable Output<String> sessionCookieName) {
            $.sessionCookieName = sessionCookieName;
            return this;
        }

        public Builder sessionCookieName(String sessionCookieName) {
            return sessionCookieName(Output.of(sessionCookieName));
        }

        public Builder sessionTimeout(@Nullable Output<Integer> sessionTimeout) {
            $.sessionTimeout = sessionTimeout;
            return this;
        }

        public Builder sessionTimeout(Integer sessionTimeout) {
            return sessionTimeout(Output.of(sessionTimeout));
        }

        public Builder userPoolArn(Output<String> userPoolArn) {
            $.userPoolArn = userPoolArn;
            return this;
        }

        public Builder userPoolArn(String userPoolArn) {
            return userPoolArn(Output.of(userPoolArn));
        }

        public Builder userPoolClientId(Output<String> userPoolClientId) {
            $.userPoolClientId = userPoolClientId;
            return this;
        }

        public Builder userPoolClientId(String userPoolClientId) {
            return userPoolClientId(Output.of(userPoolClientId));
        }

        public Builder userPoolDomain(Output<String> userPoolDomain) {
            $.userPoolDomain = userPoolDomain;
            return this;
        }

        public Builder userPoolDomain(String userPoolDomain) {
            return userPoolDomain(Output.of(userPoolDomain));
        }

        public ListenerRuleActionAuthenticateCognitoArgs build() {
            $.userPoolArn = Objects.requireNonNull($.userPoolArn, "expected parameter 'userPoolArn' to be non-null");
            $.userPoolClientId = Objects.requireNonNull($.userPoolClientId, "expected parameter 'userPoolClientId' to be non-null");
            $.userPoolDomain = Objects.requireNonNull($.userPoolDomain, "expected parameter 'userPoolDomain' to be non-null");
            return $;
        }
    }

}
