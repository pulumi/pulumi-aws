// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudformation.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StackState extends com.pulumi.resources.ResourceArgs {

    public static final StackState Empty = new StackState();

    @Import(name="capabilities")
    private @Nullable Output<List<String>> capabilities;

    public Optional<Output<List<String>>> capabilities() {
        return Optional.ofNullable(this.capabilities);
    }

    @Import(name="disableRollback")
    private @Nullable Output<Boolean> disableRollback;

    public Optional<Output<Boolean>> disableRollback() {
        return Optional.ofNullable(this.disableRollback);
    }

    @Import(name="iamRoleArn")
    private @Nullable Output<String> iamRoleArn;

    public Optional<Output<String>> iamRoleArn() {
        return Optional.ofNullable(this.iamRoleArn);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="notificationArns")
    private @Nullable Output<List<String>> notificationArns;

    public Optional<Output<List<String>>> notificationArns() {
        return Optional.ofNullable(this.notificationArns);
    }

    @Import(name="onFailure")
    private @Nullable Output<String> onFailure;

    public Optional<Output<String>> onFailure() {
        return Optional.ofNullable(this.onFailure);
    }

    @Import(name="outputs")
    private @Nullable Output<Map<String,String>> outputs;

    public Optional<Output<Map<String,String>>> outputs() {
        return Optional.ofNullable(this.outputs);
    }

    @Import(name="parameters")
    private @Nullable Output<Map<String,String>> parameters;

    public Optional<Output<Map<String,String>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    @Import(name="policyBody")
    private @Nullable Output<String> policyBody;

    public Optional<Output<String>> policyBody() {
        return Optional.ofNullable(this.policyBody);
    }

    @Import(name="policyUrl")
    private @Nullable Output<String> policyUrl;

    public Optional<Output<String>> policyUrl() {
        return Optional.ofNullable(this.policyUrl);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    @Import(name="templateBody")
    private @Nullable Output<String> templateBody;

    public Optional<Output<String>> templateBody() {
        return Optional.ofNullable(this.templateBody);
    }

    @Import(name="templateUrl")
    private @Nullable Output<String> templateUrl;

    public Optional<Output<String>> templateUrl() {
        return Optional.ofNullable(this.templateUrl);
    }

    @Import(name="timeoutInMinutes")
    private @Nullable Output<Integer> timeoutInMinutes;

    public Optional<Output<Integer>> timeoutInMinutes() {
        return Optional.ofNullable(this.timeoutInMinutes);
    }

    private StackState() {}

    private StackState(StackState $) {
        this.capabilities = $.capabilities;
        this.disableRollback = $.disableRollback;
        this.iamRoleArn = $.iamRoleArn;
        this.name = $.name;
        this.notificationArns = $.notificationArns;
        this.onFailure = $.onFailure;
        this.outputs = $.outputs;
        this.parameters = $.parameters;
        this.policyBody = $.policyBody;
        this.policyUrl = $.policyUrl;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.templateBody = $.templateBody;
        this.templateUrl = $.templateUrl;
        this.timeoutInMinutes = $.timeoutInMinutes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StackState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StackState $;

        public Builder() {
            $ = new StackState();
        }

        public Builder(StackState defaults) {
            $ = new StackState(Objects.requireNonNull(defaults));
        }

        public Builder capabilities(@Nullable Output<List<String>> capabilities) {
            $.capabilities = capabilities;
            return this;
        }

        public Builder capabilities(List<String> capabilities) {
            return capabilities(Output.of(capabilities));
        }

        public Builder capabilities(String... capabilities) {
            return capabilities(List.of(capabilities));
        }

        public Builder disableRollback(@Nullable Output<Boolean> disableRollback) {
            $.disableRollback = disableRollback;
            return this;
        }

        public Builder disableRollback(Boolean disableRollback) {
            return disableRollback(Output.of(disableRollback));
        }

        public Builder iamRoleArn(@Nullable Output<String> iamRoleArn) {
            $.iamRoleArn = iamRoleArn;
            return this;
        }

        public Builder iamRoleArn(String iamRoleArn) {
            return iamRoleArn(Output.of(iamRoleArn));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder notificationArns(@Nullable Output<List<String>> notificationArns) {
            $.notificationArns = notificationArns;
            return this;
        }

        public Builder notificationArns(List<String> notificationArns) {
            return notificationArns(Output.of(notificationArns));
        }

        public Builder notificationArns(String... notificationArns) {
            return notificationArns(List.of(notificationArns));
        }

        public Builder onFailure(@Nullable Output<String> onFailure) {
            $.onFailure = onFailure;
            return this;
        }

        public Builder onFailure(String onFailure) {
            return onFailure(Output.of(onFailure));
        }

        public Builder outputs(@Nullable Output<Map<String,String>> outputs) {
            $.outputs = outputs;
            return this;
        }

        public Builder outputs(Map<String,String> outputs) {
            return outputs(Output.of(outputs));
        }

        public Builder parameters(@Nullable Output<Map<String,String>> parameters) {
            $.parameters = parameters;
            return this;
        }

        public Builder parameters(Map<String,String> parameters) {
            return parameters(Output.of(parameters));
        }

        public Builder policyBody(@Nullable Output<String> policyBody) {
            $.policyBody = policyBody;
            return this;
        }

        public Builder policyBody(String policyBody) {
            return policyBody(Output.of(policyBody));
        }

        public Builder policyUrl(@Nullable Output<String> policyUrl) {
            $.policyUrl = policyUrl;
            return this;
        }

        public Builder policyUrl(String policyUrl) {
            return policyUrl(Output.of(policyUrl));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder templateBody(@Nullable Output<String> templateBody) {
            $.templateBody = templateBody;
            return this;
        }

        public Builder templateBody(String templateBody) {
            return templateBody(Output.of(templateBody));
        }

        public Builder templateUrl(@Nullable Output<String> templateUrl) {
            $.templateUrl = templateUrl;
            return this;
        }

        public Builder templateUrl(String templateUrl) {
            return templateUrl(Output.of(templateUrl));
        }

        public Builder timeoutInMinutes(@Nullable Output<Integer> timeoutInMinutes) {
            $.timeoutInMinutes = timeoutInMinutes;
            return this;
        }

        public Builder timeoutInMinutes(Integer timeoutInMinutes) {
            return timeoutInMinutes(Output.of(timeoutInMinutes));
        }

        public StackState build() {
            return $;
        }
    }

}
