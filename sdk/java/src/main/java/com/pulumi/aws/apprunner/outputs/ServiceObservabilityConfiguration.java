// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apprunner.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ServiceObservabilityConfiguration {
    /**
     * @return ARN of the observability configuration that is associated with the service.
     * 
     */
    private String observabilityConfigurationArn;
    /**
     * @return When `true`, an observability configuration resource is associated with the service.
     * 
     */
    private Boolean observabilityEnabled;

    private ServiceObservabilityConfiguration() {}
    /**
     * @return ARN of the observability configuration that is associated with the service.
     * 
     */
    public String observabilityConfigurationArn() {
        return this.observabilityConfigurationArn;
    }
    /**
     * @return When `true`, an observability configuration resource is associated with the service.
     * 
     */
    public Boolean observabilityEnabled() {
        return this.observabilityEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceObservabilityConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String observabilityConfigurationArn;
        private Boolean observabilityEnabled;
        public Builder() {}
        public Builder(ServiceObservabilityConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.observabilityConfigurationArn = defaults.observabilityConfigurationArn;
    	      this.observabilityEnabled = defaults.observabilityEnabled;
        }

        @CustomType.Setter
        public Builder observabilityConfigurationArn(String observabilityConfigurationArn) {
            this.observabilityConfigurationArn = Objects.requireNonNull(observabilityConfigurationArn);
            return this;
        }
        @CustomType.Setter
        public Builder observabilityEnabled(Boolean observabilityEnabled) {
            this.observabilityEnabled = Objects.requireNonNull(observabilityEnabled);
            return this;
        }
        public ServiceObservabilityConfiguration build() {
            final var o = new ServiceObservabilityConfiguration();
            o.observabilityConfigurationArn = observabilityConfigurationArn;
            o.observabilityEnabled = observabilityEnabled;
            return o;
        }
    }
}
