// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.FieldSortOptions;
import com.pulumi.aws.quicksight.outputs.ItemsLimitConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VisualsHeatMapVisualChartConfigurationSortConfiguration {
    private @Nullable ItemsLimitConfiguration heatMapColumnItemsLimitConfiguration;
    private @Nullable List<FieldSortOptions> heatMapColumnSorts;
    private @Nullable ItemsLimitConfiguration heatMapRowItemsLimitConfiguration;
    private @Nullable List<FieldSortOptions> heatMapRowSorts;

    private VisualsHeatMapVisualChartConfigurationSortConfiguration() {}
    public Optional<ItemsLimitConfiguration> heatMapColumnItemsLimitConfiguration() {
        return Optional.ofNullable(this.heatMapColumnItemsLimitConfiguration);
    }
    public List<FieldSortOptions> heatMapColumnSorts() {
        return this.heatMapColumnSorts == null ? List.of() : this.heatMapColumnSorts;
    }
    public Optional<ItemsLimitConfiguration> heatMapRowItemsLimitConfiguration() {
        return Optional.ofNullable(this.heatMapRowItemsLimitConfiguration);
    }
    public List<FieldSortOptions> heatMapRowSorts() {
        return this.heatMapRowSorts == null ? List.of() : this.heatMapRowSorts;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VisualsHeatMapVisualChartConfigurationSortConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ItemsLimitConfiguration heatMapColumnItemsLimitConfiguration;
        private @Nullable List<FieldSortOptions> heatMapColumnSorts;
        private @Nullable ItemsLimitConfiguration heatMapRowItemsLimitConfiguration;
        private @Nullable List<FieldSortOptions> heatMapRowSorts;
        public Builder() {}
        public Builder(VisualsHeatMapVisualChartConfigurationSortConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.heatMapColumnItemsLimitConfiguration = defaults.heatMapColumnItemsLimitConfiguration;
    	      this.heatMapColumnSorts = defaults.heatMapColumnSorts;
    	      this.heatMapRowItemsLimitConfiguration = defaults.heatMapRowItemsLimitConfiguration;
    	      this.heatMapRowSorts = defaults.heatMapRowSorts;
        }

        @CustomType.Setter
        public Builder heatMapColumnItemsLimitConfiguration(@Nullable ItemsLimitConfiguration heatMapColumnItemsLimitConfiguration) {

            this.heatMapColumnItemsLimitConfiguration = heatMapColumnItemsLimitConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder heatMapColumnSorts(@Nullable List<FieldSortOptions> heatMapColumnSorts) {

            this.heatMapColumnSorts = heatMapColumnSorts;
            return this;
        }
        public Builder heatMapColumnSorts(FieldSortOptions... heatMapColumnSorts) {
            return heatMapColumnSorts(List.of(heatMapColumnSorts));
        }
        @CustomType.Setter
        public Builder heatMapRowItemsLimitConfiguration(@Nullable ItemsLimitConfiguration heatMapRowItemsLimitConfiguration) {

            this.heatMapRowItemsLimitConfiguration = heatMapRowItemsLimitConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder heatMapRowSorts(@Nullable List<FieldSortOptions> heatMapRowSorts) {

            this.heatMapRowSorts = heatMapRowSorts;
            return this;
        }
        public Builder heatMapRowSorts(FieldSortOptions... heatMapRowSorts) {
            return heatMapRowSorts(List.of(heatMapRowSorts));
        }
        public VisualsHeatMapVisualChartConfigurationSortConfiguration build() {
            final var _resultValue = new VisualsHeatMapVisualChartConfigurationSortConfiguration();
            _resultValue.heatMapColumnItemsLimitConfiguration = heatMapColumnItemsLimitConfiguration;
            _resultValue.heatMapColumnSorts = heatMapColumnSorts;
            _resultValue.heatMapRowItemsLimitConfiguration = heatMapRowItemsLimitConfiguration;
            _resultValue.heatMapRowSorts = heatMapRowSorts;
            return _resultValue;
        }
    }
}
