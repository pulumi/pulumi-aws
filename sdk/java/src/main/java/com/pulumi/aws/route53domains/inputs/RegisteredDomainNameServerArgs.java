// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.route53domains.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RegisteredDomainNameServerArgs extends com.pulumi.resources.ResourceArgs {

    public static final RegisteredDomainNameServerArgs Empty = new RegisteredDomainNameServerArgs();

    /**
     * Glue IP addresses of a name server. The list can contain only one IPv4 and one IPv6 address.
     * 
     */
    @Import(name="glueIps")
    private @Nullable Output<List<String>> glueIps;

    /**
     * @return Glue IP addresses of a name server. The list can contain only one IPv4 and one IPv6 address.
     * 
     */
    public Optional<Output<List<String>>> glueIps() {
        return Optional.ofNullable(this.glueIps);
    }

    /**
     * The fully qualified host name of the name server.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The fully qualified host name of the name server.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private RegisteredDomainNameServerArgs() {}

    private RegisteredDomainNameServerArgs(RegisteredDomainNameServerArgs $) {
        this.glueIps = $.glueIps;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RegisteredDomainNameServerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RegisteredDomainNameServerArgs $;

        public Builder() {
            $ = new RegisteredDomainNameServerArgs();
        }

        public Builder(RegisteredDomainNameServerArgs defaults) {
            $ = new RegisteredDomainNameServerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param glueIps Glue IP addresses of a name server. The list can contain only one IPv4 and one IPv6 address.
         * 
         * @return builder
         * 
         */
        public Builder glueIps(@Nullable Output<List<String>> glueIps) {
            $.glueIps = glueIps;
            return this;
        }

        /**
         * @param glueIps Glue IP addresses of a name server. The list can contain only one IPv4 and one IPv6 address.
         * 
         * @return builder
         * 
         */
        public Builder glueIps(List<String> glueIps) {
            return glueIps(Output.of(glueIps));
        }

        /**
         * @param glueIps Glue IP addresses of a name server. The list can contain only one IPv4 and one IPv6 address.
         * 
         * @return builder
         * 
         */
        public Builder glueIps(String... glueIps) {
            return glueIps(List.of(glueIps));
        }

        /**
         * @param name The fully qualified host name of the name server.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The fully qualified host name of the name server.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public RegisteredDomainNameServerArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
