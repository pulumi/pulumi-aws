// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dynamodb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TablePointInTimeRecoveryArgs extends com.pulumi.resources.ResourceArgs {

    public static final TablePointInTimeRecoveryArgs Empty = new TablePointInTimeRecoveryArgs();

    /**
     * Whether to enable point-in-time recovery. It can take 10 minutes to enable for new tables. If the `point_in_time_recovery` block is not provided, this defaults to `false`.
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Whether to enable point-in-time recovery. It can take 10 minutes to enable for new tables. If the `point_in_time_recovery` block is not provided, this defaults to `false`.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * Number of preceding days for which continuous backups are taken and maintained. Default is 35.
     * 
     */
    @Import(name="recoveryPeriodInDays")
    private @Nullable Output<Integer> recoveryPeriodInDays;

    /**
     * @return Number of preceding days for which continuous backups are taken and maintained. Default is 35.
     * 
     */
    public Optional<Output<Integer>> recoveryPeriodInDays() {
        return Optional.ofNullable(this.recoveryPeriodInDays);
    }

    private TablePointInTimeRecoveryArgs() {}

    private TablePointInTimeRecoveryArgs(TablePointInTimeRecoveryArgs $) {
        this.enabled = $.enabled;
        this.recoveryPeriodInDays = $.recoveryPeriodInDays;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TablePointInTimeRecoveryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TablePointInTimeRecoveryArgs $;

        public Builder() {
            $ = new TablePointInTimeRecoveryArgs();
        }

        public Builder(TablePointInTimeRecoveryArgs defaults) {
            $ = new TablePointInTimeRecoveryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Whether to enable point-in-time recovery. It can take 10 minutes to enable for new tables. If the `point_in_time_recovery` block is not provided, this defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether to enable point-in-time recovery. It can take 10 minutes to enable for new tables. If the `point_in_time_recovery` block is not provided, this defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param recoveryPeriodInDays Number of preceding days for which continuous backups are taken and maintained. Default is 35.
         * 
         * @return builder
         * 
         */
        public Builder recoveryPeriodInDays(@Nullable Output<Integer> recoveryPeriodInDays) {
            $.recoveryPeriodInDays = recoveryPeriodInDays;
            return this;
        }

        /**
         * @param recoveryPeriodInDays Number of preceding days for which continuous backups are taken and maintained. Default is 35.
         * 
         * @return builder
         * 
         */
        public Builder recoveryPeriodInDays(Integer recoveryPeriodInDays) {
            return recoveryPeriodInDays(Output.of(recoveryPeriodInDays));
        }

        public TablePointInTimeRecoveryArgs build() {
            if ($.enabled == null) {
                throw new MissingRequiredPropertyException("TablePointInTimeRecoveryArgs", "enabled");
            }
            return $;
        }
    }

}
