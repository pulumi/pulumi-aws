// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.applicationloadbalancing.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetLoadBalancerPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetLoadBalancerPlainArgs Empty = new GetLoadBalancerPlainArgs();

    /**
     * Full ARN of the load balancer.
     * 
     */
    @Import(name="arn")
    private @Nullable String arn;

    /**
     * @return Full ARN of the load balancer.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * Unique name of the load balancer.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return Unique name of the load balancer.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Mapping of tags, each pair of which must exactly match a pair on the desired load balancer.
     * 
     * &gt; **NOTE:** When both `arn` and `name` are specified, `arn` takes precedence. `tags` has lowest precedence.
     * 
     */
    @Import(name="tags")
    private @Nullable Map<String,String> tags;

    /**
     * @return Mapping of tags, each pair of which must exactly match a pair on the desired load balancer.
     * 
     * &gt; **NOTE:** When both `arn` and `name` are specified, `arn` takes precedence. `tags` has lowest precedence.
     * 
     */
    public Optional<Map<String,String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private GetLoadBalancerPlainArgs() {}

    private GetLoadBalancerPlainArgs(GetLoadBalancerPlainArgs $) {
        this.arn = $.arn;
        this.name = $.name;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLoadBalancerPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLoadBalancerPlainArgs $;

        public Builder() {
            $ = new GetLoadBalancerPlainArgs();
        }

        public Builder(GetLoadBalancerPlainArgs defaults) {
            $ = new GetLoadBalancerPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn Full ARN of the load balancer.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable String arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param name Unique name of the load balancer.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param tags Mapping of tags, each pair of which must exactly match a pair on the desired load balancer.
         * 
         * &gt; **NOTE:** When both `arn` and `name` are specified, `arn` takes precedence. `tags` has lowest precedence.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Map<String,String> tags) {
            $.tags = tags;
            return this;
        }

        public GetLoadBalancerPlainArgs build() {
            return $;
        }
    }

}
