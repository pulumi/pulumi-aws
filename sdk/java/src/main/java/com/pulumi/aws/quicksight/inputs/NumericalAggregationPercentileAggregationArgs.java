// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NumericalAggregationPercentileAggregationArgs extends com.pulumi.resources.ResourceArgs {

    public static final NumericalAggregationPercentileAggregationArgs Empty = new NumericalAggregationPercentileAggregationArgs();

    @Import(name="percentileValue")
    private @Nullable Output<Double> percentileValue;

    public Optional<Output<Double>> percentileValue() {
        return Optional.ofNullable(this.percentileValue);
    }

    private NumericalAggregationPercentileAggregationArgs() {}

    private NumericalAggregationPercentileAggregationArgs(NumericalAggregationPercentileAggregationArgs $) {
        this.percentileValue = $.percentileValue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NumericalAggregationPercentileAggregationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NumericalAggregationPercentileAggregationArgs $;

        public Builder() {
            $ = new NumericalAggregationPercentileAggregationArgs();
        }

        public Builder(NumericalAggregationPercentileAggregationArgs defaults) {
            $ = new NumericalAggregationPercentileAggregationArgs(Objects.requireNonNull(defaults));
        }

        public Builder percentileValue(@Nullable Output<Double> percentileValue) {
            $.percentileValue = percentileValue;
            return this;
        }

        public Builder percentileValue(Double percentileValue) {
            return percentileValue(Output.of(percentileValue));
        }

        public NumericalAggregationPercentileAggregationArgs build() {
            return $;
        }
    }

}
