// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lightsail.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class DistributionCacheBehavior {
    /**
     * @return The cache behavior for the specified path.
     * 
     */
    private String behavior;
    /**
     * @return The path to a directory or file to cached, or not cache. Use an asterisk symbol to specify wildcard directories (path/to/assets/\*), and file types (\*.html, \*jpg, \*js). Directories and file paths are case-sensitive.
     * 
     */
    private String path;

    private DistributionCacheBehavior() {}
    /**
     * @return The cache behavior for the specified path.
     * 
     */
    public String behavior() {
        return this.behavior;
    }
    /**
     * @return The path to a directory or file to cached, or not cache. Use an asterisk symbol to specify wildcard directories (path/to/assets/\*), and file types (\*.html, \*jpg, \*js). Directories and file paths are case-sensitive.
     * 
     */
    public String path() {
        return this.path;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DistributionCacheBehavior defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String behavior;
        private String path;
        public Builder() {}
        public Builder(DistributionCacheBehavior defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.behavior = defaults.behavior;
    	      this.path = defaults.path;
        }

        @CustomType.Setter
        public Builder behavior(String behavior) {
            if (behavior == null) {
              throw new MissingRequiredPropertyException("DistributionCacheBehavior", "behavior");
            }
            this.behavior = behavior;
            return this;
        }
        @CustomType.Setter
        public Builder path(String path) {
            if (path == null) {
              throw new MissingRequiredPropertyException("DistributionCacheBehavior", "path");
            }
            this.path = path;
            return this;
        }
        public DistributionCacheBehavior build() {
            final var _resultValue = new DistributionCacheBehavior();
            _resultValue.behavior = behavior;
            _resultValue.path = path;
            return _resultValue;
        }
    }
}
