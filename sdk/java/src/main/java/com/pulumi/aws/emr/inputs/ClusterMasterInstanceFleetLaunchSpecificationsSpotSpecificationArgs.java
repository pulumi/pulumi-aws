// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.emr.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterMasterInstanceFleetLaunchSpecificationsSpotSpecificationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterMasterInstanceFleetLaunchSpecificationsSpotSpecificationArgs Empty = new ClusterMasterInstanceFleetLaunchSpecificationsSpotSpecificationArgs();

    @Import(name="allocationStrategy", required=true)
    private Output<String> allocationStrategy;

    public Output<String> allocationStrategy() {
        return this.allocationStrategy;
    }

    @Import(name="blockDurationMinutes")
    private @Nullable Output<Integer> blockDurationMinutes;

    public Optional<Output<Integer>> blockDurationMinutes() {
        return Optional.ofNullable(this.blockDurationMinutes);
    }

    @Import(name="timeoutAction", required=true)
    private Output<String> timeoutAction;

    public Output<String> timeoutAction() {
        return this.timeoutAction;
    }

    @Import(name="timeoutDurationMinutes", required=true)
    private Output<Integer> timeoutDurationMinutes;

    public Output<Integer> timeoutDurationMinutes() {
        return this.timeoutDurationMinutes;
    }

    private ClusterMasterInstanceFleetLaunchSpecificationsSpotSpecificationArgs() {}

    private ClusterMasterInstanceFleetLaunchSpecificationsSpotSpecificationArgs(ClusterMasterInstanceFleetLaunchSpecificationsSpotSpecificationArgs $) {
        this.allocationStrategy = $.allocationStrategy;
        this.blockDurationMinutes = $.blockDurationMinutes;
        this.timeoutAction = $.timeoutAction;
        this.timeoutDurationMinutes = $.timeoutDurationMinutes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterMasterInstanceFleetLaunchSpecificationsSpotSpecificationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterMasterInstanceFleetLaunchSpecificationsSpotSpecificationArgs $;

        public Builder() {
            $ = new ClusterMasterInstanceFleetLaunchSpecificationsSpotSpecificationArgs();
        }

        public Builder(ClusterMasterInstanceFleetLaunchSpecificationsSpotSpecificationArgs defaults) {
            $ = new ClusterMasterInstanceFleetLaunchSpecificationsSpotSpecificationArgs(Objects.requireNonNull(defaults));
        }

        public Builder allocationStrategy(Output<String> allocationStrategy) {
            $.allocationStrategy = allocationStrategy;
            return this;
        }

        public Builder allocationStrategy(String allocationStrategy) {
            return allocationStrategy(Output.of(allocationStrategy));
        }

        public Builder blockDurationMinutes(@Nullable Output<Integer> blockDurationMinutes) {
            $.blockDurationMinutes = blockDurationMinutes;
            return this;
        }

        public Builder blockDurationMinutes(Integer blockDurationMinutes) {
            return blockDurationMinutes(Output.of(blockDurationMinutes));
        }

        public Builder timeoutAction(Output<String> timeoutAction) {
            $.timeoutAction = timeoutAction;
            return this;
        }

        public Builder timeoutAction(String timeoutAction) {
            return timeoutAction(Output.of(timeoutAction));
        }

        public Builder timeoutDurationMinutes(Output<Integer> timeoutDurationMinutes) {
            $.timeoutDurationMinutes = timeoutDurationMinutes;
            return this;
        }

        public Builder timeoutDurationMinutes(Integer timeoutDurationMinutes) {
            return timeoutDurationMinutes(Output.of(timeoutDurationMinutes));
        }

        public ClusterMasterInstanceFleetLaunchSpecificationsSpotSpecificationArgs build() {
            $.allocationStrategy = Objects.requireNonNull($.allocationStrategy, "expected parameter 'allocationStrategy' to be non-null");
            $.timeoutAction = Objects.requireNonNull($.timeoutAction, "expected parameter 'timeoutAction' to be non-null");
            $.timeoutDurationMinutes = Objects.requireNonNull($.timeoutDurationMinutes, "expected parameter 'timeoutDurationMinutes' to be non-null");
            return $;
        }
    }

}
