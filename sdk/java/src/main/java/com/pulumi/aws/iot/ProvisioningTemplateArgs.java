// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iot;

import com.pulumi.aws.iot.inputs.ProvisioningTemplatePreProvisioningHookArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProvisioningTemplateArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProvisioningTemplateArgs Empty = new ProvisioningTemplateArgs();

    /**
     * The description of the fleet provisioning template.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the fleet provisioning template.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * True to enable the fleet provisioning template, otherwise false.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return True to enable the fleet provisioning template, otherwise false.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * The name of the fleet provisioning template.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the fleet provisioning template.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Creates a pre-provisioning hook template. Details below.
     * 
     */
    @Import(name="preProvisioningHook")
    private @Nullable Output<ProvisioningTemplatePreProvisioningHookArgs> preProvisioningHook;

    /**
     * @return Creates a pre-provisioning hook template. Details below.
     * 
     */
    public Optional<Output<ProvisioningTemplatePreProvisioningHookArgs>> preProvisioningHook() {
        return Optional.ofNullable(this.preProvisioningHook);
    }

    /**
     * The role ARN for the role associated with the fleet provisioning template. This IoT role grants permission to provision a device.
     * 
     */
    @Import(name="provisioningRoleArn", required=true)
    private Output<String> provisioningRoleArn;

    /**
     * @return The role ARN for the role associated with the fleet provisioning template. This IoT role grants permission to provision a device.
     * 
     */
    public Output<String> provisioningRoleArn() {
        return this.provisioningRoleArn;
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The JSON formatted contents of the fleet provisioning template.
     * 
     */
    @Import(name="templateBody", required=true)
    private Output<String> templateBody;

    /**
     * @return The JSON formatted contents of the fleet provisioning template.
     * 
     */
    public Output<String> templateBody() {
        return this.templateBody;
    }

    /**
     * The type you define in a provisioning template.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type you define in a provisioning template.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private ProvisioningTemplateArgs() {}

    private ProvisioningTemplateArgs(ProvisioningTemplateArgs $) {
        this.description = $.description;
        this.enabled = $.enabled;
        this.name = $.name;
        this.preProvisioningHook = $.preProvisioningHook;
        this.provisioningRoleArn = $.provisioningRoleArn;
        this.tags = $.tags;
        this.templateBody = $.templateBody;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProvisioningTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProvisioningTemplateArgs $;

        public Builder() {
            $ = new ProvisioningTemplateArgs();
        }

        public Builder(ProvisioningTemplateArgs defaults) {
            $ = new ProvisioningTemplateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of the fleet provisioning template.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the fleet provisioning template.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param enabled True to enable the fleet provisioning template, otherwise false.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled True to enable the fleet provisioning template, otherwise false.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param name The name of the fleet provisioning template.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the fleet provisioning template.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param preProvisioningHook Creates a pre-provisioning hook template. Details below.
         * 
         * @return builder
         * 
         */
        public Builder preProvisioningHook(@Nullable Output<ProvisioningTemplatePreProvisioningHookArgs> preProvisioningHook) {
            $.preProvisioningHook = preProvisioningHook;
            return this;
        }

        /**
         * @param preProvisioningHook Creates a pre-provisioning hook template. Details below.
         * 
         * @return builder
         * 
         */
        public Builder preProvisioningHook(ProvisioningTemplatePreProvisioningHookArgs preProvisioningHook) {
            return preProvisioningHook(Output.of(preProvisioningHook));
        }

        /**
         * @param provisioningRoleArn The role ARN for the role associated with the fleet provisioning template. This IoT role grants permission to provision a device.
         * 
         * @return builder
         * 
         */
        public Builder provisioningRoleArn(Output<String> provisioningRoleArn) {
            $.provisioningRoleArn = provisioningRoleArn;
            return this;
        }

        /**
         * @param provisioningRoleArn The role ARN for the role associated with the fleet provisioning template. This IoT role grants permission to provision a device.
         * 
         * @return builder
         * 
         */
        public Builder provisioningRoleArn(String provisioningRoleArn) {
            return provisioningRoleArn(Output.of(provisioningRoleArn));
        }

        /**
         * @param tags A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param templateBody The JSON formatted contents of the fleet provisioning template.
         * 
         * @return builder
         * 
         */
        public Builder templateBody(Output<String> templateBody) {
            $.templateBody = templateBody;
            return this;
        }

        /**
         * @param templateBody The JSON formatted contents of the fleet provisioning template.
         * 
         * @return builder
         * 
         */
        public Builder templateBody(String templateBody) {
            return templateBody(Output.of(templateBody));
        }

        /**
         * @param type The type you define in a provisioning template.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type you define in a provisioning template.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public ProvisioningTemplateArgs build() {
            if ($.provisioningRoleArn == null) {
                throw new MissingRequiredPropertyException("ProvisioningTemplateArgs", "provisioningRoleArn");
            }
            if ($.templateBody == null) {
                throw new MissingRequiredPropertyException("ProvisioningTemplateArgs", "templateBody");
            }
            return $;
        }
    }

}
