// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudwatch.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogs extends com.pulumi.resources.InvokeArgs {

    public static final GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogs Empty = new GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogs();

    /**
     * Name of the CloudWatch Log Group to send findings to.
     * 
     */
    @Import(name="logGroup", required=true)
    private String logGroup;

    /**
     * @return Name of the CloudWatch Log Group to send findings to.
     * 
     */
    public String logGroup() {
        return this.logGroup;
    }

    private GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogs() {}

    private GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogs(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogs $) {
        this.logGroup = $.logGroup;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogs $;

        public Builder() {
            $ = new GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogs();
        }

        public Builder(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogs defaults) {
            $ = new GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogs(Objects.requireNonNull(defaults));
        }

        /**
         * @param logGroup Name of the CloudWatch Log Group to send findings to.
         * 
         * @return builder
         * 
         */
        public Builder logGroup(String logGroup) {
            $.logGroup = logGroup;
            return this;
        }

        public GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogs build() {
            $.logGroup = Objects.requireNonNull($.logGroup, "expected parameter 'logGroup' to be non-null");
            return $;
        }
    }

}
