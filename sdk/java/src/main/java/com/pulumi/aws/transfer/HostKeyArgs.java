// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.transfer;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HostKeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final HostKeyArgs Empty = new HostKeyArgs();

    /**
     * Text description.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Text description.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Private key portion of an SSH key pair.
     * 
     */
    @Import(name="hostKeyBody")
    private @Nullable Output<String> hostKeyBody;

    /**
     * @return Private key portion of an SSH key pair.
     * 
     */
    public Optional<Output<String>> hostKeyBody() {
        return Optional.ofNullable(this.hostKeyBody);
    }

    /**
     * Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Server ID.
     * 
     */
    @Import(name="serverId", required=true)
    private Output<String> serverId;

    /**
     * @return Server ID.
     * 
     */
    public Output<String> serverId() {
        return this.serverId;
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private HostKeyArgs() {}

    private HostKeyArgs(HostKeyArgs $) {
        this.description = $.description;
        this.hostKeyBody = $.hostKeyBody;
        this.region = $.region;
        this.serverId = $.serverId;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HostKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HostKeyArgs $;

        public Builder() {
            $ = new HostKeyArgs();
        }

        public Builder(HostKeyArgs defaults) {
            $ = new HostKeyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Text description.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Text description.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param hostKeyBody Private key portion of an SSH key pair.
         * 
         * @return builder
         * 
         */
        public Builder hostKeyBody(@Nullable Output<String> hostKeyBody) {
            $.hostKeyBody = hostKeyBody;
            return this;
        }

        /**
         * @param hostKeyBody Private key portion of an SSH key pair.
         * 
         * @return builder
         * 
         */
        public Builder hostKeyBody(String hostKeyBody) {
            return hostKeyBody(Output.of(hostKeyBody));
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param serverId Server ID.
         * 
         * @return builder
         * 
         */
        public Builder serverId(Output<String> serverId) {
            $.serverId = serverId;
            return this;
        }

        /**
         * @param serverId Server ID.
         * 
         * @return builder
         * 
         */
        public Builder serverId(String serverId) {
            return serverId(Output.of(serverId));
        }

        /**
         * @param tags A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public HostKeyArgs build() {
            if ($.serverId == null) {
                throw new MissingRequiredPropertyException("HostKeyArgs", "serverId");
            }
            return $;
        }
    }

}
