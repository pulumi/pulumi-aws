// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.budgets.inputs;

import com.pulumi.aws.budgets.inputs.BudgetActionActionThresholdArgs;
import com.pulumi.aws.budgets.inputs.BudgetActionDefinitionArgs;
import com.pulumi.aws.budgets.inputs.BudgetActionSubscriberArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BudgetActionState extends com.pulumi.resources.ResourceArgs {

    public static final BudgetActionState Empty = new BudgetActionState();

    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    @Import(name="actionId")
    private @Nullable Output<String> actionId;

    public Optional<Output<String>> actionId() {
        return Optional.ofNullable(this.actionId);
    }

    @Import(name="actionThreshold")
    private @Nullable Output<BudgetActionActionThresholdArgs> actionThreshold;

    public Optional<Output<BudgetActionActionThresholdArgs>> actionThreshold() {
        return Optional.ofNullable(this.actionThreshold);
    }

    @Import(name="actionType")
    private @Nullable Output<String> actionType;

    public Optional<Output<String>> actionType() {
        return Optional.ofNullable(this.actionType);
    }

    @Import(name="approvalModel")
    private @Nullable Output<String> approvalModel;

    public Optional<Output<String>> approvalModel() {
        return Optional.ofNullable(this.approvalModel);
    }

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    @Import(name="budgetName")
    private @Nullable Output<String> budgetName;

    public Optional<Output<String>> budgetName() {
        return Optional.ofNullable(this.budgetName);
    }

    @Import(name="definition")
    private @Nullable Output<BudgetActionDefinitionArgs> definition;

    public Optional<Output<BudgetActionDefinitionArgs>> definition() {
        return Optional.ofNullable(this.definition);
    }

    @Import(name="executionRoleArn")
    private @Nullable Output<String> executionRoleArn;

    public Optional<Output<String>> executionRoleArn() {
        return Optional.ofNullable(this.executionRoleArn);
    }

    @Import(name="notificationType")
    private @Nullable Output<String> notificationType;

    public Optional<Output<String>> notificationType() {
        return Optional.ofNullable(this.notificationType);
    }

    @Import(name="status")
    private @Nullable Output<String> status;

    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    @Import(name="subscribers")
    private @Nullable Output<List<BudgetActionSubscriberArgs>> subscribers;

    public Optional<Output<List<BudgetActionSubscriberArgs>>> subscribers() {
        return Optional.ofNullable(this.subscribers);
    }

    private BudgetActionState() {}

    private BudgetActionState(BudgetActionState $) {
        this.accountId = $.accountId;
        this.actionId = $.actionId;
        this.actionThreshold = $.actionThreshold;
        this.actionType = $.actionType;
        this.approvalModel = $.approvalModel;
        this.arn = $.arn;
        this.budgetName = $.budgetName;
        this.definition = $.definition;
        this.executionRoleArn = $.executionRoleArn;
        this.notificationType = $.notificationType;
        this.status = $.status;
        this.subscribers = $.subscribers;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BudgetActionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BudgetActionState $;

        public Builder() {
            $ = new BudgetActionState();
        }

        public Builder(BudgetActionState defaults) {
            $ = new BudgetActionState(Objects.requireNonNull(defaults));
        }

        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        public Builder actionId(@Nullable Output<String> actionId) {
            $.actionId = actionId;
            return this;
        }

        public Builder actionId(String actionId) {
            return actionId(Output.of(actionId));
        }

        public Builder actionThreshold(@Nullable Output<BudgetActionActionThresholdArgs> actionThreshold) {
            $.actionThreshold = actionThreshold;
            return this;
        }

        public Builder actionThreshold(BudgetActionActionThresholdArgs actionThreshold) {
            return actionThreshold(Output.of(actionThreshold));
        }

        public Builder actionType(@Nullable Output<String> actionType) {
            $.actionType = actionType;
            return this;
        }

        public Builder actionType(String actionType) {
            return actionType(Output.of(actionType));
        }

        public Builder approvalModel(@Nullable Output<String> approvalModel) {
            $.approvalModel = approvalModel;
            return this;
        }

        public Builder approvalModel(String approvalModel) {
            return approvalModel(Output.of(approvalModel));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder budgetName(@Nullable Output<String> budgetName) {
            $.budgetName = budgetName;
            return this;
        }

        public Builder budgetName(String budgetName) {
            return budgetName(Output.of(budgetName));
        }

        public Builder definition(@Nullable Output<BudgetActionDefinitionArgs> definition) {
            $.definition = definition;
            return this;
        }

        public Builder definition(BudgetActionDefinitionArgs definition) {
            return definition(Output.of(definition));
        }

        public Builder executionRoleArn(@Nullable Output<String> executionRoleArn) {
            $.executionRoleArn = executionRoleArn;
            return this;
        }

        public Builder executionRoleArn(String executionRoleArn) {
            return executionRoleArn(Output.of(executionRoleArn));
        }

        public Builder notificationType(@Nullable Output<String> notificationType) {
            $.notificationType = notificationType;
            return this;
        }

        public Builder notificationType(String notificationType) {
            return notificationType(Output.of(notificationType));
        }

        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        public Builder status(String status) {
            return status(Output.of(status));
        }

        public Builder subscribers(@Nullable Output<List<BudgetActionSubscriberArgs>> subscribers) {
            $.subscribers = subscribers;
            return this;
        }

        public Builder subscribers(List<BudgetActionSubscriberArgs> subscribers) {
            return subscribers(Output.of(subscribers));
        }

        public Builder subscribers(BudgetActionSubscriberArgs... subscribers) {
            return subscribers(List.of(subscribers));
        }

        public BudgetActionState build() {
            return $;
        }
    }

}
