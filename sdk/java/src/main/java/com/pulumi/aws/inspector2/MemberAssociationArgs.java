// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.inspector2;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MemberAssociationArgs extends com.pulumi.resources.ResourceArgs {

    public static final MemberAssociationArgs Empty = new MemberAssociationArgs();

    /**
     * ID of the account to associate
     * 
     */
    @Import(name="accountId", required=true)
    private Output<String> accountId;

    /**
     * @return ID of the account to associate
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }

    /**
     * The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    private MemberAssociationArgs() {}

    private MemberAssociationArgs(MemberAssociationArgs $) {
        this.accountId = $.accountId;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MemberAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MemberAssociationArgs $;

        public Builder() {
            $ = new MemberAssociationArgs();
        }

        public Builder(MemberAssociationArgs defaults) {
            $ = new MemberAssociationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId ID of the account to associate
         * 
         * @return builder
         * 
         */
        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId ID of the account to associate
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param region The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The AWS Region to use for API operations. Overrides the Region set in the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public MemberAssociationArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("MemberAssociationArgs", "accountId");
            }
            return $;
        }
    }

}
