// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.comprehend.outputs;

import com.pulumi.aws.comprehend.outputs.DocumentClassifierInputDataConfigAugmentedManifest;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DocumentClassifierInputDataConfig {
    /**
     * @return List of training datasets produced by Amazon SageMaker Ground Truth.
     * Used if `data_format` is `AUGMENTED_MANIFEST`.
     * See the `augmented_manifests` Configuration Block section below.
     * 
     */
    private @Nullable List<DocumentClassifierInputDataConfigAugmentedManifest> augmentedManifests;
    /**
     * @return The format for the training data.
     * One of `COMPREHEND_CSV` or `AUGMENTED_MANIFEST`.
     * 
     */
    private @Nullable String dataFormat;
    /**
     * @return Delimiter between labels when training a multi-label classifier.
     * Valid values are `|`, `~`, `!`, `@`, `#`, `$`, `%`, `^`, `*`, `-`, `_`, `+`, `=`, `\`, `:`, `;`, `&gt;`, `?`, `/`, `&lt;space&gt;`, and `&lt;tab&gt;`.
     * Default is `|`.
     * 
     */
    private @Nullable String labelDelimiter;
    /**
     * @return Location of training documents.
     * Used if `data_format` is `COMPREHEND_CSV`.
     * 
     */
    private @Nullable String s3Uri;
    private @Nullable String testS3Uri;

    private DocumentClassifierInputDataConfig() {}
    /**
     * @return List of training datasets produced by Amazon SageMaker Ground Truth.
     * Used if `data_format` is `AUGMENTED_MANIFEST`.
     * See the `augmented_manifests` Configuration Block section below.
     * 
     */
    public List<DocumentClassifierInputDataConfigAugmentedManifest> augmentedManifests() {
        return this.augmentedManifests == null ? List.of() : this.augmentedManifests;
    }
    /**
     * @return The format for the training data.
     * One of `COMPREHEND_CSV` or `AUGMENTED_MANIFEST`.
     * 
     */
    public Optional<String> dataFormat() {
        return Optional.ofNullable(this.dataFormat);
    }
    /**
     * @return Delimiter between labels when training a multi-label classifier.
     * Valid values are `|`, `~`, `!`, `@`, `#`, `$`, `%`, `^`, `*`, `-`, `_`, `+`, `=`, `\`, `:`, `;`, `&gt;`, `?`, `/`, `&lt;space&gt;`, and `&lt;tab&gt;`.
     * Default is `|`.
     * 
     */
    public Optional<String> labelDelimiter() {
        return Optional.ofNullable(this.labelDelimiter);
    }
    /**
     * @return Location of training documents.
     * Used if `data_format` is `COMPREHEND_CSV`.
     * 
     */
    public Optional<String> s3Uri() {
        return Optional.ofNullable(this.s3Uri);
    }
    public Optional<String> testS3Uri() {
        return Optional.ofNullable(this.testS3Uri);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DocumentClassifierInputDataConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<DocumentClassifierInputDataConfigAugmentedManifest> augmentedManifests;
        private @Nullable String dataFormat;
        private @Nullable String labelDelimiter;
        private @Nullable String s3Uri;
        private @Nullable String testS3Uri;
        public Builder() {}
        public Builder(DocumentClassifierInputDataConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.augmentedManifests = defaults.augmentedManifests;
    	      this.dataFormat = defaults.dataFormat;
    	      this.labelDelimiter = defaults.labelDelimiter;
    	      this.s3Uri = defaults.s3Uri;
    	      this.testS3Uri = defaults.testS3Uri;
        }

        @CustomType.Setter
        public Builder augmentedManifests(@Nullable List<DocumentClassifierInputDataConfigAugmentedManifest> augmentedManifests) {
            this.augmentedManifests = augmentedManifests;
            return this;
        }
        public Builder augmentedManifests(DocumentClassifierInputDataConfigAugmentedManifest... augmentedManifests) {
            return augmentedManifests(List.of(augmentedManifests));
        }
        @CustomType.Setter
        public Builder dataFormat(@Nullable String dataFormat) {
            this.dataFormat = dataFormat;
            return this;
        }
        @CustomType.Setter
        public Builder labelDelimiter(@Nullable String labelDelimiter) {
            this.labelDelimiter = labelDelimiter;
            return this;
        }
        @CustomType.Setter
        public Builder s3Uri(@Nullable String s3Uri) {
            this.s3Uri = s3Uri;
            return this;
        }
        @CustomType.Setter
        public Builder testS3Uri(@Nullable String testS3Uri) {
            this.testS3Uri = testS3Uri;
            return this;
        }
        public DocumentClassifierInputDataConfig build() {
            final var o = new DocumentClassifierInputDataConfig();
            o.augmentedManifests = augmentedManifests;
            o.dataFormat = dataFormat;
            o.labelDelimiter = labelDelimiter;
            o.s3Uri = s3Uri;
            o.testS3Uri = testS3Uri;
            return o;
        }
    }
}
