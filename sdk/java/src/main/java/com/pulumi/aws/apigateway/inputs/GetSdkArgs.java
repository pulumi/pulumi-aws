// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apigateway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSdkArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSdkArgs Empty = new GetSdkArgs();

    /**
     * Key-value map of query string parameters `sdk_type` properties of the SDK. For SDK Type of `objectivec` or `swift`, a parameter named `classPrefix` is required. For SDK Type of `android`, parameters named `groupId`, `artifactId`, `artifactVersion`, and `invokerPackage` are required. For SDK Type of `java`, parameters named `serviceName` and `javaPackageName` are required.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<Map<String,String>> parameters;

    /**
     * @return Key-value map of query string parameters `sdk_type` properties of the SDK. For SDK Type of `objectivec` or `swift`, a parameter named `classPrefix` is required. For SDK Type of `android`, parameters named `groupId`, `artifactId`, `artifactVersion`, and `invokerPackage` are required. For SDK Type of `java`, parameters named `serviceName` and `javaPackageName` are required.
     * 
     */
    public Optional<Output<Map<String,String>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * Identifier of the associated REST API.
     * 
     */
    @Import(name="restApiId", required=true)
    private Output<String> restApiId;

    /**
     * @return Identifier of the associated REST API.
     * 
     */
    public Output<String> restApiId() {
        return this.restApiId;
    }

    /**
     * Language for the generated SDK. Currently `java`, `javascript`, `android`, `objectivec` (for iOS), `swift` (for iOS), and `ruby` are supported.
     * 
     */
    @Import(name="sdkType", required=true)
    private Output<String> sdkType;

    /**
     * @return Language for the generated SDK. Currently `java`, `javascript`, `android`, `objectivec` (for iOS), `swift` (for iOS), and `ruby` are supported.
     * 
     */
    public Output<String> sdkType() {
        return this.sdkType;
    }

    /**
     * Name of the Stage that will be exported.
     * 
     */
    @Import(name="stageName", required=true)
    private Output<String> stageName;

    /**
     * @return Name of the Stage that will be exported.
     * 
     */
    public Output<String> stageName() {
        return this.stageName;
    }

    private GetSdkArgs() {}

    private GetSdkArgs(GetSdkArgs $) {
        this.parameters = $.parameters;
        this.restApiId = $.restApiId;
        this.sdkType = $.sdkType;
        this.stageName = $.stageName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSdkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSdkArgs $;

        public Builder() {
            $ = new GetSdkArgs();
        }

        public Builder(GetSdkArgs defaults) {
            $ = new GetSdkArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param parameters Key-value map of query string parameters `sdk_type` properties of the SDK. For SDK Type of `objectivec` or `swift`, a parameter named `classPrefix` is required. For SDK Type of `android`, parameters named `groupId`, `artifactId`, `artifactVersion`, and `invokerPackage` are required. For SDK Type of `java`, parameters named `serviceName` and `javaPackageName` are required.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<Map<String,String>> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters Key-value map of query string parameters `sdk_type` properties of the SDK. For SDK Type of `objectivec` or `swift`, a parameter named `classPrefix` is required. For SDK Type of `android`, parameters named `groupId`, `artifactId`, `artifactVersion`, and `invokerPackage` are required. For SDK Type of `java`, parameters named `serviceName` and `javaPackageName` are required.
         * 
         * @return builder
         * 
         */
        public Builder parameters(Map<String,String> parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param restApiId Identifier of the associated REST API.
         * 
         * @return builder
         * 
         */
        public Builder restApiId(Output<String> restApiId) {
            $.restApiId = restApiId;
            return this;
        }

        /**
         * @param restApiId Identifier of the associated REST API.
         * 
         * @return builder
         * 
         */
        public Builder restApiId(String restApiId) {
            return restApiId(Output.of(restApiId));
        }

        /**
         * @param sdkType Language for the generated SDK. Currently `java`, `javascript`, `android`, `objectivec` (for iOS), `swift` (for iOS), and `ruby` are supported.
         * 
         * @return builder
         * 
         */
        public Builder sdkType(Output<String> sdkType) {
            $.sdkType = sdkType;
            return this;
        }

        /**
         * @param sdkType Language for the generated SDK. Currently `java`, `javascript`, `android`, `objectivec` (for iOS), `swift` (for iOS), and `ruby` are supported.
         * 
         * @return builder
         * 
         */
        public Builder sdkType(String sdkType) {
            return sdkType(Output.of(sdkType));
        }

        /**
         * @param stageName Name of the Stage that will be exported.
         * 
         * @return builder
         * 
         */
        public Builder stageName(Output<String> stageName) {
            $.stageName = stageName;
            return this;
        }

        /**
         * @param stageName Name of the Stage that will be exported.
         * 
         * @return builder
         * 
         */
        public Builder stageName(String stageName) {
            return stageName(Output.of(stageName));
        }

        public GetSdkArgs build() {
            if ($.restApiId == null) {
                throw new MissingRequiredPropertyException("GetSdkArgs", "restApiId");
            }
            if ($.sdkType == null) {
                throw new MissingRequiredPropertyException("GetSdkArgs", "sdkType");
            }
            if ($.stageName == null) {
                throw new MissingRequiredPropertyException("GetSdkArgs", "stageName");
            }
            return $;
        }
    }

}
