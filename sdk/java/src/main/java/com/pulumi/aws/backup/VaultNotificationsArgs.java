// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.backup;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class VaultNotificationsArgs extends com.pulumi.resources.ResourceArgs {

    public static final VaultNotificationsArgs Empty = new VaultNotificationsArgs();

    /**
     * An array of events that indicate the status of jobs to back up resources to the backup vault.
     * 
     */
    @Import(name="backupVaultEvents", required=true)
    private Output<List<String>> backupVaultEvents;

    /**
     * @return An array of events that indicate the status of jobs to back up resources to the backup vault.
     * 
     */
    public Output<List<String>> backupVaultEvents() {
        return this.backupVaultEvents;
    }

    /**
     * Name of the backup vault to add notifications for.
     * 
     */
    @Import(name="backupVaultName", required=true)
    private Output<String> backupVaultName;

    /**
     * @return Name of the backup vault to add notifications for.
     * 
     */
    public Output<String> backupVaultName() {
        return this.backupVaultName;
    }

    /**
     * The Amazon Resource Name (ARN) that specifies the topic for a backup vault’s events
     * 
     */
    @Import(name="snsTopicArn", required=true)
    private Output<String> snsTopicArn;

    /**
     * @return The Amazon Resource Name (ARN) that specifies the topic for a backup vault’s events
     * 
     */
    public Output<String> snsTopicArn() {
        return this.snsTopicArn;
    }

    private VaultNotificationsArgs() {}

    private VaultNotificationsArgs(VaultNotificationsArgs $) {
        this.backupVaultEvents = $.backupVaultEvents;
        this.backupVaultName = $.backupVaultName;
        this.snsTopicArn = $.snsTopicArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VaultNotificationsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VaultNotificationsArgs $;

        public Builder() {
            $ = new VaultNotificationsArgs();
        }

        public Builder(VaultNotificationsArgs defaults) {
            $ = new VaultNotificationsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupVaultEvents An array of events that indicate the status of jobs to back up resources to the backup vault.
         * 
         * @return builder
         * 
         */
        public Builder backupVaultEvents(Output<List<String>> backupVaultEvents) {
            $.backupVaultEvents = backupVaultEvents;
            return this;
        }

        /**
         * @param backupVaultEvents An array of events that indicate the status of jobs to back up resources to the backup vault.
         * 
         * @return builder
         * 
         */
        public Builder backupVaultEvents(List<String> backupVaultEvents) {
            return backupVaultEvents(Output.of(backupVaultEvents));
        }

        /**
         * @param backupVaultEvents An array of events that indicate the status of jobs to back up resources to the backup vault.
         * 
         * @return builder
         * 
         */
        public Builder backupVaultEvents(String... backupVaultEvents) {
            return backupVaultEvents(List.of(backupVaultEvents));
        }

        /**
         * @param backupVaultName Name of the backup vault to add notifications for.
         * 
         * @return builder
         * 
         */
        public Builder backupVaultName(Output<String> backupVaultName) {
            $.backupVaultName = backupVaultName;
            return this;
        }

        /**
         * @param backupVaultName Name of the backup vault to add notifications for.
         * 
         * @return builder
         * 
         */
        public Builder backupVaultName(String backupVaultName) {
            return backupVaultName(Output.of(backupVaultName));
        }

        /**
         * @param snsTopicArn The Amazon Resource Name (ARN) that specifies the topic for a backup vault’s events
         * 
         * @return builder
         * 
         */
        public Builder snsTopicArn(Output<String> snsTopicArn) {
            $.snsTopicArn = snsTopicArn;
            return this;
        }

        /**
         * @param snsTopicArn The Amazon Resource Name (ARN) that specifies the topic for a backup vault’s events
         * 
         * @return builder
         * 
         */
        public Builder snsTopicArn(String snsTopicArn) {
            return snsTopicArn(Output.of(snsTopicArn));
        }

        public VaultNotificationsArgs build() {
            if ($.backupVaultEvents == null) {
                throw new MissingRequiredPropertyException("VaultNotificationsArgs", "backupVaultEvents");
            }
            if ($.backupVaultName == null) {
                throw new MissingRequiredPropertyException("VaultNotificationsArgs", "backupVaultName");
            }
            if ($.snsTopicArn == null) {
                throw new MissingRequiredPropertyException("VaultNotificationsArgs", "snsTopicArn");
            }
            return $;
        }
    }

}
