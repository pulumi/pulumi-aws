// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.costexplorer;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.costexplorer.AnomalySubscriptionArgs;
import com.pulumi.aws.costexplorer.inputs.AnomalySubscriptionState;
import com.pulumi.aws.costexplorer.outputs.AnomalySubscriptionSubscriber;
import com.pulumi.aws.costexplorer.outputs.AnomalySubscriptionThresholdExpression;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a CE Anomaly Subscription.
 * 
 * ## Example Usage
 * 
 * ### Basic Example
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.costexplorer.AnomalyMonitor;
 * import com.pulumi.aws.costexplorer.AnomalyMonitorArgs;
 * import com.pulumi.aws.costexplorer.AnomalySubscription;
 * import com.pulumi.aws.costexplorer.AnomalySubscriptionArgs;
 * import com.pulumi.aws.costexplorer.inputs.AnomalySubscriptionSubscriberArgs;
 * import com.pulumi.aws.costexplorer.inputs.AnomalySubscriptionThresholdExpressionArgs;
 * import com.pulumi.aws.costexplorer.inputs.AnomalySubscriptionThresholdExpressionDimensionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         var test = new AnomalyMonitor("test", AnomalyMonitorArgs.builder()
 *             .name("AWSServiceMonitor")
 *             .monitorType("DIMENSIONAL")
 *             .monitorDimension("SERVICE")
 *             .build());
 * 
 *         var testAnomalySubscription = new AnomalySubscription("testAnomalySubscription", AnomalySubscriptionArgs.builder()
 *             .name("DAILYSUBSCRIPTION")
 *             .frequency("DAILY")
 *             .monitorArnLists(test.arn())
 *             .subscribers(AnomalySubscriptionSubscriberArgs.builder()
 *                 .type("EMAIL")
 *                 .address("abc}{@literal @}{@code example.com")
 *                 .build())
 *             .thresholdExpression(AnomalySubscriptionThresholdExpressionArgs.builder()
 *                 .dimension(AnomalySubscriptionThresholdExpressionDimensionArgs.builder()
 *                     .key("ANOMALY_TOTAL_IMPACT_ABSOLUTE")
 *                     .matchOptions("GREATER_THAN_OR_EQUAL")
 *                     .values("100")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Threshold Expression Example
 * 
 * ### Using a Percentage Threshold
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.costexplorer.AnomalySubscription;
 * import com.pulumi.aws.costexplorer.AnomalySubscriptionArgs;
 * import com.pulumi.aws.costexplorer.inputs.AnomalySubscriptionSubscriberArgs;
 * import com.pulumi.aws.costexplorer.inputs.AnomalySubscriptionThresholdExpressionArgs;
 * import com.pulumi.aws.costexplorer.inputs.AnomalySubscriptionThresholdExpressionDimensionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         var test = new AnomalySubscription("test", AnomalySubscriptionArgs.builder()
 *             .name("AWSServiceMonitor")
 *             .frequency("DAILY")
 *             .monitorArnLists(testAwsCeAnomalyMonitor.arn())
 *             .subscribers(AnomalySubscriptionSubscriberArgs.builder()
 *                 .type("EMAIL")
 *                 .address("abc}{@literal @}{@code example.com")
 *                 .build())
 *             .thresholdExpression(AnomalySubscriptionThresholdExpressionArgs.builder()
 *                 .dimension(AnomalySubscriptionThresholdExpressionDimensionArgs.builder()
 *                     .key("ANOMALY_TOTAL_IMPACT_PERCENTAGE")
 *                     .matchOptions("GREATER_THAN_OR_EQUAL")
 *                     .values("100")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Using an `and` Expression
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.costexplorer.AnomalySubscription;
 * import com.pulumi.aws.costexplorer.AnomalySubscriptionArgs;
 * import com.pulumi.aws.costexplorer.inputs.AnomalySubscriptionSubscriberArgs;
 * import com.pulumi.aws.costexplorer.inputs.AnomalySubscriptionThresholdExpressionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         var test = new AnomalySubscription("test", AnomalySubscriptionArgs.builder()
 *             .name("AWSServiceMonitor")
 *             .frequency("DAILY")
 *             .monitorArnLists(testAwsCeAnomalyMonitor.arn())
 *             .subscribers(AnomalySubscriptionSubscriberArgs.builder()
 *                 .type("EMAIL")
 *                 .address("abc}{@literal @}{@code example.com")
 *                 .build())
 *             .thresholdExpression(AnomalySubscriptionThresholdExpressionArgs.builder()
 *                 .ands(                
 *                     AnomalySubscriptionThresholdExpressionAndArgs.builder()
 *                         .dimension(AnomalySubscriptionThresholdExpressionAndDimensionArgs.builder()
 *                             .key("ANOMALY_TOTAL_IMPACT_ABSOLUTE")
 *                             .matchOptions("GREATER_THAN_OR_EQUAL")
 *                             .values("100")
 *                             .build())
 *                         .build(),
 *                     AnomalySubscriptionThresholdExpressionAndArgs.builder()
 *                         .dimension(AnomalySubscriptionThresholdExpressionAndDimensionArgs.builder()
 *                             .key("ANOMALY_TOTAL_IMPACT_PERCENTAGE")
 *                             .matchOptions("GREATER_THAN_OR_EQUAL")
 *                             .values("50")
 *                             .build())
 *                         .build())
 *                 .build())
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### SNS Example
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.sns.Topic;
 * import com.pulumi.aws.sns.TopicArgs;
 * import com.pulumi.aws.iam.IamFunctions;
 * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
 * import com.pulumi.aws.sns.TopicPolicy;
 * import com.pulumi.aws.sns.TopicPolicyArgs;
 * import com.pulumi.aws.costexplorer.AnomalyMonitor;
 * import com.pulumi.aws.costexplorer.AnomalyMonitorArgs;
 * import com.pulumi.aws.costexplorer.AnomalySubscription;
 * import com.pulumi.aws.costexplorer.AnomalySubscriptionArgs;
 * import com.pulumi.aws.costexplorer.inputs.AnomalySubscriptionSubscriberArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var costAnomalyUpdates = new Topic("costAnomalyUpdates", TopicArgs.builder()
 *             .name("CostAnomalyUpdates")
 *             .build());
 * 
 *         final var snsTopicPolicy = Output.tuple(costAnomalyUpdates.arn(), costAnomalyUpdates.arn()).applyValue(values -> {
 *             var costAnomalyUpdatesArn = values.t1;
 *             var costAnomalyUpdatesArn1 = values.t2;
 *             return IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
 *                 .policyId("__default_policy_ID")
 *                 .statements(                
 *                     GetPolicyDocumentStatementArgs.builder()
 *                         .sid("AWSAnomalyDetectionSNSPublishingPermissions")
 *                         .actions("SNS:Publish")
 *                         .effect("Allow")
 *                         .principals(GetPolicyDocumentStatementPrincipalArgs.builder()
 *                             .type("Service")
 *                             .identifiers("costalerts.amazonaws.com")
 *                             .build())
 *                         .resources(costAnomalyUpdatesArn)
 *                         .build(),
 *                     GetPolicyDocumentStatementArgs.builder()
 *                         .sid("__default_statement_ID")
 *                         .actions(                        
 *                             "SNS:Subscribe",
 *                             "SNS:SetTopicAttributes",
 *                             "SNS:RemovePermission",
 *                             "SNS:Receive",
 *                             "SNS:Publish",
 *                             "SNS:ListSubscriptionsByTopic",
 *                             "SNS:GetTopicAttributes",
 *                             "SNS:DeleteTopic",
 *                             "SNS:AddPermission")
 *                         .conditions(GetPolicyDocumentStatementConditionArgs.builder()
 *                             .test("StringEquals")
 *                             .variable("AWS:SourceOwner")
 *                             .values(accountId)
 *                             .build())
 *                         .effect("Allow")
 *                         .principals(GetPolicyDocumentStatementPrincipalArgs.builder()
 *                             .type("AWS")
 *                             .identifiers("*")
 *                             .build())
 *                         .resources(costAnomalyUpdatesArn1)
 *                         .build())
 *                 .build());
 *         });
 * 
 *         var default_ = new TopicPolicy("default", TopicPolicyArgs.builder()
 *             .arn(costAnomalyUpdates.arn())
 *             .policy(snsTopicPolicy.applyValue(_snsTopicPolicy -> _snsTopicPolicy.json()))
 *             .build());
 * 
 *         var anomalyMonitor = new AnomalyMonitor("anomalyMonitor", AnomalyMonitorArgs.builder()
 *             .name("AWSServiceMonitor")
 *             .monitorType("DIMENSIONAL")
 *             .monitorDimension("SERVICE")
 *             .build());
 * 
 *         var realtimeSubscription = new AnomalySubscription("realtimeSubscription", AnomalySubscriptionArgs.builder()
 *             .name("RealtimeAnomalySubscription")
 *             .frequency("IMMEDIATE")
 *             .monitorArnLists(anomalyMonitor.arn())
 *             .subscribers(AnomalySubscriptionSubscriberArgs.builder()
 *                 .type("SNS")
 *                 .address(costAnomalyUpdates.arn())
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(default_)
 *                 .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Using `pulumi import`, import `aws_ce_anomaly_subscription` using the `id`. For example:
 * 
 * ```sh
 * $ pulumi import aws:costexplorer/anomalySubscription:AnomalySubscription example AnomalySubscriptionARN
 * ```
 * 
 */
@ResourceType(type="aws:costexplorer/anomalySubscription:AnomalySubscription")
public class AnomalySubscription extends com.pulumi.resources.CustomResource {
    /**
     * The unique identifier for the AWS account in which the anomaly subscription ought to be created.
     * 
     */
    @Export(name="accountId", refs={String.class}, tree="[0]")
    private Output<String> accountId;

    /**
     * @return The unique identifier for the AWS account in which the anomaly subscription ought to be created.
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }
    /**
     * ARN of the anomaly subscription.
     * 
     */
    @Export(name="arn", refs={String.class}, tree="[0]")
    private Output<String> arn;

    /**
     * @return ARN of the anomaly subscription.
     * 
     */
    public Output<String> arn() {
        return this.arn;
    }
    /**
     * The frequency that anomaly reports are sent. Valid Values: `DAILY` | `IMMEDIATE` | `WEEKLY`.
     * 
     */
    @Export(name="frequency", refs={String.class}, tree="[0]")
    private Output<String> frequency;

    /**
     * @return The frequency that anomaly reports are sent. Valid Values: `DAILY` | `IMMEDIATE` | `WEEKLY`.
     * 
     */
    public Output<String> frequency() {
        return this.frequency;
    }
    /**
     * A list of cost anomaly monitors.
     * 
     */
    @Export(name="monitorArnLists", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> monitorArnLists;

    /**
     * @return A list of cost anomaly monitors.
     * 
     */
    public Output<List<String>> monitorArnLists() {
        return this.monitorArnLists;
    }
    /**
     * The name for the subscription.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name for the subscription.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * A subscriber configuration. Multiple subscribers can be defined.
     * 
     */
    @Export(name="subscribers", refs={List.class,AnomalySubscriptionSubscriber.class}, tree="[0,1]")
    private Output<List<AnomalySubscriptionSubscriber>> subscribers;

    /**
     * @return A subscriber configuration. Multiple subscribers can be defined.
     * 
     */
    public Output<List<AnomalySubscriptionSubscriber>> subscribers() {
        return this.subscribers;
    }
    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @Export(name="tagsAll", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll;
    }
    /**
     * An Expression object used to specify the anomalies that you want to generate alerts for. See Threshold Expression.
     * 
     */
    @Export(name="thresholdExpression", refs={AnomalySubscriptionThresholdExpression.class}, tree="[0]")
    private Output<AnomalySubscriptionThresholdExpression> thresholdExpression;

    /**
     * @return An Expression object used to specify the anomalies that you want to generate alerts for. See Threshold Expression.
     * 
     */
    public Output<AnomalySubscriptionThresholdExpression> thresholdExpression() {
        return this.thresholdExpression;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AnomalySubscription(java.lang.String name) {
        this(name, AnomalySubscriptionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AnomalySubscription(java.lang.String name, AnomalySubscriptionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AnomalySubscription(java.lang.String name, AnomalySubscriptionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:costexplorer/anomalySubscription:AnomalySubscription", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private AnomalySubscription(java.lang.String name, Output<java.lang.String> id, @Nullable AnomalySubscriptionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:costexplorer/anomalySubscription:AnomalySubscription", name, state, makeResourceOptions(options, id), false);
    }

    private static AnomalySubscriptionArgs makeArgs(AnomalySubscriptionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AnomalySubscriptionArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AnomalySubscription get(java.lang.String name, Output<java.lang.String> id, @Nullable AnomalySubscriptionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AnomalySubscription(name, id, state, options);
    }
}
