// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lakeformation.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OptInResourceDataLfTagPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final OptInResourceDataLfTagPolicyArgs Empty = new OptInResourceDataLfTagPolicyArgs();

    /**
     * Identifier for the Data Catalog. By default, it is the account ID of the caller.
     * 
     */
    @Import(name="catalogId")
    private @Nullable Output<String> catalogId;

    /**
     * @return Identifier for the Data Catalog. By default, it is the account ID of the caller.
     * 
     */
    public Optional<Output<String>> catalogId() {
        return Optional.ofNullable(this.catalogId);
    }

    /**
     * If provided, permissions are granted to the Data Catalog resources whose assigned LF-Tags match the expression body of the saved expression under the provided ExpressionName .
     * 
     */
    @Import(name="expressionName")
    private @Nullable Output<String> expressionName;

    /**
     * @return If provided, permissions are granted to the Data Catalog resources whose assigned LF-Tags match the expression body of the saved expression under the provided ExpressionName .
     * 
     */
    public Optional<Output<String>> expressionName() {
        return Optional.ofNullable(this.expressionName);
    }

    /**
     * List of LF-tag conditions or a saved expression that apply to the resource&#39;s LF-Tag policy.
     * 
     */
    @Import(name="expressions")
    private @Nullable Output<List<String>> expressions;

    /**
     * @return List of LF-tag conditions or a saved expression that apply to the resource&#39;s LF-Tag policy.
     * 
     */
    public Optional<Output<List<String>>> expressions() {
        return Optional.ofNullable(this.expressions);
    }

    /**
     * Resource type for which the LF-tag policy applies.
     * 
     */
    @Import(name="resourceType", required=true)
    private Output<String> resourceType;

    /**
     * @return Resource type for which the LF-tag policy applies.
     * 
     */
    public Output<String> resourceType() {
        return this.resourceType;
    }

    private OptInResourceDataLfTagPolicyArgs() {}

    private OptInResourceDataLfTagPolicyArgs(OptInResourceDataLfTagPolicyArgs $) {
        this.catalogId = $.catalogId;
        this.expressionName = $.expressionName;
        this.expressions = $.expressions;
        this.resourceType = $.resourceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OptInResourceDataLfTagPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OptInResourceDataLfTagPolicyArgs $;

        public Builder() {
            $ = new OptInResourceDataLfTagPolicyArgs();
        }

        public Builder(OptInResourceDataLfTagPolicyArgs defaults) {
            $ = new OptInResourceDataLfTagPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param catalogId Identifier for the Data Catalog. By default, it is the account ID of the caller.
         * 
         * @return builder
         * 
         */
        public Builder catalogId(@Nullable Output<String> catalogId) {
            $.catalogId = catalogId;
            return this;
        }

        /**
         * @param catalogId Identifier for the Data Catalog. By default, it is the account ID of the caller.
         * 
         * @return builder
         * 
         */
        public Builder catalogId(String catalogId) {
            return catalogId(Output.of(catalogId));
        }

        /**
         * @param expressionName If provided, permissions are granted to the Data Catalog resources whose assigned LF-Tags match the expression body of the saved expression under the provided ExpressionName .
         * 
         * @return builder
         * 
         */
        public Builder expressionName(@Nullable Output<String> expressionName) {
            $.expressionName = expressionName;
            return this;
        }

        /**
         * @param expressionName If provided, permissions are granted to the Data Catalog resources whose assigned LF-Tags match the expression body of the saved expression under the provided ExpressionName .
         * 
         * @return builder
         * 
         */
        public Builder expressionName(String expressionName) {
            return expressionName(Output.of(expressionName));
        }

        /**
         * @param expressions List of LF-tag conditions or a saved expression that apply to the resource&#39;s LF-Tag policy.
         * 
         * @return builder
         * 
         */
        public Builder expressions(@Nullable Output<List<String>> expressions) {
            $.expressions = expressions;
            return this;
        }

        /**
         * @param expressions List of LF-tag conditions or a saved expression that apply to the resource&#39;s LF-Tag policy.
         * 
         * @return builder
         * 
         */
        public Builder expressions(List<String> expressions) {
            return expressions(Output.of(expressions));
        }

        /**
         * @param expressions List of LF-tag conditions or a saved expression that apply to the resource&#39;s LF-Tag policy.
         * 
         * @return builder
         * 
         */
        public Builder expressions(String... expressions) {
            return expressions(List.of(expressions));
        }

        /**
         * @param resourceType Resource type for which the LF-tag policy applies.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param resourceType Resource type for which the LF-tag policy applies.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        public OptInResourceDataLfTagPolicyArgs build() {
            if ($.resourceType == null) {
                throw new MissingRequiredPropertyException("OptInResourceDataLfTagPolicyArgs", "resourceType");
            }
            return $;
        }
    }

}
