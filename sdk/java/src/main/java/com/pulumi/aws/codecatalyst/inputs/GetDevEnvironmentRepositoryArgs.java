// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codecatalyst.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetDevEnvironmentRepositoryArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetDevEnvironmentRepositoryArgs Empty = new GetDevEnvironmentRepositoryArgs();

    @Import(name="branchName", required=true)
    private Output<String> branchName;

    public Output<String> branchName() {
        return this.branchName;
    }

    @Import(name="repositoryName", required=true)
    private Output<String> repositoryName;

    public Output<String> repositoryName() {
        return this.repositoryName;
    }

    private GetDevEnvironmentRepositoryArgs() {}

    private GetDevEnvironmentRepositoryArgs(GetDevEnvironmentRepositoryArgs $) {
        this.branchName = $.branchName;
        this.repositoryName = $.repositoryName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDevEnvironmentRepositoryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDevEnvironmentRepositoryArgs $;

        public Builder() {
            $ = new GetDevEnvironmentRepositoryArgs();
        }

        public Builder(GetDevEnvironmentRepositoryArgs defaults) {
            $ = new GetDevEnvironmentRepositoryArgs(Objects.requireNonNull(defaults));
        }

        public Builder branchName(Output<String> branchName) {
            $.branchName = branchName;
            return this;
        }

        public Builder branchName(String branchName) {
            return branchName(Output.of(branchName));
        }

        public Builder repositoryName(Output<String> repositoryName) {
            $.repositoryName = repositoryName;
            return this;
        }

        public Builder repositoryName(String repositoryName) {
            return repositoryName(Output.of(repositoryName));
        }

        public GetDevEnvironmentRepositoryArgs build() {
            if ($.branchName == null) {
                throw new MissingRequiredPropertyException("GetDevEnvironmentRepositoryArgs", "branchName");
            }
            if ($.repositoryName == null) {
                throw new MissingRequiredPropertyException("GetDevEnvironmentRepositoryArgs", "repositoryName");
            }
            return $;
        }
    }

}
