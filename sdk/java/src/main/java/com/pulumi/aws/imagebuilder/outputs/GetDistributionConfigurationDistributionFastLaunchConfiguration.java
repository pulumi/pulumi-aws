// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.imagebuilder.outputs;

import com.pulumi.aws.imagebuilder.outputs.GetDistributionConfigurationDistributionFastLaunchConfigurationLaunchTemplate;
import com.pulumi.aws.imagebuilder.outputs.GetDistributionConfigurationDistributionFastLaunchConfigurationSnapshotConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDistributionConfigurationDistributionFastLaunchConfiguration {
    private String accountId;
    private Boolean enabled;
    private List<GetDistributionConfigurationDistributionFastLaunchConfigurationLaunchTemplate> launchTemplates;
    private Integer maxParallelLaunches;
    private List<GetDistributionConfigurationDistributionFastLaunchConfigurationSnapshotConfiguration> snapshotConfigurations;

    private GetDistributionConfigurationDistributionFastLaunchConfiguration() {}
    public String accountId() {
        return this.accountId;
    }
    public Boolean enabled() {
        return this.enabled;
    }
    public List<GetDistributionConfigurationDistributionFastLaunchConfigurationLaunchTemplate> launchTemplates() {
        return this.launchTemplates;
    }
    public Integer maxParallelLaunches() {
        return this.maxParallelLaunches;
    }
    public List<GetDistributionConfigurationDistributionFastLaunchConfigurationSnapshotConfiguration> snapshotConfigurations() {
        return this.snapshotConfigurations;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDistributionConfigurationDistributionFastLaunchConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private Boolean enabled;
        private List<GetDistributionConfigurationDistributionFastLaunchConfigurationLaunchTemplate> launchTemplates;
        private Integer maxParallelLaunches;
        private List<GetDistributionConfigurationDistributionFastLaunchConfigurationSnapshotConfiguration> snapshotConfigurations;
        public Builder() {}
        public Builder(GetDistributionConfigurationDistributionFastLaunchConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.enabled = defaults.enabled;
    	      this.launchTemplates = defaults.launchTemplates;
    	      this.maxParallelLaunches = defaults.maxParallelLaunches;
    	      this.snapshotConfigurations = defaults.snapshotConfigurations;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            this.accountId = Objects.requireNonNull(accountId);
            return this;
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            this.enabled = Objects.requireNonNull(enabled);
            return this;
        }
        @CustomType.Setter
        public Builder launchTemplates(List<GetDistributionConfigurationDistributionFastLaunchConfigurationLaunchTemplate> launchTemplates) {
            this.launchTemplates = Objects.requireNonNull(launchTemplates);
            return this;
        }
        public Builder launchTemplates(GetDistributionConfigurationDistributionFastLaunchConfigurationLaunchTemplate... launchTemplates) {
            return launchTemplates(List.of(launchTemplates));
        }
        @CustomType.Setter
        public Builder maxParallelLaunches(Integer maxParallelLaunches) {
            this.maxParallelLaunches = Objects.requireNonNull(maxParallelLaunches);
            return this;
        }
        @CustomType.Setter
        public Builder snapshotConfigurations(List<GetDistributionConfigurationDistributionFastLaunchConfigurationSnapshotConfiguration> snapshotConfigurations) {
            this.snapshotConfigurations = Objects.requireNonNull(snapshotConfigurations);
            return this;
        }
        public Builder snapshotConfigurations(GetDistributionConfigurationDistributionFastLaunchConfigurationSnapshotConfiguration... snapshotConfigurations) {
            return snapshotConfigurations(List.of(snapshotConfigurations));
        }
        public GetDistributionConfigurationDistributionFastLaunchConfiguration build() {
            final var o = new GetDistributionConfigurationDistributionFastLaunchConfiguration();
            o.accountId = accountId;
            o.enabled = enabled;
            o.launchTemplates = launchTemplates;
            o.maxParallelLaunches = maxParallelLaunches;
            o.snapshotConfigurations = snapshotConfigurations;
            return o;
        }
    }
}
