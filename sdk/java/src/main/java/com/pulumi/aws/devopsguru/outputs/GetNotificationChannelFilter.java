// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.devopsguru.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetNotificationChannelFilter {
    /**
     * @return Events to receive notifications for.
     * 
     */
    private List<String> messageTypes;
    /**
     * @return Severity levels to receive notifications for.
     * 
     */
    private List<String> severities;

    private GetNotificationChannelFilter() {}
    /**
     * @return Events to receive notifications for.
     * 
     */
    public List<String> messageTypes() {
        return this.messageTypes;
    }
    /**
     * @return Severity levels to receive notifications for.
     * 
     */
    public List<String> severities() {
        return this.severities;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNotificationChannelFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> messageTypes;
        private List<String> severities;
        public Builder() {}
        public Builder(GetNotificationChannelFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.messageTypes = defaults.messageTypes;
    	      this.severities = defaults.severities;
        }

        @CustomType.Setter
        public Builder messageTypes(List<String> messageTypes) {
            if (messageTypes == null) {
              throw new MissingRequiredPropertyException("GetNotificationChannelFilter", "messageTypes");
            }
            this.messageTypes = messageTypes;
            return this;
        }
        public Builder messageTypes(String... messageTypes) {
            return messageTypes(List.of(messageTypes));
        }
        @CustomType.Setter
        public Builder severities(List<String> severities) {
            if (severities == null) {
              throw new MissingRequiredPropertyException("GetNotificationChannelFilter", "severities");
            }
            this.severities = severities;
            return this;
        }
        public Builder severities(String... severities) {
            return severities(List.of(severities));
        }
        public GetNotificationChannelFilter build() {
            final var _resultValue = new GetNotificationChannelFilter();
            _resultValue.messageTypes = messageTypes;
            _resultValue.severities = severities;
            return _resultValue;
        }
    }
}
