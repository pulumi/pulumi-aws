// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;


public final class UserProfileUserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final UserProfileUserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsArgs Empty = new UserProfileUserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsArgs();

    /**
     * The default size of the EBS storage volume for a private space.
     * 
     */
    @Import(name="defaultEbsVolumeSizeInGb", required=true)
    private Output<Integer> defaultEbsVolumeSizeInGb;

    /**
     * @return The default size of the EBS storage volume for a private space.
     * 
     */
    public Output<Integer> defaultEbsVolumeSizeInGb() {
        return this.defaultEbsVolumeSizeInGb;
    }

    /**
     * The maximum size of the EBS storage volume for a private space.
     * 
     */
    @Import(name="maximumEbsVolumeSizeInGb", required=true)
    private Output<Integer> maximumEbsVolumeSizeInGb;

    /**
     * @return The maximum size of the EBS storage volume for a private space.
     * 
     */
    public Output<Integer> maximumEbsVolumeSizeInGb() {
        return this.maximumEbsVolumeSizeInGb;
    }

    private UserProfileUserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsArgs() {}

    private UserProfileUserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsArgs(UserProfileUserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsArgs $) {
        this.defaultEbsVolumeSizeInGb = $.defaultEbsVolumeSizeInGb;
        this.maximumEbsVolumeSizeInGb = $.maximumEbsVolumeSizeInGb;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserProfileUserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserProfileUserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsArgs $;

        public Builder() {
            $ = new UserProfileUserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsArgs();
        }

        public Builder(UserProfileUserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsArgs defaults) {
            $ = new UserProfileUserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param defaultEbsVolumeSizeInGb The default size of the EBS storage volume for a private space.
         * 
         * @return builder
         * 
         */
        public Builder defaultEbsVolumeSizeInGb(Output<Integer> defaultEbsVolumeSizeInGb) {
            $.defaultEbsVolumeSizeInGb = defaultEbsVolumeSizeInGb;
            return this;
        }

        /**
         * @param defaultEbsVolumeSizeInGb The default size of the EBS storage volume for a private space.
         * 
         * @return builder
         * 
         */
        public Builder defaultEbsVolumeSizeInGb(Integer defaultEbsVolumeSizeInGb) {
            return defaultEbsVolumeSizeInGb(Output.of(defaultEbsVolumeSizeInGb));
        }

        /**
         * @param maximumEbsVolumeSizeInGb The maximum size of the EBS storage volume for a private space.
         * 
         * @return builder
         * 
         */
        public Builder maximumEbsVolumeSizeInGb(Output<Integer> maximumEbsVolumeSizeInGb) {
            $.maximumEbsVolumeSizeInGb = maximumEbsVolumeSizeInGb;
            return this;
        }

        /**
         * @param maximumEbsVolumeSizeInGb The maximum size of the EBS storage volume for a private space.
         * 
         * @return builder
         * 
         */
        public Builder maximumEbsVolumeSizeInGb(Integer maximumEbsVolumeSizeInGb) {
            return maximumEbsVolumeSizeInGb(Output.of(maximumEbsVolumeSizeInGb));
        }

        public UserProfileUserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsArgs build() {
            if ($.defaultEbsVolumeSizeInGb == null) {
                throw new MissingRequiredPropertyException("UserProfileUserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsArgs", "defaultEbsVolumeSizeInGb");
            }
            if ($.maximumEbsVolumeSizeInGb == null) {
                throw new MissingRequiredPropertyException("UserProfileUserSettingsSpaceStorageSettingsDefaultEbsStorageSettingsArgs", "maximumEbsVolumeSizeInGb");
            }
            return $;
        }
    }

}
