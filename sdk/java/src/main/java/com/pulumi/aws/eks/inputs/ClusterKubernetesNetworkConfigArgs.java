// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.eks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterKubernetesNetworkConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterKubernetesNetworkConfigArgs Empty = new ClusterKubernetesNetworkConfigArgs();

    /**
     * The IP family used to assign Kubernetes pod and service addresses. Valid values are `ipv4` (default) and `ipv6`. You can only specify an IP family when you create a cluster, changing this value will force a new cluster to be created.
     * 
     */
    @Import(name="ipFamily")
    private @Nullable Output<String> ipFamily;

    /**
     * @return The IP family used to assign Kubernetes pod and service addresses. Valid values are `ipv4` (default) and `ipv6`. You can only specify an IP family when you create a cluster, changing this value will force a new cluster to be created.
     * 
     */
    public Optional<Output<String>> ipFamily() {
        return Optional.ofNullable(this.ipFamily);
    }

    /**
     * The CIDR block to assign Kubernetes pod and service IP addresses from. If you don&#39;t specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC. You can only specify a custom CIDR block when you create a cluster, changing this value will force a new cluster to be created. The block must meet the following requirements:
     * 
     * * Within one of the following private IP address blocks: 10.0.0.0/8, 172.16.0.0/12, or 192.168.0.0/16.
     * 
     * * Doesn&#39;t overlap with any CIDR block assigned to the VPC that you selected for VPC.
     * 
     * * Between /24 and /12.
     * 
     */
    @Import(name="serviceIpv4Cidr")
    private @Nullable Output<String> serviceIpv4Cidr;

    /**
     * @return The CIDR block to assign Kubernetes pod and service IP addresses from. If you don&#39;t specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC. You can only specify a custom CIDR block when you create a cluster, changing this value will force a new cluster to be created. The block must meet the following requirements:
     * 
     * * Within one of the following private IP address blocks: 10.0.0.0/8, 172.16.0.0/12, or 192.168.0.0/16.
     * 
     * * Doesn&#39;t overlap with any CIDR block assigned to the VPC that you selected for VPC.
     * 
     * * Between /24 and /12.
     * 
     */
    public Optional<Output<String>> serviceIpv4Cidr() {
        return Optional.ofNullable(this.serviceIpv4Cidr);
    }

    @Import(name="serviceIpv6Cidr")
    private @Nullable Output<String> serviceIpv6Cidr;

    public Optional<Output<String>> serviceIpv6Cidr() {
        return Optional.ofNullable(this.serviceIpv6Cidr);
    }

    private ClusterKubernetesNetworkConfigArgs() {}

    private ClusterKubernetesNetworkConfigArgs(ClusterKubernetesNetworkConfigArgs $) {
        this.ipFamily = $.ipFamily;
        this.serviceIpv4Cidr = $.serviceIpv4Cidr;
        this.serviceIpv6Cidr = $.serviceIpv6Cidr;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterKubernetesNetworkConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterKubernetesNetworkConfigArgs $;

        public Builder() {
            $ = new ClusterKubernetesNetworkConfigArgs();
        }

        public Builder(ClusterKubernetesNetworkConfigArgs defaults) {
            $ = new ClusterKubernetesNetworkConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ipFamily The IP family used to assign Kubernetes pod and service addresses. Valid values are `ipv4` (default) and `ipv6`. You can only specify an IP family when you create a cluster, changing this value will force a new cluster to be created.
         * 
         * @return builder
         * 
         */
        public Builder ipFamily(@Nullable Output<String> ipFamily) {
            $.ipFamily = ipFamily;
            return this;
        }

        /**
         * @param ipFamily The IP family used to assign Kubernetes pod and service addresses. Valid values are `ipv4` (default) and `ipv6`. You can only specify an IP family when you create a cluster, changing this value will force a new cluster to be created.
         * 
         * @return builder
         * 
         */
        public Builder ipFamily(String ipFamily) {
            return ipFamily(Output.of(ipFamily));
        }

        /**
         * @param serviceIpv4Cidr The CIDR block to assign Kubernetes pod and service IP addresses from. If you don&#39;t specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC. You can only specify a custom CIDR block when you create a cluster, changing this value will force a new cluster to be created. The block must meet the following requirements:
         * 
         * * Within one of the following private IP address blocks: 10.0.0.0/8, 172.16.0.0/12, or 192.168.0.0/16.
         * 
         * * Doesn&#39;t overlap with any CIDR block assigned to the VPC that you selected for VPC.
         * 
         * * Between /24 and /12.
         * 
         * @return builder
         * 
         */
        public Builder serviceIpv4Cidr(@Nullable Output<String> serviceIpv4Cidr) {
            $.serviceIpv4Cidr = serviceIpv4Cidr;
            return this;
        }

        /**
         * @param serviceIpv4Cidr The CIDR block to assign Kubernetes pod and service IP addresses from. If you don&#39;t specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC. You can only specify a custom CIDR block when you create a cluster, changing this value will force a new cluster to be created. The block must meet the following requirements:
         * 
         * * Within one of the following private IP address blocks: 10.0.0.0/8, 172.16.0.0/12, or 192.168.0.0/16.
         * 
         * * Doesn&#39;t overlap with any CIDR block assigned to the VPC that you selected for VPC.
         * 
         * * Between /24 and /12.
         * 
         * @return builder
         * 
         */
        public Builder serviceIpv4Cidr(String serviceIpv4Cidr) {
            return serviceIpv4Cidr(Output.of(serviceIpv4Cidr));
        }

        public Builder serviceIpv6Cidr(@Nullable Output<String> serviceIpv6Cidr) {
            $.serviceIpv6Cidr = serviceIpv6Cidr;
            return this;
        }

        public Builder serviceIpv6Cidr(String serviceIpv6Cidr) {
            return serviceIpv6Cidr(Output.of(serviceIpv6Cidr));
        }

        public ClusterKubernetesNetworkConfigArgs build() {
            return $;
        }
    }

}
