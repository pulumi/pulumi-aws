// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.networkfirewall;

import com.pulumi.aws.networkfirewall.inputs.TlsInspectionConfigurationEncryptionConfigurationArgs;
import com.pulumi.aws.networkfirewall.inputs.TlsInspectionConfigurationTimeoutsArgs;
import com.pulumi.aws.networkfirewall.inputs.TlsInspectionConfigurationTlsInspectionConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TlsInspectionConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final TlsInspectionConfigurationArgs Empty = new TlsInspectionConfigurationArgs();

    /**
     * Description of the TLS inspection configuration.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the TLS inspection configuration.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Encryption configuration block. Detailed below.
     * 
     */
    @Import(name="encryptionConfigurations")
    private @Nullable Output<List<TlsInspectionConfigurationEncryptionConfigurationArgs>> encryptionConfigurations;

    /**
     * @return Encryption configuration block. Detailed below.
     * 
     */
    public Optional<Output<List<TlsInspectionConfigurationEncryptionConfigurationArgs>>> encryptionConfigurations() {
        return Optional.ofNullable(this.encryptionConfigurations);
    }

    /**
     * Descriptive name of the TLS inspection configuration.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Descriptive name of the TLS inspection configuration.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="timeouts")
    private @Nullable Output<TlsInspectionConfigurationTimeoutsArgs> timeouts;

    public Optional<Output<TlsInspectionConfigurationTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    /**
     * TLS inspection configuration block. Detailed below.
     * 
     * The following arguments are optional:
     * 
     */
    @Import(name="tlsInspectionConfiguration")
    private @Nullable Output<TlsInspectionConfigurationTlsInspectionConfigurationArgs> tlsInspectionConfiguration;

    /**
     * @return TLS inspection configuration block. Detailed below.
     * 
     * The following arguments are optional:
     * 
     */
    public Optional<Output<TlsInspectionConfigurationTlsInspectionConfigurationArgs>> tlsInspectionConfiguration() {
        return Optional.ofNullable(this.tlsInspectionConfiguration);
    }

    private TlsInspectionConfigurationArgs() {}

    private TlsInspectionConfigurationArgs(TlsInspectionConfigurationArgs $) {
        this.description = $.description;
        this.encryptionConfigurations = $.encryptionConfigurations;
        this.name = $.name;
        this.tags = $.tags;
        this.timeouts = $.timeouts;
        this.tlsInspectionConfiguration = $.tlsInspectionConfiguration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TlsInspectionConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TlsInspectionConfigurationArgs $;

        public Builder() {
            $ = new TlsInspectionConfigurationArgs();
        }

        public Builder(TlsInspectionConfigurationArgs defaults) {
            $ = new TlsInspectionConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Description of the TLS inspection configuration.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the TLS inspection configuration.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param encryptionConfigurations Encryption configuration block. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder encryptionConfigurations(@Nullable Output<List<TlsInspectionConfigurationEncryptionConfigurationArgs>> encryptionConfigurations) {
            $.encryptionConfigurations = encryptionConfigurations;
            return this;
        }

        /**
         * @param encryptionConfigurations Encryption configuration block. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder encryptionConfigurations(List<TlsInspectionConfigurationEncryptionConfigurationArgs> encryptionConfigurations) {
            return encryptionConfigurations(Output.of(encryptionConfigurations));
        }

        /**
         * @param encryptionConfigurations Encryption configuration block. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder encryptionConfigurations(TlsInspectionConfigurationEncryptionConfigurationArgs... encryptionConfigurations) {
            return encryptionConfigurations(List.of(encryptionConfigurations));
        }

        /**
         * @param name Descriptive name of the TLS inspection configuration.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Descriptive name of the TLS inspection configuration.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder timeouts(@Nullable Output<TlsInspectionConfigurationTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(TlsInspectionConfigurationTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        /**
         * @param tlsInspectionConfiguration TLS inspection configuration block. Detailed below.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder tlsInspectionConfiguration(@Nullable Output<TlsInspectionConfigurationTlsInspectionConfigurationArgs> tlsInspectionConfiguration) {
            $.tlsInspectionConfiguration = tlsInspectionConfiguration;
            return this;
        }

        /**
         * @param tlsInspectionConfiguration TLS inspection configuration block. Detailed below.
         * 
         * The following arguments are optional:
         * 
         * @return builder
         * 
         */
        public Builder tlsInspectionConfiguration(TlsInspectionConfigurationTlsInspectionConfigurationArgs tlsInspectionConfiguration) {
            return tlsInspectionConfiguration(Output.of(tlsInspectionConfiguration));
        }

        public TlsInspectionConfigurationArgs build() {
            return $;
        }
    }

}
