// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.route53;

import com.pulumi.aws.route53.inputs.ProfilesResourceAssociationTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProfilesResourceAssociationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProfilesResourceAssociationArgs Empty = new ProfilesResourceAssociationArgs();

    /**
     * Name of the Profile Resource Association.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the Profile Resource Association.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * ID of the profile associated with the VPC.
     * 
     */
    @Import(name="profileId", required=true)
    private Output<String> profileId;

    /**
     * @return ID of the profile associated with the VPC.
     * 
     */
    public Output<String> profileId() {
        return this.profileId;
    }

    /**
     * Resource ID of the resource to be associated with the profile.
     * 
     */
    @Import(name="resourceArn", required=true)
    private Output<String> resourceArn;

    /**
     * @return Resource ID of the resource to be associated with the profile.
     * 
     */
    public Output<String> resourceArn() {
        return this.resourceArn;
    }

    /**
     * Resource properties for the resource to be associated with the profile.
     * 
     */
    @Import(name="resourceProperties")
    private @Nullable Output<String> resourceProperties;

    /**
     * @return Resource properties for the resource to be associated with the profile.
     * 
     */
    public Optional<Output<String>> resourceProperties() {
        return Optional.ofNullable(this.resourceProperties);
    }

    @Import(name="timeouts")
    private @Nullable Output<ProfilesResourceAssociationTimeoutsArgs> timeouts;

    public Optional<Output<ProfilesResourceAssociationTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private ProfilesResourceAssociationArgs() {}

    private ProfilesResourceAssociationArgs(ProfilesResourceAssociationArgs $) {
        this.name = $.name;
        this.profileId = $.profileId;
        this.resourceArn = $.resourceArn;
        this.resourceProperties = $.resourceProperties;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProfilesResourceAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProfilesResourceAssociationArgs $;

        public Builder() {
            $ = new ProfilesResourceAssociationArgs();
        }

        public Builder(ProfilesResourceAssociationArgs defaults) {
            $ = new ProfilesResourceAssociationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Name of the Profile Resource Association.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the Profile Resource Association.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param profileId ID of the profile associated with the VPC.
         * 
         * @return builder
         * 
         */
        public Builder profileId(Output<String> profileId) {
            $.profileId = profileId;
            return this;
        }

        /**
         * @param profileId ID of the profile associated with the VPC.
         * 
         * @return builder
         * 
         */
        public Builder profileId(String profileId) {
            return profileId(Output.of(profileId));
        }

        /**
         * @param resourceArn Resource ID of the resource to be associated with the profile.
         * 
         * @return builder
         * 
         */
        public Builder resourceArn(Output<String> resourceArn) {
            $.resourceArn = resourceArn;
            return this;
        }

        /**
         * @param resourceArn Resource ID of the resource to be associated with the profile.
         * 
         * @return builder
         * 
         */
        public Builder resourceArn(String resourceArn) {
            return resourceArn(Output.of(resourceArn));
        }

        /**
         * @param resourceProperties Resource properties for the resource to be associated with the profile.
         * 
         * @return builder
         * 
         */
        public Builder resourceProperties(@Nullable Output<String> resourceProperties) {
            $.resourceProperties = resourceProperties;
            return this;
        }

        /**
         * @param resourceProperties Resource properties for the resource to be associated with the profile.
         * 
         * @return builder
         * 
         */
        public Builder resourceProperties(String resourceProperties) {
            return resourceProperties(Output.of(resourceProperties));
        }

        public Builder timeouts(@Nullable Output<ProfilesResourceAssociationTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(ProfilesResourceAssociationTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public ProfilesResourceAssociationArgs build() {
            if ($.profileId == null) {
                throw new MissingRequiredPropertyException("ProfilesResourceAssociationArgs", "profileId");
            }
            if ($.resourceArn == null) {
                throw new MissingRequiredPropertyException("ProfilesResourceAssociationArgs", "resourceArn");
            }
            return $;
        }
    }

}
