// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.outputs;

import com.pulumi.aws.quicksight.outputs.ChartAxisLabelOptions;
import com.pulumi.aws.quicksight.outputs.ColorScale;
import com.pulumi.aws.quicksight.outputs.DataLabelsOptions;
import com.pulumi.aws.quicksight.outputs.LegendOptions;
import com.pulumi.aws.quicksight.outputs.TooltipOptions;
import com.pulumi.aws.quicksight.outputs.VisualsTreeMapVisualChartConfigurationFieldWells;
import com.pulumi.aws.quicksight.outputs.VisualsTreeMapVisualChartConfigurationSortConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VisualsTreeMapVisualChartConfiguration {
    private @Nullable ChartAxisLabelOptions colorLabelOptions;
    private @Nullable ColorScale colorScale;
    private @Nullable DataLabelsOptions dataLabels;
    private @Nullable VisualsTreeMapVisualChartConfigurationFieldWells fieldWells;
    private @Nullable ChartAxisLabelOptions groupLabelOptions;
    private @Nullable LegendOptions legend;
    private @Nullable ChartAxisLabelOptions sizeLabelOptions;
    private @Nullable VisualsTreeMapVisualChartConfigurationSortConfiguration sortConfiguration;
    private @Nullable TooltipOptions tooltip;

    private VisualsTreeMapVisualChartConfiguration() {}
    public Optional<ChartAxisLabelOptions> colorLabelOptions() {
        return Optional.ofNullable(this.colorLabelOptions);
    }
    public Optional<ColorScale> colorScale() {
        return Optional.ofNullable(this.colorScale);
    }
    public Optional<DataLabelsOptions> dataLabels() {
        return Optional.ofNullable(this.dataLabels);
    }
    public Optional<VisualsTreeMapVisualChartConfigurationFieldWells> fieldWells() {
        return Optional.ofNullable(this.fieldWells);
    }
    public Optional<ChartAxisLabelOptions> groupLabelOptions() {
        return Optional.ofNullable(this.groupLabelOptions);
    }
    public Optional<LegendOptions> legend() {
        return Optional.ofNullable(this.legend);
    }
    public Optional<ChartAxisLabelOptions> sizeLabelOptions() {
        return Optional.ofNullable(this.sizeLabelOptions);
    }
    public Optional<VisualsTreeMapVisualChartConfigurationSortConfiguration> sortConfiguration() {
        return Optional.ofNullable(this.sortConfiguration);
    }
    public Optional<TooltipOptions> tooltip() {
        return Optional.ofNullable(this.tooltip);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VisualsTreeMapVisualChartConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ChartAxisLabelOptions colorLabelOptions;
        private @Nullable ColorScale colorScale;
        private @Nullable DataLabelsOptions dataLabels;
        private @Nullable VisualsTreeMapVisualChartConfigurationFieldWells fieldWells;
        private @Nullable ChartAxisLabelOptions groupLabelOptions;
        private @Nullable LegendOptions legend;
        private @Nullable ChartAxisLabelOptions sizeLabelOptions;
        private @Nullable VisualsTreeMapVisualChartConfigurationSortConfiguration sortConfiguration;
        private @Nullable TooltipOptions tooltip;
        public Builder() {}
        public Builder(VisualsTreeMapVisualChartConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.colorLabelOptions = defaults.colorLabelOptions;
    	      this.colorScale = defaults.colorScale;
    	      this.dataLabels = defaults.dataLabels;
    	      this.fieldWells = defaults.fieldWells;
    	      this.groupLabelOptions = defaults.groupLabelOptions;
    	      this.legend = defaults.legend;
    	      this.sizeLabelOptions = defaults.sizeLabelOptions;
    	      this.sortConfiguration = defaults.sortConfiguration;
    	      this.tooltip = defaults.tooltip;
        }

        @CustomType.Setter
        public Builder colorLabelOptions(@Nullable ChartAxisLabelOptions colorLabelOptions) {

            this.colorLabelOptions = colorLabelOptions;
            return this;
        }
        @CustomType.Setter
        public Builder colorScale(@Nullable ColorScale colorScale) {

            this.colorScale = colorScale;
            return this;
        }
        @CustomType.Setter
        public Builder dataLabels(@Nullable DataLabelsOptions dataLabels) {

            this.dataLabels = dataLabels;
            return this;
        }
        @CustomType.Setter
        public Builder fieldWells(@Nullable VisualsTreeMapVisualChartConfigurationFieldWells fieldWells) {

            this.fieldWells = fieldWells;
            return this;
        }
        @CustomType.Setter
        public Builder groupLabelOptions(@Nullable ChartAxisLabelOptions groupLabelOptions) {

            this.groupLabelOptions = groupLabelOptions;
            return this;
        }
        @CustomType.Setter
        public Builder legend(@Nullable LegendOptions legend) {

            this.legend = legend;
            return this;
        }
        @CustomType.Setter
        public Builder sizeLabelOptions(@Nullable ChartAxisLabelOptions sizeLabelOptions) {

            this.sizeLabelOptions = sizeLabelOptions;
            return this;
        }
        @CustomType.Setter
        public Builder sortConfiguration(@Nullable VisualsTreeMapVisualChartConfigurationSortConfiguration sortConfiguration) {

            this.sortConfiguration = sortConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder tooltip(@Nullable TooltipOptions tooltip) {

            this.tooltip = tooltip;
            return this;
        }
        public VisualsTreeMapVisualChartConfiguration build() {
            final var _resultValue = new VisualsTreeMapVisualChartConfiguration();
            _resultValue.colorLabelOptions = colorLabelOptions;
            _resultValue.colorScale = colorScale;
            _resultValue.dataLabels = dataLabels;
            _resultValue.fieldWells = fieldWells;
            _resultValue.groupLabelOptions = groupLabelOptions;
            _resultValue.legend = legend;
            _resultValue.sizeLabelOptions = sizeLabelOptions;
            _resultValue.sortConfiguration = sortConfiguration;
            _resultValue.tooltip = tooltip;
            return _resultValue;
        }
    }
}
