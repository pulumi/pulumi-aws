// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.resourceexplorer.outputs;

import com.pulumi.aws.resourceexplorer.outputs.SearchResource;
import com.pulumi.aws.resourceexplorer.outputs.SearchResourceCount;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SearchResult {
    /**
     * @return Query String.
     * 
     */
    private String id;
    private String queryString;
    /**
     * @return Number of resources that match the query. See `resource_count` below.
     * 
     */
    private @Nullable List<SearchResourceCount> resourceCounts;
    /**
     * @return List of structures that describe the resources that match the query. See `resources` below.
     * 
     */
    private @Nullable List<SearchResource> resources;
    private @Nullable String viewArn;

    private SearchResult() {}
    /**
     * @return Query String.
     * 
     */
    public String id() {
        return this.id;
    }
    public String queryString() {
        return this.queryString;
    }
    /**
     * @return Number of resources that match the query. See `resource_count` below.
     * 
     */
    public List<SearchResourceCount> resourceCounts() {
        return this.resourceCounts == null ? List.of() : this.resourceCounts;
    }
    /**
     * @return List of structures that describe the resources that match the query. See `resources` below.
     * 
     */
    public List<SearchResource> resources() {
        return this.resources == null ? List.of() : this.resources;
    }
    public Optional<String> viewArn() {
        return Optional.ofNullable(this.viewArn);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SearchResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String queryString;
        private @Nullable List<SearchResourceCount> resourceCounts;
        private @Nullable List<SearchResource> resources;
        private @Nullable String viewArn;
        public Builder() {}
        public Builder(SearchResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.queryString = defaults.queryString;
    	      this.resourceCounts = defaults.resourceCounts;
    	      this.resources = defaults.resources;
    	      this.viewArn = defaults.viewArn;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("SearchResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder queryString(String queryString) {
            if (queryString == null) {
              throw new MissingRequiredPropertyException("SearchResult", "queryString");
            }
            this.queryString = queryString;
            return this;
        }
        @CustomType.Setter
        public Builder resourceCounts(@Nullable List<SearchResourceCount> resourceCounts) {

            this.resourceCounts = resourceCounts;
            return this;
        }
        public Builder resourceCounts(SearchResourceCount... resourceCounts) {
            return resourceCounts(List.of(resourceCounts));
        }
        @CustomType.Setter
        public Builder resources(@Nullable List<SearchResource> resources) {

            this.resources = resources;
            return this;
        }
        public Builder resources(SearchResource... resources) {
            return resources(List.of(resources));
        }
        @CustomType.Setter
        public Builder viewArn(@Nullable String viewArn) {

            this.viewArn = viewArn;
            return this;
        }
        public SearchResult build() {
            final var _resultValue = new SearchResult();
            _resultValue.id = id;
            _resultValue.queryString = queryString;
            _resultValue.resourceCounts = resourceCounts;
            _resultValue.resources = resources;
            _resultValue.viewArn = viewArn;
            return _resultValue;
        }
    }
}
