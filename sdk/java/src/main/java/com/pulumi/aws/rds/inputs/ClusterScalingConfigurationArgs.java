// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.rds.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterScalingConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterScalingConfigurationArgs Empty = new ClusterScalingConfigurationArgs();

    @Import(name="autoPause")
    private @Nullable Output<Boolean> autoPause;

    public Optional<Output<Boolean>> autoPause() {
        return Optional.ofNullable(this.autoPause);
    }

    @Import(name="maxCapacity")
    private @Nullable Output<Integer> maxCapacity;

    public Optional<Output<Integer>> maxCapacity() {
        return Optional.ofNullable(this.maxCapacity);
    }

    @Import(name="minCapacity")
    private @Nullable Output<Integer> minCapacity;

    public Optional<Output<Integer>> minCapacity() {
        return Optional.ofNullable(this.minCapacity);
    }

    @Import(name="secondsUntilAutoPause")
    private @Nullable Output<Integer> secondsUntilAutoPause;

    public Optional<Output<Integer>> secondsUntilAutoPause() {
        return Optional.ofNullable(this.secondsUntilAutoPause);
    }

    @Import(name="timeoutAction")
    private @Nullable Output<String> timeoutAction;

    public Optional<Output<String>> timeoutAction() {
        return Optional.ofNullable(this.timeoutAction);
    }

    private ClusterScalingConfigurationArgs() {}

    private ClusterScalingConfigurationArgs(ClusterScalingConfigurationArgs $) {
        this.autoPause = $.autoPause;
        this.maxCapacity = $.maxCapacity;
        this.minCapacity = $.minCapacity;
        this.secondsUntilAutoPause = $.secondsUntilAutoPause;
        this.timeoutAction = $.timeoutAction;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterScalingConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterScalingConfigurationArgs $;

        public Builder() {
            $ = new ClusterScalingConfigurationArgs();
        }

        public Builder(ClusterScalingConfigurationArgs defaults) {
            $ = new ClusterScalingConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder autoPause(@Nullable Output<Boolean> autoPause) {
            $.autoPause = autoPause;
            return this;
        }

        public Builder autoPause(Boolean autoPause) {
            return autoPause(Output.of(autoPause));
        }

        public Builder maxCapacity(@Nullable Output<Integer> maxCapacity) {
            $.maxCapacity = maxCapacity;
            return this;
        }

        public Builder maxCapacity(Integer maxCapacity) {
            return maxCapacity(Output.of(maxCapacity));
        }

        public Builder minCapacity(@Nullable Output<Integer> minCapacity) {
            $.minCapacity = minCapacity;
            return this;
        }

        public Builder minCapacity(Integer minCapacity) {
            return minCapacity(Output.of(minCapacity));
        }

        public Builder secondsUntilAutoPause(@Nullable Output<Integer> secondsUntilAutoPause) {
            $.secondsUntilAutoPause = secondsUntilAutoPause;
            return this;
        }

        public Builder secondsUntilAutoPause(Integer secondsUntilAutoPause) {
            return secondsUntilAutoPause(Output.of(secondsUntilAutoPause));
        }

        public Builder timeoutAction(@Nullable Output<String> timeoutAction) {
            $.timeoutAction = timeoutAction;
            return this;
        }

        public Builder timeoutAction(String timeoutAction) {
            return timeoutAction(Output.of(timeoutAction));
        }

        public ClusterScalingConfigurationArgs build() {
            return $;
        }
    }

}
