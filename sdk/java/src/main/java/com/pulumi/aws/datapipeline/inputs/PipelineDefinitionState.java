// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.datapipeline.inputs;

import com.pulumi.aws.datapipeline.inputs.PipelineDefinitionParameterObjectArgs;
import com.pulumi.aws.datapipeline.inputs.PipelineDefinitionParameterValueArgs;
import com.pulumi.aws.datapipeline.inputs.PipelineDefinitionPipelineObjectArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipelineDefinitionState extends com.pulumi.resources.ResourceArgs {

    public static final PipelineDefinitionState Empty = new PipelineDefinitionState();

    /**
     * Configuration block for the parameter objects used in the pipeline definition. See below
     * 
     */
    @Import(name="parameterObjects")
    private @Nullable Output<List<PipelineDefinitionParameterObjectArgs>> parameterObjects;

    /**
     * @return Configuration block for the parameter objects used in the pipeline definition. See below
     * 
     */
    public Optional<Output<List<PipelineDefinitionParameterObjectArgs>>> parameterObjects() {
        return Optional.ofNullable(this.parameterObjects);
    }

    /**
     * Configuration block for the parameter values used in the pipeline definition. See below
     * 
     */
    @Import(name="parameterValues")
    private @Nullable Output<List<PipelineDefinitionParameterValueArgs>> parameterValues;

    /**
     * @return Configuration block for the parameter values used in the pipeline definition. See below
     * 
     */
    public Optional<Output<List<PipelineDefinitionParameterValueArgs>>> parameterValues() {
        return Optional.ofNullable(this.parameterValues);
    }

    /**
     * ID of the pipeline.
     * 
     */
    @Import(name="pipelineId")
    private @Nullable Output<String> pipelineId;

    /**
     * @return ID of the pipeline.
     * 
     */
    public Optional<Output<String>> pipelineId() {
        return Optional.ofNullable(this.pipelineId);
    }

    /**
     * Configuration block for the objects that define the pipeline. See below
     * 
     */
    @Import(name="pipelineObjects")
    private @Nullable Output<List<PipelineDefinitionPipelineObjectArgs>> pipelineObjects;

    /**
     * @return Configuration block for the objects that define the pipeline. See below
     * 
     */
    public Optional<Output<List<PipelineDefinitionPipelineObjectArgs>>> pipelineObjects() {
        return Optional.ofNullable(this.pipelineObjects);
    }

    private PipelineDefinitionState() {}

    private PipelineDefinitionState(PipelineDefinitionState $) {
        this.parameterObjects = $.parameterObjects;
        this.parameterValues = $.parameterValues;
        this.pipelineId = $.pipelineId;
        this.pipelineObjects = $.pipelineObjects;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineDefinitionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineDefinitionState $;

        public Builder() {
            $ = new PipelineDefinitionState();
        }

        public Builder(PipelineDefinitionState defaults) {
            $ = new PipelineDefinitionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param parameterObjects Configuration block for the parameter objects used in the pipeline definition. See below
         * 
         * @return builder
         * 
         */
        public Builder parameterObjects(@Nullable Output<List<PipelineDefinitionParameterObjectArgs>> parameterObjects) {
            $.parameterObjects = parameterObjects;
            return this;
        }

        /**
         * @param parameterObjects Configuration block for the parameter objects used in the pipeline definition. See below
         * 
         * @return builder
         * 
         */
        public Builder parameterObjects(List<PipelineDefinitionParameterObjectArgs> parameterObjects) {
            return parameterObjects(Output.of(parameterObjects));
        }

        /**
         * @param parameterObjects Configuration block for the parameter objects used in the pipeline definition. See below
         * 
         * @return builder
         * 
         */
        public Builder parameterObjects(PipelineDefinitionParameterObjectArgs... parameterObjects) {
            return parameterObjects(List.of(parameterObjects));
        }

        /**
         * @param parameterValues Configuration block for the parameter values used in the pipeline definition. See below
         * 
         * @return builder
         * 
         */
        public Builder parameterValues(@Nullable Output<List<PipelineDefinitionParameterValueArgs>> parameterValues) {
            $.parameterValues = parameterValues;
            return this;
        }

        /**
         * @param parameterValues Configuration block for the parameter values used in the pipeline definition. See below
         * 
         * @return builder
         * 
         */
        public Builder parameterValues(List<PipelineDefinitionParameterValueArgs> parameterValues) {
            return parameterValues(Output.of(parameterValues));
        }

        /**
         * @param parameterValues Configuration block for the parameter values used in the pipeline definition. See below
         * 
         * @return builder
         * 
         */
        public Builder parameterValues(PipelineDefinitionParameterValueArgs... parameterValues) {
            return parameterValues(List.of(parameterValues));
        }

        /**
         * @param pipelineId ID of the pipeline.
         * 
         * @return builder
         * 
         */
        public Builder pipelineId(@Nullable Output<String> pipelineId) {
            $.pipelineId = pipelineId;
            return this;
        }

        /**
         * @param pipelineId ID of the pipeline.
         * 
         * @return builder
         * 
         */
        public Builder pipelineId(String pipelineId) {
            return pipelineId(Output.of(pipelineId));
        }

        /**
         * @param pipelineObjects Configuration block for the objects that define the pipeline. See below
         * 
         * @return builder
         * 
         */
        public Builder pipelineObjects(@Nullable Output<List<PipelineDefinitionPipelineObjectArgs>> pipelineObjects) {
            $.pipelineObjects = pipelineObjects;
            return this;
        }

        /**
         * @param pipelineObjects Configuration block for the objects that define the pipeline. See below
         * 
         * @return builder
         * 
         */
        public Builder pipelineObjects(List<PipelineDefinitionPipelineObjectArgs> pipelineObjects) {
            return pipelineObjects(Output.of(pipelineObjects));
        }

        /**
         * @param pipelineObjects Configuration block for the objects that define the pipeline. See below
         * 
         * @return builder
         * 
         */
        public Builder pipelineObjects(PipelineDefinitionPipelineObjectArgs... pipelineObjects) {
            return pipelineObjects(List.of(pipelineObjects));
        }

        public PipelineDefinitionState build() {
            return $;
        }
    }

}
