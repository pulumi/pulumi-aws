// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.pipes.inputs;

import com.pulumi.aws.pipes.inputs.PipeSourceParametersActivemqBrokerParametersArgs;
import com.pulumi.aws.pipes.inputs.PipeSourceParametersDynamodbStreamParametersArgs;
import com.pulumi.aws.pipes.inputs.PipeSourceParametersFilterCriteriaArgs;
import com.pulumi.aws.pipes.inputs.PipeSourceParametersKinesisStreamParametersArgs;
import com.pulumi.aws.pipes.inputs.PipeSourceParametersManagedStreamingKafkaParametersArgs;
import com.pulumi.aws.pipes.inputs.PipeSourceParametersRabbitmqBrokerParametersArgs;
import com.pulumi.aws.pipes.inputs.PipeSourceParametersSelfManagedKafkaParametersArgs;
import com.pulumi.aws.pipes.inputs.PipeSourceParametersSqsQueueParametersArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipeSourceParametersArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipeSourceParametersArgs Empty = new PipeSourceParametersArgs();

    /**
     * The parameters for using an Active MQ broker as a source. Detailed below.
     * 
     */
    @Import(name="activemqBrokerParameters")
    private @Nullable Output<PipeSourceParametersActivemqBrokerParametersArgs> activemqBrokerParameters;

    /**
     * @return The parameters for using an Active MQ broker as a source. Detailed below.
     * 
     */
    public Optional<Output<PipeSourceParametersActivemqBrokerParametersArgs>> activemqBrokerParameters() {
        return Optional.ofNullable(this.activemqBrokerParameters);
    }

    /**
     * The parameters for using a DynamoDB stream as a source.  Detailed below.
     * 
     */
    @Import(name="dynamodbStreamParameters")
    private @Nullable Output<PipeSourceParametersDynamodbStreamParametersArgs> dynamodbStreamParameters;

    /**
     * @return The parameters for using a DynamoDB stream as a source.  Detailed below.
     * 
     */
    public Optional<Output<PipeSourceParametersDynamodbStreamParametersArgs>> dynamodbStreamParameters() {
        return Optional.ofNullable(this.dynamodbStreamParameters);
    }

    /**
     * The collection of event patterns used to [filter events](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-pipes-event-filtering.html). Detailed below.
     * 
     */
    @Import(name="filterCriteria")
    private @Nullable Output<PipeSourceParametersFilterCriteriaArgs> filterCriteria;

    /**
     * @return The collection of event patterns used to [filter events](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-pipes-event-filtering.html). Detailed below.
     * 
     */
    public Optional<Output<PipeSourceParametersFilterCriteriaArgs>> filterCriteria() {
        return Optional.ofNullable(this.filterCriteria);
    }

    /**
     * The parameters for using a Kinesis stream as a source. Detailed below.
     * 
     */
    @Import(name="kinesisStreamParameters")
    private @Nullable Output<PipeSourceParametersKinesisStreamParametersArgs> kinesisStreamParameters;

    /**
     * @return The parameters for using a Kinesis stream as a source. Detailed below.
     * 
     */
    public Optional<Output<PipeSourceParametersKinesisStreamParametersArgs>> kinesisStreamParameters() {
        return Optional.ofNullable(this.kinesisStreamParameters);
    }

    /**
     * The parameters for using an MSK stream as a source. Detailed below.
     * 
     */
    @Import(name="managedStreamingKafkaParameters")
    private @Nullable Output<PipeSourceParametersManagedStreamingKafkaParametersArgs> managedStreamingKafkaParameters;

    /**
     * @return The parameters for using an MSK stream as a source. Detailed below.
     * 
     */
    public Optional<Output<PipeSourceParametersManagedStreamingKafkaParametersArgs>> managedStreamingKafkaParameters() {
        return Optional.ofNullable(this.managedStreamingKafkaParameters);
    }

    /**
     * The parameters for using a Rabbit MQ broker as a source. Detailed below.
     * 
     */
    @Import(name="rabbitmqBrokerParameters")
    private @Nullable Output<PipeSourceParametersRabbitmqBrokerParametersArgs> rabbitmqBrokerParameters;

    /**
     * @return The parameters for using a Rabbit MQ broker as a source. Detailed below.
     * 
     */
    public Optional<Output<PipeSourceParametersRabbitmqBrokerParametersArgs>> rabbitmqBrokerParameters() {
        return Optional.ofNullable(this.rabbitmqBrokerParameters);
    }

    /**
     * The parameters for using a self-managed Apache Kafka stream as a source. Detailed below.
     * 
     */
    @Import(name="selfManagedKafkaParameters")
    private @Nullable Output<PipeSourceParametersSelfManagedKafkaParametersArgs> selfManagedKafkaParameters;

    /**
     * @return The parameters for using a self-managed Apache Kafka stream as a source. Detailed below.
     * 
     */
    public Optional<Output<PipeSourceParametersSelfManagedKafkaParametersArgs>> selfManagedKafkaParameters() {
        return Optional.ofNullable(this.selfManagedKafkaParameters);
    }

    /**
     * The parameters for using a Amazon SQS stream as a source. Detailed below.
     * 
     */
    @Import(name="sqsQueueParameters")
    private @Nullable Output<PipeSourceParametersSqsQueueParametersArgs> sqsQueueParameters;

    /**
     * @return The parameters for using a Amazon SQS stream as a source. Detailed below.
     * 
     */
    public Optional<Output<PipeSourceParametersSqsQueueParametersArgs>> sqsQueueParameters() {
        return Optional.ofNullable(this.sqsQueueParameters);
    }

    private PipeSourceParametersArgs() {}

    private PipeSourceParametersArgs(PipeSourceParametersArgs $) {
        this.activemqBrokerParameters = $.activemqBrokerParameters;
        this.dynamodbStreamParameters = $.dynamodbStreamParameters;
        this.filterCriteria = $.filterCriteria;
        this.kinesisStreamParameters = $.kinesisStreamParameters;
        this.managedStreamingKafkaParameters = $.managedStreamingKafkaParameters;
        this.rabbitmqBrokerParameters = $.rabbitmqBrokerParameters;
        this.selfManagedKafkaParameters = $.selfManagedKafkaParameters;
        this.sqsQueueParameters = $.sqsQueueParameters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipeSourceParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipeSourceParametersArgs $;

        public Builder() {
            $ = new PipeSourceParametersArgs();
        }

        public Builder(PipeSourceParametersArgs defaults) {
            $ = new PipeSourceParametersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param activemqBrokerParameters The parameters for using an Active MQ broker as a source. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder activemqBrokerParameters(@Nullable Output<PipeSourceParametersActivemqBrokerParametersArgs> activemqBrokerParameters) {
            $.activemqBrokerParameters = activemqBrokerParameters;
            return this;
        }

        /**
         * @param activemqBrokerParameters The parameters for using an Active MQ broker as a source. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder activemqBrokerParameters(PipeSourceParametersActivemqBrokerParametersArgs activemqBrokerParameters) {
            return activemqBrokerParameters(Output.of(activemqBrokerParameters));
        }

        /**
         * @param dynamodbStreamParameters The parameters for using a DynamoDB stream as a source.  Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder dynamodbStreamParameters(@Nullable Output<PipeSourceParametersDynamodbStreamParametersArgs> dynamodbStreamParameters) {
            $.dynamodbStreamParameters = dynamodbStreamParameters;
            return this;
        }

        /**
         * @param dynamodbStreamParameters The parameters for using a DynamoDB stream as a source.  Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder dynamodbStreamParameters(PipeSourceParametersDynamodbStreamParametersArgs dynamodbStreamParameters) {
            return dynamodbStreamParameters(Output.of(dynamodbStreamParameters));
        }

        /**
         * @param filterCriteria The collection of event patterns used to [filter events](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-pipes-event-filtering.html). Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder filterCriteria(@Nullable Output<PipeSourceParametersFilterCriteriaArgs> filterCriteria) {
            $.filterCriteria = filterCriteria;
            return this;
        }

        /**
         * @param filterCriteria The collection of event patterns used to [filter events](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-pipes-event-filtering.html). Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder filterCriteria(PipeSourceParametersFilterCriteriaArgs filterCriteria) {
            return filterCriteria(Output.of(filterCriteria));
        }

        /**
         * @param kinesisStreamParameters The parameters for using a Kinesis stream as a source. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder kinesisStreamParameters(@Nullable Output<PipeSourceParametersKinesisStreamParametersArgs> kinesisStreamParameters) {
            $.kinesisStreamParameters = kinesisStreamParameters;
            return this;
        }

        /**
         * @param kinesisStreamParameters The parameters for using a Kinesis stream as a source. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder kinesisStreamParameters(PipeSourceParametersKinesisStreamParametersArgs kinesisStreamParameters) {
            return kinesisStreamParameters(Output.of(kinesisStreamParameters));
        }

        /**
         * @param managedStreamingKafkaParameters The parameters for using an MSK stream as a source. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder managedStreamingKafkaParameters(@Nullable Output<PipeSourceParametersManagedStreamingKafkaParametersArgs> managedStreamingKafkaParameters) {
            $.managedStreamingKafkaParameters = managedStreamingKafkaParameters;
            return this;
        }

        /**
         * @param managedStreamingKafkaParameters The parameters for using an MSK stream as a source. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder managedStreamingKafkaParameters(PipeSourceParametersManagedStreamingKafkaParametersArgs managedStreamingKafkaParameters) {
            return managedStreamingKafkaParameters(Output.of(managedStreamingKafkaParameters));
        }

        /**
         * @param rabbitmqBrokerParameters The parameters for using a Rabbit MQ broker as a source. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder rabbitmqBrokerParameters(@Nullable Output<PipeSourceParametersRabbitmqBrokerParametersArgs> rabbitmqBrokerParameters) {
            $.rabbitmqBrokerParameters = rabbitmqBrokerParameters;
            return this;
        }

        /**
         * @param rabbitmqBrokerParameters The parameters for using a Rabbit MQ broker as a source. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder rabbitmqBrokerParameters(PipeSourceParametersRabbitmqBrokerParametersArgs rabbitmqBrokerParameters) {
            return rabbitmqBrokerParameters(Output.of(rabbitmqBrokerParameters));
        }

        /**
         * @param selfManagedKafkaParameters The parameters for using a self-managed Apache Kafka stream as a source. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder selfManagedKafkaParameters(@Nullable Output<PipeSourceParametersSelfManagedKafkaParametersArgs> selfManagedKafkaParameters) {
            $.selfManagedKafkaParameters = selfManagedKafkaParameters;
            return this;
        }

        /**
         * @param selfManagedKafkaParameters The parameters for using a self-managed Apache Kafka stream as a source. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder selfManagedKafkaParameters(PipeSourceParametersSelfManagedKafkaParametersArgs selfManagedKafkaParameters) {
            return selfManagedKafkaParameters(Output.of(selfManagedKafkaParameters));
        }

        /**
         * @param sqsQueueParameters The parameters for using a Amazon SQS stream as a source. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder sqsQueueParameters(@Nullable Output<PipeSourceParametersSqsQueueParametersArgs> sqsQueueParameters) {
            $.sqsQueueParameters = sqsQueueParameters;
            return this;
        }

        /**
         * @param sqsQueueParameters The parameters for using a Amazon SQS stream as a source. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder sqsQueueParameters(PipeSourceParametersSqsQueueParametersArgs sqsQueueParameters) {
            return sqsQueueParameters(Output.of(sqsQueueParameters));
        }

        public PipeSourceParametersArgs build() {
            return $;
        }
    }

}
